<Type Name="SqlWorkflowPersistenceService" FullName="System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d7c1655d497cdd8f5fbb7b8f711b53057404760c" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51894448" /></Metadata><TypeSignature Language="C#" Value="public class SqlWorkflowPersistenceService : System.Workflow.Runtime.Hosting.WorkflowPersistenceService, System.Workflow.Runtime.IPendingWork" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlWorkflowPersistenceService extends System.Workflow.Runtime.Hosting.WorkflowPersistenceService implements class System.Workflow.Runtime.IPendingWork" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlWorkflowPersistenceService&#xA;Inherits WorkflowPersistenceService&#xA;Implements IPendingWork" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlWorkflowPersistenceService : System::Workflow::Runtime::Hosting::WorkflowPersistenceService, System::Workflow::Runtime::IPendingWork" />
  <TypeSignature Language="F#" Value="type SqlWorkflowPersistenceService = class&#xA;    inherit WorkflowPersistenceService&#xA;    interface IPendingWork" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.Runtime.Hosting.WorkflowPersistenceService</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Workflow.Runtime.IPendingWork</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa um serviço de persistência que usa um banco de dados SQL para armazenar informações de estado do fluxo de trabalho.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 O <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> classe representa um serviço de persistência totalmente funcional. Você pode usar esse serviço out-of-box para persistir e recuperar informações de estado de fluxo de trabalho sobre uma instância de fluxo de trabalho quando for solicitado pelo mecanismo de tempo de execução de fluxo de trabalho.  
  
 O <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> participa na transação de fluxo de trabalho em lotes a funcionalidade fornecida pelo <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService>. Ou seja, ele adiciona os objetos que representam pendente grava no banco de dados SQL para o <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A> e implementa o <xref:System.Workflow.Runtime.IPendingWork> interface.  
  
 O <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> oferece suporte ao bloqueio de instâncias de fluxo de trabalho. Esse recurso é usado quando vários tempos de execução do fluxo de trabalho compartilham o mesmo banco de dados. Uma coluna na tabela de banco de dados SQL é usada para marcar uma instância de fluxo de trabalho como bloqueada sempre que ele está sendo usado por um tempo de execução do fluxo de trabalho. O <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> não carrega uma instância de fluxo de trabalho que está marcada como "em uso" pelo tempo de execução de outro. Normalmente esses bloqueios são liberados quando a instância de fluxo de trabalho é mantida, por exemplo, ocioso, após a conclusão, ou no encerramento. Os bloqueios também podem ser liberados automaticamente após um período de inatividade. Esse período de inatividade pode ser definido usando o construtor do <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> classe.  Ele também pode ser definido por meio do arquivo de configuração.  
  
 Para obter mais informações sobre a persistência dos serviços em geral, consulte o <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> classe.  
  
 Instâncias de fluxo de trabalho podem conter temporizadores, por exemplo, se eles tiverem um <xref:System.Workflow.Activities.DelayActivity>. Para fluxos de trabalho que contêm os temporizadores, a <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> registra a hora quando do fluxo de trabalho próxima expiração do temporizador. O <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> periodicamente sonda o banco de dados, procurando os fluxos de trabalho cujos temporizadores expirados. A frequência do intervalo de sondagem pode ser definida usando o <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> construtor ou usando um arquivo de configuração.  
  
> [!NOTE]
>  Ao usar ambos os <xref:System.Workflow.Runtime.Tracking.SqlTrackingService> e o <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> em um aplicativo de fluxo de trabalho, é recomendável usar um banco de dados para persistência e acompanhamento.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlWorkflowPersistenceService (System.Collections.Specialized.NameValueCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Specialized.NameValueCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.#ctor(System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameters As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlWorkflowPersistenceService(System::Collections::Specialized::NameValueCollection ^ parameters);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService : System.Collections.Specialized.NameValueCollection -&gt; System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService" Usage="new System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService parameters" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameters" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="parameters">Um <see cref="T:System.Collections.Specialized.NameValueCollection" /> que contém parâmetros de inicialização.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService" /> usando os parâmetros especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este construtor é chamado quando o mecanismo de tempo de execução do fluxo de trabalho carrega os serviços de um arquivo de configuração do aplicativo. Ele também pode ser programaticamente invocado com o `NameValueCollection` parâmetro. Os parâmetros válidos são `ConnectionString`, `OwnershipTimeoutSeconds`, `UnloadOnIdle`, e `EnableRetries`. Um <xref:System.ArgumentException> será lançada se os parâmetros contêm quaisquer outras chaves.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="parameters" /> contém uma cadeia de conexão de banco de dados inválida.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="parameters" /> é uma referência nula (<see langword="Nothing" /> no Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlWorkflowPersistenceService (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlWorkflowPersistenceService(System::String ^ connectionString);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService : string -&gt; System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService" Usage="new System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService connectionString" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">Uma cadeia de conexão de banco de dados válida.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService" /> usando a cadeia de conexão de banco de dados.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="connectionString" /> é uma referência nula (<see langword="Nothing" /> no Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlWorkflowPersistenceService (string connectionString, bool unloadOnIdle, TimeSpan instanceOwnershipDuration, TimeSpan loadingInterval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, bool unloadOnIdle, valuetype System.TimeSpan instanceOwnershipDuration, valuetype System.TimeSpan loadingInterval) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.#ctor(System.String,System.Boolean,System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, unloadOnIdle As Boolean, instanceOwnershipDuration As TimeSpan, loadingInterval As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlWorkflowPersistenceService(System::String ^ connectionString, bool unloadOnIdle, TimeSpan instanceOwnershipDuration, TimeSpan loadingInterval);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService : string * bool * TimeSpan * TimeSpan -&gt; System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService" Usage="new System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService (connectionString, unloadOnIdle, instanceOwnershipDuration, loadingInterval)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="unloadOnIdle" Type="System.Boolean" />
        <Parameter Name="instanceOwnershipDuration" Type="System.TimeSpan" />
        <Parameter Name="loadingInterval" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="connectionString">Uma cadeia de conexão de banco de dados válida.</param>
        <param name="unloadOnIdle"><see langword="true" /> para descarregar o fluxo de trabalho quando ele está em um estado ocioso.</param>
        <param name="instanceOwnershipDuration">O período durante o qual os bloqueios são mantidos nos fluxos de trabalho ociosos.</param>
        <param name="loadingInterval">A frequência em que o serviço de persistência sonda o banco de dados quanto a fluxos de trabalho com temporizadores expirados.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService" /> usando a cadeia de conexão de banco de dados e outros padrões.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Observe que usar esse construtor (que fornece um valor para `instanceOwnershipDuration`) permite que o bloqueio. Para criar um serviço de persistência que não permite o bloqueio, use um construtor diferente que não especifica `instanceOwnershipDuration`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="connectionString" /> é uma referência nula (<see langword="Nothing" /> no Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="EnableRetries">
      <MemberSignature Language="C#" Value="public bool EnableRetries { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableRetries" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.EnableRetries" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableRetries As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableRetries { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableRetries : bool with get, set" Usage="System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.EnableRetries" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém e define um valor que especifica se o <see cref="T:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService" /> tentará novamente confirmar um lote de trabalho.</summary>
        <value><see langword="true" /> Se o serviço deverá repetir a confirmar o lote de trabalho; Caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Os seguintes itens de trabalho não podem ser colocado em lote e as tentativas de transação devem ser tratadas por meio de `EnableRetries` propriedade:  
  
-   Sondagem de temporizadores expirados do banco de dados.  
  
-   Carregando estados da instância de fluxo de trabalho.  
  
-   Recarregamento de instâncias de fluxo de trabalho quando o mecanismo de tempo de execução do fluxo de trabalho é iniciado.  
  
-   Chamar <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.GetAllWorkflows%2A>.  
  
 Além do que está sendo definido por meio de programação, essa funcionalidade pode ser habilitada por meio de um arquivo de configuração. Para obter mais informações sobre como definir essa propriedade por meio de um arquivo de configuração, consulte [arquivos de configuração do fluxo de trabalho](https://msdn.microsoft.com/library/ada4bb90-6c9d-4f3d-a9d0-b559bb0f9909).  
  
 Para obter informações gerais sobre como repetir as transações em lotes de trabalho, consulte [envio em lote as informações de estado em fluxos de trabalho](https://msdn.microsoft.com/library/ecda18ba-9140-4bd7-b13d-6787fdf5959d).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllWorkflows">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Workflow.Runtime.Hosting.SqlPersistenceWorkflowInstanceDescription&gt; GetAllWorkflows ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.Workflow.Runtime.Hosting.SqlPersistenceWorkflowInstanceDescription&gt; GetAllWorkflows() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.GetAllWorkflows" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllWorkflows () As IEnumerable(Of SqlPersistenceWorkflowInstanceDescription)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Workflow::Runtime::Hosting::SqlPersistenceWorkflowInstanceDescription ^&gt; ^ GetAllWorkflows();" />
      <MemberSignature Language="F#" Value="member this.GetAllWorkflows : unit -&gt; seq&lt;System.Workflow.Runtime.Hosting.SqlPersistenceWorkflowInstanceDescription&gt;" Usage="sqlWorkflowPersistenceService.GetAllWorkflows " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Workflow.Runtime.Hosting.SqlPersistenceWorkflowInstanceDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera descrições de instâncias de todos os fluxos de trabalho persistidos.</summary>
        <returns>Uma lista de todos os fluxos de trabalho persistidos.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadCompletedContextActivity">
      <MemberSignature Language="C#" Value="protected internal override System.Workflow.ComponentModel.Activity LoadCompletedContextActivity (Guid id, System.Workflow.ComponentModel.Activity outerActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Workflow.ComponentModel.Activity LoadCompletedContextActivity(valuetype System.Guid id, class System.Workflow.ComponentModel.Activity outerActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadCompletedContextActivity(System.Guid,System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function LoadCompletedContextActivity (id As Guid, outerActivity As Activity) As Activity" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Workflow::ComponentModel::Activity ^ LoadCompletedContextActivity(Guid id, System::Workflow::ComponentModel::Activity ^ outerActivity);" />
      <MemberSignature Language="F#" Value="override this.LoadCompletedContextActivity : Guid * System.Workflow.ComponentModel.Activity -&gt; System.Workflow.ComponentModel.Activity" Usage="sqlWorkflowPersistenceService.LoadCompletedContextActivity (id, outerActivity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Guid" />
        <Parameter Name="outerActivity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="id">O <see cref="T:System.Guid" /> da atividade de escopo.</param>
        <param name="outerActivity">O <see cref="T:System.Workflow.ComponentModel.Activity" /> que inclui a atividade de escopo.</param>
        <summary>Recupera o escopo concluído especificado do banco de dados.</summary>
        <returns>Uma <see cref="T:System.Workflow.ComponentModel.Activity" /> que representa o escopo concluído.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O mecanismo de tempo de execução do fluxo de trabalho usa <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadCompletedContextActivity%2A> durante a compensação. <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadCompletedContextActivity%2A> só deve ser chamado pelo mecanismo de tempo de execução de fluxo de trabalho.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Um escopo que corresponde a <paramref name="id" /> não pôde ser encontrado no banco de dados.</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadExpiredTimerWorkflowIds">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Guid&gt; LoadExpiredTimerWorkflowIds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;valuetype System.Guid&gt; LoadExpiredTimerWorkflowIds() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadExpiredTimerWorkflowIds" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadExpiredTimerWorkflowIds () As IList(Of Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;Guid&gt; ^ LoadExpiredTimerWorkflowIds();" />
      <MemberSignature Language="F#" Value="member this.LoadExpiredTimerWorkflowIds : unit -&gt; System.Collections.Generic.IList&lt;Guid&gt;" Usage="sqlWorkflowPersistenceService.LoadExpiredTimerWorkflowIds " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Guid&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera uma lista de IDs para fluxos de trabalho com temporizadores expirados.</summary>
        <returns>Uma lista de IDs para fluxos de trabalho com temporizadores expirados.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadingInterval">
      <MemberSignature Language="C#" Value="public TimeSpan LoadingInterval { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan LoadingInterval" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadingInterval" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LoadingInterval As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan LoadingInterval { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.LoadingInterval : TimeSpan" Usage="System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadingInterval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o comprimento do intervalo de carregamento.</summary>
        <value>A frequência em que o serviço de persistência sonda o banco de dados quanto a fluxos de trabalho com temporizadores expirados.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O valor padrão é 2 minutos.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadWorkflowInstanceState">
      <MemberSignature Language="C#" Value="protected internal override System.Workflow.ComponentModel.Activity LoadWorkflowInstanceState (Guid id);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Workflow.ComponentModel.Activity LoadWorkflowInstanceState(valuetype System.Guid id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function LoadWorkflowInstanceState (id As Guid) As Activity" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Workflow::ComponentModel::Activity ^ LoadWorkflowInstanceState(Guid id);" />
      <MemberSignature Language="F#" Value="override this.LoadWorkflowInstanceState : Guid -&gt; System.Workflow.ComponentModel.Activity" Usage="sqlWorkflowPersistenceService.LoadWorkflowInstanceState id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="id">O <see cref="T:System.Guid" /> do estado da instância de fluxo de trabalho.</param>
        <summary>Recupera o estado da instância de fluxo de trabalho especificada do banco de dados.</summary>
        <returns>Uma <see cref="T:System.Workflow.ComponentModel.Activity" /> que representa a atividade raiz da instância do fluxo de trabalho.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadWorkflowInstanceState%2A> só deve ser chamado pelo mecanismo de tempo de execução de fluxo de trabalho.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Um estado da instância de fluxo de trabalho que corresponde a <paramref name="id" /> não pôde ser encontrado no banco de dados.</exception>
      </Docs>
    </Member>
    <Member MemberName="OnStarted">
      <MemberSignature Language="C#" Value="protected override void OnStarted ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnStarted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.OnStarted" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnStarted ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnStarted();" />
      <MemberSignature Language="F#" Value="override this.OnStarted : unit -&gt; unit" Usage="sqlWorkflowPersistenceService.OnStarted " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inicia um novo cronômetro e recupera instâncias de fluxo de trabalho em execução.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveCompletedContextActivity">
      <MemberSignature Language="C#" Value="protected internal override void SaveCompletedContextActivity (System.Workflow.ComponentModel.Activity completedScopeActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void SaveCompletedContextActivity(class System.Workflow.ComponentModel.Activity completedScopeActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub SaveCompletedContextActivity (completedScopeActivity As Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void SaveCompletedContextActivity(System::Workflow::ComponentModel::Activity ^ completedScopeActivity);" />
      <MemberSignature Language="F#" Value="override this.SaveCompletedContextActivity : System.Workflow.ComponentModel.Activity -&gt; unit" Usage="sqlWorkflowPersistenceService.SaveCompletedContextActivity completedScopeActivity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="completedScopeActivity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="completedScopeActivity">Um <see cref="T:System.Workflow.ComponentModel.Activity" /> que representa o escopo concluído.</param>
        <summary>Salva o estado do escopo concluído especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `completedScopeActivity` é serializado e adicionado ao <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveWorkflowInstanceState">
      <MemberSignature Language="C#" Value="protected internal override void SaveWorkflowInstanceState (System.Workflow.ComponentModel.Activity rootActivity, bool unlock);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void SaveWorkflowInstanceState(class System.Workflow.ComponentModel.Activity rootActivity, bool unlock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub SaveWorkflowInstanceState (rootActivity As Activity, unlock As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void SaveWorkflowInstanceState(System::Workflow::ComponentModel::Activity ^ rootActivity, bool unlock);" />
      <MemberSignature Language="F#" Value="override this.SaveWorkflowInstanceState : System.Workflow.ComponentModel.Activity * bool -&gt; unit" Usage="sqlWorkflowPersistenceService.SaveWorkflowInstanceState (rootActivity, unlock)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootActivity" Type="System.Workflow.ComponentModel.Activity" />
        <Parameter Name="unlock" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rootActivity">A atividade raiz da instância do fluxo de trabalho.</param>
        <param name="unlock"><see langword="true" /> se a instância de fluxo de trabalho não deve ser bloqueada; <see langword="false" /> se a instância de fluxo de trabalho deve ser bloqueada.</param>
        <summary>Salva o estado da instância de fluxo de trabalho especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `rootActivity` é serializado e gravar o <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A>. O out-of-box <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> implementa o bloqueio do fluxo de trabalho de estado de instância. O usuário deverá configurar o `instanceOwnershipDuration` parâmetro no construtor. Esse valor decide o intervalo de tempo durante o qual a instância pode ser bloqueada por um host. Se vários hosts compartilham o mesmo serviço de persistência e o banco de dados e outro host tenta carregar a instância durante esse intervalo, um <xref:System.Workflow.Runtime.WorkflowOwnershipException> ocorre. Para obter mais informações, consulte a classe <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceInstanceId">
      <MemberSignature Language="C#" Value="public Guid ServiceInstanceId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid ServiceInstanceId" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.ServiceInstanceId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServiceInstanceId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid ServiceInstanceId { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.ServiceInstanceId : Guid" Usage="System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.ServiceInstanceId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o identificador da instância de serviço.</summary>
        <value>O identificador de instância de serviço.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O valor padrão é `Guid.Empty`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="protected internal override void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.Start" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Start();" />
      <MemberSignature Language="F#" Value="override this.Start : unit -&gt; unit" Usage="sqlWorkflowPersistenceService.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inicia o <see cref="T:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.Start%2A> só deve ser chamado pelo mecanismo de tempo de execução de fluxo de trabalho.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="protected internal override void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.Stop" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Stop();" />
      <MemberSignature Language="F#" Value="override this.Stop : unit -&gt; unit" Usage="sqlWorkflowPersistenceService.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Interrompe o serviço e o temporizador.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.Runtime.IPendingWork.Commit">
      <MemberSignature Language="C#" Value="void IPendingWork.Commit (System.Transactions.Transaction transaction, System.Collections.ICollection items);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Workflow.Runtime.IPendingWork.Commit(class System.Transactions.Transaction transaction, class System.Collections.ICollection items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System#Workflow#Runtime#IPendingWork#Commit(System.Transactions.Transaction,System.Collections.ICollection)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Workflow.Runtime.IPendingWork.Commit(System::Transactions::Transaction ^ transaction, System::Collections::ICollection ^ items) = System::Workflow::Runtime::IPendingWork::Commit;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.Runtime.IPendingWork.Commit(System.Transactions.Transaction,System.Collections.ICollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.Transactions.Transaction" />
        <Parameter Name="items" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="transaction">Um <see cref="T:System.Transactions.Transaction" />.</param>
        <param name="items">O <see cref="T:System.Collections.ICollection" /> de itens de trabalho a serem gravados no banco de dados.</param>
        <summary>Grava um <see cref="T:System.Collections.ICollection" /> de objetos de estado serializados no banco de dados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Os objetos de estado serializados que estão contidos em `items` são gravados no banco de dados.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Workflow.Runtime.Hosting.PersistenceException">Ocorreu um erro ao tentar gravar no banco de dados.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.Runtime.IPendingWork.Complete">
      <MemberSignature Language="C#" Value="void IPendingWork.Complete (bool succeeded, System.Collections.ICollection items);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Workflow.Runtime.IPendingWork.Complete(bool succeeded, class System.Collections.ICollection items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System#Workflow#Runtime#IPendingWork#Complete(System.Boolean,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Sub Complete (succeeded As Boolean, items As ICollection) Implements IPendingWork.Complete" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Workflow.Runtime.IPendingWork.Complete(bool succeeded, System::Collections::ICollection ^ items) = System::Workflow::Runtime::IPendingWork::Complete;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.Runtime.IPendingWork.Complete(System.Boolean,System.Collections.ICollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="succeeded" Type="System.Boolean" />
        <Parameter Name="items" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="succeeded"><see langword="true" /> se a confirmação for bem-sucedida; caso contrário, <see langword="false" />.</param>
        <param name="items">Um <see cref="T:System.Collections.ICollection" /> de objetos de estado serializados.</param>
        <summary>Conclui o lote de trabalho e libera todos os recursos.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Na implementação do out-of-box a <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService>,   
 <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System%23Workflow%23Runtime%23IPendingWork%23Complete%2A> é não operacional. Se você herdar e estender os <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> classe, você pode usar <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System%23Workflow%23Runtime%23IPendingWork%23Complete%2A> para executar as ações necessárias no `items` ditada pela sua implementação.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.Runtime.IPendingWork.MustCommit">
      <MemberSignature Language="C#" Value="bool IPendingWork.MustCommit (System.Collections.ICollection items);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Workflow.Runtime.IPendingWork.MustCommit(class System.Collections.ICollection items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System#Workflow#Runtime#IPendingWork#MustCommit(System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Function MustCommit (items As ICollection) As Boolean Implements IPendingWork.MustCommit" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Workflow.Runtime.IPendingWork.MustCommit(System::Collections::ICollection ^ items) = System::Workflow::Runtime::IPendingWork::MustCommit;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.Runtime.IPendingWork.MustCommit(System.Collections.ICollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="items">Um <see cref="T:System.Collections.ICollection" /> de objetos de estado serializados a serem gravados no banco de dados.</param>
        <summary>Retorna um valor que indica se a coleção de objetos de estado serializados deve ser gravada no banco de dados.</summary>
        <returns><see langword="true" /> indica que o lote deve ser confirmado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System%23Workflow%23Runtime%23IPendingWork%23MustCommit(System.Collections.ICollection)> sempre retorna `true`, que instrui o mecanismo de tempo de execução de fluxo de trabalho para invocar <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System%23Workflow%23Runtime%23IPendingWork%23MustCommit(System.Collections.ICollection)> no lote.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnloadOnIdle">
      <MemberSignature Language="C#" Value="protected internal override bool UnloadOnIdle (System.Workflow.ComponentModel.Activity activity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool UnloadOnIdle(class System.Workflow.ComponentModel.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.UnloadOnIdle(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool UnloadOnIdle(System::Workflow::ComponentModel::Activity ^ activity);" />
      <MemberSignature Language="F#" Value="override this.UnloadOnIdle : System.Workflow.ComponentModel.Activity -&gt; bool" Usage="sqlWorkflowPersistenceService.UnloadOnIdle activity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="activity">Uma <see cref="T:System.Workflow.ComponentModel.Activity" /> que representa a atividade raiz da instância do fluxo de trabalho.</param>
        <summary>Retorna um valor que indica se o fluxo de trabalho é descarregado quando está em estado ocioso.</summary>
        <returns><see langword="true" /> se o fluxo de trabalho for descarregado quando estiver em estado ocioso; caso contrário, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnlockWorkflowInstanceState">
      <MemberSignature Language="C#" Value="protected internal override void UnlockWorkflowInstanceState (System.Workflow.ComponentModel.Activity rootActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void UnlockWorkflowInstanceState(class System.Workflow.ComponentModel.Activity rootActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.UnlockWorkflowInstanceState(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub UnlockWorkflowInstanceState (rootActivity As Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void UnlockWorkflowInstanceState(System::Workflow::ComponentModel::Activity ^ rootActivity);" />
      <MemberSignature Language="F#" Value="override this.UnlockWorkflowInstanceState : System.Workflow.ComponentModel.Activity -&gt; unit" Usage="sqlWorkflowPersistenceService.UnlockWorkflowInstanceState rootActivity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootActivity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="rootActivity">Um <see cref="T:System.Workflow.ComponentModel.Activity" /> que representa a atividade raiz da instância do fluxo de trabalho.</param>
        <summary>Desbloqueia o acesso ao estado da instância de fluxo de trabalho especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método é usado pelo tempo de execução do fluxo de trabalho para desbloquear um estado de instância de fluxo de trabalho no armazenamento de dados sem persistência e é chamado pelo tempo de execução do fluxo de trabalho se o tempo de execução deve desbloquear o estado sem persistir, por exemplo, no caso de um <xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>