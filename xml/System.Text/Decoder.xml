<Type Name="Decoder" FullName="System.Text.Decoder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="543b9d3e7703ae5924d0171d1788746c188333f9" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37549274" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Decoder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit Decoder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.Decoder" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Decoder" />
  <TypeSignature Language="C++ CLI" Value="public ref class Decoder abstract" />
  <TypeSignature Language="F#" Value="type Decoder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="166ee-101">Converts a sequence of encoded bytes into a set of characters.</span>
      <span class="sxs-lookup">
        <span data-stu-id="166ee-101">Converts a sequence of encoded bytes into a set of characters.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="166ee-102">Para obter uma instância de uma implementação do <xref:System.Text.Decoder> classe, o aplicativo deve usar o <xref:System.Text.Encoding.GetDecoder%2A> método de um <xref:System.Text.Encoding> implementação.</span><span class="sxs-lookup"><span data-stu-id="166ee-102">To obtain an instance of an implementation of the <xref:System.Text.Decoder> class, the application should use the <xref:System.Text.Encoding.GetDecoder%2A> method of an <xref:System.Text.Encoding> implementation.</span></span>  
  
 <span data-ttu-id="166ee-103">O <xref:System.Text.Decoder.GetCharCount%2A> método determina quantos caracteres resultam em decodificação de uma sequência de bytes e o <xref:System.Text.Decoder.GetChars%2A> método executa a decodificação real.</span><span class="sxs-lookup"><span data-stu-id="166ee-103">The <xref:System.Text.Decoder.GetCharCount%2A> method determines how many characters result in decoding a sequence of bytes, and the <xref:System.Text.Decoder.GetChars%2A> method performs the actual decoding.</span></span> <span data-ttu-id="166ee-104">Há várias versões de ambos os métodos disponíveis no <xref:System.Text.Decoder> classe.</span><span class="sxs-lookup"><span data-stu-id="166ee-104">There are several versions of both of these methods available in the <xref:System.Text.Decoder> class.</span></span> <span data-ttu-id="166ee-105">Para obter mais informações, consulte <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="166ee-105">For more information, see <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="166ee-106">Um <xref:System.Text.Decoder> objeto mantém informações de estado entre chamadas sucessivas à `GetChars` ou <xref:System.Text.Decoder.Convert%2A> métodos para que ele corretamente pode decodificar sequências de bytes que abrangem os blocos.</span><span class="sxs-lookup"><span data-stu-id="166ee-106">A <xref:System.Text.Decoder> object maintains state information between successive calls to `GetChars` or <xref:System.Text.Decoder.Convert%2A> methods so it can correctly decode byte sequences that span blocks.</span></span> <span data-ttu-id="166ee-107">O <xref:System.Text.Decoder> também preserva bytes à direita no final de blocos de dados e usa os bytes à direita na próxima operação de decodificação.</span><span class="sxs-lookup"><span data-stu-id="166ee-107">The <xref:System.Text.Decoder> also preserves trailing bytes at the end of data blocks and uses the trailing bytes in the next decoding operation.</span></span> <span data-ttu-id="166ee-108">Portanto, <xref:System.Text.Encoding.GetDecoder%2A> e <xref:System.Text.Encoding.GetEncoder%2A> são úteis para operações de arquivo e transmissão de rede, pois essas operações costumam lidam com os blocos de dados em vez de um fluxo de dados completo.</span><span class="sxs-lookup"><span data-stu-id="166ee-108">Therefore, <xref:System.Text.Encoding.GetDecoder%2A> and <xref:System.Text.Encoding.GetEncoder%2A> are useful for network transmission and file operations because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="166ee-109">Quando o aplicativo é feito com um fluxo de dados, assegure-se de que as informações de estado são liberadas, definindo o `flush` parâmetro `true` na chamada do método apropriado.</span><span class="sxs-lookup"><span data-stu-id="166ee-109">When the application is done with a stream of data, it should make sure that the state information is flushed by setting the `flush` parameter to `true` in the appropriate method call.</span></span> <span data-ttu-id="166ee-110">Se ocorrer uma exceção ou se o aplicativo alterna fluxos, ele deverá chamar <xref:System.Text.Decoder.Reset%2A> para limpar o estado interno do `Decoder` objeto.</span><span class="sxs-lookup"><span data-stu-id="166ee-110">If an exception occurs or if the application switches streams, it should call <xref:System.Text.Decoder.Reset%2A> to clear the internal state of the `Decoder` object.</span></span>  
  
## <a name="version-considerations"></a><span data-ttu-id="166ee-111">Considerações da versão</span><span class="sxs-lookup"><span data-stu-id="166ee-111">Version Considerations</span></span>  
 <span data-ttu-id="166ee-112">Um <xref:System.Text.Decoder> ou <xref:System.Text.Encoder> objeto pode ser serializado durante uma operação de conversão.</span><span class="sxs-lookup"><span data-stu-id="166ee-112">A <xref:System.Text.Decoder> or <xref:System.Text.Encoder> object can be serialized during a conversion operation.</span></span> <span data-ttu-id="166ee-113">O estado do objeto é mantido, se ele é desserializado na mesma versão do .NET Framework, mas perdido se ele é desserializado em outra versão.</span><span class="sxs-lookup"><span data-stu-id="166ee-113">The state of the object is retained if it is deserialized in the same version of the .NET Framework, but lost if it is deserialized in another version.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="166ee-114">O exemplo a seguir demonstra o uso de um <xref:System.Text.Decoder> converter duas matrizes de byte diferente em uma matriz de caracteres.</span><span class="sxs-lookup"><span data-stu-id="166ee-114">The following example demonstrates the use of a <xref:System.Text.Decoder> to convert two different byte arrays into a character array.</span></span> <span data-ttu-id="166ee-115">Um dos bytes do caractere abrange as matrizes.</span><span class="sxs-lookup"><span data-stu-id="166ee-115">One of the character's bytes spans the arrays.</span></span> <span data-ttu-id="166ee-116">Isso é semelhante ao que um <xref:System.IO.StreamReader> objeto faz internamente ao ler um fluxo.</span><span class="sxs-lookup"><span data-stu-id="166ee-116">This is similar to what a <xref:System.IO.StreamReader> object does internally when reading a stream.</span></span>  
  
 [!code-cpp[Classic Decoder Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Decoder Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Decoder Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Decoder Example/CS/source.cs#1)]
 [!code-vb[Classic Decoder Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Decoder Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="166ee-117">
        <para>Quando seu aplicativo herda desta classe, ele deve substituir todos os membros.</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="166ee-117">
          <para>When your application inherits from this class, it must override all the members.</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.Text.Encoder" />
    <altmember cref="T:System.Text.Encoding" />
    <altmember cref="M:System.Text.Encoding.GetChars(System.Byte[],System.Int32,System.Int32)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Decoder ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Decoder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Decoder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="166ee-118">Initializes a new instance of the <see cref="T:System.Text.Decoder" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-118">Initializes a new instance of the <see cref="T:System.Text.Decoder" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="166ee-119">Para obter uma instância de uma implementação dessa classe, o aplicativo deve usar o <xref:System.Text.Encoding.GetDecoder%2A> método de um <xref:System.Text.Encoding> implementação.</span><span class="sxs-lookup"><span data-stu-id="166ee-119">To obtain an instance of an implementation of this class, the application should use the <xref:System.Text.Encoding.GetDecoder%2A> method of a <xref:System.Text.Encoding> implementation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="166ee-120">O exemplo a seguir demonstra duas técnicas para inicializar um novo <xref:System.Text.Decoder> instância.</span><span class="sxs-lookup"><span data-stu-id="166ee-120">The following example demonstrates two techniques for initializing a new <xref:System.Text.Decoder> instance.</span></span>  
  
 [!code-cpp[System.Text.Decoder.ctor Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Decoder.ctor Example/CPP/ctor.cpp#1)]
 [!code-csharp[System.Text.Decoder.ctor Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Decoder.ctor Example/CS/ctor.cs#1)]
 [!code-vb[System.Text.Decoder.ctor Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Decoder.ctor Example/VB/ctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Convert">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="166ee-121">Converts an encoded byte sequence to a string or array of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-121">Converts an encoded byte sequence to a string or array of characters.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public virtual void Convert (ReadOnlySpan&lt;byte&gt; bytes, Span&lt;char&gt; chars, bool flush, out int bytesUsed, out int charsUsed, out bool completed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Convert(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes, valuetype System.Span`1&lt;char&gt; chars, bool flush, [out] int32&amp; bytesUsed, [out] int32&amp; charsUsed, [out] bool&amp; completed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Decoder.Convert(System.ReadOnlySpan{System.Byte},System.Span{System.Char},System.Boolean,System.Int32@,System.Int32@,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Convert (bytes As ReadOnlySpan(Of Byte), chars As Span(Of Char), flush As Boolean, ByRef bytesUsed As Integer, ByRef charsUsed As Integer, ByRef completed As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Convert(ReadOnlySpan&lt;System::Byte&gt; bytes, Span&lt;char&gt; chars, bool flush, [Runtime::InteropServices::Out] int % bytesUsed, [Runtime::InteropServices::Out] int % charsUsed, [Runtime::InteropServices::Out] bool % completed);" />
      <MemberSignature Language="F#" Value="abstract member Convert : ReadOnlySpan&lt;byte&gt; * Span&lt;char&gt; * bool *  *  *  -&gt; unit&#xA;override this.Convert : ReadOnlySpan&lt;byte&gt; * Span&lt;char&gt; * bool *  *  *  -&gt; unit" Usage="decoder.Convert (bytes, chars, flush, bytesUsed, charsUsed, completed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="chars" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="flush" Type="System.Boolean" />
        <Parameter Name="bytesUsed" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="charsUsed" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="completed" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="bytes">To be added.</param>
        <param name="chars">To be added.</param>
        <param name="flush">To be added.</param>
        <param name="bytesUsed">To be added.</param>
        <param name="charsUsed">To be added.</param>
        <param name="completed">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public virtual void Convert (byte* bytes, int byteCount, char* chars, int charCount, bool flush, out int bytesUsed, out int charsUsed, out bool completed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Convert(unsigned int8* bytes, int32 byteCount, char* chars, int32 charCount, bool flush, [out] int32&amp; bytesUsed, [out] int32&amp; charsUsed, [out] bool&amp; completed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Decoder.Convert(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Convert(System::Byte* bytes, int byteCount, char* chars, int charCount, bool flush, [Runtime::InteropServices::Out] int % bytesUsed, [Runtime::InteropServices::Out] int % charsUsed, [Runtime::InteropServices::Out] bool % completed);" />
      <MemberSignature Language="F#" Value="abstract member Convert : nativeptr&lt;byte&gt; * int * nativeptr&lt;char&gt; * int * bool *  *  *  -&gt; unit&#xA;override this.Convert : nativeptr&lt;byte&gt; * int * nativeptr&lt;char&gt; * int * bool *  *  *  -&gt; unit" Usage="decoder.Convert (bytes, byteCount, chars, charCount, flush, bytesUsed, charsUsed, completed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="flush" Type="System.Boolean" />
        <Parameter Name="bytesUsed" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="charsUsed" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="completed" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="166ee-122">The address of a buffer that contains the byte sequences to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-122">The address of a buffer that contains the byte sequences to convert.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="166ee-123">The number of bytes in <c>bytes</c> to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-123">The number of bytes in <c>bytes</c> to convert.</span>
          </span>
        </param>
        <param name="chars">
          <span data-ttu-id="166ee-124">The address of a buffer to store the converted characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-124">The address of a buffer to store the converted characters.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="166ee-125">The maximum number of characters in <c>chars</c> to use in the conversion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-125">The maximum number of characters in <c>chars</c> to use in the conversion.</span>
          </span>
        </param>
        <param name="flush">
          <span data-ttu-id="166ee-126">
            <see langword="true" /> to indicate no further data is to be converted; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-126">
              <see langword="true" /> to indicate no further data is to be converted; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="bytesUsed">
          <span data-ttu-id="166ee-127">When this method returns, contains the number of bytes that were produced by the conversion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-127">When this method returns, contains the number of bytes that were produced by the conversion.</span>
          </span>
          <span data-ttu-id="166ee-128">This parameter is passed uninitialized.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-128">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <param name="charsUsed">
          <span data-ttu-id="166ee-129">When this method returns, contains the number of characters from <c>chars</c> that were used in the conversion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-129">When this method returns, contains the number of characters from <c>chars</c> that were used in the conversion.</span>
          </span>
          <span data-ttu-id="166ee-130">This parameter is passed uninitialized.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-130">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <param name="completed">
          <span data-ttu-id="166ee-131">When this method returns, contains <see langword="true" /> if all the characters specified by <c>byteCount</c> were converted; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-131">When this method returns, contains <see langword="true" /> if all the characters specified by <c>byteCount</c> were converted; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="166ee-132">This parameter is passed uninitialized.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-132">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="166ee-133">Converts a buffer of encoded bytes to UTF-16 encoded characters and stores the result in another buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-133">Converts a buffer of encoded bytes to UTF-16 encoded characters and stores the result in another buffer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="166ee-134">Lembre-se de que o <xref:System.Text.Decoder> objeto salva o estado entre chamadas para <xref:System.Text.Decoder.Convert%2A>.</span><span class="sxs-lookup"><span data-stu-id="166ee-134">Remember that the <xref:System.Text.Decoder> object saves state between calls to <xref:System.Text.Decoder.Convert%2A>.</span></span> <span data-ttu-id="166ee-135">Quando o aplicativo é feito com um fluxo de dados, ele deve definir a `flush` parâmetro para `true` para certificar-se de que as informações de estado seja liberadas.</span><span class="sxs-lookup"><span data-stu-id="166ee-135">When the application is done with a stream of data, it should set the `flush` parameter to `true` to make sure that the state information is flushed.</span></span> <span data-ttu-id="166ee-136">Com essa configuração, o decodificador ignora bytes inválidos no final do bloco de dados e limpa o buffer interno.</span><span class="sxs-lookup"><span data-stu-id="166ee-136">With this setting, the decoder ignores invalid bytes at the end of the data block and clears the internal buffer.</span></span> <span data-ttu-id="166ee-137">Todos os dados processados restantes que faz parte de uma unidade lógica, como o substituto alto do par substituto, são convertidos de acordo com as configurações de fallback atuais.</span><span class="sxs-lookup"><span data-stu-id="166ee-137">Any remaining processed data that is part of a logical unit, such as the high surrogate of a surrogate pair, is converted according to the current fallback settings.</span></span>  
  
 <span data-ttu-id="166ee-138">O `Convert` método foi projetado para ser usado em um loop para decodificar uma quantidade arbitrária de entrada, como ler de um arquivo ou fluxo de dados.</span><span class="sxs-lookup"><span data-stu-id="166ee-138">The `Convert` method is designed to be used in a loop to decode an arbitrary amount of input, such as data read from a file or stream.</span></span> <span data-ttu-id="166ee-139">Ele armazena a saída da operação de decodificação em um buffer de tamanho fixo.</span><span class="sxs-lookup"><span data-stu-id="166ee-139">It stores the output of the decoding operation in a fixed-size buffer.</span></span> <span data-ttu-id="166ee-140"><xref:System.Text.Decoder.GetChars%2A> lançará uma exceção se o buffer de saída não for grande o suficiente, mas <xref:System.Text.Decoder.Convert%2A> irá preencher tanto espaço quanto possível e retornar os bytes lidos e caracteres gravados.</span><span class="sxs-lookup"><span data-stu-id="166ee-140"><xref:System.Text.Decoder.GetChars%2A> will throw an exception if the output buffer isn't large enough, but <xref:System.Text.Decoder.Convert%2A> will fill as much space as possible and return the bytes read and chars written.</span></span> <span data-ttu-id="166ee-141">Consulte também o <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> tópico para obter mais comentários.</span><span class="sxs-lookup"><span data-stu-id="166ee-141">Also see the <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> topic for more comments.</span></span>  
  
 <span data-ttu-id="166ee-142">O `completed` parâmetro de saída indica se todos os dados no buffer de entrada foi convertido e armazenado no buffer de saída.</span><span class="sxs-lookup"><span data-stu-id="166ee-142">The `completed` output parameter indicates whether all the data in the input buffer was converted and stored in the output buffer.</span></span> <span data-ttu-id="166ee-143">Esse parâmetro é definido como `false` se o número de bytes especificado pela `byteCount` parâmetro não pode ser convertido sem exceder o número de caracteres especificada pelo `charCount` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="166ee-143">This parameter is set to `false` if the number of bytes specified by the `byteCount` parameter cannot be converted without exceeding the number of characters specified by the `charCount` parameter.</span></span> <span data-ttu-id="166ee-144">Nessa situação, o aplicativo deve usar o conteúdo do buffer de saída ou fornecer um novo buffer de saída, incremento a `bytes` parâmetro pelo número de bytes especificado pela `bytesUsed` parâmetro, em seguida, chame o `Convert` método novamente para processo de entrada restante.</span><span class="sxs-lookup"><span data-stu-id="166ee-144">In that situation, the application should use the contents of the output buffer or provide a new output buffer, increment the `bytes` parameter by the number of bytes specified by the `bytesUsed` parameter, then call the `Convert` method again to process the remaining input.</span></span>  
  
 <span data-ttu-id="166ee-145">O `completed` parâmetro também pode ser definido como `false`, mesmo que o `bytesUsed` e `byteCount` parâmetros são iguais.</span><span class="sxs-lookup"><span data-stu-id="166ee-145">The `completed` parameter can also be set to `false`, even though the `bytesUsed` and `byteCount` parameters are equal.</span></span> <span data-ttu-id="166ee-146">Essa situação ocorre se ainda houver dados na <xref:System.Text.Decoder> que não foram armazenado no objeto de `bytes` buffer.</span><span class="sxs-lookup"><span data-stu-id="166ee-146">This situation occurs if there is still data in the <xref:System.Text.Decoder> object that has not been stored in the `bytes` buffer.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Text.Decoder.Convert(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)" />
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="166ee-147">
            <paramref name="chars" /> or <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-147">
              <paramref name="chars" /> or <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="166ee-148">
            <paramref name="charCount" /> or <paramref name="byteCount" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-148">
              <paramref name="charCount" /> or <paramref name="byteCount" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="166ee-149">The output buffer is too small to contain any of the converted input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-149">The output buffer is too small to contain any of the converted input.</span>
          </span>
          <span data-ttu-id="166ee-150">The output buffer should be greater than or equal to the size indicated by the <see cref="Overload:System.Text.Decoder.GetCharCount" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-150">The output buffer should be greater than or equal to the size indicated by the <see cref="Overload:System.Text.Decoder.GetCharCount" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="166ee-151">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Decoder.Fallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-151">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Decoder.Fallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="166ee-152">Requer confiança total para o chamador imediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-152">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="166ee-153">Este membro não pode ser usado pelo código transparente ou parcialmente confiável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-153">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public virtual void Convert (byte[] bytes, int byteIndex, int byteCount, char[] chars, int charIndex, int charCount, bool flush, out int bytesUsed, out int charsUsed, out bool completed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Convert(unsigned int8[] bytes, int32 byteIndex, int32 byteCount, char[] chars, int32 charIndex, int32 charCount, bool flush, [out] int32&amp; bytesUsed, [out] int32&amp; charsUsed, [out] bool&amp; completed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Decoder.Convert(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Convert (bytes As Byte(), byteIndex As Integer, byteCount As Integer, chars As Char(), charIndex As Integer, charCount As Integer, flush As Boolean, ByRef bytesUsed As Integer, ByRef charsUsed As Integer, ByRef completed As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Convert(cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex, int byteCount, cli::array &lt;char&gt; ^ chars, int charIndex, int charCount, bool flush, [Runtime::InteropServices::Out] int % bytesUsed, [Runtime::InteropServices::Out] int % charsUsed, [Runtime::InteropServices::Out] bool % completed);" />
      <MemberSignature Language="F#" Value="abstract member Convert : byte[] * int * int * char[] * int * int * bool *  *  *  -&gt; unit&#xA;override this.Convert : byte[] * int * int * char[] * int * int * bool *  *  *  -&gt; unit" Usage="decoder.Convert (bytes, byteIndex, byteCount, chars, charIndex, charCount, flush, bytesUsed, charsUsed, completed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="flush" Type="System.Boolean" />
        <Parameter Name="bytesUsed" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="charsUsed" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="completed" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="166ee-154">A byte array to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-154">A byte array to convert.</span>
          </span>
        </param>
        <param name="byteIndex">
          <span data-ttu-id="166ee-155">The first element of <c>bytes</c> to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-155">The first element of <c>bytes</c> to convert.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="166ee-156">The number of elements of <c>bytes</c> to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-156">The number of elements of <c>bytes</c> to convert.</span>
          </span>
        </param>
        <param name="chars">
          <span data-ttu-id="166ee-157">An array to store the converted characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-157">An array to store the converted characters.</span>
          </span>
        </param>
        <param name="charIndex">
          <span data-ttu-id="166ee-158">The first element of <c>chars</c> in which data is stored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-158">The first element of <c>chars</c> in which data is stored.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="166ee-159">The maximum number of elements of <c>chars</c> to use in the conversion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-159">The maximum number of elements of <c>chars</c> to use in the conversion.</span>
          </span>
        </param>
        <param name="flush">
          <span data-ttu-id="166ee-160">
            <see langword="true" /> to indicate that no further data is to be converted; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-160">
              <see langword="true" /> to indicate that no further data is to be converted; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="bytesUsed">
          <span data-ttu-id="166ee-161">When this method returns, contains the number of bytes that were used in the conversion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-161">When this method returns, contains the number of bytes that were used in the conversion.</span>
          </span>
          <span data-ttu-id="166ee-162">This parameter is passed uninitialized.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-162">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <param name="charsUsed">
          <span data-ttu-id="166ee-163">When this method returns, contains the number of characters from <c>chars</c> that were produced by the conversion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-163">When this method returns, contains the number of characters from <c>chars</c> that were produced by the conversion.</span>
          </span>
          <span data-ttu-id="166ee-164">This parameter is passed uninitialized.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-164">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <param name="completed">
          <span data-ttu-id="166ee-165">When this method returns, contains <see langword="true" /> if all the characters specified by <c>byteCount</c> were converted; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-165">When this method returns, contains <see langword="true" /> if all the characters specified by <c>byteCount</c> were converted; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="166ee-166">This parameter is passed uninitialized.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-166">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="166ee-167">Converts an array of encoded bytes to UTF-16 encoded characters and stores the result in a character array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-167">Converts an array of encoded bytes to UTF-16 encoded characters and stores the result in a character array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="166ee-168">Lembre-se de que o <xref:System.Text.Decoder> objeto salva o estado entre chamadas para <xref:System.Text.Decoder.Convert%2A>.</span><span class="sxs-lookup"><span data-stu-id="166ee-168">Remember that the <xref:System.Text.Decoder> object saves state between calls to <xref:System.Text.Decoder.Convert%2A>.</span></span> <span data-ttu-id="166ee-169">Quando o aplicativo é feito com um fluxo de dados, ele deve definir a `flush` parâmetro para `true` para certificar-se de que as informações de estado seja liberadas.</span><span class="sxs-lookup"><span data-stu-id="166ee-169">When the application is done with a stream of data, it should set the `flush` parameter to `true` to make sure that the state information is flushed.</span></span> <span data-ttu-id="166ee-170">Com essa configuração, o decodificador ignora bytes inválidos no final do bloco de dados e limpa o buffer interno.</span><span class="sxs-lookup"><span data-stu-id="166ee-170">With this setting, the decoder ignores invalid bytes at the end of the data block and clears the internal buffer.</span></span> <span data-ttu-id="166ee-171">Todos os dados processados restantes que faz parte de uma unidade lógica, como o substituto alto do par substituto, são convertidos de acordo com as configurações de fallback atuais.</span><span class="sxs-lookup"><span data-stu-id="166ee-171">Any remaining processed data that is part of a logical unit, such as the high surrogate of a surrogate pair, is converted according to the current fallback settings.</span></span>  
  
 <span data-ttu-id="166ee-172">O `Convert` método foi projetado para ser usado em um loop para decodificar uma quantidade arbitrária de entrada, como ler de um arquivo ou fluxo de dados.</span><span class="sxs-lookup"><span data-stu-id="166ee-172">The `Convert` method is designed to be used in a loop to decode an arbitrary amount of input, such as data read from a file or stream.</span></span> <span data-ttu-id="166ee-173">Ele armazena a saída da operação de decodificação em um buffer de tamanho fixo.</span><span class="sxs-lookup"><span data-stu-id="166ee-173">It stores the output of the decoding operation in a fixed-size buffer.</span></span> <span data-ttu-id="166ee-174"><xref:System.Text.Decoder.GetChars%2A> lançará uma exceção se o buffer de saída não for grande o suficiente, mas <xref:System.Text.Decoder.Convert%2A> irá preencher tanto espaço quanto possível e retornar os bytes lidos e caracteres gravados.</span><span class="sxs-lookup"><span data-stu-id="166ee-174"><xref:System.Text.Decoder.GetChars%2A> will throw an exception if the output buffer isn't large enough, but <xref:System.Text.Decoder.Convert%2A> will fill as much space as possible and return the bytes read and chars written.</span></span> <span data-ttu-id="166ee-175">Consulte também o <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> tópico para obter mais comentários.</span><span class="sxs-lookup"><span data-stu-id="166ee-175">Also see the <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> topic for more comments.</span></span>  
  
 <span data-ttu-id="166ee-176">O `completed` parâmetro de saída indica se todos os dados no buffer de entrada foi convertido e armazenado no buffer de saída.</span><span class="sxs-lookup"><span data-stu-id="166ee-176">The `completed` output parameter indicates whether all the data in the input buffer was converted and stored in the output buffer.</span></span> <span data-ttu-id="166ee-177">Esse parâmetro é definido como `false` se o número de bytes especificado pela `byteCount` parâmetro não pode ser convertido sem exceder o número de caracteres especificada pelo `charCount` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="166ee-177">This parameter is set to `false` if the number of bytes specified by the `byteCount` parameter cannot be converted without exceeding the number of characters specified by the `charCount` parameter.</span></span> <span data-ttu-id="166ee-178">Nessa situação, o aplicativo deve usar o conteúdo do buffer de saída ou fornecer um novo buffer de saída, incremento a `bytes` parâmetro pelo número de bytes especificado pela `bytesUsed` parâmetro, em seguida, chame o `Convert` método novamente para processo de entrada restante.</span><span class="sxs-lookup"><span data-stu-id="166ee-178">In that situation, the application should use the contents of the output buffer or provide a new output buffer, increment the `bytes` parameter by the number of bytes specified by the `bytesUsed` parameter, then call the `Convert` method again to process the remaining input.</span></span>  
  
 <span data-ttu-id="166ee-179">O `completed` parâmetro também pode ser definido como `false`, mesmo que o `bytesUsed` e `byteCount` parâmetros são iguais.</span><span class="sxs-lookup"><span data-stu-id="166ee-179">The `completed` parameter can also be set to `false`, even though the `bytesUsed` and `byteCount` parameters are equal.</span></span> <span data-ttu-id="166ee-180">Essa situação ocorre se ainda houver dados na <xref:System.Text.Decoder> que não foram armazenado no objeto de `bytes` buffer.</span><span class="sxs-lookup"><span data-stu-id="166ee-180">This situation occurs if there is still data in the <xref:System.Text.Decoder> object that has not been stored in the `bytes` buffer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="166ee-181">O seguinte exemplo de código usa o <xref:System.Text.Encoder.Convert%2A> método para converter um arquivo de caracteres UTF-16 em UTF-8.</span><span class="sxs-lookup"><span data-stu-id="166ee-181">The following code example uses the <xref:System.Text.Encoder.Convert%2A> method to convert a file of UTF-16 characters to UTF-8.</span></span> <span data-ttu-id="166ee-182">Ele usa o <xref:System.Text.Decoder.Convert%2A> método para converter os caracteres UTF-8 de volta para caracteres UTF-16.</span><span class="sxs-lookup"><span data-stu-id="166ee-182">It then uses the <xref:System.Text.Decoder.Convert%2A> method to convert the UTF-8 characters back to UTF-16 characters.</span></span>  
  
 [!code-csharp[sys.txt.EncoderDecoder.convert#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.txt.EncoderDecoder.convert/cs/edCvt.cs#1)]
 [!code-vb[sys.txt.EncoderDecoder.convert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.txt.EncoderDecoder.convert/vb/edCvt.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="166ee-183">
            <paramref name="chars" /> or <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-183">
              <paramref name="chars" /> or <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="166ee-184">
            <paramref name="charIndex" />, <paramref name="charCount" />, <paramref name="byteIndex" />, or <paramref name="byteCount" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-184">
              <paramref name="charIndex" />, <paramref name="charCount" />, <paramref name="byteIndex" />, or <paramref name="byteCount" /> is less than zero.</span>
          </span>
          <span data-ttu-id="166ee-185">-or-  The length of <paramref name="chars" /> - <paramref name="charIndex" /> is less than <paramref name="charCount" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-185">-or-  The length of <paramref name="chars" /> - <paramref name="charIndex" /> is less than <paramref name="charCount" />.</span>
          </span>
          <span data-ttu-id="166ee-186">-or-  The length of <paramref name="bytes" /> - <paramref name="byteIndex" /> is less than <paramref name="byteCount" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-186">-or-  The length of <paramref name="bytes" /> - <paramref name="byteIndex" /> is less than <paramref name="byteCount" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="166ee-187">The output buffer is too small to contain any of the converted input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-187">The output buffer is too small to contain any of the converted input.</span>
          </span>
          <span data-ttu-id="166ee-188">The output buffer should be greater than or equal to the size indicated by the <see cref="Overload:System.Text.Decoder.GetCharCount" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-188">The output buffer should be greater than or equal to the size indicated by the <see cref="Overload:System.Text.Decoder.GetCharCount" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="166ee-189">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Decoder.Fallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-189">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Decoder.Fallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Fallback">
      <MemberSignature Language="C#" Value="public System.Text.DecoderFallback Fallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.DecoderFallback Fallback" />
      <MemberSignature Language="DocId" Value="P:System.Text.Decoder.Fallback" />
      <MemberSignature Language="VB.NET" Value="Public Property Fallback As DecoderFallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::DecoderFallback ^ Fallback { System::Text::DecoderFallback ^ get(); void set(System::Text::DecoderFallback ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Fallback : System.Text.DecoderFallback with get, set" Usage="System.Text.Decoder.Fallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.DecoderFallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="166ee-190">Gets or sets a <see cref="T:System.Text.DecoderFallback" /> object for the current <see cref="T:System.Text.Decoder" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-190">Gets or sets a <see cref="T:System.Text.DecoderFallback" /> object for the current <see cref="T:System.Text.Decoder" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="166ee-191">Um objeto <see cref="T:System.Text.DecoderFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-191">A <see cref="T:System.Text.DecoderFallback" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="166ee-192">O <xref:System.Text.DecoderFallback> objeto representa um manipulador de erro que é invocado quando uma sequência de bytes codificados não pode ser convertida em um caractere.</span><span class="sxs-lookup"><span data-stu-id="166ee-192">The <xref:System.Text.DecoderFallback> object represents an error handler that is invoked when an encoded byte sequence cannot be converted to a character.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="166ee-193">The value in a set operation is <see langword="null" /> (<see langword="Nothing" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-193">The value in a set operation is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="166ee-194">A new value cannot be assigned in a set operation because the current <see cref="T:System.Text.DecoderFallbackBuffer" /> object contains data that has not been decoded yet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-194">A new value cannot be assigned in a set operation because the current <see cref="T:System.Text.DecoderFallbackBuffer" /> object contains data that has not been decoded yet.</span>
          </span>
        </exception>
        <altmember cref="T:System.Text.EncoderFallback" />
        <altmember cref="P:System.Text.Encoder.FallbackBuffer" />
      </Docs>
    </Member>
    <Member MemberName="FallbackBuffer">
      <MemberSignature Language="C#" Value="public System.Text.DecoderFallbackBuffer FallbackBuffer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.DecoderFallbackBuffer FallbackBuffer" />
      <MemberSignature Language="DocId" Value="P:System.Text.Decoder.FallbackBuffer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FallbackBuffer As DecoderFallbackBuffer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::DecoderFallbackBuffer ^ FallbackBuffer { System::Text::DecoderFallbackBuffer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FallbackBuffer : System.Text.DecoderFallbackBuffer" Usage="System.Text.Decoder.FallbackBuffer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.DecoderFallbackBuffer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="166ee-195">Gets the <see cref="T:System.Text.DecoderFallbackBuffer" /> object associated with the current <see cref="T:System.Text.Decoder" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-195">Gets the <see cref="T:System.Text.DecoderFallbackBuffer" /> object associated with the current <see cref="T:System.Text.Decoder" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="166ee-196">Um objeto <see cref="T:System.Text.DecoderFallbackBuffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-196">A <see cref="T:System.Text.DecoderFallbackBuffer" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="166ee-197">O <xref:System.Text.DecoderFallbackBuffer> objeto representa os dados usados pelo <xref:System.Text.DecoderFallback> objeto.</span><span class="sxs-lookup"><span data-stu-id="166ee-197">The <xref:System.Text.DecoderFallbackBuffer> object represents data used by the <xref:System.Text.DecoderFallback> object.</span></span> <span data-ttu-id="166ee-198">O <xref:System.Text.DecoderFallback> objeto representa um manipulador de erro que é invocado quando uma sequência de bytes codificados não pode ser convertida em um caractere.</span><span class="sxs-lookup"><span data-stu-id="166ee-198">The <xref:System.Text.DecoderFallback> object represents an error handler that is invoked when an encoded byte sequence cannot be converted to a character.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.EncoderFallback" />
        <altmember cref="P:System.Text.Encoder.Fallback" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCharCount">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="166ee-199">When overridden in a derived class, calculates the number of characters produced by decoding a sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-199">When overridden in a derived class, calculates the number of characters produced by decoding a sequence of bytes.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public virtual int GetCharCount (ReadOnlySpan&lt;byte&gt; bytes, bool flush);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCharCount(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes, bool flush) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Decoder.GetCharCount(System.ReadOnlySpan{System.Byte},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCharCount (bytes As ReadOnlySpan(Of Byte), flush As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetCharCount(ReadOnlySpan&lt;System::Byte&gt; bytes, bool flush);" />
      <MemberSignature Language="F#" Value="abstract member GetCharCount : ReadOnlySpan&lt;byte&gt; * bool -&gt; int&#xA;override this.GetCharCount : ReadOnlySpan&lt;byte&gt; * bool -&gt; int" Usage="decoder.GetCharCount (bytes, flush)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="flush" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="bytes">To be added.</param>
        <param name="flush">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public virtual int GetCharCount (byte* bytes, int count, bool flush);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCharCount(unsigned int8* bytes, int32 count, bool flush) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Decoder.GetCharCount(System.Byte*,System.Int32,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetCharCount(System::Byte* bytes, int count, bool flush);" />
      <MemberSignature Language="F#" Value="abstract member GetCharCount : nativeptr&lt;byte&gt; * int * bool -&gt; int&#xA;override this.GetCharCount : nativeptr&lt;byte&gt; * int * bool -&gt; int" Usage="decoder.GetCharCount (bytes, count, flush)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="flush" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="166ee-200">A pointer to the first byte to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-200">A pointer to the first byte to decode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="166ee-201">The number of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-201">The number of bytes to decode.</span>
          </span>
        </param>
        <param name="flush">
          <span data-ttu-id="166ee-202">
            <see langword="true" /> to simulate clearing the internal state of the encoder after the calculation; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-202">
              <see langword="true" /> to simulate clearing the internal state of the encoder after the calculation; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="166ee-203">When overridden in a derived class, calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-203">When overridden in a derived class, calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.</span>
          </span>
          <span data-ttu-id="166ee-204">A parameter indicates whether to clear the internal state of the decoder after the calculation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-204">A parameter indicates whether to clear the internal state of the decoder after the calculation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="166ee-205">The number of characters produced by decoding the specified sequence of bytes and any bytes in the internal buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-205">The number of characters produced by decoding the specified sequence of bytes and any bytes in the internal buffer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="166ee-206">Esse método não afeta o estado do decodificador.</span><span class="sxs-lookup"><span data-stu-id="166ee-206">This method does not affect the state of the decoder.</span></span>  
  
 <span data-ttu-id="166ee-207">Para calcular a matriz exata tamanho que <xref:System.Text.Decoder.GetChars%2A> requer para armazenar os caracteres resultantes, o aplicativo deve usar <xref:System.Text.Decoder.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="166ee-207">To calculate the exact array size that <xref:System.Text.Decoder.GetChars%2A> requires to store the resulting characters, the application should use <xref:System.Text.Decoder.GetCharCount%2A>.</span></span>  
  
 <span data-ttu-id="166ee-208">Se `GetChars` é chamado com `flush` definido como `false`, o decodificador armazena bytes à direita no final do bloco de dados em um buffer interno e usa-los na próxima operação de decodificação.</span><span class="sxs-lookup"><span data-stu-id="166ee-208">If `GetChars` is called with `flush` set to `false`, the decoder stores trailing bytes at the end of the data block in an internal buffer and uses them in the next decoding operation.</span></span> <span data-ttu-id="166ee-209">O aplicativo deve chamar `GetCharCount` em um bloco de dados imediatamente antes de chamar `GetChars` do mesmo bloco, para que qualquer bytes à direita do bloco anterior são incluídos no cálculo.</span><span class="sxs-lookup"><span data-stu-id="166ee-209">The application should call `GetCharCount` on a block of data immediately before calling `GetChars` on the same block, so that any trailing bytes from the previous block are included in the calculation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="166ee-210">
            <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" /> in Visual Basic .NET).</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-210">
              <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" /> in Visual Basic .NET).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="166ee-211">
            <paramref name="count" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-211">
              <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="166ee-212">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Decoder.Fallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-212">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Decoder.Fallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="166ee-213">Requer confiança total para o chamador imediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-213">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="166ee-214">Este membro não pode ser usado pelo código transparente ou parcialmente confiável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-214">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Text.Decoder.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean)" />
        <altmember cref="M:System.Text.Decoder.Reset" />
      </Docs>
    </Member>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public abstract int GetCharCount (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCharCount(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Decoder.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetCharCount (bytes As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetCharCount(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member GetCharCount : byte[] * int * int -&gt; int" Usage="decoder.GetCharCount (bytes, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="166ee-215">The byte array containing the sequence of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-215">The byte array containing the sequence of bytes to decode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="166ee-216">The index of the first byte to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-216">The index of the first byte to decode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="166ee-217">The number of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-217">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="166ee-218">When overridden in a derived class, calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-218">When overridden in a derived class, calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="166ee-219">The number of characters produced by decoding the specified sequence of bytes and any bytes in the internal buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-219">The number of characters produced by decoding the specified sequence of bytes and any bytes in the internal buffer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="166ee-220">Esse método não afeta o estado do decodificador.</span><span class="sxs-lookup"><span data-stu-id="166ee-220">This method does not affect the state of the decoder.</span></span>  
  
 <span data-ttu-id="166ee-221">Para calcular a matriz exata tamanho que <xref:System.Text.Decoder.GetChars%2A> requer para armazenar os caracteres resultantes, o aplicativo deve usar <xref:System.Text.Decoder.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="166ee-221">To calculate the exact array size that <xref:System.Text.Decoder.GetChars%2A> requires to store the resulting characters, the application should use <xref:System.Text.Decoder.GetCharCount%2A>.</span></span>  
  
 <span data-ttu-id="166ee-222">Se `GetChars` é chamado com `flush` definido como `false`, o decodificador armazena bytes à direita no final do bloco de dados em um buffer interno e usa-los na próxima operação de decodificação.</span><span class="sxs-lookup"><span data-stu-id="166ee-222">If `GetChars` is called with `flush` set to `false`, the decoder stores trailing bytes at the end of the data block in an internal buffer and uses them in the next decoding operation.</span></span> <span data-ttu-id="166ee-223">O aplicativo deve chamar `GetCharCount` em um bloco de dados imediatamente antes de chamar `GetChars` do mesmo bloco, para que qualquer bytes à direita do bloco anterior são incluídos no cálculo.</span><span class="sxs-lookup"><span data-stu-id="166ee-223">The application should call `GetCharCount` on a block of data immediately before calling `GetChars` on the same block, so that any trailing bytes from the previous block are included in the calculation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="166ee-224">O exemplo de código a seguir demonstra como usar o <xref:System.Text.Decoder.GetCharCount%2A> método para calcular o número de caracteres necessários para decodificar o intervalo especificado de bytes na matriz.</span><span class="sxs-lookup"><span data-stu-id="166ee-224">The following code example demonstrates how to use the <xref:System.Text.Decoder.GetCharCount%2A> method to calculate the number of characters required to decode the specified range of bytes in the array.</span></span>  
  
 [!code-cpp[System.Text.Decoder.GetCharCount Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Decoder.GetCharCount Example/CPP/getcharcount-byte[]-int32-int32.cpp#1)]
 [!code-csharp[System.Text.Decoder.GetCharCount Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Decoder.GetCharCount Example/CS/getcharcount-byte[]-int32-int32.cs#1)]
 [!code-vb[System.Text.Decoder.GetCharCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Decoder.GetCharCount Example/VB/getcharcount-byte[]-int32-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="166ee-225">
            <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-225">
              <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="166ee-226">
            <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-226">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="166ee-227">-or-  <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-227">-or-  <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="166ee-228">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Decoder.Fallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-228">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Decoder.Fallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.Decoder.Reset" />
      </Docs>
    </Member>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public virtual int GetCharCount (byte[] bytes, int index, int count, bool flush);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCharCount(unsigned int8[] bytes, int32 index, int32 count, bool flush) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Decoder.GetCharCount(System.Byte[],System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCharCount (bytes As Byte(), index As Integer, count As Integer, flush As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetCharCount(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count, bool flush);" />
      <MemberSignature Language="F#" Value="abstract member GetCharCount : byte[] * int * int * bool -&gt; int&#xA;override this.GetCharCount : byte[] * int * int * bool -&gt; int" Usage="decoder.GetCharCount (bytes, index, count, flush)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="flush" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="166ee-229">The byte array containing the sequence of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-229">The byte array containing the sequence of bytes to decode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="166ee-230">The index of the first byte to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-230">The index of the first byte to decode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="166ee-231">The number of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-231">The number of bytes to decode.</span>
          </span>
        </param>
        <param name="flush">
          <span data-ttu-id="166ee-232">
            <see langword="true" /> to simulate clearing the internal state of the encoder after the calculation; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-232">
              <see langword="true" /> to simulate clearing the internal state of the encoder after the calculation; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="166ee-233">When overridden in a derived class, calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-233">When overridden in a derived class, calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.</span>
          </span>
          <span data-ttu-id="166ee-234">A parameter indicates whether to clear the internal state of the decoder after the calculation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-234">A parameter indicates whether to clear the internal state of the decoder after the calculation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="166ee-235">The number of characters produced by decoding the specified sequence of bytes and any bytes in the internal buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-235">The number of characters produced by decoding the specified sequence of bytes and any bytes in the internal buffer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="166ee-236">Esse método não afeta o estado do decodificador.</span><span class="sxs-lookup"><span data-stu-id="166ee-236">This method does not affect the state of the decoder.</span></span>  
  
 <span data-ttu-id="166ee-237">Para calcular a matriz exata tamanho que <xref:System.Text.Decoder.GetChars%2A> requer para armazenar os caracteres resultantes, o aplicativo deve usar <xref:System.Text.Decoder.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="166ee-237">To calculate the exact array size that <xref:System.Text.Decoder.GetChars%2A> requires to store the resulting characters, the application should use <xref:System.Text.Decoder.GetCharCount%2A>.</span></span>  
  
 <span data-ttu-id="166ee-238">Se `GetChars` é chamado com `flush` definido como `false`, o decodificador armazena bytes à direita no final do bloco de dados em um buffer interno e usa-los na próxima operação de decodificação.</span><span class="sxs-lookup"><span data-stu-id="166ee-238">If `GetChars` is called with `flush` set to `false`, the decoder stores trailing bytes at the end of the data block in an internal buffer and uses them in the next decoding operation.</span></span> <span data-ttu-id="166ee-239">O aplicativo deve chamar `GetCharCount` em um bloco de dados imediatamente antes de chamar `GetChars` do mesmo bloco, para que qualquer bytes à direita do bloco anterior são incluídos no cálculo.</span><span class="sxs-lookup"><span data-stu-id="166ee-239">The application should call `GetCharCount` on a block of data immediately before calling `GetChars` on the same block, so that any trailing bytes from the previous block are included in the calculation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="166ee-240">
            <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-240">
              <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="166ee-241">
            <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-241">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="166ee-242">-or-  <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-242">-or-  <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="166ee-243">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Decoder.Fallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-243">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Decoder.Fallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Boolean)" />
        <altmember cref="M:System.Text.Decoder.Reset" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChars">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="166ee-244">When overridden in a derived class, decodes a sequence of bytes into a set of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-244">When overridden in a derived class, decodes a sequence of bytes into a set of characters.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public virtual int GetChars (ReadOnlySpan&lt;byte&gt; bytes, Span&lt;char&gt; chars, bool flush);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetChars(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes, valuetype System.Span`1&lt;char&gt; chars, bool flush) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Decoder.GetChars(System.ReadOnlySpan{System.Byte},System.Span{System.Char},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChars (bytes As ReadOnlySpan(Of Byte), chars As Span(Of Char), flush As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetChars(ReadOnlySpan&lt;System::Byte&gt; bytes, Span&lt;char&gt; chars, bool flush);" />
      <MemberSignature Language="F#" Value="abstract member GetChars : ReadOnlySpan&lt;byte&gt; * Span&lt;char&gt; * bool -&gt; int&#xA;override this.GetChars : ReadOnlySpan&lt;byte&gt; * Span&lt;char&gt; * bool -&gt; int" Usage="decoder.GetChars (bytes, chars, flush)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="chars" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="flush" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="bytes">To be added.</param>
        <param name="chars">To be added.</param>
        <param name="flush">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public virtual int GetChars (byte* bytes, int byteCount, char* chars, int charCount, bool flush);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetChars(unsigned int8* bytes, int32 byteCount, char* chars, int32 charCount, bool flush) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Decoder.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetChars(System::Byte* bytes, int byteCount, char* chars, int charCount, bool flush);" />
      <MemberSignature Language="F#" Value="abstract member GetChars : nativeptr&lt;byte&gt; * int * nativeptr&lt;char&gt; * int * bool -&gt; int&#xA;override this.GetChars : nativeptr&lt;byte&gt; * int * nativeptr&lt;char&gt; * int * bool -&gt; int" Usage="decoder.GetChars (bytes, byteCount, chars, charCount, flush)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="flush" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="166ee-245">A pointer to the first byte to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-245">A pointer to the first byte to decode.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="166ee-246">The number of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-246">The number of bytes to decode.</span>
          </span>
        </param>
        <param name="chars">
          <span data-ttu-id="166ee-247">A pointer to the location at which to start writing the resulting set of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-247">A pointer to the location at which to start writing the resulting set of characters.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="166ee-248">The maximum number of characters to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-248">The maximum number of characters to write.</span>
          </span>
        </param>
        <param name="flush">
          <span data-ttu-id="166ee-249">
            <see langword="true" /> to clear the internal state of the decoder after the conversion; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-249">
              <see langword="true" /> to clear the internal state of the decoder after the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="166ee-250">When overridden in a derived class, decodes a sequence of bytes starting at the specified byte pointer and any bytes in the internal buffer into a set of characters that are stored starting at the specified character pointer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-250">When overridden in a derived class, decodes a sequence of bytes starting at the specified byte pointer and any bytes in the internal buffer into a set of characters that are stored starting at the specified character pointer.</span>
          </span>
          <span data-ttu-id="166ee-251">A parameter indicates whether to clear the internal state of the decoder after the conversion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-251">A parameter indicates whether to clear the internal state of the decoder after the conversion.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="166ee-252">The actual number of characters written at the location indicated by the <paramref name="chars" /> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-252">The actual number of characters written at the location indicated by the <paramref name="chars" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="166ee-253">Lembre-se de que o <xref:System.Text.Decoder> objeto salva o estado entre chamadas para <xref:System.Text.Decoder.GetChars%2A>.</span><span class="sxs-lookup"><span data-stu-id="166ee-253">Remember that the <xref:System.Text.Decoder> object saves state between calls to <xref:System.Text.Decoder.GetChars%2A>.</span></span> <span data-ttu-id="166ee-254">Quando o aplicativo é feito com um fluxo de dados, ele deve definir a `flush` parâmetro para `true` para certificar-se de que as informações de estado seja liberadas.</span><span class="sxs-lookup"><span data-stu-id="166ee-254">When the application is done with a stream of data, it should set the `flush` parameter to `true` to make sure that the state information is flushed.</span></span> <span data-ttu-id="166ee-255">Com essa configuração, o decodificador ignora bytes inválidos no final do bloco de dados e limpa o buffer interno.</span><span class="sxs-lookup"><span data-stu-id="166ee-255">With this setting, the decoder ignores invalid bytes at the end of the data block and clears the internal buffer.</span></span>  
  
 <span data-ttu-id="166ee-256">Para calcular o buffer exato tamanho que `GetChars` requer para armazenar os caracteres resultantes, o aplicativo deve usar <xref:System.Text.Decoder.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="166ee-256">To calculate the exact buffer size that `GetChars` requires to store the resulting characters, the application should use <xref:System.Text.Decoder.GetCharCount%2A>.</span></span>  
  
 <span data-ttu-id="166ee-257">Se `GetChars` é chamado com `flush` definido como `false`, o decodificador armazena bytes à direita no final do bloco de dados em um buffer interno e usa-los na próxima operação de decodificação.</span><span class="sxs-lookup"><span data-stu-id="166ee-257">If `GetChars` is called with `flush` set to `false`, the decoder stores trailing bytes at the end of the data block in an internal buffer and uses them in the next decoding operation.</span></span> <span data-ttu-id="166ee-258">O aplicativo deve chamar `GetCharCount` em um bloco de dados imediatamente antes de chamar `GetChars` do mesmo bloco, para que qualquer bytes à direita do bloco anterior são incluídos no cálculo.</span><span class="sxs-lookup"><span data-stu-id="166ee-258">The application should call `GetCharCount` on a block of data immediately before calling `GetChars` on the same block, so that any trailing bytes from the previous block are included in the calculation.</span></span>  
  
 <span data-ttu-id="166ee-259">Se seu aplicativo é converter muitos segmentos de um fluxo de entrada, considere usar o <xref:System.Text.Decoder.Convert%2A> método.</span><span class="sxs-lookup"><span data-stu-id="166ee-259">If your application is to convert many segments of an input stream, consider using the <xref:System.Text.Decoder.Convert%2A> method.</span></span> <span data-ttu-id="166ee-260"><xref:System.Text.Decoder.GetChars%2A> lançará uma exceção se o buffer de saída não for grande o suficiente, mas <xref:System.Text.Decoder.Convert%2A> irá preencher tanto espaço quanto possível e retornar os bytes lidos e caracteres gravados.</span><span class="sxs-lookup"><span data-stu-id="166ee-260"><xref:System.Text.Decoder.GetChars%2A> will throw an exception if the output buffer isn't large enough, but <xref:System.Text.Decoder.Convert%2A> will fill as much space as possible and return the bytes read and chars written.</span></span> <span data-ttu-id="166ee-261">Consulte também o <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> tópico para obter mais comentários.</span><span class="sxs-lookup"><span data-stu-id="166ee-261">Also see the <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> topic for more comments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="166ee-262">
            <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-262">
              <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
          <span data-ttu-id="166ee-263">-or-  <paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-263">-or-  <paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="166ee-264">
            <paramref name="byteCount" /> or <paramref name="charCount" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-264">
              <paramref name="byteCount" /> or <paramref name="charCount" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="166ee-265">
            <paramref name="charCount" /> is less than the resulting number of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-265">
              <paramref name="charCount" /> is less than the resulting number of characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="166ee-266">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Decoder.Fallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-266">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Decoder.Fallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="166ee-267">Requer confiança total para o chamador imediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-267">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="166ee-268">Este membro não pode ser usado pelo código transparente ou parcialmente confiável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-268">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Text.Decoder.GetCharCount(System.Byte*,System.Int32,System.Boolean)" />
        <altmember cref="M:System.Text.Decoder.Reset" />
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public abstract int GetChars (byte[] bytes, int byteIndex, int byteCount, char[] chars, int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetChars(unsigned int8[] bytes, int32 byteIndex, int32 byteCount, char[] chars, int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetChars (bytes As Byte(), byteIndex As Integer, byteCount As Integer, chars As Char(), charIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetChars(cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex, int byteCount, cli::array &lt;char&gt; ^ chars, int charIndex);" />
      <MemberSignature Language="F#" Value="abstract member GetChars : byte[] * int * int * char[] * int -&gt; int" Usage="decoder.GetChars (bytes, byteIndex, byteCount, chars, charIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="166ee-269">The byte array containing the sequence of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-269">The byte array containing the sequence of bytes to decode.</span>
          </span>
        </param>
        <param name="byteIndex">
          <span data-ttu-id="166ee-270">The index of the first byte to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-270">The index of the first byte to decode.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="166ee-271">The number of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-271">The number of bytes to decode.</span>
          </span>
        </param>
        <param name="chars">
          <span data-ttu-id="166ee-272">The character array to contain the resulting set of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-272">The character array to contain the resulting set of characters.</span>
          </span>
        </param>
        <param name="charIndex">
          <span data-ttu-id="166ee-273">The index at which to start writing the resulting set of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-273">The index at which to start writing the resulting set of characters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="166ee-274">When overridden in a derived class, decodes a sequence of bytes from the specified byte array and any bytes in the internal buffer into the specified character array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-274">When overridden in a derived class, decodes a sequence of bytes from the specified byte array and any bytes in the internal buffer into the specified character array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="166ee-275">The actual number of characters written into <paramref name="chars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-275">The actual number of characters written into <paramref name="chars" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="166ee-276">Lembre-se de que o <xref:System.Text.Decoder> objeto salva o estado entre chamadas para <xref:System.Text.Decoder.GetChars%2A>.</span><span class="sxs-lookup"><span data-stu-id="166ee-276">Remember that the <xref:System.Text.Decoder> object saves state between calls to <xref:System.Text.Decoder.GetChars%2A>.</span></span> <span data-ttu-id="166ee-277">Quando o aplicativo é feito com um fluxo de dados, ele deve definir a `flush` parâmetro para `true` para certificar-se de que as informações de estado seja liberadas.</span><span class="sxs-lookup"><span data-stu-id="166ee-277">When the application is done with a stream of data, it should set the `flush` parameter to `true` to make sure that the state information is flushed.</span></span> <span data-ttu-id="166ee-278">Com essa configuração, o decodificador ignora bytes inválidos no final do bloco de dados e limpa o buffer interno.</span><span class="sxs-lookup"><span data-stu-id="166ee-278">With this setting, the decoder ignores invalid bytes at the end of the data block and clears the internal buffer.</span></span>  
  
 <span data-ttu-id="166ee-279">Para calcular a matriz exata tamanho que `GetChars` requer para armazenar os caracteres resultantes, o aplicativo deve usar <xref:System.Text.Decoder.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="166ee-279">To calculate the exact array size that `GetChars` requires to store the resulting characters, the application should use <xref:System.Text.Decoder.GetCharCount%2A>.</span></span>  
  
 <span data-ttu-id="166ee-280">Se `GetChars` é chamado com `flush` definido como `false`, o decodificador armazena bytes à direita no final do bloco de dados em um buffer interno e usa-los na próxima operação de decodificação.</span><span class="sxs-lookup"><span data-stu-id="166ee-280">If `GetChars` is called with `flush` set to `false`, the decoder stores trailing bytes at the end of the data block in an internal buffer and uses them in the next decoding operation.</span></span> <span data-ttu-id="166ee-281">O aplicativo deve chamar `GetCharCount` em um bloco de dados imediatamente antes de chamar `GetChars` do mesmo bloco, para que qualquer bytes à direita do bloco anterior são incluídos no cálculo.</span><span class="sxs-lookup"><span data-stu-id="166ee-281">The application should call `GetCharCount` on a block of data immediately before calling `GetChars` on the same block, so that any trailing bytes from the previous block are included in the calculation.</span></span>  
  
 <span data-ttu-id="166ee-282">Se seu aplicativo é converter muitos segmentos de um fluxo de entrada, considere usar o <xref:System.Text.Decoder.Convert%2A> método.</span><span class="sxs-lookup"><span data-stu-id="166ee-282">If your application is to convert many segments of an input stream, consider using the <xref:System.Text.Decoder.Convert%2A> method.</span></span> <span data-ttu-id="166ee-283"><xref:System.Text.Decoder.GetChars%2A> lançará uma exceção se o buffer de saída não for grande o suficiente, mas <xref:System.Text.Decoder.Convert%2A> irá preencher tanto espaço quanto possível e retornar os bytes lidos e caracteres gravados.</span><span class="sxs-lookup"><span data-stu-id="166ee-283"><xref:System.Text.Decoder.GetChars%2A> will throw an exception if the output buffer isn't large enough, but <xref:System.Text.Decoder.Convert%2A> will fill as much space as possible and return the bytes read and chars written.</span></span> <span data-ttu-id="166ee-284">Consulte também o <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> tópico para obter mais comentários.</span><span class="sxs-lookup"><span data-stu-id="166ee-284">Also see the <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> topic for more comments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="166ee-285">O exemplo a seguir demonstra como decodificar um intervalo de elementos de uma matriz de bytes e armazená-los em uma matriz de caracteres Unicode.</span><span class="sxs-lookup"><span data-stu-id="166ee-285">The following example demonstrates how to decode a range of elements from a byte array and store them in a Unicode character array.</span></span> <span data-ttu-id="166ee-286">O <xref:System.Text.Decoder.GetCharCount%2A> método é usado para calcular o número de caracteres necessários para armazenar os elementos decodificados da matriz `bytes`.</span><span class="sxs-lookup"><span data-stu-id="166ee-286">The <xref:System.Text.Decoder.GetCharCount%2A> method is used to calculate the number of characters needed to store the decoded elements in the array `bytes`.</span></span> <span data-ttu-id="166ee-287">O <xref:System.Text.Decoder.GetChars%2A> método decodifica os elementos especificados na matriz de bytes e armazena-os na nova matriz de caracteres.</span><span class="sxs-lookup"><span data-stu-id="166ee-287">The <xref:System.Text.Decoder.GetChars%2A> method decodes the specified elements in the byte array and stores them in the new character array.</span></span>  
  
 [!code-cpp[System.Text.Decoder.GetChars Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Decoder.GetChars Example/CPP/getchars-byte[]-int32-int32-char[]-int32.cpp#1)]
 [!code-csharp[System.Text.Decoder.GetChars Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Decoder.GetChars Example/CS/getchars-byte[]-int32-int32-char[]-int32.cs#1)]
 [!code-vb[System.Text.Decoder.GetChars Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Decoder.GetChars Example/VB/getchars-byte[]-int32-int32-char[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="166ee-288">
            <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-288">
              <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
          <span data-ttu-id="166ee-289">-or-  <paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-289">-or-  <paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="166ee-290">
            <paramref name="byteIndex" /> or <paramref name="byteCount" /> or <paramref name="charIndex" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-290">
              <paramref name="byteIndex" /> or <paramref name="byteCount" /> or <paramref name="charIndex" /> is less than zero.</span>
          </span>
          <span data-ttu-id="166ee-291">-or-  <paramref name="byteindex" /> and <paramref name="byteCount" /> do not denote a valid range in <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-291">-or-  <paramref name="byteindex" /> and <paramref name="byteCount" /> do not denote a valid range in <paramref name="bytes" />.</span>
          </span>
          <span data-ttu-id="166ee-292">-or-  <paramref name="charIndex" /> is not a valid index in <paramref name="chars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-292">-or-  <paramref name="charIndex" /> is not a valid index in <paramref name="chars" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="166ee-293">
            <paramref name="chars" /> does not have enough capacity from <paramref name="charIndex" /> to the end of the array to accommodate the resulting characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-293">
              <paramref name="chars" /> does not have enough capacity from <paramref name="charIndex" /> to the end of the array to accommodate the resulting characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="166ee-294">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Decoder.Fallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-294">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Decoder.Fallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.Decoder.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.Decoder.Reset" />
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public virtual int GetChars (byte[] bytes, int byteIndex, int byteCount, char[] chars, int charIndex, bool flush);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetChars(unsigned int8[] bytes, int32 byteIndex, int32 byteCount, char[] chars, int32 charIndex, bool flush) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChars (bytes As Byte(), byteIndex As Integer, byteCount As Integer, chars As Char(), charIndex As Integer, flush As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetChars(cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex, int byteCount, cli::array &lt;char&gt; ^ chars, int charIndex, bool flush);" />
      <MemberSignature Language="F#" Value="abstract member GetChars : byte[] * int * int * char[] * int * bool -&gt; int&#xA;override this.GetChars : byte[] * int * int * char[] * int * bool -&gt; int" Usage="decoder.GetChars (bytes, byteIndex, byteCount, chars, charIndex, flush)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="flush" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="166ee-295">The byte array containing the sequence of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-295">The byte array containing the sequence of bytes to decode.</span>
          </span>
        </param>
        <param name="byteIndex">
          <span data-ttu-id="166ee-296">The index of the first byte to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-296">The index of the first byte to decode.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="166ee-297">The number of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-297">The number of bytes to decode.</span>
          </span>
        </param>
        <param name="chars">
          <span data-ttu-id="166ee-298">The character array to contain the resulting set of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-298">The character array to contain the resulting set of characters.</span>
          </span>
        </param>
        <param name="charIndex">
          <span data-ttu-id="166ee-299">The index at which to start writing the resulting set of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-299">The index at which to start writing the resulting set of characters.</span>
          </span>
        </param>
        <param name="flush">
          <span data-ttu-id="166ee-300">
            <see langword="true" /> to clear the internal state of the decoder after the conversion; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-300">
              <see langword="true" /> to clear the internal state of the decoder after the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="166ee-301">When overridden in a derived class, decodes a sequence of bytes from the specified byte array and any bytes in the internal buffer into the specified character array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-301">When overridden in a derived class, decodes a sequence of bytes from the specified byte array and any bytes in the internal buffer into the specified character array.</span>
          </span>
          <span data-ttu-id="166ee-302">A parameter indicates whether to clear the internal state of the decoder after the conversion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-302">A parameter indicates whether to clear the internal state of the decoder after the conversion.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="166ee-303">The actual number of characters written into the <paramref name="chars" /> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-303">The actual number of characters written into the <paramref name="chars" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="166ee-304">Lembre-se de que o <xref:System.Text.Decoder> objeto salva o estado entre chamadas para <xref:System.Text.Decoder.GetChars%2A>.</span><span class="sxs-lookup"><span data-stu-id="166ee-304">Remember that the <xref:System.Text.Decoder> object saves state between calls to <xref:System.Text.Decoder.GetChars%2A>.</span></span> <span data-ttu-id="166ee-305">Quando o aplicativo é feito com um fluxo de dados, ele deve definir a `flush` parâmetro para `true` para certificar-se de que as informações de estado seja liberadas.</span><span class="sxs-lookup"><span data-stu-id="166ee-305">When the application is done with a stream of data, it should set the `flush` parameter to `true` to make sure that the state information is flushed.</span></span> <span data-ttu-id="166ee-306">Com essa configuração, o decodificador ignora bytes inválidos no final do bloco de dados e limpa o buffer interno.</span><span class="sxs-lookup"><span data-stu-id="166ee-306">With this setting, the decoder ignores invalid bytes at the end of the data block and clears the internal buffer.</span></span>  
  
 <span data-ttu-id="166ee-307">Para calcular a matriz exata tamanho que `GetChars` requer para armazenar os caracteres resultantes, o aplicativo deve usar <xref:System.Text.Decoder.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="166ee-307">To calculate the exact array size that `GetChars` requires to store the resulting characters, the application should use <xref:System.Text.Decoder.GetCharCount%2A>.</span></span>  
  
 <span data-ttu-id="166ee-308">Se `GetChars` é chamado com `flush` definido como `false`, o decodificador armazena bytes à direita no final do bloco de dados em um buffer interno e usa-los na próxima operação de decodificação.</span><span class="sxs-lookup"><span data-stu-id="166ee-308">If `GetChars` is called with `flush` set to `false`, the decoder stores trailing bytes at the end of the data block in an internal buffer and uses them in the next decoding operation.</span></span> <span data-ttu-id="166ee-309">O aplicativo deve chamar `GetCharCount` em um bloco de dados imediatamente antes de chamar `GetChars` do mesmo bloco, para que qualquer bytes à direita do bloco anterior são incluídos no cálculo.</span><span class="sxs-lookup"><span data-stu-id="166ee-309">The application should call `GetCharCount` on a block of data immediately before calling `GetChars` on the same block, so that any trailing bytes from the previous block are included in the calculation.</span></span>  
  
 <span data-ttu-id="166ee-310">Se seu aplicativo é converter muitos segmentos de um fluxo de entrada, considere usar o <xref:System.Text.Decoder.Convert%2A> método.</span><span class="sxs-lookup"><span data-stu-id="166ee-310">If your application is to convert many segments of an input stream, consider using the <xref:System.Text.Decoder.Convert%2A> method.</span></span> <span data-ttu-id="166ee-311"><xref:System.Text.Decoder.GetChars%2A> lançará uma exceção se o buffer de saída não for grande o suficiente, mas <xref:System.Text.Decoder.Convert%2A> irá preencher tanto espaço quanto possível e retornar os bytes lidos e caracteres gravados.</span><span class="sxs-lookup"><span data-stu-id="166ee-311"><xref:System.Text.Decoder.GetChars%2A> will throw an exception if the output buffer isn't large enough, but <xref:System.Text.Decoder.Convert%2A> will fill as much space as possible and return the bytes read and chars written.</span></span> <span data-ttu-id="166ee-312">Consulte também o <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> tópico para obter mais comentários.</span><span class="sxs-lookup"><span data-stu-id="166ee-312">Also see the <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> topic for more comments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="166ee-313">
            <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-313">
              <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
          <span data-ttu-id="166ee-314">-or-  <paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-314">-or-  <paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="166ee-315">
            <paramref name="byteIndex" /> or <paramref name="byteCount" /> or <paramref name="charIndex" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-315">
              <paramref name="byteIndex" /> or <paramref name="byteCount" /> or <paramref name="charIndex" /> is less than zero.</span>
          </span>
          <span data-ttu-id="166ee-316">-or-  <paramref name="byteindex" /> and <paramref name="byteCount" /> do not denote a valid range in <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-316">-or-  <paramref name="byteindex" /> and <paramref name="byteCount" /> do not denote a valid range in <paramref name="bytes" />.</span>
          </span>
          <span data-ttu-id="166ee-317">-or-  <paramref name="charIndex" /> is not a valid index in <paramref name="chars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-317">-or-  <paramref name="charIndex" /> is not a valid index in <paramref name="chars" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="166ee-318">
            <paramref name="chars" /> does not have enough capacity from <paramref name="charIndex" /> to the end of the array to accommodate the resulting characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-318">
              <paramref name="chars" /> does not have enough capacity from <paramref name="charIndex" /> to the end of the array to accommodate the resulting characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="166ee-319">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Decoder.Fallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-319">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Decoder.Fallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.Decoder.GetCharCount(System.Byte[],System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.Text.Decoder.Reset" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public virtual void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Decoder.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="decoder.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="166ee-320">When overridden in a derived class, sets the decoder back to its initial state.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ee-320">When overridden in a derived class, sets the decoder back to its initial state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="166ee-321">Esse método limpa o estado interno do <xref:System.Text.Decoder> objeto.</span><span class="sxs-lookup"><span data-stu-id="166ee-321">This method clears the internal state of the <xref:System.Text.Decoder> object.</span></span> <span data-ttu-id="166ee-322">O método limpa qualquer informação de estado preservada de uma chamada anterior a <xref:System.Text.Decoder.GetChars%2A> ou <xref:System.Text.Decoder.Convert%2A>, incluindo bytes no final do bloco de dados anteriores à direita.</span><span class="sxs-lookup"><span data-stu-id="166ee-322">The method clears any state information preserved from a previous call to <xref:System.Text.Decoder.GetChars%2A> or <xref:System.Text.Decoder.Convert%2A>, including trailing bytes at the end of the previous data block.</span></span>  
  
 <span data-ttu-id="166ee-323">Seu aplicativo deve chamar o <xref:System.Text.Decoder.Reset%2A> método se desejar reutilizar o mesmo decodificador mesmo depois que uma exceção é lançada pelo <xref:System.Text.Decoder.GetChars%2A>, <xref:System.Text.Decoder.Convert%2A>, ou <xref:System.Text.Decoder.GetCharCount%2A>, ou se o decodificador alterna fluxos e começa a decodificação de outro fluxo.</span><span class="sxs-lookup"><span data-stu-id="166ee-323">Your application should call the <xref:System.Text.Decoder.Reset%2A> method if it wants to reuse the same decoder even after an exception is thrown by <xref:System.Text.Decoder.GetChars%2A>, <xref:System.Text.Decoder.Convert%2A>, or <xref:System.Text.Decoder.GetCharCount%2A>, or if the decoder switches streams and begins to decode another stream.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>