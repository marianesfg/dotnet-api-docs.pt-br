<Type Name="EncoderFallbackBuffer" FullName="System.Text.EncoderFallbackBuffer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="116c4743750d62c78bf7a85e6e5dff453828390b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class EncoderFallbackBuffer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit EncoderFallbackBuffer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.EncoderFallbackBuffer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EncoderFallbackBuffer" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncoderFallbackBuffer abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="56269-101">Fornece um buffer que permite que um manipulador de fallback retorne uma cadeia de caracteres alternativa para um codificador quando ele não é capaz de codificar um caractere de entrada.</span>
      <span class="sxs-lookup">
        <span data-stu-id="56269-101">Provides a buffer that allows a fallback handler to return an alternate string to an encoder when it cannot encode an input character.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56269-102">Uma codificação define um mapeamento entre um caractere Unicode e uma sequência codificada de bytes.</span><span class="sxs-lookup"><span data-stu-id="56269-102">An encoding defines a mapping between a Unicode character and an encoded sequence of bytes.</span></span> <span data-ttu-id="56269-103">Uma operação de codificação, que converte um caractere de entrada em uma sequência de bytes de saída, falha se nenhum mapeamento for definido para um caractere específico.</span><span class="sxs-lookup"><span data-stu-id="56269-103">An encoding operation, which converts an input character to an output byte sequence, fails if no mapping is defined for a particular character.</span></span>  
  
 <span data-ttu-id="56269-104">O .NET Framework fornece um mecanismo, chamado fallback, se uma conversão não pode ser executada de tratamento de falha.</span><span class="sxs-lookup"><span data-stu-id="56269-104">The .NET Framework provides a failure handling mechanism, called a fallback, if a conversion cannot be performed.</span></span> <span data-ttu-id="56269-105">Todos os manipuladores de fallback do codificador devem implementar o seguinte:</span><span class="sxs-lookup"><span data-stu-id="56269-105">All encoder fallback handlers must implement the following:</span></span>  
  
-   <span data-ttu-id="56269-106">Um codificador de fallback, que é representado por uma classe derivada do <xref:System.Text.EncoderFallback> classe.</span><span class="sxs-lookup"><span data-stu-id="56269-106">An encoder fallback, which is represented by a class derived from the <xref:System.Text.EncoderFallback> class.</span></span>  
  
-   <span data-ttu-id="56269-107">Um buffer de fallback do codificador, que é representado por um tipo derivado de <xref:System.Text.EncoderFallbackBuffer> classe que pode retornar uma cadeia de caracteres para a operação de conversão.</span><span class="sxs-lookup"><span data-stu-id="56269-107">An encoder fallback buffer, which is represented by a type derived from the <xref:System.Text.EncoderFallbackBuffer> class that can return a string to the conversion operation.</span></span>  
  
 <span data-ttu-id="56269-108">Sequências podem usar três estratégias para lidar com falhas de conversão:</span><span class="sxs-lookup"><span data-stu-id="56269-108">Fallbacks can use three strategies to handle conversion failures:</span></span>  
  
-   <span data-ttu-id="56269-109">Mapeamento de melhor ajuste.</span><span class="sxs-lookup"><span data-stu-id="56269-109">Best-fit mapping.</span></span> <span data-ttu-id="56269-110">O buffer de fallback do codificador pode retornar uma cadeia de caracteres que representa uma aproximação para o caractere de entrada.</span><span class="sxs-lookup"><span data-stu-id="56269-110">The encoder fallback buffer can return a string that represents a close approximation to the input character.</span></span> <span data-ttu-id="56269-111">O .NET Framework não fornece um melhor ajuste de público <xref:System.Text.EncoderFallbackBuffer> implementação.</span><span class="sxs-lookup"><span data-stu-id="56269-111">The .NET Framework does not provide a public best-fit <xref:System.Text.EncoderFallbackBuffer> implementation.</span></span>  
  
-   <span data-ttu-id="56269-112">Substituição.</span><span class="sxs-lookup"><span data-stu-id="56269-112">Replacement.</span></span> <span data-ttu-id="56269-113">O buffer de fallback do codificador pode retornar uma cadeia de caracteres, como um ponto de interrogação ("?"), que indica que um caractere não pode ser codificado.</span><span class="sxs-lookup"><span data-stu-id="56269-113">The encoder fallback buffer can return a string, such as a question mark ("?"), that indicates that a character could not be encoded.</span></span> <span data-ttu-id="56269-114">No .NET Framework, o <xref:System.Text.EncoderReplacementFallback> e <xref:System.Text.EncoderReplacementFallbackBuffer> classes fornecem uma implementação de buffer de fallback de substituição pública.</span><span class="sxs-lookup"><span data-stu-id="56269-114">In the .NET Framework, the <xref:System.Text.EncoderReplacementFallback> and <xref:System.Text.EncoderReplacementFallbackBuffer> classes provide a public replacement fallback buffer implementation.</span></span> <span data-ttu-id="56269-115">O construtor do <xref:System.Text.EncoderReplacementFallback> classe permite que você defina a cadeia de caracteres de substituição.</span><span class="sxs-lookup"><span data-stu-id="56269-115">The constructor of the <xref:System.Text.EncoderReplacementFallback> class enables you to define the replacement string.</span></span>  
  
-   <span data-ttu-id="56269-116">Exceção.</span><span class="sxs-lookup"><span data-stu-id="56269-116">Exception.</span></span> <span data-ttu-id="56269-117">O <xref:System.Text.EncoderFallbackBuffer> implementação lança uma exceção, que indica que um caractere não pode ser codificado e encerra a operação de codificação.</span><span class="sxs-lookup"><span data-stu-id="56269-117">The <xref:System.Text.EncoderFallbackBuffer> implementation throws an exception, which indicates that a character cannot be encoded, and terminates the encoding operation.</span></span> <span data-ttu-id="56269-118">Nesse caso, o manipulador de fallback deve fornecer um <xref:System.Text.EncoderFallbackBuffer> implementação, embora ele não retorna uma cadeia de caracteres para o codificador.</span><span class="sxs-lookup"><span data-stu-id="56269-118">In this case, the fallback handler must provide an <xref:System.Text.EncoderFallbackBuffer> implementation, although it does not return a string to the encoder.</span></span> <span data-ttu-id="56269-119">No .NET Framework, o <xref:System.Text.EncoderExceptionFallback> e <xref:System.Text.EncoderExceptionFallbackBuffer> classes fornecem uma implementação de fallback de exceção pública que lança um <xref:System.Text.EncoderFallbackException> quando um caractere não pode ser codificado.</span><span class="sxs-lookup"><span data-stu-id="56269-119">In the .NET Framework, the <xref:System.Text.EncoderExceptionFallback> and <xref:System.Text.EncoderExceptionFallbackBuffer> classes provide a public exception fallback implementation that throws an <xref:System.Text.EncoderFallbackException> when a character cannot be encoded.</span></span>  
  
 <span data-ttu-id="56269-120">O buffer em um <xref:System.Text.EncoderFallbackBuffer> implementação representa a cadeia de caracteres inteira a ser retornado para o codificador em resposta a um codificador de fallback.</span><span class="sxs-lookup"><span data-stu-id="56269-120">The buffer in an <xref:System.Text.EncoderFallbackBuffer> implementation represents the entire string to be returned to the encoder in response to an encoder fallback.</span></span> <span data-ttu-id="56269-121">Em geral, implementações também incluem informações de estado, como o índice do próximo caractere para retornar para o codificador e o número de caracteres restantes a serem retornadas.</span><span class="sxs-lookup"><span data-stu-id="56269-121">Generally, implementations also include state information, such as the index of the next character to return to the encoder and the number of remaining characters to be returned.</span></span> <span data-ttu-id="56269-122">Porque <xref:System.Text.EncoderFallbackBuffer> é uma classe abstrata, ele requer que as classes derivadas para implementar os seguintes membros no mínimo:</span><span class="sxs-lookup"><span data-stu-id="56269-122">Because <xref:System.Text.EncoderFallbackBuffer> is an abstract class, it requires derived classes to implement the following members at a minimum:</span></span>  
  
-   <span data-ttu-id="56269-123">Sobrecarregados <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> método, que é chamado pelo codificador quando ele não é possível codificar um caractere.</span><span class="sxs-lookup"><span data-stu-id="56269-123">The overloaded <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method, which is called by the encoder when it cannot encode a character.</span></span> <span data-ttu-id="56269-124">O codificador passa dois tipos de informações para a implementação do buffer de fallback: o caractere ou par substituto que não pode ser codificado e o índice do caractere de entrada.</span><span class="sxs-lookup"><span data-stu-id="56269-124">The encoder passes two pieces of information to the fallback buffer implementation: the character or surrogate pair that could not be encoded and the index of the character in the input.</span></span> <span data-ttu-id="56269-125">Em um manipulador de exceção de fallback do codificador, a exceção é lançada nesse método.</span><span class="sxs-lookup"><span data-stu-id="56269-125">In an encoder fallback exception handler, the exception is thrown in this method.</span></span> <span data-ttu-id="56269-126">Caso contrário, o método retornará `true` se ele fornece um fallback, ou `false` se não existir.</span><span class="sxs-lookup"><span data-stu-id="56269-126">Otherwise, the method returns `true` if it provides a fallback, or `false` if it does not.</span></span>  
  
-   <span data-ttu-id="56269-127">O <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> método, que é chamado repetidamente pelo codificador se o <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> método retornará `true`.</span><span class="sxs-lookup"><span data-stu-id="56269-127">The <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method, which is called repeatedly by the encoder if the <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method returns `true`.</span></span> <span data-ttu-id="56269-128">Em chamadas sucessivas, o manipulador deve retornar cada caractere em seu buffer.</span><span class="sxs-lookup"><span data-stu-id="56269-128">In successive calls, the handler should return each character in its buffer.</span></span> <span data-ttu-id="56269-129">Quando ele tiver retornado todos os caracteres, ele deverá retornar U + 0000.</span><span class="sxs-lookup"><span data-stu-id="56269-129">When it has returned all characters, it should return U+0000.</span></span> <span data-ttu-id="56269-130">Um manipulador de exceção sempre retorna a U + 0000.</span><span class="sxs-lookup"><span data-stu-id="56269-130">An exception handler always returns U+0000.</span></span>  
  
-   <span data-ttu-id="56269-131">O <xref:System.Text.EncoderFallbackBuffer.MovePrevious%2A> método, que tenta mover o ponteiro para a posição anterior no buffer e indica se a migração foi bem-sucedida.</span><span class="sxs-lookup"><span data-stu-id="56269-131">The <xref:System.Text.EncoderFallbackBuffer.MovePrevious%2A> method, which tries to move the pointer to the previous position in the buffer and indicates whether the move was successful.</span></span> <span data-ttu-id="56269-132">Sempre retorna um manipulador de exceção `false`.</span><span class="sxs-lookup"><span data-stu-id="56269-132">An exception handler always returns `false`.</span></span>  
  
-   <span data-ttu-id="56269-133">O <xref:System.Text.EncoderFallbackBuffer.Remaining%2A> propriedade, que indica o número de caracteres restantes a serem retornadas para o codificador.</span><span class="sxs-lookup"><span data-stu-id="56269-133">The <xref:System.Text.EncoderFallbackBuffer.Remaining%2A> property, which indicates the number of remaining characters to be returned to the encoder.</span></span> <span data-ttu-id="56269-134">Um manipulador de exceção de fallback sempre retorna zero.</span><span class="sxs-lookup"><span data-stu-id="56269-134">An exception fallback handler always returns zero.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.EncoderFallback" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EncoderFallbackBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EncoderFallbackBuffer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="56269-135">Inicializa uma nova instância da classe <see cref="T:System.Text.EncoderFallbackBuffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56269-135">Initializes a new instance of the <see cref="T:System.Text.EncoderFallbackBuffer" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Fallback">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="56269-136">Indica se uma cadeia de caracteres substituta está disponível quando a entrada original não pode ser codificada ou se a entrada original deve ser ignorada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56269-136">Indicates whether a substitute string is available when the original input cannot be encoded, or whether the original input should be ignored.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fallback">
      <MemberSignature Language="C#" Value="public abstract bool Fallback (char charUnknown, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Fallback(char charUnknown, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Fallback (charUnknown As Char, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Fallback(char charUnknown, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charUnknown" Type="System.Char" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charUnknown">
          <span data-ttu-id="56269-137">Um caractere de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56269-137">An input character.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="56269-138">A posição no índice do caractere no buffer de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56269-138">The index position of the character in the input buffer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="56269-139">Quando substituído em uma classe derivada, prepara o buffer de fallback para manipular o caractere de entrada especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56269-139">When overridden in a derived class, prepares the fallback buffer to handle the specified input character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="56269-140">
            <see langword="true" /> se o buffer de fallback pode processar <paramref name="charUnknown" />; <see langword="false" /> se o buffer de fallback ignora <paramref name="charUnknown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56269-140">
              <see langword="true" /> if the fallback buffer can process <paramref name="charUnknown" />; <see langword="false" /> if the fallback buffer ignores <paramref name="charUnknown" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56269-141">O <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> e <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> chamada de métodos <xref:System.Text.DecoderFallbackBuffer.Fallback%28System.Byte%5B%5D%2CSystem.Int32%29> se encontram um caractere de entrada desconhecido que não pode ser codificado.</span><span class="sxs-lookup"><span data-stu-id="56269-141">The <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> and <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> methods call <xref:System.Text.DecoderFallbackBuffer.Fallback%28System.Byte%5B%5D%2CSystem.Int32%29> if they encounter an unknown input character that cannot be encoded.</span></span> <span data-ttu-id="56269-142">Um valor de retorno `true` indica que o buffer de fallback pode processar o caractere de entrada, o que faz com que o método de chamada chamar o <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> método para obter cada caractere do buffer de fallback.</span><span class="sxs-lookup"><span data-stu-id="56269-142">A return value of `true` indicates that the fallback buffer can process the input character, which causes the calling method to call the <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method to obtain each character of the fallback buffer.</span></span> <span data-ttu-id="56269-143">Porque ele não processar caracteres individuais, o <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> método em um manipulador de exceção fallback lança uma exceção.</span><span class="sxs-lookup"><span data-stu-id="56269-143">Because it does not process individual characters, the <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method in an exception fallback handler throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fallback">
      <MemberSignature Language="C#" Value="public abstract bool Fallback (char charUnknownHigh, char charUnknownLow, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Fallback(char charUnknownHigh, char charUnknownLow, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Fallback (charUnknownHigh As Char, charUnknownLow As Char, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Fallback(char charUnknownHigh, char charUnknownLow, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charUnknownHigh" Type="System.Char" />
        <Parameter Name="charUnknownLow" Type="System.Char" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charUnknownHigh">
          <span data-ttu-id="56269-144">A alternativa superior do par de entradas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56269-144">The high surrogate of the input pair.</span>
          </span>
        </param>
        <param name="charUnknownLow">
          <span data-ttu-id="56269-145">A alternativa inferior do par de entradas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56269-145">The low surrogate of the input pair.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="56269-146">A posição no índice do par alternativo no buffer de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56269-146">The index position of the surrogate pair in the input buffer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="56269-147">Quando substituído em uma classe derivada, prepara o buffer de fallback para manipular o par alternativo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56269-147">When overridden in a derived class, prepares the fallback buffer to handle the specified surrogate pair.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="56269-148">
            <see langword="true" /> se o buffer de fallback pode processar <paramref name="charUnknownHigh" /> e <paramref name="charUnknownLow" />; <see langword="false" /> se o buffer de fallback ignora o par alternativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56269-148">
              <see langword="true" /> if the fallback buffer can process <paramref name="charUnknownHigh" /> and <paramref name="charUnknownLow" />; <see langword="false" /> if the fallback buffer ignores the surrogate pair.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56269-149">O <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> e <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> chamada de métodos <xref:System.Text.EncoderFallbackBuffer.Fallback%28System.Char%2CSystem.Char%2CSystem.Int32%29> se encontram um par substituto em sua entrada.</span><span class="sxs-lookup"><span data-stu-id="56269-149">The <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> and <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> methods call <xref:System.Text.EncoderFallbackBuffer.Fallback%28System.Char%2CSystem.Char%2CSystem.Int32%29> if they encounter a surrogate pair in their input.</span></span> <span data-ttu-id="56269-150">Um valor de retorno `true` indica que o buffer de fallback pode processar o par substituto, o que faz com que o método de chamada chamar o <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> método para obter cada caractere do buffer de fallback.</span><span class="sxs-lookup"><span data-stu-id="56269-150">A return value of `true` indicates that the fallback buffer can process the surrogate pair, which causes the calling method to call the <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method to obtain each character of the fallback buffer.</span></span>  <span data-ttu-id="56269-151">Porque ele não processar caracteres individuais, o <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> método em um manipulador de exceção fallback lança uma exceção.</span><span class="sxs-lookup"><span data-stu-id="56269-151">Because it does not process individual characters, the <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method in an exception fallback handler throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextChar">
      <MemberSignature Language="C#" Value="public abstract char GetNextChar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char GetNextChar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.GetNextChar" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetNextChar () As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract char GetNextChar();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="56269-152">Quando substituído em uma classe derivada, recupera o próximo caractere no buffer de fallback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56269-152">When overridden in a derived class, retrieves the next character in the fallback buffer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="56269-153">O próximo caractere no buffer de fallback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56269-153">The next character in the fallback buffer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56269-154">Uma operação de codificação chama o <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> método se a operação de encontrar um caractere desconhecido ou o par substituto na entrada.</span><span class="sxs-lookup"><span data-stu-id="56269-154">An encoding operation calls the <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method if the operation encounters an unknown character or surrogate pair in the input.</span></span> <span data-ttu-id="56269-155">Por exemplo, no caso de um caso de fallback, substituição do <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> método retorna `true`, existe uma cadeia de substituição que podem ser codificados em vez da entrada desconhecida.</span><span class="sxs-lookup"><span data-stu-id="56269-155">For example, in the case of a replacement fallback, if the <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method returns `true`, a substitute string exists that can be encoded instead of the unknown input.</span></span> <span data-ttu-id="56269-156">As chamadas de operação de codificação de <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> método repetidamente e obtém o caractere de uma cadeia de caracteres substitutos por vez.</span><span class="sxs-lookup"><span data-stu-id="56269-156">The encoding operation calls the <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method repeatedly and obtains the substitute string one character at a time.</span></span> <span data-ttu-id="56269-157">Quando todos os caracteres no buffer de fallback foram retornados para o codificador de <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> método deve retornar a U + 0000.</span><span class="sxs-lookup"><span data-stu-id="56269-157">When all characters in the fallback buffer have been returned to the encoder, the <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method should return U+0000.</span></span>  
  
 <span data-ttu-id="56269-158">Para um manipulador de fallback de exceção, o <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> método deve retornar a U + 0000.</span><span class="sxs-lookup"><span data-stu-id="56269-158">For an exception fallback handler, the <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method should return U+0000.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MovePrevious">
      <MemberSignature Language="C#" Value="public abstract bool MovePrevious ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MovePrevious() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.MovePrevious" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function MovePrevious () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool MovePrevious();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="56269-159">Quando substituído em uma classe derivada, faz com que a próxima chamada para o método <see cref="M:System.Text.EncoderFallbackBuffer.GetNextChar" /> acesse a posição do caractere do buffer de dados que é anterior à posição atual do caractere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56269-159">When overridden in a derived class, causes the next call to the <see cref="M:System.Text.EncoderFallbackBuffer.GetNextChar" /> method to access the data buffer character position that is prior to the current character position.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="56269-160">
            <see langword="true" /> se a operação <see cref="M:System.Text.EncoderFallbackBuffer.MovePrevious" /> tiver sido bem-sucedida; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56269-160">
              <see langword="true" /> if the <see cref="M:System.Text.EncoderFallbackBuffer.MovePrevious" /> operation was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56269-161">Um manipulador de exceção fallback deve retornar `false`.</span><span class="sxs-lookup"><span data-stu-id="56269-161">An exception fallback handler should return `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remaining">
      <MemberSignature Language="C#" Value="public abstract int Remaining { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Remaining" />
      <MemberSignature Language="DocId" Value="P:System.Text.EncoderFallbackBuffer.Remaining" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Remaining As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Remaining { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="56269-162">Quando substituído em uma classe derivada, obtém o número máximo de caracteres no objeto <see cref="T:System.Text.EncoderFallbackBuffer" /> atual que ainda não foi processado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56269-162">When overridden in a derived class, gets the number of characters in the current <see cref="T:System.Text.EncoderFallbackBuffer" /> object that remain to be processed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="56269-163">O número de caracteres no buffer de fallback atual que ainda não foi processada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56269-163">The number of characters in the current fallback buffer that have not yet been processed.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56269-164">O <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> método `true` se <xref:System.Text.EncoderFallbackBuffer.Remaining%2A> é um valor diferente de zero.</span><span class="sxs-lookup"><span data-stu-id="56269-164">The <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method returns `true` if <xref:System.Text.EncoderFallbackBuffer.Remaining%2A> is a nonzero value.</span></span>  
  
 <span data-ttu-id="56269-165">Para um manipulador de fallback de exceção, o <xref:System.Text.DecoderFallbackBuffer.Remaining%2A> método deve retornar zero.</span><span class="sxs-lookup"><span data-stu-id="56269-165">For an exception fallback handler, the <xref:System.Text.DecoderFallbackBuffer.Remaining%2A> method should return zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public virtual void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="56269-166">Inicializa todas as informações de dados e de estado pertencentes a esse buffer de fallback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56269-166">Initializes all data and state information pertaining to this fallback buffer.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="56269-167">Depois de chamar o <see cref="M:System.Text.EncoderFallbackBuffer.Reset" /> método, o <see cref="P:System.Text.EncoderFallbackBuffer.Remaining" /> propriedade deve retornar 0, o <see cref="M:System.Text.EncoderFallbackBuffer.GetNextChar" /> método deve retornar a U + 0000 e o <see cref="M:System.Text.EncoderFallbackBuffer.MovePrevious" /> método deve retornar <see langword="false" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="56269-167">After calling the <see cref="M:System.Text.EncoderFallbackBuffer.Reset" /> method, the <see cref="P:System.Text.EncoderFallbackBuffer.Remaining" /> property should return 0, the <see cref="M:System.Text.EncoderFallbackBuffer.GetNextChar" /> method should return U+0000, and the <see cref="M:System.Text.EncoderFallbackBuffer.MovePrevious" /> method should return <see langword="false" />.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>