<Type Name="DecoderExceptionFallback" FullName="System.Text.DecoderExceptionFallback">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="34b1a4a583811027615e6a5b6ecd9ef95616109a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30527280" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DecoderExceptionFallback : System.Text.DecoderFallback" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit DecoderExceptionFallback extends System.Text.DecoderFallback" />
  <TypeSignature Language="DocId" Value="T:System.Text.DecoderExceptionFallback" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DecoderExceptionFallback&#xA;Inherits DecoderFallback" />
  <TypeSignature Language="C++ CLI" Value="public ref class DecoderExceptionFallback sealed : System::Text::DecoderFallback" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Text.DecoderFallback</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="125ce-101">Fornece um mecanismo de tratamento de falha chamado fallback para uma sequência de bytes codificados de entrada que não pode ser convertida em um caractere de entrada.</span>
      <span class="sxs-lookup">
        <span data-stu-id="125ce-101">Provides a failure-handling mechanism, called a fallback, for an encoded input byte sequence that cannot be converted to an input character.</span>
      </span>
      <span data-ttu-id="125ce-102">O fallback lança uma exceção em vez de decodificar a sequência de bytes de entrada.</span>
      <span class="sxs-lookup">
        <span data-stu-id="125ce-102">The fallback throws an exception instead of decoding the input byte sequence.</span>
      </span>
      <span data-ttu-id="125ce-103">Essa classe não pode ser herdada.</span>
      <span class="sxs-lookup">
        <span data-stu-id="125ce-103">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="125ce-104">Uma codificação mapeia um caractere Unicode para uma sequência codificada de bytes, que posteriormente pode ser transferido para um meio físico, como um disco ou em um link de comunicação.</span><span class="sxs-lookup"><span data-stu-id="125ce-104">An encoding maps a Unicode character to an encoded sequence of bytes, which can subsequently be transferred to a physical medium, such as a disk, or over a communications link.</span></span> <span data-ttu-id="125ce-105">Caracteres podem ser mapeados de várias maneiras, e uma codificação específica é representada por um tipo derivado de <xref:System.Text.Encoding> classe.</span><span class="sxs-lookup"><span data-stu-id="125ce-105">Characters can be mapped in various ways, and a particular encoding is represented by a type derived from the <xref:System.Text.Encoding> class.</span></span> <span data-ttu-id="125ce-106">Do especificamente, o tipo de codificação `GetBytes` método codifica um caractere em uma sequência de bytes e o `GetChars` método decodifica uma sequência de bytes em um caractere.</span><span class="sxs-lookup"><span data-stu-id="125ce-106">Specifically, the encoding type's `GetBytes` method encodes a character to a byte sequence, and the `GetChars` method decodes a byte sequence to a character.</span></span>  
  
 <span data-ttu-id="125ce-107">Uma operação de decodificação pode falhar se a sequência de bytes de entrada não pode ser mapeada pela codificação.</span><span class="sxs-lookup"><span data-stu-id="125ce-107">A decoding operation can fail if the input byte sequence cannot be mapped by the encoding.</span></span> <span data-ttu-id="125ce-108">Por exemplo, um <xref:System.Text.ASCIIEncoding> objeto não é possível decodificar uma sequência de bytes que produz um caractere que tem um valor de ponto de código que está fora do intervalo de U + 0000 a U + 007F.</span><span class="sxs-lookup"><span data-stu-id="125ce-108">For example, an <xref:System.Text.ASCIIEncoding> object cannot decode a byte sequence that yields a character having a code point value that is outside the range U+0000 to U+007F.</span></span>  
  
 <span data-ttu-id="125ce-109">Em casos em que uma conversão de codificação ou decodificação não pode ser executada, o .NET Framework fornece um mecanismo de tratamento de falha chamado fallback.</span><span class="sxs-lookup"><span data-stu-id="125ce-109">In cases where an encoding or decoding conversion cannot be performed, the .NET Framework provides a failure-handling mechanism called a fallback.</span></span> <span data-ttu-id="125ce-110">Seu aplicativo pode usar o decodificador de .NET Framework predefinido fallback, ou pode criar um decodificador personalizado fallback derivado de <xref:System.Text.DecoderFallback> e <xref:System.Text.DecoderFallbackBuffer> classes.</span><span class="sxs-lookup"><span data-stu-id="125ce-110">Your application can use the predefined .NET Framework decoder fallback, or it can create a custom decoder fallback derived from the <xref:System.Text.DecoderFallback> and <xref:System.Text.DecoderFallbackBuffer> classes.</span></span>  
  
 <span data-ttu-id="125ce-111">O .NET Framework fornece duas classes predefinidas que implementam diferentes estratégias alternativas para lidar com falhas de conversão de decodificação.</span><span class="sxs-lookup"><span data-stu-id="125ce-111">The .NET Framework provides two predefined classes that implement different fallback strategies for handling decoding conversion failures.</span></span> <span data-ttu-id="125ce-112">O <xref:System.Text.DecoderReplacementFallback> classe substitui uma cadeia de caracteres fornecida no lugar de qualquer sequência de bytes de entrada que não pode ser convertida.</span><span class="sxs-lookup"><span data-stu-id="125ce-112">The <xref:System.Text.DecoderReplacementFallback> class substitutes a string provided in place of any input byte sequence that cannot be converted.</span></span> <span data-ttu-id="125ce-113">Depois que a cadeia de caracteres de substituição é emitida, a operação de decodificação continua convertendo o restante da entrada.</span><span class="sxs-lookup"><span data-stu-id="125ce-113">After the substitute string is emitted, the decoding operation continues converting the remainder of the input.</span></span> <span data-ttu-id="125ce-114">Em contraste, o <xref:System.Text.DecoderExceptionFallback> classe lança um <xref:System.Text.DecoderFallbackException> quando uma sequência de bytes inválido é encontrada.</span><span class="sxs-lookup"><span data-stu-id="125ce-114">In contrast, the <xref:System.Text.DecoderExceptionFallback> class throws a <xref:System.Text.DecoderFallbackException> when an invalid byte sequence is encountered.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="125ce-115">O exemplo de código a seguir demonstra o <xref:System.Text.DecoderExceptionFallback> e <xref:System.Text.DecoderFallbackException> classes.</span><span class="sxs-lookup"><span data-stu-id="125ce-115">The following code example demonstrates the <xref:System.Text.DecoderExceptionFallback> and <xref:System.Text.DecoderFallbackException> classes.</span></span>  
  
 [!code-cpp[sys.txt.fallbackDecExc#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.txt.fallbackDecExc/cpp/fallDecExc.cpp#1)]
 [!code-csharp[sys.txt.fallbackDecExc#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.txt.fallbackDecExc/cs/fallDecExc.cs#1)]
 [!code-vb[sys.txt.fallbackDecExc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.txt.fallbackDecExc/vb/fallDecExc.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DecoderExceptionFallback ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.DecoderExceptionFallback.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DecoderExceptionFallback();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="125ce-116">Inicializa uma nova instância da classe <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="125ce-116">Initializes a new instance of the <see cref="T:System.Text.DecoderExceptionFallback" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFallbackBuffer">
      <MemberSignature Language="C#" Value="public override System.Text.DecoderFallbackBuffer CreateFallbackBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.DecoderFallbackBuffer CreateFallbackBuffer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.DecoderExceptionFallback.CreateFallbackBuffer" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateFallbackBuffer () As DecoderFallbackBuffer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::DecoderFallbackBuffer ^ CreateFallbackBuffer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.DecoderFallbackBuffer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="125ce-117">Retorna um buffer de fallback do decodificador que gera uma exceção se não for possível converter uma sequência de bytes em um caractere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="125ce-117">Returns a decoder fallback buffer that throws an exception if it cannot convert a sequence of bytes to a character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="125ce-118">Um buffer de fallback do decodificador que gera uma exceção quando não é possível decodificar uma sequência de bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="125ce-118">A decoder fallback buffer that throws an exception when it cannot decode a byte sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="125ce-119">Um buffer de fallback do decodificador é responsável por receber e tratar a sequências de bytes que não é possível converter um decodificador de caracteres.</span><span class="sxs-lookup"><span data-stu-id="125ce-119">A decoder fallback buffer is responsible for receiving and handling byte sequences that a decoder cannot convert to characters.</span></span> <span data-ttu-id="125ce-120">Esse método retorna uma instância do <xref:System.Text.DecoderExceptionFallbackBuffer> classe, que é uma subclasse do <xref:System.Text.DecoderFallbackBuffer> classe.</span><span class="sxs-lookup"><span data-stu-id="125ce-120">This method returns an instance of the <xref:System.Text.DecoderExceptionFallbackBuffer> class, which is a subclass of  the <xref:System.Text.DecoderFallbackBuffer> class.</span></span> <span data-ttu-id="125ce-121">Um <xref:System.Text.DecoderExceptionFallbackBuffer> objeto lança um <xref:System.Text.DecoderFallbackException> exceção sempre que uma sequência de bytes é passada para o <xref:System.Text.DecoderExceptionFallbackBuffer.Fallback%2A> método.</span><span class="sxs-lookup"><span data-stu-id="125ce-121">A <xref:System.Text.DecoderExceptionFallbackBuffer> object throws an <xref:System.Text.DecoderFallbackException> exception whenever a sequence of bytes is passed to its <xref:System.Text.DecoderExceptionFallbackBuffer.Fallback%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.DecoderExceptionFallback.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="125ce-122">Um objeto derivado da classe <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="125ce-122">An object that derives from the <see cref="T:System.Text.DecoderExceptionFallback" /> class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="125ce-123">Indica se o objeto <see cref="T:System.Text.DecoderExceptionFallback" /> atual e um objeto especificado são iguais.</span>
          <span class="sxs-lookup">
            <span data-stu-id="125ce-123">Indicates whether the current <see cref="T:System.Text.DecoderExceptionFallback" /> object and a specified object are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="125ce-124">
            <see langword="true" /> se <paramref name="value" /> não for <see langword="null" /> e é um objeto <see cref="T:System.Text.DecoderExceptionFallback" />; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="125ce-124">
              <see langword="true" /> if <paramref name="value" /> is not <see langword="null" /> and is a <see cref="T:System.Text.DecoderExceptionFallback" /> object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.DecoderExceptionFallback.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="125ce-125">Recupera o código hash para essa instância.</span>
          <span class="sxs-lookup">
            <span data-stu-id="125ce-125">Retrieves the hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="125ce-126">O valor retornado é sempre o mesmo valor arbitrário e não tem nenhum significado especial.</span>
          <span class="sxs-lookup">
            <span data-stu-id="125ce-126">The return value is always the same arbitrary value, and has no special significance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="125ce-127">Porque o <xref:System.Text.DecoderExceptionFallback.GetHashCode%2A> método sempre retorna o mesmo valor, o aplicativo não deve usar esse valor para distinguir uma <xref:System.Text.DecoderExceptionFallback> objeto de outro.</span><span class="sxs-lookup"><span data-stu-id="125ce-127">Because the <xref:System.Text.DecoderExceptionFallback.GetHashCode%2A> method always returns the same value, the application should not use this value to distinguish one <xref:System.Text.DecoderExceptionFallback> object from another.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxCharCount">
      <MemberSignature Language="C#" Value="public override int MaxCharCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxCharCount" />
      <MemberSignature Language="DocId" Value="P:System.Text.DecoderExceptionFallback.MaxCharCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MaxCharCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaxCharCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="125ce-128">Obtém o número máximo de caracteres que esta instância pode retornar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="125ce-128">Gets the maximum number of characters this instance can return.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="125ce-129">O valor de retorno sempre será zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="125ce-129">The return value is always zero.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>