<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DecoderExceptionFallbackBuffer.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac571272ef1c44a9afc7d7bf5ae2a12d208d15dea16.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">71272ef1c44a9afc7d7bf5ae2a12d208d15dea16</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Text.DecoderExceptionFallbackBuffer">
          <source>Throws <ph id="ph1">&lt;see cref="T:System.Text.DecoderFallbackException" /&gt;</ph> when an encoded input byte sequence cannot be converted to a decoded output character.</source>
          <target state="translated">Gera <ph id="ph1">&lt;see cref="T:System.Text.DecoderFallbackException" /&gt;</ph> quando uma sequência de bytes codificados de entrada não pode ser convertida em um caractere de saída decodificado.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Text.DecoderExceptionFallbackBuffer">
          <source>This class cannot be inherited.</source>
          <target state="translated">Essa classe não pode ser herdada.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderExceptionFallbackBuffer">
          <source>A common reason for an encoding or decoding operation to fail is if the underlying encoding class does not provide a mapping between a character and an equivalent byte sequence.</source>
          <target state="translated">Um motivo comum para uma codificação ou decodificação de operação falhar é se a classe de codificação de base não fornece um mapeamento entre um caractere e uma sequência de bytes equivalente.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderExceptionFallbackBuffer">
          <source>If the input byte sequence cannot be converted to an output character, the decoding operation calls the <ph id="ph1">&lt;xref:System.Text.DecoderExceptionFallbackBuffer.Fallback%2A&gt;</ph> method, which throws <ph id="ph2">&lt;xref:System.Text.DecoderFallbackException&gt;</ph>.</source>
          <target state="translated">Se a sequência de bytes de entrada não pode ser convertida em um caractere de saída, a operação de decodificação chama o <ph id="ph1">&lt;xref:System.Text.DecoderExceptionFallbackBuffer.Fallback%2A&gt;</ph> método, que gera <ph id="ph2">&lt;xref:System.Text.DecoderFallbackException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderExceptionFallbackBuffer">
          <source>The <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer?displayProperty=nameWithType&gt;</ph> class, which represents a data buffer used in a decoding operation, is the base class for the <ph id="ph2">&lt;xref:System.Text.DecoderExceptionFallbackBuffer&gt;</ph> class.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer?displayProperty=nameWithType&gt;</ph> classe que representa um buffer de dados usado em uma operação de decodificação, é a classe base para o <ph id="ph2">&lt;xref:System.Text.DecoderExceptionFallbackBuffer&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderExceptionFallbackBuffer">
          <source>However, instead of a data buffer, the <ph id="ph1">&lt;xref:System.Text.DecoderExceptionFallbackBuffer&gt;</ph> class represents a standard behavior in which an exception is thrown if a decoding operation fails.</source>
          <target state="translated">No entanto, em vez de um buffer de dados, a <ph id="ph1">&lt;xref:System.Text.DecoderExceptionFallbackBuffer&gt;</ph> classe representa um comportamento padrão em que uma exceção será lançada se uma operação de decodificação falhar.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderExceptionFallbackBuffer">
          <source>No actual data buffer exists, and the members designed to manipulate such a buffer do no significant work.</source>
          <target state="translated">Não existe nenhum buffer de dados reais e os membros projetados para manipular um buffer tal façam sem um trabalho significativo.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Text.DecoderExceptionFallbackBuffer.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.DecoderExceptionFallbackBuffer" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Text.DecoderExceptionFallbackBuffer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Text.DecoderExceptionFallbackBuffer.Fallback(System.Byte[],System.Int32)">
          <source>An input array of bytes.</source>
          <target state="translated">Uma matriz de bytes de entrada.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Text.DecoderExceptionFallbackBuffer.Fallback(System.Byte[],System.Int32)">
          <source>The index position of a byte in the input.</source>
          <target state="translated">A posição do índice de um byte na entrada.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Text.DecoderExceptionFallbackBuffer.Fallback(System.Byte[],System.Int32)">
          <source>Throws <ph id="ph1">&lt;see cref="T:System.Text.DecoderFallbackException" /&gt;</ph> when the input byte sequence cannot be decoded.</source>
          <target state="translated">Gera <ph id="ph1">&lt;see cref="T:System.Text.DecoderFallbackException" /&gt;</ph> quando a sequência de bytes de entrada não pode ser decodificada.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Text.DecoderExceptionFallbackBuffer.Fallback(System.Byte[],System.Int32)">
          <source>The nominal return value is not used.</source>
          <target state="translated">O valor retornado nominal não é usado.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Text.DecoderExceptionFallbackBuffer.Fallback(System.Byte[],System.Int32)">
          <source>None.</source>
          <target state="translated">nenhuma.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Text.DecoderExceptionFallbackBuffer.Fallback(System.Byte[],System.Int32)">
          <source>No value is returned because the <ph id="ph1">&lt;see cref="M:System.Text.DecoderExceptionFallbackBuffer.Fallback(System.Byte[],System.Int32)" /&gt;</ph> method always throws an exception.</source>
          <target state="translated">Nenhum valor é retornado porque o método <ph id="ph1">&lt;see cref="M:System.Text.DecoderExceptionFallbackBuffer.Fallback(System.Byte[],System.Int32)" /&gt;</ph> sempre gera uma exceção.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Text.DecoderExceptionFallbackBuffer.Fallback(System.Byte[],System.Int32)">
          <source>The nominal return value is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">O valor retornado nominal é <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Text.DecoderExceptionFallbackBuffer.Fallback(System.Byte[],System.Int32)">
          <source>A return value is defined, although it is unchanging, because this method implements an abstract method.</source>
          <target state="translated">Um valor retornado é definido, embora seja inalterável, visto que esse método implementa um método abstrato.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.DecoderExceptionFallbackBuffer.Fallback(System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.Encoding.GetBytes%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.Decoder.Convert%2A&gt;</ph> methods call <ph id="ph3">&lt;xref:System.Text.DecoderExceptionFallbackBuffer.Fallback%2A&gt;</ph> if they encounter an unknown byte in their input.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Text.Encoding.GetBytes%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Text.Decoder.Convert%2A&gt;</ph> chamada de métodos <ph id="ph3">&lt;xref:System.Text.DecoderExceptionFallbackBuffer.Fallback%2A&gt;</ph> se encontram um byte desconhecido na entrada.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.DecoderExceptionFallbackBuffer.Fallback(System.Byte[],System.Int32)">
          <source>In response, the <ph id="ph1">&lt;xref:System.Text.DecoderExceptionFallbackBuffer.Fallback%2A&gt;</ph> method always throws <ph id="ph2">&lt;xref:System.Text.DecoderFallbackException&gt;</ph> and displays the input data.</source>
          <target state="translated">Em resposta, o <ph id="ph1">&lt;xref:System.Text.DecoderExceptionFallbackBuffer.Fallback%2A&gt;</ph> método sempre gera <ph id="ph2">&lt;xref:System.Text.DecoderFallbackException&gt;</ph> e exibe os dados de entrada.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.DecoderExceptionFallbackBuffer.Fallback(System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.DecoderExceptionFallbackBuffer.Fallback%2A&gt;</ph> method nominally indicates whether an exception is thrown if an input byte sequence cannot be decoded.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Text.DecoderExceptionFallbackBuffer.Fallback%2A&gt;</ph> método uma indica se uma exceção será lançada se uma sequência de bytes de entrada não pode ser decodificada.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Text.DecoderExceptionFallbackBuffer.Fallback(System.Byte[],System.Int32)">
          <source>This method always throws an exception that reports the value and index position of the input byte that cannot be decoded.</source>
          <target state="translated">Esse método sempre gera uma exceção que informa a posição de índice e o valor de bytes de entrada que não podem ser decodificado.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Text.DecoderExceptionFallbackBuffer.GetNextChar">
          <source>Retrieves the next character in the exception data buffer.</source>
          <target state="translated">Recupera o próximo caractere no buffer de dados de exceção.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Text.DecoderExceptionFallbackBuffer.GetNextChar">
          <source>The return value is always the Unicode character NULL (U+0000).</source>
          <target state="translated">O valor retornado sempre é o caractere Unicode NULL (U+0000).</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Text.DecoderExceptionFallbackBuffer.GetNextChar">
          <source>A return value is defined, although it is unchanging, because this method implements an abstract method.</source>
          <target state="translated">Um valor retornado é definido, embora seja inalterável, visto que esse método implementa um método abstrato.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.DecoderExceptionFallbackBuffer.GetNextChar">
          <source>Because <ph id="ph1">&lt;xref:System.Text.DecoderExceptionFallbackBuffer&gt;</ph> has no actual exception data buffer, the <ph id="ph2">&lt;xref:System.Text.DecoderExceptionFallbackBuffer.GetNextChar%2A&gt;</ph> method always returns the Unicode NULL character.</source>
          <target state="translated">Porque <ph id="ph1">&lt;xref:System.Text.DecoderExceptionFallbackBuffer&gt;</ph> não tem nenhum buffer de dados de exceção real, o <ph id="ph2">&lt;xref:System.Text.DecoderExceptionFallbackBuffer.GetNextChar%2A&gt;</ph> método sempre retorna o caractere Unicode nulo.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Text.DecoderExceptionFallbackBuffer.MovePrevious">
          <source>Causes the next call to <ph id="ph1">&lt;see cref="M:System.Text.DecoderExceptionFallbackBuffer.GetNextChar" /&gt;</ph> to access the exception data buffer character position that is prior to the current position.</source>
          <target state="translated">Faz com que a próxima chamada para <ph id="ph1">&lt;see cref="M:System.Text.DecoderExceptionFallbackBuffer.GetNextChar" /&gt;</ph> acesse a posição do caractere do buffer de dados da exceção anterior à posição atual.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Text.DecoderExceptionFallbackBuffer.MovePrevious">
          <source>The return value is always <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">O valor retornado é sempre <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Text.DecoderExceptionFallbackBuffer.MovePrevious">
          <source>A return value is defined, although it is unchanging, because this method implements an abstract method.</source>
          <target state="translated">Um valor retornado é definido, embora seja inalterável, visto que esse método implementa um método abstrato.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.DecoderExceptionFallbackBuffer.MovePrevious">
          <source>Because <ph id="ph1">&lt;xref:System.Text.DecoderExceptionFallbackBuffer&gt;</ph> has no actual exception data buffer, the <ph id="ph2">&lt;xref:System.Text.DecoderExceptionFallbackBuffer.MovePrevious%2A&gt;</ph> method always returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Porque <ph id="ph1">&lt;xref:System.Text.DecoderExceptionFallbackBuffer&gt;</ph> não tem nenhum buffer de dados de exceção real, o <ph id="ph2">&lt;xref:System.Text.DecoderExceptionFallbackBuffer.MovePrevious%2A&gt;</ph> método sempre retornará <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="P:System.Text.DecoderExceptionFallbackBuffer.Remaining">
          <source>Gets the number of characters in the current <ph id="ph1">&lt;see cref="T:System.Text.DecoderExceptionFallbackBuffer" /&gt;</ph> object that remain to be processed.</source>
          <target state="translated">Obtém o número de caracteres no objeto <ph id="ph1">&lt;see cref="T:System.Text.DecoderExceptionFallbackBuffer" /&gt;</ph> atual que ainda não foram processados.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.DecoderExceptionFallbackBuffer.Remaining">
          <source>The return value is always zero.</source>
          <target state="translated">O valor de retorno sempre será zero.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.DecoderExceptionFallbackBuffer.Remaining">
          <source>A return value is defined, although it is unchanging, because this method implements an abstract method.</source>
          <target state="translated">Um valor retornado é definido, embora seja inalterável, visto que esse método implementa um método abstrato.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.DecoderExceptionFallbackBuffer.Remaining">
          <source>Because <ph id="ph1">&lt;xref:System.Text.DecoderExceptionFallbackBuffer&gt;</ph> has no actual exception data buffer, the <ph id="ph2">&lt;xref:System.Text.DecoderExceptionFallbackBuffer.Remaining%2A&gt;</ph> property always returns zero.</source>
          <target state="translated">Porque <ph id="ph1">&lt;xref:System.Text.DecoderExceptionFallbackBuffer&gt;</ph> não tem nenhum buffer de dados de exceção real, o <ph id="ph2">&lt;xref:System.Text.DecoderExceptionFallbackBuffer.Remaining%2A&gt;</ph> propriedade sempre retorna zero.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>