<Type Name="DecoderExceptionFallbackBuffer" FullName="System.Text.DecoderExceptionFallbackBuffer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="db19f6bbbaaed6369b91c752649232bb68bc200e" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58746541" /></Metadata><TypeSignature Language="C#" Value="public sealed class DecoderExceptionFallbackBuffer : System.Text.DecoderFallbackBuffer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DecoderExceptionFallbackBuffer extends System.Text.DecoderFallbackBuffer" />
  <TypeSignature Language="DocId" Value="T:System.Text.DecoderExceptionFallbackBuffer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DecoderExceptionFallbackBuffer&#xA;Inherits DecoderFallbackBuffer" />
  <TypeSignature Language="C++ CLI" Value="public ref class DecoderExceptionFallbackBuffer sealed : System::Text::DecoderFallbackBuffer" />
  <TypeSignature Language="F#" Value="type DecoderExceptionFallbackBuffer = class&#xA;    inherit DecoderFallbackBuffer" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Text.DecoderFallbackBuffer</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Gera <see cref="T:System.Text.DecoderFallbackException" /> quando uma sequência de bytes codificados de entrada não pode ser convertida em um caractere de saída decodificado. Essa classe não pode ser herdada.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Uma razão comum para uma codificação ou decodificação operação falhe é se a classe de codificação subjacente não fornece um mapeamento entre um caractere e uma sequência de bytes equivalente. Se a sequência de bytes de entrada não pode ser convertida em um caractere de saída, a operação de decodificação chama o <xref:System.Text.DecoderExceptionFallbackBuffer.Fallback%2A> método, que gera <xref:System.Text.DecoderFallbackException>.  
  
 O <xref:System.Text.DecoderFallbackBuffer?displayProperty=nameWithType> classe, que representa um buffer de dados usado em uma operação de decodificação, é a classe base para o <xref:System.Text.DecoderExceptionFallbackBuffer> classe. No entanto, em vez de um buffer de dados, o <xref:System.Text.DecoderExceptionFallbackBuffer> classe representa um comportamento padrão em que uma exceção é lançada se uma operação de decodificação falhar. Não existe nenhum buffer de dados reais, e os membros projetados para manipular um buffer desse tipo não fazem nenhum trabalho significativo.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DecoderExceptionFallbackBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.DecoderExceptionFallbackBuffer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DecoderExceptionFallbackBuffer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Text.DecoderExceptionFallbackBuffer" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fallback">
      <MemberSignature Language="C#" Value="public override bool Fallback (byte[] bytesUnknown, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Fallback(unsigned int8[] bytesUnknown, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.DecoderExceptionFallbackBuffer.Fallback(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Fallback (bytesUnknown As Byte(), index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Fallback(cli::array &lt;System::Byte&gt; ^ bytesUnknown, int index);" />
      <MemberSignature Language="F#" Value="override this.Fallback : byte[] * int -&gt; bool" Usage="decoderExceptionFallbackBuffer.Fallback (bytesUnknown, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytesUnknown" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytesUnknown">Uma matriz de bytes de entrada.</param>
        <param name="index">A posição do índice de um byte na entrada.</param>
        <summary>Gera <see cref="T:System.Text.DecoderFallbackException" /> quando a sequência de bytes de entrada não pode ser decodificada. O valor retornado nominal não é usado.</summary>
        <returns>nenhuma. Nenhum valor é retornado porque o método <see cref="M:System.Text.DecoderExceptionFallbackBuffer.Fallback(System.Byte[],System.Int32)" /> sempre gera uma exceção.  
  
O valor retornado nominal é <see langword="true" />. Um valor retornado é definido, embora seja inalterável, visto que esse método implementa um método abstrato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Text.Encoding.GetBytes%2A> e <xref:System.Text.Decoder.Convert%2A> chamada de métodos <xref:System.Text.DecoderExceptionFallbackBuffer.Fallback%2A> se encontram um byte desconhecido em sua entrada. Em resposta, o <xref:System.Text.DecoderExceptionFallbackBuffer.Fallback%2A> método sempre gera <xref:System.Text.DecoderFallbackException> e exibe os dados de entrada. O <xref:System.Text.DecoderExceptionFallbackBuffer.Fallback%2A> método nominalmente indica se uma exceção é lançada se uma sequência de bytes de entrada não pode ser decodificada.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Text.DecoderFallbackException">Esse método sempre gera uma exceção que informa a posição de índice e o valor de bytes de entrada que não podem ser decodificado.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetNextChar">
      <MemberSignature Language="C#" Value="public override char GetNextChar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance char GetNextChar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.DecoderExceptionFallbackBuffer.GetNextChar" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetNextChar () As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override char GetNextChar();" />
      <MemberSignature Language="F#" Value="override this.GetNextChar : unit -&gt; char" Usage="decoderExceptionFallbackBuffer.GetNextChar " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera o próximo caractere no buffer de dados de exceção.</summary>
        <returns>O valor retornado sempre é o caractere Unicode NULL (U+0000).  
  
Um valor retornado é definido, embora seja inalterável, visto que esse método implementa um método abstrato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Porque <xref:System.Text.DecoderExceptionFallbackBuffer> não tem nenhum buffer de dados de exceção real, o <xref:System.Text.DecoderExceptionFallbackBuffer.GetNextChar%2A> método sempre retorna o caractere Unicode NULL.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MovePrevious">
      <MemberSignature Language="C#" Value="public override bool MovePrevious ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MovePrevious() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.DecoderExceptionFallbackBuffer.MovePrevious" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MovePrevious () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MovePrevious();" />
      <MemberSignature Language="F#" Value="override this.MovePrevious : unit -&gt; bool" Usage="decoderExceptionFallbackBuffer.MovePrevious " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Faz com que a próxima chamada para <see cref="M:System.Text.DecoderExceptionFallbackBuffer.GetNextChar" /> acesse a posição do caractere do buffer de dados da exceção anterior à posição atual.</summary>
        <returns>O valor retornado é sempre <see langword="false" />.  
  
Um valor retornado é definido, embora seja inalterável, visto que esse método implementa um método abstrato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Porque <xref:System.Text.DecoderExceptionFallbackBuffer> não tem nenhum buffer de dados de exceção real, o <xref:System.Text.DecoderExceptionFallbackBuffer.MovePrevious%2A> método sempre retorna `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remaining">
      <MemberSignature Language="C#" Value="public override int Remaining { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Remaining" />
      <MemberSignature Language="DocId" Value="P:System.Text.DecoderExceptionFallbackBuffer.Remaining" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Remaining As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Remaining { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Remaining : int" Usage="System.Text.DecoderExceptionFallbackBuffer.Remaining" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o número de caracteres no objeto <see cref="T:System.Text.DecoderExceptionFallbackBuffer" /> atual que ainda não foram processados.</summary>
        <value>O valor retornado é sempre zero.  
  
Um valor retornado é definido, embora seja inalterável, visto que esse método implementa um método abstrato.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Porque <xref:System.Text.DecoderExceptionFallbackBuffer> não tem nenhum buffer de dados de exceção real, o <xref:System.Text.DecoderExceptionFallbackBuffer.Remaining%2A> propriedade sempre retorna zero.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>