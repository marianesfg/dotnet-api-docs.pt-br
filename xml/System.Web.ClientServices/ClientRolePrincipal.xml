<Type Name="ClientRolePrincipal" FullName="System.Web.ClientServices.ClientRolePrincipal">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8fa6867d4a60fede52b3685013339f7c4704213d" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39936852" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ClientRolePrincipal : System.Security.Principal.IPrincipal" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ClientRolePrincipal extends System.Object implements class System.Security.Principal.IPrincipal" />
  <TypeSignature Language="DocId" Value="T:System.Web.ClientServices.ClientRolePrincipal" />
  <TypeSignature Language="VB.NET" Value="Public Class ClientRolePrincipal&#xA;Implements IPrincipal" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientRolePrincipal : System::Security::Principal::IPrincipal" />
  <TypeSignature Language="F#" Value="type ClientRolePrincipal = class&#xA;    interface IPrincipal" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Principal.IPrincipal</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Representa informações de segurança para serviços do aplicativo cliente, as quais incluem informações de função.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando você valida um usuário nos serviços de aplicativo do cliente, o <xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider> ou o <xref:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider> define o `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> propriedade a uma instância dessa classe. O <xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider> inicializa o <xref:System.Web.ClientServices.ClientRolePrincipal.Identity%2A> propriedade para uma nova instância do <xref:System.Web.ClientServices.ClientFormsIdentity> classe. O <xref:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider> inicializa o <xref:System.Web.ClientServices.ClientRolePrincipal.Identity%2A> propriedade para o <xref:System.Security.Principal.WindowsIdentity> objeto retornado pelo `static` <xref:System.Security.Principal.WindowsIdentity.GetCurrent?displayProperty=nameWithType> método.  
  
 Você não normalmente acessará essa classe diretamente. Normalmente, você chamará o <xref:System.Security.Principal.IPrincipal.IsInRole%2A> método da <xref:System.Security.Principal.IPrincipal> retornado pela `static` <xref:System.Threading.Thread.CurrentPrincipal%2A> propriedade. No entanto, você pode converter o <xref:System.Threading.Thread.CurrentPrincipal%2A> valor da propriedade a uma <xref:System.Web.ClientServices.ClientRolePrincipal> referência ao chamar o <xref:System.Web.ClientServices.ClientRolePrincipal.IsInRole%2A> método explicitamente, conforme demonstrado na seção de exemplo.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar essa classe para exibir um botão somente quando o usuário está na função "gerente". Este exemplo requer um <xref:System.Windows.Forms.Button> nomeado `managerOnlyButton` com um inicial <xref:System.Windows.Forms.Control.Visible%2A> valor da propriedade `false`.  
  
 [!code-csharp[ClientApplicationServices#313](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#313)]
 [!code-vb[ClientApplicationServices#313](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#313)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider" />
    <altmember cref="T:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider" />
    <altmember cref="P:System.Threading.Thread.CurrentPrincipal" />
    <altmember cref="P:System.Web.ClientServices.ClientRolePrincipal.Identity" />
    <altmember cref="T:System.Web.ClientServices.ClientFormsIdentity" />
    <altmember cref="T:System.Security.Principal.WindowsIdentity" />
    <altmember cref="T:System.Security.Principal.IPrincipal" />
    <altmember cref="M:System.Security.Principal.IPrincipal.IsInRole(System.String)" />
    <altmember cref="M:System.Web.ClientServices.ClientRolePrincipal.IsInRole(System.String)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientRolePrincipal (System.Security.Principal.IIdentity identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IIdentity identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.ClientRolePrincipal.#ctor(System.Security.Principal.IIdentity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As IIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientRolePrincipal(System::Security::Principal::IIdentity ^ identity);" />
      <MemberSignature Language="F#" Value="new System.Web.ClientServices.ClientRolePrincipal : System.Security.Principal.IIdentity -&gt; System.Web.ClientServices.ClientRolePrincipal" Usage="new System.Web.ClientServices.ClientRolePrincipal identity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IIdentity" />
      </Parameters>
      <Docs>
        <param name="identity">Representa o usuário atual.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.ClientServices.ClientRolePrincipal" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.ClientServices.ClientRolePrincipal.Identity%2A> propriedade é inicializada com o valor da `identity` parâmetro.  
  
 Quando você valida um usuário nos serviços de aplicativo do cliente, o <xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider> ou o <xref:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider> define o `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> propriedade a uma instância dessa classe. O <xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider> inicializa o <xref:System.Web.ClientServices.ClientRolePrincipal.Identity%2A> propriedade para uma nova instância do <xref:System.Web.ClientServices.ClientFormsIdentity> classe. O <xref:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider> inicializa o <xref:System.Web.ClientServices.ClientRolePrincipal.Identity%2A> propriedade para o <xref:System.Security.Principal.WindowsIdentity> objeto retornado pelo `static` <xref:System.Security.Principal.WindowsIdentity.GetCurrent?displayProperty=nameWithType> método.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider" />
        <altmember cref="T:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider" />
        <altmember cref="P:System.Threading.Thread.CurrentPrincipal" />
        <altmember cref="P:System.Web.ClientServices.ClientRolePrincipal.Identity" />
        <altmember cref="T:System.Web.ClientServices.ClientFormsIdentity" />
        <altmember cref="T:System.Security.Principal.WindowsIdentity" />
      </Docs>
    </Member>
    <Member MemberName="Identity">
      <MemberSignature Language="C#" Value="public System.Security.Principal.IIdentity Identity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IIdentity Identity" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.ClientRolePrincipal.Identity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Identity As IIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::IIdentity ^ Identity { System::Security::Principal::IIdentity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Identity : System.Security.Principal.IIdentity" Usage="System.Web.ClientServices.ClientRolePrincipal.Identity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a identidade de segurança associada a <see cref="T:System.Web.ClientServices.ClientRolePrincipal" />.</summary>
        <value>Representa o usuário atual.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando você valida um usuário nos serviços de aplicativo do cliente, o <xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider> ou o <xref:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider> define o `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> propriedade a uma instância dessa classe. O <xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider> inicializa o <xref:System.Web.ClientServices.ClientRolePrincipal.Identity%2A> propriedade para uma nova instância do <xref:System.Web.ClientServices.ClientFormsIdentity> classe. O <xref:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider> inicializa o <xref:System.Web.ClientServices.ClientRolePrincipal.Identity%2A> propriedade para o <xref:System.Security.Principal.WindowsIdentity> objeto retornado pelo `static` <xref:System.Security.Principal.WindowsIdentity.GetCurrent?displayProperty=nameWithType> método.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider" />
        <altmember cref="T:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider" />
        <altmember cref="P:System.Threading.Thread.CurrentPrincipal" />
        <altmember cref="P:System.Web.ClientServices.ClientRolePrincipal.Identity" />
        <altmember cref="T:System.Web.ClientServices.ClientFormsIdentity" />
        <altmember cref="T:System.Security.Principal.WindowsIdentity" />
      </Docs>
    </Member>
    <Member MemberName="IsInRole">
      <MemberSignature Language="C#" Value="public bool IsInRole (string role);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsInRole(string role) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.ClientRolePrincipal.IsInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsInRole (role As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsInRole(System::String ^ role);" />
      <MemberSignature Language="F#" Value="abstract member IsInRole : string -&gt; bool&#xA;override this.IsInRole : string -&gt; bool" Usage="clientRolePrincipal.IsInRole role" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="role">A função a verificar.</param>
        <summary>Obtém um valor que indica se o usuário representado por <see cref="T:System.Web.ClientServices.ClientRolePrincipal" /> está na função especificada.</summary>
        <returns>
          <see langword="true" /> se o usuário está na função especificada; <see langword="false" /> se o usuário não está autenticado ou não está na função especificada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalmente, você chamará o <xref:System.Security.Principal.IPrincipal.IsInRole%2A> método da <xref:System.Security.Principal.IPrincipal> retornado pela `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> propriedade. No entanto, você pode converter o <xref:System.Threading.Thread.CurrentPrincipal%2A> valor da propriedade a um <xref:System.Web.ClientServices.ClientRolePrincipal> referência ao chamar esse método explicitamente, conforme demonstrado na seção de exemplo.  
  
 O método <xref:System.Web.ClientServices.ClientRolePrincipal.IsInRole%2A> sempre retornará `false` se o logon do usuário tiver expirado. Isso não ocorrerá se o aplicativo chama o <xref:System.Security.Principal.IPrincipal.IsInRole%2A> método uma vez logo após a autenticação. Se seu aplicativo precisar recuperar funções de usuário em outros momentos, convém adicionar código para revalidar usuários cujo logon tiver expirado. Se todos os usuários válidos forem atribuídos às funções, você poderá determinar se o logon expirou chamando o método <xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A?displayProperty=nameWithType>. Se nenhuma função tiver sido retornada, isso significará que o logon expirou. Para ver um exemplo dessa funcionalidade, consulte o método <xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A>. Essa funcionalidade somente será necessária se você tiver selecionado **Exigir que os usuários façam logon novamente sempre que o cookie de servidor expirar** na configuração do aplicativo. Para obter mais informações, consulte [Como configurar serviços de aplicativo cliente](~/docs/framework/common-client-technologies/how-to-configure-client-application-services.md).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar esse método para exibir um botão somente quando o usuário está na função "gerente". Este exemplo requer um <xref:System.Windows.Forms.Button> nomeado `managerOnlyButton` com um inicial <xref:System.Windows.Forms.Control.Visible%2A> valor da propriedade `false`.  
  
 [!code-csharp[ClientApplicationServices#313](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#313)]
 [!code-vb[ClientApplicationServices#313](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#313)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser(System.String)" />
        <altmember cref="T:System.Security.Principal.IPrincipal" />
        <altmember cref="M:System.Security.Principal.IPrincipal.IsInRole(System.String)" />
        <altmember cref="P:System.Threading.Thread.CurrentPrincipal" />
      </Docs>
    </Member>
  </Members>
</Type>