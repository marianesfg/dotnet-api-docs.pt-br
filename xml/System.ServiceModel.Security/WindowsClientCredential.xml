<Type Name="WindowsClientCredential" FullName="System.ServiceModel.Security.WindowsClientCredential">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b7e27f9655f0faa7285462317c78f1c5ee5ae8c4" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34314000" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class WindowsClientCredential" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WindowsClientCredential extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.WindowsClientCredential" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WindowsClientCredential" />
  <TypeSignature Language="C++ CLI" Value="public ref class WindowsClientCredential sealed" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Permite que você especifique propriedades relacionadas às credenciais do Windows a ser usado para representar o cliente.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.ServiceModel.Security.WindowsClientCredential> permite a configuração das propriedades de cliente do Windows usados ao se comunicar com um serviço. O <xref:System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel%2A> define o nível de representação que o serviço pode assumir ao representar o cliente. O <xref:System.ServiceModel.Security.WindowsClientCredential.ClientCredential%2A> permite que um cliente autenticar com o nome de usuário e senha para o serviço. O <xref:System.ServiceModel.Security.WindowsClientCredential.AllowNtlm%2A> determina se o NTLM pode ser usado para autenticar o cliente se Kerberos não for usado.  
  
   
  
## Examples  
 O exemplo a seguir cria um cliente e obtém uma referência para o <xref:System.ServiceModel.Security.WindowsClientCredential>. O código, em seguida, altera o <xref:System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel%2A> para um novo valor.  
  
 [!code-csharp[WindowsClientCredential#1](~/samples/snippets/csharp/VS_Snippets_CFX/windowsclientcredential/cs/source.cs#1)]
 [!code-vb[WindowsClientCredential#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/windowsclientcredential/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AllowedImpersonationLevel">
      <MemberSignature Language="C#" Value="public System.Security.Principal.TokenImpersonationLevel AllowedImpersonationLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Principal.TokenImpersonationLevel AllowedImpersonationLevel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowedImpersonationLevel As TokenImpersonationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::TokenImpersonationLevel AllowedImpersonationLevel { System::Security::Principal::TokenImpersonationLevel get(); void set(System::Security::Principal::TokenImpersonationLevel value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.TokenImpersonationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o nível de representação permitido.</summary>
        <value>Um dos valores de <see cref="T:System.Security.Principal.TokenImpersonationLevel" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa propriedade especifica o nível de representação concedidas pelo cliente ao servidor usando a autenticação de negociação de SSPI do Windows. Observe que o nível de representação obtido pelo servidor quando ele representa o token de cliente não é apenas uma função dessa configuração. Também é uma função das configurações de domínio para a conta na qual o serviço está em execução e os privilégios associados.  
  
 O cliente deve definir explicitamente o nível de representação permitido o uso dessa propriedade.  
  
 Quando o cliente especifica a representação anônima o cliente sempre se autentica para o serviço como anônimo mesmo quando nenhuma representação é executada no serviço. Isso é devido ao comportamento subjacente do sistema operacional Windows.  
  
 Para obter mais informações sobre representação do Windows, vá para [representando e Revertendo](http://go.microsoft.com/fwlink/?LinkId=96178). Para obter mais informações sobre representação usando o Windows Communication Foundation, consulte [delegação e representação](~/docs/framework/wcf/feature-details/delegation-and-impersonation-with-wcf.md).  
  
   
  
## Examples  
 O exemplo a seguir mostra como definir essa propriedade.  
  
 [!code-csharp[WindowsClientCredential#1](~/samples/snippets/csharp/VS_Snippets_CFX/windowsclientcredential/cs/source.cs#1)]
 [!code-vb[WindowsClientCredential#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/windowsclientcredential/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowNtlm">
      <MemberSignature Language="C#" Value="public bool AllowNtlm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowNtlm" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.WindowsClientCredential.AllowNtlm" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowNtlm As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowNtlm { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se a autenticação NTLM deve ser permitida como autenticação do Windows SSPI Negotiate.</summary>
        <value>
          <see langword="true" /> para permitir que a autenticação NTLM seja permitida como autenticação do Windows SSPI Negotiate; caso contrário, <see langword="false" />. O padrão é <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Definir essa propriedade como `true` permite que a autenticação rebaixar para NTLM se Kerberos não estiver disponível.  
  
 Definir essa propriedade como `false` faz com que o Windows Communication Foundation (WCF) para fazer um esforço para lançar uma exceção se NTLM é usado. Observe que a definição dessa propriedade `false` talvez não impeçam que as credenciais do NTLM seja enviado pela conexão.  
  
 Determinadas implantações, como contas locais e grupos de trabalho exigir a autenticação NTLM. Defina esse sinalizador como `false` em tal implantações geram falhas de autenticação ao usar o WCF. Em uma implantação que requer a autenticação mútua (Kerberos só tem suportada), defina esse sinalizador como `false`.  
  
 NTLM (Windows NT LAN Manager) é o protocolo de autenticação usado em redes que incluem sistemas que executam o sistema operacional Windows NT e em sistemas autônomos.  
  
 O pacote de segurança Microsoft Kerberos proporciona maior segurança que o NTLM a sistemas em uma rede. Embora a Microsoft Kerberos é o protocolo de preferência, NTLM ainda é suportado e deve ser usado para autenticação de rede se a rede incluir sistemas que executam versões do Windows NT 4.0 e versões anteriores e em sistemas autônomos.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientCredential">
      <MemberSignature Language="C#" Value="public System.Net.NetworkCredential ClientCredential { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.NetworkCredential ClientCredential" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.WindowsClientCredential.ClientCredential" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientCredential As NetworkCredential" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::NetworkCredential ^ ClientCredential { System::Net::NetworkCredential ^ get(); void set(System::Net::NetworkCredential ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a credencial do cliente Windows.</summary>
        <value>O <see cref="T:System.Net.NetworkCredential" /> para o cliente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Por padrão, as credenciais do thread atual são usadas pelo WCF para fazer autenticação negociação de SSPI do Windows.  
  
 Para autenticar o cliente como outra entidade, alterar as propriedades da instância do <xref:System.Net.NetworkCredential> classe que é retornado por essa propriedade. Como alternativa, crie uma nova instância do <xref:System.Net.NetworkCredential> classe e atribuí-la a essa propriedade.  
  
   
  
## Examples  
 Os exemplos de código a seguir mostram como autenticar o cliente como uma entidade de segurança diferente.  
  
 Isso é como alterar as propriedades da instância do <xref:System.Net.NetworkCredential> classe que é retornado por essa propriedade.  
  
 [!code-csharp[WindowsClientCredential#2](~/samples/snippets/csharp/VS_Snippets_CFX/windowsclientcredential/cs/source.cs#2)]  
  
 Isso é como criar uma nova instância do <xref:System.Net.NetworkCredential> classe e atribuí-la a essa propriedade.  
  
 [!code-csharp[WindowsClientCredential#3](~/samples/snippets/csharp/VS_Snippets_CFX/windowsclientcredential/cs/source.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>