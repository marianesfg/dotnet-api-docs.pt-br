<Type Name="X509CertificateInitiatorServiceCredential" FullName="System.ServiceModel.Security.X509CertificateInitiatorServiceCredential">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2ff475cfc7ba2804abababaf6f60eedead065dcb" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39997562" /></Metadata><TypeSignature Language="C#" Value="public sealed class X509CertificateInitiatorServiceCredential" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit X509CertificateInitiatorServiceCredential extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class X509CertificateInitiatorServiceCredential" />
  <TypeSignature Language="C++ CLI" Value="public ref class X509CertificateInitiatorServiceCredential sealed" />
  <TypeSignature Language="F#" Value="type X509CertificateInitiatorServiceCredential = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa as configurações usadas pelo serviço para validar o certificado apresentado pelos clientes. Ele também contém um certificado do serviço a ser usado para criptografar respostas ou retornos de chamada para clientes quando o modo de autenticação de segurança de mensagem <see langword="MutualCertificateDuplex" /> é usado.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O certificado definido nessa classe é usado para criptografar mensagens para o cliente somente para associações que estão configurados com `MutualCertificateDuplex` modo de autenticação de segurança de mensagem.  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.ServiceModel.Description.ServiceCredentials.ClientCertificate" />
  </Docs>
  <Members>
    <Member MemberName="Authentication">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.X509ClientCertificateAuthentication Authentication { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.X509ClientCertificateAuthentication Authentication" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Authentication" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Authentication As X509ClientCertificateAuthentication" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Security::X509ClientCertificateAuthentication ^ Authentication { System::ServiceModel::Security::X509ClientCertificateAuthentication ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Authentication : System.ServiceModel.Security.X509ClientCertificateAuthentication" Usage="System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Authentication" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.X509ClientCertificateAuthentication</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém as configurações usadas para validar o certificado apresentado pelo cliente durante a autenticação.</summary>
        <value>As configurações usadas para validar o certificado apresentado pelo cliente durante a autenticação.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O código a seguir mostra como usar essa propriedade para definir propriedades de autenticação de certificado.  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Certificate">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate2 Certificate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate2 Certificate" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Certificate" />
      <MemberSignature Language="VB.NET" Value="Public Property Certificate As X509Certificate2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509Certificate2 ^ Certificate { System::Security::Cryptography::X509Certificates::X509Certificate2 ^ get(); void set(System::Security::Cryptography::X509Certificates::X509Certificate2 ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Certificate : System.Security.Cryptography.X509Certificates.X509Certificate2 with get, set" Usage="System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Certificate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o certificado a ser usado no modo de autenticação de segurança de mensagem <see langword="MutualCertificateDuplex" />.</summary>
        <value>O <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> ser usado para criptografar mensagens enviadas ao cliente pelo serviço no caso-se transporte duplex não correlacionadas a <see langword="MutualCertificateDuplex" /> modo de autenticação de segurança de mensagem é usado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa propriedade é usada para associações que são configuradas para o modo de segurança de mensagem quando `MutualCertificateDuplex` modo de autenticação de segurança de mensagem é usado.  
  
   
  
## Examples  
 O código a seguir mostra como usar essa propriedade para obter o certificado.  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Foi feita uma tentativa de definir uma credencial somente leitura.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetCertificate">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Define o certificado a ser usado para criptografar mensagens enviadas ao cliente pelo serviço. Essa configuração é usada somente por associações que estão configuradas com o modo de autenticação de segurança de mensagem <see langword="MutualCertificateDuplex" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetCertificate">
      <MemberSignature Language="C#" Value="public void SetCertificate (string subjectName, System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCertificate(string subjectName, valuetype System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, valuetype System.Security.Cryptography.X509Certificates.StoreName storeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCertificate(System::String ^ subjectName, System::Security::Cryptography::X509Certificates::StoreLocation storeLocation, System::Security::Cryptography::X509Certificates::StoreName storeName);" />
      <MemberSignature Language="F#" Value="member this.SetCertificate : string * System.Security.Cryptography.X509Certificates.StoreLocation * System.Security.Cryptography.X509Certificates.StoreName -&gt; unit" Usage="x509CertificateInitiatorServiceCredential.SetCertificate (subjectName, storeLocation, storeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subjectName" Type="System.String" />
        <Parameter Name="storeLocation" Type="System.Security.Cryptography.X509Certificates.StoreLocation" />
        <Parameter Name="storeName" Type="System.Security.Cryptography.X509Certificates.StoreName" />
      </Parameters>
      <Docs>
        <param name="subjectName">O nome diferenciado da entidade.</param>
        <param name="storeLocation">O local do repositório de certificados que o serviço usa para obter o certificado.</param>
        <param name="storeName">O nome do repositório de certificados X.509 a ser aberto.</param>
        <summary>Permite que você especifique o certificado a ser usado para criptografar mensagens para o cliente especificando o nome diferenciado da entidade. Essa configuração é usada somente por associações que estão configuradas com o modo de autenticação de segurança de mensagem <see langword="MutualCertificateDuplex" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obter mais informações sobre o `subjectName` parâmetro, consulte <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName%2A>.  
  
 Os valores para `storeLocation` estão incluídos no <xref:System.Security.Cryptography.X509Certificates.StoreLocation> enumeração:  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>: o repositório de certificados atribuído ao computador local (padrão).  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>: o repositório de certificados usado pelo usuário atual.  
  
 Se o aplicativo cliente é executado sob uma conta do sistema, o certificado é normalmente em <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>. Se o aplicativo cliente está em execução em uma conta de usuário, o certificado é normalmente em <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>.  
  
 Os valores para `storeName` estão incluídos no <xref:System.Security.Cryptography.X509Certificates.StoreName> enumeração.  
  
   
  
## Examples  
 O código a seguir mostra como usar esse método para definir o certificado.  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCertificate">
      <MemberSignature Language="C#" Value="public void SetCertificate (System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName, System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCertificate(valuetype System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, valuetype System.Security.Cryptography.X509Certificates.StoreName storeName, valuetype System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCertificate(System::Security::Cryptography::X509Certificates::StoreLocation storeLocation, System::Security::Cryptography::X509Certificates::StoreName storeName, System::Security::Cryptography::X509Certificates::X509FindType findType, System::Object ^ findValue);" />
      <MemberSignature Language="F#" Value="member this.SetCertificate : System.Security.Cryptography.X509Certificates.StoreLocation * System.Security.Cryptography.X509Certificates.StoreName * System.Security.Cryptography.X509Certificates.X509FindType * obj -&gt; unit" Usage="x509CertificateInitiatorServiceCredential.SetCertificate (storeLocation, storeName, findType, findValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storeLocation" Type="System.Security.Cryptography.X509Certificates.StoreLocation" />
        <Parameter Name="storeName" Type="System.Security.Cryptography.X509Certificates.StoreName" />
        <Parameter Name="findType" Type="System.Security.Cryptography.X509Certificates.X509FindType" />
        <Parameter Name="findValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="storeLocation">O local do repositório de certificados que o serviço usa para obter o certificado.</param>
        <param name="storeName">O nome do repositório de certificados X.509 a ser aberto.</param>
        <param name="findType">O tipo de pesquisa de X.509 a ser executada.</param>
        <param name="findValue">O valor a ser pesquisado no repositório de certificados X.509.</param>
        <summary>Especifica o certificado a ser usado para criptografar mensagens para o cliente. Essa configuração é usada somente por associações que estão configuradas com o modo de autenticação de segurança de mensagem <see langword="MutualCertificateDuplex" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Os valores para `storeLocation` estão incluídos no <xref:System.Security.Cryptography.X509Certificates.StoreLocation> enumeração:  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>: o repositório de certificados atribuído ao computador local (padrão).  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>: o repositório de certificados usado pelo usuário atual.  
  
 Se o aplicativo é executado sob uma conta do sistema, o certificado é normalmente em <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>. Se o aplicativo é executado sob uma conta de usuário, o certificado é normalmente em <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>.  
  
 Os valores para `storeName` estão incluídos no <xref:System.Security.Cryptography.X509Certificates.StoreName> enumeração.  
  
 Os valores para `findType` estão incluídos no <xref:System.Security.Cryptography.X509Certificates.X509FindType> enumeração.  
  
 A enumeração mais comumente usada é <xref:System.Security.Cryptography.X509Certificates.X509FindType.FindBySubjectName>, que faz uma pesquisa diferencia maiusculas de minúsculas no nome do assunto dos certificados no repositório especificado. Isso pode ser uma pesquisa imprecisa. Se nenhum certificado ou vários certificados que correspondem aos critérios forem encontrados, uma <xref:System.InvalidOperationException> é gerada.  
  
   
  
## Examples  
 O código a seguir mostra como usar esse método para definir o certificado.  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>