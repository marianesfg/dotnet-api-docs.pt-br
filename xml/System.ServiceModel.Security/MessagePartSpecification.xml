<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MessagePartSpecification.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9575d09f-9d72-4690-889e-b83c405ca456bc50c005c37f1d428f6f0bb9b04453df6eb80ed4.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bc50c005c37f1d428f6f0bb9b04453df6eb80ed4</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">254e16ae65e82f4aa59360cd8572b36b6b5b2f80</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/05/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Security.MessagePartSpecification">
          <source>Specifies which parts are included in a message.</source>
          <target state="translated">Especifica quais partes estão incluídas em uma mensagem.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Security.MessagePartSpecification">
          <source>This specification is used to indicate which message parts need to be signed and which parts need to be encrypted.</source>
          <target state="translated">Essa especificação é usada para indicar quais partes da mensagem precisam ser assinados e quais partes precisam ser criptografados.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Security.MessagePartSpecification">
          <source>Initializes a new <ph id="ph1">&lt;see cref="T:System.ServiceModel.Security.MessagePartSpecification" /&gt;</ph>.</source>
          <target state="translated">Inicializa um novo <ph id="ph1">&lt;see cref="T:System.ServiceModel.Security.MessagePartSpecification" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.MessagePartSpecification.#ctor">
          <source>Initializes an empty <ph id="ph1">&lt;see cref="T:System.ServiceModel.Security.MessagePartSpecification" /&gt;</ph>.</source>
          <target state="translated">Inicializa um <ph id="ph1">&lt;see cref="T:System.ServiceModel.Security.MessagePartSpecification" /&gt;</ph> vazio.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.MessagePartSpecification.#ctor(System.Boolean)">
          <source>Initializes whether the message body is included in the specification.</source>
          <target state="translated">Inicializa se o corpo da mensagem é incluído na especificação.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.MessagePartSpecification.#ctor(System.Boolean)">
          <source>Initializes a new <ph id="ph1">&lt;see cref="T:System.ServiceModel.Security.MessagePartSpecification" /&gt;</ph> and specifies whether the message body is included.</source>
          <target state="translated">Inicializa uma nova <ph id="ph1">&lt;see cref="T:System.ServiceModel.Security.MessagePartSpecification" /&gt;</ph> e especifica se o corpo da mensagem está incluído.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.MessagePartSpecification.#ctor(System.Xml.XmlQualifiedName[])">
          <source>The array of header types to use.</source>
          <target state="translated">A matriz de tipos de cabeçalho a usar.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.MessagePartSpecification.#ctor(System.Xml.XmlQualifiedName[])">
          <source>Initializes a new <ph id="ph1">&lt;see cref="T:System.ServiceModel.Security.MessagePartSpecification" /&gt;</ph> with an array of message headers.</source>
          <target state="translated">Inicializa uma nova <ph id="ph1">&lt;see cref="T:System.ServiceModel.Security.MessagePartSpecification" /&gt;</ph> com uma matriz de cabeçalhos de mensagem.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Security.MessagePartSpecification.#ctor(System.Xml.XmlQualifiedName[])">
          <source>Each header is specified using its name and namespace.</source>
          <target state="translated">Cada cabeçalho é especificado usando seu nome e namespace.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.MessagePartSpecification.#ctor(System.Boolean,System.Xml.XmlQualifiedName[])">
          <source>Initializes whether the message body is included in the specification.</source>
          <target state="translated">Inicializa se o corpo da mensagem é incluído na especificação.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.MessagePartSpecification.#ctor(System.Boolean,System.Xml.XmlQualifiedName[])">
          <source>The array of header types to use.</source>
          <target state="translated">A matriz de tipos de cabeçalho a usar.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.MessagePartSpecification.#ctor(System.Boolean,System.Xml.XmlQualifiedName[])">
          <source>Initializes a new <ph id="ph1">&lt;see cref="T:System.ServiceModel.Security.MessagePartSpecification" /&gt;</ph> with an array of message headers.</source>
          <target state="translated">Inicializa uma nova <ph id="ph1">&lt;see cref="T:System.ServiceModel.Security.MessagePartSpecification" /&gt;</ph> com uma matriz de cabeçalhos de mensagem.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Security.MessagePartSpecification.#ctor(System.Boolean,System.Xml.XmlQualifiedName[])">
          <source>Each header is specified using its name and namespace.</source>
          <target state="translated">Cada cabeçalho é especificado usando seu nome e namespace.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Security.MessagePartSpecification.#ctor(System.Boolean,System.Xml.XmlQualifiedName[])">
          <source>In addition, the <ph id="ph1">`isBodyIncluded`</ph> parameter specifies whether the message body is to be included or not.</source>
          <target state="translated">Além disso, o <ph id="ph1">`isBodyIncluded`</ph> parâmetro especifica se o corpo da mensagem deve ser incluída ou não.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.MessagePartSpecification.Clear">
          <source>Clears the list of headers in this specification.</source>
          <target state="translated">Limpa a lista de cabeçalhos nesta especificação.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.MessagePartSpecification.Clear">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Security.MessagePartSpecification" /&gt;</ph> is read only.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.ServiceModel.Security.MessagePartSpecification" /&gt;</ph> é somente leitura.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Security.MessagePartSpecification.HeaderTypes">
          <source>Gets the header types for this specification.</source>
          <target state="translated">Obtém os tipos de cabeçalho para essa especificação.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.MessagePartSpecification.HeaderTypes">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> that holds the header types for this message specification.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> que contém os tipos de cabeçalho para essa especificação de mensagem.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Security.MessagePartSpecification.IsBodyIncluded">
          <source>Gets or sets a value that indicates whether the message body is included in this specification.</source>
          <target state="translated">Obtém ou define um valor que indica se o corpo da mensagem está incluído nesta especificação.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.MessagePartSpecification.IsBodyIncluded">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the message body is included in this specification; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se o corpo da mensagem está incluído nesta especificação; Caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Security.MessagePartSpecification.IsBodyIncluded">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Security.MessagePartSpecification" /&gt;</ph> is read only.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.ServiceModel.Security.MessagePartSpecification" /&gt;</ph> é somente leitura.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Security.MessagePartSpecification.IsReadOnly">
          <source>Gets a value that indicates whether the specification is read only.</source>
          <target state="translated">Obtém um valor que indica se a especificação é somente leitura.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.MessagePartSpecification.IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specification is read only; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se a especificação for somente leitura; Caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.MessagePartSpecification.IsReadOnly">
          <source>You can use <ph id="ph1">&lt;xref:System.ServiceModel.Security.MessagePartSpecification.MakeReadOnly%2A&gt;</ph> to set this property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Você pode usar <ph id="ph1">&lt;xref:System.ServiceModel.Security.MessagePartSpecification.MakeReadOnly%2A&gt;</ph> para definir essa propriedade como <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.MessagePartSpecification.IsReadOnly">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Security.MessagePartSpecification.Clear%2A&gt;</ph> sets the property to <ph id="ph2">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Security.MessagePartSpecification.Clear%2A&gt;</ph> Define a propriedade como <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.MessagePartSpecification.MakeReadOnly">
          <source>Sets the specification to read only.</source>
          <target state="translated">Define a especificação como somente leitura.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Security.MessagePartSpecification.MakeReadOnly">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Security.MessagePartSpecification.Clear%2A&gt;</ph> removes all headers in the specification and makes the collection read/write.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Security.MessagePartSpecification.Clear%2A&gt;</ph> Remove todos os cabeçalhos na especificação e torna a coleção de leitura/gravação.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Security.MessagePartSpecification.NoParts">
          <source>Gets an empty instance of this class.</source>
          <target state="translated">Obtém uma instância vazia dessa classe.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.MessagePartSpecification.NoParts">
          <source>An empty instance of this class.</source>
          <target state="translated">Uma instância vazia dessa classe.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.MessagePartSpecification.NoParts">
          <source>If this property is <ph id="ph1">`null`</ph>, a new empty instance of this class is created.</source>
          <target state="translated">Se essa propriedade for <ph id="ph1">`null`</ph>, uma nova instância vazia dessa classe é criada.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.MessagePartSpecification.Union(System.ServiceModel.Security.MessagePartSpecification)">
          <source>Merges two message part specifications.</source>
          <target state="translated">Mescla duas especificações de parte da mensagem.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Security.MessagePartSpecification.Union(System.ServiceModel.Security.MessagePartSpecification)">
          <source>After the <ph id="ph1">&lt;xref:System.ServiceModel.Security.MessagePartSpecification.Union%2A&gt;</ph> method is called, the <ph id="ph2">&lt;xref:System.ServiceModel.Security.MessagePartSpecification&gt;</ph> holds all header information from both specifications, and the <ph id="ph3">&lt;xref:System.ServiceModel.Security.MessagePartSpecification.IsBodyIncluded%2A&gt;</ph> property is set to the logical OR of both specifications.</source>
          <target state="translated">Após o <ph id="ph1">&lt;xref:System.ServiceModel.Security.MessagePartSpecification.Union%2A&gt;</ph> método é chamado, o <ph id="ph2">&lt;xref:System.ServiceModel.Security.MessagePartSpecification&gt;</ph> contém todas as informações de cabeçalho de ambas as especificações e o <ph id="ph3">&lt;xref:System.ServiceModel.Security.MessagePartSpecification.IsBodyIncluded%2A&gt;</ph> propriedade é definida como lógico ou de ambas as especificações.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.MessagePartSpecification.Union(System.ServiceModel.Security.MessagePartSpecification)">
          <source>This <ph id="ph1">&lt;see cref="T:System.ServiceModel.Security.MessagePartSpecification" /&gt;</ph> is read only.</source>
          <target state="translated">Este <ph id="ph1">&lt;see cref="T:System.ServiceModel.Security.MessagePartSpecification" /&gt;</ph> é somente leitura.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.MessagePartSpecification.Union(System.ServiceModel.Security.MessagePartSpecification)">
          <source><ph id="ph1">&lt;paramref name="specification" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="specification" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>