<Type Name="SecureConversationServiceCredential" FullName="System.ServiceModel.Security.SecureConversationServiceCredential">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="604364a9fb843d960f70874b849b40c35eb11b70" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36413575" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SecureConversationServiceCredential" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SecureConversationServiceCredential extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.SecureConversationServiceCredential" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SecureConversationServiceCredential" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecureConversationServiceCredential sealed" />
  <TypeSignature Language="F#" Value="type SecureConversationServiceCredential = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="fc046-101">Fornece configurações de credencial para um serviço de conversa segura.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fc046-101">Provides credential settings for a secure conversation service.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc046-102">Conversas seguras envolvem a troca de várias mensagens e usam um Token de contexto do segurança (SCT) para garantir a segurança.</span><span class="sxs-lookup"><span data-stu-id="fc046-102">Secure conversations involve the exchange of multiple messages and use a Security Context Token (SCT) to ensure security.</span></span> <span data-ttu-id="fc046-103">O SCT é compartilhado entre as partes da comunicação para o tempo de vida de uma sessão de comunicação.</span><span class="sxs-lookup"><span data-stu-id="fc046-103">The SCT is shared among the communicating parties for the lifetime of a communications session.</span></span> <span data-ttu-id="fc046-104">Um serviço pode executar dois tipos diferentes de SCTs:</span><span class="sxs-lookup"><span data-stu-id="fc046-104">A service can issue two different kinds of SCTs:</span></span>  
  
-   <span data-ttu-id="fc046-105">A primeira é uma SCT baseadas em sessão que contém uma id exclusiva. Mensagens de executar somente a id e o serviço mantém um cache de estado de mapeamento que mapeia entre as identificações SCT e o conteúdo (como declarações, chaves de segurança e assim por diante).</span><span class="sxs-lookup"><span data-stu-id="fc046-105">The first is a session-based SCT that contains a unique id. Messages carry only the id, and the service maintains a state-mapping cache that maps between the SCT ids and contents (such as claims, security keys, and so on).</span></span> <span data-ttu-id="fc046-106">Um cliente com bom comportamento deve enviar um cancelamento SCT para ajudar a otimizar os recursos de cache do serviço.</span><span class="sxs-lookup"><span data-stu-id="fc046-106">A well-behaved client must send an SCT cancellation to help the service optimize the cache resources.</span></span> <span data-ttu-id="fc046-107">Se você criar uma instância dessa classe chamando <xref:System.ServiceModel.Channels.SecurityBindingElement.CreateSecureConversationBindingElement%2A> com o `requireCancellation` parâmetro igual a `true`, o SCT é emitido dessa maneira.</span><span class="sxs-lookup"><span data-stu-id="fc046-107">If you instantiate this class by calling <xref:System.ServiceModel.Channels.SecurityBindingElement.CreateSecureConversationBindingElement%2A> with the `requireCancellation` parameter equal to `true`, the SCT is issued in this manner.</span></span>  
  
-   <span data-ttu-id="fc046-108">O segundo é um SCT autossuficiente que reside em um cookie no cliente.</span><span class="sxs-lookup"><span data-stu-id="fc046-108">The second is a self-contained SCT that resides in a cookie on the client.</span></span> <span data-ttu-id="fc046-109">Este SCT contém as informações de estado inteiro, isso exige nem o gerenciamento de estado do serviço nem cancelamento SCT do cliente.</span><span class="sxs-lookup"><span data-stu-id="fc046-109">This SCT contains the entire state information, so requires neither state management from the service nor SCT cancellation from the client.</span></span> <span data-ttu-id="fc046-110">Isso às vezes é chamado um SCT "modo de cookie".</span><span class="sxs-lookup"><span data-stu-id="fc046-110">This is sometimes called a "cookie-mode" SCT.</span></span> <span data-ttu-id="fc046-111">Como o SCT contém as informações de estado inteiro, seu tamanho é maior que o caso com base em sessão.</span><span class="sxs-lookup"><span data-stu-id="fc046-111">Because the SCT contains the entire state information, its size is larger than in the session-based case.</span></span> <span data-ttu-id="fc046-112">Com SCTs baseadas em sessão, o serviço armazena muitas das informações de estado.</span><span class="sxs-lookup"><span data-stu-id="fc046-112">With session-based SCTs, the service stores much of the state information.</span></span> <span data-ttu-id="fc046-113">No entanto, porque ele é independente, podem ser usado em tempo de vida do serviço e persiste nas reinicialização e desligamento do serviço.</span><span class="sxs-lookup"><span data-stu-id="fc046-113">However, because it is self-contained, it can be used across service lifetime and persists across service shutdown and restart.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="SecurityContextClaimTypes">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;Type&gt; SecurityContextClaimTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Type&gt; SecurityContextClaimTypes" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SecurityContextClaimTypes As Collection(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;Type ^&gt; ^ SecurityContextClaimTypes { System::Collections::ObjectModel::Collection&lt;Type ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SecurityContextClaimTypes : System.Collections.ObjectModel.Collection&lt;Type&gt;" Usage="System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fc046-114">Obtém uma coleção de declarações <see cref="T:System.Type" /> para serialização de cookies.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc046-114">Gets a collection of the <see cref="T:System.Type" /> claims for cookie serialization.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fc046-115">Uma coleção do <see cref="T:System.Type" /> declarações para serialização de cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc046-115">A collection of the <see cref="T:System.Type" /> claims for cookie serialization.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc046-116">Para serializar declarações em cookies SCT, Windows Communication Foundation (WCF) usa <xref:System.Runtime.Serialization.DataContractSerializer> como padrão.</span><span class="sxs-lookup"><span data-stu-id="fc046-116">To serialize claims into SCT cookies, Windows Communication Foundation (WCF) uses <xref:System.Runtime.Serialization.DataContractSerializer> as the default.</span></span> <span data-ttu-id="fc046-117">Como o recurso de declaração é extensível, WCF permite que você forneça uma lista de tipos de recursos conhecidos.</span><span class="sxs-lookup"><span data-stu-id="fc046-117">Because the Claim resource is extensible, WCF allows you to provide a list of known resource types.</span></span> <span data-ttu-id="fc046-118">Isso auxilia o <xref:System.Runtime.Serialization.DataContractSerializer> durante a desserialização de declarações no cookie para que ele possa retornar objetos fortemente tipados originais.</span><span class="sxs-lookup"><span data-stu-id="fc046-118">This assists the <xref:System.Runtime.Serialization.DataContractSerializer> during deserialization of the claims in the cookie so that it can return the original strongly-typed objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc046-119">O código a seguir mostra como obter essa propriedade.</span><span class="sxs-lookup"><span data-stu-id="fc046-119">The following code shows how to get this property.</span></span>  
  
 [!code-csharp[S_UE_SecureConversationServiceCredential#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_secureconversationservicecredential/cs/source.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SecurityStateEncoder">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.SecurityStateEncoder SecurityStateEncoder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.SecurityStateEncoder SecurityStateEncoder" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder" />
      <MemberSignature Language="VB.NET" Value="Public Property SecurityStateEncoder As SecurityStateEncoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Security::SecurityStateEncoder ^ SecurityStateEncoder { System::ServiceModel::Security::SecurityStateEncoder ^ get(); void set(System::ServiceModel::Security::SecurityStateEncoder ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SecurityStateEncoder : System.ServiceModel.Security.SecurityStateEncoder with get, set" Usage="System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityStateEncoder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fc046-120">Obtém ou define um <see cref="T:System.ServiceModel.Security.SecurityStateEncoder" /> personalizado para codificar e decodificar a serialização de cookies.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc046-120">Gets or sets a customized <see cref="T:System.ServiceModel.Security.SecurityStateEncoder" /> for encoding and decoding cookie serialization.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fc046-121">Um <see cref="T:System.ServiceModel.Security.SecurityStateEncoder" /> objeto, que é uma personalização de <see cref="T:System.ServiceModel.Security.DataProtectionSecurityStateEncoder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc046-121">A <see cref="T:System.ServiceModel.Security.SecurityStateEncoder" /> object, which is a customization of <see cref="T:System.ServiceModel.Security.DataProtectionSecurityStateEncoder" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc046-122">Em modo de cookie"", um serviço emite o cliente um token de contexto de segurança (SCT) na forma de um cookie para o cliente para que ele não precisa manter qualquer estado de segurança.</span><span class="sxs-lookup"><span data-stu-id="fc046-122">In "cookie mode", a service issues the client a security context token (SCT) in the form of a cookie to the client so that it does not have to maintain any security state.</span></span> <span data-ttu-id="fc046-123">O cliente envia o cookie de volta na mensagem de solicitação para que o serviço Saiba como Desproteger e verifique se a mensagem de solicitação.</span><span class="sxs-lookup"><span data-stu-id="fc046-123">The client sends the cookie back in the request message so that the service knows how to unprotect and verify the request message.</span></span> <span data-ttu-id="fc046-124">Porque o SCT geralmente é transmitido por uma rede não segura, ele deve ser protegido.</span><span class="sxs-lookup"><span data-stu-id="fc046-124">Because the SCT is often transmitted over a non-secure network, it must be protected.</span></span>  
  
 <span data-ttu-id="fc046-125">Por padrão, o Windows Communication Foundation (WCF) usa o <xref:System.ServiceModel.Security.DataProtectionSecurityStateEncoder> classe para proteger o cookie usando a API de proteção de dados (DPAPI).</span><span class="sxs-lookup"><span data-stu-id="fc046-125">By default, Windows Communication Foundation (WCF) uses the <xref:System.ServiceModel.Security.DataProtectionSecurityStateEncoder> class to protect the cookie using the Data Protection API (DPAPI).</span></span> <span data-ttu-id="fc046-126">Para DPAPI funcionar em um ambiente de farm da Web, todos os serviços de back-end devem executar como a mesma conta de usuário de domínio.</span><span class="sxs-lookup"><span data-stu-id="fc046-126">For DPAPI to work in a Web farm environment, all the backend services must run as the same domain user account.</span></span> <span data-ttu-id="fc046-127">Em outras palavras, se o serviço que Web hospedado, o processo de trabalho de serviços de informações da Internet (IIS) deve ser configurado para ser executado como um usuário de domínio.</span><span class="sxs-lookup"><span data-stu-id="fc046-127">In other words, if the service is Web hosted, then the Internet Information Services (IIS) worker process must be configured to run as a domain user.</span></span>  
  
 <span data-ttu-id="fc046-128">Essa propriedade permite que você use um personalizado <xref:System.ServiceModel.Security.SecurityStateEncoder> para criptografar e descriptografar o cookie e não dependem de DPAPI.</span><span class="sxs-lookup"><span data-stu-id="fc046-128">This property enables you to use a customized <xref:System.ServiceModel.Security.SecurityStateEncoder> to encrypt and decrypt the cookie and not depend on DPAPI.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc046-129">O código a seguir mostra como definir essa propriedade.</span><span class="sxs-lookup"><span data-stu-id="fc046-129">The following code shows how to set this property.</span></span>  
  
 [!code-csharp[S_UE_SecureConversationServiceCredential#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_secureconversationservicecredential/cs/source.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>