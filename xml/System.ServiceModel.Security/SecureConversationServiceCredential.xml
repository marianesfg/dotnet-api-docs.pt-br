<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SecureConversationServiceCredential.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5fc877fc4133501b86d3550e57af5fff851e60669.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fc877fc4133501b86d3550e57af5fff851e60669</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Security.SecureConversationServiceCredential">
          <source>Provides credential settings for a secure conversation service.</source>
          <target state="translated">Fornece configurações de credencial para um serviço de conversa segura.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Security.SecureConversationServiceCredential">
          <source>Secure conversations involve the exchange of multiple messages and use a Security Context Token (SCT) to ensure security.</source>
          <target state="translated">Conversas seguras envolvem a troca de várias mensagens e usam um Token de contexto do segurança (SCT) para garantir a segurança.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Security.SecureConversationServiceCredential">
          <source>The SCT is shared among the communicating parties for the lifetime of a communications session.</source>
          <target state="translated">O SCT é compartilhado entre as partes da comunicação para o tempo de vida de uma sessão de comunicação.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Security.SecureConversationServiceCredential">
          <source>A service can issue two different kinds of SCTs:</source>
          <target state="translated">Um serviço pode executar dois tipos diferentes de SCTs:</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Security.SecureConversationServiceCredential">
          <source>The first is a session-based SCT that contains a unique id. Messages carry only the id, and the service maintains a state-mapping cache that maps between the SCT ids and contents (such as claims, security keys, and so on).</source>
          <target state="translated">A primeira é uma SCT baseadas em sessão que contém uma id exclusiva. Mensagens de executar somente a id e o serviço mantém um cache de estado de mapeamento que mapeia entre as identificações SCT e o conteúdo (como declarações, chaves de segurança e assim por diante).</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Security.SecureConversationServiceCredential">
          <source>A well-behaved client must send an SCT cancellation to help the service optimize the cache resources.</source>
          <target state="translated">Um cliente com bom comportamento deve enviar um cancelamento SCT para ajudar a otimizar os recursos de cache do serviço.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Security.SecureConversationServiceCredential">
          <source>If you instantiate this class by calling <ph id="ph1">&lt;xref:System.ServiceModel.Channels.SecurityBindingElement.CreateSecureConversationBindingElement%2A&gt;</ph> with the <ph id="ph2">`requireCancellation`</ph> parameter equal to <ph id="ph3">`true`</ph>, the SCT is issued in this manner.</source>
          <target state="translated">Se você criar uma instância dessa classe chamando <ph id="ph1">&lt;xref:System.ServiceModel.Channels.SecurityBindingElement.CreateSecureConversationBindingElement%2A&gt;</ph> com o <ph id="ph2">`requireCancellation`</ph> parâmetro igual a <ph id="ph3">`true`</ph>, o SCT é emitido dessa maneira.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Security.SecureConversationServiceCredential">
          <source>The second is a self-contained SCT that resides in a cookie on the client.</source>
          <target state="translated">O segundo é um SCT autossuficiente que reside em um cookie no cliente.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Security.SecureConversationServiceCredential">
          <source>This SCT contains the entire state information, so requires neither state management from the service nor SCT cancellation from the client.</source>
          <target state="translated">Este SCT contém as informações de estado inteiro, isso exige nem o gerenciamento de estado do serviço nem cancelamento SCT do cliente.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Security.SecureConversationServiceCredential">
          <source>This is sometimes called a "cookie-mode" SCT.</source>
          <target state="translated">Isso às vezes é chamado um SCT "modo de cookie".</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Security.SecureConversationServiceCredential">
          <source>Because the SCT contains the entire state information, its size is larger than in the session-based case.</source>
          <target state="translated">Como o SCT contém as informações de estado inteiro, seu tamanho é maior que o caso com base em sessão.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Security.SecureConversationServiceCredential">
          <source>With session-based SCTs, the service stores much of the state information.</source>
          <target state="translated">Com SCTs baseadas em sessão, o serviço armazena muitas das informações de estado.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Security.SecureConversationServiceCredential">
          <source>However, because it is self-contained, it can be used across service lifetime and persists across service shutdown and restart.</source>
          <target state="translated">No entanto, porque ele é independente, podem ser usado em tempo de vida do serviço e persiste nas reinicialização e desligamento do serviço.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes">
          <source>Gets a collection of the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> claims for cookie serialization.</source>
          <target state="translated">Obtém uma coleção de declarações <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> para serialização de cookies.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes">
          <source>A collection of the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> claims for cookie serialization.</source>
          <target state="translated">Uma coleção do <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> declarações para serialização de cookie.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes">
          <source>To serialize claims into SCT cookies, <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> uses <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> as the default.</source>
          <target state="translated">Para serializar declarações em cookies SCT, <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> usa <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> como padrão.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes">
          <source>Because the Claim resource is extensible, <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> allows you to provide a list of known resource types.</source>
          <target state="translated">Como o recurso de declaração é extensível, <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> permite que você forneça uma lista de tipos de recursos conhecidos.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes">
          <source>This assists the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> during deserialization of the claims in the cookie so that it can return the original strongly-typed objects.</source>
          <target state="translated">Isso auxilia o <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> durante a desserialização de declarações no cookie para que ele possa retornar objetos fortemente tipados originais.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes">
          <source>The following code shows how to get this property.</source>
          <target state="translated">O código a seguir mostra como obter essa propriedade.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder">
          <source>Gets or sets a customized <ph id="ph1">&lt;see cref="T:System.ServiceModel.Security.SecurityStateEncoder" /&gt;</ph> for encoding and decoding cookie serialization.</source>
          <target state="translated">Obtém ou define um <ph id="ph1">&lt;see cref="T:System.ServiceModel.Security.SecurityStateEncoder" /&gt;</ph> personalizado para codificar e decodificar a serialização de cookies.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.Security.SecurityStateEncoder" /&gt;</ph> object, which is a customization of <ph id="ph2">&lt;see cref="T:System.ServiceModel.Security.DataProtectionSecurityStateEncoder" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.ServiceModel.Security.SecurityStateEncoder" /&gt;</ph> objeto, que é uma personalização de <ph id="ph2">&lt;see cref="T:System.ServiceModel.Security.DataProtectionSecurityStateEncoder" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder">
          <source>In "cookie mode", a service issues the client a security context token (SCT) in the form of a cookie to the client so that it does not have to maintain any security state.</source>
          <target state="translated">Em modo de cookie"", um serviço emite o cliente um token de contexto de segurança (SCT) na forma de um cookie para o cliente para que ele não precisa manter qualquer estado de segurança.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder">
          <source>The client sends the cookie back in the request message so that the service knows how to unprotect and verify the request message.</source>
          <target state="translated">O cliente envia o cookie de volta na mensagem de solicitação para que o serviço Saiba como Desproteger e verifique se a mensagem de solicitação.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder">
          <source>Because the SCT is often transmitted over a non-secure network, it must be protected.</source>
          <target state="translated">Porque o SCT geralmente é transmitido por uma rede não segura, ele deve ser protegido.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder">
          <source>By default, <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> uses the <ph id="ph2">&lt;xref:System.ServiceModel.Security.DataProtectionSecurityStateEncoder&gt;</ph> class to protect the cookie using the Data Protection API (DPAPI).</source>
          <target state="translated">Por padrão, <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> usa o <ph id="ph2">&lt;xref:System.ServiceModel.Security.DataProtectionSecurityStateEncoder&gt;</ph> classe para proteger o cookie usando a API de proteção de dados (DPAPI).</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder">
          <source>For DPAPI to work in a Web farm environment, all the backend services must run as the same domain user account.</source>
          <target state="translated">Para DPAPI funcionar em um ambiente de farm da Web, todos os serviços de back-end devem executar como a mesma conta de usuário de domínio.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder">
          <source>In other words, if the service is Web hosted, then the Internet Information Services (IIS) worker process must be configured to run as a domain user.</source>
          <target state="translated">Em outras palavras, se o serviço que Web hospedado, o processo de trabalho de serviços de informações da Internet (IIS) deve ser configurado para ser executado como um usuário de domínio.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder">
          <source>This property enables you to use a customized <ph id="ph1">&lt;xref:System.ServiceModel.Security.SecurityStateEncoder&gt;</ph> to encrypt and decrypt the cookie and not depend on DPAPI.</source>
          <target state="translated">Essa propriedade permite que você use um personalizado <ph id="ph1">&lt;xref:System.ServiceModel.Security.SecurityStateEncoder&gt;</ph> para criptografar e descriptografar o cookie e não dependem de DPAPI.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder">
          <source>The following code shows how to set this property.</source>
          <target state="translated">O código a seguir mostra como definir essa propriedade.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>