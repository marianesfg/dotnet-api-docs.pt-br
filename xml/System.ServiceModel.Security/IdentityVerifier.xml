<Type Name="IdentityVerifier" FullName="System.ServiceModel.Security.IdentityVerifier">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e1b9f2a468d3e8aa014f2c7d6e63bb8556265e74" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class IdentityVerifier" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit IdentityVerifier extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.IdentityVerifier" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class IdentityVerifier" />
  <TypeSignature Language="C++ CLI" Value="public ref class IdentityVerifier abstract" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="4dd9f-101">Uma classe base <see langword="abstract" /> que pode ser implementada para verificar uma identidade esperada com relação a um contexto de autorização que representa um ponto de extremidade remoto ou para criar uma identidade de um endereço do ponto de extremidade.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4dd9f-101">An <see langword="abstract" /> base class that can be implemented to verify an expected identity against an authorization context that represents a remote endpoint, or to create an identity from an endpoint address.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4dd9f-102">O [!INCLUDE[indigo2](~/includes/indigo2-md.md)] chamadas de infraestrutura de <xref:System.ServiceModel.Security.IdentityVerifier.TryGetIdentity%2A> método primeiro para recuperar a identidade do serviço de mensagem.</span><span class="sxs-lookup"><span data-stu-id="4dd9f-102">The [!INCLUDE[indigo2](~/includes/indigo2-md.md)] infrastructure calls the <xref:System.ServiceModel.Security.IdentityVerifier.TryGetIdentity%2A> method first to retrieve the service's identity from the message.</span></span> <span data-ttu-id="4dd9f-103">Em seguida, chama a infraestrutura de <xref:System.ServiceModel.Security.IdentityVerifier.CheckAccess%2A> método com retornado <xref:System.ServiceModel.EndpointIdentity> e <xref:System.IdentityModel.Policy.AuthorizationContext>.</span><span class="sxs-lookup"><span data-stu-id="4dd9f-103">Next, the infrastructure calls the <xref:System.ServiceModel.Security.IdentityVerifier.CheckAccess%2A> method with the returned <xref:System.ServiceModel.EndpointIdentity> and <xref:System.IdentityModel.Policy.AuthorizationContext>.</span></span>  
  
 <span data-ttu-id="4dd9f-104">Para obter mais informações sobre a classe de implementação, consulte [como: criar um verificador de identidade do cliente personalizado](~/docs/framework/wcf/extending/how-to-create-a-custom-client-identity-verifier.md).</span><span class="sxs-lookup"><span data-stu-id="4dd9f-104">For more information about implementing the class, see [How to: Create a Custom Client Identity Verifier](~/docs/framework/wcf/extending/how-to-create-a-custom-client-identity-verifier.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected IdentityVerifier ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.IdentityVerifier.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; IdentityVerifier();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4dd9f-105">Cria uma instância dessa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd9f-105">Creates an instance of this class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckAccess">
      <MemberSignature Language="C#" Value="public abstract bool CheckAccess (System.ServiceModel.EndpointIdentity identity, System.IdentityModel.Policy.AuthorizationContext authContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CheckAccess(class System.ServiceModel.EndpointIdentity identity, class System.IdentityModel.Policy.AuthorizationContext authContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.IdentityVerifier.CheckAccess(System.ServiceModel.EndpointIdentity,System.IdentityModel.Policy.AuthorizationContext)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CheckAccess (identity As EndpointIdentity, authContext As AuthorizationContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool CheckAccess(System::ServiceModel::EndpointIdentity ^ identity, System::IdentityModel::Policy::AuthorizationContext ^ authContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identity" Type="System.ServiceModel.EndpointIdentity" />
        <Parameter Name="authContext" Type="System.IdentityModel.Policy.AuthorizationContext" />
      </Parameters>
      <Docs>
        <param name="identity">
          <span data-ttu-id="4dd9f-106">O <see cref="T:System.ServiceModel.EndpointIdentity" /> a verificar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd9f-106">The <see cref="T:System.ServiceModel.EndpointIdentity" /> to verify.</span>
          </span>
        </param>
        <param name="authContext">
          <span data-ttu-id="4dd9f-107">O <see cref="T:System.IdentityModel.Policy.AuthorizationContext" /> com relação ao qual testar a <c>identidade</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd9f-107">The <see cref="T:System.IdentityModel.Policy.AuthorizationContext" /> to test the <c>identity</c> against.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4dd9f-108">Implementa um método para verificar uma identidade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd9f-108">Implements a method to verify an identity.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4dd9f-109">
            <see langword="true" /> se a identidade for verificada; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd9f-109">
              <see langword="true" /> if the identity is verified; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="4dd9f-110">O padrão é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd9f-110">The default is <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDefault">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.IdentityVerifier CreateDefault ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Security.IdentityVerifier CreateDefault() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.IdentityVerifier.CreateDefault" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateDefault () As IdentityVerifier" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Security::IdentityVerifier ^ CreateDefault();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.IdentityVerifier</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4dd9f-111">Cria uma instância padrão dessa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd9f-111">Creates a default instance of this class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4dd9f-112">Uma instância padrão de <see cref="T:System.ServiceModel.Security.IdentityVerifier" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd9f-112">A default instance of <see cref="T:System.ServiceModel.Security.IdentityVerifier" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetIdentity">
      <MemberSignature Language="C#" Value="public abstract bool TryGetIdentity (System.ServiceModel.EndpointAddress reference, out System.ServiceModel.EndpointIdentity identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetIdentity(class System.ServiceModel.EndpointAddress reference, [out] class System.ServiceModel.EndpointIdentity&amp; identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.IdentityVerifier.TryGetIdentity(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointIdentity@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function TryGetIdentity (reference As EndpointAddress, ByRef identity As EndpointIdentity) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool TryGetIdentity(System::ServiceModel::EndpointAddress ^ reference, [Runtime::InteropServices::Out] System::ServiceModel::EndpointIdentity ^ % identity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="identity" Type="System.ServiceModel.EndpointIdentity&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="reference">
          <span data-ttu-id="4dd9f-113">O <see cref="T:System.ServiceModel.EndpointAddress" /> a ser usado para criar a identidade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd9f-113">The <see cref="T:System.ServiceModel.EndpointAddress" /> to use for creating the identity.</span>
          </span>
        </param>
        <param name="identity">
          <span data-ttu-id="4dd9f-114">O <see cref="T:System.ServiceModel.EndpointIdentity" /> que é retornado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd9f-114">The <see cref="T:System.ServiceModel.EndpointIdentity" /> that is returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4dd9f-115">Tenta criar uma identidade de um ponto de extremidade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd9f-115">Tries to create an identity from an endpoint.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4dd9f-116">
            <see langword="true" /> se a identidade for retornada; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd9f-116">
              <see langword="true" /> if the identity is returned; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="4dd9f-117">O padrão é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4dd9f-117">The default is <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4dd9f-118">O padrão <xref:System.ServiceModel.Security.IdentityVerifier> cria um <xref:System.ServiceModel.DnsEndpointIdentity> com base na parte do nome do host de <xref:System.ServiceModel.EndpointAddress.Uri%2A> se explícita <xref:System.ServiceModel.EndpointIdentity> não foi especificado como parte do <xref:System.ServiceModel.EndpointAddress>.</span><span class="sxs-lookup"><span data-stu-id="4dd9f-118">The default <xref:System.ServiceModel.Security.IdentityVerifier> creates a <xref:System.ServiceModel.DnsEndpointIdentity> based on the hostname portion of <xref:System.ServiceModel.EndpointAddress.Uri%2A> if an explicit <xref:System.ServiceModel.EndpointIdentity> has not been specified as part of the <xref:System.ServiceModel.EndpointAddress>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>