<Type Name="GenerateScriptTypeAttribute" FullName="System.Web.Script.Services.GenerateScriptTypeAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8e72b06e5592385d749529cf49ae5dbf1742fe77" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30538890" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class GenerateScriptTypeAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit GenerateScriptTypeAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Web.Script.Services.GenerateScriptTypeAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class GenerateScriptTypeAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class GenerateScriptTypeAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface | System.AttributeTargets.Method, AllowMultiple=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Especifica que o tipo de servidor deve ser gerado no objeto de proxy. Essa classe não pode ser herdada.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sites da Web habilitado para AJAX do ASP.NET, ASP.NET pode gerar automaticamente objetos de proxy para os métodos de uma classe de serviço da Web. Ele faz isso para a maioria dos tipos de nível superior para os parâmetros de entrada e valores de retorno de todos os métodos da Web que são marcados com <xref:System.Web.Script.Services.ScriptServiceAttribute>.  
  
 Em outros casos, se você objetos proxy gerado para tipos de servidor, você deve aplicar <xref:System.Web.Script.Services.GenerateScriptTypeAttribute> manualmente. Você pode aplicar <xref:System.Web.Script.Services.GenerateScriptTypeAttribute> Web próprio serviço ou para qualquer método de serviço ou `static` página método marcado com <xref:System.Web.Services.WebMethodAttribute>.  
  
 Em alguns casos, mesmo que o tipo corresponde a um parâmetro de entrada ou valor de retorno de um método de serviço Web, o proxy não será gerado automaticamente. Nesse caso, você deve usar o <xref:System.Web.Script.Services.GenerateScriptTypeAttribute> atributo para gerar o objeto de proxy para o tipo. Isso ocorre para tipos genéricos e matrizes que tenham mais de um argumento, como `Dictionary<string,<T>>`.  
  
 Uma ou mais instâncias de <xref:System.Web.Script.Services.GenerateScriptTypeAttribute> pode ser aplicado a um método ou classe de serviço da Web. ASP.NET gera uma classe de proxy ECMAScript (JavaScript) para cada tipo de nível superior que é referenciado por cada declaração de <xref:System.Web.Script.Services.GenerateScriptTypeAttribute>.  
  
> [!NOTE]
>  Se você quiser gerar objetos de proxy para tipos aninhados, você deverá aplicar manualmente <xref:System.Web.Script.Services.GenerateScriptTypeAttribute> para cada tipo aninhado. ASP.NET gera proxies apenas para tipos de nível superior e não automaticamente recursivamente aplica o atributo para tipos aninhados.  
  
 Para obter mais informações sobre como usar atributos, consulte [atributos](~/docs/standard/attributes/index.md).  
  
   
  
## Examples  
 O exemplo a seguir mostra como aplicar <xref:System.Web.Script.Services.GenerateScriptTypeAttribute> para uma classe de serviço da Web e um método Web. Como resultado, o `ColorObject` tipo e seu tipo aninhado `FavoriteColors` estão incluídos no objeto de proxy.  
  
  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GenerateScriptTypeAttribute (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Services.GenerateScriptTypeAttribute.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GenerateScriptTypeAttribute(Type ^ type);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">O tipo a ser incluído na classe proxy.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Script.Services.GenerateScriptTypeAttribute" /> para o tipo especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Script.Services.GenerateScriptTypeAttribute.ScriptTypeId%2A> propriedade é um parâmetro nomeado para esse construtor.  
  
   
  
## Examples  
 O exemplo a seguir mostra como usar <xref:System.Web.Script.Services.GenerateScriptTypeAttribute> para gerar um objeto de proxy para o tipo especificado que usa um identificador de tipo específico para o marcador de metadados.  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="type" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ScriptTypeId">
      <MemberSignature Language="C#" Value="public string ScriptTypeId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScriptTypeId" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Services.GenerateScriptTypeAttribute.ScriptTypeId" />
      <MemberSignature Language="VB.NET" Value="Public Property ScriptTypeId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ScriptTypeId { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o identificador de tipo para o marcador de metadados de tipo.</summary>
        <value>O identificador de tipo para o tipo de marcador de metadados na cadeia de caracteres serializada notação JSON (JavaScript Object). O valor padrão é o nome qualificado do assembly do tipo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta é uma propriedade opcional. Se especificado, o valor de <xref:System.Web.Script.Services.GenerateScriptTypeAttribute.ScriptTypeId%2A> é usado para o marcador de metadados de tipo ( type") na cadeia de caracteres JSON serializada em vez do nome qualificado do assembly do tipo. Durante a desserialização, o resolvedor de tipo que está associado com o <xref:System.Web.Script.Serialization.JavaScriptSerializer> objeto usará o valor de marcador de metadados de tipo para mapear para o tipo gerenciado apropriado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Services.GenerateScriptTypeAttribute.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o tipo que está incluído no objeto de proxy.</summary>
        <value>O objeto de tipo que está incluído no objeto de proxy gerado.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>