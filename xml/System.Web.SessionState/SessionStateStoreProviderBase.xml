<Type Name="SessionStateStoreProviderBase" FullName="System.Web.SessionState.SessionStateStoreProviderBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1841436a6479c0b1c33c26794c28ee86cb78e78f" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51936009" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class SessionStateStoreProviderBase : System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SessionStateStoreProviderBase extends System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.SessionState.SessionStateStoreProviderBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SessionStateStoreProviderBase&#xA;Inherits ProviderBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class SessionStateStoreProviderBase abstract : System::Configuration::Provider::ProviderBase" />
  <TypeSignature Language="F#" Value="type SessionStateStoreProviderBase = class&#xA;    inherit ProviderBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Provider.ProviderBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Define os membros necessários de um provedor de estado de sessão para um armazenamento de dados.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Estado de sessão ASP.NET lê e grava o provedor de repositório de dados de e para um armazenamento de dados usando um estado de sessão da sessão. Um provedor de armazenamento de estado de sessão é uma classe que herda o <xref:System.Web.SessionState.SessionStateStoreProviderBase> classe abstrata e substituições de seus membros com implementações específicas para os dados de armazenam. O provedor de armazenamento de estado de sessão é chamado pelo <xref:System.Web.SessionState.SessionStateModule> classe durante o processamento de uma página ASP.NET para se comunicar com o armazenamento de dados para o armazenamento e recuperação de variáveis de sessão e informações de sessão relacionado, como o valor de tempo limite.  
  
 Dados de sessão dentro de cada aplicativo do ASP.NET são armazenados separadamente para cada <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> propriedade. Aplicativos ASP.NET não compartilham dados da sessão.  
  
 Você pode especificar um personalizado <xref:System.Web.SessionState.SessionStateStoreProviderBase> implementação de um aplicativo ASP.NET, definindo o `mode` atributo da `sessionState` elemento de configuração para <xref:System.Web.SessionState.SessionStateMode.Custom> e o `customProvider` de atributo para o nome do provedor personalizado, como como mostrado no exemplo deste tópico.  
  
## <a name="locking-session-store-data"></a>Dados de Store de sessão de bloqueio  
 Como os aplicativos ASP.NET são multithread para dar suporte a responder a solicitações simultâneas, é possível que solicitações simultâneas podem tentar acessar as mesmas informações de sessão. Considere um cenário onde vários quadros em um conjunto de todos os quadros acessam o mesmo aplicativo. As solicitações separadas para cada quadro no conjunto de quadros podem ser executadas no servidor Web simultaneamente em threads diferentes. Se as páginas do ASP.NET para cada fonte de quadro acessar variáveis de estado de sessão, você pode ter vários threads acessando o armazenamento de sessão simultaneamente.  
  
 Para evitar colisões de dados no armazenamento de sessão e comportamento inesperado de estado de sessão, o <xref:System.Web.SessionState.SessionStateModule> e <xref:System.Web.SessionState.SessionStateStoreProviderBase> classes incluem a funcionalidade de bloqueio que bloqueia com exclusividade o item de repositório de sessão para uma determinada sessão durante a execução de uma página ASP.NET. Observe que mesmo se o <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> atributo está marcado como `ReadOnly`, outras páginas ASP.NET no mesmo aplicativo podem ser capazes de gravar para o armazenamento de sessão, de forma que uma solicitação para a sessão somente leitura de dados do armazenamento ainda podem acabar aguardando bloqueadas dados a serem liberada.  
  
 Um bloqueio é definido em dados de armazenamento de sessão no início da solicitação, na chamada para o <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> método. Quando a solicitação for concluída, o bloqueio será liberado durante a chamada para o <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> método.  
  
 Se o <xref:System.Web.SessionState.SessionStateModule> objeto encontrar dados de sessão bloqueado durante a chamada para o <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> ou o <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> método, ele solicitará novamente os dados da sessão em intervalos de meio segundo até que o bloqueio seja liberado ou a quantidade de tempo que o dados de sessão foi bloqueados excede o valor da <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> propriedade. Se o tempo limite de execução for excedido, o <xref:System.Web.SessionState.SessionStateModule> objeto chamará o <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> método para liberar os dados do armazenamento de sessão e solicitar os dados de armazenamento de sessão no momento.  
  
 Porque o armazenamento de sessão bloqueados dados podem ter sido liberados por uma chamada para o <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> método em um thread separado antes de chamar o <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> método para a resposta atual, é foi feita uma tentativa de definir e liberar os dados do armazenamento de estado de sessão que tem já foram liberados e modificados por outra sessão. Para evitar essa situação, o <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> e <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> métodos retornam um identificador de bloqueio. Esse identificador de bloqueio deve ser incluído com cada solicitação para modificar os dados do armazenamento de sessão bloqueado. Armazenamento de sessão dados são modificados apenas se o identificador de bloqueio no armazenamento de dados corresponde ao identificador de bloqueio fornecido pelo <xref:System.Web.SessionState.SessionStateModule>.  
  
## <a name="deleting-expired-session-store-data"></a>Excluindo dados de Store de sessão expirada  
 Quando o <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> método é chamado para uma sessão específica, os dados para essa sessão são excluídos do repositório de dados usando o <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> método; caso contrário, os dados permanecerão no armazenamento de dados da sessão para futuras solicitações de servidor para a sessão. Cabe ao <xref:System.Web.SessionState.SessionStateStoreProviderBase> implementação para excluir dados de sessão expirada.  
  
   
  
## Examples  
 Para obter um exemplo de uma implementação de provedor de armazenamento de estado de sessão, consulte [implementando um provedor de estado de sessão Store](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 O exemplo de código a seguir mostra o arquivo Web. config para um aplicativo ASP.NET que está configurado para usar um provedor de armazenamento de estado de sessão personalizado.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="OdbcSessionServices" connectionString="DSN=SessionState;" />  
  </connectionStrings>  
  
  <system.web>  
    <sessionState   
      mode="Custom"  
      customProvider="OdbcSessionProvider">  
      <providers>  
        <add name="OdbcSessionProvider"  
             type="Samples.AspNet.Session.OdbcSessionStateStore"  
             connectionStringName="OdbcSessionServices" />  
      </providers>  
    </sessionState>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Visão geral do estado de sessão ASP.NET</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SessionStateStoreProviderBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SessionStateStoreProviderBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.SessionState.SessionStateStoreProviderBase" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Não é necessário para implementar um construtor para uma classe que herda o <xref:System.Web.SessionState.SessionStateStoreProviderBase> classe abstrata. Valores de inicialização para um <xref:System.Web.SessionState.SessionStateStoreProviderBase> implementação são passados para o <xref:System.Configuration.Provider.ProviderBase.Initialize%2A> implementação do método.  
  
   
  
## Examples  
 Para obter um exemplo de uma implementação de provedor de armazenamento de estado de sessão, consulte [implementando um provedor de estado de sessão Store](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Visão geral do estado de sessão ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CreateNewStoreData">
      <MemberSignature Language="C#" Value="public abstract System.Web.SessionState.SessionStateStoreData CreateNewStoreData (System.Web.HttpContext context, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.SessionState.SessionStateStoreData CreateNewStoreData(class System.Web.HttpContext context, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData(System.Web.HttpContext,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateNewStoreData (context As HttpContext, timeout As Integer) As SessionStateStoreData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Web::SessionState::SessionStateStoreData ^ CreateNewStoreData(System::Web::HttpContext ^ context, int timeout);" />
      <MemberSignature Language="F#" Value="abstract member CreateNewStoreData : System.Web.HttpContext * int -&gt; System.Web.SessionState.SessionStateStoreData" Usage="sessionStateStoreProviderBase.CreateNewStoreData (context, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.SessionStateStoreData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">O <see cref="T:System.Web.HttpContext" /> para a solicitação atual.</param>
        <param name="timeout">O valor <see cref="P:System.Web.SessionState.HttpSessionState.Timeout" /> de estado de sessão para o novo <see cref="T:System.Web.SessionState.SessionStateStoreData" />.</param>
        <summary>Cria um novo objeto <see cref="T:System.Web.SessionState.SessionStateStoreData" /> a ser usado para a solicitação atual.</summary>
        <returns>Um novo <see cref="T:System.Web.SessionState.SessionStateStoreData" /> para a solicitação atual.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.SessionState.SessionStateModule> objeto chamadas a <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> método no início de uma solicitação para uma página ASP.NET, durante o <xref:System.Web.HttpApplication.AcquireRequestState> eventos. O <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> método é chamado se:  
  
-   a solicitação de entrada não tem nenhuma ID de sessão, ou  
  
-   a solicitação de entrada tem uma ID de sessão, mas a sessão não for encontrada no repositório de dados.  
  
 O <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> método cria um novo <xref:System.Web.SessionState.SessionStateStoreData> objeto com um vazio <xref:System.Web.SessionState.ISessionStateItemCollection> objeto, uma <xref:System.Web.HttpStaticObjectsCollection> coleta e especificado `timeout` valor. O <xref:System.Web.HttpStaticObjectsCollection> coleta para o aplicativo ASP.NET pode ser recuperada usando o <xref:System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects%2A> método.  
  
   
  
## Examples  
 Para obter um exemplo de uma implementação de provedor de armazenamento de estado de sessão, consulte [implementando um provedor de estado de sessão Store](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Visão geral do estado de sessão ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CreateUninitializedItem">
      <MemberSignature Language="C#" Value="public abstract void CreateUninitializedItem (System.Web.HttpContext context, string id, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateUninitializedItem(class System.Web.HttpContext context, string id, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem(System.Web.HttpContext,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub CreateUninitializedItem (context As HttpContext, id As String, timeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void CreateUninitializedItem(System::Web::HttpContext ^ context, System::String ^ id, int timeout);" />
      <MemberSignature Language="F#" Value="abstract member CreateUninitializedItem : System.Web.HttpContext * string * int -&gt; unit" Usage="sessionStateStoreProviderBase.CreateUninitializedItem (context, id, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">O <see cref="T:System.Web.HttpContext" /> para a solicitação atual.</param>
        <param name="id">O <see cref="P:System.Web.SessionState.HttpSessionState.SessionID" /> para a solicitação atual.</param>
        <param name="timeout">A sessão <see cref="P:System.Web.SessionState.HttpSessionState.Timeout" /> para a solicitação atual.</param>
        <summary>Adiciona um novo item de estado de sessão para o armazenamento de dados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> método é usado com sessões quando o `cookieless` e `regenerateExpiredSessionId` atributos são ambos `true`. Ter o `regenerateExpiredSessionId attribute` definido como `true` faz com que o <xref:System.Web.SessionState.SessionStateModule> objeto para gerar um novo <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> valor quando um expiradas <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> valor for encontrado.  
  
 O processo de geração de um novo <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> valor requer redirecionar o navegador para uma URL que contém o recém-gerado <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> valor. O <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> método é chamado durante a solicitação inicial que contém um expiradas <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> valor. Após o <xref:System.Web.SessionState.SessionStateModule> objeto adquire um novo <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> o valor para substituir o valor expirado, ele chama o <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> método para adicionar uma entrada não inicializada para o armazenamento de dados de estado de sessão. Então, o navegador é redirecionado para a URL que contém o recém-gerado <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> valor. A existência de entrada não inicializada no armazenamento de dados garante que a solicitação redirecionada que inclui o recém-gerado <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> valor não é confundida como uma solicitação de uma sessão expirada e é, em vez disso, tratado como uma nova sessão.  
  
 A entrada não inicializada no armazenamento de dados da sessão está associada com o recém-gerado <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> de valor e contém somente valores padrão, incluindo uma data de expiração e tempo e um valor que corresponde à `actionFlags` parâmetro do <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>e <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> métodos. A entrada não inicializada no armazenamento de estado de sessão deve incluir um `actionFlags` valor igual ao <xref:System.Web.SessionState.SessionStateActions.InitializeItem> valor de enumeração. Esse valor é passado para o <xref:System.Web.SessionState.SessionStateModule> do objeto pela <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> e <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> métodos e informa o <xref:System.Web.SessionState.SessionStateModule> objeto que a sessão atual é um novo mas não inicializada a sessão. O <xref:System.Web.SessionState.SessionStateModule> objeto irá inicializar a nova sessão e gerar o `Session_OnStart` eventos.  
  
 Para obter mais informações sobre sessões sem cookies, consulte o <xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A> propriedade.  
  
   
  
## Examples  
 Para obter um exemplo de uma implementação de provedor de armazenamento de estado de sessão, consulte [implementando um provedor de estado de sessão Store](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Visão geral do estado de sessão ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public abstract void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit" Usage="sessionStateStoreProviderBase.Dispose " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Libera todos os recursos usados pela implementação <see cref="T:System.Web.SessionState.SessionStateStoreProviderBase" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.SessionState.SessionStateStoreProviderBase.Dispose%2A?displayProperty=nameWithType> método é chamado quando o <xref:System.Web.SessionState.SessionStateModule.Dispose%2A?displayProperty=nameWithType> método é executado no fechamento do domínio do aplicativo. As classes que herdam a <xref:System.Web.SessionState.SessionStateStoreProviderBase> classe pode usar esse método para liberar quaisquer recursos não mais em uso.  
  
   
  
## Examples  
 Para obter um exemplo de uma implementação de provedor de armazenamento de estado de sessão, consulte [implementando um provedor de estado de sessão Store](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Visão geral do estado de sessão ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="EndRequest">
      <MemberSignature Language="C#" Value="public abstract void EndRequest (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndRequest(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.EndRequest(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub EndRequest (context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void EndRequest(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member EndRequest : System.Web.HttpContext -&gt; unit" Usage="sessionStateStoreProviderBase.EndRequest context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">O <see cref="T:System.Web.HttpContext" /> para a solicitação atual.</param>
        <summary>Chamado pelo <see cref="T:System.Web.SessionState.SessionStateModule" /> objeto ao final de uma solicitação.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.SessionState.SessionStateModule> objeto chamadas a <xref:System.Web.SessionState.SessionStateStoreProviderBase.EndRequest%2A> método no final de uma solicitação para uma página ASP.NET, durante o <xref:System.Web.HttpApplication.EndRequest> eventos. Você pode usar o <xref:System.Web.SessionState.SessionStateStoreProviderBase.EndRequest%2A> método para executar qualquer limpeza por solicitação exigida pelo seu provedor de armazenamento de estado de sessão.  
  
   
  
## Examples  
 Para obter um exemplo de uma implementação de provedor de armazenamento de estado de sessão, consulte [implementando um provedor de estado de sessão Store](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Visão geral do estado de sessão ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetItem">
      <MemberSignature Language="C#" Value="public abstract System.Web.SessionState.SessionStateStoreData GetItem (System.Web.HttpContext context, string id, out bool locked, out TimeSpan lockAge, out object lockId, out System.Web.SessionState.SessionStateActions actions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.SessionState.SessionStateStoreData GetItem(class System.Web.HttpContext context, string id, [out] bool&amp; locked, [out] valuetype System.TimeSpan&amp; lockAge, [out] object&amp; lockId, [out] valuetype System.Web.SessionState.SessionStateActions&amp; actions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.GetItem(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetItem (context As HttpContext, id As String, ByRef locked As Boolean, ByRef lockAge As TimeSpan, ByRef lockId As Object, ByRef actions As SessionStateActions) As SessionStateStoreData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Web::SessionState::SessionStateStoreData ^ GetItem(System::Web::HttpContext ^ context, System::String ^ id, [Runtime::InteropServices::Out] bool % locked, [Runtime::InteropServices::Out] TimeSpan % lockAge, [Runtime::InteropServices::Out] System::Object ^ % lockId, [Runtime::InteropServices::Out] System::Web::SessionState::SessionStateActions % actions);" />
      <MemberSignature Language="F#" Value="abstract member GetItem : System.Web.HttpContext * string *  *  *  *  -&gt; System.Web.SessionState.SessionStateStoreData" Usage="sessionStateStoreProviderBase.GetItem (context, id, locked, lockAge, lockId, actions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.SessionStateStoreData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="locked" Type="System.Boolean" RefType="out" />
        <Parameter Name="lockAge" Type="System.TimeSpan" RefType="out" />
        <Parameter Name="lockId" Type="System.Object" RefType="out" />
        <Parameter Name="actions" Type="System.Web.SessionState.SessionStateActions" RefType="out" />
      </Parameters>
      <Docs>
        <param name="context">O <see cref="T:System.Web.HttpContext" /> para a solicitação atual.</param>
        <param name="id">O <see cref="P:System.Web.SessionState.HttpSessionState.SessionID" /> para a solicitação atual.</param>
        <param name="locked">Quando este método retorna, ele contém um valor booliano que é definido como <see langword="true" /> se o item da sessão solicitado está bloqueado no armazenamento de dados; caso contrário, <see langword="false" />.</param>
        <param name="lockAge">Quando este método retorna, ele contém um objeto <see cref="T:System.TimeSpan" /> que é definido como a quantidade de tempo que um item no armazenamento de dados da sessão foi bloqueado.</param>
        <param name="lockId">Quando este método retorna, ele contém um objeto que é definido como o identificador de bloqueio para a solicitação atual. Para obter detalhes sobre o identificador de bloqueio, consulte "Bloqueio dos dados de repositório de sessão" no resumo da classe <see cref="T:System.Web.SessionState.SessionStateStoreProviderBase" />.</param>
        <param name="actions">Quando este método retorna, contém um dos valores <see cref="T:System.Web.SessionState.SessionStateActions" />, indicando se a sessão atual é uma sessão sem cookies não inicializada.</param>
        <summary>Retorna os dados de estado de sessão somente leitura do armazenamento de dados da sessão.</summary>
        <returns>Um <see cref="T:System.Web.SessionState.SessionStateStoreData" /> preenchido com valores de sessão e informações do armazenamento de dados da sessão.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.SessionState.SessionStateModule> objeto chamadas a <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> método no início de uma solicitação, durante a <xref:System.Web.HttpApplication.AcquireRequestState> evento, quando o <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> atributo é definido como `ReadOnly`. Se o <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> atributo é definido como `true`, o <xref:System.Web.SessionState.SessionStateModule> objeto, em vez disso, chama o <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> método.  
  
 O <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> método retorna um <xref:System.Web.SessionState.SessionStateStoreData> objeto preenchido com informações de sessão do armazenamento de dados e atualiza a data de validade dos dados de sessão. Se nenhum dado de item de sessão for encontrado no armazenamento de dados, o <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> método define o `locked` `out` parâmetro `false` e retorna `null`. Isso faz com que o <xref:System.Web.SessionState.SessionStateModule> objeto no qual chamar o <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> método para criar um item de nova sessão no armazenamento de dados.  
  
 Se item de sessão dados são encontrados no repositório de dados, mas os dados são bloqueados, o <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> método define o `locked` `out` parâmetro `true`, define o `lockAge` `out` parâmetro para a data e hora atuais menos a data e a hora quando o item foi bloqueado (que é recuperado do armazenamento de dados), define a `lockId` `out` parâmetro para o identificador de bloqueio recuperado do armazenamento de dados e retorna `null`. Isso faz com que o <xref:System.Web.SessionState.SessionStateModule> objeto no qual chamar o <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> método novamente após um intervalo de meio segundo para tentar recuperar as informações do item de sessão.  
  
 Se o valor que o `lockAge` `out` parâmetro for definido como exceder o <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> valor, o <xref:System.Web.SessionState.SessionStateModule> chamadas do objeto a <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> método para limpar o bloqueio nos dados de item de sessão e, em seguida, chama o <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> método novamente.  
  
 O `actionFlags` parâmetro é usado quando tanto o `cookieless` e `regenerateExpiredSessionId` atributos são definidos como `true`. Uma `actionFlags` valor definido como <xref:System.Web.SessionState.SessionStateActions.InitializeItem> indica que a entrada no armazenamento de dados da sessão é uma nova sessão que exige inicialização. Entradas não inicializadas no armazenamento de dados da sessão são criadas por uma chamada para o <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> método. Se o item do armazenamento de dados da sessão não é um item não inicializado, o `actionFlags` parâmetro será definido como zero.  
  
 Os implementadores de armazenamento de estado de sessão personalizado que dá suporte a sessões sem cookies devem definir as `actionFlags` `out` parâmetro para o valor retornado de armazenamento de dados da sessão para o item atual. Se o `actionFlags` valor de parâmetro para o armazenamento de sessão solicitado é igual ao item de <xref:System.Web.SessionState.SessionStateActions.InitializeItem> valor de enumeração, o <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> método deve definir o valor no armazenamento de dados como zero depois de definir a `actionFlags` `out` parâmetro.  
  
   
  
## Examples  
 Para obter um exemplo de uma implementação de provedor de armazenamento de estado de sessão, consulte [implementando um provedor de estado de sessão Store](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Visão geral do estado de sessão ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetItemExclusive">
      <MemberSignature Language="C#" Value="public abstract System.Web.SessionState.SessionStateStoreData GetItemExclusive (System.Web.HttpContext context, string id, out bool locked, out TimeSpan lockAge, out object lockId, out System.Web.SessionState.SessionStateActions actions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.SessionState.SessionStateStoreData GetItemExclusive(class System.Web.HttpContext context, string id, [out] bool&amp; locked, [out] valuetype System.TimeSpan&amp; lockAge, [out] object&amp; lockId, [out] valuetype System.Web.SessionState.SessionStateActions&amp; actions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetItemExclusive (context As HttpContext, id As String, ByRef locked As Boolean, ByRef lockAge As TimeSpan, ByRef lockId As Object, ByRef actions As SessionStateActions) As SessionStateStoreData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Web::SessionState::SessionStateStoreData ^ GetItemExclusive(System::Web::HttpContext ^ context, System::String ^ id, [Runtime::InteropServices::Out] bool % locked, [Runtime::InteropServices::Out] TimeSpan % lockAge, [Runtime::InteropServices::Out] System::Object ^ % lockId, [Runtime::InteropServices::Out] System::Web::SessionState::SessionStateActions % actions);" />
      <MemberSignature Language="F#" Value="abstract member GetItemExclusive : System.Web.HttpContext * string *  *  *  *  -&gt; System.Web.SessionState.SessionStateStoreData" Usage="sessionStateStoreProviderBase.GetItemExclusive (context, id, locked, lockAge, lockId, actions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.SessionStateStoreData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="locked" Type="System.Boolean" RefType="out" />
        <Parameter Name="lockAge" Type="System.TimeSpan" RefType="out" />
        <Parameter Name="lockId" Type="System.Object" RefType="out" />
        <Parameter Name="actions" Type="System.Web.SessionState.SessionStateActions" RefType="out" />
      </Parameters>
      <Docs>
        <param name="context">O <see cref="T:System.Web.HttpContext" /> para a solicitação atual.</param>
        <param name="id">O <see cref="P:System.Web.SessionState.HttpSessionState.SessionID" /> para a solicitação atual.</param>
        <param name="locked">Quando esse método é retornado, contém um valor booliano que é definido como <see langword="true" /> se um bloqueio é obtido com êxito; caso contrário, <see langword="false" />.</param>
        <param name="lockAge">Quando este método retorna, ele contém um objeto <see cref="T:System.TimeSpan" /> que é definido como a quantidade de tempo que um item no armazenamento de dados da sessão foi bloqueado.</param>
        <param name="lockId">Quando este método retorna, ele contém um objeto que é definido como o identificador de bloqueio para a solicitação atual. Para obter detalhes sobre o identificador de bloqueio, consulte "Bloqueio dos dados de repositório de sessão" no resumo da classe <see cref="T:System.Web.SessionState.SessionStateStoreProviderBase" />.</param>
        <param name="actions">Quando este método retorna, contém um dos valores <see cref="T:System.Web.SessionState.SessionStateActions" />, indicando se a sessão atual é uma sessão sem cookies não inicializada.</param>
        <summary>Retorna os dados de estado de sessão somente leitura do armazenamento de dados da sessão.</summary>
        <returns>Um <see cref="T:System.Web.SessionState.SessionStateStoreData" /> preenchido com valores de sessão e informações do armazenamento de dados da sessão.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.SessionState.SessionStateModule> objeto chamadas a <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> método no início de uma solicitação, durante a <xref:System.Web.HttpApplication.AcquireRequestState> evento, quando o <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> atributo é definido como `true`, que é o padrão. Se o <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> atributo é definido como `ReadOnly`, o <xref:System.Web.SessionState.SessionStateModule> objeto, em vez disso, chama o <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> método.  
  
 O <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> método retorna um <xref:System.Web.SessionState.SessionStateStoreData> objeto preenchido com informações da sessão do armazenamento de dados, atualiza a data de validade dos dados armazenados e bloqueia os dados de item de sessão no armazenamento de dados para a duração da solicitação. Se nenhum dado de item de sessão for encontrado no armazenamento de dados, o <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> método define o `locked` `out` parâmetro `false` e retorna `null`. Isso faz com que o <xref:System.Web.SessionState.SessionStateModule> objeto no qual chamar o <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> método para criar um item de nova sessão no armazenamento de dados. Se item de sessão dados são encontrados no repositório de dados, mas os dados são bloqueados, o <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> método define o `locked` `out` parâmetro `true`, define o `lockAge` `out` parâmetro para a data e hora atuais menos a data e a hora quando o item foi bloqueado (que é recuperado do armazenamento de dados), define a `lockId` `out` parâmetro para o identificador de bloqueio recuperado do armazenamento de dados e retorna `null`. Isso faz com que o <xref:System.Web.SessionState.SessionStateModule> objeto no qual chamar o <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> método novamente após um intervalo de meio segundo para tentar recuperar as informações do item de sessão e obter um bloqueio nos dados. Se o valor que o `lockAge` `out` parâmetro for definido como excede a <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> valor, o <xref:System.Web.SessionState.SessionStateModule> chamadas a <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> método para limpar o bloqueio nos dados de item de sessão e, em seguida, chama o <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> método novamente.  
  
 O `actionFlags` parâmetro é usado quando o `cookieless` e `regenerateExpiredSessionId` atributos são definidos como `true`. Uma `actionFlags` valor definido como <xref:System.Web.SessionState.SessionStateActions.InitializeItem> indica que a entrada no armazenamento de dados da sessão é uma nova sessão que exige inicialização. Entradas não inicializadas no armazenamento de dados da sessão são criadas por uma chamada para o <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> método. Se o item do armazenamento de dados da sessão não é um item não inicializado, o `actionFlags` parâmetro será definido como zero.  
  
 Os implementadores de armazenamento de estado de sessão personalizado que dá suporte a sessões sem cookies devem definir as `actionFlags` `out` parâmetro para o valor retornado de armazenamento de dados da sessão para o item atual. Se o `actionFlags` valor de parâmetro para o armazenamento de sessão solicitado é igual ao item de <xref:System.Web.SessionState.SessionStateActions.InitializeItem> valor de enumeração, o <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> método deve definir o valor no armazenamento de dados como zero depois de definir a `actionFlags` `out` parâmetro.  
  
   
  
## Examples  
 Para obter um exemplo de uma implementação de provedor de armazenamento de estado de sessão, consulte [implementando um provedor de estado de sessão Store](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Visão geral do estado de sessão ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="InitializeRequest">
      <MemberSignature Language="C#" Value="public abstract void InitializeRequest (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeRequest(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub InitializeRequest (context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void InitializeRequest(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member InitializeRequest : System.Web.HttpContext -&gt; unit" Usage="sessionStateStoreProviderBase.InitializeRequest context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">O <see cref="T:System.Web.HttpContext" /> para a solicitação atual.</param>
        <summary>Chamado pelo objeto <see cref="T:System.Web.SessionState.SessionStateModule" /> para inicialização por solicitação.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.SessionState.SessionStateModule> objeto chamadas a <xref:System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest%2A> método antes de chamar qualquer outra <xref:System.Web.SessionState.SessionStateStoreProviderBase> método. Você pode usar o <xref:System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest%2A> método para executar uma inicialização por solicitação exigida pelo seu provedor de armazenamento de estado de sessão.  
  
   
  
## Examples  
 Para obter um exemplo de uma implementação de provedor de armazenamento de estado de sessão, consulte [implementando um provedor de estado de sessão Store](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Visão geral do estado de sessão ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ReleaseItemExclusive">
      <MemberSignature Language="C#" Value="public abstract void ReleaseItemExclusive (System.Web.HttpContext context, string id, object lockId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseItemExclusive(class System.Web.HttpContext context, string id, object lockId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive(System.Web.HttpContext,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ReleaseItemExclusive (context As HttpContext, id As String, lockId As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ReleaseItemExclusive(System::Web::HttpContext ^ context, System::String ^ id, System::Object ^ lockId);" />
      <MemberSignature Language="F#" Value="abstract member ReleaseItemExclusive : System.Web.HttpContext * string * obj -&gt; unit" Usage="sessionStateStoreProviderBase.ReleaseItemExclusive (context, id, lockId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="lockId" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">O <see cref="T:System.Web.HttpContext" /> para a solicitação atual.</param>
        <param name="id">O identificador de sessão da solicitação atual.</param>
        <param name="lockId">O identificador de bloqueio da solicitação atual.</param>
        <summary>Libera um bloqueio em um item no armazenamento de dados da sessão.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.SessionState.SessionStateModule> chamadas do objeto a <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> método para atualizar a data de validade e liberar um bloqueio em um item no armazenamento de dados da sessão. Ele é chamado no final de uma solicitação, durante o <xref:System.Web.HttpApplication.ReleaseRequestState> evento, se os valores de sessão são as mesmas. Se os valores de sessão foram modificados, o <xref:System.Web.SessionState.SessionStateModule> do objeto em vez disso, chama o <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> método.  
  
 O <xref:System.Web.SessionState.SessionStateModule> objeto também chama o <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> método quando um bloqueio em um item no armazenamento de dados de sessão excedeu o <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> valor. Para obter mais informações sobre bloqueio e detalhes sobre o identificador de bloqueio, consulte "Bloqueio de sessão Store dados" no <xref:System.Web.SessionState.SessionStateStoreProviderBase> visão geral da classe.  
  
 O <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> método apenas remove o bloqueio de um item no armazenamento de dados da sessão para o aplicativo atual que corresponde da sessão fornecida `id` e `lockId` valores. Se o `lockId` não corresponde do armazenamento de dados, o <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> método não faz nada.  
  
   
  
## Examples  
 Para obter um exemplo de uma implementação de provedor de armazenamento de estado de sessão, consulte [implementando um provedor de estado de sessão Store](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Visão geral do estado de sessão ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="public abstract void RemoveItem (System.Web.HttpContext context, string id, object lockId, System.Web.SessionState.SessionStateStoreData item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveItem(class System.Web.HttpContext context, string id, object lockId, class System.Web.SessionState.SessionStateStoreData item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem(System.Web.HttpContext,System.String,System.Object,System.Web.SessionState.SessionStateStoreData)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub RemoveItem (context As HttpContext, id As String, lockId As Object, item As SessionStateStoreData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void RemoveItem(System::Web::HttpContext ^ context, System::String ^ id, System::Object ^ lockId, System::Web::SessionState::SessionStateStoreData ^ item);" />
      <MemberSignature Language="F#" Value="abstract member RemoveItem : System.Web.HttpContext * string * obj * System.Web.SessionState.SessionStateStoreData -&gt; unit" Usage="sessionStateStoreProviderBase.RemoveItem (context, id, lockId, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="lockId" Type="System.Object" />
        <Parameter Name="item" Type="System.Web.SessionState.SessionStateStoreData" />
      </Parameters>
      <Docs>
        <param name="context">O <see cref="T:System.Web.HttpContext" /> para a solicitação atual.</param>
        <param name="id">O identificador de sessão da solicitação atual.</param>
        <param name="lockId">O identificador de bloqueio da solicitação atual.</param>
        <param name="item">O <see cref="T:System.Web.SessionState.SessionStateStoreData" /> que representa o item a ser excluído do armazenamento de dados.</param>
        <summary>Exclui dados de item do armazenamento de dados da sessão.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.SessionState.SessionStateModule> chamadas do objeto a <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> método no final de uma solicitação, durante a <xref:System.Web.HttpApplication.ReleaseRequestState> eventos, para excluir os dados para um item de sessão de armazenamento de dados de sessão se o <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> método foi chamado. Somente os dados de sessão para o aplicativo atual que corresponde a sessão fornecida `id` e `lockId` valores é excluído. Para obter mais informações sobre bloqueio e detalhes sobre o identificador de bloqueio, consulte "Bloqueio de sessão Store dados" no <xref:System.Web.SessionState.SessionStateStoreProviderBase> visão geral da classe.  
  
   
  
## Examples  
 Para obter um exemplo de uma implementação de provedor de armazenamento de estado de sessão, consulte [implementando um provedor de estado de sessão Store](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Visão geral do estado de sessão ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ResetItemTimeout">
      <MemberSignature Language="C#" Value="public abstract void ResetItemTimeout (System.Web.HttpContext context, string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetItemTimeout(class System.Web.HttpContext context, string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout(System.Web.HttpContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ResetItemTimeout (context As HttpContext, id As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ResetItemTimeout(System::Web::HttpContext ^ context, System::String ^ id);" />
      <MemberSignature Language="F#" Value="abstract member ResetItemTimeout : System.Web.HttpContext * string -&gt; unit" Usage="sessionStateStoreProviderBase.ResetItemTimeout (context, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">O <see cref="T:System.Web.HttpContext" /> para a solicitação atual.</param>
        <param name="id">O identificador de sessão da solicitação atual.</param>
        <summary>Atualiza a data e hora de validade de um item no armazenamento de dados da sessão.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.SessionState.SessionStateModule> objeto chamadas a <xref:System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout%2A> método para atualizar a data de expiração para uma sessão para a data e hora atuais mais a sessão <xref:System.Web.SessionState.HttpSessionState.Timeout%2A> valor quando qualquer um dos:  
  
-   o <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> atributo é `true`, ou  
  
-   a solicitação não gerou a <xref:System.Web.HttpApplication.AcquireRequestState> e <xref:System.Web.HttpApplication.ReleaseRequestState> eventos devido a um erro.  
  
 Se uma página ASP.NET é solicitada e o <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> atributo é definido como `false`, o <xref:System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout%2A> método ainda é chamado para atualizar a data de expiração e a hora dos dados no armazenamento de dados da sessão.  
  
   
  
## Examples  
 Para obter um exemplo de uma implementação de provedor de armazenamento de estado de sessão, consulte [implementando um provedor de estado de sessão Store](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Visão geral do estado de sessão ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="SetAndReleaseItemExclusive">
      <MemberSignature Language="C#" Value="public abstract void SetAndReleaseItemExclusive (System.Web.HttpContext context, string id, System.Web.SessionState.SessionStateStoreData item, object lockId, bool newItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAndReleaseItemExclusive(class System.Web.HttpContext context, string id, class System.Web.SessionState.SessionStateStoreData item, object lockId, bool newItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive(System.Web.HttpContext,System.String,System.Web.SessionState.SessionStateStoreData,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SetAndReleaseItemExclusive (context As HttpContext, id As String, item As SessionStateStoreData, lockId As Object, newItem As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetAndReleaseItemExclusive(System::Web::HttpContext ^ context, System::String ^ id, System::Web::SessionState::SessionStateStoreData ^ item, System::Object ^ lockId, bool newItem);" />
      <MemberSignature Language="F#" Value="abstract member SetAndReleaseItemExclusive : System.Web.HttpContext * string * System.Web.SessionState.SessionStateStoreData * obj * bool -&gt; unit" Usage="sessionStateStoreProviderBase.SetAndReleaseItemExclusive (context, id, item, lockId, newItem)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="item" Type="System.Web.SessionState.SessionStateStoreData" />
        <Parameter Name="lockId" Type="System.Object" />
        <Parameter Name="newItem" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="context">O <see cref="T:System.Web.HttpContext" /> para a solicitação atual.</param>
        <param name="id">O identificador de sessão da solicitação atual.</param>
        <param name="item">O objeto <see cref="T:System.Web.SessionState.SessionStateStoreData" /> que contém os valores da sessão atual a serem armazenados.</param>
        <param name="lockId">O identificador de bloqueio da solicitação atual.</param>
        <param name="newItem">
          <see langword="true" /> para identificar o item de sessão como um novo item; <see langword="false" /> para identificar o item de sessão como um item existente.</param>
        <summary>Atualiza as informações do item de sessão no armazenamento de dados do estado de sessão com valores da solicitação atual e limpa o bloqueio nos dados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.SessionState.SessionStateModule> objeto chamadas a <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> método no final de uma solicitação, durante o <xref:System.Web.HttpApplication.ReleaseRequestState> evento, para inserir informações do item de sessão atual no repositório de dados ou atualizar as informações existentes de item de sessão no armazenamento de dados com os valores atuais, Para atualizar o tempo de expiração no item e liberar o bloqueio nos dados. Somente os dados de sessão para o aplicativo atual que corresponde a sessão fornecida `id` e `lockId` valores é atualizado. Para obter mais informações sobre bloqueio, consulte "Bloqueio de sessão Store dados" no <xref:System.Web.SessionState.SessionStateStoreProviderBase> visão geral da classe.  
  
 Se os valores de sessão para a solicitação atual não tiveram sido modificados, o <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> método não é chamado. Em vez disso, o <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> método é chamado.  
  
 Se o <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> método foi chamado, o <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> método não é chamado. Em vez disso, o <xref:System.Web.SessionState.SessionStateModule> chamadas do objeto a <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> método para excluir dados de item de sessão da fonte de dados.  
  
   
  
## Examples  
 Para obter um exemplo de uma implementação de provedor de armazenamento de estado de sessão, consulte [implementando um provedor de estado de sessão Store](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Visão geral do estado de sessão ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="SetItemExpireCallback">
      <MemberSignature Language="C#" Value="public abstract bool SetItemExpireCallback (System.Web.SessionState.SessionStateItemExpireCallback expireCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetItemExpireCallback(class System.Web.SessionState.SessionStateItemExpireCallback expireCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback(System.Web.SessionState.SessionStateItemExpireCallback)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function SetItemExpireCallback (expireCallback As SessionStateItemExpireCallback) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool SetItemExpireCallback(System::Web::SessionState::SessionStateItemExpireCallback ^ expireCallback);" />
      <MemberSignature Language="F#" Value="abstract member SetItemExpireCallback : System.Web.SessionState.SessionStateItemExpireCallback -&gt; bool" Usage="sessionStateStoreProviderBase.SetItemExpireCallback expireCallback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expireCallback" Type="System.Web.SessionState.SessionStateItemExpireCallback" />
      </Parameters>
      <Docs>
        <param name="expireCallback">O delegado <see cref="T:System.Web.SessionState.SessionStateItemExpireCallback" /> para o evento <see langword="Session_OnEnd" /> definido no arquivo Global.asax.</param>
        <summary>Define uma referência para o delegado <see cref="T:System.Web.SessionState.SessionStateItemExpireCallback" /> para o evento <see langword="Session_OnEnd" /> definido no arquivo Global.asax.</summary>
        <returns>
          <see langword="true" /> se o provedor de repositório de estado de sessão dá suporte a chamar o evento <see langword="Session_OnEnd" />; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.SessionState.SessionStateModule> chamadas do objeto a <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback%2A> método quando o módulo é inicializado para determinar se chamadas para o `Session_OnEnd` evento são compatíveis com o <xref:System.Web.SessionState.SessionStateStoreProviderBase> implementação e para associar o <xref:System.Web.SessionState.SessionStateItemExpireCallback> delegado com o `Session_OnEnd` eventos.  
  
 Os implementadores de provedor de repositório de estado de sessão personalizado devem usar o <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback%2A> método para informar o <xref:System.Web.SessionState.SessionStateModule> objeto se chamadas para o `Session_OnEnd` evento têm suporte e para definir uma referência local para o <xref:System.Web.SessionState.SessionStateItemExpireCallback> representante fornecido pelo `expireCallback` parâmetro. A implementação personalizada deve decidir quando local <xref:System.Web.SessionState.SessionStateItemExpireCallback> delegado será chamado. Por exemplo, o delegado pode ser chamado durante a chamada para o <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> método, que é chamado quando uma sessão é abandonada.  
  
   
  
## Examples  
 Para obter um exemplo de uma implementação de provedor de armazenamento de estado de sessão, consulte [implementando um provedor de estado de sessão Store](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Visão geral do estado de sessão ASP.NET</related>
      </Docs>
    </Member>
  </Members>
</Type>