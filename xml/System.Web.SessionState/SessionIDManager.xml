<Type Name="SessionIDManager" FullName="System.Web.SessionState.SessionIDManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="177162867ed7abc4eb54b7a8045bc10d76439cec" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37542628" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SessionIDManager : System.Web.SessionState.ISessionIDManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SessionIDManager extends System.Object implements class System.Web.SessionState.ISessionIDManager" />
  <TypeSignature Language="DocId" Value="T:System.Web.SessionState.SessionIDManager" />
  <TypeSignature Language="VB.NET" Value="Public Class SessionIDManager&#xA;Implements ISessionIDManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class SessionIDManager : System::Web::SessionState::ISessionIDManager" />
  <TypeSignature Language="F#" Value="type SessionIDManager = class&#xA;    interface ISessionIDManager" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.SessionState.ISessionIDManager</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Manages unique identifiers for ASP.NET session state.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.SessionState.SessionIDManager> classe é um módulo HTTP que gerencia os identificadores de sessão exclusiva para uso com o estado de sessão do ASP.NET. O identificador exclusivo para uma sessão do ASP.NET é o <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> propriedade, que pode ser acessada do <xref:System.Web.HttpContext.Session%2A> propriedade da atual <xref:System.Web.HttpContext> ou <xref:System.Web.UI.Page>. O identificador de sessão do ASP.NET é um número gerado aleatoriamente codificado em uma cadeia de caracteres de 24 caracteres consistindo em caracteres minúsculos de uma a z e números de 0 a 5.  
  
 Por padrão, o <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> valor é enviado em um cookie com cada solicitação para o aplicativo ASP.NET. O nome do cookie que contém o <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> valor é o ASP.NET SessionID por padrão. Você pode configurar um nome de cookie diferentes definindo a `cookieName` atributo do [sessionState Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d) para o nome do cookie desejado.  
  
 Se você quiser desabilitar o uso de cookies em seu aplicativo ASP.NET e ainda fazer uso de estado de sessão, você pode configurar seu aplicativo para armazenar o identificador de sessão na URL em vez de um cookie, definindo o `cookieless` atributo do `sessionState` elemento `true` no arquivo Web. config para seu aplicativo. Para obter mais informações, consulte a propriedade <xref:System.Web.SessionState.HttpSessionStateContainer.IsCookieless%2A>.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Você pode substituir o identificador de sessão do ASP.NET com seu próprio identificador de sessão personalizadas, criando uma classe que herda de <see cref="T:System.Web.SessionState.SessionIDManager" /> classe e substituir o <see cref="M:System.Web.SessionState.SessionIDManager.CreateSessionID(System.Web.HttpContext)" /> e <see cref="M:System.Web.SessionState.SessionIDManager.Validate(System.String)" /> métodos com suas próprias implementações personalizadas. Para obter um exemplo de substituição de <see cref="T:System.Web.SessionState.SessionIDManager" /> de classe e a implementação desses métodos, consulte o exemplo fornecido para o <see cref="M:System.Web.SessionState.SessionIDManager.CreateSessionID(System.Web.HttpContext)" /> método.  Você pode substituir toda <see cref="T:System.Web.SessionState.SessionIDManager" /> com um Gerenciador de ID de sessão personalizadas, criando uma classe que implementa o <see cref="T:System.Web.SessionState.ISessionIDManager" /> interface. Se seu Gerenciador de ID de sessão personalizado oferece suporte a identificadores de sessão sem cookies, você precisará implementar uma solução para enviar e recuperar identificadores de sessão na URL, como um filtro ISAPI. Para obter mais informações sobre como criar uma ID de sessão personalizada manager, consulte <see cref="T:System.Web.SessionState.ISessionIDManager" />.</para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionIDManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionIDManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionIDManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Creates an instance of the <see cref="T:System.Web.SessionState.SessionIDManager" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este construtor não se destina a ser chamado do código do aplicativo.  
  
 Esse construtor para criar uma instância do ASP.NET chama o <xref:System.Web.SessionState.SessionIDManager> classe. Depois de chamar o construtor, o ASP.NET chama o <xref:System.Web.SessionState.SessionIDManager.Initialize%2A> método para inicializar a nova <xref:System.Web.SessionState.SessionIDManager> objeto.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSessionID">
      <MemberSignature Language="C#" Value="public virtual string CreateSessionID (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string CreateSessionID(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionIDManager.CreateSessionID(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSessionID (context As HttpContext) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ CreateSessionID(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member CreateSessionID : System.Web.HttpContext -&gt; string&#xA;override this.CreateSessionID : System.Web.HttpContext -&gt; string" Usage="sessionIDManager.CreateSessionID context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.SessionState.ISessionIDManager.CreateSessionID(System.Web.HttpContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">The current <see cref="T:System.Web.HttpContext" /> object that references server objects used to process HTTP requests (for example, the <see cref="P:System.Web.HttpContext.Request" /> and <see cref="P:System.Web.HttpContext.Response" /> properties).</param>
        <summary>Creates a unique session identifier for the session.</summary>
        <returns>A unique session identifier.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método não se destina a ser chamado do código do aplicativo.  
  
 O <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> método retorna um identificador exclusivo que é um número gerado aleatoriamente codificado em uma cadeia de caracteres de 24 caracteres consistindo em caracteres minúsculos de uma a z e números de 0 a 5.  
  
   
  
## Examples  
 O exemplo de código a seguir mostra uma classe que herda a <xref:System.Web.SessionState.SessionIDManager> classe e substitui o <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> e <xref:System.Web.SessionState.SessionIDManager.Validate%2A> métodos com métodos que fornecem e validar uma <xref:System.Guid> como o <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>.  
  
 [!code-csharp[System.Web.SessionState.ISessionIDModule#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.ISessionIDModule/CS/GuidSessionIDModule.cs#7)]
 [!code-vb[System.Web.SessionState.ISessionIDModule#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.ISessionIDModule/VB/GuidSessionIDModule.vb#7)]  
  
 Para usar a classe personalizada demonstrada neste exemplo, configure o atributo sessionIDManagerType do [elemento sessionState (esquema de configurações do ASP.NET)](http://msdn.microsoft.com/library/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d) elemento, conforme mostrado no exemplo a seguir.  
  
```  
<sessionState  
  Mode="InProc"  
  stateConnectionString="tcp=127.0.0.1:42424"  
  stateNetworkTimeout="10"  
  sqlConnectionString="data source=127.0.0.1;Integrated Security=SSPI"  
  sqlCommandTimeout="30"  
  customProvider=""  
  cookieless="false"  
  regenerateExpiredSessionId="false"  
  timeout="20"  
  sessionIDManagerType="Your.ID.Manager.Type,  
    CustomAssemblyNameInBinFolder"  
/>  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Você pode fornecer um identificador de sessão personalizado a ser usado por estado de sessão do ASP.NET, criando uma classe que herda de <see cref="T:System.Web.SessionState.SessionIDManager" /> classe e substituir o <see cref="M:System.Web.SessionState.SessionIDManager.CreateSessionID(System.Web.HttpContext)" /> e <see cref="M:System.Web.SessionState.SessionIDManager.Validate(System.String)" /> métodos com suas próprias implementações personalizadas. Se sua ID de sessão personalizada não atender as restrições de caracteres impostas pela implementação do padrão de <see cref="M:System.Web.SessionState.SessionIDManager.Validate(System.String)" /> método, você deve substituir o <see cref="M:System.Web.SessionState.SessionIDManager.Validate(System.String)" /> método para fornecer validação de seu identificador de sessão personalizadas. Nesse caso, o <see cref="T:System.Web.SessionState.SessionIDManager" /> classe garantirá que o identificador de sessão personalizada é codificado na resposta HTTP na URL e a URL decodificado da solicitação HTTP usando o <see cref="M:System.Web.SessionState.SessionIDManager.Encode(System.String)" /> e <see cref="M:System.Web.SessionState.SessionIDManager.Decode(System.String)" /> métodos, respectivamente.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Decode">
      <MemberSignature Language="C#" Value="public virtual string Decode (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Decode(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionIDManager.Decode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Decode (id As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ Decode(System::String ^ id);" />
      <MemberSignature Language="F#" Value="abstract member Decode : string -&gt; string&#xA;override this.Decode : string -&gt; string" Usage="sessionIDManager.Decode id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">The session identifier to decode.</param>
        <summary>Decodes a URL-encoded session identifier obtained from a cookie or the URL.</summary>
        <returns>The decoded session identifier.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método não se destina a ser chamado do código do aplicativo.  
  
 Esse método é usado internamente pelo <xref:System.Web.SessionState.SessionIDManager> classe personalizada de decodificar <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> valores criados por classes que herdam a <xref:System.Web.SessionState.SessionIDManager> de classe e substituir o <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> e <xref:System.Web.SessionState.SessionIDManager.Validate%2A> métodos. Para garantir que a fidelidade de um valor de identificador de sessão personalizado recuperada da solicitação HTTP pelo <xref:System.Web.SessionState.SessionIDManager.GetSessionID%2A> método, o <xref:System.Web.SessionState.SessionIDManager> decodifica o valor personalizado usando o <xref:System.Web.HttpUtility.UrlDecode%2A> método.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Para obter um exemplo de uma classe que herda de <see cref="T:System.Web.SessionState.SessionIDManager" /> classe e substitui o <see cref="M:System.Web.SessionState.SessionIDManager.CreateSessionID(System.Web.HttpContext)" /> e <see cref="M:System.Web.SessionState.SessionIDManager.Validate(System.String)" /> métodos, consulte o exemplo fornecido para o <see cref="M:System.Web.SessionState.SessionIDManager.CreateSessionID(System.Web.HttpContext)" /> método.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public virtual string Encode (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Encode(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionIDManager.Encode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Encode (id As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ Encode(System::String ^ id);" />
      <MemberSignature Language="F#" Value="abstract member Encode : string -&gt; string&#xA;override this.Encode : string -&gt; string" Usage="sessionIDManager.Encode id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">The session identifier to encode.</param>
        <summary>Encodes the session identifier for saving to either a cookie or the URL.</summary>
        <returns>The encoded session identifier.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método não se destina a ser chamado do código do aplicativo.  
  
 Esse método é usado internamente pelo <xref:System.Web.SessionState.SessionIDManager> classe personalizada de codificar <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> valores criados por classes que herdam a <xref:System.Web.SessionState.SessionIDManager> de classe e substituir o <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> e <xref:System.Web.SessionState.SessionIDManager.Validate%2A> métodos. Para garantir que a fidelidade de um valor de identificador de sessão personalizado armazenado na resposta HTTP, o <xref:System.Web.SessionState.SessionIDManager.SaveSessionID%2A> método, o <xref:System.Web.SessionState.SessionIDManager> codifica o valor personalizado usando o <xref:System.Web.HttpUtility.UrlEncode%2A> método.  
  
 Para obter um exemplo de uma classe que herda de <xref:System.Web.SessionState.SessionIDManager> classe e substitui o <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> e <xref:System.Web.SessionState.SessionIDManager.Validate%2A> métodos, consulte o <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSessionID">
      <MemberSignature Language="C#" Value="public string GetSessionID (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetSessionID(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionIDManager.GetSessionID(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSessionID (context As HttpContext) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetSessionID(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetSessionID : System.Web.HttpContext -&gt; string&#xA;override this.GetSessionID : System.Web.HttpContext -&gt; string" Usage="sessionIDManager.GetSessionID context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.SessionState.ISessionIDManager.GetSessionID(System.Web.HttpContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">The current <see cref="T:System.Web.HttpContext" /> object that references server objects used to process HTTP requests (for example, the <see cref="P:System.Web.HttpContext.Request" /> and <see cref="P:System.Web.HttpContext.Response" /> properties).</param>
        <summary>Gets the session-identifier value from the current Web request.</summary>
        <returns>The current <see cref="P:System.Web.SessionState.HttpSessionState.SessionID" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método não se destina a ser chamado do código do aplicativo.  
  
 O <xref:System.Web.SessionState.SessionStateModule> chamadas a <xref:System.Web.SessionState.SessionIDManager.GetSessionID%2A> método durante a <xref:System.Web.HttpApplication.AcquireRequestState> evento para recuperar o <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> atuais <xref:System.Web.HttpRequest>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">The length of the session-identifier value retrieved from the HTTP request exceeds the <see cref="P:System.Web.SessionState.SessionIDManager.SessionIDMaxLength" /> value.</exception>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionIDManager.Initialize" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Initialize();" />
      <MemberSignature Language="F#" Value="abstract member Initialize : unit -&gt; unit&#xA;override this.Initialize : unit -&gt; unit" Usage="sessionIDManager.Initialize " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.SessionState.ISessionIDManager.Initialize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Initializes the <see cref="T:System.Web.SessionState.SessionIDManager" /> object with information from configuration files.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.SessionState.SessionIDManager.Initialize%2A> método lê os dados de configuração de sessão a [sessionState Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d) elemento de configuração dos arquivos de configuração.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeRequest">
      <MemberSignature Language="C#" Value="public bool InitializeRequest (System.Web.HttpContext context, bool suppressAutoDetectRedirect, out bool supportSessionIDReissue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool InitializeRequest(class System.Web.HttpContext context, bool suppressAutoDetectRedirect, [out] bool&amp; supportSessionIDReissue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionIDManager.InitializeRequest(System.Web.HttpContext,System.Boolean,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Function InitializeRequest (context As HttpContext, suppressAutoDetectRedirect As Boolean, ByRef supportSessionIDReissue As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool InitializeRequest(System::Web::HttpContext ^ context, bool suppressAutoDetectRedirect, [Runtime::InteropServices::Out] bool % supportSessionIDReissue);" />
      <MemberSignature Language="F#" Value="abstract member InitializeRequest : System.Web.HttpContext * bool *  -&gt; bool&#xA;override this.InitializeRequest : System.Web.HttpContext * bool *  -&gt; bool" Usage="sessionIDManager.InitializeRequest (context, suppressAutoDetectRedirect, supportSessionIDReissue)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.SessionState.ISessionIDManager.InitializeRequest(System.Web.HttpContext,System.Boolean,System.Boolean@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="suppressAutoDetectRedirect" Type="System.Boolean" />
        <Parameter Name="supportSessionIDReissue" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="context">The <see cref="T:System.Web.HttpContext" /> object that contains information about the current request.</param>
        <param name="suppressAutoDetectRedirect">
          <see langword="true" /> to redirect to determine cookie support; otherwise, <see langword="false" /> to suppress automatic redirection to determine cookie support.</param>
        <param name="supportSessionIDReissue">When this method returns, contains a Boolean that indicates whether the <see cref="T:System.Web.SessionState.SessionIDManager" /> object supports issuing new session IDs when the original ID is out of date. This parameter is passed uninitialized.</param>
        <summary>Performs per-request initialization of the <see cref="T:System.Web.SessionState.SessionIDManager" /> object.</summary>
        <returns>
          <see langword="true" /> to indicate the <see cref="T:System.Web.SessionState.SessionIDManager" /> object has done a redirect to determine cookie support; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando o `cookieless` atributo do `sessionState` é definido como `AutoDetect`, o <xref:System.Web.SessionState.SessionIDManager> objeto será redirecionado para o mesmo caminho para determinar se o navegador está se conectando dá suporte a cookies. Se o `suppressAutoDetectRedirect` parâmetro é `false`, o servidor não executará esse redirecionamento.  
  
 O `supportSessionIDReissue` parâmetro será retornado `false` se a solicitação é usar cookies para identificação de sessão.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveSessionID">
      <MemberSignature Language="C#" Value="public void RemoveSessionID (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveSessionID(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionIDManager.RemoveSessionID(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveSessionID (context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveSessionID(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member RemoveSessionID : System.Web.HttpContext -&gt; unit&#xA;override this.RemoveSessionID : System.Web.HttpContext -&gt; unit" Usage="sessionIDManager.RemoveSessionID context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.SessionState.ISessionIDManager.RemoveSessionID(System.Web.HttpContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">The current <see cref="T:System.Web.HttpContext" /> object that references server objects used to process HTTP requests (for example, the <see cref="P:System.Web.HttpContext.Request" /> and <see cref="P:System.Web.HttpContext.Response" /> properties).</param>
        <summary>Deletes the session-identifier cookie from the HTTP response.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método não se destina a ser chamado do código do aplicativo.  
  
 O <xref:System.Web.SessionState.SessionStateModule> chamadas a <xref:System.Web.SessionState.SessionIDManager.RemoveSessionID%2A> método durante o <xref:System.Web.HttpApplication.ReleaseRequestState> eventos para remover o identificador de sessão o <xref:System.Web.HttpResponse.Cookies%2A> coleção do <xref:System.Web.HttpResponse> se uma nova sessão foi criada, mas não foi usada.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveSessionID">
      <MemberSignature Language="C#" Value="public void SaveSessionID (System.Web.HttpContext context, string id, out bool redirected, out bool cookieAdded);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveSessionID(class System.Web.HttpContext context, string id, [out] bool&amp; redirected, [out] bool&amp; cookieAdded) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionIDManager.SaveSessionID(System.Web.HttpContext,System.String,System.Boolean@,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveSessionID (context As HttpContext, id As String, ByRef redirected As Boolean, ByRef cookieAdded As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SaveSessionID(System::Web::HttpContext ^ context, System::String ^ id, [Runtime::InteropServices::Out] bool % redirected, [Runtime::InteropServices::Out] bool % cookieAdded);" />
      <MemberSignature Language="F#" Value="abstract member SaveSessionID : System.Web.HttpContext * string *  *  -&gt; unit&#xA;override this.SaveSessionID : System.Web.HttpContext * string *  *  -&gt; unit" Usage="sessionIDManager.SaveSessionID (context, id, redirected, cookieAdded)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.SessionState.ISessionIDManager.SaveSessionID(System.Web.HttpContext,System.String,System.Boolean@,System.Boolean@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="redirected" Type="System.Boolean&amp;" RefType="out" />
        <Parameter Name="cookieAdded" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="context">The current <see cref="T:System.Web.HttpContext" /> object that references server objects used to process HTTP requests (for example, the <see cref="P:System.Web.HttpContext.Request" /> and <see cref="P:System.Web.HttpContext.Response" /> properties).</param>
        <param name="id">The session identifier.</param>
        <param name="redirected">When this method returns, contains a Boolean value that is <see langword="true" /> if the response is redirected to the current URL with the session identifier added to the URL; otherwise, <see langword="false" />.</param>
        <param name="cookieAdded">When this method returns, contains a Boolean value that is <see langword="true" /> if a cookie has been added to the HTTP response; otherwise, <see langword="false" />.</param>
        <summary>Saves a newly created session identifier to the HTTP response.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método não se destina a ser chamado do código do aplicativo.  
  
 O <xref:System.Web.SessionState.SessionIDManager.SaveSessionID%2A> método é chamado pelo <xref:System.Web.SessionState.SessionStateModule> do objeto durante a <xref:System.Web.HttpApplication.AcquireRequestState> eventos. O <xref:System.Web.SessionState.SessionIDManager.SaveSessionID%2A> método armazena o identificador de sessão, a URL (quando o estado de sessão sem cookies é usado) ou em um cookie de sessão não expira.  
  
 Por padrão, o <xref:System.Web.SessionState.SessionIDManager> coloca um identificador de sessão exclusivo em um cookie de sessão não expira e define o `cookieAdded` parâmetro `true`.  
  
 Para um estado de sessão sem cookies, o <xref:System.Web.SessionState.SessionIDManager> objeto insere um identificador de sessão exclusivo para a URL atual, redireciona o navegador para a nova URL que inclui o identificador de sessão e, em seguida, define o `redirected` parâmetro `true`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">The response has already been sent.  -or-  The session ID passed to this method failed validation.</exception>
      </Docs>
    </Member>
    <Member MemberName="SessionIDMaxLength">
      <MemberSignature Language="C#" Value="public static int SessionIDMaxLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 SessionIDMaxLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.SessionIDManager.SessionIDMaxLength" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SessionIDMaxLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int SessionIDMaxLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.SessionIDMaxLength : int" Usage="System.Web.SessionState.SessionIDManager.SessionIDMaxLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the maximum length of a valid session identifier.</summary>
        <value>O comprimento máximo de um identificador de sessão válido.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O comprimento máximo de um identificador de sessão é 80 caracteres.  
  
 Enquanto os identificadores de sessão criados pelo <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> método estão 24 caracteres de comprimento, o comprimento máximo de um identificador de sessão permitido pelo <xref:System.Web.SessionState.SessionIDManager> classe é 80 caracteres. Isso é especialmente importante se você implementar um personalizado <xref:System.Web.SessionState.SessionIDManager>. O <xref:System.Web.SessionState.SessionIDManager.GetSessionID%2A> método, que recupera os valores de identificador de sessão do atual <xref:System.Web.HttpRequest>, garante que os valores não excedam o <xref:System.Web.SessionState.SessionIDManager.SessionIDMaxLength%2A> valor e que o identificador de sessão é uma cadeia de caracteres de 24 caracteres que contém somente os caracteres em minúsculas um z e números de 0 a 5, chamando o <xref:System.Web.SessionState.SessionIDManager.Validate%2A> método. Se você implementar um personalizado <xref:System.Web.SessionState.SessionIDManager> classe que herda de <xref:System.Web.SessionState.SessionIDManager> classe e substitui o <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> método, mas não o <xref:System.Web.SessionState.SessionIDManager.Validate%2A> método, seus valores de identificador de sessão personalizado devem atender as restrições acima. Para obter um exemplo de substituição de <xref:System.Web.SessionState.SessionIDManager> de classe e a implementação desses métodos, consulte o exemplo fornecido para o <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual bool Validate (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Validate(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionIDManager.Validate(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Validate (id As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Validate(System::String ^ id);" />
      <MemberSignature Language="F#" Value="abstract member Validate : string -&gt; bool&#xA;override this.Validate : string -&gt; bool" Usage="sessionIDManager.Validate id" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.SessionState.ISessionIDManager.Validate(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">The session identifier to validate.</param>
        <summary>Gets a value indicating whether a session identifier is valid.</summary>
        <returns>
          <see langword="true" /> if the session identifier is valid; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método não se destina a ser chamado do código do aplicativo.  
  
 O <xref:System.Web.SessionState.SessionIDManager.Validate%2A> método verifica se fornecido `id` é uma cadeia de caracteres de 24 caracteres consistindo em caracteres minúsculos de uma a z e números de 0 a 5 e que o comprimento máximo da sessão de ID não exceder 80 caracteres.  
  
 O <xref:System.Web.SessionState.SessionIDManager.GetSessionID%2A> chamadas de método a <xref:System.Web.SessionState.SessionIDManager.Validate%2A> método ao recuperar um identificador de sessão de uma solicitação HTTP, para garantir que o identificador de sessão fornecido está formatado corretamente.  
  
   
  
## Examples  
 O exemplo de código a seguir mostra uma classe que herda a <xref:System.Web.SessionState.SessionIDManager> classe e substitui o <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> e <xref:System.Web.SessionState.SessionIDManager.Validate%2A> métodos com métodos que fornecem e validar uma <xref:System.Guid> como o <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>.  
  
 [!code-csharp[System.Web.SessionState.ISessionIDModule#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.ISessionIDModule/CS/GuidSessionIDModule.cs#7)]
 [!code-vb[System.Web.SessionState.ISessionIDModule#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.ISessionIDModule/VB/GuidSessionIDModule.vb#7)]  
  
 Para usar a classe personalizada demonstrada neste exemplo, substitua o `SessionID` módulo HTTP em seu arquivo Web. config com sua classe personalizada, conforme mostrado no exemplo a seguir.  
  
```  
<httpModules>  
  <remove name="SessionID" />  
  <add name="SessionID"  
       type="Samples.AspNet.Session.GuidSessionIDManager" />  
</httpModules>  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Você pode fornecer um identificador de sessão personalizado a ser usado por estado de sessão do ASP.NET, criando uma classe que herda de <see cref="T:System.Web.SessionState.SessionIDManager" /> classe e substituir o <see cref="M:System.Web.SessionState.SessionIDManager.CreateSessionID(System.Web.HttpContext)" /> e <see cref="M:System.Web.SessionState.SessionIDManager.Validate(System.String)" /> métodos com sua própria implementação personalizada. Até mesmo quando você cria um identificador de sessão personalizadas, a ID de sessão é limitada a 80 caracteres pelo <see cref="T:System.Web.SessionState.SessionIDManager" /> classe.</para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>