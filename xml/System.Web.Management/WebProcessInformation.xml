<Type Name="WebProcessInformation" FullName="System.Web.Management.WebProcessInformation">
  <TypeSignature Language="C#" Value="public sealed class WebProcessInformation" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WebProcessInformation extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WebProcessInformation" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WebProcessInformation" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebProcessInformation sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="5dd20-101">Fornece informações sobre o processo de trabalho que hospeda o ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="5dd20-101">Provides information about the worker process that hosts ASP.NET.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5dd20-102">Monitoramento de integridade do ASP.NET permite que a equipe de produção e operações gerenciar a implantação de aplicativos da Web.</span><span class="sxs-lookup"><span data-stu-id="5dd20-102">ASP.NET health monitoring allows production and operations staff to manage deployed Web applications.</span></span> <span data-ttu-id="5dd20-103">O <xref:System.Web.Management> namespace contém os tipos de eventos responsáveis pela compactação de dados de status de integridade do aplicativo e o provedor de tipos responsável pelo processamento de dados.</span><span class="sxs-lookup"><span data-stu-id="5dd20-103">The <xref:System.Web.Management> namespace contains the health-event types responsible for packaging application health-status data, and the provider types responsible for processing this data.</span></span> <span data-ttu-id="5dd20-104">Ele também contém tipos de suporte para ajudá-lo durante o gerenciamento de eventos de integridade.</span><span class="sxs-lookup"><span data-stu-id="5dd20-104">It also contains supporting types that help during the management of health events.</span></span>  
  
 <span data-ttu-id="5dd20-105">Instâncias do <xref:System.Web.Management.WebProcessInformation> classe contêm informações que são obtidas usando qualquer um dos tipos que derivam de <xref:System.Web.Management.WebManagementEvent> tipo.</span><span class="sxs-lookup"><span data-stu-id="5dd20-105">Instances of the <xref:System.Web.Management.WebProcessInformation> class contain information that is obtained using any of the types derived from the <xref:System.Web.Management.WebManagementEvent> type.</span></span>  
  
 <span data-ttu-id="5dd20-106">Seu aplicativo precisa as permissões apropriadas para acessar informações protegidas fornecidas por este tipo.</span><span class="sxs-lookup"><span data-stu-id="5dd20-106">Your application needs the appropriate permissions to access protected information provided by this type.</span></span>  
  
 <span data-ttu-id="5dd20-107">O exemplo a seguir é um trecho do arquivo de configuração, que você pode usar para habilitar o ASP.NET para eventos de erro de log que contêm informações de processo.</span><span class="sxs-lookup"><span data-stu-id="5dd20-107">The following example is an excerpt of the configuration file you could use to enable ASP.NET to log error events that contain process information.</span></span>  
  
```  
<healthMonitoring   
  enabled="true" heartBeatInterval="0">  
  
    <rules>  
     <add   
       name="All Errors Default"  
       eventName="All Errors"  
       provider="EventLogProvider"  
       profile="Default"  
       minInterval="00:01:00" />  
    </rules>  
  
</healthMonitoring>  
```  
  
> [!NOTE]
>  <span data-ttu-id="5dd20-108">Na maioria dos casos, você será capaz de usar os tipos de monitoramento de integridade do ASP.NET, conforme implementado e controlará o sistema de monitoramento de integridade, especificando valores a `healthMonitoring` seção de configuração.</span><span class="sxs-lookup"><span data-stu-id="5dd20-108">In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the `healthMonitoring` configuration section.</span></span> <span data-ttu-id="5dd20-109">Você também pode derivar dos tipos de monitoramento de integridade para criar seus próprios eventos personalizados e provedores.</span><span class="sxs-lookup"><span data-stu-id="5dd20-109">You can also derive from the health-monitoring types to create your own custom events and providers.</span></span> <span data-ttu-id="5dd20-110">Para obter um exemplo de criação de uma classe de evento personalizado, consulte a seção de exemplo.</span><span class="sxs-lookup"><span data-stu-id="5dd20-110">For an example of creating a custom event class, see the Example section.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5dd20-111">O exemplo a seguir tem duas partes.</span><span class="sxs-lookup"><span data-stu-id="5dd20-111">The following example has two parts.</span></span> <span data-ttu-id="5dd20-112">A primeira é um trecho de um arquivo de configuração que permite que o ASP.NET usar um evento personalizado que usa o <xref:System.Web.Management.WebProcessInformation> tipo.</span><span class="sxs-lookup"><span data-stu-id="5dd20-112">The first is an excerpt of a configuration file that enables ASP.NET to use a custom event that uses the <xref:System.Web.Management.WebProcessInformation> type.</span></span>  
  
 <span data-ttu-id="5dd20-113">O segundo mostra como implementar o evento personalizado.</span><span class="sxs-lookup"><span data-stu-id="5dd20-113">The second shows how to implement the custom event.</span></span>  
  
 <span data-ttu-id="5dd20-114">Certifique-se de que seu evento personalizado é gerado em um momento apropriado, ou seja, quando o evento de integridade do sistema equivalentes substitui será emitido.</span><span class="sxs-lookup"><span data-stu-id="5dd20-114">Ensure that your custom event is raised at the proper time, that is, when the equivalent system health event it replaces would be raised.</span></span>  
  
```  
<healthMonitoring   
  enabled="true" heartBeatInterval="0">  
  
    <eventMappings>  
      <add    
        name="SampleProcessInformation"   
        type="SamplesAspNet.SampleWebProcessInformation, webprocessinformation, Version=1.0.1585.27289, Culture=neutral, PublicKeyToken=3648e5c763a8239f, processorArchitecture=MSIL"/>  
    </eventMappings>  
  
    <rules>  
      <add   
        name="Custom Process Information"  
        eventName="SampleProcessInformation"   
        provider="EventLogProvider"  
        profile="Default"/>  
    </rules>  
  
</healthMonitoring>  
  
```  
  
 <span data-ttu-id="5dd20-115">O exemplo a seguir mostra como implementar um evento personalizado que usa o <xref:System.Web.Management.WebProcessInformation> tipo.</span><span class="sxs-lookup"><span data-stu-id="5dd20-115">The following example shows how to implement a custom event that uses the <xref:System.Web.Management.WebProcessInformation> type.</span></span>  
  
 [!code-csharp[System.Web.Management.WebProcessInformation#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebProcessInformation/CS/webprocessinformation.cs#1)]
 [!code-vb[System.Web.Management.WebProcessInformation#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebProcessInformation/VB/webprocessinformation.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Management.WebHeartbeatEvent" />
  </Docs>
  <Members>
    <Member MemberName="AccountName">
      <MemberSignature Language="C#" Value="public string AccountName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AccountName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebProcessInformation.AccountName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AccountName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AccountName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5dd20-116">Obtém o nome da conta do processo de trabalho.</span><span class="sxs-lookup"><span data-stu-id="5dd20-116">Gets the account name for the worker process.</span></span></summary>
        <value><span data-ttu-id="5dd20-117">O nome de conta do processo de trabalho.</span><span class="sxs-lookup"><span data-stu-id="5dd20-117">The worker process account name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5dd20-118">Seu aplicativo precisa as permissões apropriadas para acessar as informações fornecidas por esta propriedade.</span><span class="sxs-lookup"><span data-stu-id="5dd20-118">Your application needs the appropriate permissions to access the information provided by this property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5dd20-119">O exemplo a seguir mostra como obter o nome da conta de processo.</span><span class="sxs-lookup"><span data-stu-id="5dd20-119">The following example shows how to obtain the process account name.</span></span>  
  
 [!code-csharp[System.Web.Management.WebProcessInformation#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebProcessInformation/CS/webprocessinformation.cs#4)]
 [!code-vb[System.Web.Management.WebProcessInformation#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebProcessInformation/VB/webprocessinformation.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatToString">
      <MemberSignature Language="C#" Value="public void FormatToString (System.Web.Management.WebEventFormatter formatter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FormatToString(class System.Web.Management.WebEventFormatter formatter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebProcessInformation.FormatToString(System.Web.Management.WebEventFormatter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FormatToString (formatter As WebEventFormatter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FormatToString(System::Web::Management::WebEventFormatter ^ formatter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatter" Type="System.Web.Management.WebEventFormatter" />
      </Parameters>
      <Docs>
        <param name="formatter"><span data-ttu-id="5dd20-120">O <see cref="T:System.Web.Management.WebEventFormatter" /> que contém as configurações de tabulação e recuo usadas para formatar as informações de eventos de integridade da Web.</span><span class="sxs-lookup"><span data-stu-id="5dd20-120">The <see cref="T:System.Web.Management.WebEventFormatter" /> that contains the tab and indentation settings used to format the Web health event information.</span></span></param>
        <summary><span data-ttu-id="5dd20-121">Formata as informações do aplicativo.</span><span class="sxs-lookup"><span data-stu-id="5dd20-121">Formats the application information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5dd20-122">O <xref:System.Web.Management.WebProcessInformation.FormatToString%2A> método fornece um formato uniforme para obter informações de evento, que é útil se os dados do evento devem ser registrados e posteriormente apresentados ao usuário.</span><span class="sxs-lookup"><span data-stu-id="5dd20-122">The <xref:System.Web.Management.WebProcessInformation.FormatToString%2A> method provides a uniform format for event information, which is useful if the event data must be logged and later presented to the user.</span></span> <span data-ttu-id="5dd20-123">O método é chamado internamente quando o provedor chama uma da <xref:System.Web.Management.WebBaseEvent.ToString%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="5dd20-123">The method is called internally when the provider invokes one of the <xref:System.Web.Management.WebBaseEvent.ToString%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5dd20-124">O exemplo a seguir mostra como formatar informações personalizadas.</span><span class="sxs-lookup"><span data-stu-id="5dd20-124">The following example shows how to format custom information.</span></span>  
  
 [!code-csharp[System.Web.Management.WebProcessInformation#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebProcessInformation/CS/webprocessinformation.cs#7)]
 [!code-vb[System.Web.Management.WebProcessInformation#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebProcessInformation/VB/webprocessinformation.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessID">
      <MemberSignature Language="C#" Value="public int ProcessID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ProcessID" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebProcessInformation.ProcessID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProcessID As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ProcessID { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5dd20-125">Obtém o identificador de processo.</span><span class="sxs-lookup"><span data-stu-id="5dd20-125">Gets the process identifier.</span></span></summary>
        <value><span data-ttu-id="5dd20-126">O identificador de processo.</span><span class="sxs-lookup"><span data-stu-id="5dd20-126">The process identifier.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5dd20-127">Este é o identificador do processo de trabalho que hospeda o ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="5dd20-127">This is the identifier of the worker process that hosts ASP.NET.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5dd20-128">O exemplo a seguir mostra como obter o identificador de processo.</span><span class="sxs-lookup"><span data-stu-id="5dd20-128">The following example shows how to obtain the process identifier.</span></span>  
  
 [!code-csharp[System.Web.Management.WebProcessInformation#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebProcessInformation/CS/webprocessinformation.cs#5)]
 [!code-vb[System.Web.Management.WebProcessInformation#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebProcessInformation/VB/webprocessinformation.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessName">
      <MemberSignature Language="C#" Value="public string ProcessName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProcessName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebProcessInformation.ProcessName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProcessName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProcessName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5dd20-129">Obtém o nome do processo.</span><span class="sxs-lookup"><span data-stu-id="5dd20-129">Gets the name of the process.</span></span></summary>
        <value><span data-ttu-id="5dd20-130">O nome do processo.</span><span class="sxs-lookup"><span data-stu-id="5dd20-130">The name of the process.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5dd20-131">Esse é o nome do processo de trabalho que hospeda o ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="5dd20-131">This is the name of the worker process that hosts ASP.NET.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5dd20-132">O exemplo a seguir mostra como obter o nome do processo.</span><span class="sxs-lookup"><span data-stu-id="5dd20-132">The following example shows how to obtain the process name.</span></span>  
  
 [!code-csharp[System.Web.Management.WebProcessInformation#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebProcessInformation/CS/webprocessinformation.cs#6)]
 [!code-vb[System.Web.Management.WebProcessInformation#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebProcessInformation/VB/webprocessinformation.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>