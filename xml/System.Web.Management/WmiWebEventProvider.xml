<Type Name="WmiWebEventProvider" FullName="System.Web.Management.WmiWebEventProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b99bd6230739d49f395e0afc13473b49caf0ffd3" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37751254" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WmiWebEventProvider : System.Web.Management.WebEventProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WmiWebEventProvider extends System.Web.Management.WebEventProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WmiWebEventProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class WmiWebEventProvider&#xA;Inherits WebEventProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class WmiWebEventProvider : System::Web::Management::WebEventProvider" />
  <TypeSignature Language="F#" Value="type WmiWebEventProvider = class&#xA;    inherit WebEventProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Management.WebEventProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Implementa um provedor de eventos que mapeia eventos de monitoramento de integridade do ASP.NET para eventos da WMI (Instrumentação de Gerenciamento do Windows).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Monitoramento de integridade do ASP.NET permite que a equipe de produção e operações gerenciar aplicativos Web implantados. O <xref:System.Web.Management> namespace contém os tipos de evento de integridade responsáveis pelo empacotamento de dados de status de integridade do aplicativo e os tipos de provedor responsáveis por processar esses dados. Ele também contém tipos de suporte que ajudam durante o gerenciamento de eventos de integridade.  
  
 O ASP.NET usa essa classe para mapear eventos de monitoramento de integridade para eventos WMI. Para habilitar a entrega de eventos de monitoramento de integridade do ASP.NET para o subsistema WMI, você deve configurar o <xref:System.Web.Management.WmiWebEventProvider> classe adicionando as configurações apropriadas no `<healthMonitoring>` seção do arquivo de configuração.  
  
 As informações contidas no arquivo ASPNET descrevem os parâmetros dos eventos WMI acionados quando eventos de monitoramento de integridade do ASP.NET são roteados para o <xref:System.Web.Management.WmiWebEventProvider> de classe e mapeados em eventos do WMI. O arquivo ASPNET é armazenado no diretório de compilação do .NET Framework, por exemplo %windir%\Microsoft.NET\Framework\\*BuildNumber*. Para obter mais informações sobre o relatório de eventos de monitoramento de integridade como eventos do WMI, consulte [NIB: usando o WMI para fornecer eventos de monitoramento de integridade de ASP.NET](http://msdn.microsoft.com/library/e57fea2f-610f-4432-9dd6-dd10a6c5bd10).  
  
> [!NOTE]
>  Na maioria dos casos, você será capaz de usar os tipos de monitoramento de integridade do ASP.NET, conforme implementado e controlará o sistema de monitoramento de integridade, especificando valores a `<healthMonitoring>` seção de configuração. Você também pode derivar de tipos de monitoramento de integridade para criar seus próprios eventos personalizados e provedores. Para obter um exemplo de criação de um provedor personalizado, consulte [como: implementar a integridade de monitoramento personalizado provedor exemplo](http://msdn.microsoft.com/library/bbb1c959-e6e4-42b2-be62-49b7ca5ab72c).  
  
   
  
## Examples  
 O exemplo a seguir mostra como criar um consumidor de eventos WMI emitido pelo como resultado de eventos de integridade do aplicativo Web de monitoramento de integridade do ASP.NET.  
  
> [!NOTE]
>  O <xref:System.Web.Management.WmiWebEventProvider> classe e os tipos de evento de integridade para monitorar já são configurados por padrão. A única coisa que você precisa fazer é definir a regra para todos os eventos de integridade. Lembre-se de que os eventos de integridade não foram expedidos para o <xref:System.Web.Management.WmiWebEventProvider> provedor por padrão.  
  
 [!code-csharp[System.Web.Management.WmiWebEventProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WmiWebEventProvider/CS/WmiWebEventListener.cs#1)]
 [!code-vb[System.Web.Management.WmiWebEventProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WmiWebEventProvider/VB/WmiWebEventListener.vb#1)]  
  
 O exemplo a seguir é um trecho do arquivo de configuração que mostra uma `<healthMonitoring>` seção de configuração que permite que o ASP.NET usar o <xref:System.Web.Management.WmiWebEventProvider> provedor para processar todos os eventos de monitoramento de integridade.  
  
```  
<healthMonitoring>  
  <rules>  
    <add   
      name="Using Wmi"  
      eventName="All Events"   
      provider="WmiWebEventProvider"   
      profile="Critical"/>  
  </rules>  
</healthMonitoring>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WmiWebEventProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WmiWebEventProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WmiWebEventProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Management.WmiWebEventProvider" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este construtor é usado internamente pelo sistema de monitoramento de integridade do ASP.NET. Você nunca irá usá-lo para criar uma instância da <xref:System.Web.Management.TraceWebEventProvider> classe, mas você pode chamar esse construtor, quando você implementa seu próprio tipo de provedor que herda dessa classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WmiWebEventProvider.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="wmiWebEventProvider.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Remove todos os eventos do buffer do provedor.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando este método é chamado, todos os eventos no buffer do provedor são removidos imediatamente, independentemente de quanto tempo tiver decorrido desde a última gravação ou quantos eventos são no buffer. A hora da última gravação é redefinida para o tempo da ação de liberação. Chamar esse método quando o mecanismo de armazenamento em buffer não está habilitado não tem nenhum efeito.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WmiWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, config As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ config);" />
      <MemberSignature Language="F#" Value="override this.Initialize : string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="wmiWebEventProvider.Initialize (name, config)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">O nome usado no arquivo de configuração para identificar esse provedor.</param>
        <param name="config">Um objeto <see cref="T:System.Collections.Specialized.NameValueCollection" /> que especifica os atributos designados para esse provedor no arquivo de configuração.</param>
        <summary>Define os valores iniciais para esse objeto.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET chama o <xref:System.Web.Management.WmiWebEventProvider.Initialize%2A> método depois de chamar o <xref:System.Web.Management.WmiWebEventProvider.%23ctor%2A> construtor. Esse método é chamado para inicializar o <xref:System.Web.Management.WmiWebEventProvider> classe com as definições de configuração e o nome especificado no arquivo de configuração.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessEvent">
      <MemberSignature Language="C#" Value="public override void ProcessEvent (System.Web.Management.WebBaseEvent eventRaised);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ProcessEvent(class System.Web.Management.WebBaseEvent eventRaised) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WmiWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ProcessEvent (eventRaised As WebBaseEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ProcessEvent(System::Web::Management::WebBaseEvent ^ eventRaised);" />
      <MemberSignature Language="F#" Value="override this.ProcessEvent : System.Web.Management.WebBaseEvent -&gt; unit" Usage="wmiWebEventProvider.ProcessEvent eventRaised" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventRaised" Type="System.Web.Management.WebBaseEvent" />
      </Parameters>
      <Docs>
        <param name="eventRaised">O objeto <see cref="T:System.Web.Management.WebBaseEvent" /> a ser processado.</param>
        <summary>Processa o evento passado para o provedor.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse é o método que o monitoramento de integridade do ASP.NET chama para iniciar o processamento do evento.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">O evento não pôde ser gerado.</exception>
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public override void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WmiWebEventProvider.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Shutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Shutdown();" />
      <MemberSignature Language="F#" Value="override this.Shutdown : unit -&gt; unit" Usage="wmiWebEventProvider.Shutdown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Executa tarefas associadas ao desligamento do provedor.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET chama o <xref:System.Web.Management.EventLogWebEventProvider.Shutdown%2A> método quando o domínio do aplicativo que hospeda o aplicativo Web é encerrada. O método é chamado para executar tarefas que permitirá que o aplicativo sejam encerrados normalmente.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>