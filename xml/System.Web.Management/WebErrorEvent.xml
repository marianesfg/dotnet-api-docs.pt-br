<Type Name="WebErrorEvent" FullName="System.Web.Management.WebErrorEvent">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d51f303b1972374be3abd4e46fe5551c03e520d2" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51864678" /></Metadata><TypeSignature Language="C#" Value="public class WebErrorEvent : System.Web.Management.WebBaseErrorEvent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebErrorEvent extends System.Web.Management.WebBaseErrorEvent" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WebErrorEvent" />
  <TypeSignature Language="VB.NET" Value="Public Class WebErrorEvent&#xA;Inherits WebBaseErrorEvent" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebErrorEvent : System::Web::Management::WebBaseErrorEvent" />
  <TypeSignature Language="F#" Value="type WebErrorEvent = class&#xA;    inherit WebBaseErrorEvent" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Management.WebBaseErrorEvent</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornece informações sobre erros de sistema.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Monitoramento de integridade do ASP.NET permite que a equipe de produção e operações gerenciar aplicativos Web implantados. O <xref:System.Web.Management> namespace contém os tipos de evento de integridade responsáveis pelo empacotamento de dados de status de integridade do aplicativo e os tipos de provedor responsáveis por processar esses dados. Ele também contém tipos de suporte que ajudam durante o gerenciamento de eventos de integridade.  
  
 O <xref:System.Web.Management.WebErrorEvent> fornece informações sobre erros causados por problemas com o código de configuração ou no aplicativo. Um exemplo é o erro emitido pelo ASP.NET quando um erro é encontrado em uma página.  
  
> [!NOTE]
>  Na maioria dos casos, você será capaz de usar os tipos de monitoramento de integridade do ASP.NET, conforme implementado e controlará o sistema de monitoramento de integridade, especificando valores a `healthMonitoring` seção de configuração. Você também pode derivar de tipos de monitoramento de integridade para criar seus próprios eventos personalizados e provedores. Para obter um exemplo de derivar do <xref:System.Web.Management.WebErrorEvent> de classe, consulte o exemplo fornecido neste tópico.  
  
   
  
## Examples  
 O exemplo de código a seguir mostra como derivar a <xref:System.Web.Management.WebErrorEvent> classe para criar um evento personalizado.  
  
 Também mostrado é um trecho do arquivo de configuração que permite que o ASP.NET usar este evento personalizado.  
  
```  
<healthMonitoring   
  enabled="true" heartBeatInterval="0">  
  
  <eventMappings>  
  
    <add  name="SampleWebErrorEvent" type="SamplesAspNet.SampleWebErrorEvent,weberrorevent,Version=1.0.1573.21549, Culture=neutral, PublicKeyToken=2a0b23915ac7352b, processorArchitecture=MSIL"/>  
  
  </eventMappings>  
  
  <profiles>  
    <add name="Custom"  
      minInstances="1"  
      maxLimit="Infinite"  
      minInterval="00:00:00" />  
  </profiles>  
  
  <rules>  
    <clear />  
  
    <add name="Custom Web Error Event"   
      eventName="SampleWebErrorEvent"  
      provider="EventLogProvider"   
      profile="Custom" />  
  </rules>  
  
</healthMonitoring>  
```  
  
 [!code-csharp[System.Web.Management.WebErrorEvent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebErrorEvent/CS/weberrorevent.cs#1)]
 [!code-vb[System.Web.Management.WebErrorEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebErrorEvent/VB/weberrorevent.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/e003f224-70fe-4cd8-a71a-2dc81e2d7e4c">Visão geral do monitoramento de integridade do ASP.NET</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Management.WebErrorEvent" />.</summary>
        <altmember cref="T:System.Web.Management.WebEventCodes" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebErrorEvent (string message, object eventSource, int eventCode, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebErrorEvent.#ctor(System.String,System.Object,System.Int32,System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebErrorEvent(System::String ^ message, System::Object ^ eventSource, int eventCode, Exception ^ exception);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebErrorEvent : string * obj * int * Exception -&gt; System.Web.Management.WebErrorEvent" Usage="new System.Web.Management.WebErrorEvent (message, eventSource, eventCode, exception)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">A descrição do evento.</param>
        <param name="eventSource">O objeto que é a origem do evento.</param>
        <param name="eventCode">O código associado ao evento. Quando você implementar um evento personalizado, o código de evento deverá ser maior que <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</param>
        <param name="exception">A <see cref="T:System.Exception" /> associada ao erro.</param>
        <summary>Inicializa a classe <see cref="T:System.Web.Management.WebErrorEvent" /> usando os parâmetros fornecidos.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Management.WebErrorEvent.%23ctor%2A> construtor não se destina a ser usado diretamente do seu código. Ele é chamado pelo ASP.NET. Você pode chamar o <xref:System.Web.Management.WebErrorEvent.%23ctor%2A> construtor quando derivar o <xref:System.Web.Management.WebErrorEvent> classe.  
  
   
  
## Examples  
 O exemplo de código a seguir mostra como personalizar esse construtor.  
  
 [!code-csharp[System.Web.Management.WebErrorEvent#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebErrorEvent/CS/weberrorevent.cs#2)]
 [!code-vb[System.Web.Management.WebErrorEvent#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebErrorEvent/VB/weberrorevent.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Management.WebEventCodes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebErrorEvent (string message, object eventSource, int eventCode, int eventDetailCode, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode, int32 eventDetailCode, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebErrorEvent.#ctor(System.String,System.Object,System.Int32,System.Int32,System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebErrorEvent(System::String ^ message, System::Object ^ eventSource, int eventCode, int eventDetailCode, Exception ^ exception);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebErrorEvent : string * obj * int * int * Exception -&gt; System.Web.Management.WebErrorEvent" Usage="new System.Web.Management.WebErrorEvent (message, eventSource, eventCode, eventDetailCode, exception)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
        <Parameter Name="eventDetailCode" Type="System.Int32" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">A descrição do evento.</param>
        <param name="eventSource">O objeto que é a origem do evento.</param>
        <param name="eventCode">O código associado ao evento. Quando você implementar um evento personalizado, o código de evento deverá ser maior que <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</param>
        <param name="eventDetailCode">O valor de <see cref="T:System.Web.Management.WebEventCodes" /> que especifica o identificador detalhado do evento.</param>
        <param name="exception">A <see cref="T:System.Exception" /> associada ao erro.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Management.WebErrorEvent" /> usando os parâmetros fornecidos.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Management.WebErrorEvent.%23ctor%2A> construtor não se destina a ser usado diretamente do seu código. Ele é chamado pelo ASP.NET. Você pode chamar o <xref:System.Web.Management.WebErrorEvent.%23ctor%2A> construtor quando derivar o <xref:System.Web.Management.WebErrorEvent> classe.  
  
   
  
## Examples  
 O exemplo de código a seguir mostra como derivar a <xref:System.Web.Management.WebErrorEvent> classe para criar um evento personalizado.  
  
 [!code-csharp[System.Web.Management.WebErrorEvent#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebErrorEvent/CS/weberrorevent.cs#3)]
 [!code-vb[System.Web.Management.WebErrorEvent#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebErrorEvent/VB/weberrorevent.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Management.WebEventCodes" />
      </Docs>
    </Member>
    <Member MemberName="IncrementPerfCounters">
      <MemberSignature Language="C#" Value="protected internal override void IncrementPerfCounters ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void IncrementPerfCounters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebErrorEvent.IncrementPerfCounters" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub IncrementPerfCounters ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void IncrementPerfCounters();" />
      <MemberSignature Language="F#" Value="override this.IncrementPerfCounters : unit -&gt; unit" Usage="webErrorEvent.IncrementPerfCounters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Usado internamente para incrementar os contadores de desempenho.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestInformation">
      <MemberSignature Language="C#" Value="public System.Web.Management.WebRequestInformation RequestInformation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Management.WebRequestInformation RequestInformation" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebErrorEvent.RequestInformation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RequestInformation As WebRequestInformation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Management::WebRequestInformation ^ RequestInformation { System::Web::Management::WebRequestInformation ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RequestInformation : System.Web.Management.WebRequestInformation" Usage="System.Web.Management.WebErrorEvent.RequestInformation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Management.WebRequestInformation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém as informações da solicitação de aplicativo.</summary>
        <value>Um <see cref="T:System.Web.Management.WebRequestInformation" /> objeto que contém informações sobre a solicitação atual.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir mostra como obter o <xref:System.Web.Management.WebErrorEvent.RequestInformation%2A> valor.  
  
 [!code-csharp[System.Web.Management.WebErrorEvent#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebErrorEvent/CS/weberrorevent.cs#5)]
 [!code-vb[System.Web.Management.WebErrorEvent#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebErrorEvent/VB/weberrorevent.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThreadInformation">
      <MemberSignature Language="C#" Value="public System.Web.Management.WebThreadInformation ThreadInformation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Management.WebThreadInformation ThreadInformation" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebErrorEvent.ThreadInformation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ThreadInformation As WebThreadInformation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Management::WebThreadInformation ^ ThreadInformation { System::Web::Management::WebThreadInformation ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ThreadInformation : System.Web.Management.WebThreadInformation" Usage="System.Web.Management.WebErrorEvent.ThreadInformation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Management.WebThreadInformation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém as informações do thread de aplicativo.</summary>
        <value>Um <see cref="T:System.Web.Management.WebThreadInformation" /> objeto que contém informações sobre o thread atual.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir mostra como obter o aplicativo <xref:System.Web.Management.WebErrorEvent.ThreadInformation%2A> valor.  
  
 [!code-csharp[System.Web.Management.WebErrorEvent#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebErrorEvent/CS/weberrorevent.cs#6)]
 [!code-vb[System.Web.Management.WebErrorEvent#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebErrorEvent/VB/weberrorevent.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>