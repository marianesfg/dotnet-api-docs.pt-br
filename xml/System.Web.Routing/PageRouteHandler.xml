<Type Name="PageRouteHandler" FullName="System.Web.Routing.PageRouteHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bad157947d7073f05d6062d59a8d705583cc3d22" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30539640" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PageRouteHandler : System.Web.Routing.IRouteHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PageRouteHandler extends System.Object implements class System.Web.Routing.IRouteHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.Routing.PageRouteHandler" />
  <TypeSignature Language="VB.NET" Value="Public Class PageRouteHandler&#xA;Implements IRouteHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class PageRouteHandler : System::Web::Routing::IRouteHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.Routing.IRouteHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="f3fcd-101">Fornece propriedades e métodos para definir como uma URL é mapeada para um arquivo físico.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f3fcd-101">Provides properties and methods for defining how a URL maps to a physical file.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3fcd-102">Você passar uma instância de <xref:System.Web.Routing.PageRouteHandler> para o <xref:System.Web.Routing.Route> construtor para mapear a URL de um arquivo físico.</span><span class="sxs-lookup"><span data-stu-id="f3fcd-102">You pass an instance of <xref:System.Web.Routing.PageRouteHandler> to the <xref:System.Web.Routing.Route> constructor in order to map a URL of a physical file.</span></span> <span data-ttu-id="f3fcd-103">O <xref:System.Web.Routing.PageRouteHandler> objeto Especifica o caminho virtual do arquivo físico e determina se as regras de autorização para a URL física é verificada.</span><span class="sxs-lookup"><span data-stu-id="f3fcd-103">The <xref:System.Web.Routing.PageRouteHandler> object specifies the virtual path of the physical file and determines whether authorization rules for the physical URL is checked.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Routing.Route" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f3fcd-104">Inicializa uma nova instância da classe <see cref="T:System.Web.Routing.PageRouteHandler" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3fcd-104">Initializes a new instance of the <see cref="T:System.Web.Routing.PageRouteHandler" /> class.</span>
          </span>
        </summary>
        <altmember cref="T:System.Web.Routing.Route" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageRouteHandler (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.PageRouteHandler.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (virtualPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageRouteHandler(System::String ^ virtualPath);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">
          <span data-ttu-id="f3fcd-105">O caminho virtual do arquivo físico para este objeto <see cref="P:System.Web.Routing.RouteData.Route" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3fcd-105">The virtual path of the physical file for this <see cref="P:System.Web.Routing.RouteData.Route" /> object.</span>
          </span>
          <span data-ttu-id="f3fcd-106">O arquivo deve estar localizado no aplicativo atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3fcd-106">The file must be located in the current application.</span>
          </span>
          <span data-ttu-id="f3fcd-107">Portanto, o caminho deve começar com um til (~).</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3fcd-107">Therefore, the path must begin with a tilde (~).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3fcd-108">Inicializa uma nova instância da classe <see cref="T:System.Web.Routing.PageRouteHandler" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3fcd-108">Initializes a new instance of the <see cref="T:System.Web.Routing.PageRouteHandler" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3fcd-109">Quando você usa este construtor o <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> está definida como `true`.</span><span class="sxs-lookup"><span data-stu-id="f3fcd-109">When you use this constructor, the <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> property is set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f3fcd-110">O parâmetro <paramref name="virtualPath" /> é <see langword="null" /> ou é uma cadeia de caracteres vazia ou não começa com "~ /".</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3fcd-110">The <paramref name="virtualPath" /> parameter is <see langword="null" /> or is an empty string or does not start with "~/".</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.Routing.Route" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageRouteHandler (string virtualPath, bool checkPhysicalUrlAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string virtualPath, bool checkPhysicalUrlAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.PageRouteHandler.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (virtualPath As String, checkPhysicalUrlAccess As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageRouteHandler(System::String ^ virtualPath, bool checkPhysicalUrlAccess);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="checkPhysicalUrlAccess" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="virtualPath">
          <span data-ttu-id="f3fcd-111">O caminho virtual do arquivo físico deste objeto <see cref="P:System.Web.Routing.RouteData.Route" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3fcd-111">The virtual path of the physical file of this <see cref="P:System.Web.Routing.RouteData.Route" /> object.</span>
          </span>
          <span data-ttu-id="f3fcd-112">O arquivo deve estar localizado no aplicativo atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3fcd-112">The file must be located in the current application.</span>
          </span>
          <span data-ttu-id="f3fcd-113">Portanto, o caminho deve começar com um til (~).</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3fcd-113">Therefore, the path must begin with a tilde (~).</span>
          </span>
        </param>
        <param name="checkPhysicalUrlAccess">
          <span data-ttu-id="f3fcd-114">Se essa propriedade for definida como <see langword="false" />, serão aplicadas regras de autorização à URL da solicitação, mas não à URL da página física.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3fcd-114">If this property is set to <see langword="false" />, authorization rules will be applied to the request URL and not to the URL of the physical page.</span>
          </span>
          <span data-ttu-id="f3fcd-115">Se essa propriedade for definida como <see langword="true" />, serão aplicadas regras de autorização à URL da solicitação e à URL da página física.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3fcd-115">If this property is set to <see langword="true" />, authorization rules will be applied to both the request URL and to the URL of the physical page.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3fcd-116">Inicializa uma nova instância da classe <see cref="T:System.Web.Routing.PageRouteHandler" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3fcd-116">Initializes a new instance of the <see cref="T:System.Web.Routing.PageRouteHandler" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3fcd-117">Por padrão, o <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> é de propriedade `true`.</span><span class="sxs-lookup"><span data-stu-id="f3fcd-117">By default, the <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> property is `true`.</span></span> <span data-ttu-id="f3fcd-118">Portanto, se você quiser que as regras de autorização a ser aplicado para a URL da página física e a URL da rota, você pode usar o <xref:System.Web.Routing.PageRouteHandler.%23ctor%28System.String%29> construtor em vez deste construtor.</span><span class="sxs-lookup"><span data-stu-id="f3fcd-118">Therefore, if you want authorization rules to be applied to both the URL of the physical page and to the route URL, you can use the <xref:System.Web.Routing.PageRouteHandler.%23ctor%28System.String%29> constructor instead of this constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f3fcd-119">O parâmetro <paramref name="virtualPath" /> é <see langword="null" /> ou é uma cadeia de caracteres vazia ou não começa com "~ /".</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3fcd-119">The <paramref name="virtualPath" /> parameter is <see langword="null" /> or is an empty string or does not start with "~/".</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" />
        <altmember cref="T:System.Web.Routing.Route" />
      </Docs>
    </Member>
    <Member MemberName="CheckPhysicalUrlAccess">
      <MemberSignature Language="C#" Value="public bool CheckPhysicalUrlAccess { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckPhysicalUrlAccess" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CheckPhysicalUrlAccess As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CheckPhysicalUrlAccess { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3fcd-120">Obtém um valor que determina se as regras de autorização são aplicadas à URL do arquivo físico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3fcd-120">Gets a value that determines whether authorization rules are applied to the physical file's URL.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3fcd-121">
            <see langword="true" /> se a autorização for verificada para a URL do arquivo físico que está associado à rota; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3fcd-121">
              <see langword="true" /> if authorization is checked for the URL of the physical file that is associated with the route; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f3fcd-122">O padrão é <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3fcd-122">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3fcd-123">Você pode definir o <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> propriedade quando você usa o <xref:System.Web.Routing.PageRouteHandler.%23ctor%28System.String%2CSystem.Boolean%29> construtor.</span><span class="sxs-lookup"><span data-stu-id="f3fcd-123">You can set the <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> property when you use the <xref:System.Web.Routing.PageRouteHandler.%23ctor%28System.String%2CSystem.Boolean%29> constructor.</span></span>  
  
 <span data-ttu-id="f3fcd-124">O valor de <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> propriedade determina se o <xref:System.Web.Routing.PageRouteHandler> objeto verificará as permissões de segurança somente para a URL da rota ou para a página física e a URL da rota.</span><span class="sxs-lookup"><span data-stu-id="f3fcd-124">The value of the <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> property determines whether the <xref:System.Web.Routing.PageRouteHandler> object will check security permissions only for the route URL or for both the physical page and the route URL.</span></span>  
  
 <span data-ttu-id="f3fcd-125">Quando o <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> está definida como `true` (que é o valor padrão), um usuário deve ter permissão para acessar a URL da rota e a URL física.</span><span class="sxs-lookup"><span data-stu-id="f3fcd-125">When the <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> property is set to `true` (which is its default value), a user must have permission to access both the route URL and the physical URL.</span></span> <span data-ttu-id="f3fcd-126">Quando o <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> está definida como `false`, um usuário precisa apenas a permissão para acessar a URL da rota e permissões para a URL física não são verificadas.</span><span class="sxs-lookup"><span data-stu-id="f3fcd-126">When the <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> property is set to `false`, a user requires only permission to access the route URL, and permissions for the physical URL are not checked.</span></span>  
  
 <span data-ttu-id="f3fcd-127">As permissões são definidas no arquivo Web. config, conforme mostrado no exemplo a seguir:</span><span class="sxs-lookup"><span data-stu-id="f3fcd-127">Permissions are defined in the Web.config file, as shown in the following example:</span></span>  
  
```  
<configuration>  
  <location path="categoriespage.aspx">  
    <system.web>  
      <authorization>  
        <allow roles="admin"/>  
        <deny users="*"/>  
      </authorization>  
    </system.web>  
  </location>  
  <location path="category">  
    <system.web>  
      <authorization>  
        <allow users="*"/>  
      </authorization>  
    </system.web>  
  </location>  
</configuration>  
```  
  
 <span data-ttu-id="f3fcd-128">Para uma URL de solicitação que contém `Category/food/show` depois do nome de domínio, se o padrão de URL da rota for `Category/{action}/{categoryName}` e a página física é Categoriespage.aspx, [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] aplica-se as permissões definidas no exemplo anterior de uma das seguintes maneiras:</span><span class="sxs-lookup"><span data-stu-id="f3fcd-128">For a request URL that contains `Category/food/show` after the domain name, if the route URL pattern is `Category/{action}/{categoryName}` and the physical page is Categoriespage.aspx, [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] applies the permissions defined in the previous example in one of the following ways:</span></span>  
  
-   <span data-ttu-id="f3fcd-129">Se o <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> é de propriedade `false`, todos os usuários têm acesso, porque todos os usuários são concedeu acesso para o padrão de URL que começa com `category`.</span><span class="sxs-lookup"><span data-stu-id="f3fcd-129">If the <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> property is `false`, all users are granted access, because all users are granted access to the URL pattern that starts with `category`.</span></span>  
  
-   <span data-ttu-id="f3fcd-130">Se o <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> é de propriedade `true`, apenas `admin` usuários tenham acesso.</span><span class="sxs-lookup"><span data-stu-id="f3fcd-130">If the <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> property is `true`, only `admin` users are granted access.</span></span> <span data-ttu-id="f3fcd-131">Todos os usuários têm acesso para o padrão de URL que começa com `category`, mas apenas `admin` os usuários têm acesso para a página física Categoriespage.aspx.</span><span class="sxs-lookup"><span data-stu-id="f3fcd-131">All users have access to the URL pattern that begins with `category`, but only `admin` users have access to the physical page Categoriespage.aspx.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Routing.Route" />
      </Docs>
    </Member>
    <Member MemberName="GetHttpHandler">
      <MemberSignature Language="C#" Value="public virtual System.Web.IHttpHandler GetHttpHandler (System.Web.Routing.RequestContext requestContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.IHttpHandler GetHttpHandler(class System.Web.Routing.RequestContext requestContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.PageRouteHandler.GetHttpHandler(System.Web.Routing.RequestContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::IHttpHandler ^ GetHttpHandler(System::Web::Routing::RequestContext ^ requestContext);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.Routing.IRouteHandler.GetHttpHandler(System.Web.Routing.RequestContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHttpHandler</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestContext" Type="System.Web.Routing.RequestContext" />
      </Parameters>
      <Docs>
        <param name="requestContext">
          <span data-ttu-id="f3fcd-132">Um objeto que encapsula informações sobre a solicitação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3fcd-132">An object that encapsulates information about the request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3fcd-133">Retorna o objeto que processa a solicitação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3fcd-133">Returns the object that processes the request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3fcd-134">O objeto que processa a solicitação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3fcd-134">The object that processes the request.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f3fcd-135">O parâmetro <paramref name="requestContext" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3fcd-135">The <paramref name="requestContext" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.Routing.Route" />
      </Docs>
    </Member>
    <Member MemberName="GetSubstitutedVirtualPath">
      <MemberSignature Language="C#" Value="public string GetSubstitutedVirtualPath (System.Web.Routing.RequestContext requestContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetSubstitutedVirtualPath(class System.Web.Routing.RequestContext requestContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.PageRouteHandler.GetSubstitutedVirtualPath(System.Web.Routing.RequestContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetSubstitutedVirtualPath(System::Web::Routing::RequestContext ^ requestContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestContext" Type="System.Web.Routing.RequestContext" />
      </Parameters>
      <Docs>
        <param name="requestContext">
          <span data-ttu-id="f3fcd-136">Um objeto que encapsula informações sobre a solicitação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3fcd-136">An object that encapsulates information about the request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3fcd-137">Retorna o caminho virtual do arquivo físico para a rota após as substituições terem sido aplicadas a quaisquer parâmetros de substituição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3fcd-137">Returns the virtual path of the physical file for the route after substitutions have been applied to any replacement parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3fcd-138">A URL do arquivo físico que foi gerado de uma rota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3fcd-138">The URL of the physical file that was generated from a route.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3fcd-139">Se o <xref:System.Web.Routing.PageRouteHandler.VirtualPath%2A> valor não contém os parâmetros de substituição, o <xref:System.Web.Routing.PageRouteHandler.GetSubstitutedVirtualPath%2A> método retorna o mesmo valor que o <xref:System.Web.Routing.PageRouteHandler.VirtualPath%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="f3fcd-139">If the <xref:System.Web.Routing.PageRouteHandler.VirtualPath%2A> value does not contain any replacement parameters, the <xref:System.Web.Routing.PageRouteHandler.GetSubstitutedVirtualPath%2A> method returns the same value as the <xref:System.Web.Routing.PageRouteHandler.VirtualPath%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f3fcd-140">O parâmetro <paramref name="requestContext" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3fcd-140">The <paramref name="requestContext" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.Routing.Route" />
      </Docs>
    </Member>
    <Member MemberName="VirtualPath">
      <MemberSignature Language="C#" Value="public string VirtualPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VirtualPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.PageRouteHandler.VirtualPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VirtualPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ VirtualPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3fcd-141">Obtém o caminho virtual da página da Web associado a essa rota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3fcd-141">Gets the virtual path of the Web page that is associated with this route.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3fcd-142">A URL da página da Web, antes que sejam aplicadas as substituições para os parâmetros de substituição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3fcd-142">The URL of the Web page, before substitutions have been applied for any replacement parameters.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3fcd-143">Definir o <xref:System.Web.Routing.PageRouteHandler.VirtualPath%2A> propriedade no <xref:System.Web.Routing.PageRouteHandler.%23ctor%2A?displayProperty=nameWithType> construtor ou o <xref:System.Web.Routing.PageRouteHandler.%23ctor%2A?displayProperty=nameWithType> construtor.</span><span class="sxs-lookup"><span data-stu-id="f3fcd-143">You set the <xref:System.Web.Routing.PageRouteHandler.VirtualPath%2A> property in the <xref:System.Web.Routing.PageRouteHandler.%23ctor%2A?displayProperty=nameWithType> constructor or in the <xref:System.Web.Routing.PageRouteHandler.%23ctor%2A?displayProperty=nameWithType> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Routing.Route" />
      </Docs>
    </Member>
  </Members>
</Type>