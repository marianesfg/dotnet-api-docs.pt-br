<Type Name="IRouteConstraint" FullName="System.Web.Routing.IRouteConstraint">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b2fd50bd9be6cb7dbf8250ddeb8b789ee4e537c9" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51866563" /></Metadata><TypeSignature Language="C#" Value="public interface IRouteConstraint" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRouteConstraint" />
  <TypeSignature Language="DocId" Value="T:System.Web.Routing.IRouteConstraint" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRouteConstraint" />
  <TypeSignature Language="C++ CLI" Value="public interface class IRouteConstraint" />
  <TypeSignature Language="F#" Value="type IRouteConstraint = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Web.Routing</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Web.Routing, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Define o contrato que uma classe deve implementar para verificar se um valor de parâmetro de URL é válido para uma restrição.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando você incluir uma restrição para um parâmetro de URL em uma definição de rota, você deve representar a restrição como qualquer cadeia de caracteres ou como um objeto que implementa o <xref:System.Web.Routing.IRouteConstraint> interface. Se a restrição é uma cadeia de caracteres, ele será tratado como uma expressão regular. Crie uma classe que implementa <xref:System.Web.Routing.IRouteConstraint> quando você não pode representar a lógica de validação facilmente como uma expressão regular. Você adiciona a lógica de validação no <xref:System.Web.Routing.IRouteConstraint.Match%2A> método.  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a">Roteamento do ASP.NET</related>
  </Docs>
  <Members>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public bool Match (System.Web.HttpContextBase httpContext, System.Web.Routing.Route route, string parameterName, System.Web.Routing.RouteValueDictionary values, System.Web.Routing.RouteDirection routeDirection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Match(class System.Web.HttpContextBase httpContext, class System.Web.Routing.Route route, string parameterName, class System.Web.Routing.RouteValueDictionary values, valuetype System.Web.Routing.RouteDirection routeDirection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.IRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Match(System::Web::HttpContextBase ^ httpContext, System::Web::Routing::Route ^ route, System::String ^ parameterName, System::Web::Routing::RouteValueDictionary ^ values, System::Web::Routing::RouteDirection routeDirection);" />
      <MemberSignature Language="F#" Value="abstract member Match : System.Web.HttpContextBase * System.Web.Routing.Route * string * System.Web.Routing.RouteValueDictionary * System.Web.Routing.RouteDirection -&gt; bool" Usage="iRouteConstraint.Match (httpContext, route, parameterName, values, routeDirection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpContext" Type="System.Web.HttpContextBase" />
        <Parameter Name="route" Type="System.Web.Routing.Route" />
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="values" Type="System.Web.Routing.RouteValueDictionary" />
        <Parameter Name="routeDirection" Type="System.Web.Routing.RouteDirection" />
      </Parameters>
      <Docs>
        <param name="httpContext">Um objeto que encapsula informações sobre a solicitação HTTP.</param>
        <param name="route">O objeto ao qual essa restrição pertence.</param>
        <param name="parameterName">O nome do parâmetro que está sendo verificado.</param>
        <param name="values">Um objeto que contém os parâmetros para a URL.</param>
        <param name="routeDirection">Um objeto que indica se a verificação de restrição está sendo executada quando uma solicitação de entrada está sendo tratada ou uma URL está sendo gerada.</param>
        <summary>Determina se o parâmetro da URL contém um valor válido para esta restrição.</summary>
        <returns><see langword="true" /> se o parâmetro da URL contiver um valor válido; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você usa o <xref:System.Web.Routing.IRouteConstraint.Match%2A> método para adicionar lógica de validação para a restrição. Esse método é chamado pela estrutura de roteamento quando uma solicitação de entrada é processada e quando a URL é construída. Você pode determinar o cenário atual examinando o `routeDirection` parâmetro.  
  
 Quando uma solicitação é processada, a estrutura de roteamento determina se o padrão e os valores da solicitação de entrada correspondem o padrão e restrições da rota. Quando a URL é construída, a estrutura de roteamento determina se os valores fornecidos quando o <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A> método é chamado correspondem ao padrão e restrições da rota.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a">Roteamento do ASP.NET</related>
      </Docs>
    </Member>
  </Members>
</Type>