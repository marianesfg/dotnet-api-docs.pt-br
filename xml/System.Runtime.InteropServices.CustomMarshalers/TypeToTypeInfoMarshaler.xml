<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TypeToTypeInfoMarshaler.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac54323fd0d7f766954362a8e412a38f8349e0e567b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4323fd0d7f766954362a8e412a38f8349e0e567b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler">
          <source>Marshals the unmanaged <ph id="ph1">&lt;see langword="ITypeInfo" /&gt;</ph> interface to the managed <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> class, and marshals the managed <ph id="ph3">&lt;see cref="T:System.Type" /&gt;</ph> class to the unmanaged <ph id="ph4">&lt;see langword="ITypeInfo" /&gt;</ph> interface.</source>
          <target state="translated">Realiza marshaling da interface <ph id="ph1">&lt;see langword="ITypeInfo" /&gt;</ph> não gerenciada para a classe <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> gerenciada e realiza marshaling da classe <ph id="ph3">&lt;see cref="T:System.Type" /&gt;</ph> gerenciada para a interface <ph id="ph4">&lt;see langword="ITypeInfo" /&gt;</ph> não gerenciada.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler">
          <source>The <ph id="ph1">`ITypeInfo`</ph> interface exposed for a .NET type is based on the metadata that would appear in an exported type library.</source>
          <target state="translated">O <ph id="ph1">`ITypeInfo`</ph> interface exposta para um tipo .NET é baseado nos metadados que aparecem em uma biblioteca de tipos exportada.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler">
          <source>Likewise, the <ph id="ph1">&lt;xref:System.Type&gt;</ph> instance exposed for an <ph id="ph2">`ITypeInfo`</ph> interface is based on the metadata that would appear in an imported assembly.</source>
          <target state="translated">Da mesma forma, o <ph id="ph1">&lt;xref:System.Type&gt;</ph> instância exposto por um <ph id="ph2">`ITypeInfo`</ph> interface é baseada nos metadados que aparecem em um assembly importado.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler">
          <source>The Type Library Importer (Tlbimp.exe) marks <ph id="ph1">`ITypeInfo`</ph> parameters with the appropriate <ph id="ph2">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> with the <ph id="ph3">&lt;xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler&gt;</ph> enumeration member when converting signatures that use <ph id="ph4">`ITypeInfo`</ph> parameters to signatures that use <ph id="ph5">&lt;xref:System.Type&gt;</ph> parameters.</source>
          <target state="translated">As marcas de Importador da biblioteca (Tlbimp.exe) <ph id="ph1">`ITypeInfo`</ph> parâmetros com apropriada <ph id="ph2">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> com o <ph id="ph3">&lt;xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler&gt;</ph> membro de enumeração durante a conversão de assinaturas que usam <ph id="ph4">`ITypeInfo`</ph> parâmetros para assinaturas que usam <ph id="ph5">&lt;xref:System.Type&gt;</ph> parâmetros.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler">
          <source>The same conversion functionality can be accomplished without the custom marshaler, by calling <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetITypeInfoForType%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo%2A&gt;</ph>.</source>
          <target state="translated">A mesma funcionalidade de conversão pode ser realizada sem marshaler personalizado, chamando <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetITypeInfoForType%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.CleanUpManagedData(System.Object)">
          <source>The managed object to be destroyed.</source>
          <target state="translated">O objeto gerenciado a ser destruído.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.CleanUpManagedData(System.Object)">
          <source>Performs necessary cleanup of the managed data when it is no longer needed.</source>
          <target state="translated">Executa a limpeza necessária dos dados gerenciados quando eles não forem mais necessários.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.CleanUpManagedData(System.Object)">
          <source>The CLR calls this method to clean up managed data allocated in the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.MarshalNativeToManaged%2A&gt;</ph> method.</source>
          <target state="translated">O CLR chama esse método para limpar os dados gerenciados alocados a <ph id="ph1">&lt;xref:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.MarshalNativeToManaged%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.CleanUpNativeData(System.IntPtr)">
          <source>A pointer to the unmanaged data to be destroyed.</source>
          <target state="translated">Um ponteiro para os dados não gerenciados a serem destruídos.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.CleanUpNativeData(System.IntPtr)">
          <source>Performs necessary cleanup of the unmanaged data when it is no longer needed.</source>
          <target state="translated">Executa a limpeza necessária dos dados não gerenciados quando eles não forem mais necessários.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.CleanUpNativeData(System.IntPtr)">
          <source>The CLR calls this method to clean up the unmanaged data allocated in the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.MarshalManagedToNative%2A&gt;</ph> method.</source>
          <target state="translated">O CLR chama esse método para limpar os dados não gerenciados alocados a <ph id="ph1">&lt;xref:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.MarshalManagedToNative%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.GetInstance(System.String)">
          <source>String "cookie" parameter that can be used by the custom marshaler.</source>
          <target state="translated">Parâmetro “cookie” de cadeia de caracteres que pode ser usado pelo empacotador personalizado.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.GetInstance(System.String)">
          <source>Returns an instance of the custom marshaler.</source>
          <target state="translated">Retorna uma instância do empacotador personalizado.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.GetInstance(System.String)">
          <source>An instance of the custom marshaler.</source>
          <target state="translated">Uma instância do empacotador personalizado.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.GetInstance(System.String)">
          <source>All custom marshalers must implement this method, although it is not part of the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler&gt;</ph> interface definition.</source>
          <target state="translated">Todos os empacotadores personalizados devem implementar esse método, embora não seja parte do <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler&gt;</ph> definição de interface.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.GetNativeDataSize">
          <source>Returns the size in bytes of the unmanaged data to be marshaled.</source>
          <target state="translated">Retorna o tamanho em bytes dos dados não gerenciados nos quais deve-se realizar marshaling.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.GetNativeDataSize">
          <source>-1 to indicate the type this marshaler handles is not a value type.</source>
          <target state="translated">-1 para indicar que o tipo que este marshaler manipula não é um tipo de valor.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.GetNativeDataSize">
          <source>Because custom marshaling of value types is not supported in the .NET Framework, this method always returns -1.</source>
          <target state="translated">Porque não há suporte para empacotamento personalizado de tipos de valor no .NET Framework, esse método sempre retornará -1.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.MarshalManagedToNative(System.Object)">
          <source>The managed object to be converted.</source>
          <target state="translated">O objeto gerenciado a ser convertido.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.MarshalManagedToNative(System.Object)">
          <source>Marshals an object from managed code to unmanaged code.</source>
          <target state="translated">Realiza marshaling de um objeto de código gerenciado para código não gerenciado.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.MarshalManagedToNative(System.Object)">
          <source>A pointer to the unmanaged object.</source>
          <target state="translated">Um ponteiro para o objeto não gerenciado.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.MarshalManagedToNative(System.Object)">
          <source>The CLR calls this method with the specified instance of a managed object to convert that object from managed code to unmanaged code, and it returns a pointer to the appropriate unmanaged object, representing the COM view of that object.</source>
          <target state="translated">O CLR chama esse método com a instância especificada de um objeto gerenciado para converter esse objeto de código gerenciado para código não gerenciado e retorna um ponteiro para o objeto não gerenciado apropriado, que representa o modo de exibição do objeto COM.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.MarshalManagedToNative(System.Object)">
          <source><ph id="ph1">&lt;paramref name="pManagedObj" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pManagedObj" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.MarshalNativeToManaged(System.IntPtr)">
          <source>A pointer to the unmanaged object to be converted.</source>
          <target state="translated">Um ponteiro para o objeto não gerenciado a ser convertido.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.MarshalNativeToManaged(System.IntPtr)">
          <source>Marshals an object from unmanaged code to managed code.</source>
          <target state="translated">Realiza marshaling de um objeto de código não gerenciado para código gerenciado.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.MarshalNativeToManaged(System.IntPtr)">
          <source>A managed object.</source>
          <target state="translated">Um objeto gerenciado.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.MarshalNativeToManaged(System.IntPtr)">
          <source>The CLR calls this method with the specified pointer to an unmanaged object to convert that object from unmanaged code to managed code, and returns a managed object representing the managed view of the unmanaged data.</source>
          <target state="translated">O CLR chama esse método com o ponteiro especificado para um objeto não gerenciado para converter esse objeto de código não gerenciado para código gerenciado e retorna um objeto gerenciado que representa a exibição gerenciada de dados não gerenciados.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.MarshalNativeToManaged(System.IntPtr)">
          <source><ph id="ph1">&lt;paramref name="pNativeData" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pNativeData" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>