<Type Name="EnumerableToDispatchMarshaler" FullName="System.Runtime.InteropServices.CustomMarshalers.EnumerableToDispatchMarshaler">
  <TypeSignature Language="C#" Value="public class EnumerableToDispatchMarshaler : System.Runtime.InteropServices.ICustomMarshaler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EnumerableToDispatchMarshaler extends System.Object implements class System.Runtime.InteropServices.ICustomMarshaler" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.CustomMarshalers.EnumerableToDispatchMarshaler" />
  <TypeSignature Language="VB.NET" Value="Public Class EnumerableToDispatchMarshaler&#xA;Implements ICustomMarshaler" />
  <TypeSignature Language="C++ CLI" Value="public ref class EnumerableToDispatchMarshaler : System::Runtime::InteropServices::ICustomMarshaler" />
  <AssemblyInfo>
    <AssemblyName>CustomMarshalers</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices.ICustomMarshaler</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="08dcf-101">Realiza marshal da interface <see langword="IDispatch" /> COM para a interface <see cref="T:System.Collections.IEnumerable" /> do .NET Framework e vice-versa.</span><span class="sxs-lookup"><span data-stu-id="08dcf-101">Marshals the COM <see langword="IDispatch" /> interface to the .NET Framework <see cref="T:System.Collections.IEnumerable" /> interface, and vice versa.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08dcf-102">Realiza marshaling este marshaler personalizado `IDispatch` para <xref:System.Collections.IEnumerable> e empacota <xref:System.Collections.IEnumerable> para `IDispatch` quando existe um membro com um DISPID de -4.</span><span class="sxs-lookup"><span data-stu-id="08dcf-102">This custom marshaler marshals `IDispatch` to <xref:System.Collections.IEnumerable> and marshals <xref:System.Collections.IEnumerable> to `IDispatch` when a member with a DISPID of -4 exists.</span></span> <span data-ttu-id="08dcf-103">Quando você usa o importador da biblioteca (Tlbimp.exe) para criar uma classe que implementa <xref:System.Collections.IEnumerable> , o CLR usa esse marshaler personalizado automaticamente para enumeradores de ponte COM e enumeradores de .NET.</span><span class="sxs-lookup"><span data-stu-id="08dcf-103">When you use the Type Library Importer (Tlbimp.exe) to create a class that implements <xref:System.Collections.IEnumerable> , the CLR uses this custom marshaler automatically to bridge COM enumerators and .NET enumerators.</span></span> <span data-ttu-id="08dcf-104">Chamando <xref:System.Collections.IEnumerable.GetEnumerator%2A> resulta em `IDispatch.Invoke` que está sendo chamado com um DISPID de -4 e vice-versa.</span><span class="sxs-lookup"><span data-stu-id="08dcf-104">Calling <xref:System.Collections.IEnumerable.GetEnumerator%2A> results in `IDispatch.Invoke` being called with a DISPID of -4, and vice versa.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CleanUpManagedData">
      <MemberSignature Language="C#" Value="public virtual void CleanUpManagedData (object pManagedObj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CleanUpManagedData(object pManagedObj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.EnumerableToDispatchMarshaler.CleanUpManagedData(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CleanUpManagedData (pManagedObj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CleanUpManagedData(System::Object ^ pManagedObj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pManagedObj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pManagedObj"><span data-ttu-id="08dcf-105">O objeto gerenciado a ser destruído.</span><span class="sxs-lookup"><span data-stu-id="08dcf-105">The managed object to be destroyed.</span></span></param>
        <summary><span data-ttu-id="08dcf-106">Executa a limpeza necessária dos dados gerenciados quando eles não forem mais necessários.</span><span class="sxs-lookup"><span data-stu-id="08dcf-106">Performs necessary cleanup of the managed data when it is no longer needed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08dcf-107">O CLR chama esse método para limpar os dados gerenciados alocados a <xref:System.Runtime.InteropServices.CustomMarshalers.EnumerableToDispatchMarshaler.MarshalNativeToManaged%2A> método.</span><span class="sxs-lookup"><span data-stu-id="08dcf-107">The CLR calls this method to clean up managed data allocated in the <xref:System.Runtime.InteropServices.CustomMarshalers.EnumerableToDispatchMarshaler.MarshalNativeToManaged%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CleanUpNativeData">
      <MemberSignature Language="C#" Value="public virtual void CleanUpNativeData (IntPtr pNativeData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CleanUpNativeData(native int pNativeData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.EnumerableToDispatchMarshaler.CleanUpNativeData(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CleanUpNativeData (pNativeData As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CleanUpNativeData(IntPtr pNativeData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pNativeData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pNativeData"><span data-ttu-id="08dcf-108">Um ponteiro para os dados não gerenciados a serem destruídos.</span><span class="sxs-lookup"><span data-stu-id="08dcf-108">A pointer to the unmanaged data to be destroyed.</span></span></param>
        <summary><span data-ttu-id="08dcf-109">Executa a limpeza necessária dos dados não gerenciados quando eles não forem mais necessários.</span><span class="sxs-lookup"><span data-stu-id="08dcf-109">Performs necessary cleanup of the unmanaged data when it is no longer needed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08dcf-110">O CLR chama esse método para limpar os dados não gerenciados alocados a <xref:System.Runtime.InteropServices.CustomMarshalers.EnumerableToDispatchMarshaler.MarshalManagedToNative%2A> método.</span><span class="sxs-lookup"><span data-stu-id="08dcf-110">The CLR calls this method to clean up the unmanaged data allocated in the <xref:System.Runtime.InteropServices.CustomMarshalers.EnumerableToDispatchMarshaler.MarshalManagedToNative%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.InteropServices.ICustomMarshaler GetInstance (string pstrCookie);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.InteropServices.ICustomMarshaler GetInstance(string pstrCookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.EnumerableToDispatchMarshaler.GetInstance(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetInstance (pstrCookie As String) As ICustomMarshaler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::InteropServices::ICustomMarshaler ^ GetInstance(System::String ^ pstrCookie);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.ICustomMarshaler</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pstrCookie" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pstrCookie"><span data-ttu-id="08dcf-111">Parâmetro “cookie” de cadeia de caracteres que pode ser usado pelo empacotador personalizado.</span><span class="sxs-lookup"><span data-stu-id="08dcf-111">String "cookie" parameter that can be used by the custom marshaler.</span></span></param>
        <summary><span data-ttu-id="08dcf-112">Retorna uma instância do empacotador personalizado.</span><span class="sxs-lookup"><span data-stu-id="08dcf-112">Returns an instance of the custom marshaler.</span></span></summary>
        <returns><span data-ttu-id="08dcf-113">Uma instância do empacotador personalizado.</span><span class="sxs-lookup"><span data-stu-id="08dcf-113">An instance of the custom marshaler.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08dcf-114">Todos os empacotadores personalizados devem implementar esse método, embora não seja parte do <xref:System.Runtime.InteropServices.ICustomMarshaler> definição de interface.</span><span class="sxs-lookup"><span data-stu-id="08dcf-114">All custom marshalers must implement this method, although it is not part of the <xref:System.Runtime.InteropServices.ICustomMarshaler> interface definition.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNativeDataSize">
      <MemberSignature Language="C#" Value="public virtual int GetNativeDataSize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetNativeDataSize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.EnumerableToDispatchMarshaler.GetNativeDataSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNativeDataSize () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetNativeDataSize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="08dcf-115">Retorna o tamanho em bytes dos dados não gerenciados nos quais deve-se realizar marshaling.</span><span class="sxs-lookup"><span data-stu-id="08dcf-115">Returns the size in bytes of the unmanaged data to be marshaled.</span></span></summary>
        <returns><span data-ttu-id="08dcf-116">-1 para indicar que o tipo que este marshaler manipula não é um tipo de valor.</span><span class="sxs-lookup"><span data-stu-id="08dcf-116">-1 to indicate the type this marshaler handles is not a value type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08dcf-117">Porque não há suporte para empacotamento personalizado de tipos de valor no .NET Framework, esse método sempre retornará -1.</span><span class="sxs-lookup"><span data-stu-id="08dcf-117">Because custom marshaling of value types is not supported in the .NET Framework, this method always returns -1.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MarshalManagedToNative">
      <MemberSignature Language="C#" Value="public virtual IntPtr MarshalManagedToNative (object pManagedObj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance native int MarshalManagedToNative(object pManagedObj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.EnumerableToDispatchMarshaler.MarshalManagedToNative(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MarshalManagedToNative (pManagedObj As Object) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IntPtr MarshalManagedToNative(System::Object ^ pManagedObj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pManagedObj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pManagedObj"><span data-ttu-id="08dcf-118">O objeto gerenciado a ser convertido.</span><span class="sxs-lookup"><span data-stu-id="08dcf-118">The managed object to be converted.</span></span></param>
        <summary><span data-ttu-id="08dcf-119">Realiza marshaling de um objeto de código gerenciado para código não gerenciado.</span><span class="sxs-lookup"><span data-stu-id="08dcf-119">Marshals an object from managed code to unmanaged code.</span></span></summary>
        <returns><span data-ttu-id="08dcf-120">Um ponteiro para o objeto não gerenciado.</span><span class="sxs-lookup"><span data-stu-id="08dcf-120">A pointer to the unmanaged object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08dcf-121">O CLR chama esse método com a instância especificada de um objeto gerenciado para converter esse objeto de código gerenciado para código não gerenciado e retorna um ponteiro para o objeto não gerenciado apropriado, que representa o modo de exibição do objeto COM.</span><span class="sxs-lookup"><span data-stu-id="08dcf-121">The CLR calls this method with the specified instance of a managed object to convert that object from managed code to unmanaged code, and it returns a pointer to the appropriate unmanaged object, representing the COM view of that object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="08dcf-122"><paramref name="pManagedObj" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="08dcf-122"><paramref name="pManagedObj" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MarshalNativeToManaged">
      <MemberSignature Language="C#" Value="public virtual object MarshalNativeToManaged (IntPtr pNativeData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object MarshalNativeToManaged(native int pNativeData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.EnumerableToDispatchMarshaler.MarshalNativeToManaged(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MarshalNativeToManaged (pNativeData As IntPtr) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ MarshalNativeToManaged(IntPtr pNativeData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pNativeData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pNativeData"><span data-ttu-id="08dcf-123">Um ponteiro para o objeto não gerenciado a ser convertido.</span><span class="sxs-lookup"><span data-stu-id="08dcf-123">A pointer to the unmanaged object to be converted.</span></span></param>
        <summary><span data-ttu-id="08dcf-124">Realiza marshaling de um objeto de código não gerenciado para código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="08dcf-124">Marshals an object from unmanaged code to managed code.</span></span></summary>
        <returns><span data-ttu-id="08dcf-125">Um objeto gerenciado.</span><span class="sxs-lookup"><span data-stu-id="08dcf-125">A managed object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08dcf-126">O CLR chama esse método com o ponteiro especificado para um objeto não gerenciado para converter esse objeto de código não gerenciado para código gerenciado e retorna um objeto gerenciado que representa a exibição gerenciada de dados não gerenciados.</span><span class="sxs-lookup"><span data-stu-id="08dcf-126">The CLR calls this method with the specified pointer to an unmanaged object to convert that object from unmanaged code to managed code, and returns a managed object representing the managed view of the unmanaged data.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="08dcf-127"><paramref name="pNativeData" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="08dcf-127"><paramref name="pNativeData" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>