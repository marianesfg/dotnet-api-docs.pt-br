<Type Name="SoapExtensionReflector" FullName="System.Web.Services.Description.SoapExtensionReflector">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3b16d4797155c4bf38a658544c3f733c35a12158" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37603730" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class SoapExtensionReflector" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SoapExtensionReflector extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Description.SoapExtensionReflector" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SoapExtensionReflector" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapExtensionReflector abstract" />
  <TypeSignature Language="F#" Value="type SoapExtensionReflector = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornece uma interface comum e a funcionalidade para classes adicionarem informações de extensão SOAP a um objeto <see cref="T:System.Web.Services.Description.ServiceDescription" /> por método.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Abstrata <xref:System.Web.Services.Description.SoapExtensionReflector> classe expõe um método abstrato, <xref:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod%2A>. Esse método abstrato permite que uma classe derivada, a adição de descrições de extensões SOAP durante a reflexão de um método Web em objetos que são colocados em um <xref:System.Web.Services.Description.ServiceDescription> objeto. O método em si não é uma entrada. As descrições são adicionadas para todos os métodos da Web que pertencem a uma associação especificada que produz um <xref:System.Web.Services.Description.ServiceDescription>.  
  
 Você pode usar um <xref:System.Web.Services.Description.ServiceDescription> para gerar um documento de descrição linguagem WSDL (Web Services) por meio de <xref:System.Web.Services.Description.ServiceDescription.Write%2A> método. O <xref:System.Web.Services.Description.ServiceDescriptionImporter> e classes relacionadas também podem usar um <xref:System.Web.Services.Description.ServiceDescription> para gerar o proxy de cliente do código ou abstrato código do servidor.  
  
 Use uma classe derivada do <xref:System.Web.Services.Description.SoapExtensionReflector> classe junto com uma classe derivada de abstrata <xref:System.Web.Services.Protocols.SoapExtension> mensagens de classe para estender o tempo de execução de processamento do SOAP no cliente ou serviço.  
  
 Você pode especificar <xref:System.Web.Services.Description.SoapExtensionReflector> em um arquivo de configuração por meio de [ \<soapExtensionReflectorTypes > elemento](http://msdn.microsoft.com/library/6950609a-c9a3-4f6f-a5fc-a05d6d204d5c) elemento e seu filho **adicionar** elemento. Você também pode aplicar a configuração para um aplicativo Web ASP.NET que publica um serviço Web.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.SoapExtension" />
    <altmember cref="M:System.Web.Services.Description.ProtocolReflector.ReflectMethod" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SoapExtensionReflector ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Description.SoapExtensionReflector.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SoapExtensionReflector();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma instância da classe <see cref="T:System.Web.Services.Description.SoapExtensionReflector" /></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReflectDescription">
      <MemberSignature Language="C#" Value="public virtual void ReflectDescription ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReflectDescription() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Description.SoapExtensionReflector.ReflectDescription" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ReflectDescription ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReflectDescription();" />
      <MemberSignature Language="F#" Value="abstract member ReflectDescription : unit -&gt; unit&#xA;override this.ReflectDescription : unit -&gt; unit" Usage="soapExtensionReflector.ReflectDescription " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gera informações de descrição específicas ao serviço que são colocadas em um objeto <see cref="T:System.Web.Services.Description.ServiceDescription" /> correspondente a uma associação.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReflectionContext">
      <MemberSignature Language="C#" Value="public System.Web.Services.Description.ProtocolReflector ReflectionContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Services.Description.ProtocolReflector ReflectionContext" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Description.SoapExtensionReflector.ReflectionContext" />
      <MemberSignature Language="VB.NET" Value="Public Property ReflectionContext As ProtocolReflector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Description::ProtocolReflector ^ ReflectionContext { System::Web::Services::Description::ProtocolReflector ^ get(); void set(System::Web::Services::Description::ProtocolReflector ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ReflectionContext : System.Web.Services.Description.ProtocolReflector with get, set" Usage="System.Web.Services.Description.SoapExtensionReflector.ReflectionContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Description.ProtocolReflector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a instância de uma classe derivada da classe <see cref="T:System.Web.Services.Description.ProtocolReflector" /> abstrata que invoca o método <see cref="M:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod" />.</summary>
        <value>A instância de uma classe derivada de abstrata <see cref="T:System.Web.Services.Description.ProtocolReflector" /> classe que invoca o <see cref="M:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod" /> método.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se você implementar uma classe que deriva a <xref:System.Web.Services.Description.SoapExtensionReflector> `abstract` classe, você não precisará implementar uma classe que deriva <xref:System.Web.Services.Description.ProtocolReflector> para invocar o <xref:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod%2A> método ou para definir o <xref:System.Web.Services.Description.SoapExtensionReflector.ReflectionContext%2A> propriedade.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReflectMethod">
      <MemberSignature Language="C#" Value="public abstract void ReflectMethod ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReflectMethod() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ReflectMethod ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ReflectMethod();" />
      <MemberSignature Language="F#" Value="abstract member ReflectMethod : unit -&gt; unit" Usage="soapExtensionReflector.ReflectMethod " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>O método <see langword="Abstract" /> que uma classe derivada deve implementar para adicionar informações de extensão SOAP a um objeto <see cref="T:System.Web.Services.Description.ServiceDescription" /> por método.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod%2A> método é chamado para cada método Web que pertence a uma associação que o <xref:System.Web.Services.Description.ServiceDescription> representa. O <xref:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod%2A> método não usa o método da Web diretamente. As informações de extensão SOAP são adicionadas para todos os métodos da Web em uma associação refletido de uma classe de serviço da Web.  
  
 Uma implementação do <xref:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod%2A> pode gerar informações de associação da operação, como o `abstract` operação e mensagens.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>