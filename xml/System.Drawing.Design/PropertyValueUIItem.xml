<Type Name="PropertyValueUIItem" FullName="System.Drawing.Design.PropertyValueUIItem">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="29524d4eba5275fc8744e2b245ee4e730647d1a3" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37763176" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PropertyValueUIItem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PropertyValueUIItem extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Design.PropertyValueUIItem" />
  <TypeSignature Language="VB.NET" Value="Public Class PropertyValueUIItem" />
  <TypeSignature Language="C++ CLI" Value="public ref class PropertyValueUIItem" />
  <TypeSignature Language="F#" Value="type PropertyValueUIItem = class" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="198d8-101">Fornece informações sobre uma propriedade exibida na janela Propriedades, incluindo o manipulador de eventos associado, a cadeia de caracteres de informações de pop-up e o ícone a ser exibido para a propriedade.</span>
      <span class="sxs-lookup">
        <span data-stu-id="198d8-101">Provides information about a property displayed in the Properties window, including the associated event handler, pop-up information string, and the icon to display for the property.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="198d8-102">O exemplo de código a seguir fornece um <xref:System.Drawing.Design.PropertyValueUIItem> objeto de qualquer propriedade do componente nomeado `HorizontalMargin` ou `VerticalMargin`.</span><span class="sxs-lookup"><span data-stu-id="198d8-102">The following code example provides a <xref:System.Drawing.Design.PropertyValueUIItem> object for any properties of the component named `HorizontalMargin` or `VerticalMargin`.</span></span> <span data-ttu-id="198d8-103">O <xref:System.Drawing.Design.PropertyValueUIItem> para essas propriedades fornece uma imagem, uma dica de ferramenta e um manipulador de eventos que exibe uma caixa de mensagem quando a imagem para a propriedade é clicada.</span><span class="sxs-lookup"><span data-stu-id="198d8-103">The <xref:System.Drawing.Design.PropertyValueUIItem> for these properties provides an image, a ToolTip, and an event handler that displays a message box when the image for the property is clicked.</span></span> <span data-ttu-id="198d8-104">Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Drawing.Design.IPropertyValueUIService> interface.</span><span class="sxs-lookup"><span data-stu-id="198d8-104">This code example is part of a larger example provided for the <xref:System.Drawing.Design.IPropertyValueUIService> interface.</span></span>  
  
 [!code-cpp[IPropertyValueUIServiceExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/IPropertyValueUIServiceExample/CPP/propertyuicomponent.cpp#2)]
 [!code-csharp[IPropertyValueUIServiceExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/IPropertyValueUIServiceExample/CS/propertyuicomponent.cs#2)]
 [!code-vb[IPropertyValueUIServiceExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IPropertyValueUIServiceExample/VB/propertyuicomponent.vb#2)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.NamedPermissionSet">
      <span data-ttu-id="198d8-105">Para obter acesso completo aos recursos do sistema.</span>
      <span class="sxs-lookup">
        <span data-stu-id="198d8-105">for full access to system resources.</span>
      </span>
      <span data-ttu-id="198d8-106">Valores de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />, <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="198d8-106">Demand values: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />, <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
      </span>
      <span data-ttu-id="198d8-107">Estado associado:</span>
      <span class="sxs-lookup">
        <span data-stu-id="198d8-107">Associated state:</span>
      </span>
    </permission>
    <altmember cref="T:System.Drawing.Design.IPropertyValueUIService" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PropertyValueUIItem (System.Drawing.Image uiItemImage, System.Drawing.Design.PropertyValueUIItemInvokeHandler handler, string tooltip);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Image uiItemImage, class System.Drawing.Design.PropertyValueUIItemInvokeHandler handler, string tooltip) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.PropertyValueUIItem.#ctor(System.Drawing.Image,System.Drawing.Design.PropertyValueUIItemInvokeHandler,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (uiItemImage As Image, handler As PropertyValueUIItemInvokeHandler, tooltip As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PropertyValueUIItem(System::Drawing::Image ^ uiItemImage, System::Drawing::Design::PropertyValueUIItemInvokeHandler ^ handler, System::String ^ tooltip);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Design.PropertyValueUIItem : System.Drawing.Image * System.Drawing.Design.PropertyValueUIItemInvokeHandler * string -&gt; System.Drawing.Design.PropertyValueUIItem" Usage="new System.Drawing.Design.PropertyValueUIItem (uiItemImage, handler, tooltip)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uiItemImage" Type="System.Drawing.Image" />
        <Parameter Name="handler" Type="System.Drawing.Design.PropertyValueUIItemInvokeHandler" />
        <Parameter Name="tooltip" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uiItemImage">
          <span data-ttu-id="198d8-108">O ícone para exibir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="198d8-108">The icon to display.</span>
          </span>
          <span data-ttu-id="198d8-109">A imagem deve ser de 8x8 pixels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="198d8-109">The image must be 8 x 8 pixels.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="198d8-110">O manipulador a ser invocado quando a imagem é clicada duas vezes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="198d8-110">The handler to invoke when the image is double-clicked.</span>
          </span>
        </param>
        <param name="tooltip">
          <span data-ttu-id="198d8-111">O <see cref="P:System.Drawing.Design.PropertyValueUIItem.ToolTip" /> a exibir para a propriedade à qual esse <see cref="T:System.Drawing.Design.PropertyValueUIItem" /> está associado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="198d8-111">The <see cref="P:System.Drawing.Design.PropertyValueUIItem.ToolTip" /> to display for the property that this <see cref="T:System.Drawing.Design.PropertyValueUIItem" /> is associated with.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="198d8-112">Inicializa uma nova instância da classe <see cref="T:System.Drawing.Design.PropertyValueUIItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="198d8-112">Initializes a new instance of the <see cref="T:System.Drawing.Design.PropertyValueUIItem" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="198d8-113">O exemplo de código a seguir fornece um <xref:System.Drawing.Design.PropertyValueUIItem> objeto de qualquer propriedade do componente nomeado `HorizontalMargin` ou `VerticalMargin`.</span><span class="sxs-lookup"><span data-stu-id="198d8-113">The following code example provides a <xref:System.Drawing.Design.PropertyValueUIItem> object for any properties of the component named `HorizontalMargin` or `VerticalMargin`.</span></span> <span data-ttu-id="198d8-114">O <xref:System.Drawing.Design.PropertyValueUIItem> para essas propriedades fornece uma imagem, uma dica de ferramenta e um manipulador de eventos que exibe uma caixa de mensagem quando a imagem para a propriedade é clicada.</span><span class="sxs-lookup"><span data-stu-id="198d8-114">The <xref:System.Drawing.Design.PropertyValueUIItem> for these properties provides an image, a ToolTip, and an event handler that displays a message box when the image for the property is clicked.</span></span> <span data-ttu-id="198d8-115">Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Drawing.Design.IPropertyValueUIService> interface.</span><span class="sxs-lookup"><span data-stu-id="198d8-115">This code example is part of a larger example provided for the <xref:System.Drawing.Design.IPropertyValueUIService> interface.</span></span>  
  
 [!code-cpp[IPropertyValueUIServiceExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/IPropertyValueUIServiceExample/CPP/propertyuicomponent.cpp#2)]
 [!code-csharp[IPropertyValueUIServiceExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/IPropertyValueUIServiceExample/CS/propertyuicomponent.cs#2)]
 [!code-vb[IPropertyValueUIServiceExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IPropertyValueUIServiceExample/VB/propertyuicomponent.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="198d8-116">
            <paramref name="uiItemImage" /> ou <paramref name="handler" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="198d8-116">
              <paramref name="uiItemImage" /> or <paramref name="handler" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Drawing.Design.IPropertyValueUIService" />
        <altmember cref="T:System.Drawing.Design.PropertyValueUIItemInvokeHandler" />
      </Docs>
    </Member>
    <Member MemberName="Image">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Image Image { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image Image" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Design.PropertyValueUIItem.Image" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Image As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Image ^ Image { System::Drawing::Image ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Image : System.Drawing.Image" Usage="System.Drawing.Design.PropertyValueUIItem.Image" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="198d8-117">Obtém a imagem de 8x8 pixels que será desenhada na janela Propriedades.</span>
          <span class="sxs-lookup">
            <span data-stu-id="198d8-117">Gets the 8 x 8 pixel image that will be drawn in the Properties window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="198d8-118">A imagem a ser usado para o ícone de propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="198d8-118">The image to use for the property icon.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="198d8-119">Essa imagem deve ser de 8x8 pixels.</span><span class="sxs-lookup"><span data-stu-id="198d8-119">This image must be 8 x 8 pixels.</span></span> <span data-ttu-id="198d8-120">É aconselhável que a imagem dão suporte a transparência.</span><span class="sxs-lookup"><span data-stu-id="198d8-120">It is advisable to have the image support transparency.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Design.IPropertyValueUIService" />
      </Docs>
    </Member>
    <Member MemberName="InvokeHandler">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Design.PropertyValueUIItemInvokeHandler InvokeHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Design.PropertyValueUIItemInvokeHandler InvokeHandler" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Design.PropertyValueUIItem.InvokeHandler" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property InvokeHandler As PropertyValueUIItemInvokeHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Design::PropertyValueUIItemInvokeHandler ^ InvokeHandler { System::Drawing::Design::PropertyValueUIItemInvokeHandler ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InvokeHandler : System.Drawing.Design.PropertyValueUIItemInvokeHandler" Usage="System.Drawing.Design.PropertyValueUIItem.InvokeHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Design.PropertyValueUIItemInvokeHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="198d8-121">Obtém o manipulador que é gerado quando um usuário clica duas vezes neste item.</span>
          <span class="sxs-lookup">
            <span data-stu-id="198d8-121">Gets the handler that is raised when a user double-clicks this item.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="198d8-122">Um <see cref="T:System.Drawing.Design.PropertyValueUIItemInvokeHandler" /> indicando o manipulador de eventos para este item de (UI) de interface do usuário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="198d8-122">A <see cref="T:System.Drawing.Design.PropertyValueUIItemInvokeHandler" /> indicating the event handler for this user interface (UI) item.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Drawing.Design.IPropertyValueUIService" />
        <altmember cref="T:System.Drawing.Design.PropertyValueUIItemInvokeHandler" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public virtual void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.PropertyValueUIItem.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="propertyValueUIItem.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="198d8-123">Redefine o item da UI (interface do usuário).</span>
          <span class="sxs-lookup">
            <span data-stu-id="198d8-123">Resets the user interface (UI) item.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="198d8-124">
            <para>Classes derivadas podem substituir este membro para implementar o redesenho do item da interface do usuário.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="198d8-124">
              <para>Derived classes can override this member to implement the redrawing of the UI item.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ToolTip">
      <MemberSignature Language="C#" Value="public virtual string ToolTip { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Design.PropertyValueUIItem.ToolTip" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ToolTip As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ToolTip { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToolTip : string" Usage="System.Drawing.Design.PropertyValueUIItem.ToolTip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="198d8-125">Obtém ou define a cadeia de caracteres de informações a ser exibida para este item.</span>
          <span class="sxs-lookup">
            <span data-stu-id="198d8-125">Gets or sets the information string to display for this item.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="198d8-126">Uma cadeia de caracteres que contém a cadeia de caracteres a ser exibido para este item de informações.</span>
          <span class="sxs-lookup">
            <span data-stu-id="198d8-126">A string containing the information string to display for this item.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Drawing.Design.IPropertyValueUIService" />
      </Docs>
    </Member>
  </Members>
</Type>