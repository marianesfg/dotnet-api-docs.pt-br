<Type Name="PropertyValueUIItemInvokeHandler" FullName="System.Drawing.Design.PropertyValueUIItemInvokeHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="896954d144cb81b939ae9a959a7bff7791d3924e" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37658773" /></Metadata><TypeSignature Language="C#" Value="public delegate void PropertyValueUIItemInvokeHandler(ITypeDescriptorContext context, PropertyDescriptor descriptor, PropertyValueUIItem invokedItem);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed PropertyValueUIItemInvokeHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Design.PropertyValueUIItemInvokeHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub PropertyValueUIItemInvokeHandler(context As ITypeDescriptorContext, descriptor As PropertyDescriptor, invokedItem As PropertyValueUIItem)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void PropertyValueUIItemInvokeHandler(ITypeDescriptorContext ^ context, PropertyDescriptor ^ descriptor, PropertyValueUIItem ^ invokedItem);" />
  <TypeSignature Language="F#" Value="type PropertyValueUIItemInvokeHandler = delegate of ITypeDescriptorContext * PropertyDescriptor * PropertyValueUIItem -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
    <Parameter Name="descriptor" Type="System.ComponentModel.PropertyDescriptor" />
    <Parameter Name="invokedItem" Type="System.Drawing.Design.PropertyValueUIItem" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="context"><span data-ttu-id="37be6-101">O <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> para a propriedade associada ao ícone que foi clicado duas vezes.</span><span class="sxs-lookup"><span data-stu-id="37be6-101">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> for the property associated with the icon that was double-clicked.</span></span></param>
    <param name="descriptor"><span data-ttu-id="37be6-102">A propriedade associada ao ícone que foi clicado duas vezes.</span><span class="sxs-lookup"><span data-stu-id="37be6-102">The property associated with the icon that was double-clicked.</span></span></param>
    <param name="invokedItem"><span data-ttu-id="37be6-103">A <see cref="T:System.Drawing.Design.PropertyValueUIItem" /> associada ao ícone que foi clicado duas vezes.</span><span class="sxs-lookup"><span data-stu-id="37be6-103">The <see cref="T:System.Drawing.Design.PropertyValueUIItem" /> associated with the icon that was double-clicked.</span></span></param>
    <summary><span data-ttu-id="37be6-104">Representa o método que manipulará o evento de <see cref="P:System.Drawing.Design.PropertyValueUIItem.InvokeHandler" /> de <see cref="T:System.Drawing.Design.PropertyValueUIItem" />.</span><span class="sxs-lookup"><span data-stu-id="37be6-104">Represents the method that will handle the <see cref="P:System.Drawing.Design.PropertyValueUIItem.InvokeHandler" /> event of a <see cref="T:System.Drawing.Design.PropertyValueUIItem" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37be6-105">Clicar duas vezes em um ícone na janela Propriedades, gerará o <xref:System.Drawing.Design.PropertyValueUIItem.InvokeHandler%2A> eventos do <xref:System.Drawing.Design.PropertyValueUIItem> o ícone associado.</span><span class="sxs-lookup"><span data-stu-id="37be6-105">Double-clicking an icon in the Properties window will raise the <xref:System.Drawing.Design.PropertyValueUIItem.InvokeHandler%2A> event of the <xref:System.Drawing.Design.PropertyValueUIItem> that the icon is associated with.</span></span> <span data-ttu-id="37be6-106">O <xref:System.Drawing.Design.PropertyValueUIItem.InvokeHandler%2A> evento normalmente inicia uma interface do usuário (IU) para editar o valor da propriedade.</span><span class="sxs-lookup"><span data-stu-id="37be6-106">The <xref:System.Drawing.Design.PropertyValueUIItem.InvokeHandler%2A> event typically launches a user interface (UI) to edit the property's value.</span></span> <span data-ttu-id="37be6-107">Adicionar um <xref:System.Drawing.Design.PropertyValueUIItemInvokeHandler> para o <xref:System.Drawing.Design.PropertyValueUIItem.InvokeHandler%2A> propriedade de um <xref:System.Drawing.Design.PropertyValueUIItem> para atribuir um manipulador de eventos para executar o comportamento apropriado quando o ícone exibido ao lado do nome da propriedade é clicado duas vezes.</span><span class="sxs-lookup"><span data-stu-id="37be6-107">Add a <xref:System.Drawing.Design.PropertyValueUIItemInvokeHandler> to the <xref:System.Drawing.Design.PropertyValueUIItem.InvokeHandler%2A> property of a <xref:System.Drawing.Design.PropertyValueUIItem> to assign an event handler to perform the appropriate behavior when the icon displayed next to the property name is double-clicked.</span></span>  
  
 <span data-ttu-id="37be6-108">Quando você cria um <xref:System.Drawing.Design.PropertyValueUIItemInvokeHandler> delegado, você identificar o método que manipulará o evento.</span><span class="sxs-lookup"><span data-stu-id="37be6-108">When you create a <xref:System.Drawing.Design.PropertyValueUIItemInvokeHandler> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="37be6-109">Para associar o evento com o manipulador de eventos, adicione uma instância do delegado ao evento.</span><span class="sxs-lookup"><span data-stu-id="37be6-109">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="37be6-110">O manipulador de eventos é chamado sempre que o evento ocorre, a menos que você remova o representante.</span><span class="sxs-lookup"><span data-stu-id="37be6-110">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="37be6-111">Para obter mais informações sobre delegados de manipulador de eventos, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="37be6-111">For more information about event-handler delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37be6-112">O exemplo de código a seguir fornece um <xref:System.Drawing.Design.PropertyValueUIItem> objeto de qualquer propriedade do componente nomeado `HorizontalMargin` ou `VerticalMargin`.</span><span class="sxs-lookup"><span data-stu-id="37be6-112">The following code example provides a <xref:System.Drawing.Design.PropertyValueUIItem> object for any properties of the component named `HorizontalMargin` or `VerticalMargin`.</span></span> <span data-ttu-id="37be6-113">O <xref:System.Drawing.Design.PropertyValueUIItem> para essas propriedades fornece uma imagem, uma dica de ferramenta e um manipulador de eventos que exibe uma caixa de mensagem quando a imagem para a propriedade é clicada.</span><span class="sxs-lookup"><span data-stu-id="37be6-113">The <xref:System.Drawing.Design.PropertyValueUIItem> for these properties provides an image, a ToolTip, and an event handler that displays a message box when the image for the property is clicked.</span></span> <span data-ttu-id="37be6-114">Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Drawing.Design.IPropertyValueUIService> interface.</span><span class="sxs-lookup"><span data-stu-id="37be6-114">This code example is part of a larger example provided for the <xref:System.Drawing.Design.IPropertyValueUIService> interface.</span></span>  
  
 [!code-cpp[IPropertyValueUIServiceExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/IPropertyValueUIServiceExample/CPP/propertyuicomponent.cpp#2)]
 [!code-csharp[IPropertyValueUIServiceExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/IPropertyValueUIServiceExample/CS/propertyuicomponent.cs#2)]
 [!code-vb[IPropertyValueUIServiceExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IPropertyValueUIServiceExample/VB/propertyuicomponent.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
    <altmember cref="T:System.Drawing.Design.PropertyValueUIItem" />
    <altmember cref="T:System.Drawing.Design.IPropertyValueUIService" />
  </Docs>
</Type>