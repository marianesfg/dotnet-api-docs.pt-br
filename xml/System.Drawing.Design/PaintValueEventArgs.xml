<Type Name="PaintValueEventArgs" FullName="System.Drawing.Design.PaintValueEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9e91d821c40a8f844fb449114038b3014bd3263b" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39863399" /></Metadata><TypeSignature Language="C#" Value="public class PaintValueEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PaintValueEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Design.PaintValueEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class PaintValueEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class PaintValueEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type PaintValueEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornece dados para o método <see cref="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Object,System.Drawing.Graphics,System.Drawing.Rectangle)" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Design.PaintValueEventArgs> fornece todas as informações necessárias para um <xref:System.Drawing.Design.UITypeEditor> pintar dentro de uma área com base no valor do objeto especificado, incluindo o <xref:System.Drawing.Rectangle> no qual o desenho deve ser feito e o <xref:System.Drawing.Graphics> do objeto com que o desenho deve ser feito.  
  
   
  
## Examples  
 O seguinte código de retorno do método de exemplo um <xref:System.Drawing.Design.PaintValueEventArgs> que fornece os dados necessários para pintar uma representação do valor de um objeto dentro de uma determinada área:  
  
 [!code-cpp[MoreEventArgsExamples#2](~/samples/snippets/cpp/VS_Snippets_Winforms/MoreEventArgsExamples/CPP/class1.cpp#2)]
 [!code-csharp[MoreEventArgsExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/MoreEventArgsExamples/CS/class1.cs#2)]
 [!code-vb[MoreEventArgsExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MoreEventArgsExamples/VB/class1.vb#2)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.NamedPermissionSet">Para obter acesso completo aos recursos do sistema. Valores de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />, <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />. Estado associado:</permission>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PaintValueEventArgs (System.ComponentModel.ITypeDescriptorContext context, object value, System.Drawing.Graphics graphics, System.Drawing.Rectangle bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.ITypeDescriptorContext context, object value, class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.PaintValueEventArgs.#ctor(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Drawing.Graphics,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PaintValueEventArgs(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value, System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle bounds);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Design.PaintValueEventArgs : System.ComponentModel.ITypeDescriptorContext * obj * System.Drawing.Graphics * System.Drawing.Rectangle -&gt; System.Drawing.Design.PaintValueEventArgs" Usage="new System.Drawing.Design.PaintValueEventArgs (context, value, graphics, bounds)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="context">O contexto no qual o valor é exibido.</param>
        <param name="value">O valor a pintar.</param>
        <param name="graphics">O objeto <see cref="T:System.Drawing.Graphics" /> com o qual desenho deve ser feito.</param>
        <param name="bounds">O <see cref="T:System.Drawing.Rectangle" /> na qual desenho deve ser feito.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Drawing.Design.PaintValueEventArgs" /> usando os valores especificados.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="graphics" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Bounds" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Design.PaintValueEventArgs.Bounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle Bounds { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.Bounds : System.Drawing.Rectangle" Usage="System.Drawing.Design.PaintValueEventArgs.Bounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o retângulo que indica a área na qual deve ser feita a pintura.</summary>
        <value>O retângulo que indica a área na qual deve ser feita a pintura.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.ComponentModel.ITypeDescriptorContext Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ITypeDescriptorContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Design.PaintValueEventArgs.Context" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Context As ITypeDescriptorContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::ITypeDescriptorContext ^ Context { System::ComponentModel::ITypeDescriptorContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.ComponentModel.ITypeDescriptorContext" Usage="System.Drawing.Design.PaintValueEventArgs.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ITypeDescriptorContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a interface <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> a ser usada para obter informações adicionais sobre o contexto em que esse valor aparece.</summary>
        <value>Um <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que indica o contexto do evento.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Graphics">
      <MemberSignature Language="C#" Value="public System.Drawing.Graphics Graphics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Graphics Graphics" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Design.PaintValueEventArgs.Graphics" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Graphics As Graphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Graphics ^ Graphics { System::Drawing::Graphics ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Graphics : System.Drawing.Graphics" Usage="System.Drawing.Design.PaintValueEventArgs.Graphics" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o objeto <see cref="T:System.Drawing.Graphics" /> com o qual deve ser feita a pintura.</summary>
        <value>Um <see cref="T:System.Drawing.Graphics" /> objeto a ser usado para pintura.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Design.PaintValueEventArgs.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj" Usage="System.Drawing.Design.PaintValueEventArgs.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o valor a pintar.</summary>
        <value>Um objeto que indica o que pintar.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>