<Type Name="IPropertyValueUIService" FullName="System.Drawing.Design.IPropertyValueUIService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d65f647b87217c7f7c8bb2dc3976fbf22ccf474a" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36738994" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IPropertyValueUIService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPropertyValueUIService" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Design.IPropertyValueUIService" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPropertyValueUIService" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPropertyValueUIService" />
  <TypeSignature Language="F#" Value="type IPropertyValueUIService = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Fornece uma interface para gerenciar as imagens, as dicas de ferramenta e os manipuladores de eventos para as propriedades de um componente exibido em um navegador de propriedade.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um componente pode usar o <xref:System.Drawing.Design.IPropertyValueUIService> interface para fornecer <xref:System.Drawing.Design.PropertyValueUIItem> objetos para as propriedades do componente. Um <xref:System.Drawing.Design.PropertyValueUIItem> associados com uma propriedade pode fornecer uma imagem, uma dica de ferramenta e um manipulador de eventos para o evento que é gerado quando a imagem associada a propriedade é clicada.  
  
 O <xref:System.Drawing.Design.IPropertyValueUIService> interface fornece métodos para adicionar, remover e recuperar <xref:System.Drawing.Design.PropertyValueUIHandler> delegados para ou de uma lista interna. Quando as propriedades de um componente são exibidas em um navegador de propriedade, cada <xref:System.Drawing.Design.PropertyValueUIHandler> na lista recebe uma oportunidade de fornecer um <xref:System.Drawing.Design.PropertyValueUIItem> para cada propriedade do componente.  
  
 Quando um navegador de propriedade é definido para exibir as propriedades de um objeto, ele chama o <xref:System.Drawing.Design.IPropertyValueUIService.GetPropertyUIValueItems%2A> método desta interface para cada propriedade do componente, passando um <xref:System.ComponentModel.PropertyDescriptor> que representa a propriedade. O <xref:System.Drawing.Design.IPropertyValueUIService.GetPropertyUIValueItems%2A> as chamadas de método cada <xref:System.Drawing.Design.PropertyValueUIHandler> que foi adicionado ao serviço. Cada <xref:System.Drawing.Design.PropertyValueUIHandler> pode adicionar um <xref:System.Drawing.Design.PropertyValueUIItem> para o <xref:System.Collections.ArrayList> parâmetro passado a `valueUIItemList` itens de parâmetro para fornecer a interface do usuário para a propriedade representada pelo <xref:System.ComponentModel.PropertyDescriptor> passado a `propDesc` parâmetro.  
  
 Um <xref:System.Drawing.Design.PropertyValueUIItem> pode conter uma imagem a ser exibida ao lado de um manipulador de eventos a ser invocado quando uma imagem associada a propriedade é clicado duas vezes, uma cadeia de caracteres de dica de ferramenta e o nome da propriedade.  
  
   
  
## Examples  
 O exemplo de código a seguir cria um componente que obtém uma instância do <xref:System.Drawing.Design.IPropertyValueUIService> interface e adiciona um <xref:System.Drawing.Design.PropertyValueUIHandler> para o serviço. O manipulador fornece um <xref:System.Drawing.Design.PropertyValueUIItem> objeto para as propriedades do componente nomeado `HorizontalMargin` ou `VerticalMargin`. O <xref:System.Drawing.Design.PropertyValueUIItem> para essas propriedades fornece uma imagem, uma dica de ferramenta e um manipulador de eventos que exibe uma caixa de mensagem quando a imagem para a propriedade é clicada. A imagem e a dica de ferramenta são exibidas em um <xref:System.Windows.Forms.PropertyGrid> quando a grade está mostrando essas propriedades do componente.  
  
 [!code-cpp[IPropertyValueUIServiceExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IPropertyValueUIServiceExample/CPP/propertyuicomponent.cpp#1)]
 [!code-csharp[IPropertyValueUIServiceExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IPropertyValueUIServiceExample/CS/propertyuicomponent.cs#1)]
 [!code-vb[IPropertyValueUIServiceExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IPropertyValueUIServiceExample/VB/propertyuicomponent.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Drawing.Design.PropertyValueUIHandler" />
    <altmember cref="T:System.Drawing.Design.PropertyValueUIItem" />
  </Docs>
  <Members>
    <Member MemberName="AddPropertyValueUIHandler">
      <MemberSignature Language="C#" Value="public void AddPropertyValueUIHandler (System.Drawing.Design.PropertyValueUIHandler newHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddPropertyValueUIHandler(class System.Drawing.Design.PropertyValueUIHandler newHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.IPropertyValueUIService.AddPropertyValueUIHandler(System.Drawing.Design.PropertyValueUIHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPropertyValueUIHandler (newHandler As PropertyValueUIHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPropertyValueUIHandler(System::Drawing::Design::PropertyValueUIHandler ^ newHandler);" />
      <MemberSignature Language="F#" Value="abstract member AddPropertyValueUIHandler : System.Drawing.Design.PropertyValueUIHandler -&gt; unit" Usage="iPropertyValueUIService.AddPropertyValueUIHandler newHandler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newHandler" Type="System.Drawing.Design.PropertyValueUIHandler" />
      </Parameters>
      <Docs>
        <param name="newHandler">O manipulador de interface do usuário do valor da propriedade a ser adicionado.</param>
        <summary>Adiciona o <see cref="T:System.Drawing.Design.PropertyValueUIHandler" /> especificado a este serviço.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando <xref:System.Drawing.Design.IPropertyValueUIService.GetPropertyUIValueItems%2A> é chamado, cada manipulador adicionados a esse serviço é chamado e terá a oportunidade de adicionar um ícone para a propriedade.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Design.PropertyValueUIHandler" />
      </Docs>
    </Member>
    <Member MemberName="GetPropertyUIValueItems">
      <MemberSignature Language="C#" Value="public System.Drawing.Design.PropertyValueUIItem[] GetPropertyUIValueItems (System.ComponentModel.ITypeDescriptorContext context, System.ComponentModel.PropertyDescriptor propDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Drawing.Design.PropertyValueUIItem[] GetPropertyUIValueItems(class System.ComponentModel.ITypeDescriptorContext context, class System.ComponentModel.PropertyDescriptor propDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.IPropertyValueUIService.GetPropertyUIValueItems(System.ComponentModel.ITypeDescriptorContext,System.ComponentModel.PropertyDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyUIValueItems (context As ITypeDescriptorContext, propDesc As PropertyDescriptor) As PropertyValueUIItem()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Drawing::Design::PropertyValueUIItem ^&gt; ^ GetPropertyUIValueItems(System::ComponentModel::ITypeDescriptorContext ^ context, System::ComponentModel::PropertyDescriptor ^ propDesc);" />
      <MemberSignature Language="F#" Value="abstract member GetPropertyUIValueItems : System.ComponentModel.ITypeDescriptorContext * System.ComponentModel.PropertyDescriptor -&gt; System.Drawing.Design.PropertyValueUIItem[]" Usage="iPropertyValueUIService.GetPropertyUIValueItems (context, propDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Design.PropertyValueUIItem[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="propDesc" Type="System.ComponentModel.PropertyDescriptor" />
      </Parameters>
      <Docs>
        <param name="context">Um <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que pode ser usado para obter informações de contexto adicionais.</param>
        <param name="propDesc">Um <see cref="T:System.ComponentModel.PropertyDescriptor" /> que indica a propriedade a ser correspondida com as propriedades a serem retornadas.</param>
        <summary>Obtém o objetos <see cref="T:System.Drawing.Design.PropertyValueUIItem" /> que correspondem as características de descritor de propriedade e de contexto especificadas.</summary>
        <returns>Uma matriz de objetos <see cref="T:System.Drawing.Design.PropertyValueUIItem" /> que correspondem aos parâmetros especificados.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyPropertyValueUIItemsChanged">
      <MemberSignature Language="C#" Value="public void NotifyPropertyValueUIItemsChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NotifyPropertyValueUIItemsChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.IPropertyValueUIService.NotifyPropertyValueUIItemsChanged" />
      <MemberSignature Language="VB.NET" Value="Public Sub NotifyPropertyValueUIItemsChanged ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void NotifyPropertyValueUIItemsChanged();" />
      <MemberSignature Language="F#" Value="abstract member NotifyPropertyValueUIItemsChanged : unit -&gt; unit" Usage="iPropertyValueUIService.NotifyPropertyValueUIItemsChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Notifica a implementação <see cref="T:System.Drawing.Design.IPropertyValueUIService" /> que a lista global de objetos <see cref="T:System.Drawing.Design.PropertyValueUIItem" /> foi modificada.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Drawing.Design.IPropertyValueUIService.PropertyUIValueItemsChanged" />
      </Docs>
    </Member>
    <Member MemberName="PropertyUIValueItemsChanged">
      <MemberSignature Language="C#" Value="event EventHandler PropertyUIValueItemsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PropertyUIValueItemsChanged" />
      <MemberSignature Language="DocId" Value="E:System.Drawing.Design.IPropertyValueUIService.PropertyUIValueItemsChanged" />
      <MemberSignature Language="VB.NET" Value="Event PropertyUIValueItemsChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PropertyUIValueItemsChanged;" />
      <MemberSignature Language="F#" Value="member this.PropertyUIValueItemsChanged : EventHandler " Usage="member this.PropertyUIValueItemsChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando a lista de objetos <see cref="T:System.Drawing.Design.PropertyValueUIItem" /> é modificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Componentes que servem <xref:System.Drawing.Design.PropertyValueUIItem> objetos podem chamar <xref:System.Drawing.Design.IPropertyValueUIService.NotifyPropertyValueUIItemsChanged%2A> ao alterar sua lista de itens.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Design.PropertyValueUIItem" />
      </Docs>
    </Member>
    <Member MemberName="RemovePropertyValueUIHandler">
      <MemberSignature Language="C#" Value="public void RemovePropertyValueUIHandler (System.Drawing.Design.PropertyValueUIHandler newHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemovePropertyValueUIHandler(class System.Drawing.Design.PropertyValueUIHandler newHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.IPropertyValueUIService.RemovePropertyValueUIHandler(System.Drawing.Design.PropertyValueUIHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemovePropertyValueUIHandler (newHandler As PropertyValueUIHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemovePropertyValueUIHandler(System::Drawing::Design::PropertyValueUIHandler ^ newHandler);" />
      <MemberSignature Language="F#" Value="abstract member RemovePropertyValueUIHandler : System.Drawing.Design.PropertyValueUIHandler -&gt; unit" Usage="iPropertyValueUIService.RemovePropertyValueUIHandler newHandler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newHandler" Type="System.Drawing.Design.PropertyValueUIHandler" />
      </Parameters>
      <Docs>
        <param name="newHandler">O manipulador a ser removido.</param>
        <summary>Remove o <see cref="T:System.Drawing.Design.PropertyValueUIHandler" /> especificado do serviço de interface do usuário do valor da propriedade.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Drawing.Design.PropertyValueUIHandler" />
      </Docs>
    </Member>
  </Members>
</Type>