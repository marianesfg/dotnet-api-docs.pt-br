<Type Name="ClockController" FullName="System.Windows.Media.Animation.ClockController">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a7f5db2fabcb7d8bd16865ae93253c3f12de7ee2" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52209597" /></Metadata><TypeSignature Language="C#" Value="public sealed class ClockController : System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ClockController extends System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.ClockController" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ClockController&#xA;Inherits DispatcherObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClockController sealed : System::Windows::Threading::DispatcherObject" />
  <TypeSignature Language="F#" Value="type ClockController = class&#xA;    inherit DispatcherObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Threading.DispatcherObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Controla interativamente um <see cref="T:System.Windows.Media.Animation.Clock" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use uma <xref:System.Windows.Media.Animation.ClockController> para interativamente Iniciar, pausar, retomar, buscar, ignorar, parar e remover um <xref:System.Windows.Media.Animation.Clock>. Somente de forma interativa, você pode controlar os relógios de nível raiz.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.Animation.Clock" />
    <altmember cref="P:System.Windows.Media.Animation.Clock.Controller" />
  </Docs>
  <Members>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.Begin" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin();" />
      <MemberSignature Language="F#" Value="member this.Begin : unit -&gt; unit" Usage="clockController.Begin " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Define o destino <see cref="P:System.Windows.Media.Animation.ClockController.Clock" /> para começar no próximo tique.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método faz com que o destino <xref:System.Windows.Media.Animation.Clock> para se comportar como se seus <xref:System.Windows.Media.Animation.Timeline> do objeto <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> foram definidos para a hora do próximo tique. A linha do tempo real da <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> configuração é ignorada (mas não foi alterada).  
  
 Esse método altera o relógio de destino <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> para <xref:System.Windows.Media.Animation.ClockState.Active>. O <xref:System.Windows.Media.Animation.ClockController.Begin%2A> método não reinicia um relógio em pausa.  
  
 Esse método não tem nenhum efeito na árvore de temporização até a próxima vez que um tique é processado. Como um efeito colateral, os eventos apropriados também não serão gerados até lá. Chamar esse método dispara a <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> e <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> eventos.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.BeginTime" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.SkipToFill" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Stop" />
      </Docs>
    </Member>
    <Member MemberName="Clock">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Clock Clock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Animation.Clock Clock" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.ClockController.Clock" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Clock As Clock" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::Clock ^ Clock { System::Windows::Media::Animation::Clock ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Clock : System.Windows.Media.Animation.Clock" Usage="System.Windows.Media.Animation.ClockController.Clock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Clock</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o <see cref="T:System.Windows.Media.Animation.Clock" /> controlado por este <see cref="T:System.Windows.Media.Animation.ClockController" />.</summary>
        <value>O <see cref="T:System.Windows.Media.Animation.Clock" /> controlado por este <see cref="T:System.Windows.Media.Animation.ClockController" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.Pause" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pause ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pause();" />
      <MemberSignature Language="F#" Value="member this.Pause : unit -&gt; unit" Usage="clockController.Pause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Interrompe o andamento do destino <see cref="T:System.Windows.Media.Animation.Clock" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode pausar uma <xref:System.Windows.Media.Animation.Clock> independentemente de seu atual estado e Pausando um relógio não altera seu estado atual. Um relógio pode ser pausado enquanto <xref:System.Windows.Media.Animation.ClockState.Active>, <xref:System.Windows.Media.Animation.ClockState.Stopped>, ou <xref:System.Windows.Media.Animation.ClockState.Filling>. A única maneira de retomar um relógio é usando o <xref:System.Windows.Media.Animation.ClockController.Resume%2A> método. Pausar um relógio implicitamente pausa seus filhos.  
  
 Chamar esse método quando o relógio de destino já está em pausa não tem nenhum efeito.  
  
 Pausando um gatilhos de relógio de <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> eventos.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Resume" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.Remove" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove();" />
      <MemberSignature Language="F#" Value="member this.Remove : unit -&gt; unit" Usage="clockController.Remove " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Remove o <see cref="T:System.Windows.Media.Animation.Clock" /> associado a este <see cref="T:System.Windows.Media.Animation.ClockController" /> das propriedades que ele anima. O relógio e seus relógios filho não afetarão mais essas propriedades.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método dispara o <xref:System.Windows.Media.Animation.Clock.RemoveRequested> eventos.  
  
   
  
## Examples  
 O exemplo a seguir mostra como remover e controlar interativamente um relógio, caso contrário.  
  
 [!code-csharp[ClockController_procedural_snip#ClockControllerSeekExample](~/samples/snippets/csharp/VS_Snippets_Wpf/ClockController_procedural_snip/CSharp/SeekAlignedToLastTickExample.cs#clockcontrollerseekexample)]
 [!code-vb[ClockController_procedural_snip#ClockControllerSeekExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ClockController_procedural_snip/visualbasic/seekalignedtolasttickexample.vb#clockcontrollerseekexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.Resume" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume();" />
      <MemberSignature Language="F#" Value="member this.Resume : unit -&gt; unit" Usage="clockController.Resume " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Permite a retomada do andamento de um <see cref="T:System.Windows.Media.Animation.Clock" /> colocado anteriormente em pausa.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode pausar ou retomar um <xref:System.Windows.Media.Animation.Clock> independentemente de seu estado atual e para pausar ou retomar um relógio não altera seu estado atual. Um relógio pode ser pausado enquanto <xref:System.Windows.Media.Animation.ClockState.Active>, <xref:System.Windows.Media.Animation.ClockState.Stopped>, ou <xref:System.Windows.Media.Animation.ClockState.Filling>. A única maneira de retomar um relógio em pausa é usando o <xref:System.Windows.Media.Animation.ClockController.Resume%2A> método. Retomar um relógio implicitamente retoma a seus filhos. Chamar esse método em um relógio de que não está em pausa não tem nenhum efeito.  
  
 Retomando um gatilhos de relógio em pausa o <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> eventos.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Pause" />
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public void Seek (TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Seek(valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seek (offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Seek(TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.Seek : TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="clockController.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">O deslocamento de busca, medido na hora do relógio de destino. Esse deslocamento é relativo ao <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" /> ou <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.Duration" /> do relógio, dependendo do valor de <paramref name="origin" />.</param>
        <param name="origin">Um valor que indica se o deslocamento especificado em relação ao <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" /> ou <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.Duration" /> do relógio do destino.</param>
        <summary>Procura o <see cref="P:System.Windows.Media.Animation.ClockController.Clock" /> de destino pelo valor especificado quando o próximo tique ocorre. Se o relógio de destino for interrompido, realizar uma busca o ativará novamente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Busca de operações não têm o <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> ou <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> configurações da linha de tempo deste relógio em consideração: o relógio será tratado como se a sua linha do tempo tiver um <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> de 1 e sem <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.  
  
 Esse método altera o relógio <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> para <xref:System.Windows.Media.Animation.ClockState.Active>. Esse método não tem nenhum efeito na árvore de temporização até a próxima vez que um tique é processado. Como um efeito colateral, os eventos apropriados também não serão gerados até lá.  
  
 Buscando os gatilhos de storyboard a <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated> e <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> eventos.  
  
 Se o relógio de destino tiver filhos, seu tempo atual é atualizado adequadamente.  
  
   
  
## Examples  
 O exemplo a seguir mostra como a buscar usando um <xref:System.Windows.Media.Animation.ClockController>.  
  
 [!code-csharp[ClockController_procedural_snip#ClockControllerSeekExample](~/samples/snippets/csharp/VS_Snippets_Wpf/ClockController_procedural_snip/CSharp/SeekAlignedToLastTickExample.cs#clockcontrollerseekexample)]
 [!code-vb[ClockController_procedural_snip#ClockControllerSeekExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ClockController_procedural_snip/visualbasic/seekalignedtolasttickexample.vb#clockcontrollerseekexample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Animation.TimeSeekOrigin" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      </Docs>
    </Member>
    <Member MemberName="SeekAlignedToLastTick">
      <MemberSignature Language="C#" Value="public void SeekAlignedToLastTick (TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SeekAlignedToLastTick(valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SeekAlignedToLastTick (offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SeekAlignedToLastTick(TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.SeekAlignedToLastTick : TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="clockController.SeekAlignedToLastTick (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">O deslocamento de busca, medido na hora do relógio de destino. Esse deslocamento é relativo ao <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" /> ou <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.Duration" /> do relógio, dependendo do valor de <paramref name="origin" />.</param>
        <param name="origin">Um valor que indica se o deslocamento especificado em relação ao <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" /> ou <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.Duration" /> do relógio do destino.</param>
        <summary>Procura o destino <see cref="T:System.Windows.Media.Animation.Clock" /> pelo valor especificado imediatamente. Se o relógio de destino for interrompido, realizar uma busca o ativará novamente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Busca de operações não têm o <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> ou <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> configurações da linha de tempo deste relógio em consideração: o relógio será tratado como se a sua linha do tempo tiver um <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> de 1 e sem <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.  
  
 <xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A> Alinha o tempo buscado do relógio com o último tique do relógio. Valores são atualizados imediatamente para refletir as alterações devido à <xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A>, mesmo que a tela não refletirá essas alterações até que as atualizações de tela.  
  
 Se o relógio de destino tiver filhos, seu tempo atual é atualizado adequadamente.  
  
 Esse método altera o relógio <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> para <xref:System.Windows.Media.Animation.ClockState.Active>.  
  
 Buscando os gatilhos de storyboard a <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated> e <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> eventos.  
  
   
  
## Examples  
 O exemplo a seguir demonstra a ambos os <xref:System.Windows.Media.Animation.ClockController.Seek%2A> e <xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A> métodos de um <xref:System.Windows.Media.Animation.ClockController>.  
  
 [!code-csharp[ClockController_procedural_snip#ClockControllerSeekExample](~/samples/snippets/csharp/VS_Snippets_Wpf/ClockController_procedural_snip/CSharp/SeekAlignedToLastTickExample.cs#clockcontrollerseekexample)]
 [!code-vb[ClockController_procedural_snip#ClockControllerSeekExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ClockController_procedural_snip/visualbasic/seekalignedtolasttickexample.vb#clockcontrollerseekexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipToFill">
      <MemberSignature Language="C#" Value="public void SkipToFill ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SkipToFill() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.SkipToFill" />
      <MemberSignature Language="VB.NET" Value="Public Sub SkipToFill ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SkipToFill();" />
      <MemberSignature Language="F#" Value="member this.SkipToFill : unit -&gt; unit" Usage="clockController.SkipToFill " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Adianta a hora atual do <see cref="T:System.Windows.Media.Animation.Clock" /> de destino até o final do respectivo período ativo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método adiantamentos do relógio de destino atual tempo até o final do seu período ativo; comportamento do relógio é especificado no momento pelo <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> configuração de seu <xref:System.Windows.Media.Animation.Timeline>. Se a linha do tempo <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> estiver definida como <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>, o relógio preenche; se a propriedade é definida como <xref:System.Windows.Media.Animation.FillBehavior.Stop>, as paradas de relógio.  
  
 Esse método tem somente-se um efeito do relógio de destino <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> é <xref:System.Windows.Media.Animation.ClockState.Active>.  
  
 Esse método não tem nenhum efeito na árvore de temporização até a próxima vez que um tique é processado. Como um efeito colateral, os eventos apropriados também não serão gerados até lá.  
  
 Aprimorando um storyboard para seu preenchimento períodos gatilhos a <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> e <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> eventos.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SpeedRatio">
      <MemberSignature Language="C#" Value="public double SpeedRatio { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SpeedRatio" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.ClockController.SpeedRatio" />
      <MemberSignature Language="VB.NET" Value="Public Property SpeedRatio As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double SpeedRatio { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.SpeedRatio : double with get, set" Usage="System.Windows.Media.Animation.ClockController.SpeedRatio" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a velocidade interativa do <see cref="T:System.Windows.Media.Animation.Clock" /> de destino.</summary>
        <value>Um valor finito maior que zero que descreve a velocidade interativa do relógio de destino. Esse valor é multiplicado contra o valor da <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> do relógio do <see cref="T:System.Windows.Media.Animation.Timeline" />. Por exemplo, se a linha do tempo <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> é 0,5 e o <see cref="T:System.Windows.Media.Animation.ClockController" /> do objeto <see cref="P:System.Windows.Media.Animation.ClockController.SpeedRatio" /> é 3.0, a linha do tempo se move a velocidade normal de 1,5 vezes (0,5 * 3.0). O valor padrão é 1.0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A definição dessa propriedade não tem nenhum efeito até o próximo tique. Se você definir essa propriedade e, em seguida, obter seu valor antes do próximo tique ocorre, você obterá o valor antigo. Essa propriedade retornará o novo valor após o próximo tique.  
  
 Definir essa propriedade não altera o valor de base da linha do tempo <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>.  
  
 A definição dessa propriedade aciona o relógio de destino <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated> eventos.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="clockController.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Interrompe o <see cref="T:System.Windows.Media.Animation.Clock" /> de destino.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método altera o relógio de destino <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> para <xref:System.Windows.Media.Animation.Clock.Stopped%2A>.  
  
 Um <xref:System.Windows.Media.Animation.Clock.Stopped%2A> clock pode ser reiniciado usando a <xref:System.Windows.Media.Animation.ClockController.Begin%2A>, <xref:System.Windows.Media.Animation.ClockController.Seek%2A>, ou <xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A> método.  
  
 Esse método não tem nenhum efeito na árvore de temporização até a próxima vez que um tique é processado. Como um efeito colateral, os eventos apropriados também não serão gerados até lá.  
  
 Interrompendo os disparadores de relógio a <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> e <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> eventos, mas não o <xref:System.Windows.Media.Animation.Clock.Completed> eventos.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>