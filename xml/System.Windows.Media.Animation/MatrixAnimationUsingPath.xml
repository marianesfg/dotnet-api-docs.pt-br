<Type Name="MatrixAnimationUsingPath" FullName="System.Windows.Media.Animation.MatrixAnimationUsingPath">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="81738be51f6d0ab54f66f0928969a984635e2072" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36497814" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MatrixAnimationUsingPath : System.Windows.Media.Animation.MatrixAnimationBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MatrixAnimationUsingPath extends System.Windows.Media.Animation.MatrixAnimationBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.MatrixAnimationUsingPath" />
  <TypeSignature Language="VB.NET" Value="Public Class MatrixAnimationUsingPath&#xA;Inherits MatrixAnimationBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class MatrixAnimationUsingPath : System::Windows::Media::Animation::MatrixAnimationBase" />
  <TypeSignature Language="F#" Value="type MatrixAnimationUsingPath = class&#xA;    inherit MatrixAnimationBase" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.MatrixAnimationBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="de13c-101">Anima o valor de uma propriedade <see cref="T:System.Windows.Media.Matrix" /> usando um <see cref="T:System.Windows.Media.PathGeometry" /> para gerar os valores animados.</span>
      <span class="sxs-lookup">
        <span data-stu-id="de13c-101">Animates the value of a <see cref="T:System.Windows.Media.Matrix" /> property by using a <see cref="T:System.Windows.Media.PathGeometry" /> to generate the animated values.</span>
      </span>
      <span data-ttu-id="de13c-102">Essa animação pode ser usada para mover um objeto visual ao longo de um caminho.</span>
      <span class="sxs-lookup">
        <span data-stu-id="de13c-102">This animation can be used to move a visual object along a path.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de13c-103"><xref:System.Windows.Media.Animation.MatrixAnimationUsingPath> permite que você animar o ângulo e a posição de um objeto com uma única animação e <xref:System.Windows.Media.MatrixTransform>.</span><span class="sxs-lookup"><span data-stu-id="de13c-103"><xref:System.Windows.Media.Animation.MatrixAnimationUsingPath> enables you to animate the angle and position of an object with a single animation and <xref:System.Windows.Media.MatrixTransform>.</span></span>  
  
 <span data-ttu-id="de13c-104">Um <xref:System.Windows.Media.Animation.PointAnimationUsingPath> anima seu destino por meio de interpolação linear em especificado <xref:System.Windows.Media.Animation.Timeline.Duration%2A>.</span><span class="sxs-lookup"><span data-stu-id="de13c-104">A <xref:System.Windows.Media.Animation.PointAnimationUsingPath> animates its target by using linear interpolation over the specified <xref:System.Windows.Media.Animation.Timeline.Duration%2A>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.PathGeometry" />
    <altmember cref="T:System.Windows.Media.Animation.PointAnimationUsingPath" />
    <altmember cref="T:System.Windows.Media.Animation.DoubleAnimationUsingPath" />
    <altmember cref="T:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MatrixAnimationUsingPath ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.MatrixAnimationUsingPath.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MatrixAnimationUsingPath();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="de13c-105">Inicializa uma nova instância da classe <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de13c-105">Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingPath" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de13c-106">Não há nenhum padrão <xref:System.Windows.Media.PathGeometry>, portanto, o usuário deve especificar um.</span><span class="sxs-lookup"><span data-stu-id="de13c-106">There is no default <xref:System.Windows.Media.PathGeometry>, so the user must specify one.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.MatrixAnimationUsingPath Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.MatrixAnimationUsingPath Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.MatrixAnimationUsingPath.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As MatrixAnimationUsingPath" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::MatrixAnimationUsingPath ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.Media.Animation.MatrixAnimationUsingPath" Usage="matrixAnimationUsingPath.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.MatrixAnimationUsingPath</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="de13c-107">Cria um clone modificável desse <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingPath" />, fazendo cópias em profundidade dos valores do objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de13c-107">Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingPath" />, making deep copies of this object's values.</span>
          </span>
          <span data-ttu-id="de13c-108">Ao copiar as propriedades de dependência, esse método copia associações de dados e referências de recurso (mas eles não podem mais resolver), mas não animações ou seus valores atuais.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de13c-108">When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="de13c-109">Um clone modificável do objeto atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de13c-109">A modifiable clone of the current object.</span>
          </span>
          <span data-ttu-id="de13c-110">A propriedade <see cref="P:System.Windows.Freezable.IsFrozen" /> do objeto clonado será <see langword="false" />, mesmo se a propriedade <see cref="P:System.Windows.Freezable.IsFrozen" /> da origem tiver sido <see langword="true." /></span>
          <span class="sxs-lookup">
            <span data-stu-id="de13c-110">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true." /></span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de13c-111">Esse método é usado para produzir cópias modificáveis de congelada <xref:System.Windows.Freezable> objetos (ou qualquer <xref:System.Windows.Freezable> objeto).</span><span class="sxs-lookup"><span data-stu-id="de13c-111">This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object).</span></span> <span data-ttu-id="de13c-112">Para sua conveniência, este método sombreia a versão herdada com uma implementação fortemente tipada.</span><span class="sxs-lookup"><span data-stu-id="de13c-112">For convenience, this method shadows the inherited version with a strongly typed implementation.</span></span>  
  
 <span data-ttu-id="de13c-113">Para obter mais informações, consulte <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="de13c-113">For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.MatrixAnimationUsingPath.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="abstract member CreateInstanceCore : unit -&gt; System.Windows.Freezable&#xA;override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="matrixAnimationUsingPath.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="de13c-114">Cria uma nova instância do <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de13c-114">Creates a new instance of the <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingPath" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="de13c-115">A nova instância.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de13c-115">The new instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Freezable.CreateInstanceCore" />
      </Docs>
    </Member>
    <Member MemberName="DoesRotateWithTangent">
      <MemberSignature Language="C#" Value="public bool DoesRotateWithTangent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DoesRotateWithTangent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangent" />
      <MemberSignature Language="VB.NET" Value="Public Property DoesRotateWithTangent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DoesRotateWithTangent { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DoesRotateWithTangent : bool with get, set" Usage="System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="de13c-116">Obtém ou define um valor que indica se o objeto gira ao longo da tangente do caminho.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de13c-116">Gets or sets a value indicating whether the object rotates along the tangent of the path.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="de13c-117">
            <see langword="true" /> Se o objeto gira junto da tangente do caminho; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de13c-117">
              <see langword="true" /> if the object will rotate along the tangent of the path; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="de13c-118">O padrão é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de13c-118">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de13c-119">Use a propriedade quando o objeto animado apareça em "slide" ao longo do caminho de animação.</span><span class="sxs-lookup"><span data-stu-id="de13c-119">Use property when you want the animated object to appear to "slide" along the animation path.</span></span>  
  
<a name="dependencyPropertyInfo_DoesRotateWithTangent"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="de13c-120">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="de13c-120">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="de13c-121">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="de13c-121">Identifier field</span></span>|<xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangentProperty>|  
|<span data-ttu-id="de13c-122">Propriedades de metadados é definido como `true`</span><span class="sxs-lookup"><span data-stu-id="de13c-122">Metadata properties set to `true`</span></span>|<span data-ttu-id="de13c-123">Nenhum</span><span class="sxs-lookup"><span data-stu-id="de13c-123">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DoesRotateWithTangentProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DoesRotateWithTangentProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DoesRotateWithTangentProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangentProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DoesRotateWithTangentProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DoesRotateWithTangentProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable DoesRotateWithTangentProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangentProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="de13c-124">Identifica a propriedade de dependência <see cref="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangent" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de13c-124">Identifies the <see cref="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangent" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValueCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Media.Matrix GetCurrentValueCore (System.Windows.Media.Matrix defaultOriginValue, System.Windows.Media.Matrix defaultDestinationValue, System.Windows.Media.Animation.AnimationClock animationClock);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Media.Matrix GetCurrentValueCore(valuetype System.Windows.Media.Matrix defaultOriginValue, valuetype System.Windows.Media.Matrix defaultDestinationValue, class System.Windows.Media.Animation.AnimationClock animationClock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.MatrixAnimationUsingPath.GetCurrentValueCore(System.Windows.Media.Matrix,System.Windows.Media.Matrix,System.Windows.Media.Animation.AnimationClock)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Media::Matrix GetCurrentValueCore(System::Windows::Media::Matrix defaultOriginValue, System::Windows::Media::Matrix defaultDestinationValue, System::Windows::Media::Animation::AnimationClock ^ animationClock);" />
      <MemberSignature Language="F#" Value="override this.GetCurrentValueCore : System.Windows.Media.Matrix * System.Windows.Media.Matrix * System.Windows.Media.Animation.AnimationClock -&gt; System.Windows.Media.Matrix" Usage="matrixAnimationUsingPath.GetCurrentValueCore (defaultOriginValue, defaultDestinationValue, animationClock)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Matrix</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defaultOriginValue" Type="System.Windows.Media.Matrix" />
        <Parameter Name="defaultDestinationValue" Type="System.Windows.Media.Matrix" />
        <Parameter Name="animationClock" Type="System.Windows.Media.Animation.AnimationClock" />
      </Parameters>
      <Docs>
        <param name="defaultOriginValue">
          <span data-ttu-id="de13c-125">O valor de origem sugerido, usado se a animação não tiver seu próprio valor inicial definido explicitamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de13c-125">The suggested origin value, used if the animation does not have its own explicitly set start value.</span>
          </span>
        </param>
        <param name="defaultDestinationValue">
          <span data-ttu-id="de13c-126">O valor de destino sugerido, usado se a animação não tiver seu próprio valor final definido explicitamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de13c-126">The suggested destination value, used if the animation does not have its own explicitly set end value.</span>
          </span>
        </param>
        <param name="animationClock">
          <span data-ttu-id="de13c-127">Um <see cref="T:System.Windows.Media.Animation.AnimationClock" /> que gera o <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> ou o <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> usado pela animação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de13c-127">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the animation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de13c-128">Calcula um valor que representa o valor atual da propriedade que está sendo animada, conforme determinado pelo <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de13c-128">Calculates a value that represents the current value of the property being animated, as determined by the <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingPath" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="de13c-129">O valor calculado da propriedade, conforme determinado pela animação atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de13c-129">The calculated value of the property, as determined by the current animation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de13c-130">Se o `defaultOriginValue` é o primeiro na cadeia de composição, esse valor será o valor de instantâneo (se estiver disponível) ou o valor da propriedade base; caso contrário, esse valor será o valor retornado pela animação anterior na cadeia com um <xref:System.Windows.Media.Animation.AnimationClock> que não é < C4 > <xref:System.Windows.Media.Animation.Clock.Stopped%2A> .</span><span class="sxs-lookup"><span data-stu-id="de13c-130">If the `defaultOriginValue` is the first in the composition chain, this value will be the snapshot value (if one is available) or the base property value; otherwise this value will be the value returned by the previous animation in the chain with an <xref:System.Windows.Media.Animation.AnimationClock> that is not <xref:System.Windows.Media.Animation.Clock.Stopped%2A>.</span></span>  
  
 <span data-ttu-id="de13c-131">O `defaultDestinationValue` é o valor de base se a animação for a primeira camada de composição de animações em uma propriedade; caso contrário, o valor é o valor de saída da camada de composição anterior de animações para a propriedade.</span><span class="sxs-lookup"><span data-stu-id="de13c-131">The `defaultDestinationValue` is the base value if the animation is in the first composition layer of animations on a property; otherwise the value is the output value from the previous composition layer of animations for the property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.MatrixAnimationBase.GetCurrentValueCore(System.Windows.Media.Matrix,System.Windows.Media.Matrix,System.Windows.Media.Animation.AnimationClock)" />
      </Docs>
    </Member>
    <Member MemberName="IsAdditive">
      <MemberSignature Language="C#" Value="public bool IsAdditive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAdditive" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive" />
      <MemberSignature Language="VB.NET" Value="Public Property IsAdditive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAdditive { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsAdditive : bool with get, set" Usage="System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="de13c-132">Obtém ou define um valor que indica se o valor atual da propriedade de destino deve ser adicionado ao valor inicial dessa animação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de13c-132">Gets or sets a value that indicates whether the target property's current value should be added to this animation's starting value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="de13c-133">
            <see langword="true" /> Se a propriedade de destino atual do valor deve ser adicionado ao valor inicial da animação este; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de13c-133">
              <see langword="true" /> if the target property's current value should be added to this animation's starting value; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="de13c-134">O padrão é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de13c-134">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsAdditive"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="de13c-135">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="de13c-135">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="de13c-136">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="de13c-136">Identifier field</span></span>|<xref:System.Windows.Media.Animation.AnimationTimeline.IsAdditiveProperty>|  
|<span data-ttu-id="de13c-137">Propriedades de metadados é definido como `true`</span><span class="sxs-lookup"><span data-stu-id="de13c-137">Metadata properties set to `true`</span></span>|<span data-ttu-id="de13c-138">Nenhum</span><span class="sxs-lookup"><span data-stu-id="de13c-138">None</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="de13c-139">Essa propriedade de dependência é incomum porque o campo de identificador para ela vem de <xref:System.Windows.Media.Animation.AnimationTimeline> e é compartilhado por várias classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="de13c-139">This dependency property is unusual because the identifier field for it comes from <xref:System.Windows.Media.Animation.AnimationTimeline> and is shared by various derived classes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="de13c-140">O exemplo a seguir usa duas semelhante <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath> animações para animar o retângulo do mesmo.</span><span class="sxs-lookup"><span data-stu-id="de13c-140">The following example uses two similar <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath> animations to animate the same rectangle.</span></span> <span data-ttu-id="de13c-141">A primeira animação <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive%2A> está definida como `false`, para que ele sempre anima o retângulo de (0,0), a animação do valor inicial.</span><span class="sxs-lookup"><span data-stu-id="de13c-141">The first animation's <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive%2A> property is set to `false`, so it always animates the rectangle from (0,0), the animation's starting value.</span></span> <span data-ttu-id="de13c-142">A segunda animação tem os mesmos valores de destino (seus <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometry%2A> configurações são idênticas), mas o <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive%2A> está definida como `true`; como resultado, ele anima o retângulo de qualquer posição é quando a animação é aplicada.</span><span class="sxs-lookup"><span data-stu-id="de13c-142">The second animation has the same target values (their <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometry%2A> settings are identical), but its <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive%2A> property is set to `true`; as a result, it animates the rectangle from whatever position it is at when the animation is applied.</span></span>  
  
 [!code-xaml[PathAnimationGallery_snippet#MatrixAnimationUsingPathIsAdditiveExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/PathAnimationGallery_snippet/CS/matrixanimationusingpathisadditiveexample.xaml#matrixanimationusingpathisadditiveexamplewholepage)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAngleCumulative">
      <MemberSignature Language="C#" Value="public bool IsAngleCumulative { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAngleCumulative" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulative" />
      <MemberSignature Language="VB.NET" Value="Public Property IsAngleCumulative As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAngleCumulative { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsAngleCumulative : bool with get, set" Usage="System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulative" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="de13c-143">Obtém ou define um valor que especifica se o ângulo de rotação da matriz animada deve se acumular entre repetições.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de13c-143">Gets or sets a value that specifies whether the rotation angle of the animated matrix should accumulate over repetitions.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="de13c-144">
            <see langword="true" /> Se o ângulo de rotação da animação deve se acumulem entre repetições; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de13c-144">
              <see langword="true" /> if the animation's rotation angle should accumulate over repetitions; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="de13c-145">O padrão é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de13c-145">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de13c-146">Se essa propriedade é definida como `true`, o ângulo de rotação da matriz animada acumularão conforme a animação se repete.</span><span class="sxs-lookup"><span data-stu-id="de13c-146">If this property is set to `true`, the rotation angle of the animated matrix will accumulate as the animation repeats.</span></span>  <span data-ttu-id="de13c-147">Se o caminho é um arco pequeno, um ângulo cumulativo fará com que o objeto girar continuamente com cada repetição em vez de reiniciar a rotação.</span><span class="sxs-lookup"><span data-stu-id="de13c-147">If your path is a small arc, a cumulative angle will cause your object to continuously rotate with each repeat instead of restarting the rotation.</span></span>  <span data-ttu-id="de13c-148">Quando combinado com um <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative%2A> de `true`, pode parecer que seu objeto secadora enquanto ele devoluções (dependendo do caminho especificado).</span><span class="sxs-lookup"><span data-stu-id="de13c-148">When combined with an <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative%2A> of `true`, your object might appear to tumble while it bounces (depending on the path you specify).</span></span> <span data-ttu-id="de13c-149">Para obter informações relacionadas, consulte <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative%2A>.</span><span class="sxs-lookup"><span data-stu-id="de13c-149">For related information, see <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative%2A>.</span></span>  
  
 <span data-ttu-id="de13c-150">A definição dessa propriedade não terá efeito se <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangent%2A> é `false`.</span><span class="sxs-lookup"><span data-stu-id="de13c-150">Setting this property has no effect if <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangent%2A> is `false`.</span></span>  
  
 <span data-ttu-id="de13c-151">Essa propriedade determina se o ângulo da matriz de animação acumula quando a animação se repete porque seu <xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A> configuração; ele não faz com que o deslocamento acumular quando a animação é reiniciada.</span><span class="sxs-lookup"><span data-stu-id="de13c-151">This property determines whether the animation matrix's angle accumulates when the animation repeats because of its <xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A> setting; it does not cause the offset to accumulate when the animation is restarted.</span></span> <span data-ttu-id="de13c-152">Para obter informações sobre como fazer uma animação compilar off valores de uma animação anterior, consulte <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive%2A>.</span><span class="sxs-lookup"><span data-stu-id="de13c-152">For information on how to make an animation build off a previous animation's values, see <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive%2A>.</span></span>  
  
<a name="dependencyPropertyInfo_IsAngleCumulative"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="de13c-153">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="de13c-153">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="de13c-154">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="de13c-154">Identifier field</span></span>|<xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulativeProperty>|  
|<span data-ttu-id="de13c-155">Propriedades de metadados é definido como `true`</span><span class="sxs-lookup"><span data-stu-id="de13c-155">Metadata properties set to `true`</span></span>|<span data-ttu-id="de13c-156">Nenhum</span><span class="sxs-lookup"><span data-stu-id="de13c-156">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="de13c-157">O exemplo a seguir usa duas semelhante <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath> animações para animar o retângulo do mesmo.</span><span class="sxs-lookup"><span data-stu-id="de13c-157">The following example uses two similar <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath> animations to animate the same rectangle.</span></span> <span data-ttu-id="de13c-158">Ambas as animações têm o mesmo <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometry%2A> configuração, que faz com que o retângulo girar conforme ele percorre a tela para a direita, e ambas as animações são definidas para repetir quatro vezes.</span><span class="sxs-lookup"><span data-stu-id="de13c-158">Both animations have the same <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometry%2A> setting, which causes the rectangle to rotate as it moves along the screen to the right, and both animations are set to repeat four times.</span></span> <span data-ttu-id="de13c-159">A primeira animação <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulative%2A> está definida como `false`, portanto, o retângulo salta para seu ângulo original quando a animação se repete.</span><span class="sxs-lookup"><span data-stu-id="de13c-159">The first animation's <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulative%2A> property is set to `false`, so the rectangle jumps back to its original angle when the animation repeats.</span></span> <span data-ttu-id="de13c-160">A segunda animação <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulative%2A> está definida como `true`; como resultado, o ângulo de retângulo parece aumentar quando a animação se repete, em vez de salto de volta para seu valor original.</span><span class="sxs-lookup"><span data-stu-id="de13c-160">The second animation's <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulative%2A> property is set to `true`; as a result, the rectangle angle appears to increase when the animation repeats, rather than jumping back to its original value.</span></span>  
  
 [!code-xaml[PathAnimationGallery_snippet#MatrixAnimationUsingPathIsAngleCumulativeExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/PathAnimationGallery_snippet/CS/matrixanimationusingpathisanglecumulativeexample.xaml#matrixanimationusingpathisanglecumulativeexamplewholepage)]   
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangent" />
        <altmember cref="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative" />
      </Docs>
    </Member>
    <Member MemberName="IsAngleCumulativeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsAngleCumulativeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsAngleCumulativeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulativeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsAngleCumulativeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsAngleCumulativeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsAngleCumulativeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulativeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="de13c-161">Identifica a propriedade de dependência <see cref="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulative" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de13c-161">Identifies the <see cref="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulative" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOffsetCumulative">
      <MemberSignature Language="C#" Value="public bool IsOffsetCumulative { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOffsetCumulative" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative" />
      <MemberSignature Language="VB.NET" Value="Public Property IsOffsetCumulative As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOffsetCumulative { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsOffsetCumulative : bool with get, set" Usage="System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="de13c-162">Obtém ou define um valor que indica se o deslocamento produzido pela matriz animada acumula-se entre repetições.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de13c-162">Gets or sets a value indicating whether the offset produced by the animated matrix will accumulate over repetitions.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="de13c-163">
            <see langword="true" /> Se o objeto serão acumulados sobre repetirá da animação; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de13c-163">
              <see langword="true" /> if the object will accumulate over repeats of the animation; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="de13c-164">O padrão é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de13c-164">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de13c-165">Se essa propriedade é definida como `true`, o deslocamento da matriz animada acumularão conforme a animação se repete.</span><span class="sxs-lookup"><span data-stu-id="de13c-165">If this property is set to `true`, the offset of the animated matrix will accumulate as the animation repeats.</span></span> <span data-ttu-id="de13c-166">Por exemplo, se o caminho é um pequeno arco e a animação estiver definida para repetir, um deslocamento cumulativo fará com que o objeto parece Elástico pela tela.</span><span class="sxs-lookup"><span data-stu-id="de13c-166">For example, if the path is a small arc and the animation is set to repeat, a cumulative offset will cause the object to appear to bounce across the screen.</span></span>  
  
 <span data-ttu-id="de13c-167">Essa propriedade determina se o deslocamento da matriz de animação acumula quando a animação se repete porque seu <xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A> configuração; ele não faz com que o deslocamento acumular quando a animação é reiniciada.</span><span class="sxs-lookup"><span data-stu-id="de13c-167">This property determines whether the animation matrix's offset accumulates when the animation repeats because of its <xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A> setting; it does not cause the offset to accumulate when the animation is restarted.</span></span> <span data-ttu-id="de13c-168">Para obter informações sobre como fazer uma animação compilar off valores de uma animação anterior, consulte <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive%2A>.</span><span class="sxs-lookup"><span data-stu-id="de13c-168">For information on how to make an animation build off a previous animation's values, see <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive%2A>.</span></span>  
  
<a name="dependencyPropertyInfo_IsOffsetCumulative"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="de13c-169">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="de13c-169">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="de13c-170">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="de13c-170">Identifier field</span></span>|<xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulativeProperty>|  
|<span data-ttu-id="de13c-171">Propriedades de metadados é definido como `true`</span><span class="sxs-lookup"><span data-stu-id="de13c-171">Metadata properties set to `true`</span></span>|<span data-ttu-id="de13c-172">Nenhum</span><span class="sxs-lookup"><span data-stu-id="de13c-172">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulative" />
        <altmember cref="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive" />
      </Docs>
    </Member>
    <Member MemberName="IsOffsetCumulativeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsOffsetCumulativeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsOffsetCumulativeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulativeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsOffsetCumulativeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsOffsetCumulativeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsOffsetCumulativeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulativeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="de13c-173">Identifica a propriedade de dependência <see cref="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de13c-173">Identifies the <see cref="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnChanged">
      <MemberSignature Language="C#" Value="protected override void OnChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.MatrixAnimationUsingPath.OnChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnChanged();" />
      <MemberSignature Language="F#" Value="abstract member OnChanged : unit -&gt; unit&#xA;override this.OnChanged : unit -&gt; unit" Usage="matrixAnimationUsingPath.OnChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="de13c-174">Chamado quando este <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingPath" /> é modificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de13c-174">Called when this <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingPath" /> is modified.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="de13c-175">
            <para>Para obter informações sobre como substituir esse método, consulte <see cref="M:System.Windows.Freezable.OnChanged" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="de13c-175">
              <para>For information about overriding this method, see <see cref="M:System.Windows.Freezable.OnChanged" />.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PathGeometry">
      <MemberSignature Language="C#" Value="public System.Windows.Media.PathGeometry PathGeometry { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.PathGeometry PathGeometry" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometry" />
      <MemberSignature Language="VB.NET" Value="Public Property PathGeometry As PathGeometry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::PathGeometry ^ PathGeometry { System::Windows::Media::PathGeometry ^ get(); void set(System::Windows::Media::PathGeometry ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PathGeometry : System.Windows.Media.PathGeometry with get, set" Usage="System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometry" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.PathGeometry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="de13c-176">Obtém ou define a geometria usada para gerar valores de saída desta animação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de13c-176">Gets or sets the geometry used to generate this animation's output values.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="de13c-177">Valores de saída da geometria usada para gerar a animação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de13c-177">The geometry used to generate this animation's output values.</span>
          </span>
          <span data-ttu-id="de13c-178">O padrão é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de13c-178">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de13c-179">Um <xref:System.Windows.Media.PathGeometry> pode descrever formas complexas que contêm curvas e arcos, permitindo que você especifique formas complexas para a animação de entrada.</span><span class="sxs-lookup"><span data-stu-id="de13c-179">A <xref:System.Windows.Media.PathGeometry> can describe complex shapes that contain curves and arcs, enabling you specify complex shapes for your animation input.</span></span> <span data-ttu-id="de13c-180">Para obter mais informações, consulte [Visão geral de geometria](~/docs/framework/wpf/graphics-multimedia/geometry-overview.md).</span><span class="sxs-lookup"><span data-stu-id="de13c-180">For more information, see [Geometry Overview](~/docs/framework/wpf/graphics-multimedia/geometry-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_PathGeometry"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="de13c-181">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="de13c-181">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="de13c-182">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="de13c-182">Identifier field</span></span>|<xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometryProperty>|  
|<span data-ttu-id="de13c-183">Propriedades de metadados é definido como `true`</span><span class="sxs-lookup"><span data-stu-id="de13c-183">Metadata properties set to `true`</span></span>|<span data-ttu-id="de13c-184">Nenhum</span><span class="sxs-lookup"><span data-stu-id="de13c-184">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.PathGeometry" />
      </Docs>
    </Member>
    <Member MemberName="PathGeometryProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PathGeometryProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PathGeometryProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometryProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PathGeometryProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PathGeometryProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PathGeometryProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometryProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="de13c-185">Identifica a propriedade de dependência <see cref="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometry" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de13c-185">Identifies the <see cref="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometry" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>