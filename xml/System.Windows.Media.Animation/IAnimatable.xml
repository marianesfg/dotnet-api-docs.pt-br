<Type Name="IAnimatable" FullName="System.Windows.Media.Animation.IAnimatable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5f7e84ce6a0766c479902a3039faf51f30a269ac" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37501606" /></Metadata><TypeSignature Language="C#" Value="public interface IAnimatable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAnimatable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.IAnimatable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAnimatable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IAnimatable" />
  <TypeSignature Language="F#" Value="type IAnimatable = interface" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="ec035-101">Esse tipo é compatível com a infraestrutura WPF e não se destina a ser usado diretamente no código.</span><span class="sxs-lookup"><span data-stu-id="ec035-101">This type supports the WPF infrastructure and is not intended to be used directly from your code.</span></span> <span data-ttu-id="ec035-102">Para fazer com que uma classe possa ser animada, ela deve ser derivada de <see cref="T:System.Windows.UIElement" />, <see cref="T:System.Windows.ContentElement" /> ou <see cref="T:System.Windows.Media.Animation.Animatable" />.</span><span class="sxs-lookup"><span data-stu-id="ec035-102">To make a class animatable, it should derive from <see cref="T:System.Windows.UIElement" />, <see cref="T:System.Windows.ContentElement" />, or <see cref="T:System.Windows.Media.Animation.Animatable" />.</span></span></summary>
    <remarks>To be added.</remarks>
    <altmember cref="T:System.Windows.UIElement" />
    <altmember cref="T:System.Windows.ContentElement" />
    <altmember cref="T:System.Windows.Media.Animation.Animatable" />
  </Docs>
  <Members>
    <MemberGroup MemberName="ApplyAnimationClock">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ec035-103">Aplica o efeito de um determinado <see cref="T:System.Windows.Media.Animation.AnimationClock" /> a uma propriedade de dependência.</span><span class="sxs-lookup"><span data-stu-id="ec035-103">Applies the effect of a given <see cref="T:System.Windows.Media.Animation.AnimationClock" /> to a given dependency property.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ApplyAnimationClock">
      <MemberSignature Language="C#" Value="public void ApplyAnimationClock (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationClock clock);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyAnimationClock(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationClock clock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyAnimationClock (dp As DependencyProperty, clock As AnimationClock)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyAnimationClock(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationClock ^ clock);" />
      <MemberSignature Language="F#" Value="abstract member ApplyAnimationClock : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationClock -&gt; unit" Usage="iAnimatable.ApplyAnimationClock (dp, clock)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="clock" Type="System.Windows.Media.Animation.AnimationClock" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="ec035-104">O <see cref="T:System.Windows.DependencyProperty" /> a ser animado.</span><span class="sxs-lookup"><span data-stu-id="ec035-104">The <see cref="T:System.Windows.DependencyProperty" /> to animate.</span></span></param>
        <param name="clock"><span data-ttu-id="ec035-105">O <see cref="T:System.Windows.Media.Animation.AnimationClock" /> que anima a propriedade.</span><span class="sxs-lookup"><span data-stu-id="ec035-105">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that animates the property.</span></span></param>
        <summary><span data-ttu-id="ec035-106">Aplica o efeito de um determinado <see cref="T:System.Windows.Media.Animation.AnimationClock" /> a uma propriedade de dependência.</span><span class="sxs-lookup"><span data-stu-id="ec035-106">Applies the effect of a given <see cref="T:System.Windows.Media.Animation.AnimationClock" /> to a given dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Media.Animation.AnimationClock" />
        <altmember cref="T:System.Windows.Media.Animation.Clock" />
      </Docs>
    </Member>
    <Member MemberName="ApplyAnimationClock">
      <MemberSignature Language="C#" Value="public void ApplyAnimationClock (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationClock clock, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyAnimationClock(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationClock clock, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyAnimationClock(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationClock ^ clock, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="F#" Value="abstract member ApplyAnimationClock : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationClock * System.Windows.Media.Animation.HandoffBehavior -&gt; unit" Usage="iAnimatable.ApplyAnimationClock (dp, clock, handoffBehavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="clock" Type="System.Windows.Media.Animation.AnimationClock" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="ec035-107">O <see cref="T:System.Windows.DependencyProperty" /> a ser animado.</span><span class="sxs-lookup"><span data-stu-id="ec035-107">The <see cref="T:System.Windows.DependencyProperty" /> to animate.</span></span></param>
        <param name="clock"><span data-ttu-id="ec035-108">O <see cref="T:System.Windows.Media.Animation.AnimationClock" /> que anima a propriedade.</span><span class="sxs-lookup"><span data-stu-id="ec035-108">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that animates the property.</span></span></param>
        <param name="handoffBehavior"><span data-ttu-id="ec035-109">Determina como o novo <see cref="T:System.Windows.Media.Animation.AnimationClock" /> fará a transição de quaisquer animações atuais na propriedade ou as afetará.</span><span class="sxs-lookup"><span data-stu-id="ec035-109">Determines how the new <see cref="T:System.Windows.Media.Animation.AnimationClock" /> will transition from or affect any current animations on the property.</span></span></param>
        <summary><span data-ttu-id="ec035-110">Aplica o efeito de um determinado <see cref="T:System.Windows.Media.Animation.AnimationClock" /> a uma propriedade de dependência.</span><span class="sxs-lookup"><span data-stu-id="ec035-110">Applies the effect of a given <see cref="T:System.Windows.Media.Animation.AnimationClock" /> to a given dependency property.</span></span> <span data-ttu-id="ec035-111">O efeito do novo <see cref="T:System.Windows.Media.Animation.AnimationClock" /> em quaisquer animações atuais é determinado pelo valor do parâmetro <paramref name="handoffBehavior" />.</span><span class="sxs-lookup"><span data-stu-id="ec035-111">The effect of the new <see cref="T:System.Windows.Media.Animation.AnimationClock" /> on any current animations is determined by the value of the <paramref name="handoffBehavior" /> parameter.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Media.Animation.AnimationClock" />
        <altmember cref="T:System.Windows.Media.Animation.HandoffBehavior" />
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAnimation">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ec035-112">Inicia uma sequência de animação para essa instância.</span><span class="sxs-lookup"><span data-stu-id="ec035-112">Initiates an animation sequence for this instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec035-113">A sequência de animação é acionada depois que o próximo quadro é renderizado.</span><span class="sxs-lookup"><span data-stu-id="ec035-113">The animation sequence is triggered once the next frame is rendered.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAnimation">
      <MemberSignature Language="C#" Value="public void BeginAnimation (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationTimeline animation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginAnimation(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationTimeline animation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginAnimation (dp As DependencyProperty, animation As AnimationTimeline)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginAnimation(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationTimeline ^ animation);" />
      <MemberSignature Language="F#" Value="abstract member BeginAnimation : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationTimeline -&gt; unit" Usage="iAnimatable.BeginAnimation (dp, animation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="animation" Type="System.Windows.Media.Animation.AnimationTimeline" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="ec035-114">O objeto a ser animado.</span><span class="sxs-lookup"><span data-stu-id="ec035-114">The object to animate.</span></span></param>
        <param name="animation"><span data-ttu-id="ec035-115">A linha do tempo com a funcionalidade necessária para animar a propriedade.</span><span class="sxs-lookup"><span data-stu-id="ec035-115">The timeline with the necessary functionality to animate the property.</span></span></param>
        <summary><span data-ttu-id="ec035-116">Inicia uma sequência de animação para o objeto <see cref="T:System.Windows.DependencyProperty" /> com base no <see cref="T:System.Windows.Media.Animation.AnimationTimeline" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="ec035-116">Initiates an animation sequence for the <see cref="T:System.Windows.DependencyProperty" /> object, based on the specified <see cref="T:System.Windows.Media.Animation.AnimationTimeline" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec035-117">A sequência de animação é acionada depois que o próximo quadro é renderizado.</span><span class="sxs-lookup"><span data-stu-id="ec035-117">The animation sequence is triggered once the next frame is rendered.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginAnimation">
      <MemberSignature Language="C#" Value="public void BeginAnimation (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationTimeline animation, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginAnimation(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationTimeline animation, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginAnimation(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationTimeline ^ animation, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="F#" Value="abstract member BeginAnimation : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationTimeline * System.Windows.Media.Animation.HandoffBehavior -&gt; unit" Usage="iAnimatable.BeginAnimation (dp, animation, handoffBehavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="animation" Type="System.Windows.Media.Animation.AnimationTimeline" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="ec035-118">O objeto a ser animado.</span><span class="sxs-lookup"><span data-stu-id="ec035-118">The object to animate.</span></span></param>
        <param name="animation"><span data-ttu-id="ec035-119">A linha de tempo com a funcionalidade necessária para personalizar a nova animação.</span><span class="sxs-lookup"><span data-stu-id="ec035-119">The timeline with the necessary functionality to tailor the new animation.</span></span></param>
        <param name="handoffBehavior"><span data-ttu-id="ec035-120">O objeto que especifica a maneira de interagir com todas as sequências de animação relevantes.</span><span class="sxs-lookup"><span data-stu-id="ec035-120">The object specifying the manner in which to interact with all relevant animation sequences.</span></span></param>
        <summary><span data-ttu-id="ec035-121">Inicia uma sequência de animação para o <see cref="T:System.Windows.DependencyProperty" />.object com base no <see cref="T:System.Windows.Media.Animation.AnimationTimeline" /> e no <see cref="T:System.Windows.Media.Animation.HandoffBehavior" /> especificados.</span><span class="sxs-lookup"><span data-stu-id="ec035-121">Initiates an animation sequence for the <see cref="T:System.Windows.DependencyProperty" />.object, based on both the specified <see cref="T:System.Windows.Media.Animation.AnimationTimeline" /> and <see cref="T:System.Windows.Media.Animation.HandoffBehavior" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec035-122">A sequência de animação é acionada depois que o próximo quadro é renderizado.</span><span class="sxs-lookup"><span data-stu-id="ec035-122">The animation sequence is triggered once the next frame is rendered.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAnimationBaseValue">
      <MemberSignature Language="C#" Value="public object GetAnimationBaseValue (System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetAnimationBaseValue(class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.IAnimatable.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAnimationBaseValue (dp As DependencyProperty) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetAnimationBaseValue(System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="abstract member GetAnimationBaseValue : System.Windows.DependencyProperty -&gt; obj" Usage="iAnimatable.GetAnimationBaseValue dp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="ec035-123">O objeto para o qual o valor base está sendo solicitado.</span><span class="sxs-lookup"><span data-stu-id="ec035-123">The object for which the base value is being requested.</span></span></param>
        <summary><span data-ttu-id="ec035-124">Recupera o valor base do objeto <see cref="T:System.Windows.DependencyProperty" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="ec035-124">Retrieves the base value of the specified <see cref="T:System.Windows.DependencyProperty" /> object.</span></span></summary>
        <returns><span data-ttu-id="ec035-125">O objeto que representa o valor base de <paramref name="Dp" />.</span><span class="sxs-lookup"><span data-stu-id="ec035-125">The object representing the base value of <paramref name="Dp" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec035-126">Use esse método em vez de <xref:System.Windows.DependencyObject.GetValue%2A> quando você deseja recuperar o valor não animado de uma propriedade animada.</span><span class="sxs-lookup"><span data-stu-id="ec035-126">Use this method instead of <xref:System.Windows.DependencyObject.GetValue%2A> when you want to retrieve the non-animated value of an animated property.</span></span> <span data-ttu-id="ec035-127">Esse método tira proveito do fato de que [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] animações não removam o valor de original da propriedade de destino.</span><span class="sxs-lookup"><span data-stu-id="ec035-127">This method takes advantage of the fact that [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] animations do not remove the target property's original value.</span></span> <span data-ttu-id="ec035-128">Para obter mais informações, consulte [Precedência do valor da propriedade de dependência](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span><span class="sxs-lookup"><span data-stu-id="ec035-128">For more information, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="HasAnimatedProperties">
      <MemberSignature Language="C#" Value="public bool HasAnimatedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAnimatedProperties" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.IAnimatable.HasAnimatedProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasAnimatedProperties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasAnimatedProperties { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasAnimatedProperties : bool" Usage="System.Windows.Media.Animation.IAnimatable.HasAnimatedProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec035-129">Obtém um valor que indica se essa instância tem propriedades animadas.</span><span class="sxs-lookup"><span data-stu-id="ec035-129">Gets a value that indicates whether this instance has any animated properties.</span></span></summary>
        <value><span data-ttu-id="ec035-130"><see langword="true" /> se um <see cref="T:System.Windows.Media.Animation.Clock" /> for associado a pelo menos uma das propriedades do objeto atual; caso contrário <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ec035-130"><see langword="true" /> if a <see cref="T:System.Windows.Media.Animation.Clock" /> is associated with at least one of the current object's properties; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec035-131">Observe que essa propriedade retornará `true` mesmo se a animação associada é <xref:System.Windows.Media.Animation.ClockState.Stopped> ou <xref:System.Windows.Media.Animation.ClockState.Filling>.</span><span class="sxs-lookup"><span data-stu-id="ec035-131">Note that this property returns `true` even if the associated animation is <xref:System.Windows.Media.Animation.ClockState.Stopped> or <xref:System.Windows.Media.Animation.ClockState.Filling>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Animation.Clock" />
      </Docs>
    </Member>
  </Members>
</Type>