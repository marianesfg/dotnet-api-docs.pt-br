<Type Name="ClockCollection" FullName="System.Windows.Media.Animation.ClockCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2e774f9f5f208698313ec851fe66acf58cb8e1b8" />
    <Meta Name="ms.sourcegitcommit" Value="723b8a6d92667ba86fcda96190bad3b4a03283b3" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="11/09/2018" />
    <Meta Name="ms.locfileid" Value="51310736" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ClockCollection : System.Collections.Generic.ICollection&lt;System.Windows.Media.Animation.Clock&gt;, System.Collections.Generic.IEnumerable&lt;System.Windows.Media.Animation.Clock&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ClockCollection extends System.Object implements class System.Collections.Generic.ICollection`1&lt;class System.Windows.Media.Animation.Clock&gt;, class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Media.Animation.Clock&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.ClockCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ClockCollection&#xA;Implements ICollection(Of Clock), IEnumerable(Of Clock)" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClockCollection : System::Collections::Generic::ICollection&lt;System::Windows::Media::Animation::Clock ^&gt;, System::Collections::Generic::IEnumerable&lt;System::Windows::Media::Animation::Clock ^&gt;" />
  <TypeSignature Language="F#" Value="type ClockCollection = class&#xA;    interface ICollection&lt;Clock&gt;&#xA;    interface seq&lt;Clock&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Windows.Media.Animation.Clock&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Windows.Media.Animation.Clock&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="860c2-101">Representa uma coleção ordenada de objetos de <see cref="T:System.Windows.Media.Animation.Clock" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="860c2-101">Represents an ordered collection of <see cref="T:System.Windows.Media.Animation.Clock" /> objects.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Windows.Media.Animation.Clock item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(class System.Windows.Media.Animation.Clock item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockCollection.Add(System.Windows.Media.Animation.Clock)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (item As Clock)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::Windows::Media::Animation::Clock ^ item);" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Windows.Media.Animation.Clock -&gt; unit&#xA;override this.Add : System.Windows.Media.Animation.Clock -&gt; unit" Usage="clockCollection.Add item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Windows.Media.Animation.Clock" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="860c2-102">O objeto a adicionar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="860c2-102">The object to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="860c2-103">Adiciona um objeto <see cref="T:System.Windows.Media.Animation.Clock" /> ao final deste <see cref="T:System.Windows.Media.Animation.ClockCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="860c2-103">Adds a new <see cref="T:System.Windows.Media.Animation.Clock" /> object to the end of this <see cref="T:System.Windows.Media.Animation.ClockCollection" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="clockCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="860c2-104">Remove todos os itens desta <see cref="T:System.Windows.Media.Animation.ClockCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="860c2-104">Removes all items from this <see cref="T:System.Windows.Media.Animation.ClockCollection" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Media.Animation.Clock item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(class System.Windows.Media.Animation.Clock item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockCollection.Contains(System.Windows.Media.Animation.Clock)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As Clock) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Windows::Media::Animation::Clock ^ item);" />
      <MemberSignature Language="F#" Value="abstract member Contains : System.Windows.Media.Animation.Clock -&gt; bool&#xA;override this.Contains : System.Windows.Media.Animation.Clock -&gt; bool" Usage="clockCollection.Contains item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Windows.Media.Animation.Clock" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="860c2-105">O objeto a ser localizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="860c2-105">The object to locate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="860c2-106">Indica se a <see cref="T:System.Windows.Media.Animation.ClockCollection" /> contém o objeto <see cref="T:System.Windows.Media.Animation.Clock" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="860c2-106">Indicates whether the <see cref="T:System.Windows.Media.Animation.ClockCollection" /> contains the specified <see cref="T:System.Windows.Media.Animation.Clock" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="860c2-107">**true** se <paramref name="item" /> for encontrado; caso contrário, **false**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="860c2-107">**true** if <paramref name="item" /> is found; otherwise, **false**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Windows.Media.Animation.Clock[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Windows.Media.Animation.Clock[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockCollection.CopyTo(System.Windows.Media.Animation.Clock[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As Clock(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;System::Windows::Media::Animation::Clock ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : System.Windows.Media.Animation.Clock[] * int -&gt; unit&#xA;override this.CopyTo : System.Windows.Media.Animation.Clock[] * int -&gt; unit" Usage="clockCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Windows.Media.Animation.Clock[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="860c2-108">A matriz de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="860c2-108">The destination array.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="860c2-109">A posição de índice baseado em zero em que a cópia é iniciada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="860c2-109">The zero-based index position where copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="860c2-110">Copia os objetos <see cref="T:System.Windows.Media.Animation.Clock" /> deste <see cref="T:System.Windows.Media.Animation.ClockCollection" /> para uma matriz de Clocks, iniciando na posição de índice especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="860c2-110">Copies the <see cref="T:System.Windows.Media.Animation.Clock" /> objects of this <see cref="T:System.Windows.Media.Animation.ClockCollection" /> to an array of Clocks, starting at the specified index position.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.ClockCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Media.Animation.ClockCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="860c2-111">Obtém o número de itens contidos neste <see cref="T:System.Windows.Media.Animation.ClockCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="860c2-111">Gets the number of items contained in this <see cref="T:System.Windows.Media.Animation.ClockCollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="860c2-112">O número de itens contidos nesta instância.</span>
          <span class="sxs-lookup">
            <span data-stu-id="860c2-112">The number of items contained in this instance.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="860c2-113">Indica se essa instância é igual ao objeto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="860c2-113">Indicates whether this instance is equal to the specified object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockCollection.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="clockCollection.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="860c2-114">O objeto a ser comparado com essa instância.</span>
          <span class="sxs-lookup">
            <span data-stu-id="860c2-114">The object to compare with this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="860c2-115">Indica se essa instância é igual ao objeto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="860c2-115">Indicates whether this instance is equal to the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="860c2-116">**true** se <paramref name="obj" /> for igual a esta instância; caso contrário, **false**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="860c2-116">**true** if <paramref name="obj" /> is equal to this instance; otherwise **false**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (System.Windows.Media.Animation.ClockCollection objA, System.Windows.Media.Animation.ClockCollection objB);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(class System.Windows.Media.Animation.ClockCollection objA, class System.Windows.Media.Animation.ClockCollection objB) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockCollection.Equals(System.Windows.Media.Animation.ClockCollection,System.Windows.Media.Animation.ClockCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (objA As ClockCollection, objB As ClockCollection) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(System::Windows::Media::Animation::ClockCollection ^ objA, System::Windows::Media::Animation::ClockCollection ^ objB);" />
      <MemberSignature Language="F#" Value="static member Equals : System.Windows.Media.Animation.ClockCollection * System.Windows.Media.Animation.ClockCollection -&gt; bool" Usage="System.Windows.Media.Animation.ClockCollection.Equals (objA, objB)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objA" Type="System.Windows.Media.Animation.ClockCollection" />
        <Parameter Name="objB" Type="System.Windows.Media.Animation.ClockCollection" />
      </Parameters>
      <Docs>
        <param name="objA">
          <span data-ttu-id="860c2-117">O primeiro valor a ser comparado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="860c2-117">The first value to compare.</span>
          </span>
        </param>
        <param name="objB">
          <span data-ttu-id="860c2-118">O segundo valor a ser comparado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="860c2-118">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="860c2-119">Indica se as duas coleções <see cref="T:System.Windows.Media.Animation.ClockCollection" /> especificadas são iguais.</span>
          <span class="sxs-lookup">
            <span data-stu-id="860c2-119">Indicates whether the two specified <see cref="T:System.Windows.Media.Animation.ClockCollection" /> collections are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="860c2-120">
            <see langword="true" /> se <paramref name="objA" /> e <paramref name="objB" /> forem iguais; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="860c2-120">
              <see langword="true" /> if <paramref name="objA" /> and <paramref name="objB" /> are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockCollection.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="clockCollection.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="860c2-121">Retorna um código hash de inteiro com sinal de 32 bits que representa esta instância.</span>
          <span class="sxs-lookup">
            <span data-stu-id="860c2-121">Returns a 32-bit signed integer hash code representing this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="860c2-122">Um inteiro com sinal de 32 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="860c2-122">A 32-bit signed integer.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.ClockCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Windows.Media.Animation.ClockCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="860c2-123">Obtém um valor que indica se o <see cref="T:System.Windows.Media.Animation.ClockCollection" /> é somente leitura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="860c2-123">Gets a value indicating whether the <see cref="T:System.Windows.Media.Animation.ClockCollection" /> is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="860c2-124">**Verdadeiro** se esta instância for somente leitura; caso contrário **falso**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="860c2-124">**true** if this instance is read-only; otherwise **false**.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Clock this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Animation.Clock Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.ClockCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As Clock" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::Clock ^ default[int] { System::Windows::Media::Animation::Clock ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Windows.Media.Animation.Clock" Usage="System.Windows.Media.Animation.ClockCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Clock</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="860c2-125">A posição de índice a acessar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="860c2-125">The index position to access.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="860c2-126">Obtém o <see cref="T:System.Windows.Media.Animation.Clock" /> na posição de índice especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="860c2-126">Gets the <see cref="T:System.Windows.Media.Animation.Clock" /> at the specified index position.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="860c2-127">O <see cref="T:System.Windows.Media.Animation.Clock" /> objeto no local especificado <paramref name="index" /> posição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="860c2-127">The <see cref="T:System.Windows.Media.Animation.Clock" /> object at the specified <paramref name="index" /> position.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Media.Animation.ClockCollection objA, System.Windows.Media.Animation.ClockCollection objB);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Windows.Media.Animation.ClockCollection objA, class System.Windows.Media.Animation.ClockCollection objB) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockCollection.op_Equality(System.Windows.Media.Animation.ClockCollection,System.Windows.Media.Animation.ClockCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (objA As ClockCollection, objB As ClockCollection) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Media::Animation::ClockCollection ^ objA, System::Windows::Media::Animation::ClockCollection ^ objB);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Windows.Media.Animation.ClockCollection * System.Windows.Media.Animation.ClockCollection -&gt; bool" Usage="objA = objB" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objA" Type="System.Windows.Media.Animation.ClockCollection" />
        <Parameter Name="objB" Type="System.Windows.Media.Animation.ClockCollection" />
      </Parameters>
      <Docs>
        <param name="objA">
          <span data-ttu-id="860c2-128">O primeiro objeto a ser comparado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="860c2-128">The first object to compare.</span>
          </span>
        </param>
        <param name="objB">
          <span data-ttu-id="860c2-129">O segundo objeto a ser comparado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="860c2-129">The second object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="860c2-130">Operador sobrecarregado que compara duas coleções <see cref="T:System.Windows.Media.Animation.ClockCollection" /> quanto à igualdade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="860c2-130">Overloaded operator that compares two <see cref="T:System.Windows.Media.Animation.ClockCollection" /> collections for equality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="860c2-131">**true** se <paramref name="objA" /> e <paramref name="objB" /> forem iguais; caso contrário **false**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="860c2-131">**true** if <paramref name="objA" /> and <paramref name="objB" /> are equal; otherwise **false**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Media.Animation.ClockCollection objA, System.Windows.Media.Animation.ClockCollection objB);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Windows.Media.Animation.ClockCollection objA, class System.Windows.Media.Animation.ClockCollection objB) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockCollection.op_Inequality(System.Windows.Media.Animation.ClockCollection,System.Windows.Media.Animation.ClockCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (objA As ClockCollection, objB As ClockCollection) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Media::Animation::ClockCollection ^ objA, System::Windows::Media::Animation::ClockCollection ^ objB);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Windows.Media.Animation.ClockCollection * System.Windows.Media.Animation.ClockCollection -&gt; bool" Usage="System.Windows.Media.Animation.ClockCollection.op_Inequality (objA, objB)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objA" Type="System.Windows.Media.Animation.ClockCollection" />
        <Parameter Name="objB" Type="System.Windows.Media.Animation.ClockCollection" />
      </Parameters>
      <Docs>
        <param name="objA">
          <span data-ttu-id="860c2-132">O primeiro objeto a ser comparado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="860c2-132">The first object to compare.</span>
          </span>
        </param>
        <param name="objB">
          <span data-ttu-id="860c2-133">O segundo objeto a ser comparado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="860c2-133">The second object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="860c2-134">Operador sobrecarregado que compara duas coleções <see cref="T:System.Windows.Media.Animation.ClockCollection" /> quanto à desigualdade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="860c2-134">Overloaded operator that compares two <see cref="T:System.Windows.Media.Animation.ClockCollection" /> collections for inequality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="860c2-135">**true** se <paramref name="objA" /> e <paramref name="objB" /> não forem iguais; caso contrário **false**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="860c2-135">**true** if <paramref name="objA" /> and <paramref name="objB" /> are not equal; otherwise **false**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (System.Windows.Media.Animation.Clock item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(class System.Windows.Media.Animation.Clock item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockCollection.Remove(System.Windows.Media.Animation.Clock)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (item As Clock) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(System::Windows::Media::Animation::Clock ^ item);" />
      <MemberSignature Language="F#" Value="abstract member Remove : System.Windows.Media.Animation.Clock -&gt; bool&#xA;override this.Remove : System.Windows.Media.Animation.Clock -&gt; bool" Usage="clockCollection.Remove item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Windows.Media.Animation.Clock" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="860c2-136">O objeto a ser removido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="860c2-136">The object to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="860c2-137">Remove o <see cref="T:System.Windows.Media.Animation.Clock" /> especificado do <see cref="T:System.Windows.Media.Animation.ClockCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="860c2-137">Removes the specified <see cref="T:System.Windows.Media.Animation.Clock" /> from the <see cref="T:System.Windows.Media.Animation.ClockCollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="860c2-138">**true** se o <paramref name="item" /> tiver sido removido com êxito; caso contrário, **false**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="860c2-138">**true** if <paramref name="item" /> was successfully removed; otherwise, **false**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Windows.Media.Animation.Clock&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;System.Windows.Media.Animation.Clock&gt; IEnumerable&lt;Clock&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class System.Windows.Media.Animation.Clock&gt; System.Collections.Generic.IEnumerable&lt;System.Windows.Media.Animation.Clock&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockCollection.System#Collections#Generic#IEnumerable&lt;System#Windows#Media#Animation#Clock&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of Clock) Implements IEnumerable(Of Clock).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;System::Windows::Media::Animation::Clock ^&gt; ^ System.Collections.Generic.IEnumerable&lt;System.Windows.Media.Animation.Clock&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;System::Windows::Media::Animation::Clock ^&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Windows.Media.Animation.Clock&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="860c2-139">Para obter uma descrição desse membro, consulte <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="860c2-139">For a description of this member, see <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="860c2-140">Um objeto <see cref="T:System.Collections.Generic.IEnumerator`1" /> que pode ser usado para iterar pela coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="860c2-140">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> object that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="860c2-141">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="860c2-141">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="860c2-142">Ele só pode ser usado quando a instância de <xref:System.Windows.Media.Animation.ClockCollection> é convertida em uma interface de <xref:System.Collections.Generic.IEnumerable%601>.</span><span class="sxs-lookup"><span data-stu-id="860c2-142">It can be used only when the <xref:System.Windows.Media.Animation.ClockCollection> instance is cast to an <xref:System.Collections.Generic.IEnumerable%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="860c2-143">Para obter uma descrição desse membro, consulte <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="860c2-143">For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="860c2-144">Um objeto <see cref="T:System.Collections.IEnumerator" /> que pode ser usado para iterar pela coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="860c2-144">An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="860c2-145">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="860c2-145">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="860c2-146">Ele só pode ser usado quando a instância de <xref:System.Windows.Media.Animation.ClockCollection> é convertida em uma interface de <xref:System.Collections.IEnumerable>.</span><span class="sxs-lookup"><span data-stu-id="860c2-146">It can be used only when the <xref:System.Windows.Media.Animation.ClockCollection> instance is cast to an <xref:System.Collections.IEnumerable> interface.</span></span>  
  
 <span data-ttu-id="860c2-147">Exemplo</span><span class="sxs-lookup"><span data-stu-id="860c2-147">Example</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>