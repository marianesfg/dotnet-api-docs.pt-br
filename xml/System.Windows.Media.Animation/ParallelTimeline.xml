<Type Name="ParallelTimeline" FullName="System.Windows.Media.Animation.ParallelTimeline">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8f00077702911582778065df29a0c5aa5c6c25f2" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37558383" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ParallelTimeline : System.Windows.Media.Animation.TimelineGroup" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ParallelTimeline extends System.Windows.Media.Animation.TimelineGroup" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.ParallelTimeline" />
  <TypeSignature Language="VB.NET" Value="Public Class ParallelTimeline&#xA;Inherits TimelineGroup" />
  <TypeSignature Language="C++ CLI" Value="public ref class ParallelTimeline : System::Windows::Media::Animation::TimelineGroup" />
  <TypeSignature Language="F#" Value="type ParallelTimeline = class&#xA;    inherit TimelineGroup" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.TimelineGroup</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Define um segmento de tempo que pode conter objetos <see cref="T:System.Windows.Media.Animation.Timeline" /> filho. Essas linhas do tempo filho ficam ativas de acordo com suas respectivas propriedades <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" />. Além disso, as linhas do tempo filho podem ser sobrepostas (executadas em paralelo).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.Animation.ParallelTimeline> objetos podem ser filhos (aninhados dentro) de um <xref:System.Windows.Media.Animation.Storyboard>. Isso pode fornecer melhor encapsulamento de sequências de tempo em animações complexas.  
  
 <xref:System.Windows.Media.Animation.ParallelTimeline> tem seu próprio <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> propriedade, portanto, todas as linha do tempo filho <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> valores são relativos ao pai <xref:System.Windows.Media.Animation.ParallelTimeline> de valor para <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Media.Animation.ParallelTimeline" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParallelTimeline ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ParallelTimeline.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ParallelTimeline();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Media.Animation.ParallelTimeline" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParallelTimeline (Nullable&lt;TimeSpan&gt; beginTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; beginTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ParallelTimeline.#ctor(System.Nullable{System.TimeSpan})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (beginTime As Nullable(Of TimeSpan))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ParallelTimeline(Nullable&lt;TimeSpan&gt; beginTime);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.Animation.ParallelTimeline : Nullable&lt;TimeSpan&gt; -&gt; System.Windows.Media.Animation.ParallelTimeline" Usage="new System.Windows.Media.Animation.ParallelTimeline beginTime" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="beginTime" Type="System.Nullable&lt;System.TimeSpan&gt;" />
      </Parameters>
      <Docs>
        <param name="beginTime">O <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> para <see cref="T:System.Windows.Media.Animation.TimelineGroup" />.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Media.Animation.ParallelTimeline" /> com o <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> especificado.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParallelTimeline (Nullable&lt;TimeSpan&gt; beginTime, System.Windows.Duration duration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; beginTime, valuetype System.Windows.Duration duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ParallelTimeline.#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ParallelTimeline(Nullable&lt;TimeSpan&gt; beginTime, System::Windows::Duration duration);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.Animation.ParallelTimeline : Nullable&lt;TimeSpan&gt; * System.Windows.Duration -&gt; System.Windows.Media.Animation.ParallelTimeline" Usage="new System.Windows.Media.Animation.ParallelTimeline (beginTime, duration)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="beginTime" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="duration" Type="System.Windows.Duration" />
      </Parameters>
      <Docs>
        <param name="beginTime">O <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> para <see cref="T:System.Windows.Media.Animation.TimelineGroup" />.</param>
        <param name="duration">O <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> para <see cref="T:System.Windows.Media.Animation.TimelineGroup" />.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Media.Animation.ParallelTimeline" /> com o <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> e <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> especificados.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParallelTimeline (Nullable&lt;TimeSpan&gt; beginTime, System.Windows.Duration duration, System.Windows.Media.Animation.RepeatBehavior repeatBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; beginTime, valuetype System.Windows.Duration duration, valuetype System.Windows.Media.Animation.RepeatBehavior repeatBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ParallelTimeline.#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration,System.Windows.Media.Animation.RepeatBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ParallelTimeline(Nullable&lt;TimeSpan&gt; beginTime, System::Windows::Duration duration, System::Windows::Media::Animation::RepeatBehavior repeatBehavior);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.Animation.ParallelTimeline : Nullable&lt;TimeSpan&gt; * System.Windows.Duration * System.Windows.Media.Animation.RepeatBehavior -&gt; System.Windows.Media.Animation.ParallelTimeline" Usage="new System.Windows.Media.Animation.ParallelTimeline (beginTime, duration, repeatBehavior)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="beginTime" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="duration" Type="System.Windows.Duration" />
        <Parameter Name="repeatBehavior" Type="System.Windows.Media.Animation.RepeatBehavior" />
      </Parameters>
      <Docs>
        <param name="beginTime">O <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> para <see cref="T:System.Windows.Media.Animation.TimelineGroup" />.</param>
        <param name="duration">O <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> para <see cref="T:System.Windows.Media.Animation.TimelineGroup" />.</param>
        <param name="repeatBehavior">O <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> para <see cref="T:System.Windows.Media.Animation.TimelineGroup" />.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Media.Animation.ParallelTimeline" /> com o <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" />, <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> e <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> especificados.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.ParallelTimeline Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.ParallelTimeline Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ParallelTimeline.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As ParallelTimeline" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::ParallelTimeline ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.Media.Animation.ParallelTimeline" Usage="parallelTimeline.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.ParallelTimeline</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cria um clone modificável desse <see cref="T:System.Windows.Media.Animation.ParallelTimeline" />, fazendo cópias em profundidade dos valores do objeto. Ao copiar as propriedades de dependência, esse método copia associações de dados e referências de recurso (mas eles não podem mais resolver), mas não animações ou seus valores atuais.</summary>
        <returns>Um clone modificável do objeto atual. A propriedade <see cref="P:System.Windows.Freezable.IsFrozen" /> do objeto clonado será <see langword="false" />, mesmo se a propriedade <see cref="P:System.Windows.Freezable.IsFrozen" /> da origem tiver sido <see langword="true." /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método é usado para produzir cópias modificáveis de congelado <xref:System.Windows.Freezable> objetos (ou qualquer <xref:System.Windows.Freezable> objeto). Para sua conveniência, este método sombreia a versão herdada com uma implementação fortemente tipada.  
  
 Para obter mais informações, consulte <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.ParallelTimeline CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.ParallelTimeline CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ParallelTimeline.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As ParallelTimeline" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::ParallelTimeline ^ CloneCurrentValue();" />
      <MemberSignature Language="F#" Value="override this.CloneCurrentValue : unit -&gt; System.Windows.Media.Animation.ParallelTimeline" Usage="parallelTimeline.CloneCurrentValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.ParallelTimeline</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cria um clone modificável desse objeto <see cref="T:System.Windows.Media.Animation.ParallelTimeline" />, fazendo cópias em profundidade dos valores do objeto atual. Referências a recursos, vinculações de dados e animações não são copiadas, mas seus valores atuais são.</summary>
        <returns>Um clone modificável do objeto atual. A propriedade <see cref="P:System.Windows.Freezable.IsFrozen" /> do objeto clonado será <see langword="false" />, mesmo se a propriedade <see cref="P:System.Windows.Freezable.IsFrozen" /> da origem tiver sido <see langword="true" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método é usado para produzir cópias modificáveis de congelado <xref:System.Windows.Freezable> objetos (ou qualquer <xref:System.Windows.Freezable> objeto). Para sua conveniência, este método sombreia a versão herdada com uma implementação fortemente tipada.  
  
 Para obter mais informações, consulte <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ParallelTimeline.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="abstract member CreateInstanceCore : unit -&gt; System.Windows.Freezable&#xA;override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="parallelTimeline.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cria uma nova instância deste <see cref="T:System.Windows.Freezable" />.</summary>
        <returns>O novo <see cref="T:System.Windows.Freezable" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método substitui o <xref:System.Windows.Freezable.CreateInstanceCore%2A> método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNaturalDurationCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Duration GetNaturalDurationCore (System.Windows.Media.Animation.Clock clock);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Duration GetNaturalDurationCore(class System.Windows.Media.Animation.Clock clock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ParallelTimeline.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Duration GetNaturalDurationCore(System::Windows::Media::Animation::Clock ^ clock);" />
      <MemberSignature Language="F#" Value="override this.GetNaturalDurationCore : System.Windows.Media.Animation.Clock -&gt; System.Windows.Duration" Usage="parallelTimeline.GetNaturalDurationCore clock" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Duration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clock" Type="System.Windows.Media.Animation.Clock" />
      </Parameters>
      <Docs>
        <param name="clock">O <see cref="T:System.Windows.Media.Animation.Clock" /> do qual retornar a duração natural.</param>
        <summary>Retorna a duração natural (duração de uma única iteração) de um <see cref="T:System.Windows.Media.Animation.Clock" /> especificado.</summary>
        <returns>A quantidade de <see cref="T:System.Windows.Duration" /> que representa a duração natural.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Uma duração natural é o período de uma única iteração. Se esse método retornar <xref:System.Windows.Duration.Automatic%2A> significa que a duração natural é desconhecida. Nesse caso, o <xref:System.Windows.Media.Animation.Clock.NaturalDuration%2A> do <xref:System.Windows.Media.Animation.Clock> é determinado pelo autor. Por exemplo, a duração de streaming de mídia seria determinada pelo provedor da mídia de streaming.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SlipBehavior">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.SlipBehavior SlipBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.Animation.SlipBehavior SlipBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property SlipBehavior As SlipBehavior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::SlipBehavior SlipBehavior { System::Windows::Media::Animation::SlipBehavior get(); void set(System::Windows::Media::Animation::SlipBehavior value); };" />
      <MemberSignature Language="F#" Value="member this.SlipBehavior : System.Windows.Media.Animation.SlipBehavior with get, set" Usage="System.Windows.Media.Animation.ParallelTimeline.SlipBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.SlipBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que especifica o comportamento dessa linha do tempo quando um ou mais dos seus <see cref="T:System.Windows.Media.Animation.Timeline" /> filhos se desvia.</summary>
        <value>Um valor que indica como essa linha do tempo se comportará quando um ou mais dos seus <see cref="T:System.Windows.Media.Animation.Timeline" /> filhos se desvia. O valor padrão é <see cref="F:System.Windows.Media.Animation.SlipBehavior.Grow" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Muitas vezes é desejável para sincronizar animações e mídia. No entanto, isso é complicado pelo fato de que a reprodução de mídia pode ser atrasada por carregamento ou armazenamento em buffer, dificultando a executar com confiança uma animação, juntamente com a mídia. O <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> propriedade é usada para determinar o que acontece quando a mídia e animações são executadas juntos. Um valor de <xref:System.Windows.Media.Animation.SlipBehavior.Grow> (padrão) Especifica que a animação não precisa ser sincronizados e será executado quando especificado, independentemente do estado de outras mídias na linha do tempo. Um valor de <xref:System.Windows.Media.Animation.SlipBehavior.Slip> por outro lado, especifica que uma animação aguardará (guia) até que a mídia está pronta para reproduzir. Os diagramas a seguir ilustram esse comportamento.  
  
 Isso <xref:System.Windows.Media.Animation.Storyboard> reproduz um vídeo e uma animação. Quando <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> é definido como <xref:System.Windows.Media.Animation.SlipBehavior.Grow> e o <xref:System.Windows.Media.Animation.Timeline.Duration%2A> propriedade do <xref:System.Windows.Media.Animation.Storyboard> está definido como <xref:System.Windows.Duration.Automatic%2A>, o <xref:System.Windows.Media.Animation.Storyboard> cresce para reproduzir todas as animações e mídia.  
  
 ![Diagrama: A chave para o Diagrama SlipBehavior](~/add/media/slipbehaviorkey.png "diagrama: chave para o Diagrama SlipBehavior")  
  
 ![Diagrama: Valor de propriedade SlipBehavior de crescimento](~/add/media/slipbehaviorgrow1.png "diagrama: valor da propriedade SlipBehavior de crescimento")  
  
 Isso <xref:System.Windows.Media.Animation.Storyboard> tem uma <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> dos <xref:System.Windows.Media.Animation.SlipBehavior.Grow> e um <xref:System.Windows.Media.Animation.Timeline.Duration%2A> de 5 segundos, que fornece 5 segundos de mídia e animações para reproduzir independentemente do quanto elas da guia.  
  
 ![Diagrama: Valor de propriedade SlipBehavior de crescimento](~/add/media/slipbehaviorgrow2.png "diagrama: valor da propriedade SlipBehavior de crescimento")  
  
 Isso <xref:System.Windows.Media.Animation.Storyboard> tem uma <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> de <xref:System.Windows.Media.Animation.SlipBehavior.Slip>. Observe que o <xref:System.Windows.Media.Animation.DoubleAnimation> (e nenhum outro filho não são de mídia do <xref:System.Windows.Media.Animation.Storyboard>) não progride, a menos que a linha do tempo de mídia também está em andamento.  Se a mídia leva algum tempo para carregar, ou se ele é armazenado em buffer, a animação aguardará (guias) com ele.  Isso permite que as animações sincronizar com um único arquivo de mídia.  
  
 ![Diagrama SlipBehavior para mídia e animação](~/add/media/slipbehaviorslip1.png "Diagrama SlipBehavior para mídia e animação")  
  
 Isso <xref:System.Windows.Media.Animation.Storyboard> tem uma <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> dos <xref:System.Windows.Media.Animation.SlipBehavior.Slip> e um <xref:System.Windows.Media.Animation.Timeline.Duration%2A> de 5 segundos.  Nesse cenário, o arquivo de mídia e animação são garantidos para reproduzir por 5 segundos.  
  
 ![Diagrama: Propriedade SlipBehavior de um Storyboard](~/add/media/slipbehaviorslip2.png "diagrama: propriedade SlipBehavior de um Storyboard")  
  
<a name="dependencyPropertyInfo_SlipBehavior"></a>   
## <a name="dependency-property-information"></a>Informações da propriedade de dependência  
  
|||  
|-|-|  
|Campo de identificador|<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehaviorProperty>|  
|Propriedades de metadados definido como `true`|Nenhum|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.MediaTimeline" />
      </Docs>
    </Member>
    <Member MemberName="SlipBehaviorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SlipBehaviorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SlipBehaviorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.ParallelTimeline.SlipBehaviorProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SlipBehaviorProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SlipBehaviorProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SlipBehaviorProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.ParallelTimeline.SlipBehaviorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica a propriedade de dependência <see cref="P:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O identificador da propriedade de dependência <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.  
  
   
  
## Examples  
 [Visão geral das propriedades da dependência](~/docs/framework/wpf/advanced/dependency-properties-overview.md)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>