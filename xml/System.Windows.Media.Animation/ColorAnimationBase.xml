<Type Name="ColorAnimationBase" FullName="System.Windows.Media.Animation.ColorAnimationBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0690e00d9694968e61b65b8aee6e048b8144632a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30659130" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ColorAnimationBase : System.Windows.Media.Animation.AnimationTimeline" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ColorAnimationBase extends System.Windows.Media.Animation.AnimationTimeline" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.ColorAnimationBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ColorAnimationBase&#xA;Inherits AnimationTimeline" />
  <TypeSignature Language="C++ CLI" Value="public ref class ColorAnimationBase abstract : System::Windows::Media::Animation::AnimationTimeline" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.AnimationTimeline</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Classe abstrata que, quando implementada, anima um valor de <see cref="T:System.Windows.Media.Color" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir demonstra como usar o derivada <xref:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames> classe usando [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)].  
  
 [!code-xaml[keyframes_ovw_snippet#ColorAnimationUsingKeyFramesWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/keyframes_ovw_snippet/CS/ColorAnimationUsingKeyFramesExample.xaml#coloranimationusingkeyframeswholepage)]   
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Consulte o [visão geral de animações personalizadas](~/docs/framework/wpf/graphics-multimedia/custom-animations-overview.md) para obter informações sobre como estender as classes de animação.</para>
    </block>
    <altmember cref="T:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ColorAnimationBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ColorAnimationBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ColorAnimationBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Media.Animation.ColorAnimationBase" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.ColorAnimationBase Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.ColorAnimationBase Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ColorAnimationBase.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As ColorAnimationBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::ColorAnimationBase ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.ColorAnimationBase</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cria um clone modificável desse <see cref="T:System.Windows.Media.Animation.ColorAnimationBase" />, fazendo cópias em profundidade dos valores do objeto. Ao copiar as propriedades de dependência, esse método copia associações de dados e referências de recurso (mas eles não podem mais resolver), mas não animações ou seus valores atuais.</summary>
        <returns>Um clone modificável do objeto atual. A propriedade <see cref="P:System.Windows.Freezable.IsFrozen" /> do objeto clonado será <see langword="false" />, mesmo se a propriedade <see cref="P:System.Windows.Freezable.IsFrozen" /> da origem tiver sido <see langword="true." /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método é usado para produzir cópias modificáveis de congelada <xref:System.Windows.Freezable> objetos (ou qualquer <xref:System.Windows.Freezable> objeto). Para sua conveniência, este método sombreia a versão herdada com uma implementação fortemente tipada.  
  
 Para obter mais informações, consulte <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrentValue">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Obtém o valor atual da animação.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrentValue">
      <MemberSignature Language="C#" Value="public override sealed object GetCurrentValue (object defaultOriginValue, object defaultDestinationValue, System.Windows.Media.Animation.AnimationClock animationClock);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetCurrentValue(object defaultOriginValue, object defaultDestinationValue, class System.Windows.Media.Animation.AnimationClock animationClock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ColorAnimationBase.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetCurrentValue(System::Object ^ defaultOriginValue, System::Object ^ defaultDestinationValue, System::Windows::Media::Animation::AnimationClock ^ animationClock);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defaultOriginValue" Type="System.Object" />
        <Parameter Name="defaultDestinationValue" Type="System.Object" />
        <Parameter Name="animationClock" Type="System.Windows.Media.Animation.AnimationClock" />
      </Parameters>
      <Docs>
        <param name="defaultOriginValue">O valor de origem fornecido para a animação se a animação não tiver seu próprio valor inicial.</param>
        <param name="defaultDestinationValue">O valor de destino fornecido para a animação se a animação não tiver seu próprio valor de destino.</param>
        <param name="animationClock">O <see cref="T:System.Windows.Media.Animation.AnimationClock" /> que pode gerar o valor <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> ou <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> a ser usado pela animação para gerar o valor de saída.</param>
        <summary>Obtém o valor atual da animação.</summary>
        <returns>O valor que essa animação acredita que deve ser o valor atual da propriedade.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O valor de `defaultOriginValue` depende do parâmetro na posição da animação na cadeia de composição:  
  
-   Se a animação está na primeira posição em uma cadeia de composição e substitui outra animação, `defaultOriginValue` é a saída daquela animação no momento em que ela foi substituída.  
  
-   Se a animação está na primeira posição em uma cadeia de composição e não existe animação para substituir, `defaultOriginValue` é o valor base da propriedade animada.  
  
-   Se essa animação não estiver na primeira posição de uma composição da cadeia, em seguida, `defaultOriginValue` é o valor retornado pela animação anterior na cadeia de composição que tem um <xref:System.Windows.Media.Animation.AnimationClock> que não é <xref:System.Windows.Media.Animation.Clock.Stopped%2A>.  
  
 O valor da `defaultDestinationValue` parâmetro depende se há uma propriedade anterior <xref:System.Windows.Trigger> camada de composição.  
  
-   Se houver uma propriedade anterior <xref:System.Windows.Trigger> camada de composição, `defaultDestinationValue` é a saída da camada.  
  
-   Se não houver nenhuma camada de composição anterior, `defaultDestinationValue` é o valor base da propriedade que são de animação.  
  
 Para obter mais informações sobre a composição de animação, consulte o [visão geral do sistema de controle de tempo e animação](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md). Para obter mais informações sobre como criar tipos de animação personalizada, consulte o [visão geral de animações personalizadas](~/docs/framework/wpf/graphics-multimedia/custom-animations-overview.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Color GetCurrentValue (System.Windows.Media.Color defaultOriginValue, System.Windows.Media.Color defaultDestinationValue, System.Windows.Media.Animation.AnimationClock animationClock);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Media.Color GetCurrentValue(valuetype System.Windows.Media.Color defaultOriginValue, valuetype System.Windows.Media.Color defaultDestinationValue, class System.Windows.Media.Animation.AnimationClock animationClock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ColorAnimationBase.GetCurrentValue(System.Windows.Media.Color,System.Windows.Media.Color,System.Windows.Media.Animation.AnimationClock)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Color GetCurrentValue(System::Windows::Media::Color defaultOriginValue, System::Windows::Media::Color defaultDestinationValue, System::Windows::Media::Animation::AnimationClock ^ animationClock);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defaultOriginValue" Type="System.Windows.Media.Color" />
        <Parameter Name="defaultDestinationValue" Type="System.Windows.Media.Color" />
        <Parameter Name="animationClock" Type="System.Windows.Media.Animation.AnimationClock" />
      </Parameters>
      <Docs>
        <param name="defaultOriginValue">O valor de origem fornecido para a animação se a animação não tiver seu próprio valor inicial.</param>
        <param name="defaultDestinationValue">O valor de destino fornecido para a animação se a animação não tiver seu próprio valor de destino.</param>
        <param name="animationClock">O <see cref="T:System.Windows.Media.Animation.AnimationClock" /> que pode gerar o valor <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> ou <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> a ser usado pela animação para gerar o valor de saída.</param>
        <summary>Obtém o valor atual da animação.</summary>
        <returns>O valor que essa animação acredita que deve ser o valor atual da propriedade.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O valor de `defaultOriginValue` depende do parâmetro na posição da animação na cadeia de composição:  
  
-   Se a animação está na primeira posição em uma cadeia de composição e substitui outra animação, `defaultOriginValue` é a saída daquela animação no momento em que ela foi substituída.  
  
-   Se a animação está na primeira posição em uma cadeia de composição e não existe animação para substituir, `defaultOriginValue` é o valor base da propriedade animada.  
  
-   Se essa animação não estiver na primeira posição de uma composição da cadeia, em seguida, `defaultOriginValue` é o valor retornado pela animação anterior na cadeia de composição que tem um <xref:System.Windows.Media.Animation.AnimationClock> que não é <xref:System.Windows.Media.Animation.Clock.Stopped%2A>.  
  
 O valor da `defaultDestinationValue` parâmetro depende se há uma propriedade anterior <xref:System.Windows.Trigger> camada de composição.  
  
-   Se houver uma propriedade anterior <xref:System.Windows.Trigger> camada de composição, `defaultDestinationValue` é a saída da camada.  
  
-   Se não houver nenhuma camada de composição anterior, `defaultDestinationValue` é o valor base da propriedade que são de animação.  
  
 Para obter mais informações sobre a composição de animação, consulte o [visão geral do sistema de controle de tempo e animação](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md). Para obter mais informações sobre como criar tipos de animação personalizada, consulte o [visão geral de animações personalizadas](~/docs/framework/wpf/graphics-multimedia/custom-animations-overview.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValueCore">
      <MemberSignature Language="C#" Value="protected abstract System.Windows.Media.Color GetCurrentValueCore (System.Windows.Media.Color defaultOriginValue, System.Windows.Media.Color defaultDestinationValue, System.Windows.Media.Animation.AnimationClock animationClock);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Windows.Media.Color GetCurrentValueCore(valuetype System.Windows.Media.Color defaultOriginValue, valuetype System.Windows.Media.Color defaultDestinationValue, class System.Windows.Media.Animation.AnimationClock animationClock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ColorAnimationBase.GetCurrentValueCore(System.Windows.Media.Color,System.Windows.Media.Color,System.Windows.Media.Animation.AnimationClock)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Windows::Media::Color GetCurrentValueCore(System::Windows::Media::Color defaultOriginValue, System::Windows::Media::Color defaultDestinationValue, System::Windows::Media::Animation::AnimationClock ^ animationClock);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defaultOriginValue" Type="System.Windows.Media.Color" />
        <Parameter Name="defaultDestinationValue" Type="System.Windows.Media.Color" />
        <Parameter Name="animationClock" Type="System.Windows.Media.Animation.AnimationClock" />
      </Parameters>
      <Docs>
        <param name="defaultOriginValue">O valor de origem sugerido, usado se a animação não tiver seu próprio valor inicial definido explicitamente.</param>
        <param name="defaultDestinationValue">O valor de destino sugerido, usado se a animação não tiver seu próprio valor final definido explicitamente.</param>
        <param name="animationClock">Um <see cref="T:System.Windows.Media.Animation.AnimationClock" /> que gera o <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> ou o <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> usado pela animação de host.</param>
        <summary>Calcula um valor que representa o valor atual da propriedade que está sendo animada, conforme determinado pela animação do host.</summary>
        <returns>O valor calculado da propriedade, conforme determinado pela animação atual.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O valor de `defaultOriginValue` depende do parâmetro na posição da animação na cadeia de composição:  
  
-   Se a animação está na primeira posição em uma cadeia de composição e substitui outra animação, `defaultOriginValue` é a saída daquela animação no momento em que ela foi substituída.  
  
-   Se a animação está na primeira posição em uma cadeia de composição e não existe animação para substituir, `defaultOriginValue` é o valor base da propriedade animada.  
  
-   Se essa animação não estiver na primeira posição de uma composição da cadeia, em seguida, `defaultOriginValue` é o valor retornado pela animação anterior na cadeia de composição que tem um <xref:System.Windows.Media.Animation.AnimationClock> que não é <xref:System.Windows.Media.Animation.Clock.Stopped%2A>.  
  
 O valor da `defaultDestinationValue` parâmetro depende se há uma propriedade anterior <xref:System.Windows.Trigger> camada de composição.  
  
-   Se houver uma propriedade anterior <xref:System.Windows.Trigger> camada de composição, `defaultDestinationValue` é a saída da camada.  
  
-   Se não houver nenhuma camada de composição anterior, `defaultDestinationValue` é o valor base da propriedade que são de animação.  
  
 Para obter mais informações sobre a composição de animação, consulte o [visão geral do sistema de controle de tempo e animação](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md). Para obter mais informações sobre como criar tipos de animação personalizada, consulte o [visão geral de animações personalizadas](~/docs/framework/wpf/graphics-multimedia/custom-animations-overview.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Animation.AnimationClock" />
      </Docs>
    </Member>
    <Member MemberName="TargetPropertyType">
      <MemberSignature Language="C#" Value="public override sealed Type TargetPropertyType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type TargetPropertyType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.ColorAnimationBase.TargetPropertyType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property TargetPropertyType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ TargetPropertyType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o tipo de valor que essa animação gera.</summary>
        <value>O tipo de valor produzido por essa animação.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>