<Type Name="ClientWebSocket" FullName="System.Net.WebSockets.ClientWebSocket">
  <Metadata><Meta Name="ms.openlocfilehash" Value="027beeb01827c55a76dbf4952b2b6ad3500f403c" /><Meta Name="ms.sourcegitcommit" Value="b0551d7828f015124aca601dbb64bd913cc5067d" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="12/13/2018" /><Meta Name="ms.locfileid" Value="53333632" /></Metadata><TypeSignature Language="C#" Value="public class ClientWebSocket : System.Net.WebSockets.WebSocket, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ClientWebSocket extends System.Net.WebSockets.WebSocket implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.WebSockets.ClientWebSocket" />
  <TypeSignature Language="VB.NET" Value="Public Class ClientWebSocket&#xA;Inherits WebSocket&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientWebSocket : System::Net::WebSockets::WebSocket, IDisposable" />
  <TypeSignature Language="F#" Value="type ClientWebSocket = class&#xA;    inherit WebSocket&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.WebSockets.WebSocket</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="9fe08-101">Fornece um cliente para se conectar aos serviços do WebSocket.</span><span class="sxs-lookup"><span data-stu-id="9fe08-101">Provides a client for connecting to WebSocket services.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fe08-102">Algumas das classes e os elementos de classe no <xref:System.Net.WebSockets> namespace têm suporte no Windows 7, Windows Vista SP2 e Windows Server 2008.</span><span class="sxs-lookup"><span data-stu-id="9fe08-102">Some of the classes and class elements in the <xref:System.Net.WebSockets> namespace are supported on Windows 7, Windows Vista SP2, and Windows Server 2008.</span></span> <span data-ttu-id="9fe08-103">No entanto, as implementações apenas públicas de cliente e servidor WebSocket têm suporte no Windows 8 e Windows Server 2012.</span><span class="sxs-lookup"><span data-stu-id="9fe08-103">However, the only public implementations of client and server WebSockets are supported on Windows 8 and Windows Server 2012.</span></span> <span data-ttu-id="9fe08-104">Os elementos de classe no <xref:System.Net.WebSockets> namespace que têm suporte no Windows 7, Windows Vista SP2 e Windows Server 2008 são abstratas elementos de classe.</span><span class="sxs-lookup"><span data-stu-id="9fe08-104">The class elements in the <xref:System.Net.WebSockets> namespace that are supported on Windows 7, Windows Vista SP2, and Windows Server 2008 are abstract class elements.</span></span> <span data-ttu-id="9fe08-105">Isso permite que um desenvolvedor de aplicativos herdar e estender essas classes de classe abstrata e os elementos de classe com uma implementação real do cliente WebSocket.</span><span class="sxs-lookup"><span data-stu-id="9fe08-105">This allows an application developer to inherit and extend these abstract class classes and class elements with an actual implementation of client WebSockets.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientWebSocket ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.ClientWebSocket.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientWebSocket();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9fe08-106">Cria uma instância de <see cref="T:System.Net.WebSockets.ClientWebSocket" /> classe.</span><span class="sxs-lookup"><span data-stu-id="9fe08-106">Creates an instance of the <see cref="T:System.Net.WebSockets.ClientWebSocket" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public override void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.ClientWebSocket.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Abort();" />
      <MemberSignature Language="F#" Value="override this.Abort : unit -&gt; unit" Usage="clientWebSocket.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9fe08-107">Anula a conexão e cancela as operações de E/S pendentes.</span><span class="sxs-lookup"><span data-stu-id="9fe08-107">Aborts the connection and cancels any pending IO operations.</span></span></summary>
        <remarks><span data-ttu-id="9fe08-108">O `ClientWebSocket` não podem ser reutilizadas depois que uma vez que ela será anulada.</span><span class="sxs-lookup"><span data-stu-id="9fe08-108">The `ClientWebSocket` cannot be reused once once it is aborted.</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task CloseAsync (System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task CloseAsync(valuetype System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.ClientWebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ CloseAsync(System::Net::WebSockets::WebSocketCloseStatus closeStatus, System::String ^ statusDescription, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.CloseAsync : System.Net.WebSockets.WebSocketCloseStatus * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="clientWebSocket.CloseAsync (closeStatus, statusDescription, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="closeStatus" Type="System.Net.WebSockets.WebSocketCloseStatus" />
        <Parameter Name="statusDescription" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="closeStatus"><span data-ttu-id="9fe08-109">O status de fechamento do WebSocket.</span><span class="sxs-lookup"><span data-stu-id="9fe08-109">The WebSocket close status.</span></span></param>
        <param name="statusDescription"><span data-ttu-id="9fe08-110">Uma descrição do status de fechamento.</span><span class="sxs-lookup"><span data-stu-id="9fe08-110">A description of the close status.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="9fe08-111">Um token de cancelamento usado para propagar a notificação de que essa operação deve ser cancelada.</span><span class="sxs-lookup"><span data-stu-id="9fe08-111">A cancellation token used to propagate notification that this  operation should be canceled.</span></span></param>
        <summary><span data-ttu-id="9fe08-112">Fecha a instância <see cref="T:System.Net.WebSockets.ClientWebSocket" /> como uma operação assíncrona.</span><span class="sxs-lookup"><span data-stu-id="9fe08-112">Close the <see cref="T:System.Net.WebSockets.ClientWebSocket" /> instance as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="9fe08-113">O objeto de tarefa que representa a operação assíncrona.</span><span class="sxs-lookup"><span data-stu-id="9fe08-113">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fe08-114">Essa operação não será bloqueada.</span><span class="sxs-lookup"><span data-stu-id="9fe08-114">This operation will not block.</span></span> <span data-ttu-id="9fe08-115">Retornado <xref:System.Threading.Tasks.Task> objeto será concluída após o <xref:System.Net.WebSockets.ClientWebSocket> instância está fechada.</span><span class="sxs-lookup"><span data-stu-id="9fe08-115">The returned <xref:System.Threading.Tasks.Task> object will complete after the <xref:System.Net.WebSockets.ClientWebSocket> instance is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseOutputAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task CloseOutputAsync (System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task CloseOutputAsync(valuetype System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.ClientWebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ CloseOutputAsync(System::Net::WebSockets::WebSocketCloseStatus closeStatus, System::String ^ statusDescription, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.CloseOutputAsync : System.Net.WebSockets.WebSocketCloseStatus * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="clientWebSocket.CloseOutputAsync (closeStatus, statusDescription, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="closeStatus" Type="System.Net.WebSockets.WebSocketCloseStatus" />
        <Parameter Name="statusDescription" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="closeStatus"><span data-ttu-id="9fe08-116">O status de fechamento do WebSocket.</span><span class="sxs-lookup"><span data-stu-id="9fe08-116">The WebSocket close status.</span></span></param>
        <param name="statusDescription"><span data-ttu-id="9fe08-117">Uma descrição do status de fechamento.</span><span class="sxs-lookup"><span data-stu-id="9fe08-117">A description of the close status.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="9fe08-118">Um token de cancelamento usado para propagar a notificação de que essa operação deve ser cancelada.</span><span class="sxs-lookup"><span data-stu-id="9fe08-118">A cancellation token used to propagate notification that this  operation should be canceled.</span></span></param>
        <summary><span data-ttu-id="9fe08-119">Fecha a saída da instância <see cref="T:System.Net.WebSockets.ClientWebSocket" /> como uma operação assíncrona.</span><span class="sxs-lookup"><span data-stu-id="9fe08-119">Close the output for the <see cref="T:System.Net.WebSockets.ClientWebSocket" /> instance as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="9fe08-120">O objeto de tarefa que representa a operação assíncrona.</span><span class="sxs-lookup"><span data-stu-id="9fe08-120">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fe08-121">Essa operação não será bloqueada.</span><span class="sxs-lookup"><span data-stu-id="9fe08-121">This operation will not block.</span></span> <span data-ttu-id="9fe08-122">Retornado <xref:System.Threading.Tasks.Task> objeto será concluída após a saída no <xref:System.Net.WebSockets.ClientWebSocket> instância está fechada.</span><span class="sxs-lookup"><span data-stu-id="9fe08-122">The returned <xref:System.Threading.Tasks.Task> object will complete after the output on the <xref:System.Net.WebSockets.ClientWebSocket> instance is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseStatus">
      <MemberSignature Language="C#" Value="public override Nullable&lt;System.Net.WebSockets.WebSocketCloseStatus&gt; CloseStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.Net.WebSockets.WebSocketCloseStatus&gt; CloseStatus" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebSockets.ClientWebSocket.CloseStatus" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CloseStatus As Nullable(Of WebSocketCloseStatus)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Nullable&lt;System::Net::WebSockets::WebSocketCloseStatus&gt; CloseStatus { Nullable&lt;System::Net::WebSockets::WebSocketCloseStatus&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.CloseStatus : Nullable&lt;System.Net.WebSockets.WebSocketCloseStatus&gt;" Usage="System.Net.WebSockets.ClientWebSocket.CloseStatus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Net.WebSockets.WebSocketCloseStatus&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9fe08-123">Obtém o motivo pelo qual o handshake de fechamento foi iniciado na instância <see cref="T:System.Net.WebSockets.ClientWebSocket" />.</span><span class="sxs-lookup"><span data-stu-id="9fe08-123">Gets the reason why the close handshake was initiated on <see cref="T:System.Net.WebSockets.ClientWebSocket" /> instance.</span></span></summary>
        <value><span data-ttu-id="9fe08-124">O motivo por que o handshake de fechamento foi iniciado.</span><span class="sxs-lookup"><span data-stu-id="9fe08-124">The reason why the close handshake was initiated.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseStatusDescription">
      <MemberSignature Language="C#" Value="public override string CloseStatusDescription { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CloseStatusDescription" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebSockets.ClientWebSocket.CloseStatusDescription" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CloseStatusDescription As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CloseStatusDescription { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CloseStatusDescription : string" Usage="System.Net.WebSockets.ClientWebSocket.CloseStatusDescription" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9fe08-125">Obtém uma descrição do motivo pelo qual a instância <see cref="T:System.Net.WebSockets.ClientWebSocket" /> foi fechada.</span><span class="sxs-lookup"><span data-stu-id="9fe08-125">Gets a description of the reason why the <see cref="T:System.Net.WebSockets.ClientWebSocket" /> instance was closed.</span></span></summary>
        <value><span data-ttu-id="9fe08-126">A descrição do motivo por que o <see cref="T:System.Net.WebSockets.ClientWebSocket" /> instância foi fechada.</span><span class="sxs-lookup"><span data-stu-id="9fe08-126">The description of the reason why the <see cref="T:System.Net.WebSockets.ClientWebSocket" /> instance was closed.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConnectAsync (Uri uri, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConnectAsync(class System.Uri uri, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.ClientWebSocket.ConnectAsync(System.Uri,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ConnectAsync(Uri ^ uri, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.ConnectAsync : Uri * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="clientWebSocket.ConnectAsync (uri, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="9fe08-127">O URI do servidor WebSocket ao qual se deve conectar.</span><span class="sxs-lookup"><span data-stu-id="9fe08-127">The URI of the WebSocket server to connect to.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="9fe08-128">Um token de cancelamento usado para propagar a notificação de que a operação deve ser cancelada.</span><span class="sxs-lookup"><span data-stu-id="9fe08-128">A cancellation token used to propagate notification that the  operation should be canceled.</span></span></param>
        <summary><span data-ttu-id="9fe08-129">Conecta a um servidor WebSocket como uma operação assíncrona.</span><span class="sxs-lookup"><span data-stu-id="9fe08-129">Connect to a WebSocket server as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="9fe08-130">O objeto de tarefa que representa a operação assíncrona.</span><span class="sxs-lookup"><span data-stu-id="9fe08-130">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fe08-131">O <xref:System.Net.WebSockets.ClientWebSocket.ConnectAsync%2A> método inicia o handshake do WebSocket com um destino de rede remota e, em seguida, negocia o subprotocolo.</span><span class="sxs-lookup"><span data-stu-id="9fe08-131">The <xref:System.Net.WebSockets.ClientWebSocket.ConnectAsync%2A> method initiates the WebSocket handshake with a remote network destination, and then negotiates the sub-protocol.</span></span>  
  
 <span data-ttu-id="9fe08-132">Para conexões de WebSocket sem formatação, use o `ws://` esquema no uri.</span><span class="sxs-lookup"><span data-stu-id="9fe08-132">For plain WebSocket connections, use the `ws://` scheme in the uri.</span></span> <span data-ttu-id="9fe08-133">Para conexões de WebSocket seguras por TLS/SSL, use o `wss://` esquema.</span><span class="sxs-lookup"><span data-stu-id="9fe08-133">For secure WebSocket connections over TLS/SSL, use the `wss://` scheme.</span></span>  
  
 <span data-ttu-id="9fe08-134">Essa operação não será bloqueada.</span><span class="sxs-lookup"><span data-stu-id="9fe08-134">This operation will not block.</span></span> <span data-ttu-id="9fe08-135">Retornado <xref:System.Threading.Tasks.Task> objeto será concluída após a solicitação de conexão no <xref:System.Net.WebSockets.ClientWebSocket> instância foi concluída.</span><span class="sxs-lookup"><span data-stu-id="9fe08-135">The returned <xref:System.Threading.Tasks.Task> object will complete after the connect request on the <xref:System.Net.WebSockets.ClientWebSocket> instance has completed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.ClientWebSocket.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Dispose();" />
      <MemberSignature Language="F#" Value="override this.Dispose : unit -&gt; unit" Usage="clientWebSocket.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9fe08-136">Libera os recursos não gerenciados usados pela instância <see cref="T:System.Net.WebSockets.ClientWebSocket" />.</span><span class="sxs-lookup"><span data-stu-id="9fe08-136">Releases the unmanaged resources used by the <see cref="T:System.Net.WebSockets.ClientWebSocket" /> instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.Net.WebSockets.ClientWebSocketOptions Options { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.WebSockets.ClientWebSocketOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebSockets.ClientWebSocket.Options" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Options As ClientWebSocketOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::WebSockets::ClientWebSocketOptions ^ Options { System::Net::WebSockets::ClientWebSocketOptions ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Options : System.Net.WebSockets.ClientWebSocketOptions" Usage="System.Net.WebSockets.ClientWebSocket.Options" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebSockets.ClientWebSocketOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9fe08-137">Obtém as opções do WebSocket para a instância <see cref="T:System.Net.WebSockets.ClientWebSocket" />.</span><span class="sxs-lookup"><span data-stu-id="9fe08-137">Gets the WebSocket options for the <see cref="T:System.Net.WebSockets.ClientWebSocket" /> instance.</span></span></summary>
        <value><span data-ttu-id="9fe08-138">As opções do WebSocket para a instância <see cref="T:System.Net.WebSockets.ClientWebSocket" />.</span><span class="sxs-lookup"><span data-stu-id="9fe08-138">The WebSocket options for the <see cref="T:System.Net.WebSockets.ClientWebSocket" /> instance.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;System.Net.WebSockets.WebSocketReceiveResult&gt; ReceiveAsync (ArraySegment&lt;byte&gt; buffer, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class System.Net.WebSockets.WebSocketReceiveResult&gt; ReceiveAsync(valuetype System.ArraySegment`1&lt;unsigned int8&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.ClientWebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;System::Net::WebSockets::WebSocketReceiveResult ^&gt; ^ ReceiveAsync(ArraySegment&lt;System::Byte&gt; buffer, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ReceiveAsync : ArraySegment&lt;byte&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.WebSockets.WebSocketReceiveResult&gt;" Usage="clientWebSocket.ReceiveAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.WebSockets.WebSocketReceiveResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="9fe08-139">O buffer que recebe a resposta.</span><span class="sxs-lookup"><span data-stu-id="9fe08-139">The buffer to receive the response.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="9fe08-140">Um token de cancelamento usado para propagar a notificação de que essa operação deve ser cancelada.</span><span class="sxs-lookup"><span data-stu-id="9fe08-140">A cancellation token used to propagate notification that this  operation should be canceled.</span></span></param>
        <summary><span data-ttu-id="9fe08-141">Recebe dados no <see cref="T:System.Net.WebSockets.ClientWebSocket" /> como uma operação assíncrona.</span><span class="sxs-lookup"><span data-stu-id="9fe08-141">Receives data on <see cref="T:System.Net.WebSockets.ClientWebSocket" /> as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="9fe08-142">O objeto de tarefa que representa a operação assíncrona.</span><span class="sxs-lookup"><span data-stu-id="9fe08-142">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fe08-143">Essa operação não será bloqueada.</span><span class="sxs-lookup"><span data-stu-id="9fe08-143">This operation will not block.</span></span> <span data-ttu-id="9fe08-144">Retornado <xref:System.Threading.Tasks.Task%601> objeto será concluída após a solicitação de recebimento no <xref:System.Net.WebSockets.ClientWebSocket> instância foi concluída.</span><span class="sxs-lookup"><span data-stu-id="9fe08-144">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the receive request on the <xref:System.Net.WebSockets.ClientWebSocket> instance has completed.</span></span>  
  
 <span data-ttu-id="9fe08-145">Exatamente um envio e outra recebem tem suporte em cada <xref:System.Net.WebSockets.ClientWebSocket> objeto em paralelo.</span><span class="sxs-lookup"><span data-stu-id="9fe08-145">Exactly one send and one receive is supported on each <xref:System.Net.WebSockets.ClientWebSocket> object in parallel.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task SendAsync (ArraySegment&lt;byte&gt; buffer, System.Net.WebSockets.WebSocketMessageType messageType, bool endOfMessage, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task SendAsync(valuetype System.ArraySegment`1&lt;unsigned int8&gt; buffer, valuetype System.Net.WebSockets.WebSocketMessageType messageType, bool endOfMessage, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.ClientWebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ SendAsync(ArraySegment&lt;System::Byte&gt; buffer, System::Net::WebSockets::WebSocketMessageType messageType, bool endOfMessage, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.SendAsync : ArraySegment&lt;byte&gt; * System.Net.WebSockets.WebSocketMessageType * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="clientWebSocket.SendAsync (buffer, messageType, endOfMessage, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="messageType" Type="System.Net.WebSockets.WebSocketMessageType" />
        <Parameter Name="endOfMessage" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="9fe08-146">O buffer que contém a mensagem a ser enviada.</span><span class="sxs-lookup"><span data-stu-id="9fe08-146">The buffer containing the message to be sent.</span></span></param>
        <param name="messageType"><span data-ttu-id="9fe08-147">Especifica se o buffer é de texto não criptografado ou em um formato binário.</span><span class="sxs-lookup"><span data-stu-id="9fe08-147">Specifies whether the buffer is clear text or in a binary format.</span></span></param>
        <param name="endOfMessage"><span data-ttu-id="9fe08-148">Especifica se este é o envio final assíncrono.</span><span class="sxs-lookup"><span data-stu-id="9fe08-148">Specifies whether this is the final asynchronous send.</span></span> <span data-ttu-id="9fe08-149">Definido como <see langword="true" /> se este for o enviar final; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9fe08-149">Set to <see langword="true" /> if this is the final send; <see langword="false" /> otherwise.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="9fe08-150">Um token de cancelamento usado para propagar a notificação de que essa operação deve ser cancelada.</span><span class="sxs-lookup"><span data-stu-id="9fe08-150">A cancellation token used to propagate notification that this  operation should be canceled.</span></span></param>
        <summary><span data-ttu-id="9fe08-151">Envie dados no <see cref="T:System.Net.WebSockets.ClientWebSocket" /> como uma operação assíncrona.</span><span class="sxs-lookup"><span data-stu-id="9fe08-151">Send data on <see cref="T:System.Net.WebSockets.ClientWebSocket" /> as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="9fe08-152">O objeto de tarefa que representa a operação assíncrona.</span><span class="sxs-lookup"><span data-stu-id="9fe08-152">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fe08-153">Essa operação não será bloqueada.</span><span class="sxs-lookup"><span data-stu-id="9fe08-153">This operation will not block.</span></span> <span data-ttu-id="9fe08-154">Retornado <xref:System.Threading.Tasks.Task> objeto será concluída após a solicitação de envio no <xref:System.Net.WebSockets.ClientWebSocket> instância foi concluída.</span><span class="sxs-lookup"><span data-stu-id="9fe08-154">The returned <xref:System.Threading.Tasks.Task> object will complete after the send request on the <xref:System.Net.WebSockets.ClientWebSocket> instance has completed.</span></span>  
  
 <span data-ttu-id="9fe08-155">Exatamente um envio e outra recebem tem suporte em cada <xref:System.Net.WebSockets.ClientWebSocket> objeto em paralelo.</span><span class="sxs-lookup"><span data-stu-id="9fe08-155">Exactly one send and one receive is supported on each <xref:System.Net.WebSockets.ClientWebSocket> object in parallel.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public override System.Net.WebSockets.WebSocketState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.WebSockets.WebSocketState State" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebSockets.ClientWebSocket.State" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property State As WebSocketState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::WebSockets::WebSocketState State { System::Net::WebSockets::WebSocketState get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Net.WebSockets.WebSocketState" Usage="System.Net.WebSockets.ClientWebSocket.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebSockets.WebSocketState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9fe08-156">Obtém o estado do WebSocket da instância <see cref="T:System.Net.WebSockets.ClientWebSocket" />.</span><span class="sxs-lookup"><span data-stu-id="9fe08-156">Gets the WebSocket state of the <see cref="T:System.Net.WebSockets.ClientWebSocket" /> instance.</span></span></summary>
        <value><span data-ttu-id="9fe08-157">O estado do WebSocket do <see cref="T:System.Net.WebSockets.ClientWebSocket" /> instância.</span><span class="sxs-lookup"><span data-stu-id="9fe08-157">The WebSocket state of the <see cref="T:System.Net.WebSockets.ClientWebSocket" /> instance.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubProtocol">
      <MemberSignature Language="C#" Value="public override string SubProtocol { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SubProtocol" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebSockets.ClientWebSocket.SubProtocol" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SubProtocol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SubProtocol { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SubProtocol : string" Usage="System.Net.WebSockets.ClientWebSocket.SubProtocol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9fe08-158">Obtém o subprotocolo WebSocket com suporte para a instância <see cref="T:System.Net.WebSockets.ClientWebSocket" />.</span><span class="sxs-lookup"><span data-stu-id="9fe08-158">Gets the supported WebSocket sub-protocol for the <see cref="T:System.Net.WebSockets.ClientWebSocket" /> instance.</span></span></summary>
        <value><span data-ttu-id="9fe08-159">O subprotocolo WebSocket com suporte.</span><span class="sxs-lookup"><span data-stu-id="9fe08-159">The supported WebSocket sub-protocol.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
