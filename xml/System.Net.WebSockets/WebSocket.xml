<Type Name="WebSocket" FullName="System.Net.WebSockets.WebSocket">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0c85ff3155323e1db39d44046c0731b0366d8a5a" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58740768" /></Metadata><TypeSignature Language="C#" Value="public abstract class WebSocket : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WebSocket extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.WebSockets.WebSocket" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WebSocket&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebSocket abstract : IDisposable" />
  <TypeSignature Language="F#" Value="type WebSocket = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.WebSockets</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="f65b0-101">A classe WebSocket permite que aplicativos enviem e recebam dados após a atualização do WebSocket ter sido concluída.</span><span class="sxs-lookup"><span data-stu-id="f65b0-101">The WebSocket class allows applications to send and receive data after the WebSocket upgrade has completed.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f65b0-102">Algumas das classes no <xref:System.Net.WebSockets> namespace têm suporte no Windows 7, Windows Vista SP2 e Windows Server 2008.</span><span class="sxs-lookup"><span data-stu-id="f65b0-102">Some of the classes in the <xref:System.Net.WebSockets> namespace are supported on Windows 7, Windows Vista SP2, and Windows Server 2008.</span></span> <span data-ttu-id="f65b0-103">No entanto, as implementações apenas públicas de cliente e servidor WebSocket têm suporte no Windows 8 e Windows Server 2012.</span><span class="sxs-lookup"><span data-stu-id="f65b0-103">However, the only public implementations of client and server WebSockets are supported on Windows 8 and Windows Server 2012.</span></span> <span data-ttu-id="f65b0-104">As classes e os elementos de classe no <xref:System.Net.WebSockets> namespace que têm suporte no Windows 7, Windows Vista SP2 e Windows Server 2008 são classes abstratas.</span><span class="sxs-lookup"><span data-stu-id="f65b0-104">The classes and class elements in the <xref:System.Net.WebSockets> namespace that are supported on Windows 7, Windows Vista SP2, and Windows Server 2008 are abstract classes.</span></span> <span data-ttu-id="f65b0-105">Isso permite que um desenvolvedor de aplicativos herdar e estender essas classes abstratas com uma implementação real do cliente WebSocket.</span><span class="sxs-lookup"><span data-stu-id="f65b0-105">This allows an application developer to inherit and extend these abstract classes with an actual implementation of client WebSockets.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebSocket ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.WebSocket.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WebSocket();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f65b0-106">Cria uma instância de <see cref="T:System.Net.WebSockets.WebSocket" /> classe.</span><span class="sxs-lookup"><span data-stu-id="f65b0-106">Creates an instance of the <see cref="T:System.Net.WebSockets.WebSocket" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public abstract void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.WebSocket.Abort" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Abort();" />
      <MemberSignature Language="F#" Value="abstract member Abort : unit -&gt; unit" Usage="webSocket.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f65b0-107">Anula a conexão WebSocket e cancela as operações de E/S pendentes.</span><span class="sxs-lookup"><span data-stu-id="f65b0-107">Aborts the WebSocket connection and cancels any pending IO operations.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task CloseAsync (System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task CloseAsync(valuetype System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.WebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Threading::Tasks::Task ^ CloseAsync(System::Net::WebSockets::WebSocketCloseStatus closeStatus, System::String ^ statusDescription, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="abstract member CloseAsync : System.Net.WebSockets.WebSocketCloseStatus * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="webSocket.CloseAsync (closeStatus, statusDescription, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="closeStatus" Type="System.Net.WebSockets.WebSocketCloseStatus" />
        <Parameter Name="statusDescription" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="closeStatus"><span data-ttu-id="f65b0-108">Indica o motivo para fechar a conexão WebSocket.</span><span class="sxs-lookup"><span data-stu-id="f65b0-108">Indicates the reason for closing the WebSocket connection.</span></span></param>
        <param name="statusDescription"><span data-ttu-id="f65b0-109">Especifica uma explicação legível humana relacionada ao motivo pelo qual a conexão é fechada.</span><span class="sxs-lookup"><span data-stu-id="f65b0-109">Specifies a human readable explanation as to why the connection is closed.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="f65b0-110">O token que pode ser usado para propagar a notificação de que as operações devem ser canceladas.</span><span class="sxs-lookup"><span data-stu-id="f65b0-110">The token that can be used to propagate notification that operations should be canceled.</span></span></param>
        <summary><span data-ttu-id="f65b0-111">Fecha a conexão WebSocket como uma operação assíncrona usando o handshake de fechamento definido na seção 7 da <see href="http://tools.ietf.org/html/draft-ietf-hybi-thewebsocketprotocol-06">especificação do protocolo WebSocket</see>.</span><span class="sxs-lookup"><span data-stu-id="f65b0-111">Closes the WebSocket connection as an asynchronous operation using the close handshake defined in the <see href="http://tools.ietf.org/html/draft-ietf-hybi-thewebsocketprotocol-06">WebSocket protocol specification</see> section 7.</span></span></summary>
        <returns><span data-ttu-id="f65b0-112">O objeto de tarefa que representa a operação assíncrona.</span><span class="sxs-lookup"><span data-stu-id="f65b0-112">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f65b0-113">Essa operação não será bloqueada.</span><span class="sxs-lookup"><span data-stu-id="f65b0-113">This operation will not block.</span></span> <span data-ttu-id="f65b0-114">Retornado <xref:System.Threading.Tasks.Task> objeto será concluído após o WebSocket foi fechado.</span><span class="sxs-lookup"><span data-stu-id="f65b0-114">The returned <xref:System.Threading.Tasks.Task> object will complete after the WebSocket has been closed.</span></span>  
  
 <span data-ttu-id="f65b0-115">Este método fecha a conexão WebSocket usando o handshake de fechamento definido na [especificação do protocolo WebSocket](http://tools.ietf.org/html/draft-ietf-hybi-thewebsocketprotocol-06) seção 7.</span><span class="sxs-lookup"><span data-stu-id="f65b0-115">This method closes the WebSocket connection using the close handshake defined in the [WebSocket protocol specification](http://tools.ietf.org/html/draft-ietf-hybi-thewebsocketprotocol-06) section 7.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseOutputAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task CloseOutputAsync (System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task CloseOutputAsync(valuetype System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.WebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Threading::Tasks::Task ^ CloseOutputAsync(System::Net::WebSockets::WebSocketCloseStatus closeStatus, System::String ^ statusDescription, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="abstract member CloseOutputAsync : System.Net.WebSockets.WebSocketCloseStatus * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="webSocket.CloseOutputAsync (closeStatus, statusDescription, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="closeStatus" Type="System.Net.WebSockets.WebSocketCloseStatus" />
        <Parameter Name="statusDescription" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="closeStatus"><span data-ttu-id="f65b0-116">Indica o motivo para fechar a conexão WebSocket.</span><span class="sxs-lookup"><span data-stu-id="f65b0-116">Indicates the reason for closing the WebSocket connection.</span></span></param>
        <param name="statusDescription"><span data-ttu-id="f65b0-117">Permite que os aplicativos especifiquem uma explicação legível humana indicando por que a conexão é fechada.</span><span class="sxs-lookup"><span data-stu-id="f65b0-117">Allows applications to specify a human readable explanation as to why the connection is closed.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="f65b0-118">O token que pode ser usado para propagar a notificação de que as operações devem ser canceladas.</span><span class="sxs-lookup"><span data-stu-id="f65b0-118">The token that can be used to propagate notification that operations should be canceled.</span></span></param>
        <summary><span data-ttu-id="f65b0-119">Inicia ou conclui o handshake de fechamento definido na <see href="http://tools.ietf.org/html/draft-ietf-hybi-thewebsocketprotocol-06">seção 7 da especificação do protocolo WebSocket</see>.</span><span class="sxs-lookup"><span data-stu-id="f65b0-119">Initiates or completes the close handshake defined in the <see href="http://tools.ietf.org/html/draft-ietf-hybi-thewebsocketprotocol-06">WebSocket protocol specification section 7</see>.</span></span></summary>
        <returns><span data-ttu-id="f65b0-120">O objeto de tarefa que representa a operação assíncrona.</span><span class="sxs-lookup"><span data-stu-id="f65b0-120">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f65b0-121">Essa operação não será bloqueada.</span><span class="sxs-lookup"><span data-stu-id="f65b0-121">This operation will not block.</span></span> <span data-ttu-id="f65b0-122">Retornado <xref:System.Threading.Tasks.Task> objeto será concluído depois que a saída do WebSocket foi fechada.</span><span class="sxs-lookup"><span data-stu-id="f65b0-122">The returned <xref:System.Threading.Tasks.Task> object will complete after the output on the WebSocket has been closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseStatus">
      <MemberSignature Language="C#" Value="public abstract Nullable&lt;System.Net.WebSockets.WebSocketCloseStatus&gt; CloseStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.Net.WebSockets.WebSocketCloseStatus&gt; CloseStatus" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebSockets.WebSocket.CloseStatus" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property CloseStatus As Nullable(Of WebSocketCloseStatus)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Nullable&lt;System::Net::WebSockets::WebSocketCloseStatus&gt; CloseStatus { Nullable&lt;System::Net::WebSockets::WebSocketCloseStatus&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.CloseStatus : Nullable&lt;System.Net.WebSockets.WebSocketCloseStatus&gt;" Usage="System.Net.WebSockets.WebSocket.CloseStatus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Net.WebSockets.WebSocketCloseStatus&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f65b0-123">Indica o motivo por que o ponto de extremidade remoto iniciou handshake de fechamento.</span><span class="sxs-lookup"><span data-stu-id="f65b0-123">Indicates the reason why the remote endpoint initiated the close handshake.</span></span></summary>
        <value><span data-ttu-id="f65b0-124">Retorna <see cref="T:System.Net.WebSockets.WebSocketCloseStatus" />.</span><span class="sxs-lookup"><span data-stu-id="f65b0-124">Returns <see cref="T:System.Net.WebSockets.WebSocketCloseStatus" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f65b0-125">Se não tiver sido iniciado ainda o handshake de fechamento, WebSocketCloseStatus.None será retornado.</span><span class="sxs-lookup"><span data-stu-id="f65b0-125">If the close handshake has not been initiated yet, WebSocketCloseStatus.None is returned.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseStatusDescription">
      <MemberSignature Language="C#" Value="public abstract string CloseStatusDescription { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CloseStatusDescription" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebSockets.WebSocket.CloseStatusDescription" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property CloseStatusDescription As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ CloseStatusDescription { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CloseStatusDescription : string" Usage="System.Net.WebSockets.WebSocket.CloseStatusDescription" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f65b0-126">Permite que o ponto de extremidade remoto descreva o motivo por que a conexão foi fechada.</span><span class="sxs-lookup"><span data-stu-id="f65b0-126">Allows the remote endpoint to describe the reason why the connection was closed.</span></span></summary>
        <value><span data-ttu-id="f65b0-127">Retorna <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="f65b0-127">Returns <see cref="T:System.String" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateClientBuffer">
      <MemberSignature Language="C#" Value="public static ArraySegment&lt;byte&gt; CreateClientBuffer (int receiveBufferSize, int sendBufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ArraySegment`1&lt;unsigned int8&gt; CreateClientBuffer(int32 receiveBufferSize, int32 sendBufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.WebSocket.CreateClientBuffer(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateClientBuffer (receiveBufferSize As Integer, sendBufferSize As Integer) As ArraySegment(Of Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ArraySegment&lt;System::Byte&gt; CreateClientBuffer(int receiveBufferSize, int sendBufferSize);" />
      <MemberSignature Language="F#" Value="static member CreateClientBuffer : int * int -&gt; ArraySegment&lt;byte&gt;" Usage="System.Net.WebSockets.WebSocket.CreateClientBuffer (receiveBufferSize, sendBufferSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ArraySegment&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="receiveBufferSize" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="sendBufferSize" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="receiveBufferSize"><span data-ttu-id="f65b0-128">O tamanho, em bytes, do buffer de recepção do cliente.</span><span class="sxs-lookup"><span data-stu-id="f65b0-128">The size, in bytes, of the client receive buffer.</span></span></param>
        <param name="sendBufferSize"><span data-ttu-id="f65b0-129">O tamanho, em bytes, do buffer de envio.</span><span class="sxs-lookup"><span data-stu-id="f65b0-129">The size, in bytes, of the send buffer.</span></span></param>
        <summary><span data-ttu-id="f65b0-130">Crie o cliente de buffers a ser usado com essa instância <see cref="T:System.Net.WebSockets.WebSocket" />.</span><span class="sxs-lookup"><span data-stu-id="f65b0-130">Create client buffers to use with this <see cref="T:System.Net.WebSockets.WebSocket" /> instance.</span></span></summary>
        <returns><span data-ttu-id="f65b0-131">Uma matriz com os buffers de cliente.</span><span class="sxs-lookup"><span data-stu-id="f65b0-131">An array with the client buffers.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateClientWebSocket">
      <MemberSignature Language="C#" Value="public static System.Net.WebSockets.WebSocket CreateClientWebSocket (System.IO.Stream innerStream, string subProtocol, int receiveBufferSize, int sendBufferSize, TimeSpan keepAliveInterval, bool useZeroMaskingKey, ArraySegment&lt;byte&gt; internalBuffer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.WebSockets.WebSocket CreateClientWebSocket(class System.IO.Stream innerStream, string subProtocol, int32 receiveBufferSize, int32 sendBufferSize, valuetype System.TimeSpan keepAliveInterval, bool useZeroMaskingKey, valuetype System.ArraySegment`1&lt;unsigned int8&gt; internalBuffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.WebSocket.CreateClientWebSocket(System.IO.Stream,System.String,System.Int32,System.Int32,System.TimeSpan,System.Boolean,System.ArraySegment{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateClientWebSocket (innerStream As Stream, subProtocol As String, receiveBufferSize As Integer, sendBufferSize As Integer, keepAliveInterval As TimeSpan, useZeroMaskingKey As Boolean, internalBuffer As ArraySegment(Of Byte)) As WebSocket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::WebSockets::WebSocket ^ CreateClientWebSocket(System::IO::Stream ^ innerStream, System::String ^ subProtocol, int receiveBufferSize, int sendBufferSize, TimeSpan keepAliveInterval, bool useZeroMaskingKey, ArraySegment&lt;System::Byte&gt; internalBuffer);" />
      <MemberSignature Language="F#" Value="static member CreateClientWebSocket : System.IO.Stream * string * int * int * TimeSpan * bool * ArraySegment&lt;byte&gt; -&gt; System.Net.WebSockets.WebSocket" Usage="System.Net.WebSockets.WebSocket.CreateClientWebSocket (innerStream, subProtocol, receiveBufferSize, sendBufferSize, keepAliveInterval, useZeroMaskingKey, internalBuffer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.WebSockets.WebSocket</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="subProtocol" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="receiveBufferSize" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="sendBufferSize" Type="System.Int32" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="keepAliveInterval" Type="System.TimeSpan" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="useZeroMaskingKey" Type="System.Boolean" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="internalBuffer" Type="System.ArraySegment&lt;System.Byte&gt;" Index="6" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="innerStream"><span data-ttu-id="f65b0-132">A conexão a ser usada para operações de E/S.</span><span class="sxs-lookup"><span data-stu-id="f65b0-132">The connection to be used for IO operations.</span></span></param>
        <param name="subProtocol"><span data-ttu-id="f65b0-133">O subprotocolo aceito pelo cliente.</span><span class="sxs-lookup"><span data-stu-id="f65b0-133">The subprotocol accepted by the client.</span></span></param>
        <param name="receiveBufferSize"><span data-ttu-id="f65b0-134">O tamanho, em bytes, do buffer de recepção do WebSocket do cliente.</span><span class="sxs-lookup"><span data-stu-id="f65b0-134">The size in bytes of the client WebSocket receive buffer.</span></span></param>
        <param name="sendBufferSize"><span data-ttu-id="f65b0-135">O tamanho, em bytes, do buffer de envio do WebSocket do cliente.</span><span class="sxs-lookup"><span data-stu-id="f65b0-135">The size in bytes of the client WebSocket send buffer.</span></span></param>
        <param name="keepAliveInterval"><span data-ttu-id="f65b0-136">Determina com que regularidade um quadro é enviado pela conexão como um keep-alive.</span><span class="sxs-lookup"><span data-stu-id="f65b0-136">Determines how regularly a frame is sent over the connection as a keep-alive.</span></span> <span data-ttu-id="f65b0-137">Aplica-se somente quando a conexão está ociosa.</span><span class="sxs-lookup"><span data-stu-id="f65b0-137">Applies only when the connection is idle.</span></span></param>
        <param name="useZeroMaskingKey"><span data-ttu-id="f65b0-138">Indica se uma chave aleatória ou uma chave estática (apenas zeros) deve ser usada para o mascaramento do WebSocket.</span><span class="sxs-lookup"><span data-stu-id="f65b0-138">Indicates whether a random key or a static key (just zeros) should be used for the WebSocket masking.</span></span></param>
        <param name="internalBuffer"><span data-ttu-id="f65b0-139">Será usado como o buffer interno no WPC.</span><span class="sxs-lookup"><span data-stu-id="f65b0-139">Will be used as the internal buffer in the WPC.</span></span> <span data-ttu-id="f65b0-140">O tamanho deve ser pelo menos <c>2 \* ReceiveBufferSize + SendBufferSize + 256 + 20 (16 em 32 bits)</c>.</span><span class="sxs-lookup"><span data-stu-id="f65b0-140">The size has to be at least <c>2 \* ReceiveBufferSize + SendBufferSize + 256 + 20 (16 on 32-bit)</c>.</span></span></param>
        <summary><span data-ttu-id="f65b0-141">Permite que os chamadores criem uma classe WebSocket do lado do cliente que usará o WSPC para fins de enquadramento.</span><span class="sxs-lookup"><span data-stu-id="f65b0-141">Allows callers to create a client side WebSocket class which will use the WSPC for framing purposes.</span></span></summary>
        <returns><span data-ttu-id="f65b0-142">Retorna <see cref="T:System.Net.WebSockets.WebSocket" />.</span><span class="sxs-lookup"><span data-stu-id="f65b0-142">Returns <see cref="T:System.Net.WebSockets.WebSocket" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CreateFromStream">
      <MemberSignature Language="C#" Value="public static System.Net.WebSockets.WebSocket CreateFromStream (System.IO.Stream stream, bool isServer, string subProtocol, TimeSpan keepAliveInterval);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.WebSockets.WebSocket CreateFromStream(class System.IO.Stream stream, bool isServer, string subProtocol, valuetype System.TimeSpan keepAliveInterval) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.WebSocket.CreateFromStream(System.IO.Stream,System.Boolean,System.String,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::WebSockets::WebSocket ^ CreateFromStream(System::IO::Stream ^ stream, bool isServer, System::String ^ subProtocol, TimeSpan keepAliveInterval);" />
      <MemberSignature Language="F#" Value="static member CreateFromStream : System.IO.Stream * bool * string * TimeSpan -&gt; System.Net.WebSockets.WebSocket" Usage="System.Net.WebSockets.WebSocket.CreateFromStream (stream, isServer, subProtocol, keepAliveInterval)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebSockets.WebSocket</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="isServer" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="subProtocol" Type="System.String" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="keepAliveInterval" Type="System.TimeSpan" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="stream">To be added.</param>
        <param name="isServer">To be added.</param>
        <param name="subProtocol">To be added.</param>
        <param name="keepAliveInterval">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateServerBuffer">
      <MemberSignature Language="C#" Value="public static ArraySegment&lt;byte&gt; CreateServerBuffer (int receiveBufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ArraySegment`1&lt;unsigned int8&gt; CreateServerBuffer(int32 receiveBufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.WebSocket.CreateServerBuffer(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateServerBuffer (receiveBufferSize As Integer) As ArraySegment(Of Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ArraySegment&lt;System::Byte&gt; CreateServerBuffer(int receiveBufferSize);" />
      <MemberSignature Language="F#" Value="static member CreateServerBuffer : int -&gt; ArraySegment&lt;byte&gt;" Usage="System.Net.WebSockets.WebSocket.CreateServerBuffer receiveBufferSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ArraySegment&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="receiveBufferSize" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="receiveBufferSize"><span data-ttu-id="f65b0-143">O tamanho, em bytes, do buffer desejado.</span><span class="sxs-lookup"><span data-stu-id="f65b0-143">The size, in bytes, of the desired buffer.</span></span></param>
        <summary><span data-ttu-id="f65b0-144">Cria um buffer de servidor WebSocket.</span><span class="sxs-lookup"><span data-stu-id="f65b0-144">Creates a WebSocket server buffer.</span></span></summary>
        <returns><span data-ttu-id="f65b0-145">Retorna <see cref="T:System.ArraySegment`1" />.</span><span class="sxs-lookup"><span data-stu-id="f65b0-145">Returns <see cref="T:System.ArraySegment`1" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultKeepAliveInterval">
      <MemberSignature Language="C#" Value="public static TimeSpan DefaultKeepAliveInterval { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.TimeSpan DefaultKeepAliveInterval" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebSockets.WebSocket.DefaultKeepAliveInterval" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultKeepAliveInterval As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property TimeSpan DefaultKeepAliveInterval { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultKeepAliveInterval : TimeSpan" Usage="System.Net.WebSockets.WebSocket.DefaultKeepAliveInterval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f65b0-146">Obtém o intervalo keep-alive padrão do protocolo WebSocket.</span><span class="sxs-lookup"><span data-stu-id="f65b0-146">Gets the default WebSocket protocol keep-alive interval.</span></span></summary>
        <value><span data-ttu-id="f65b0-147">Intervalo keep-alive do protocolo de WebSocket padrão.</span><span class="sxs-lookup"><span data-stu-id="f65b0-147">The default WebSocket protocol keep-alive interval.</span></span> <span data-ttu-id="f65b0-148">O valor típico para esse intervalo é de 30 segundos (conforme definido pelo sistema operacional ou a plataforma .NET).</span><span class="sxs-lookup"><span data-stu-id="f65b0-148">The typical value for this interval is 30 seconds (as defined by the OS or the .NET platform).</span></span> <span data-ttu-id="f65b0-149">Ele é usado para inicializar <see cref="P:System.Net.WebSockets.ClientWebSocketOptions.KeepAliveInterval" /> valor.</span><span class="sxs-lookup"><span data-stu-id="f65b0-149">It is used to initialize <see cref="P:System.Net.WebSockets.ClientWebSocketOptions.KeepAliveInterval" /> value.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public abstract void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.WebSocket.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit" Usage="webSocket.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f65b0-150">Usado para limpar os recursos não gerenciados para as implementações auto-hospedadas e de ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="f65b0-150">Used to clean up unmanaged resources for ASP.NET and self-hosted implementations.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsApplicationTargeting45">
      <MemberSignature Language="C#" Value="public static bool IsApplicationTargeting45 ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsApplicationTargeting45() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.WebSocket.IsApplicationTargeting45" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsApplicationTargeting45 () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsApplicationTargeting45();" />
      <MemberSignature Language="F#" Value="static member IsApplicationTargeting45 : unit -&gt; bool" Usage="System.Net.WebSockets.WebSocket.IsApplicationTargeting45 " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1">
          <AttributeName>System.Obsolete("This is just a temporary workaround until the CLR provides a public (but hidden) API to check  whether an application is targeting 4.5. So don't take a dependency on it.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f65b0-151">Retorna um valor que indica se a instância do WebSocket está direcionada para [!INCLUDE[net_v45](~/includes/net-v45-md.md)].</span><span class="sxs-lookup"><span data-stu-id="f65b0-151">Returns a value that indicates if the WebSocket instance is targeting [!INCLUDE[net_v45](~/includes/net-v45-md.md)].</span></span></summary>
        <returns><span data-ttu-id="f65b0-152"><see langword="true" /> se o <see cref="T:System.Net.WebSockets.WebSocket" /> for direcionado para [!INCLUDE[net_v45](~/includes/net-v45-md.md)]; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f65b0-152"><see langword="true" /> if the <see cref="T:System.Net.WebSockets.WebSocket" /> is targeting [!INCLUDE[net_v45](~/includes/net-v45-md.md)]; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStateTerminal">
      <MemberSignature Language="C#" Value="protected static bool IsStateTerminal (System.Net.WebSockets.WebSocketState state);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig bool IsStateTerminal(valuetype System.Net.WebSockets.WebSocketState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.WebSocket.IsStateTerminal(System.Net.WebSockets.WebSocketState)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function IsStateTerminal (state As WebSocketState) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static bool IsStateTerminal(System::Net::WebSockets::WebSocketState state);" />
      <MemberSignature Language="F#" Value="static member IsStateTerminal : System.Net.WebSockets.WebSocketState -&gt; bool" Usage="System.Net.WebSockets.WebSocket.IsStateTerminal state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Net.WebSockets.WebSocketState" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="state"><span data-ttu-id="f65b0-153">O estado atual do WebSocket.</span><span class="sxs-lookup"><span data-stu-id="f65b0-153">The current state of the WebSocket.</span></span></param>
        <summary><span data-ttu-id="f65b0-154">Retorna um valor que indica se o estado da instância do WebSocket é fechado ou anulado.</span><span class="sxs-lookup"><span data-stu-id="f65b0-154">Returns a value that indicates if the state of the WebSocket instance is closed or aborted.</span></span></summary>
        <returns><span data-ttu-id="f65b0-155"><see langword="true" /> se o <see cref="T:System.Net.WebSockets.WebSocket" /> for fechado ou anulado; caso contrário <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f65b0-155"><see langword="true" /> if the <see cref="T:System.Net.WebSockets.WebSocket" /> is closed or aborted; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task&lt;System.Net.WebSockets.WebSocketReceiveResult&gt; ReceiveAsync (ArraySegment&lt;byte&gt; buffer, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Net.WebSockets.WebSocketReceiveResult&gt; ReceiveAsync(valuetype System.ArraySegment`1&lt;unsigned int8&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.WebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Threading::Tasks::Task&lt;System::Net::WebSockets::WebSocketReceiveResult ^&gt; ^ ReceiveAsync(ArraySegment&lt;System::Byte&gt; buffer, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="abstract member ReceiveAsync : ArraySegment&lt;byte&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.WebSockets.WebSocketReceiveResult&gt;" Usage="webSocket.ReceiveAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.WebSockets.WebSocketReceiveResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="f65b0-156">Referencia o buffer de aplicativo que é o local de armazenamento dos dados recebidos.</span><span class="sxs-lookup"><span data-stu-id="f65b0-156">References the application buffer that is the storage location for the received data.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="f65b0-157">Propaga a notificação de que as operações devem ser canceladas.</span><span class="sxs-lookup"><span data-stu-id="f65b0-157">Propagates the notification that operations should be canceled.</span></span></param>
        <summary><span data-ttu-id="f65b0-158">Recebe dados da conexão <see cref="T:System.Net.WebSockets.WebSocket" /> de forma assíncrona.</span><span class="sxs-lookup"><span data-stu-id="f65b0-158">Receives data from the <see cref="T:System.Net.WebSockets.WebSocket" /> connection asynchronously.</span></span></summary>
        <returns><span data-ttu-id="f65b0-159">O objeto de tarefa que representa a operação assíncrona.</span><span class="sxs-lookup"><span data-stu-id="f65b0-159">The task object representing the asynchronous operation.</span></span> <span data-ttu-id="f65b0-160">A propriedade <see cref="P:System.Threading.Tasks.Task`1.Result" /> no objeto da tarefa retorna uma matriz de <see cref="T:System.Byte" /> que contém os dados recebidos.</span><span class="sxs-lookup"><span data-stu-id="f65b0-160">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns a <see cref="T:System.Byte" /> array containing the received data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f65b0-161">Essa operação não será bloqueada.</span><span class="sxs-lookup"><span data-stu-id="f65b0-161">This operation will not block.</span></span> <span data-ttu-id="f65b0-162">Retornado <xref:System.Threading.Tasks.Task%601> objeto será concluído depois que os dados foram recebidos no <xref:System.Net.WebSockets.WebSocket>.</span><span class="sxs-lookup"><span data-stu-id="f65b0-162">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the data has been received on the <xref:System.Net.WebSockets.WebSocket>.</span></span>  
  
 <span data-ttu-id="f65b0-163">Exatamente um envio e outra recebem tem suporte em cada <xref:System.Net.WebSockets.WebSocket> objeto em paralelo.</span><span class="sxs-lookup"><span data-stu-id="f65b0-163">Exactly one send and one receive is supported on each <xref:System.Net.WebSockets.WebSocket> object in parallel.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.ValueTask&lt;System.Net.WebSockets.ValueWebSocketReceiveResult&gt; ReceiveAsync (Memory&lt;byte&gt; buffer, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;valuetype System.Net.WebSockets.ValueWebSocketReceiveResult&gt; ReceiveAsync(valuetype System.Memory`1&lt;unsigned int8&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.WebSocket.ReceiveAsync(System.Memory{System.Byte},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::ValueTask&lt;System::Net::WebSockets::ValueWebSocketReceiveResult&gt; ReceiveAsync(Memory&lt;System::Byte&gt; buffer, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="abstract member ReceiveAsync : Memory&lt;byte&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;System.Net.WebSockets.ValueWebSocketReceiveResult&gt;&#xA;override this.ReceiveAsync : Memory&lt;byte&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;System.Net.WebSockets.ValueWebSocketReceiveResult&gt;" Usage="webSocket.ReceiveAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Net.WebSockets.ValueWebSocketReceiveResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Memory&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterPrefixes">
      <MemberSignature Language="C#" Value="public static void RegisterPrefixes ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterPrefixes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.WebSocket.RegisterPrefixes" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterPrefixes ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterPrefixes();" />
      <MemberSignature Language="F#" Value="static member RegisterPrefixes : unit -&gt; unit" Usage="System.Net.WebSockets.WebSocket.RegisterPrefixes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f65b0-164">Permite que os chamadores registrem os prefixos para solicitações de WebSocket (ws e wss).</span><span class="sxs-lookup"><span data-stu-id="f65b0-164">Allows callers to register prefixes for WebSocket requests (ws and wss).</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task SendAsync (ArraySegment&lt;byte&gt; buffer, System.Net.WebSockets.WebSocketMessageType messageType, bool endOfMessage, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SendAsync(valuetype System.ArraySegment`1&lt;unsigned int8&gt; buffer, valuetype System.Net.WebSockets.WebSocketMessageType messageType, bool endOfMessage, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.WebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Threading::Tasks::Task ^ SendAsync(ArraySegment&lt;System::Byte&gt; buffer, System::Net::WebSockets::WebSocketMessageType messageType, bool endOfMessage, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="abstract member SendAsync : ArraySegment&lt;byte&gt; * System.Net.WebSockets.WebSocketMessageType * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="webSocket.SendAsync (buffer, messageType, endOfMessage, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="messageType" Type="System.Net.WebSockets.WebSocketMessageType" />
        <Parameter Name="endOfMessage" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="f65b0-165">O buffer a ser enviado pela conexão.</span><span class="sxs-lookup"><span data-stu-id="f65b0-165">The buffer to be sent over the connection.</span></span></param>
        <param name="messageType"><span data-ttu-id="f65b0-166">Indica se o aplicativo está enviando uma mensagem de texto ou binária.</span><span class="sxs-lookup"><span data-stu-id="f65b0-166">Indicates whether the application is sending a binary or text message.</span></span></param>
        <param name="endOfMessage"><span data-ttu-id="f65b0-167">Indica se os dados no “buffer” são a última parte de uma mensagem.</span><span class="sxs-lookup"><span data-stu-id="f65b0-167">Indicates whether the data in "buffer" is the last part of a message.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="f65b0-168">O token que propaga a notificação de que as operações devem ser canceladas.</span><span class="sxs-lookup"><span data-stu-id="f65b0-168">The token that propagates the notification that operations should be canceled.</span></span></param>
        <summary><span data-ttu-id="f65b0-169">Envia dados pela conexão <see cref="T:System.Net.WebSockets.WebSocket" /> de forma assíncrona.</span><span class="sxs-lookup"><span data-stu-id="f65b0-169">Sends data over the <see cref="T:System.Net.WebSockets.WebSocket" /> connection asynchronously.</span></span></summary>
        <returns><span data-ttu-id="f65b0-170">O objeto de tarefa que representa a operação assíncrona.</span><span class="sxs-lookup"><span data-stu-id="f65b0-170">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f65b0-171">Essa operação não será bloqueada.</span><span class="sxs-lookup"><span data-stu-id="f65b0-171">This operation will not block.</span></span> <span data-ttu-id="f65b0-172">Retornado <xref:System.Threading.Tasks.Task> objeto será concluído depois que os dados foram enviados <xref:System.Net.WebSockets.WebSocket>.</span><span class="sxs-lookup"><span data-stu-id="f65b0-172">The returned <xref:System.Threading.Tasks.Task> object will complete after the data has been sent on the <xref:System.Net.WebSockets.WebSocket>.</span></span>  
  
 <span data-ttu-id="f65b0-173">Exatamente um envio e outra recebem tem suporte em cada <xref:System.Net.WebSockets.WebSocket> objeto em paralelo.</span><span class="sxs-lookup"><span data-stu-id="f65b0-173">Exactly one send and one receive is supported on each <xref:System.Net.WebSockets.WebSocket> object in parallel.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.ValueTask SendAsync (ReadOnlyMemory&lt;byte&gt; buffer, System.Net.WebSockets.WebSocketMessageType messageType, bool endOfMessage, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask SendAsync(valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; buffer, valuetype System.Net.WebSockets.WebSocketMessageType messageType, bool endOfMessage, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.WebSocket.SendAsync(System.ReadOnlyMemory{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::ValueTask SendAsync(ReadOnlyMemory&lt;System::Byte&gt; buffer, System::Net::WebSockets::WebSocketMessageType messageType, bool endOfMessage, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="abstract member SendAsync : ReadOnlyMemory&lt;byte&gt; * System.Net.WebSockets.WebSocketMessageType * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&#xA;override this.SendAsync : ReadOnlyMemory&lt;byte&gt; * System.Net.WebSockets.WebSocketMessageType * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask" Usage="webSocket.SendAsync (buffer, messageType, endOfMessage, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="messageType" Type="System.Net.WebSockets.WebSocketMessageType" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="endOfMessage" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="messageType">To be added.</param>
        <param name="endOfMessage">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public abstract System.Net.WebSockets.WebSocketState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.WebSockets.WebSocketState State" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebSockets.WebSocket.State" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property State As WebSocketState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Net::WebSockets::WebSocketState State { System::Net::WebSockets::WebSocketState get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Net.WebSockets.WebSocketState" Usage="System.Net.WebSockets.WebSocket.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebSockets.WebSocketState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f65b0-174">Retorna o estado atual da conexão WebSocket.</span><span class="sxs-lookup"><span data-stu-id="f65b0-174">Returns the current state of the WebSocket connection.</span></span></summary>
        <value><span data-ttu-id="f65b0-175">O estado atual da conexão de WebSocket.</span><span class="sxs-lookup"><span data-stu-id="f65b0-175">The current state of the WebSocket connection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubProtocol">
      <MemberSignature Language="C#" Value="public abstract string SubProtocol { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SubProtocol" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebSockets.WebSocket.SubProtocol" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property SubProtocol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ SubProtocol { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SubProtocol : string" Usage="System.Net.WebSockets.WebSocket.SubProtocol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f65b0-176">Obtém o subprotocolo que foi negociado durante o handshake de abertura.</span><span class="sxs-lookup"><span data-stu-id="f65b0-176">Gets the subprotocol that was negotiated during the opening handshake.</span></span></summary>
        <value><span data-ttu-id="f65b0-177">O subprotocolo que foi negociado durante o handshake de abertura.</span><span class="sxs-lookup"><span data-stu-id="f65b0-177">The subprotocol that was negotiated during the opening handshake.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThrowOnInvalidState">
      <MemberSignature Language="C#" Value="protected static void ThrowOnInvalidState (System.Net.WebSockets.WebSocketState state, params System.Net.WebSockets.WebSocketState[] validStates);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig void ThrowOnInvalidState(valuetype System.Net.WebSockets.WebSocketState state, valuetype System.Net.WebSockets.WebSocketState[] validStates) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.WebSocket.ThrowOnInvalidState(System.Net.WebSockets.WebSocketState,System.Net.WebSockets.WebSocketState[])" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Sub ThrowOnInvalidState (state As WebSocketState, ParamArray validStates As WebSocketState())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static void ThrowOnInvalidState(System::Net::WebSockets::WebSocketState state, ... cli::array &lt;System::Net::WebSockets::WebSocketState&gt; ^ validStates);" />
      <MemberSignature Language="F#" Value="static member ThrowOnInvalidState : System.Net.WebSockets.WebSocketState * System.Net.WebSockets.WebSocketState[] -&gt; unit" Usage="System.Net.WebSockets.WebSocket.ThrowOnInvalidState (state, validStates)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Net.WebSockets.WebSocketState" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="validStates" Type="System.Net.WebSockets.WebSocketState[]" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="state"><span data-ttu-id="f65b0-178">O estado atual do WebSocket a ser testado em relação à lista de estados válidos.</span><span class="sxs-lookup"><span data-stu-id="f65b0-178">The current state of the WebSocket to be tested against the list of valid states.</span></span></param>
        <param name="validStates"><span data-ttu-id="f65b0-179">Lista de estados de conexão válido.</span><span class="sxs-lookup"><span data-stu-id="f65b0-179">List of valid connection states.</span></span></param>
        <summary><span data-ttu-id="f65b0-180">Verifica se a conexão está em um estado esperado.</span><span class="sxs-lookup"><span data-stu-id="f65b0-180">Verifies that the connection is in an expected state.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>