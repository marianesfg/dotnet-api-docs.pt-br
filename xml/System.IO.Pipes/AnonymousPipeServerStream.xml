<Type Name="AnonymousPipeServerStream" FullName="System.IO.Pipes.AnonymousPipeServerStream">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a11f9c4614b3f2d3580b179e5cec945327f46a80" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36561375" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class AnonymousPipeServerStream : System.IO.Pipes.PipeStream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AnonymousPipeServerStream extends System.IO.Pipes.PipeStream" />
  <TypeSignature Language="DocId" Value="T:System.IO.Pipes.AnonymousPipeServerStream" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AnonymousPipeServerStream&#xA;Inherits PipeStream" />
  <TypeSignature Language="C++ CLI" Value="public ref class AnonymousPipeServerStream sealed : System::IO::Pipes::PipeStream" />
  <TypeSignature Language="F#" Value="type AnonymousPipeServerStream = class&#xA;    inherit PipeStream" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Pipes</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.Pipes.PipeStream</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="8a253-101">Expõe um fluxo em torno de um pipe anônimo, que dá suporte a operações de leitura e gravação síncronas e assíncronas.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8a253-101">Exposes a stream around an anonymous pipe, which supports both synchronous and asynchronous read and write operations.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a253-102">Pipes anônimos ajudam a fornecer segurança e proteger a comunicação entre processos entre pai e filho processos.</span><span class="sxs-lookup"><span data-stu-id="8a253-102">Anonymous pipes help provide safe and secure interprocess communication between child and parent processes.</span></span> <span data-ttu-id="8a253-103">O <xref:System.IO.Pipes.AnonymousPipeServerStream> classe permite que um processo pai enviar ou receber informações de um processo filho.</span><span class="sxs-lookup"><span data-stu-id="8a253-103">The <xref:System.IO.Pipes.AnonymousPipeServerStream> class enables a parent process to send or receive information from a child process.</span></span>  
  
 <span data-ttu-id="8a253-104">Pipes anônimos são pipes sem nome, unidirecionais que transferem dados entre processos pai e filho.</span><span class="sxs-lookup"><span data-stu-id="8a253-104">Anonymous pipes are unnamed, one-way pipes that typically transfer data between parent and child processes.</span></span> <span data-ttu-id="8a253-105">Pipes anônimos sempre são locais; eles não podem ser usados em uma rede.</span><span class="sxs-lookup"><span data-stu-id="8a253-105">Anonymous pipes are always local; they cannot be used over a network.</span></span> <span data-ttu-id="8a253-106">Um <xref:System.IO.Pipes.PipeDirection> valor <xref:System.IO.Pipes.PipeDirection.InOut> não é suportado porque pipes anônimos são definidos para serem unidirecional.</span><span class="sxs-lookup"><span data-stu-id="8a253-106">A <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.InOut> is not supported because anonymous pipes are defined to be one-way.</span></span>  
  
 <span data-ttu-id="8a253-107">Pipes anônimos não suportam <xref:System.IO.Pipes.PipeTransmissionMode.Message> modos de leitura.</span><span class="sxs-lookup"><span data-stu-id="8a253-107">Anonymous pipes do not support <xref:System.IO.Pipes.PipeTransmissionMode.Message> read modes.</span></span>  
  
 <span data-ttu-id="8a253-108">Lado do cliente de um pipe anônimo deve ser criado de um identificador de pipe fornecido pelo lado do servidor chamando o <xref:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString%2A> método.</span><span class="sxs-lookup"><span data-stu-id="8a253-108">The client side of an anonymous pipe must be created from a pipe handle provided by the server side by calling the <xref:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString%2A> method.</span></span> <span data-ttu-id="8a253-109">A cadeia de caracteres é então passada como um parâmetro ao criar o processo do cliente.</span><span class="sxs-lookup"><span data-stu-id="8a253-109">The string is then passed as a parameter when creating the client process.</span></span> <span data-ttu-id="8a253-110">No processo de cliente, em seguida, ele é passado para o <xref:System.IO.Pipes.AnonymousPipeClientStream> construtor como o `pipeHandleAsString` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="8a253-110">From the client process, it is then passed to the <xref:System.IO.Pipes.AnonymousPipeClientStream> constructor as the `pipeHandleAsString` parameter.</span></span>  
  
 <span data-ttu-id="8a253-111">O <xref:System.IO.Pipes.AnonymousPipeServerStream> objeto deve descartar o identificador de cliente usando o <xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A> método para ser notificado quando o cliente será encerrado.</span><span class="sxs-lookup"><span data-stu-id="8a253-111">The <xref:System.IO.Pipes.AnonymousPipeServerStream> object must dispose the client handle using the <xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A> method in order to be notified when the client exits.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a253-112">Para [!INCLUDE[winxppro](~/includes/winxppro-md.md)] e [!INCLUDE[win2kserver](~/includes/win2kserver-md.md)], um máximo de 10 pipes pode se conectar simultaneamente pela rede.</span><span class="sxs-lookup"><span data-stu-id="8a253-112">For [!INCLUDE[winxppro](~/includes/winxppro-md.md)] and [!INCLUDE[win2kserver](~/includes/win2kserver-md.md)], a maximum of 10 pipes can simultaneously connect over the network.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a253-113">O exemplo a seguir demonstra uma maneira de enviar uma cadeia de caracteres de um processo pai para um processo filho usando pipes anônimos.</span><span class="sxs-lookup"><span data-stu-id="8a253-113">The following example demonstrates a way to send a string from a parent process to a child process using anonymous pipes.</span></span> <span data-ttu-id="8a253-114">Este exemplo cria um objeto <xref:System.IO.Pipes.AnonymousPipeServerStream> em um processo pai com um valor <xref:System.IO.Pipes.PipeDirection> de <xref:System.IO.Pipes.PipeDirection.Out>.</span><span class="sxs-lookup"><span data-stu-id="8a253-114">This example creates an <xref:System.IO.Pipes.AnonymousPipeServerStream> object in a parent process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.Out>.</span></span> <span data-ttu-id="8a253-115">Ele também cria um <xref:System.IO.Pipes.AnonymousPipeClientStream> objeto em um processo filho com um <xref:System.IO.Pipes.PipeDirection> valor <xref:System.IO.Pipes.PipeDirection.In>.</span><span class="sxs-lookup"><span data-stu-id="8a253-115">It also creates an <xref:System.IO.Pipes.AnonymousPipeClientStream> object in a child process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.In>.</span></span> <span data-ttu-id="8a253-116">Em seguida, o processo pai envia uma cadeia de caracteres fornecida pelo usuário ao processo filho.</span><span class="sxs-lookup"><span data-stu-id="8a253-116">The parent process then sends a user-supplied string to the child process.</span></span> <span data-ttu-id="8a253-117">A cadeia de caracteres é exibida no console.</span><span class="sxs-lookup"><span data-stu-id="8a253-117">The string is displayed to the console.</span></span>  
  
 <span data-ttu-id="8a253-118">Este exemplo é para o processo de servidor, que usa o <xref:System.IO.Pipes.AnonymousPipeServerStream> classe.</span><span class="sxs-lookup"><span data-stu-id="8a253-118">This example is for the server process, which uses the <xref:System.IO.Pipes.AnonymousPipeServerStream> class.</span></span> <span data-ttu-id="8a253-119">Para o exemplo de código inteiro, incluindo o código para o cliente de pipe e o servidor, consulte [como: Use o Pipes anônimos para comunicação Interprocess Local](~/docs/standard/io/how-to-use-anonymous-pipes-for-local-interprocess-communication.md).</span><span class="sxs-lookup"><span data-stu-id="8a253-119">For the entire code example, including the code for both the pipe client and server, see [How to: Use Anonymous Pipes for Local Interprocess Communication](~/docs/standard/io/how-to-use-anonymous-pipes-for-local-interprocess-communication.md).</span></span>  
  
 [!code-cpp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cpp/program.cpp#01)]
 [!code-csharp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/vb/program.vb#01)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8a253-120">Inicializa uma nova instância da classe <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-120">Initializes a new instance of the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnonymousPipeServerStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnonymousPipeServerStream();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8a253-121">Inicializa uma nova instância da classe <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-121">Initializes a new instance of the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a253-122">Para <xref:System.IO.Pipes.AnonymousPipeServerStream> construtores sem um <xref:System.IO.Pipes.PipeDirection> parâmetro, a direção padrão é <xref:System.IO.Pipes.PipeDirection.Out>.</span><span class="sxs-lookup"><span data-stu-id="8a253-122">For <xref:System.IO.Pipes.AnonymousPipeServerStream> constructors without a <xref:System.IO.Pipes.PipeDirection> parameter, the default direction is <xref:System.IO.Pipes.PipeDirection.Out>.</span></span> <span data-ttu-id="8a253-123">Um <xref:System.IO.Pipes.PipeDirection> valor <xref:System.IO.Pipes.PipeDirection.InOut> não é suportado porque pipes anônimos são definidos para serem unidirecional.</span><span class="sxs-lookup"><span data-stu-id="8a253-123">A <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.InOut> is not supported because anonymous pipes are defined to be one-way.</span></span>  
  
 <span data-ttu-id="8a253-124">Este construtor cria um <xref:System.IO.Pipes.AnonymousPipeServerStream> objeto que tem o tamanho do buffer padrão, nenhuma segurança de pipe, e um <xref:System.IO.HandleInheritability> valor <xref:System.IO.HandleInheritability.None>.</span><span class="sxs-lookup"><span data-stu-id="8a253-124">This constructor creates an <xref:System.IO.Pipes.AnonymousPipeServerStream> object that has the default buffer size, no pipe security, and a <xref:System.IO.HandleInheritability> value of <xref:System.IO.HandleInheritability.None>.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">
          <span data-ttu-id="8a253-125">para confiança total do chamador imediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-125">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="8a253-126">Este membro não pode ser usado pelo código parcialmente confiável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-126">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnonymousPipeServerStream (System.IO.Pipes.PipeDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.IO.Pipes.PipeDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (direction As PipeDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnonymousPipeServerStream(System::IO::Pipes::PipeDirection direction);" />
      <MemberSignature Language="F#" Value="new System.IO.Pipes.AnonymousPipeServerStream : System.IO.Pipes.PipeDirection -&gt; System.IO.Pipes.AnonymousPipeServerStream" Usage="new System.IO.Pipes.AnonymousPipeServerStream direction" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="8a253-127">Um dos valores de enumeração que determinam a direção do pipe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-127">One of the enumeration values that determines the direction of the pipe.</span>
          </span>
          <span data-ttu-id="8a253-128">Pipes anônimos só podem estar em uma direção, então <c>direction</c> não pode ser definida como <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-128">Anonymous pipes can only be in one direction, so <c>direction</c> cannot be set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a253-129">Inicializa uma nova instância da classe <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> com a direção do pipe especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-129">Initializes a new instance of the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> class with the specified pipe direction.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a253-130">Um <xref:System.IO.Pipes.PipeDirection> valor <xref:System.IO.Pipes.PipeDirection.InOut> não é suportado porque pipes anônimos são definidos para serem unidirecional.</span><span class="sxs-lookup"><span data-stu-id="8a253-130">A <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.InOut> is not supported because anonymous pipes are defined to be one-way.</span></span>  
  
 <span data-ttu-id="8a253-131">Este construtor cria um <xref:System.IO.Pipes.AnonymousPipeServerStream> objeto que tem o tamanho do buffer padrão, nenhuma segurança de pipe, e um <xref:System.IO.HandleInheritability> valor <xref:System.IO.HandleInheritability.None>.</span><span class="sxs-lookup"><span data-stu-id="8a253-131">This constructor creates an <xref:System.IO.Pipes.AnonymousPipeServerStream> object that has the default buffer size, no pipe security, and a <xref:System.IO.HandleInheritability> value of <xref:System.IO.HandleInheritability.None>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8a253-132">
            <paramref name="direction" /> é definido como <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-132">
              <paramref name="direction" /> is set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">
          <span data-ttu-id="8a253-133">para confiança total do chamador imediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-133">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="8a253-134">Este membro não pode ser usado pelo código parcialmente confiável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-134">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnonymousPipeServerStream (System.IO.Pipes.PipeDirection direction, System.IO.HandleInheritability inheritability);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.IO.Pipes.PipeDirection direction, valuetype System.IO.HandleInheritability inheritability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (direction As PipeDirection, inheritability As HandleInheritability)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnonymousPipeServerStream(System::IO::Pipes::PipeDirection direction, System::IO::HandleInheritability inheritability);" />
      <MemberSignature Language="F#" Value="new System.IO.Pipes.AnonymousPipeServerStream : System.IO.Pipes.PipeDirection * System.IO.HandleInheritability -&gt; System.IO.Pipes.AnonymousPipeServerStream" Usage="new System.IO.Pipes.AnonymousPipeServerStream (direction, inheritability)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="8a253-135">Um dos valores de enumeração que determinam a direção do pipe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-135">One of the enumeration values that determines the direction of the pipe.</span>
          </span>
          <span data-ttu-id="8a253-136">Pipes anônimos só podem estar em uma direção, então <c>direction</c> não pode ser definida como <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-136">Anonymous pipes can only be in one direction, so <c>direction</c> cannot be set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span>
          </span>
        </param>
        <param name="inheritability">
          <span data-ttu-id="8a253-137">Um dos valores de enumeração que determina se o identificador subjacente pode ser herdado por processos filhos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-137">One of the enumeration values that determines whether the underlying handle can be inherited by child processes.</span>
          </span>
          <span data-ttu-id="8a253-138">Deve ser definido como <see cref="F:System.IO.HandleInheritability.None" /> ou <see cref="F:System.IO.HandleInheritability.Inheritable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-138">Must be set to either <see cref="F:System.IO.HandleInheritability.None" /> or <see cref="F:System.IO.HandleInheritability.Inheritable" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a253-139">Inicializa uma nova instância da classe <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> com a direção do pipe e o modo de herdabilidade especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-139">Initializes a new instance of the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> class with the specified pipe direction and inheritability mode.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a253-140">Um <xref:System.IO.Pipes.PipeDirection> valor <xref:System.IO.Pipes.PipeDirection.InOut> não é suportado porque pipes anônimos são definidos para serem unidirecional.</span><span class="sxs-lookup"><span data-stu-id="8a253-140">A <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.InOut> is not supported because anonymous pipes are defined to be one-way.</span></span>  
  
 <span data-ttu-id="8a253-141">Este construtor cria um <xref:System.IO.Pipes.AnonymousPipeServerStream> objeto que tem o tamanho do buffer padrão e nenhuma segurança de pipe.</span><span class="sxs-lookup"><span data-stu-id="8a253-141">This constructor creates an <xref:System.IO.Pipes.AnonymousPipeServerStream> object that has the default buffer size and no pipe security.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a253-142">O exemplo a seguir demonstra um método para enviar uma cadeia de caracteres de um processo pai para um processo filho usando pipes anônimos.</span><span class="sxs-lookup"><span data-stu-id="8a253-142">The following example demonstrates a method to send a string from a parent process to a child process using anonymous pipes.</span></span> <span data-ttu-id="8a253-143">Neste exemplo, um <xref:System.IO.Pipes.AnonymousPipeServerStream> objeto é criado em um processo pai com um <xref:System.IO.Pipes.PipeDirection> valor <xref:System.IO.Pipes.PipeDirection.Out>.</span><span class="sxs-lookup"><span data-stu-id="8a253-143">In this example, an <xref:System.IO.Pipes.AnonymousPipeServerStream> object is created in a parent process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.Out>.</span></span>  
  
 [!code-cpp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cpp/program.cpp#01)]
 [!code-csharp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/vb/program.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8a253-144">
            <paramref name="inheritability" /> não está definido como <see cref="F:System.IO.HandleInheritability.None" /> nem como <see cref="F:System.IO.HandleInheritability.Inheritable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-144">
              <paramref name="inheritability" /> is not set to either <see cref="F:System.IO.HandleInheritability.None" /> or <see cref="F:System.IO.HandleInheritability.Inheritable" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8a253-145">
            <paramref name="direction" /> é definido como <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-145">
              <paramref name="direction" /> is set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">
          <span data-ttu-id="8a253-146">para confiança total do chamador imediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-146">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="8a253-147">Este membro não pode ser usado pelo código parcialmente confiável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-147">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnonymousPipeServerStream (System.IO.Pipes.PipeDirection direction, Microsoft.Win32.SafeHandles.SafePipeHandle serverSafePipeHandle, Microsoft.Win32.SafeHandles.SafePipeHandle clientSafePipeHandle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.IO.Pipes.PipeDirection direction, class Microsoft.Win32.SafeHandles.SafePipeHandle serverSafePipeHandle, class Microsoft.Win32.SafeHandles.SafePipeHandle clientSafePipeHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle,Microsoft.Win32.SafeHandles.SafePipeHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (direction As PipeDirection, serverSafePipeHandle As SafePipeHandle, clientSafePipeHandle As SafePipeHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnonymousPipeServerStream(System::IO::Pipes::PipeDirection direction, Microsoft::Win32::SafeHandles::SafePipeHandle ^ serverSafePipeHandle, Microsoft::Win32::SafeHandles::SafePipeHandle ^ clientSafePipeHandle);" />
      <MemberSignature Language="F#" Value="new System.IO.Pipes.AnonymousPipeServerStream : System.IO.Pipes.PipeDirection * Microsoft.Win32.SafeHandles.SafePipeHandle * Microsoft.Win32.SafeHandles.SafePipeHandle -&gt; System.IO.Pipes.AnonymousPipeServerStream" Usage="new System.IO.Pipes.AnonymousPipeServerStream (direction, serverSafePipeHandle, clientSafePipeHandle)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
        <Parameter Name="serverSafePipeHandle" Type="Microsoft.Win32.SafeHandles.SafePipeHandle" />
        <Parameter Name="clientSafePipeHandle" Type="Microsoft.Win32.SafeHandles.SafePipeHandle" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="8a253-148">Um dos valores de enumeração que determinam a direção do pipe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-148">One of the enumeration values that determines the direction of the pipe.</span>
          </span>
          <span data-ttu-id="8a253-149">Pipes anônimos só podem estar em uma direção, então <c>direction</c> não pode ser definida como <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-149">Anonymous pipes can only be in one direction, so <c>direction</c> cannot be set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span>
          </span>
        </param>
        <param name="serverSafePipeHandle">
          <span data-ttu-id="8a253-150">Um identificador seguro para o arquivo que este objeto <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> encapsulará.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-150">A safe handle for the pipe that this <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> object will encapsulate.</span>
          </span>
        </param>
        <param name="clientSafePipeHandle">
          <span data-ttu-id="8a253-151">Um identificador seguro para o objeto <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-151">A safe handle for the <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a253-152">Inicializa uma nova instância da classe <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> dos identificadores de pipe especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-152">Initializes a new instance of the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> class from the specified pipe handles.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a253-153">Um <xref:System.IO.Pipes.PipeDirection> valor <xref:System.IO.Pipes.PipeDirection.InOut> não é suportado porque pipes anônimos são definidos para serem unidirecional.</span><span class="sxs-lookup"><span data-stu-id="8a253-153">A <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.InOut> is not supported because anonymous pipes are defined to be one-way.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8a253-154">
            <paramref name="serverSafePipeHandle" /> ou <paramref name="clientSafePipeHandle" /> é um identificador inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-154">
              <paramref name="serverSafePipeHandle" /> or <paramref name="clientSafePipeHandle" /> is an invalid handle.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a253-155">
            <paramref name="serverSafePipeHandle" /> ou <paramref name="clientSafePipeHandle" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-155">
              <paramref name="serverSafePipeHandle" /> or <paramref name="clientSafePipeHandle" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8a253-156">
            <paramref name="direction" /> é definido como <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-156">
              <paramref name="direction" /> is set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="8a253-157">Ocorreu um erro de E/S, como um erro de disco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-157">An I/O error, such as a disk error, has occurred.</span>
          </span>
          <span data-ttu-id="8a253-158">-ou-  O fluxo foi fechado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-158">-or-  The stream has been closed.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">
          <span data-ttu-id="8a253-159">para confiança total do chamador imediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-159">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="8a253-160">Este membro não pode ser usado pelo código parcialmente confiável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-160">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnonymousPipeServerStream (System.IO.Pipes.PipeDirection direction, System.IO.HandleInheritability inheritability, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.IO.Pipes.PipeDirection direction, valuetype System.IO.HandleInheritability inheritability, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (direction As PipeDirection, inheritability As HandleInheritability, bufferSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnonymousPipeServerStream(System::IO::Pipes::PipeDirection direction, System::IO::HandleInheritability inheritability, int bufferSize);" />
      <MemberSignature Language="F#" Value="new System.IO.Pipes.AnonymousPipeServerStream : System.IO.Pipes.PipeDirection * System.IO.HandleInheritability * int -&gt; System.IO.Pipes.AnonymousPipeServerStream" Usage="new System.IO.Pipes.AnonymousPipeServerStream (direction, inheritability, bufferSize)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" />
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="8a253-161">Um dos valores de enumeração que determinam a direção do pipe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-161">One of the enumeration values that determines the direction of the pipe.</span>
          </span>
          <span data-ttu-id="8a253-162">Pipes anônimos só podem estar em uma direção, então <c>direction</c> não pode ser definida como <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-162">Anonymous pipes can only be in one direction, so <c>direction</c> cannot be set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span>
          </span>
        </param>
        <param name="inheritability">
          <span data-ttu-id="8a253-163">Um dos valores de enumeração que determina se o identificador subjacente pode ser herdado por processos filhos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-163">One of the enumeration values that determines whether the underlying handle can be inherited by child processes.</span>
          </span>
          <span data-ttu-id="8a253-164">Deve ser definido como <see cref="F:System.IO.HandleInheritability.None" /> ou <see cref="F:System.IO.HandleInheritability.Inheritable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-164">Must be set to either <see cref="F:System.IO.HandleInheritability.None" /> or <see cref="F:System.IO.HandleInheritability.Inheritable" />.</span>
          </span>
        </param>
        <param name="bufferSize">
          <span data-ttu-id="8a253-165">O tamanho do buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-165">The size of the buffer.</span>
          </span>
          <span data-ttu-id="8a253-166">Esse valor deve ser maior ou igual a 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-166">This value must be greater than or equal to 0.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a253-167">Inicializa uma nova instância da classe <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> com a direção do pipe, o modo de herdabilidade e o tamanho do buffer especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-167">Initializes a new instance of the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> class with the specified pipe direction, inheritability mode, and buffer size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a253-168">Um <xref:System.IO.Pipes.PipeDirection> valor <xref:System.IO.Pipes.PipeDirection.InOut> não é suportado porque pipes anônimos são definidos para serem unidirecional.</span><span class="sxs-lookup"><span data-stu-id="8a253-168">A <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.InOut> is not supported because anonymous pipes are defined to be one-way.</span></span>  
  
 <span data-ttu-id="8a253-169">Este construtor cria um <xref:System.IO.Pipes.AnonymousPipeServerStream> objeto sem segurança de pipe.</span><span class="sxs-lookup"><span data-stu-id="8a253-169">This constructor creates an <xref:System.IO.Pipes.AnonymousPipeServerStream> object without pipe security.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8a253-170">
            <paramref name="inheritability" /> não está definido como <see cref="F:System.IO.HandleInheritability.None" /> nem como <see cref="F:System.IO.HandleInheritability.Inheritable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-170">
              <paramref name="inheritability" /> is not set to either <see cref="F:System.IO.HandleInheritability.None" /> or <see cref="F:System.IO.HandleInheritability.Inheritable" />.</span>
          </span>
          <span data-ttu-id="8a253-171">-ou-  <paramref name="bufferSize" /> é menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-171">-or-  <paramref name="bufferSize" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8a253-172">
            <paramref name="direction" /> é definido como <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-172">
              <paramref name="direction" /> is set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">
          <span data-ttu-id="8a253-173">para confiança total do chamador imediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-173">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="8a253-174">Este membro não pode ser usado pelo código parcialmente confiável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-174">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnonymousPipeServerStream (System.IO.Pipes.PipeDirection direction, System.IO.HandleInheritability inheritability, int bufferSize, System.IO.Pipes.PipeSecurity pipeSecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.IO.Pipes.PipeDirection direction, valuetype System.IO.HandleInheritability inheritability, int32 bufferSize, class System.IO.Pipes.PipeSecurity pipeSecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32,System.IO.Pipes.PipeSecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnonymousPipeServerStream(System::IO::Pipes::PipeDirection direction, System::IO::HandleInheritability inheritability, int bufferSize, System::IO::Pipes::PipeSecurity ^ pipeSecurity);" />
      <MemberSignature Language="F#" Value="new System.IO.Pipes.AnonymousPipeServerStream : System.IO.Pipes.PipeDirection * System.IO.HandleInheritability * int * System.IO.Pipes.PipeSecurity -&gt; System.IO.Pipes.AnonymousPipeServerStream" Usage="new System.IO.Pipes.AnonymousPipeServerStream (direction, inheritability, bufferSize, pipeSecurity)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" />
        <Parameter Name="bufferSize" Type="System.Int32" />
        <Parameter Name="pipeSecurity" Type="System.IO.Pipes.PipeSecurity" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="8a253-175">Um dos valores de enumeração que determinam a direção do pipe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-175">One of the enumeration values that determines the direction of the pipe.</span>
          </span>
          <span data-ttu-id="8a253-176">Pipes anônimos só podem estar em uma direção, então <c>direction</c> não pode ser definida como <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-176">Anonymous pipes can only be in one direction, so <c>direction</c> cannot be set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span>
          </span>
        </param>
        <param name="inheritability">
          <span data-ttu-id="8a253-177">Um dos valores de enumeração que determina se o identificador subjacente pode ser herdado por processos filhos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-177">One of the enumeration values that determines whether the underlying handle can be inherited by child processes.</span>
          </span>
        </param>
        <param name="bufferSize">
          <span data-ttu-id="8a253-178">O tamanho do buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-178">The size of the buffer.</span>
          </span>
          <span data-ttu-id="8a253-179">Esse valor deve ser maior ou igual a 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-179">This value must be greater than or equal to 0.</span>
          </span>
        </param>
        <param name="pipeSecurity">
          <span data-ttu-id="8a253-180">Um objeto que determina o controle de acesso e a segurança de auditoria para o pipe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-180">An object that determines the access control and audit security for the pipe.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a253-181">Inicializa uma nova instância da classe <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> com a direção do pipe, o modo de herdabilidade, o tamanho do buffer e a segurança do pipe especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-181">Initializes a new instance of the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> class with the specified pipe direction, inheritability mode, buffer size, and pipe security.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a253-182">Um <xref:System.IO.Pipes.PipeDirection> valor <xref:System.IO.Pipes.PipeDirection.InOut> não é suportado porque pipes anônimos são definidos para serem unidirecional.</span><span class="sxs-lookup"><span data-stu-id="8a253-182">A <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.InOut> is not supported because anonymous pipes are defined to be one-way.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8a253-183">
            <paramref name="inheritability" /> não está definido como <see cref="F:System.IO.HandleInheritability.None" /> nem como <see cref="F:System.IO.HandleInheritability.Inheritable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-183">
              <paramref name="inheritability" /> is not set to either <see cref="F:System.IO.HandleInheritability.None" /> or <see cref="F:System.IO.HandleInheritability.Inheritable" />.</span>
          </span>
          <span data-ttu-id="8a253-184">-ou-  <paramref name="bufferSize" /> é menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-184">-or-  <paramref name="bufferSize" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8a253-185">
            <paramref name="direction" /> é definido como <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-185">
              <paramref name="direction" /> is set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">
          <span data-ttu-id="8a253-186">para confiança total do chamador imediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-186">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="8a253-187">Este membro não pode ser usado pelo código parcialmente confiável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-187">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ClientSafePipeHandle">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.SafeHandles.SafePipeHandle ClientSafePipeHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.SafeHandles.SafePipeHandle ClientSafePipeHandle" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.AnonymousPipeServerStream.ClientSafePipeHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientSafePipeHandle As SafePipeHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::SafeHandles::SafePipeHandle ^ ClientSafePipeHandle { Microsoft::Win32::SafeHandles::SafePipeHandle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientSafePipeHandle : Microsoft.Win32.SafeHandles.SafePipeHandle" Usage="System.IO.Pipes.AnonymousPipeServerStream.ClientSafePipeHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SafeHandles.SafePipeHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8a253-188">Obtém o identificador seguro para o objeto <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> que está atualmente conectado ao objeto <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-188">Gets the safe handle for the <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> object that is currently connected to the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8a253-189">Um identificador para o <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> objeto que está conectado no momento para o <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-189">A handle for the <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> object that is currently connected to the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a253-190">O <xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A> método deve ser chamado depois que um identificador de cliente foi passado para um processo do cliente.</span><span class="sxs-lookup"><span data-stu-id="8a253-190">The <xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A> method should be called after a client handle has been passed to a client process.</span></span> <span data-ttu-id="8a253-191">Se esse método não for chamado, o <xref:System.IO.Pipes.AnonymousPipeServerStream> objeto não receberá aviso quando o cliente descarta seu <xref:System.IO.Pipes.PipeStream> objeto.</span><span class="sxs-lookup"><span data-stu-id="8a253-191">If this method is not called, the <xref:System.IO.Pipes.AnonymousPipeServerStream> object will not receive notice when the client disposes of its <xref:System.IO.Pipes.PipeStream> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeServerStream.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="anonymousPipeServerStream.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisposeLocalCopyOfClientHandle">
      <MemberSignature Language="C#" Value="public void DisposeLocalCopyOfClientHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DisposeLocalCopyOfClientHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle" />
      <MemberSignature Language="VB.NET" Value="Public Sub DisposeLocalCopyOfClientHandle ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DisposeLocalCopyOfClientHandle();" />
      <MemberSignature Language="F#" Value="member this.DisposeLocalCopyOfClientHandle : unit -&gt; unit" Usage="anonymousPipeServerStream.DisposeLocalCopyOfClientHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8a253-192">Fecha a cópia local do identificador de objeto <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-192">Closes the local copy of the <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> object's handle.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a253-193">O <xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A> método deve ser chamado depois que o identificador de cliente foi passado para o cliente.</span><span class="sxs-lookup"><span data-stu-id="8a253-193">The <xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A> method should be called after the client handle has been passed to the client.</span></span> <span data-ttu-id="8a253-194">Se esse método não for chamado, o <xref:System.IO.Pipes.AnonymousPipeServerStream> objeto não receberá aviso quando o cliente descarta seu <xref:System.IO.Pipes.PipeStream> objeto.</span><span class="sxs-lookup"><span data-stu-id="8a253-194">If this method is not called, the <xref:System.IO.Pipes.AnonymousPipeServerStream> object will not receive notice when the client disposes of its <xref:System.IO.Pipes.PipeStream> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a253-195">O exemplo a seguir demonstra uma maneira de enviar uma cadeia de caracteres de um processo pai para um processo filho usando pipes anônimos.</span><span class="sxs-lookup"><span data-stu-id="8a253-195">The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes.</span></span> <span data-ttu-id="8a253-196">Neste exemplo, um <xref:System.IO.Pipes.AnonymousPipeServerStream> objeto é criado em um processo pai com um <xref:System.IO.Pipes.PipeDirection> valor <xref:System.IO.Pipes.PipeDirection.Out>.</span><span class="sxs-lookup"><span data-stu-id="8a253-196">In this example, an <xref:System.IO.Pipes.AnonymousPipeServerStream> object is created in a parent process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.Out>.</span></span>  
  
 [!code-cpp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cpp/program.cpp#01)]
 [!code-csharp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/vb/program.vb#01)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~AnonymousPipeServerStream ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeServerStream.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!AnonymousPipeServerStream ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="anonymousPipeServerStream.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8a253-197">Libera recursos não gerenciados e executa outras operações de limpeza antes que a instância <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> seja recuperada pela coleta de lixo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-197">Releases unmanaged resources and performs other cleanup operations before the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> instance is reclaimed by garbage collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClientHandleAsString">
      <MemberSignature Language="C#" Value="public string GetClientHandleAsString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetClientHandleAsString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString" />
      <MemberSignature Language="VB.NET" Value="Public Function GetClientHandleAsString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetClientHandleAsString();" />
      <MemberSignature Language="F#" Value="member this.GetClientHandleAsString : unit -&gt; string" Usage="anonymousPipeServerStream.GetClientHandleAsString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8a253-198">Obtém o identificador do objeto <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> conectado como uma cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-198">Gets the connected <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> object's handle as a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a253-199">Uma cadeia de caracteres que representa o identificador do objeto <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> conectado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-199">A string that represents the connected <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> object's handle.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a253-200">O <xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A> método deve ser chamado depois que um identificador de cliente foi passado para um processo do cliente.</span><span class="sxs-lookup"><span data-stu-id="8a253-200">The <xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A> method should be called after a client handle has been passed to a client process.</span></span> <span data-ttu-id="8a253-201">Se esse método não for chamado, o <xref:System.IO.Pipes.AnonymousPipeServerStream> objeto não receberá aviso quando o cliente descarta seu <xref:System.IO.Pipes.PipeStream> objeto.</span><span class="sxs-lookup"><span data-stu-id="8a253-201">If this method is not called, the <xref:System.IO.Pipes.AnonymousPipeServerStream> object will not receive notice when the client disposes of its <xref:System.IO.Pipes.PipeStream> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a253-202">O exemplo a seguir demonstra uma maneira de enviar uma cadeia de caracteres de um processo pai para um processo filho usando pipes anônimos.</span><span class="sxs-lookup"><span data-stu-id="8a253-202">The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes.</span></span> <span data-ttu-id="8a253-203">Neste exemplo, um <xref:System.IO.Pipes.AnonymousPipeServerStream> objeto é criado em um processo pai com um <xref:System.IO.Pipes.PipeDirection> valor <xref:System.IO.Pipes.PipeDirection.Out>.</span><span class="sxs-lookup"><span data-stu-id="8a253-203">In this example, an <xref:System.IO.Pipes.AnonymousPipeServerStream> object is created in a parent process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.Out>.</span></span>  
  
 [!code-cpp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cpp/program.cpp#01)]
 [!code-csharp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/vb/program.vb#01)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadMode">
      <MemberSignature Language="C#" Value="public override System.IO.Pipes.PipeTransmissionMode ReadMode { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Pipes.PipeTransmissionMode ReadMode" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.AnonymousPipeServerStream.ReadMode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ReadMode As PipeTransmissionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::IO::Pipes::PipeTransmissionMode ReadMode {  void set(System::IO::Pipes::PipeTransmissionMode value); };" />
      <MemberSignature Language="F#" Value="member this.ReadMode : System.IO.Pipes.PipeTransmissionMode" Usage="System.IO.Pipes.AnonymousPipeServerStream.ReadMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Pipes.PipeTransmissionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8a253-204">Define o modo de leitura para o objeto <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-204">Sets the reading mode for the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> object.</span>
          </span>
          <span data-ttu-id="8a253-205">Para pipes anônimos, o modo de transmissão deve ser <see cref="F:System.IO.Pipes.PipeTransmissionMode.Byte" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-205">For anonymous pipes, transmission mode must be <see cref="F:System.IO.Pipes.PipeTransmissionMode.Byte" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8a253-206">O modo de leitura para o <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-206">The reading mode for the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a253-207">Pipes anônimos não suportam <xref:System.IO.Pipes.PipeTransmissionMode.Message> o modo de leitura.</span><span class="sxs-lookup"><span data-stu-id="8a253-207">Anonymous pipes do not support <xref:System.IO.Pipes.PipeTransmissionMode.Message> read mode.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a253-208">O exemplo a seguir demonstra uma maneira de enviar uma cadeia de caracteres de um processo pai para um processo filho usando pipes anônimos.</span><span class="sxs-lookup"><span data-stu-id="8a253-208">The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes.</span></span> <span data-ttu-id="8a253-209">Neste exemplo, o <xref:System.NotSupportedException> é detectado quando o <xref:System.IO.Pipes.AnonymousPipeServerStream.ReadMode%2A> está definida como <xref:System.IO.Pipes.PipeTransmissionMode.Message>.</span><span class="sxs-lookup"><span data-stu-id="8a253-209">In this example, the <xref:System.NotSupportedException> is caught when the <xref:System.IO.Pipes.AnonymousPipeServerStream.ReadMode%2A> property is set to <xref:System.IO.Pipes.PipeTransmissionMode.Message>.</span></span>  
  
 [!code-cpp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cpp/program.cpp#01)]
 [!code-csharp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/vb/program.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8a253-210">O modo de transmissão não é válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-210">The transmission mode is not valid.</span>
          </span>
          <span data-ttu-id="8a253-211">Para pipes anônimos, apenas <see cref="F:System.IO.Pipes.PipeTransmissionMode.Byte" /> tem suporte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-211">For anonymous pipes, only <see cref="F:System.IO.Pipes.PipeTransmissionMode.Byte" /> is supported.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8a253-212">A propriedade é definida como <see cref="F:System.IO.Pipes.PipeTransmissionMode.Message" />, para a qual não há suporte em pipes anônimos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-212">The property is set to <see cref="F:System.IO.Pipes.PipeTransmissionMode.Message" />, which is not supported for anonymous pipes.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="8a253-213">A conexão está interrompida ou ocorreu outro erro de E/S.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-213">The connection is broken or another I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8a253-214">O pipe está fechado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-214">The pipe is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TransmissionMode">
      <MemberSignature Language="C#" Value="public override System.IO.Pipes.PipeTransmissionMode TransmissionMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Pipes.PipeTransmissionMode TransmissionMode" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property TransmissionMode As PipeTransmissionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::IO::Pipes::PipeTransmissionMode TransmissionMode { System::IO::Pipes::PipeTransmissionMode get(); };" />
      <MemberSignature Language="F#" Value="member this.TransmissionMode : System.IO.Pipes.PipeTransmissionMode" Usage="System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Pipes.PipeTransmissionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8a253-215">Obtém o modo de transmissão de pipe para o qual o pipe atual dá suporte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-215">Gets the pipe transmission mode that is supported by the current pipe.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8a253-216">O <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> que tem suporte o pipe atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a253-216">The <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> that is supported by the current pipe.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a253-217">Pipes anônimos não suportam <xref:System.IO.Pipes.PipeTransmissionMode.Message> o modo de leitura.</span><span class="sxs-lookup"><span data-stu-id="8a253-217">Anonymous pipes do not support <xref:System.IO.Pipes.PipeTransmissionMode.Message> read mode.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a253-218">O exemplo a seguir demonstra uma maneira de enviar uma cadeia de caracteres de um processo pai para um processo filho usando pipes anônimos.</span><span class="sxs-lookup"><span data-stu-id="8a253-218">The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes.</span></span> <span data-ttu-id="8a253-219">Neste exemplo, um <xref:System.IO.Pipes.AnonymousPipeServerStream> objeto é criado em um processo pai e o <xref:System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode%2A> propriedade é exibida no console.</span><span class="sxs-lookup"><span data-stu-id="8a253-219">In this example, an <xref:System.IO.Pipes.AnonymousPipeServerStream> object is created in a parent process and the <xref:System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode%2A> property is displayed to the console.</span></span>  
  
 [!code-cpp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cpp/program.cpp#01)]
 [!code-csharp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/vb/program.vb#01)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>