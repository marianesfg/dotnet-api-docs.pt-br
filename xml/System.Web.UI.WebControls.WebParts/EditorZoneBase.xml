<Type Name="EditorZoneBase" FullName="System.Web.UI.WebControls.WebParts.EditorZoneBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6bd98977df69ed8d87296afae2ea493e4b45f45a" /><Meta Name="ms.sourcegitcommit" Value="2982b8c4cce02c2542285fcaf172f7544d6b80bc" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="04/09/2019" /><Meta Name="ms.locfileid" Value="59355430" /></Metadata><TypeSignature Language="C#" Value="public abstract class EditorZoneBase : System.Web.UI.WebControls.WebParts.ToolZone" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit EditorZoneBase extends System.Web.UI.WebControls.WebParts.ToolZone" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EditorZoneBase&#xA;Inherits ToolZone" />
  <TypeSignature Language="C++ CLI" Value="public ref class EditorZoneBase abstract : System::Web::UI::WebControls::WebParts::ToolZone" />
  <TypeSignature Language="F#" Value="type EditorZoneBase = class&#xA;    inherit ToolZone" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.ToolZone</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Serve como a classe base para todos os controles de zona que atuam como contêineres para controles <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> classe é uma classe de zona especializada que herda a <xref:System.Web.UI.WebControls.WebParts.ToolZone> de classe e fornece um conjunto básico de comportamentos para zonas derivadas que contêm <xref:System.Web.UI.WebControls.WebParts.EditorPart> controles. Há vários outros tipos de <xref:System.Web.UI.WebControls.WebParts.ToolZone> classes; para obter mais informações, consulte o tópico de visão geral para o <xref:System.Web.UI.WebControls.WebParts.ToolZone> classe. Como outras regiões de ferramenta, <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> zonas não são visíveis quando uma página está no modo de navegação normal; elas são visíveis apenas quando uma página está em modo de exibição de edição. Também, como as outras zonas de ferramenta, <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> zonas só podem conter o tipo especial de controles que foram projetados para conter (nesse caso, <xref:System.Web.UI.WebControls.WebParts.EditorPart> controles).  
  
 O <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> zonas fornecem uma interface do usuário especial para os controles de edição que eles contêm. Muitos desses elementos de interface do usuário são comuns a todas as zonas no conjunto de controles de Web Parts. Para obter uma discussão detalhada sobre os elementos de interface do usuário comuns em zonas de Web Parts, consulte o tópico de visão geral da classe para o <xref:System.Web.UI.WebControls.WebParts.WebZone> classe.  
  
 Porque o <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> classe é abstrata, você não pode usá-lo diretamente em uma página da Web. Em vez disso, você deve usar um controle que herda o <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> de classe e implementar seu comportamento. Você pode usar a zona derivada que é fornecida no conjunto de controles de Web Parts, os <xref:System.Web.UI.WebControls.WebParts.EditorZone> controle, ou você pode derivar seu próprio custom <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> controle.  
  
 O <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> classe fornece uma interface de usuário (IU) para conter controles especiais que permitem aos usuários finais editar as propriedades, o layout, a aparência e outros atributos da <xref:System.Web.UI.WebControls.WebParts.WebPart> controles. Algumas propriedades que se aplicam a interface do usuário consultem verbos, tais como o <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.ApplyVerb%2A>, <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CancelVerb%2A>, e <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OKVerb%2A> propriedades. Verbos são ações comuns realizadas por usuários em uma página e são representados na interface do usuário por botões, links, itens de menu ou outros elementos. Por exemplo, quando os usuários editar propriedades em um controle, eles podem clicar um verbo aplicar para salvar as alterações.  
  
 Várias outras propriedades afetam o texto que é exibido em vários pontos a interface do usuário de edição. Isso inclui o <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EmptyZoneText%2A>, <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.ErrorText%2A>, <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.HeaderText%2A>, e <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.InstructionText%2A> propriedades.  
  
 Duas propriedades importantes fornecem referências para controles relacionados. O <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A> propriedade é uma coleção do <xref:System.Web.UI.WebControls.WebParts.EditorPart> controles contidos na zona. O <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.WebPartToEdit%2A> propriedade é uma referência de objeto para um controle contido em um <xref:System.Web.UI.WebControls.WebParts.WebPartZone>– que pode ser um <xref:System.Web.UI.WebControls.WebParts.WebPart> controle ou qualquer outro ASP.NET controle de servidor, controle de usuário ou um controle personalizado que está sendo editada.  
  
 Por fim, o <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorPartChrome%2A> propriedade faz referência a uma instância de um <xref:System.Web.UI.WebControls.WebParts.EditorPartChrome> objeto que está associado com a zona e que contém as características de estilo dos elementos periféricos de interface do usuário (conhecidos como o chrome) como os estilos de título e a borda para <xref:System.Web.UI.WebControls.WebParts.EditorPart> controles na zona.  
  
 Um número de métodos do <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> classe são especializadas para lidar com a edição de outros controles. O <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.Close%2A> método altera a página do modo de exibição de edição para um modo de exibição de navegação normal. O <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorPartChrome%2A> método é para criar o cromado (elementos periféricos da interface do usuário, como uma borda, verbos, ícones e um título) que envolve cada <xref:System.Web.UI.WebControls.WebParts.EditorPart> controle na zona. O <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts%2A> método é um método abstrato; as classes derivadas substituem-la para criar instâncias de todos os <xref:System.Web.UI.WebControls.WebParts.EditorPart> controles contidos na zona. O <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.InvalidateEditorParts%2A> método pode ser chamado por uma classe derivada, se a coleção de <xref:System.Web.UI.WebControls.WebParts.EditorPart> as alterações de zona por algum motivo programático, que sinaliza o controle de Web Parts definido para recriar e atualizar a coleção de controles <xref:System.Web.UI.WebControls.WebParts.EditorPart> controles. O <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnDisplayModeChanged%2A> método é usado para definir a coleção de <xref:System.Web.UI.WebControls.WebParts.EditorPart> controla a `null` quando as alterações de modo de exibição do modo de edição de volta para o modo de procura. Por fim, o <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnSelectedWebPartChanged%2A> método é usado para manipular o evento quando um <xref:System.Web.UI.WebControls.WebParts.WebPart> controle é entrar ou sair do modo de edição. Por exemplo, esse método é um local conveniente para sincronizar os valores de propriedade de um <xref:System.Web.UI.WebControls.WebParts.WebPart> controle com os valores editáveis associado ao <xref:System.Web.UI.WebControls.WebParts.EditorPart> controles.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra vários declarativa e usa programático do <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> classe. Como a classe é abstrata, os exemplos de código usam derivado <xref:System.Web.UI.WebControls.WebParts.EditorZone> que é fornecido com o conjunto de controles de Web Parts, que demonstra as propriedades e métodos que ele herda da classe a <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> classe.  
  
 O exemplo de código tem quatro partes:  
  
-   Um controle de usuário que permite que você altere os modos de exibição na página da Web.  
  
-   Uma página da Web que contém um <xref:System.Web.UI.WebControls.WebParts.EditorZone> controle.  
  
-   Um personalizado <xref:System.Web.UI.WebControls.WebParts.EditorZone> classe que demonstra alguns do <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> membros de classe.  
  
-   Uma descrição de como o exemplo funciona em um navegador.  
  
 O código-fonte para o controle de usuário vem de outro tópico. Para este exemplo de código funcione, você precisará obter o arquivo. ascx para o controle de usuário do [passo a passo: Alterando modos de exibição em uma página de Web Parts](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0) tópico e coloque o arquivo na mesma pasta que a página. aspx neste exemplo de código.  
  
 A segunda parte do exemplo de código é uma página da Web que contém uma referência declarativa para um <xref:System.Web.UI.WebControls.WebParts.EditorZone> controle. Próximo à parte superior da página é um `Register` diretiva para o controle de usuário. A marca de controle de usuário é declarada na página com um `<uc1:DisplayModeMenu>` elemento. Observe que abaixo de `<asp:WebPartZone>` elemento é um `<asp:EditorZone>` elemento que contém <xref:System.Web.UI.WebControls.WebParts.EditorPart> controla e tem uma variedade de marcas e propriedades definidas para determinar sua aparência e comportamento. A maioria do código na página demonstra os vários usos programáticos do <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> propriedades e métodos.  
  
 [!code-aspx-csharp[WebParts_EditorZoneBase_Common#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/editorzonebasecs.aspx#1)]
 [!code-aspx-vb[WebParts_EditorZoneBase_Common#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/editorzonebasevb.aspx#1)]  
  
 A terceira parte do exemplo de código é um personalizado <xref:System.Web.UI.WebControls.WebParts.EditorZone> classe que mostra como trabalhar com um número das <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> membros de classe. A classe personalizada derivada de <xref:System.Web.UI.WebControls.WebParts.EditorZone> para que ele pode ser usado com um modelo de zona na marcação declarativa da página da Web. Para o exemplo de código seja executado, você deve compilar este código-fonte. Você pode compilá-lo explicitamente e coloque o assembly resultante na pasta Bin do seu site da Web ou cache de assembly global. Como alternativa, você pode colocar o código-fonte na pasta App_Code de seu site, onde ele será compilado dinamicamente no tempo de execução. Este exemplo de código usa a compilação dinâmica; Assim, você observará que o `Register` diretiva na parte superior da página da Web não faz referência a um arquivo de assembly. Para um passo a passo que demonstra os dois métodos de compilação, consulte [passo a passo: Controle de servidor Web de desenvolvimento e o uso de um personalizado](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_EditorZoneBase_Common#12](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/myeditorzone.cs#12)]
 [!code-vb[WebParts_EditorZoneBase_Common#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/myeditorzone.vb#12)]  
  
 Quando você carrega a página em um navegador, você pode selecionar **modo de edição** na lista suspensa para alternar para modo de edição. Clique no menu de verbos (a seta para baixo) na barra de título de um dos dois controles e clique em **editar** para editar o controle. Quando a interface do usuário de edição está visível, você pode ver os efeitos dos vários declarativa e usa programático do <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> membros de classe.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Se você quiser desenvolver uma zona personalizada para a hospedagem <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> controles, você deve determinar se você deseja fornecer suporte de modelo de zona. Um modelo de zona é criado pelos tipos que implementam o <see cref="T:System.Web.UI.ITemplate" /> da interface e é necessário se você quiser permitir que os desenvolvedores de página usando sua zona personalizada para fazer referência <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> controles dentro de sua zona na marcação declarativa de uma página da Web. Se você precisar de suporte de modelo zona, você deve herdar o <see cref="T:System.Web.UI.WebControls.WebParts.EditorZone" /> classe.  
  
Por outro lado, se sua zona personalizada e sua <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> controles serão independentes e serão criados programaticamente sem opções para os desenvolvedores de páginas especificar os controles de forma declarativa em um modelo de zona, em seguida, você pode herdar diretamente do <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> classe. Se você fizer isso, é essencial que você implemente o <see cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts" /> método para que sua zona personalizada funcionem.</para></block>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebZone" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebEditable" />
    <related type="Article" href="https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0">Passo a passo: Alterando modos de exibição em uma página de Web Parts</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Controles ASP.NET Web Parts</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EditorZoneBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EditorZoneBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa a classe para uso por uma instância de classe herdada. Esse construtor só pode ser chamado por uma classe herdada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse construtor, quando invocado por uma classe herdada, passa um <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> do objeto para o <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controle, que permite que a página exibir a interface do usuário (IU) edição.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Controles ASP.NET Web Parts</related>
      </Docs>
    </Member>
    <Member MemberName="ApplyVerb">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartVerb ApplyVerb { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartVerb ApplyVerb" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.ApplyVerb" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ApplyVerb As WebPartVerb" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WebParts::WebPartVerb ^ ApplyVerb { System::Web::UI::WebControls::WebParts::WebPartVerb ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplyVerb : System.Web.UI.WebControls.WebParts.WebPartVerb" Usage="System.Web.UI.WebControls.WebParts.EditorZoneBase.ApplyVerb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerb</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma referência a um objeto <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> que permite que os usuários finais apliquem alterações de edição em um controle no modo de edição.</summary>
        <value>Um <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> que permite que os usuários finais aplicar alterações a um controle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O verbo de aplicar é referenciado pela <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.ApplyVerb%2A> propriedade em um controle derivado do <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> classe. O verbo de aplicar salva as alterações que um usuário final já fez na interface do usuário (IU) edição de edição para um controle de servidor que está sendo editado. Por padrão, o verbo aplicar aparece na interface do usuário como um <xref:System.Web.UI.WebControls.Button> controle. O tipo de botão pode ser uma imagem, um link ou um botão real; Você pode definir isso para todos os botões de verbo em uma zona (não para botões individuais), definindo o herdadas <xref:System.Web.UI.WebControls.WebParts.WebZone.VerbButtonType%2A> propriedade no nível de zona.  
  
 O verbo de aplicar é um controle de nível de zona, o que significa que, embora possa haver várias <xref:System.Web.UI.WebControls.WebParts.EditorPart> controles, cada edição de uma ou mais propriedades para o controle de servidor que está no modo de edição, o verbo aplicar funciona universalmente para aplicar todas as alterações de todos os <xref:System.Web.UI.WebControls.WebParts.EditorPart> controles na zona para o controle de servidor.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como acessar o <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.ApplyVerb%2A> propriedade declarativamente e programaticamente. Para o necessário para executar o exemplo de código completo, consulte a seção exemplo o <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> tópico de visão geral da classe.  
  
 A primeira parte do exemplo de código mostra como acessar o <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.ApplyVerb%2A> propriedade declarativamente em uma página da Web. Este exemplo personaliza o texto para o verbo.  
  
 [!code-aspx-csharp[WebParts_EditorZoneBase_Common#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/editorzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_EditorZoneBase_Common#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/editorzonebasevb.aspx#2)]  
  
 A segunda parte do exemplo mostra como acessar o <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.ApplyVerb%2A> propriedade programaticamente, usando um botão de alternância para habilitar ou desabilitá-lo.  
  
 [!code-csharp[WebParts_EditorZoneBase_Common#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/editorzonebasecs.aspx#4)]
 [!code-vb[WebParts_EditorZoneBase_Common#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/editorzonebasevb.aspx#4)]  
  
 Quando você carrega a página em um navegador, você pode selecionar **modo de edição** no controle de lista suspensa para alternar para modo de edição. Clique no menu de verbos (seta para baixo) na barra de título de um dos controles e clique em **editar** para editar o controle selecionado. Quando o <xref:System.Web.UI.WebControls.WebParts.EditorZone> controle e a edição da interface do usuário são visíveis, você poderá ver o botão que representa o verbo de aplicar e clique em de **ApplyVerb de alternância habilitado** botão Habilitar ou desabilitá-lo.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Controles ASP.NET Web Parts</related>
      </Docs>
    </Member>
    <Member MemberName="CancelVerb">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartVerb CancelVerb { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartVerb CancelVerb" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.CancelVerb" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CancelVerb As WebPartVerb" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WebParts::WebPartVerb ^ CancelVerb { System::Web::UI::WebControls::WebParts::WebPartVerb ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CancelVerb : System.Web.UI.WebControls.WebParts.WebPartVerb" Usage="System.Web.UI.WebControls.WebParts.EditorZoneBase.CancelVerb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerb</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma referência a um objeto <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> que permite que os usuários finais cancelem alterações de edição em um controle no modo de edição.</summary>
        <value>Um <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> que permite que os usuários finais cancelem alterações de um controle de edição.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O verbo ' Cancelar ' é referenciado pela <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CancelVerb%2A> propriedade em um controle derivado do <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> classe. O verbo ' Cancelar ' cancela as alterações de edição que um usuário final tornou-se a um controle de servidor em que a interface do usuário (IU) edição. Por padrão, o verbo de cancelamento é exibido na interface do usuário como um <xref:System.Web.UI.WebControls.Button> controle. O tipo de botão pode ser uma imagem, um link ou um botão real; Você pode definir isso para todos os botões de verbo em uma zona (não para botões individuais), definindo o herdadas <xref:System.Web.UI.WebControls.WebParts.WebZone.VerbButtonType%2A> propriedade no nível de zona.  
  
 Quando um usuário cancela as alterações de edição, nenhuma das alterações no <xref:System.Web.UI.WebControls.WebParts.EditorPart> controles são aplicados ao controle de servidor que está sendo editado. Além disso, a página permanece no modo de exibição de edição, mas o <xref:System.Web.UI.WebControls.WebParts.EditorPart> controles estão ocultos e os <xref:System.Web.UI.WebControls.WebParts.WebPart> controle que estava sendo editada não será mais selecionado. Isso permite que um usuário final selecionar outro <xref:System.Web.UI.WebControls.WebParts.WebPart> controle editar sem precisar alterar os modos de exibição novamente.  
  
 O verbo de cancelamento é um controle de nível de zona, o que significa que, embora possa haver várias <xref:System.Web.UI.WebControls.WebParts.EditorPart> controles, cada edição de uma ou mais propriedades para o controle de servidor que está no modo de edição, o verbo Cancelar funciona universalmente para cancelar todas as alterações de todos os <xref:System.Web.UI.WebControls.WebParts.EditorPart>controles na zona.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como acessar o <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CancelVerb%2A> propriedade declarativamente e programaticamente. Para o necessário para executar o exemplo de código completo, consulte a seção exemplo o <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> tópico de visão geral da classe.  
  
 A primeira parte do exemplo de código mostra como acessar o <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CancelVerb%2A> propriedade declarativamente em uma página da Web. Este exemplo personaliza o texto para o verbo.  
  
 [!code-aspx-csharp[WebParts_EditorZoneBase_Common#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/editorzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_EditorZoneBase_Common#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/editorzonebasevb.aspx#2)]  
  
 A segunda parte do exemplo mostra como acessar o <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CancelVerb%2A> propriedade programaticamente, usando um botão de alternância para habilitar ou desabilitá-lo.  
  
 [!code-csharp[WebParts_EditorZoneBase_Common#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/editorzonebasecs.aspx#5)]
 [!code-vb[WebParts_EditorZoneBase_Common#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/editorzonebasevb.aspx#5)]  
  
 Quando você carrega a página em um navegador, você pode selecionar **modo de edição** no controle de lista suspensa para alternar para modo de edição. Clique no menu de verbos (seta para baixo) na barra de título de um dos controles e clique em **editar** para editar o controle selecionado. Quando o <xref:System.Web.UI.WebControls.WebParts.EditorZone> controle e a edição da interface do usuário são visíveis, você poderá ver o botão que representa o verbo de cancelar e clique em de **CancelVerb de alternância habilitado** botão Habilitar ou desabilitá-lo.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Controles ASP.NET Web Parts</related>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="protected override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.Close" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="editorZoneBase.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Chamado quando um usuário clica em um verbo fechar no cabeçalho de uma zona, esse método encerra o processo de edição de controles <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> e retorna um modo de exibição da página de Web Parts para o modo de navegação.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.Close%2A> método fornece uma implementação para o método base declarados no <xref:System.Web.UI.WebControls.WebParts.ToolZone> classe. A implementação simplesmente chama o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing%2A> método, que realiza as etapas necessárias para finalizar o processo de edição.  
  
 Chamar o <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.Close%2A> método retorna a página para o modo de procura e cancela as alterações de edição feitas a qualquer <xref:System.Web.UI.WebControls.WebParts.WebPart> controles.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Controles ASP.NET Web Parts</related>
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected internal override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub CreateChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void CreateChildControls();" />
      <MemberSignature Language="F#" Value="override this.CreateChildControls : unit -&gt; unit" Usage="editorZoneBase.CreateChildControls " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cria o conjunto de controles filho associados a uma zona <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" />.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Controles ASP.NET Web Parts</related>
      </Docs>
    </Member>
    <Member MemberName="CreateEditorPartChrome">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.WebParts.EditorPartChrome CreateEditorPartChrome ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.EditorPartChrome CreateEditorPartChrome() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorPartChrome" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateEditorPartChrome () As EditorPartChrome" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::WebParts::EditorPartChrome ^ CreateEditorPartChrome();" />
      <MemberSignature Language="F#" Value="abstract member CreateEditorPartChrome : unit -&gt; System.Web.UI.WebControls.WebParts.EditorPartChrome&#xA;override this.CreateEditorPartChrome : unit -&gt; System.Web.UI.WebControls.WebParts.EditorPartChrome" Usage="editorZoneBase.CreateEditorPartChrome " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.EditorPartChrome</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtém uma referência a um novo objeto <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartChrome" /> usado para renderizar os elementos da interface do usuário periférica em torno da zona <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" />.</summary>
        <returns>Um <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartChrome" /> que renderiza os elementos periféricos de interface do usuário para a zona.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorPartChrome%2A> método retorna um novo <xref:System.Web.UI.WebControls.WebParts.EditorPartChrome> objeto. Chrome inclui os seguintes elementos de interface do usuário de periféricos que envolvem cada indivíduo <xref:System.Web.UI.WebControls.WebParts.EditorPart> controle na zona: uma borda, uma barra de título; os itens que aparecem na barra de título, incluindo ícones opcionais, o texto do título e um menu de verbos; e itens que aparecem no a área de rodapé de um controle.  
  
 O <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorPartChrome%2A> usa o método retornado <xref:System.Web.UI.WebControls.WebParts.EditorPartChrome> objeto para criar o cromo em torno de cada <xref:System.Web.UI.WebControls.WebParts.EditorPart> controle.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>O <see cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorPartChrome" /> método pode ser substituído em uma classe derivada para fornecer uma implementação diferente. Por exemplo, você pode criar um personalizado <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartChrome" /> classe para dar a você mais controle sobre o processamento e a aparência da interface do usuário de edição. Se você substituir a <see cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorPartChrome" /> método em uma zona derivada, você pode criar seu personalizado <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartChrome" /> objeto no método substituído.</para></block>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartChrome" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Controles ASP.NET Web Parts</related>
      </Docs>
    </Member>
    <Member MemberName="CreateEditorParts">
      <MemberSignature Language="C#" Value="protected abstract System.Web.UI.WebControls.WebParts.EditorPartCollection CreateEditorParts ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.EditorPartCollection CreateEditorParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CreateEditorParts () As EditorPartCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Web::UI::WebControls::WebParts::EditorPartCollection ^ CreateEditorParts();" />
      <MemberSignature Language="F#" Value="abstract member CreateEditorParts : unit -&gt; System.Web.UI.WebControls.WebParts.EditorPartCollection" Usage="editorZoneBase.CreateEditorParts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.EditorPartCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Fornece uma declaração de método de base que zonas derivadas podem substituir para gerenciar os detalhes da criação de controles de <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> contidos em uma zona.</summary>
        <returns>Um <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> que contém a coleção de controles de <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> associados a zona.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts%2A> método não fornece uma implementação. Ele se destina a ser implementada em uma classe derivada e deve ser usado para criar uma instância da coleção de <xref:System.Web.UI.WebControls.WebParts.EditorPart> controles contidos em uma zona, sempre que a página da Web de hospedagem entra em modo de edição. O <xref:System.Web.UI.WebControls.WebParts.EditorZone.CreateEditorParts%2A?displayProperty=nameWithType> método fornece um exemplo de uma implementação do <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts%2A> método.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.InvalidateEditorParts" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Controles ASP.NET Web Parts</related>
      </Docs>
    </Member>
    <Member MemberName="Display">
      <MemberSignature Language="C#" Value="protected override bool Display { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Display" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.Display" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Display As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool Display { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Display : bool" Usage="System.Web.UI.WebControls.WebParts.EditorZoneBase.Display" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se um controle <see cref="T:System.Web.UI.WebControls.WebParts.ToolZone" /> é exibido no momento.</summary>
        <value><see langword="true" /> Se o <see cref="T:System.Web.UI.WebControls.WebParts.ToolZone" /> está atualmente exibido; caso contrário, <see langword="false" />. O valor padrão é <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ToolZone.Display" />
      </Docs>
    </Member>
    <Member MemberName="EditorPartChrome">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.EditorPartChrome EditorPartChrome { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.EditorPartChrome EditorPartChrome" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorPartChrome" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EditorPartChrome As EditorPartChrome" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::EditorPartChrome ^ EditorPartChrome { System::Web::UI::WebControls::WebParts::EditorPartChrome ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EditorPartChrome : System.Web.UI.WebControls.WebParts.EditorPartChrome" Usage="System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorPartChrome" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.EditorPartChrome</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma referência à instância da classe <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartChrome" /> associada à zona de <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" />.</summary>
        <value>Uma <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartChrome" /> que contém as características de estilo para os elementos cromados dos <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> controles em uma zona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorPartChrome%2A> propriedade fornece uma referência para o <xref:System.Web.UI.WebControls.WebParts.EditorPartChrome> objeto associado a uma zona. Quando o <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorPartChrome%2A> método é chamado, ele cria uma instância das <xref:System.Web.UI.WebControls.WebParts.EditorPartChrome> classe e essa instância é usado para renderizar elementos de interface do usuário (também chamados de cromo) de usuário periférico para todos os <xref:System.Web.UI.WebControls.WebParts.EditorPart> controles na zona.  
  
 Os elementos de cromo de um indivíduo <xref:System.Web.UI.WebControls.WebParts.EditorPart> controle incluir sua borda e outros itens em sua área de cabeçalho, como verbos, ícones e texto do título, bem como sua área de rodapé e seus elementos incluídos.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorPartChrome" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Controles ASP.NET Web Parts</related>
      </Docs>
    </Member>
    <Member MemberName="EditorParts">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.EditorPartCollection EditorParts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.EditorPartCollection EditorParts" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EditorParts As EditorPartCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::EditorPartCollection ^ EditorParts { System::Web::UI::WebControls::WebParts::EditorPartCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EditorParts : System.Web.UI.WebControls.WebParts.EditorPartCollection" Usage="System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.EditorPartCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma coleção de todos os controles <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> contidos em uma zona <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" />.</summary>
        <value>Uma <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> que contém todos os individuais <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> controles em uma zona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A> propriedade fornece uma referência a uma coleção de todos os <xref:System.Web.UI.WebControls.WebParts.EditorPart> controles na zona. Ele faz referência a ambos os <xref:System.Web.UI.WebControls.WebParts.EditorPart> controles fornecidos com o conjunto de controles de Web Parts e qualquer personalizada <xref:System.Web.UI.WebControls.WebParts.EditorPart> controles que são adicionados à zona. Como a coleção é somente leitura, os desenvolvedores que desejam criam personalizados <xref:System.Web.UI.WebControls.WebParts.EditorPart> controles para fins de edição gerais e adicioná-los à coleção devem substituir o <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts%2A> método.  
  
 Se você projetar personalizado <xref:System.Web.UI.WebControls.WebParts.EditorPart> controles para editar um determinado <xref:System.Web.UI.WebControls.WebParts.WebPart> controle, você deve substituir os membros dos <xref:System.Web.UI.WebControls.WebParts.IWebEditable> interface-- o <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> método e o <xref:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject%2A> propriedade-- na <xref:System.Web.UI.WebControls.WebParts.WebPart> controle. O motivo para substituir esses membros é para habilitar sua <xref:System.Web.UI.WebControls.WebParts.WebPart> controle criar personalizado <xref:System.Web.UI.WebControls.WebParts.EditorPart> controla e adicioná-los para o <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A> coleção quando o controle está sendo editado e fornecer os controles de edição com uma referência de objeto para o <xref:System.Web.UI.WebControls.WebParts.WebPart> controle que estão editando. Se você quiser adicionar um personalizado <xref:System.Web.UI.WebControls.WebParts.EditorPart> controle para editar um controle de servidor que não herdam a <xref:System.Web.UI.WebControls.WebParts.WebPart> classe, você deve implementar a <xref:System.Web.UI.WebControls.WebParts.IWebEditable> interface na classe exatamente como você faria para um <xref:System.Web.UI.WebControls.WebParts.WebPart> controle.  
  
> [!NOTE]
>  Observe que quaisquer <xref:System.Web.UI.WebControls.WebParts.EditorPart> que é adicionado à coleção de <xref:System.Web.UI.WebControls.WebParts.EditorPart> controles em uma implementação da <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> método deve ter um valor atribuído à sua propriedade de ID, caso contrário, uma exceção será gerada quando a coleção é atribuída para a <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A> propriedade.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como acessar o <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A> propriedade programaticamente. Para o necessário para executar o exemplo de código completo, consulte a seção exemplo o <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> tópico de visão geral da classe.  
  
 A primeira parte do exemplo de código demonstra que o <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A> propriedade contém referências a todos os <xref:System.Web.UI.WebControls.WebParts.EditorPart> controles que são referenciados de forma declarativa na página da Web.  
  
 [!code-aspx-csharp[WebParts_EditorZoneBase_Common#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/editorzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_EditorZoneBase_Common#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/editorzonebasevb.aspx#2)]  
  
 A segunda parte do exemplo de código por meio de programação acessa o <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A> propriedade e a ID de listas de cada controle em um <xref:System.Web.UI.WebControls.Label> controle.  
  
 [!code-csharp[WebParts_EditorZoneBase_Common#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/editorzonebasecs.aspx#6)]
 [!code-vb[WebParts_EditorZoneBase_Common#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/editorzonebasevb.aspx#6)]  
  
 Quando você carrega a página em um navegador, você pode clicar o **exibição EditorParts coleta** botão para listar as IDs de todos os o <xref:System.Web.UI.WebControls.WebParts.EditorPart> controles referenciada no <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A> propriedade.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Um <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> que está sendo adicionado à coleção não tem um valor atribuído à sua propriedade de ID.</exception>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebEditable" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.GenericWebPart.CreateEditorParts" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Controles ASP.NET Web Parts</related>
      </Docs>
    </Member>
    <Member MemberName="EmptyZoneText">
      <MemberSignature Language="C#" Value="public override string EmptyZoneText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EmptyZoneText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.EmptyZoneText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EmptyZoneText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ EmptyZoneText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EmptyZoneText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.EditorZoneBase.EmptyZoneText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define uma mensagem que aparece quando uma zona não contém nenhum controle.</summary>
        <value>Uma cadeia de caracteres que contém a mensagem que aparece em uma zona vazia. Uma cadeia de caracteres de cultura específica padrão é fornecida pelo .NET Framework.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebZone.EmptyZoneText" />
      </Docs>
    </Member>
    <Member MemberName="ErrorText">
      <MemberSignature Language="C#" Value="public virtual string ErrorText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ErrorText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.ErrorText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ErrorText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ErrorText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ErrorText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.EditorZoneBase.ErrorText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o texto de uma mensagem de erro de nível de zona para exibir na parte superior da interface do usuário de edição.</summary>
        <value>Uma cadeia de caracteres localizada que contém a mensagem de erro.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.ErrorText%2A> propriedade contém o texto da mensagem de erro que pode ser exibido na interface do usuário, se ocorrer um erro enquanto a renderização de controles derivados de <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> classe. A mensagem de erro é exibida na parte superior da zona se ocorrer um erro em qualquer um dos individuais <xref:System.Web.UI.WebControls.WebParts.EditorPart> controles contidos na zona. Além disso, individual <xref:System.Web.UI.WebControls.WebParts.EditorPart> controles podem exibir suas próprias mensagens de erro próximo ao controle que recebe um erro.  
  
 O valor dessa propriedade, quando definido, podem ser salvos automaticamente em um arquivo de recurso usando uma ferramenta de designer. Para obter mais informações, consulte <xref:System.ComponentModel.LocalizableAttribute> e [globalização e localização](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Controles ASP.NET Web Parts</related>
      </Docs>
    </Member>
    <Member MemberName="HeaderText">
      <MemberSignature Language="C#" Value="public override string HeaderText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.HeaderText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property HeaderText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HeaderText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.EditorZoneBase.HeaderText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o texto para a área do cabeçalho de uma zona.</summary>
        <value>Uma cadeia de caracteres que contém o texto do cabeçalho para a zona. O padrão é uma cadeia de caracteres vazia ("").</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebZone.HeaderText" />
      </Docs>
    </Member>
    <Member MemberName="InstructionText">
      <MemberSignature Language="C#" Value="public override string InstructionText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InstructionText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.InstructionText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property InstructionText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InstructionText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InstructionText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.EditorZoneBase.InstructionText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o texto em um controle <see cref="T:System.Web.UI.WebControls.WebParts.ToolZone" /> que fornece orientações para os usuários finais.</summary>
        <value>Uma cadeia de caracteres que contém as instruções para os usuários finais. Um valor padrão apropriado para as zonas de ferramenta específica é fornecido pelo derivado <see cref="T:System.Web.UI.WebControls.WebParts.ToolZone" /> classes.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ToolZone.InstructionText" />
      </Docs>
    </Member>
    <Member MemberName="InvalidateEditorParts">
      <MemberSignature Language="C#" Value="protected void InvalidateEditorParts ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InvalidateEditorParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.InvalidateEditorParts" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InvalidateEditorParts ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InvalidateEditorParts();" />
      <MemberSignature Language="F#" Value="member this.InvalidateEditorParts : unit -&gt; unit" Usage="editorZoneBase.InvalidateEditorParts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Define a coleção de controles <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> associados a uma zona <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> como <see langword="null" />, o que resulta no método <see cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts" /> sendo chamado para recriar a coleção.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.InvalidateEditorParts%2A> método pode ser chamado por classes derivadas, se a lista de <xref:System.Web.UI.WebControls.WebParts.EditorPart> controles associados a um <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> zona foi alterado por alguma razão, e a classe derivada precisa obter uma lista atualizada de <xref:System.Web.UI.WebControls.WebParts.EditorPart> controles. A classe derivada deve chamar <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.InvalidateEditorParts%2A>, que define a coleção atual `null`. Na próxima vez que o <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A> coleção é acessada, o controle de Web Parts definido automaticamente invoca o <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts%2A> método para criar a coleção atualizada.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Controles ASP.NET Web Parts</related>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="editorZoneBase.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">O estado salvo anteriormente.</param>
        <summary>Carrega informações de estado salvas anteriormente para uma zona.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método é usado principalmente pela infraestrutura do .NET Framework e não se destina a ser usado diretamente do seu código. No entanto, os desenvolvedores de controle podem substituir este método para especificar como um controle de servidor personalizado restaura o estado de exibição. Para obter mais informações, consulte [visão geral do gerenciamento de estado ASP.NET](https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)).  
  
 O <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.LoadViewState%2A> método substitui o método base para verificar se a página está sendo carregada porque um verbo Okey, um verbo de cancelar ou um verbo aplicar foi clicado na zona. Nesse caso, o método lida com o estado associado com cada respectivo cenário.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">O tamanho do objeto de <paramref name="savedState" /> não é igual ao tamanho do objeto de estado de exibição atual.</exception>
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Controles ASP.NET Web Parts</related>
      </Docs>
    </Member>
    <Member MemberName="OKVerb">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartVerb OKVerb { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartVerb OKVerb" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.OKVerb" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property OKVerb As WebPartVerb" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WebParts::WebPartVerb ^ OKVerb { System::Web::UI::WebControls::WebParts::WebPartVerb ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OKVerb : System.Web.UI.WebControls.WebParts.WebPartVerb" Usage="System.Web.UI.WebControls.WebParts.EditorZoneBase.OKVerb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerb</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma referência a um objeto <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> que aplica as alterações de edição a um controle no modo de edição e oculta a interface do usuário de edição.</summary>
        <value>Um <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> que aplica as alterações de edição para um controle e oculta a interface do usuário de edição.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O verbo Okey é referenciado pela <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OKVerb%2A> propriedade em um controle derivado do <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> classe. Ele é semelhante para o verbo de aplicar quando um usuário clica nele, ela se aplica a alterações de edição que o usuário tornou-se a um controle de servidor. Além disso, os controles de edição estiverem ocultas, o <xref:System.Web.UI.WebControls.WebParts.WebPart> (que permite que o usuário edite o outro controle) não está selecionado no controle que estava sendo editada, e a página permanece no modo de edição.  
  
 Por padrão, o verbo Okey aparece na interface do usuário como um <xref:System.Web.UI.WebControls.Button> controle. O tipo de botão pode ser uma imagem, um link ou um botão real; Você pode definir isso para todos os botões de verbo em uma zona (não para botões individuais), definindo o herdadas <xref:System.Web.UI.WebControls.WebParts.WebZone.VerbButtonType%2A> propriedade no nível de zona.  
  
 O verbo Okey é um controle de nível de zona, o que significa que, embora possa haver várias <xref:System.Web.UI.WebControls.WebParts.EditorPart> controles, cada edição de uma ou mais propriedades para o controle de servidor que está no modo de edição, o verbo Okey funciona universalmente para aplicar todas as alterações de todos os <xref:System.Web.UI.WebControls.WebParts.EditorPart> controles na zona e para ocultar todos os controles, exceto para a zona em si.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como acessar o <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OKVerb%2A> propriedade declarativamente e programaticamente. Para o necessário para executar o exemplo de código completo, consulte a seção exemplo o <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> tópico de visão geral da classe.  
  
 A primeira parte do exemplo de código mostra como acessar o <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OKVerb%2A> propriedade declarativamente em uma página da Web. Este exemplo personaliza o texto para o verbo.  
  
 [!code-aspx-csharp[WebParts_EditorZoneBase_Common#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/editorzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_EditorZoneBase_Common#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/editorzonebasevb.aspx#2)]  
  
 A segunda parte do exemplo mostra como acessar o <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OKVerb%2A> programaticamente, usando um botão de alternância para habilitar ou desabilitá-lo.  
  
 [!code-csharp[WebParts_EditorZoneBase_Common#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/editorzonebasecs.aspx#7)]
 [!code-vb[WebParts_EditorZoneBase_Common#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/editorzonebasevb.aspx#7)]  
  
 Quando você carrega a página em um navegador, você pode selecionar **modo de edição** no controle de lista suspensa para alternar para modo de edição. Clique no menu de verbos (seta para baixo) na barra de título de um dos controles e clique em **editar** para editar o controle selecionado. Quando o <xref:System.Web.UI.WebControls.WebParts.EditorZone> controle e a edição da interface do usuário são visíveis, você poderá ver o botão que representa o verbo Okey e clique em de **OKVerb de alternância habilitado** botão Habilitar ou desabilitá-lo.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Controles ASP.NET Web Parts</related>
      </Docs>
    </Member>
    <Member MemberName="OnDisplayModeChanged">
      <MemberSignature Language="C#" Value="protected override void OnDisplayModeChanged (object sender, System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDisplayModeChanged(object sender, class System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnDisplayModeChanged(System.Object,System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDisplayModeChanged (sender As Object, e As WebPartDisplayModeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDisplayModeChanged(System::Object ^ sender, System::Web::UI::WebControls::WebParts::WebPartDisplayModeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnDisplayModeChanged : obj * System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs -&gt; unit" Usage="editorZoneBase.OnDisplayModeChanged (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">Um <see cref="T:System.Object" /> que gera o evento <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged" />.</param>
        <param name="e">Um <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs" /> que contém os dados do evento.</param>
        <summary>Gera o evento <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged" /> e destrói todos os <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> e controles filho na zona na preparação para uma página da Web para entrar ou sair do modo de exibição de edição.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnDisplayModeChanged%2A> método fornece uma implementação para o método base no <xref:System.Web.UI.WebControls.WebParts.ToolZone> classe.  
  
 A principal finalidade de <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnDisplayModeChanged%2A> método é preparar uma página da Web para entrar ou sair do modo de exibição de edição. O método destrói todos os controles contidos na zona e, em seguida, chama o método base, o que gera o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged> evento no <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controle.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como substituir o <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnDisplayModeChanged%2A> método em uma classe derivada. Para o necessário para executar o exemplo de código completo, consulte a seção exemplo o <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> tópico de visão geral da classe.  
  
 A zona de editor personalizado deriva o <xref:System.Web.UI.WebControls.WebParts.EditorZone> de classe para que ele pode ser usado com um modelo de zona na marcação declarativa da página da Web. A classe personalizada substitui o <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnDisplayModeChanged%2A> método, configurando a cor do plano de fundo da zona para uma cor especificada e, em seguida, chama o método base, que destrói todos os filhos e <xref:System.Web.UI.WebControls.WebParts.EditorPart> controles em preparação para entrar ou sair de Editar modo de exibição.  
  
 [!code-csharp[WebParts_EditorZoneBase_Common#13](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/myeditorzone.cs#13)]
 [!code-vb[WebParts_EditorZoneBase_Common#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/myeditorzone.vb#13)]  
  
 Quando você carrega a página em um navegador, você pode selecionar **modo de edição** no controle de lista suspensa para alternar para modo de edição. Clique no menu de verbos (seta para baixo) na barra de título de um dos controles e clique em **editar** para editar o controle selecionado. Quando o <xref:System.Web.UI.WebControls.WebParts.EditorZone> controle e edição a interface do usuário (IU) são visíveis, você pode ver que a zona tem a cor de plano de fundo especificada no código.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>O <see cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnDisplayModeChanged(System.Object,System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)" /> método pode ser substituído ou chamado por meio de programação em um controle de zona de editor personalizado que herda a <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> classe ou o <see cref="T:System.Web.UI.WebControls.WebParts.EditorZone" /> classe.</para></block>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Controles ASP.NET Web Parts</related>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="editorZoneBase.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.EventArgs" /> que contém os dados do evento.</param>
        <summary>Gera o evento <see cref="E:System.Web.UI.Control.PreRender" /> e chama o método <see cref="M:System.Web.UI.WebControls.WebParts.EditorPartChrome.PerformPreRender" /> para os elementos cromados dos controles <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Web.UI.Control.PreRender" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Controles ASP.NET Web Parts</related>
      </Docs>
    </Member>
    <Member MemberName="OnSelectedWebPartChanged">
      <MemberSignature Language="C#" Value="protected override void OnSelectedWebPartChanged (object sender, System.Web.UI.WebControls.WebParts.WebPartEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSelectedWebPartChanged(object sender, class System.Web.UI.WebControls.WebParts.WebPartEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnSelectedWebPartChanged(System.Object,System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnSelectedWebPartChanged (sender As Object, e As WebPartEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnSelectedWebPartChanged(System::Object ^ sender, System::Web::UI::WebControls::WebParts::WebPartEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnSelectedWebPartChanged : obj * System.Web.UI.WebControls.WebParts.WebPartEventArgs -&gt; unit" Usage="editorZoneBase.OnSelectedWebPartChanged (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">Um <see cref="T:System.Object" /> que gera o evento <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged" />.</param>
        <param name="e">Um <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs" /> que contém os dados do evento.</param>
        <summary>Gera o evento <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged" /> e define a coleção <see cref="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts" /> como <see langword="null" /> na zona no preparo para um controle <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> entrar ou sair do modo de edição.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnSelectedWebPartChanged%2A> método permite que você fornecer manipulação personalizada para o evento que ocorre quando um indivíduo <xref:System.Web.UI.WebControls.WebParts.WebPart> controle entrar ou sair do modo de edição.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como substituir o <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnSelectedWebPartChanged%2A> método em uma classe derivada. Para o necessário para executar o exemplo de código completo, consulte a seção exemplo o <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> tópico de visão geral da classe.  
  
 A zona de editor personalizado deriva o <xref:System.Web.UI.WebControls.WebParts.EditorZone> de classe para que ele pode ser usado com um modelo de zona na marcação declarativa da página da Web. A classe personalizada substitui o <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnSelectedWebPartChanged%2A> método, definir a cor do plano de fundo do controle específico que está sendo editado e, em seguida, chama o método base.  
  
 [!code-csharp[WebParts_EditorZoneBase_Common#14](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/myeditorzone.cs#14)]
 [!code-vb[WebParts_EditorZoneBase_Common#14](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/myeditorzone.vb#14)]  
  
 Quando você carrega a página em um navegador, você pode selecionar **modo de edição** no controle de lista suspensa para alternar para modo de edição. Clique no menu de verbos (seta para baixo) na barra de título de um dos controles e clique em **editar** para editar o controle selecionado. Quando o <xref:System.Web.UI.WebControls.WebParts.EditorZone> e edição de interface do usuário (IU) são visíveis, você pode ver que o controle selecionado tem a cor de plano de fundo especificada no código.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>O <see cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnSelectedWebPartChanged(System.Object,System.Web.UI.WebControls.WebParts.WebPartEventArgs)" /> método pode ser substituído ou chamado por meio de programação em um controle de zona de editor personalizado que herda a <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> classe ou o <see cref="T:System.Web.UI.WebControls.WebParts.EditorZone" /> classe.</para></block>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Controles ASP.NET Web Parts</related>
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected override void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="override this.RaisePostBackEvent : string -&gt; unit" Usage="editorZoneBase.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Um <see cref="T:System.String" /> que contém o argumento para o evento.</param>
        <summary>Executa as ações associadas a um dos verbos de zona ou aciona um evento que é enviado de volta para o servidor.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.RaisePostBackEvent%2A> método executa as ações respectivas associadas com o verbo Okey, o verbo de cancelar ou o verbo apply, se um desses verbos foi clicado na interface do usuário (IU). Caso contrário, ele gera um evento que envia de volta para o servidor.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Controles ASP.NET Web Parts</related>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="editorZoneBase.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">O <see cref="T:System.Web.UI.HtmlTextWriter" /> que recebe o conteúdo da zona.</param>
        <summary>Renderiza a zona para o objeto de <see cref="T:System.Web.UI.HtmlTextWriter" /> especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.Render%2A> método substitui o método base do <xref:System.Web.UI.WebControls.WebControl> classe para chamar o <xref:System.Web.UI.Page.VerifyRenderingInServerForm%2A> método, que verifica que um formulário HTML é renderizado para o controle de zona em tempo de execução. Depois da verificação, o método, em seguida, chama o método base para renderizar o conteúdo completo da zona.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.Render(System.Web.UI.HtmlTextWriter)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Controles ASP.NET Web Parts</related>
      </Docs>
    </Member>
    <Member MemberName="RenderBody">
      <MemberSignature Language="C#" Value="protected override void RenderBody (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderBody(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderBody(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderBody (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderBody(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderBody : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="editorZoneBase.RenderBody writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">O <see cref="T:System.Web.UI.HtmlTextWriter" /> que recebe o conteúdo do corpo da zona.</param>
        <summary>Substitui o método base para renderizar a área do corpo de uma zona derivada da classe <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderBody%2A> método renderiza a área de corpo de uma <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> zona, o que é a principal área de conteúdo entre as áreas de cabeçalho e rodapé e contém <xref:System.Web.UI.WebControls.WebParts.EditorPart> controles.  
  
 O <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderBody%2A> método substitui o método base em de <xref:System.Web.UI.WebControls.WebParts.WebZone> classe para fornecer renderização especializada que aborda o layout e estilo de atributos que se aplicam apenas ao <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> zonas. O método renderiza uma tabela que contém todo o conteúdo do corpo e dentro dessa tabela, ele define os valores de atributo diferente, dependendo de várias condições, incluindo o modo de exibição atual da página. Se não houver nenhum controle independente, ele processa o valor da <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EmptyZoneText%2A> propriedade.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como substituir o <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderBody%2A> método em uma classe derivada. Para o necessário para executar o exemplo de código completo, consulte a seção exemplo o <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> tópico de visão geral da classe.  
  
 A zona de editor personalizado deriva o <xref:System.Web.UI.WebControls.WebParts.EditorZone> de classe para que ele pode ser usado com um modelo de zona na marcação declarativa da página da Web. A classe personalizada substitui o <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderBody%2A> método, adicionando um HTML `<hr />` elemento para criar uma linha entre o cabeçalho e o corpo da zona. Ele, em seguida, chama o método base para renderizar o restante do conteúdo do corpo da região.  
  
 [!code-csharp[WebParts_EditorZoneBase_Common#15](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/myeditorzone.cs#15)]
 [!code-vb[WebParts_EditorZoneBase_Common#15](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/myeditorzone.vb#15)]  
  
 Quando você carrega a página em um navegador, você pode selecionar **modo de edição** no controle de lista suspensa para alternar para modo de edição. Clique no menu de verbos (seta para baixo) na barra de título de um dos controles e clique em **editar** para editar o controle selecionado. Quando o <xref:System.Web.UI.WebControls.WebParts.EditorZone> controle e edição a interface do usuário (IU) são visíveis, você pode ver a linha criada entre o cabeçalho e o corpo da zona do editor.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.RenderBody(System.Web.UI.HtmlTextWriter)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Controles ASP.NET Web Parts</related>
      </Docs>
    </Member>
    <Member MemberName="RenderVerbs">
      <MemberSignature Language="C#" Value="protected override void RenderVerbs (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderVerbs(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderVerbs(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderVerbs (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderVerbs(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderVerbs : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="editorZoneBase.RenderVerbs writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">O <see cref="T:System.Web.UI.HtmlTextWriter" /> que recebe o conteúdo do corpo da zona.</param>
        <summary>Renderiza os verbos que se aplicam no nível de zona.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderVerbs%2A> método renderiza os verbos cujo aplicar ações para a zona inteira: o verbo Okey, o verbo ' Cancelar ' e o verbo de aplicar. Esses verbos são referenciados na <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OKVerb%2A>, <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CancelVerb%2A>, e <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.ApplyVerb%2A> propriedades.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como substituir o <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderVerbs%2A> método em uma classe derivada. Para o necessário para executar o exemplo de código completo, consulte a seção exemplo o <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> tópico de visão geral da classe.  
  
 A zona de editor personalizado deriva o <xref:System.Web.UI.WebControls.WebParts.EditorZone> de classe para que ele pode ser usado com um modelo de zona na marcação declarativa da página da Web. A classe personalizada substitui o <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderVerbs%2A> método, adicionando algum texto ao valor existente do <xref:System.Web.UI.WebControls.WebParts.WebPartVerb.Text%2A> propriedade para cada um dos verbos de nível de zona. Ele, em seguida, chama o método base para renderizar todos os verbos.  
  
 [!code-csharp[WebParts_EditorZoneBase_Common#16](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/myeditorzone.cs#16)]
 [!code-vb[WebParts_EditorZoneBase_Common#16](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/myeditorzone.vb#16)]  
  
 Quando você carrega a página em um navegador, você pode selecionar **modo de edição** no controle de lista suspensa para alternar para modo de edição. Clique no menu de verbos (seta para baixo) na barra de título de um dos controles e clique em **editar** para editar o controle selecionado. Quando o <xref:System.Web.UI.WebControls.WebParts.EditorZone> controle e edição a interface do usuário (IU) são visíveis, você poderá ver o texto foi alterado nos botões para os verbos de nível de zona na parte inferior da zona.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Controles ASP.NET Web Parts</related>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="editorZoneBase.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Salva as alterações de estado de exibição que ocorreram após o postback da página no servidor.</summary>
        <returns>Retorna o estado de exibição atual do controle da zona. Se nenhum estado de exibição estiver associado à zona, este método retornará <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.SaveViewState%2A> método chama o método base para salvar o estado de exibição e, em seguida, também salva qualquer estado de exibição associado a aplicar, cancelar e Okey verbos.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Controles ASP.NET Web Parts</related>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="editorZoneBase.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Controla as alterações no estado de exibição do controle de uma zona.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.TrackViewState%2A> método primeiro chama o método base para acompanhar o estado de exibição associado a um <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> de zona e, em seguida, começa a rastrear o estado de exibição para a aplicar, cancelar e Okey verbos.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Controles ASP.NET Web Parts</related>
      </Docs>
    </Member>
    <Member MemberName="WebPartToEdit">
      <MemberSignature Language="C#" Value="protected System.Web.UI.WebControls.WebParts.WebPart WebPartToEdit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPart WebPartToEdit" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.WebPartToEdit" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property WebPartToEdit As WebPart" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::WebControls::WebParts::WebPart ^ WebPartToEdit { System::Web::UI::WebControls::WebParts::WebPart ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WebPartToEdit : System.Web.UI.WebControls.WebParts.WebPart" Usage="System.Web.UI.WebControls.WebParts.EditorZoneBase.WebPartToEdit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma referência para o controle <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> que está sendo editado no momento.</summary>
        <value>Um <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> que está atualmente em modo de edição.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Somente um <xref:System.Web.UI.WebControls.WebParts.WebPart> controle pode ser editado por vez e, quando um controle está no modo de edição, o <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.WebPartToEdit%2A> propriedade fornece uma referência a esse controle. O controle referenciado é o mesmo que o controle que é referenciado pelo <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A> propriedade. Portanto, um controle que está sendo editado no momento está sempre selecionado.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Protegido <see cref="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.WebPartToEdit" /> propriedade é acessível apenas em classes derivadas, que podem chamar essa propriedade na base de <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> classe para obter uma referência de objeto para o controle atual que está sendo editado.</para></block>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.EditorPart.WebPartToEdit" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Controles ASP.NET Web Parts</related>
      </Docs>
    </Member>
  </Members>
</Type>