<Type Name="ConnectionPoint" FullName="System.Web.UI.WebControls.WebParts.ConnectionPoint">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cc82eecf035249111ad14ca20f2bcd1b0a8ac90c" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46630351" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ConnectionPoint" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ConnectionPoint extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ConnectionPoint" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConnectionPoint abstract" />
  <TypeSignature Language="F#" Value="type ConnectionPoint = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Funciona como a classe base para definir objetos de ponto de conexão que habilitam o controle do consumidor e do provedor em uma conexão de Web Parts para compartilhar dados.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cada conexão de Web Parts consiste em dois controles de servidor, compartilhamento de dados: um controle é o consumidor e o outro é o provedor. Para uma discussão sobre os componentes essenciais de uma conexão de Web Parts e o próprio objeto de conexão, consulte o <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> visão geral da classe. Cada conexão de Web Parts requer que os pontos de conexão. O provedor e o controle do consumidor devem ter pelo menos um definido <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> objeto (opcionalmente, cada um deles pode ter vários pontos de conexão) que contém os detalhes de como um controle pode se conectar a outro controle e o tipo de dados ele pode compartilhar. Em uma conexão real, o provedor tem seu próprio tipo de objeto de ponto de conexão (derivado da base <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> classe), um <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> instância e o consumidor tem seu próprio objeto, um <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> instância.  
  
 Para criar um ponto de conexão do provedor, os desenvolvedores devem adicionar um método de retorno de chamada para o provedor que retornará uma instância de interface implementada para um consumidor. Eles devem marcar o método de retorno de chamada no código-fonte com um `ConnectionProvider` atributo de código (consulte a <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> classe). Da mesma forma, para criar um ponto de conexão do consumidor, os desenvolvedores devem adicionar um método para o consumidor que recebe uma instância da interface, e eles devem marcar esse método com um `ConnectionConsumer` atributo (consulte a <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> classe).  
  
 Quando os desenvolvedores criam conexões em uma página da Web, eles podem ser criados como conexões estáticas ou dinâmicas. Conexões estáticas são declaradas na marcação de uma página da Web. Quando uma conexão estático é declarado, os desenvolvedores podem designar quais pontos de conexão são usados para o consumidor e provedor atribuindo valores a serem os `ProviderConnectionPointID` e `ConsumerConnectionPointID` atributos dentro de `<asp:webpartconnection>` marca do elemento. Essa abordagem é especialmente útil se houver vários pontos de conexão definidos dentro dos controles de consumidor e provedor, porque ela permite que a conexão de estático identificar quais pontos de conexão a ser usado para a conexão.  
  
 Conexões dinâmicas são criadas programaticamente, pelo código do desenvolvedor ou por usuários por meio da interface do usuário (IU) fornecida pelo <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> controle. Para criar uma conexão no código, os desenvolvedores devem obter uma instância de um <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> objeto chamando o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> método o <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controle. Antes de eles podem chamar esse método, os desenvolvedores devem ter referências para o consumidor e controles de servidor do provedor e seus objetos de ponto de conexão do respectivo. Para obter referências para os pontos de conexão para um provedor e um controle do consumidor, os desenvolvedores primeiro chamar o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A> e <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A> métodos no <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controle. Esses métodos retornam objetos de ponto, que por sua vez, podem ser passados para o método para criar uma conexão da conexão apropriada.  
  
 Quando o provedor e do consumidor conexão objetos point que ambas funcionam com o mesmo tipo de interface, eles são compatíveis e podem formar uma conexão direta para compartilhar dados. Se eles não funcionam com o mesmo tipo de interface, um <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> objeto deve ser usado para converter a instância da interface do provedor em um tipo que o consumidor pode trabalhar com.  
  
 Abstrata <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> classe fornece os detalhes de base de pontos de conexão que são compartilhados por controles de consumidor e provedor. Várias propriedades contêm esses detalhes. O <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> propriedade indica se um ponto de conexão pode participar de mais de uma conexão por vez. Por padrão, pontos de conexão do provedor podem participar de várias conexões e não é possível de pontos de conexão do consumidor. O <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> propriedade indica o tipo do controle de servidor associado a um ponto de conexão. Observe que não só <xref:System.Web.UI.WebControls.WebParts.WebPart> controles podem formar conexões; qualquer controle de servidor, se um controle ASP.NET, um controle personalizado ou um controle de usuário pode ser habilitado para participar de conexões se colocado em um <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zona. O <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> propriedade fornece um nome amigável para o ponto de conexão que pode ser exibido na interface do usuário para ajudar os usuários que estão criando conexões. O <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A> propriedade serve como um identificador de cadeia de caracteres para o próprio objeto de ponto de conexão. O <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> propriedade indica qual tipo de instância da interface entende que o ponto de conexão. Se um ponto de conexão fornecido fornece ou consome uma instância dessa interface é determinado pelo fato de ser um <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> ou um <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> objeto.  
  
 O <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> classe tem um método. O <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A> método retorna um valor booliano que indica se um ponto de conexão é atualmente capaz de participar de conexões.  
  
 O <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> classe também tem um campo público, <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID>. Este campo contém um valor usado para identificar o ponto de conexão padrão em uma conexão.  
  
> [!NOTE]
>  Os atributos para especificar o ponto de conexão métodos têm apenas um parâmetro obrigatório, `displayName`, portanto, é possível criar o atributo de ponto de conexão padrão sem especificar uma ID. Nesses casos, o <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> campo fornece um valor de base a ser usado.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra a criação de uma conexão de Web Parts que inclui o necessária <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> objetos. Porque o <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> classe é uma classe base abstrata, instâncias de suas classes filho –<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> e <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>– são objetos reais usados para formar uma conexão.  
  
 O exemplo tem quatro partes:  
  
-   Modo de exibição de um controle de usuário que permite que você altere as Web Parts em uma página.  
  
-   Código-fonte de uma interface e dois <xref:System.Web.UI.WebControls.WebParts.WebPart> controla atuando como o provedor e o consumidor para uma conexão.  
  
-   Uma página da Web para hospedar todos os controles e executar o exemplo de código.  
  
-   Uma explicação de como executar o exemplo de página.  
  
 A primeira parte deste exemplo de código é o controle de usuário que permite aos usuários alterar modos de exibição em uma página da Web. Salve o seguinte código-fonte em um arquivo. ascx, dando a ele o nome do arquivo que é atribuído à `Src` atributo do `Register` diretiva para este controle de usuário, que está na parte superior da página da Web de hospedagem. Para obter detalhes sobre como exibem os modos e uma descrição do código-fonte nesse controle, consulte [instruções passo a passo: alterando modos de exibir em uma página de Web Parts](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/DisplayModeMenuVB.ascx#6)]  
  
 A segunda parte do exemplo de código é o código-fonte para a interface e controles. O arquivo de origem contém uma interface simples chamada `IZipCode`. Há também uma <xref:System.Web.UI.WebControls.WebParts.WebPart> classe denominada `ZipCodeWebPart` que implementa a interface e atua como o controle do provedor. Seu `ProvideIZipCode` método é o método de retorno de chamada que implementa o membro de apenas da interface. O método simplesmente retorna uma instância da interface. Observe que o método é marcado com um `ConnectionProvider` atributo em seus metadados. Esse é o mecanismo para identificar o método como o método de retorno de chamada para o ponto de conexão do provedor. A outra <xref:System.Web.UI.WebControls.WebParts.WebPart> classe é chamada `WeatherWebPart`, e ele atua como o consumidor para a conexão. Essa classe tem um método chamado `GetZipCode` que obtém uma instância do `IZipCode` interface de controle do provedor. Observe que esse método seja marcado como método de ponto de conexão do consumidor com uma `ConnectionConsumer` atributo em seus metadados. Esse é o mecanismo para identificar o método de ponto de conexão no controle do consumidor.  
  
 Para o exemplo de código seja executado, você deve compilar este código-fonte. Você pode compilá-lo explicitamente e coloque o assembly resultante na pasta Bin do seu site da Web ou cache de assembly global. Como alternativa, você pode colocar o código-fonte na pasta App_Code de seu site, onde ele será compilado dinamicamente no tempo de execução. Este exemplo de código usa a compilação dinâmica. Para um passo a passo que demonstra como compilar, consulte [instruções passo a passo: desenvolvendo e usando um controle de servidor Web personalizado](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_ConnectionPoint_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_ConnectionPoint_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/ZipCodeComponent.vb#2)]  
  
 A terceira parte do exemplo de código é a página da Web. Próximo à parte superior são `Register` diretivas para registrar os controles personalizados que formam a conexão e o controle de usuário que permite aos usuários alterar modos de exibição na página. A conexão em si é criado declarativamente dentro de `<staticconnections>` elemento na página. Você também pode criar a conexão por meio de programação; o código para fazer o que está contido no `Button1_Click` método. Se a conexão será criado de forma declarativa ou por meio de programação, os pontos de conexão sempre devem ser especificados para o provedor e o consumidor. O `Button2_Click` método acessa o <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> objetos para o provedor e o consumidor e escreve alguns dos seus valores de propriedade em um rótulo na página.  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 Depois de carregar a página em um navegador, clique o **detalhes do ponto de Conexão** botão. Informações sobre os pontos de conexão de provedor e consumidor estabelecido em que a conexão declarativa é exibida. Em seguida, use o **modo de exibição** controle de lista suspensa para alternar a página em modo de conexão. No menu de verbos de um do <xref:System.Web.UI.WebControls.WebParts.WebPart> controles (representados por uma seta para baixo na barra de título), clique no verbo do connect. A conexão de interface do usuário for exibida, criados automaticamente pelo `<asp:connectionszone>` controle declarado na página. Clique o **desconectar** botão para encerrar a conexão existente. Use o **modo de exibição** controle para retornar a página para o modo de procura. Em seguida, clique o **Conexão dinâmica** botão para criar uma conexão por meio de programação. Clique o **detalhes de ponto de Conexão** botão novamente, para indicar os detalhes sobre os objetos de ponto de conexão de dois.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
    <related type="Article" href="http://msdn.microsoft.com/library/d98cfd0f-ebd6-4871-89d5-abbd2cdef67b">Visão geral de conexões de partes da Web</related>
    <related type="Article" href="http://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Páginas do ASP.NET Web Parts</related>
  </Docs>
  <Members>
    <Member MemberName="AllowsMultipleConnections">
      <MemberSignature Language="C#" Value="public bool AllowsMultipleConnections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowsMultipleConnections" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowsMultipleConnections As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowsMultipleConnections { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowsMultipleConnections : bool" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se um ponto de conexão é compatível com várias conexões simultâneas.</summary>
        <value>
          <see langword="true" /> Se o ponto de conexão dá suporte a várias conexões; Caso contrário, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> objetos têm suas <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> o valor da propriedade é definida como `true` (pelo <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> classe), porque o controle de Web Parts definido por padrão permite que os pontos de conexão de provedor formem conexões para vários consumidores.  
  
 Por outro lado, <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> objetos têm seus <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> o valor da propriedade é definida como `false` (pelo <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> classe) porque o controle de Web Parts definido por padrão permite que a conexão de consumidor pontos para estabelecer uma conexão a apenas um provedor em um tempo.  
  
 Você pode alterar o comportamento padrão sobre várias conexões, atribuindo valores diferentes para o <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute.AllowsMultipleConnections%2A?displayProperty=nameWithType> propriedade (para provedores) ou o <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.AllowsMultipleConnections%2A?displayProperty=nameWithType> propriedade (para consumidores) nos dois <xref:System.Attribute> classes usadas para atributos de conexão. Se você habilitar pontos de conexão do consumidor para se conectar a vários provedores ao mesmo tempo, seu código precisa lidar com os problemas resultantes de sincronização.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra o uso do <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> propriedade em ambos <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> e <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> objetos. Este exemplo de código mostra somente a página da Web que contém o código para acessar a propriedade; para o necessário para executar o exemplo de código completo, consulte a seção exemplo o <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> visão geral da classe.  
  
 O código a `Button2_Click` método de acessos a página da Web a <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> objetos de propriedade em cada ponto de conexão e escreve cada valor em um rótulo. Execute o código clicando o **detalhes do ponto de Conexão** botão depois que a página é carregada em um navegador.  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute" />
        <related type="Article" href="http://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Páginas do ASP.NET Web Parts</related>
      </Docs>
    </Member>
    <Member MemberName="ControlType">
      <MemberSignature Language="C#" Value="public Type ControlType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ControlType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ControlType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ControlType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ControlType : Type" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o <see cref="T:System.Type" /> do controle do servidor ao qual um ponto de conexão é associado.</summary>
        <value>Um <see cref="T:System.Type" /> que representa o tipo de controle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O valor da <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> propriedade é geralmente o <xref:System.Web.UI.WebControls.WebParts.WebPart> tipo. No entanto, porque qualquer tipo de controle de usuário ou o controle de servidor pode participar de conexões se ele for habilitado corretamente e colocado em um <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zona, o <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> propriedade pode retornar um destes outros servidor controle tipos também.  
  
 Quando controles de servidor que não são <xref:System.Web.UI.WebControls.WebParts.WebPart> controles são colocados em um <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zona, eles são encapsulados com um <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> objeto em tempo de execução para que podem funcionar como <xref:System.Web.UI.WebControls.WebParts.WebPart> controla e participar de conexões. Mas quando esses controles estão envolvidos em conexões, o <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> não retorna um valor da propriedade a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> digite; ele retorna o tipo do <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> controle filho do objeto, que é o tipo do controle de servidor ou usuário.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra o uso do <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> propriedade em ambos <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> e <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> objetos. Este exemplo de código mostra somente a página da Web que contém o código para acessar a propriedade; para o necessário para executar o exemplo de código completo, consulte a seção exemplo o <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> visão geral da classe.  
  
 O código a `Button2_Click` método de acessos a página da Web a <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> objetos de propriedade em cada ponto de conexão e escreve cada valor em um rótulo. Execute o código clicando o **detalhes do ponto de Conexão** botão depois que a página é carregada em um navegador.  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Type" />
        <related type="Article" href="http://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Páginas do ASP.NET Web Parts</related>
      </Docs>
    </Member>
    <Member MemberName="DefaultID">
      <MemberSignature Language="C#" Value="public static readonly string DefaultID;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string DefaultID" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DefaultID As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ DefaultID;" />
      <MemberSignature Language="F#" Value=" staticval mutable DefaultID : string" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa uma cadeia de caracteres usada para identificar o ponto de conexão padrão dentro de uma coleção de pontos de conexão associados a um controle de servidor.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando um ponto de conexão é criado, é possível especificar uma ID para o ponto de conexão no código-fonte de um provedor ou consumidor <xref:System.Web.UI.WebControls.WebParts.WebPart> controlar, usando um <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> ou um <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> atributo. No entanto, quando um atributo é adicionado a um ponto de conexão no código-fonte, o `ID` parâmetro é opcional. Se a ID não for especificada no atributo, o <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> campo fornece uma cadeia de caracteres que é usada para identificar o ponto de conexão padrão.  
  
 Se vários pontos de conexão são definidos em um controle de consumidor ou do provedor, é necessário especificar uma ID para cada ponto de conexão, para que os pontos de conexão podem ser diferenciados ao criar conexões.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute" />
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayName : string" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma cadeia de caracteres que funciona como um nome de exibição amigável para representar um ponto de conexão na IU (interface do usuário).</summary>
        <value>Uma cadeia de caracteres que contém um nome de exibição amigável para um <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" /> objeto.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para criar uma conexão de Web Parts, cada um os controles de provedor e consumidor para a conexão devem especificar pelo menos uma conexão ponto, um método que permite que eles se comuniquem e compartilhem dados. Para identificar esses métodos do ponto de conexão, um desenvolvedor Especifica um atributo sobre os métodos selecionados. No provedor, uma `ConnectionProvider` atributo é definido no método de retorno de chamada selecionado e no consumidor, um `ConnectionConsumer` atributo é definido no método que recebe uma instância de uma interface que contém dados do provedor. Para esses dois atributos, o um parâmetro que será sempre necessário, independentemente de qual sobrecarga é declarada para criar o atributo é o `displayName` parâmetro. O desenvolvedor deve atribuir uma cadeia de caracteres a ser usado como um nome de exibição amigável para o ponto de conexão e essa cadeia de caracteres se tornará o valor de <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> propriedade.  
  
 O <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> valor da propriedade é exibido na interface do usuário de uma página da Web quando os usuários criam conexões. Por exemplo, quando o <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> controle é adicionado à página, ele cria uma interface do usuário para que os usuários criem conexões entre os controles. Depois que um usuário alterna de uma página em modo de exibição do connect e clica em um verbo de conectar-se em um <xref:System.Web.UI.WebControls.WebParts.WebPart> controlar, a conexão de interface do usuário é exibida. Cada controle que pode participar de uma conexão é listada na interface do usuário e ao lado de cada controle é um controle de lista suspensa que exibe os nomes amigáveis dos seus pontos de conexão disponíveis. Os usuários devem selecionar o ponto de pelo menos uma conexão para estabelecer uma conexão. Os valores que aparecem na lista de pontos de conexão são obtidos com o <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> propriedade. Se os desenvolvedores criar uma interface do usuário personalizada para a criação de conexões, eles podem usar o <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> propriedade de maneira semelhante, para fornecer um nome amigável que representa um ponto de conexão.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute" />
        <related type="Article" href="http://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Páginas do ASP.NET Web Parts</related>
      </Docs>
    </Member>
    <Member MemberName="GetEnabled">
      <MemberSignature Language="C#" Value="public virtual bool GetEnabled (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetEnabled(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetEnabled(System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="abstract member GetEnabled : System.Web.UI.Control -&gt; bool&#xA;override this.GetEnabled : System.Web.UI.Control -&gt; bool" Usage="connectionPoint.GetEnabled control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">Um <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> ou outro controle de servidor associado a um ponto de conexão.</param>
        <summary>Retorna um valor que indica se um ponto de conexão pode participar de conexões.</summary>
        <returns>
          <see langword="true" /> se o controle puder criar um ponto de conexão para participar de uma conexão; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A> método na base <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> classe sempre retorna `true`, mas as classes derivadas podem substituir o método retorne `true` ou `false` em momentos diferentes, com base no estado de `control`.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra o uso do <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A> método em ambos <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> e <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> objetos. Este exemplo de código mostra somente a página da Web que contém o código para acessar a propriedade; para o necessário para executar o exemplo de código completo, consulte a seção exemplo o <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> visão geral da classe.  
  
 O código a `Button2_Click` método de acessos a página da Web a <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A> objetos de método em cada ponto de conexão e grava cada valor de um rótulo. Execute o código clicando o **detalhes do ponto de Conexão** botão depois que a página é carregada em um navegador.  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Páginas do ASP.NET Web Parts</related>
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public string ID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ID : string" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.ID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma cadeia de caracteres que contém o identificador para um ponto de conexão.</summary>
        <value>Uma cadeia de caracteres que contém o identificador para um ponto de conexão.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando um desenvolvedor declara uma <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> ou um <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> atributo em um método no código-fonte de um controle, para que o método pode ser usado como um ponto de conexão, não é necessário declarar a `ID` parâmetro para o atributo de ponto de conexão. O único atributo obrigatório é o `displayName` parâmetro. Uma ID padrão é atribuída ao ponto de conexão, usando o valor da <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> campo.  
  
 Se houver apenas um método em um controle que está sendo usado como um ponto de conexão, não é necessário especificar uma ID para o ponto de conexão. Se houver vários métodos especificados como pontos de conexão, você deve especificar uma ID para cada um deles; Caso contrário, uma exceção será lançada. Atribuindo uma ID para cada ponto de conexão, você também possibilitam especificar qual ponto de conexão para usar ao declarar conexões em páginas da Web ou criá-los no código.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra o uso do <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A> propriedade em ambos <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> e <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> objetos. Este exemplo de código mostra somente a página da Web que contém o código para acessar a propriedade; para o necessário para executar o exemplo de código completo, consulte a seção exemplo o <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> visão geral da classe.  
  
 O código a `Button2_Click` método de acessos a página da Web a <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A> objetos de propriedade em cada ponto de conexão e escreve cada valor em um rótulo. Execute o código clicando o **detalhes do ponto de Conexão** botão depois que a página é carregada em um navegador.  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID" />
        <related type="Article" href="http://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Páginas do ASP.NET Web Parts</related>
      </Docs>
    </Member>
    <Member MemberName="InterfaceType">
      <MemberSignature Language="C#" Value="public Type InterfaceType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type InterfaceType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InterfaceType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ InterfaceType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InterfaceType : Type" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o tipo da interface usada por um ponto de conexão.</summary>
        <value>Um <see cref="T:System.Type" /> que corresponde ao tipo de interface fornecida ou consumida por um controle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> propriedade indica qual tipo de interface de um ponto de conexão usa. Isso pode ajudar a determinar se os dois controles são compatíveis e capazes de formar uma conexão. Se o ponto de conexão de provedor <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> é diferente do ponto de conexão de consumidor <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A>, em seguida, os dois controles são incompatíveis (o que significa que eles não podem ser diretamente conectados sem um transformador) e um <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> deve do objeto ser usado para estabelecer uma conexão.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra o uso do <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> propriedade em ambos <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> e <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> objetos. Este exemplo de código mostra somente a página da Web que contém o código para acessar a propriedade; para o necessário para executar o exemplo de código completo, consulte a seção exemplo o <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> visão geral da classe.  
  
 O código a `Button2_Click` método de acessos a página da Web a <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> objetos de propriedade em cada ponto de conexão e escreve cada valor em um rótulo. Execute o código clicando o **detalhes do ponto de Conexão** botão depois que a página é carregada em um navegador.  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Type" />
        <related type="Article" href="http://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Páginas do ASP.NET Web Parts</related>
      </Docs>
    </Member>
  </Members>
</Type>