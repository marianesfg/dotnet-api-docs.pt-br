<Type Name="IWebEditable" FullName="System.Web.UI.WebControls.WebParts.IWebEditable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c6a2aa89961a5a85389368703037d20d42bc0892" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37743832" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IWebEditable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWebEditable" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.IWebEditable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWebEditable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWebEditable" />
  <TypeSignature Language="F#" Value="type IWebEditable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Fornece uma interface para que os desenvolvedores especifiquem controles de edição personalizados que são associados com um controle <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.WebParts.IWebEditable> interface permite que você associe personalizado <xref:System.Web.UI.WebControls.WebParts.EditorPart> controles com um controle de servidor – como um <xref:System.Web.UI.WebControls.WebParts.WebPart> controle, um controle de usuário ou um controle de servidor personalizado. O <xref:System.Web.UI.WebControls.WebParts.EditorPart> controles contidos com um <xref:System.Web.UI.WebControls.WebParts.EditorZone> controle e esta zona com seus controles de edição fornece aos usuários finais uma interface do usuário (IU) para modificar as propriedades, a aparência e comportamento em associado <xref:System.Web.UI.WebControls.WebParts.WebPart> controle.  
  
 O <xref:System.Web.UI.WebControls.WebParts.IWebEditable> interface inclui dois membros expostos. O <xref:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject%2A> propriedade fornece uma maneira para <xref:System.Web.UI.WebControls.WebParts.EditorPart> controles para obter uma referência para o controle de servidor associado. O <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> método é usado para criar uma instância de cada custom <xref:System.Web.UI.WebControls.WebParts.EditorPart> controle associado a um controle de servidor e retorná-los como uma coleção.  
  
 O <xref:System.Web.UI.WebControls.WebParts.IWebEditable> interface já é implementado na base <xref:System.Web.UI.WebControls.WebParts.WebPart> classe, embora por padrão essa implementação não associará qualquer personalizado <xref:System.Web.UI.WebControls.WebParts.EditorPart> controla com o <xref:System.Web.UI.WebControls.WebParts.WebPart> classe. Para associar um derivado <xref:System.Web.UI.WebControls.WebParts.WebPart> controle com personalizado <xref:System.Web.UI.WebControls.WebParts.EditorPart> controles, você pode substituir o <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> método.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como substituir os métodos do <xref:System.Web.UI.WebControls.WebParts.IWebEditable> interface em um personalizado <xref:System.Web.UI.WebControls.WebParts.WebPart> controle, que, em seguida, cria uma instância de um personalizado <xref:System.Web.UI.WebControls.WebParts.EditorPart> controlar quando o <xref:System.Web.UI.WebControls.WebParts.WebPart> controle entra no modo de edição.  
  
 Este exemplo tem quatro partes:  
  
-   O código para a classe personalizada.  
  
-   A página da Web que hospeda o controle personalizado.  
  
-   Um controle de usuário que alterna a página no modo de edição.  
  
-   Uma descrição de como o exemplo funciona em um navegador.  
  
 A primeira parte do exemplo de código é personalizado `TextDisplayWebPart` classe. Observe que a classe deriva de <xref:System.Web.UI.WebControls.WebParts.WebPart> classe e implementa o <xref:System.Web.UI.WebControls.WebParts.IWebEditable> interface, fornecendo implementações específicas para o <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> método e o <xref:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject%2A> propriedade. Observe também que aninhado dentro de `TextDisplayWebPart` classe é uma privada, personalizada `TextDisplayEditorPart` classe que derive da base <xref:System.Web.UI.WebControls.WebParts.EditorPart> classe. Para o exemplo de código seja executado, você deve compilar este código-fonte. Você pode compilá-lo explicitamente e coloque o assembly resultante na pasta Bin do seu site da Web ou cache de assembly global. Como alternativa, você pode colocar o código-fonte na pasta App_Code de seu site, onde ele será compilado dinamicamente no tempo de execução. Para um passo a passo que demonstra os dois métodos de compilação, consulte [instruções passo a passo: desenvolvendo e usando um controle de servidor Web personalizado](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_IWebEditable_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebEditable_Overview/CS/textdisplaywebpart.cs#1)]
 [!code-vb[WebParts_IWebEditable_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebEditable_Overview/VB/textdisplaywebpart.vb#1)]  
  
 A segunda parte do exemplo de código é uma página da Web que hospeda o controle personalizado. Observe que, embora uma <xref:System.Web.UI.WebControls.WebParts.EditorZone> controle é declarado na marcação da página, personalizado <xref:System.Web.UI.WebControls.WebParts.EditorPart> controle não precisa ser referenciado lá, porque podem ser adicionado programaticamente no tempo de execução.  
  
 [!code-aspx-csharp[WebParts_IWebEditable_Overview#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebEditable_Overview/CS/editorpart_overview_cs.aspx#7)]
 [!code-aspx-vb[WebParts_IWebEditable_Overview#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebEditable_Overview/VB/editorpart_overview_vb.aspx#7)]  
  
 A terceira parte do exemplo de código é um controle de usuário que permite ao usuário alternar a página em modo de edição. Observe que o controle de usuário é referenciado na página da Web de hospedagem. Para obter uma descrição completa de como criar esse controle de usuário, consulte [instruções passo a passo: alterando modos de exibição em uma página de Web Parts](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 [!code-aspx-csharp[WebParts_IWebEditable_Overview#8](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebEditable_Overview/CS/displaymodeuccs.ascx#8)]
 [!code-aspx-vb[WebParts_IWebEditable_Overview#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebEditable_Overview/VB/displaymodeucvb.ascx#8)]  
  
 Para executar o exemplo de código, carregar a página da Web de hospedagem em um navegador, adicione algum texto à caixa de texto e clique no **definir o conteúdo de rótulo** botão para atualizar o rótulo no controle. Para alternar a página no modo de edição, selecione **editar** na lista suspensa que contém os modos de exibição. Para exibir a interface do usuário do personalizado `TextDisplayEditorPart` de controle, clique na seta de lista suspensa do menu de verbos na `TextDisplayWebPart` controle e selecione **editar**. Na interface do usuário edição, você pode usar a lista suspensa que contém os estilos de fonte para atualizar o estilo de texto para o rótulo no `TextDisplayWebPart` controle. Você deve clicar **modo de procurar** na lista suspensa de modos de exibição para retornar a página para o modo normal e confirme se o texto no rótulo agora tem o estilo da fonte selecionada no modo de edição.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Se você deseja usar controles de servidor que não são <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controles em um aplicativo de Web Parts (ou seja, se você adicionar esses controles para um <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> zona), e se você quiser associar personalizado <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> controles com esses controles de servidor, você precisa implementar o <see cref="T:System.Web.UI.WebControls.WebParts.IWebEditable" /> interface. Derivado <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controles não devem implementar a interface, porque a base de <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> classe já faz isso.</para>
    </block>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />
  </Docs>
  <Members>
    <Member MemberName="CreateEditorParts">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.EditorPartCollection CreateEditorParts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.EditorPartCollection CreateEditorParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateEditorParts () As EditorPartCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::WebControls::WebParts::EditorPartCollection ^ CreateEditorParts();" />
      <MemberSignature Language="F#" Value="abstract member CreateEditorParts : unit -&gt; System.Web.UI.WebControls.WebParts.EditorPartCollection" Usage="iWebEditable.CreateEditorParts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.EditorPartCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna uma coleção de controles <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> personalizados associados a um controle de servidor que implementa a interface <see cref="T:System.Web.UI.WebControls.WebParts.IWebEditable" />.</summary>
        <returns>Uma <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> que contém a coleção de controles personalizados <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> associados a um controle de servidor.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> método permite que você crie uma coleção de todos os personalizados <xref:System.Web.UI.WebControls.WebParts.EditorPart> controles associados ao seu controle personalizado, <xref:System.Web.UI.WebControls.WebParts.WebPart> controle ou o usuário controlar e retorná-los como um <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> objeto. O <xref:System.Web.UI.WebControls.WebParts.WebPartManager> usa a coleção de controle e cria instâncias de todos os <xref:System.Web.UI.WebControls.WebParts.EditorPart> controles sempre que o controle de servidor entra em modo de edição.  
  
 Normalmente você implementar esse método em um personalizado <xref:System.Web.UI.WebControls.WebParts.WebPart> controle substituindo seu <xref:System.Web.UI.WebControls.WebParts.WebPart.CreateEditorParts%2A> método. No método, é criar instâncias de personalizado <xref:System.Web.UI.WebControls.WebParts.EditorPart> controles que você deseja associar seus controles, adicioná-los para um <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> de objeto e, em seguida, retornar esse objeto. A coleção de <xref:System.Web.UI.WebControls.WebParts.EditorPart> controles, em seguida, é atribuído para o <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A> propriedade do <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> zona.  
  
> [!NOTE]
>  Qualquer <xref:System.Web.UI.WebControls.WebParts.EditorPart> que é adicionado à coleção de <xref:System.Web.UI.WebControls.WebParts.EditorPart> controles em uma implementação da <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> método deve ter um valor atribuído à sua propriedade de ID, caso contrário, uma exceção será gerada quando a coleção é atribuída para o <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A>propriedade.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra uma substituição do <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> método em um personalizado <xref:System.Web.UI.WebControls.WebParts.WebPart> controle. O código-fonte completo necessário para executar a amostra for encontrado na seção exemplo de <xref:System.Web.UI.WebControls.WebParts.IWebEditable> tópico de visão geral da classe.  
  
 O exemplo de código contém os dois membros do <xref:System.Web.UI.WebControls.WebParts.IWebEditable> interface. Observe que a substituição do <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> método cria um <xref:System.Collections.ArrayList> para coletar um ou mais <xref:System.Web.UI.WebControls.WebParts.EditorPart> controla e, em seguida, usa a lista para criar o <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> objeto.  
  
 [!code-csharp[WebParts_IWebEditable_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebEditable_Overview/CS/textdisplaywebpart.cs#4)]
 [!code-vb[WebParts_IWebEditable_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebEditable_Overview/VB/textdisplaywebpart.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>O <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> do objeto que o <see cref="M:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts" /> método retorna é somente leitura e não tem nenhum método acessível para adicionar controles individuais a ele. No entanto, em sua substituição ou a implementação do método, você pode criar outro tipo de <see cref="T:System.Collections.ICollection" /> objeto, como um <see cref="T:System.Collections.ArrayList" />, para conter todos os personalizados <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> controla e passá-lo para o construtor, quando você cria um novo <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> objeto . Para obter um exemplo de código, consulte a seção de exemplo.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />
      </Docs>
    </Member>
    <Member MemberName="WebBrowsableObject">
      <MemberSignature Language="C#" Value="public object WebBrowsableObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object WebBrowsableObject" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WebBrowsableObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ WebBrowsableObject { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WebBrowsableObject : obj" Usage="System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma referência ao controle <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />, ao controle de usuário ou a um controle personalizado que será editado por controles <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />.</summary>
        <value>Uma referência de objeto para o controle associado a um <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> controle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject%2A> propriedade fornece uma maneira para <xref:System.Web.UI.WebControls.WebParts.EditorPart> controles para obter uma referência para os controles de servidor que estão associados.  
  
 Embora a propriedade em si é somente leitura, permite que a referência de objeto que ela retorna <xref:System.Web.UI.WebControls.WebParts.EditorPart> controles para alterar os valores no controle de servidor.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como o <xref:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject%2A> propriedade pode ser substituída em uma personalização <xref:System.Web.UI.WebControls.WebParts.WebPart> controle. O código-fonte completo necessário para executar o exemplo for encontrado na seção exemplo de <xref:System.Web.UI.WebControls.WebParts.IWebEditable> tópico de visão geral da classe.  
  
 O exemplo de código substitui os dois membros do <xref:System.Web.UI.WebControls.WebParts.IWebEditable> interface.  
  
 [!code-csharp[WebParts_IWebEditable_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebEditable_Overview/CS/textdisplaywebpart.cs#4)]
 [!code-vb[WebParts_IWebEditable_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebEditable_Overview/VB/textdisplaywebpart.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Normalmente, quando você implementa o <see cref="P:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject" /> propriedade em um controle de servidor, você simplesmente retorna uma referência para o controle de servidor. No caso do <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> classe, porque ele encapsula um controle filho para habilitá-lo para funcionar como uma <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controlar, sua implementação do <see cref="P:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject" /> propriedade retorna uma referência para o controle filho.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />
      </Docs>
    </Member>
  </Members>
</Type>