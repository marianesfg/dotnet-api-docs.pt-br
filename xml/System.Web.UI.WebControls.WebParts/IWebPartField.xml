<Type Name="IWebPartField" FullName="System.Web.UI.WebControls.WebParts.IWebPartField">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e394a26b3c9c60bd5b01ccbaf7ae38a6ac135251" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30590200" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IWebPartField" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWebPartField" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.IWebPartField" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWebPartField" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWebPartField" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Define uma interface de provedor para conectar dois controles de servidor usando um único campo de dados.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa interface foi projetada para ser usado com conexões de Web Parts. Em uma conexão de Web Parts, dois controles de servidor que residem em um <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zona estabelecer uma conexão e compartilhamento de dados, com um controle que atua como o consumidor e o outro controle que atua como um provedor. O mecanismo para o compartilhamento de dados em uma conexão de Web Parts é uma instância de interface, que atua como o provedor para o consumidor por meio de um método de retorno de chamada. Para estabelecer uma conexão, o consumidor e provedor devem ambos funcionam com o mesmo tipo de interface para o compartilhamento de dados. Se o consumidor não reconhece o tipo de interface enviado pelo provedor, ele ainda é possível conectar-se os controles por meio de um transformador (um <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> objeto) que converte a instância da interface enviada pelo provedor para um tipo que reconhece o consumidor. Para obter detalhes sobre conexões, consulte <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> e [Web Parts Connections Overview](http://msdn.microsoft.com/library/d98cfd0f-ebd6-4871-89d5-abbd2cdef67b).  
  
 O <xref:System.Web.UI.WebControls.WebParts.IWebPartField> é uma interface de provedor incluída com o controle de Web Parts definido como uma interface padrão para a criação de conexões com base em um campo de dados. Você também pode criar interfaces personalizados para usar com conexões de Web Parts, mas em muitos aplicativos de Web controladas por dados, é útil criar conexões com base em uma linha comum (para obter detalhes, consulte o <xref:System.Web.UI.WebControls.WebParts.IWebPartRow> interface), tabela (para obter detalhes, consulte o <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interface), ou campo de dados de origem, usando o <xref:System.Web.UI.WebControls.WebParts.IWebPartField> interface. Em uma conexão típica, um <xref:System.Web.UI.WebControls.WebParts.WebPart> controlar atuar como um provedor deve implementar a <xref:System.Web.UI.WebControls.WebParts.IWebPartField> de interface e fornecer uma instância da interface para os consumidores de um método de retorno de chamada especial. Por exemplo, o provedor pode implementar uma <xref:System.Web.UI.WebControls.WebParts.IWebPartField> interface para um campo em sua tabela de informações do usuário que contém dados de código postal do usuário da Web. Outro <xref:System.Web.UI.WebControls.WebParts.WebPart> controlar atuar como um consumidor define um método especial para receber a instância da interface e pode, em seguida, extrair os dados de código postal, pesquisar e exibir informações de tempo com base no código postal.  
  
 O <xref:System.Web.UI.WebControls.WebParts.IWebPartField> interface tem dois membros expostos. O <xref:System.Web.UI.WebControls.WebParts.IWebPartField.Schema%2A> propriedade retorna informações de esquema sobre o campo de dados encapsulada em uma <xref:System.ComponentModel.PropertyDescriptor> objeto. O <xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A> método declara um método que usa um implementador (como um controle de provedor) para recuperar dados do campo da instância de interface quando o método de retorno de chamada é invocado.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como criar uma conexão estática entre dois controles usando a <xref:System.Web.UI.WebControls.WebParts.IWebPartField> interface. O exemplo de código tem três partes:  
  
-   Fonte de código para personalizar dois <xref:System.Web.UI.WebControls.WebParts.WebPart> controles que podem formar uma conexão usando o <xref:System.Web.UI.WebControls.WebParts.IWebPartField> interface, com um controle que atua como o provedor, o outro atuando como o consumidor.  
  
-   Uma página da Web que hospeda os controles e declara a conexão estático no formato de persistência.  
  
-   Uma descrição do que acontece quando o código de exemplo é executado.  
  
 A primeira parte do exemplo de código é o código-fonte para os dois controles personalizados. A primeira é o código para o provedor, que implementa o <xref:System.Web.UI.WebControls.WebParts.IWebPartField> interface. Para simplificar o exemplo, o provedor cria uma tabela com alguns dados em vez de se conectar a um banco de dados. O `GetConnectionInterface` método serve como ponto de conexão do provedor, o método de retorno de chamada que retorna a instância da interface para o consumidor. Para o consumidor, ele recupera a instância da interface do provedor em seu método chamado `SetConnectionInterface`, que é marcado com um `ConnectionConsumer` atributo. Depois de recuperar a instância da interface, o consumidor, no seu `OnPreRender` chamadas de método, a implementação do <xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A> método no provedor, para recuperar os dados reais.  
  
 Para o exemplo de código seja executado, você deve compilar este código-fonte. Você pode compilá-lo explicitamente e colocar o assembly resultante na pasta Bin do seu site da Web ou o cache de assembly global. Como alternativa, você pode colocar o código-fonte na pasta App_Code de seu site, onde ele será compilado dinamicamente em tempo de execução. Este exemplo de código usa compilação dinâmica. Para uma explicação passo a passo que demonstre como compilar, consulte [passo a passo: desenvolvendo e usando um controle de servidor Web personalizado](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_IWebPartField_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/CS/IFieldSample.cs#2)]
 [!code-vb[WebParts_IWebPartField_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/VB/IFieldSample.vb#2)]  
  
 A segunda parte do exemplo de código é a página da Web que declara o conexão estática e os hosts de controles. Na parte superior da página é uma `Register` diretiva que declara o namespace do código-fonte contido no diretório App_Code. A conexão é declarado usando um `<asp:webpartconnection>` elemento. Controles personalizados de consumidor e provedor são declarados em um `<zonetemplate>` elemento dentro um `<asp:webpartzone>` elemento, que é necessário para que eles possam ser capaz de se conectar (eles devem residir dentro de uma zona que herda do <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> classe).  
  
 [!code-aspx-csharp[WebParts_IWebPartField_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPartField_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/VB/Defaultvb.aspx#1)]  
  
 Carregar a página em um navegador. O controle de consumidor exibe os dados fornecidos pelo campo especificado, o provedor torna disponível por meio de uma instância do <xref:System.Web.UI.WebControls.WebParts.IWebPartField> interface.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebPartRow" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebPartTable" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
  </Docs>
  <Members>
    <Member MemberName="GetFieldValue">
      <MemberSignature Language="C#" Value="public void GetFieldValue (System.Web.UI.WebControls.WebParts.FieldCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetFieldValue(class System.Web.UI.WebControls.WebParts.FieldCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue(System.Web.UI.WebControls.WebParts.FieldCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetFieldValue (callback As FieldCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetFieldValue(System::Web::UI::WebControls::WebParts::FieldCallback ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Web.UI.WebControls.WebParts.FieldCallback" />
      </Parameters>
      <Docs>
        <param name="callback">Um delegado <see cref="T:System.Web.UI.WebControls.WebParts.FieldCallback" /> que contém o endereço de um método que recebe os dados.</param>
        <summary>Retorna o valor do campo que está sendo usado pela interface como a base de uma conexão entre dois controles de <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use esse método para recuperar os valores de campo de dados transmitidos pela interface.  
  
   
  
## Examples  
 O exemplo de código a seguir mostra a implementação e usar o <xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A> método. O exemplo completo é mostrado na visão geral de classe para o <xref:System.Web.UI.WebControls.WebParts.IWebPartField> interface. O controle de provedor implementa o <xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A> método, retornando o valor de um campo específico na tabela de dados. O controle de consumidor chama o <xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A> método no seu `OnPreRender` método, para que o valor dos dados pode ser gravado para a página.  
  
 [!code-csharp[WebParts_IWebPartField_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/CS/IFieldSample.cs#2)]
 [!code-vb[WebParts_IWebPartField_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/VB/IFieldSample.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Schema">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptor Schema { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.PropertyDescriptor Schema" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPartField.Schema" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Schema As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::PropertyDescriptor ^ Schema { System::ComponentModel::PropertyDescriptor ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém as informações de esquema para um campo de dados que é usada para compartilhar dados entre dois controles de <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</summary>
        <value>Um <see cref="T:System.ComponentModel.PropertyDescriptor" /> que descreve as informações de esquema para o campo de dados.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propriedade fornece informações de propriedade de dados transmitidos pela interface. Controles de transformador e o consumidor podem consultar esta propriedade para obter informações sobre o tipo de conteúdo, e outros detalhes do campo contido no <xref:System.Web.UI.WebControls.WebParts.IWebPartField> enviada por um provedor de instância da interface.  
  
   
  
## Examples  
 O exemplo de código a seguir mostra a implementação e usar o <xref:System.Web.UI.WebControls.WebParts.IWebPartField.Schema%2A> propriedade. O exemplo completo é mostrado na visão geral de classe para o <xref:System.Web.UI.WebControls.WebParts.IWebPartField> interface. O controle de provedor implementa o <xref:System.Web.UI.WebControls.WebParts.IWebPartField.Schema%2A> propriedade. Em seguida, no seu `GetFieldValue` método, ele usa a propriedade para recuperar o valor do campo.  
  
 [!code-csharp[WebParts_IWebPartField_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/CS/IFieldSample.cs#2)]
 [!code-vb[WebParts_IWebPartField_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/VB/IFieldSample.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
      </Docs>
    </Member>
  </Members>
</Type>