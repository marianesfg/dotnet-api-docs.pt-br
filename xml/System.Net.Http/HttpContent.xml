<Type Name="HttpContent" FullName="System.Net.Http.HttpContent">
  <TypeSignature Language="C#" Value="public abstract class HttpContent : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HttpContent extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Http.HttpContent" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HttpContent&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpContent abstract : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Http</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="01eab-101">Uma classe base que representa um corpo de entidade HTTP e cabeçalhos de conteúdo.</span><span class="sxs-lookup"><span data-stu-id="01eab-101">A base class representing an HTTP entity body and content headers.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HttpContent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContent.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HttpContent();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="01eab-102">Inicializa uma nova instância da classe <see cref="T:System.Net.Http.HttpContent" />.</span><span class="sxs-lookup"><span data-stu-id="01eab-102">Initializes a new instance of the <see cref="T:System.Net.Http.HttpContent" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyToAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="01eab-103">Serializa o conteúdo HTTP em um fluxo de bytes e cópia-o para o objeto de fluxo fornecido como o parâmetro <paramref name="stream" />.</span><span class="sxs-lookup"><span data-stu-id="01eab-103">Serialize the HTTP content into a stream of bytes and copies it to the stream object provided as the <paramref name="stream" /> parameter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01eab-104">Esta operação não bloquear.</span><span class="sxs-lookup"><span data-stu-id="01eab-104">This operation does not block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyToAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CopyToAsync (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CopyToAsync(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ CopyToAsync(System::IO::Stream ^ stream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="01eab-105">O fluxo de destino.</span><span class="sxs-lookup"><span data-stu-id="01eab-105">The target stream.</span></span></param>
        <summary><span data-ttu-id="01eab-106">Serializa o conteúdo HTTP em um fluxo de bytes e cópia-o para o objeto de fluxo fornecido como o parâmetro <paramref name="stream" />.</span><span class="sxs-lookup"><span data-stu-id="01eab-106">Serialize the HTTP content into a stream of bytes and copies it to the stream object provided as the <paramref name="stream" /> parameter.</span></span></summary>
        <returns><span data-ttu-id="01eab-107">O objeto de tarefa que representa a operação assíncrona.</span><span class="sxs-lookup"><span data-stu-id="01eab-107">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01eab-108">Essa operação não será bloqueada.</span><span class="sxs-lookup"><span data-stu-id="01eab-108">This operation will not block.</span></span> <span data-ttu-id="01eab-109">Retornado <xref:System.Threading.Tasks.Task%601> objeto será concluída após todo o conteúdo foi gravado para o objeto de fluxo passado como o `stream` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="01eab-109">The returned <xref:System.Threading.Tasks.Task%601> object will complete after all of the content has been written to the stream object passed as the `stream` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyToAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CopyToAsync (System.IO.Stream stream, System.Net.TransportContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CopyToAsync(class System.IO.Stream stream, class System.Net.TransportContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ CopyToAsync(System::IO::Stream ^ stream, System::Net::TransportContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="context" Type="System.Net.TransportContext" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="01eab-110">O fluxo de destino.</span><span class="sxs-lookup"><span data-stu-id="01eab-110">The target stream.</span></span></param>
        <param name="context"><span data-ttu-id="01eab-111">Informações sobre o transporte (token da associação de canal, por exemplo).</span><span class="sxs-lookup"><span data-stu-id="01eab-111">Information about the transport (channel binding token, for example).</span></span> <span data-ttu-id="01eab-112">Esse parâmetro pode ser <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="01eab-112">This parameter may be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="01eab-113">Serializa o conteúdo HTTP em um fluxo de bytes e cópia-o para o objeto de fluxo fornecido como o parâmetro <paramref name="stream" />.</span><span class="sxs-lookup"><span data-stu-id="01eab-113">Serialize the HTTP content into a stream of bytes and copies it to the stream object provided as the <paramref name="stream" /> parameter.</span></span></summary>
        <returns><span data-ttu-id="01eab-114">O objeto de tarefa que representa a operação assíncrona.</span><span class="sxs-lookup"><span data-stu-id="01eab-114">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01eab-115">Essa operação não será bloqueada.</span><span class="sxs-lookup"><span data-stu-id="01eab-115">This operation will not block.</span></span> <span data-ttu-id="01eab-116">Retornado <xref:System.Threading.Tasks.Task%601> objeto será concluída após todo o conteúdo foi gravado para o objeto de fluxo passado como o `stream` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="01eab-116">The returned <xref:System.Threading.Tasks.Task%601> object will complete after all of the content has been written to the stream object passed as the `stream` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateContentReadStreamAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task&lt;System.IO.Stream&gt; CreateContentReadStreamAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; CreateContentReadStreamAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContent.CreateContentReadStreamAsync" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateContentReadStreamAsync () As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ CreateContentReadStreamAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Net.Http.HttpContent/&lt;CreateContentReadStreamAsync&gt;c__async0))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="01eab-117">Serializa o conteúdo HTTP em um fluxo de memória como uma operação assíncrona.</span><span class="sxs-lookup"><span data-stu-id="01eab-117">Serialize the HTTP content to a memory stream as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="01eab-118">O objeto de tarefa que representa a operação assíncrona.</span><span class="sxs-lookup"><span data-stu-id="01eab-118">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01eab-119">Essa operação não será bloqueada.</span><span class="sxs-lookup"><span data-stu-id="01eab-119">This operation will not block.</span></span> <span data-ttu-id="01eab-120">Retornado <xref:System.Threading.Tasks.Task%601> objeto será concluída após todo o conteúdo foi gravado para o fluxo de memória.</span><span class="sxs-lookup"><span data-stu-id="01eab-120">The returned <xref:System.Threading.Tasks.Task%601> object will complete after all of the content has been written to the memory stream.</span></span>  
  
 <span data-ttu-id="01eab-121">Quando a operação for concluída, o <xref:System.Threading.Tasks.Task%601.Result%2A> propriedade no objeto de tarefa retornada contém o fluxo de memória que que representa o conteúdo HTTP.</span><span class="sxs-lookup"><span data-stu-id="01eab-121">Once the operation completes, the  <xref:System.Threading.Tasks.Task%601.Result%2A> property on the returned task object contains the memory stream that that represents the HTTP content.</span></span> <span data-ttu-id="01eab-122">O fluxo retornado, em seguida, pode ser usado para ler o conteúdo usando o fluxo de várias APIs.</span><span class="sxs-lookup"><span data-stu-id="01eab-122">The returned stream can then be used to read the content using various stream APIs.</span></span>  
  
 <span data-ttu-id="01eab-123">O <xref:System.Net.Http.HttpContent.CreateContentReadStreamAsync%2A> método armazena em buffer o conteúdo a um fluxo de memória.</span><span class="sxs-lookup"><span data-stu-id="01eab-123">The <xref:System.Net.Http.HttpContent.CreateContentReadStreamAsync%2A> method buffers the content to a memory stream.</span></span> <span data-ttu-id="01eab-124">Classes derivadas podem substituir esse comportamento se há uma maneira melhor para recuperar o conteúdo como fluxo.</span><span class="sxs-lookup"><span data-stu-id="01eab-124">Derived classes can override this behavior if there is a better way to retrieve the content as stream.</span></span> <span data-ttu-id="01eab-125">Por exemplo, uma matriz de bytes ou uma cadeia de caracteres pode usar uma forma mais eficiente de método como somente leitura de encapsulamento <xref:System.IO.MemoryStream> em torno de cadeia de caracteres ou bytes.)</span><span class="sxs-lookup"><span data-stu-id="01eab-125">For example, a byte array or a string could use a more efficient method way such as wrapping a read-only <xref:System.IO.MemoryStream> around the bytes or string.)</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="01eab-126">Libera os recursos não gerenciados usados pelo <see cref="T:System.Net.Http.HttpContent" /> e, opcionalmente, descarta os recursos gerenciados.</span><span class="sxs-lookup"><span data-stu-id="01eab-126">Releases the unmanaged resources used by the <see cref="T:System.Net.Http.HttpContent" /> and optionally disposes of the managed resources.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContent.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="01eab-127">Libera os recursos não gerenciados e descarta aqueles gerenciados usados pelo <see cref="T:System.Net.Http.HttpContent" />.</span><span class="sxs-lookup"><span data-stu-id="01eab-127">Releases the unmanaged resources and disposes of the managed resources used by the <see cref="T:System.Net.Http.HttpContent" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContent.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="01eab-128"><see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</span><span class="sxs-lookup"><span data-stu-id="01eab-128"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to releases only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="01eab-129">Libera os recursos não gerenciados usados pelo <see cref="T:System.Net.Http.HttpContent" /> e, opcionalmente, descarta os recursos gerenciados.</span><span class="sxs-lookup"><span data-stu-id="01eab-129">Releases the unmanaged resources used by the <see cref="T:System.Net.Http.HttpContent" /> and optionally disposes of the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01eab-130">Este método é chamado pelo método público `Dispose()` e pelo método <xref:System.Object.Finalize%2A>.</span><span class="sxs-lookup"><span data-stu-id="01eab-130">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="01eab-131">`Dispose()` invoca o método `Dispose(Boolean)` protegido com o parâmetro `disposing` definido como `true`.</span><span class="sxs-lookup"><span data-stu-id="01eab-131">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="01eab-132"><xref:System.Object.Finalize%2A> invoca `Dispose` com `disposing` definido como `false`. Quando o `disposing` parâmetro é `true`, esse método libera todos os recursos mantidos por qualquer objeto gerenciado que este <xref:System.Net.Http.HttpContent> referências.</span><span class="sxs-lookup"><span data-stu-id="01eab-132"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Http.HttpContent> references.</span></span> <span data-ttu-id="01eab-133">Este método invoca o método `Dispose()` de cada objeto referenciado.</span><span class="sxs-lookup"><span data-stu-id="01eab-133">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public System.Net.Http.Headers.HttpContentHeaders Headers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Http.Headers.HttpContentHeaders Headers" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpContent.Headers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Headers As HttpContentHeaders" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Http::Headers::HttpContentHeaders ^ Headers { System::Net::Http::Headers::HttpContentHeaders ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Http.Headers.HttpContentHeaders</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01eab-134">Obtém os cabeçalhos de conteúdo HTTP, conforme definido no RFC 2616.</span><span class="sxs-lookup"><span data-stu-id="01eab-134">Gets the HTTP content headers as defined in RFC 2616.</span></span></summary>
        <value><span data-ttu-id="01eab-135">Os cabeçalhos de conteúdo, conforme definido no RFC 2616.</span><span class="sxs-lookup"><span data-stu-id="01eab-135">The content headers as defined in RFC 2616.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadIntoBufferAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="01eab-136">Serializa o conteúdo HTTP em um buffer de memória como uma operação assíncrona.</span><span class="sxs-lookup"><span data-stu-id="01eab-136">Serialize the HTTP content to a memory buffer as an asynchronous operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01eab-137">Essa operação não será bloqueada.</span><span class="sxs-lookup"><span data-stu-id="01eab-137">This operation will not block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadIntoBufferAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task LoadIntoBufferAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task LoadIntoBufferAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContent.LoadIntoBufferAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadIntoBufferAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ LoadIntoBufferAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="01eab-138">Serializa o conteúdo HTTP em um buffer de memória como uma operação assíncrona.</span><span class="sxs-lookup"><span data-stu-id="01eab-138">Serialize the HTTP content to a memory buffer as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="01eab-139">O objeto de tarefa que representa a operação assíncrona.</span><span class="sxs-lookup"><span data-stu-id="01eab-139">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01eab-140">Essa operação não será bloqueada.</span><span class="sxs-lookup"><span data-stu-id="01eab-140">This operation will not block.</span></span> <span data-ttu-id="01eab-141">Retornado <xref:System.Threading.Tasks.Task> objeto será concluída após todo o conteúdo tiver sido serializado para o buffer de memória.</span><span class="sxs-lookup"><span data-stu-id="01eab-141">The returned <xref:System.Threading.Tasks.Task> object will complete after all of the content has been serialized to the memory buffer.</span></span>  
  
 <span data-ttu-id="01eab-142">Depois que o conteúdo é serializado como um buffer de memória, chamadas para uma da <xref:System.Net.Http.HttpContent.CopyToAsync%2A> métodos copiará o conteúdo do buffer de memória para o fluxo de destino.</span><span class="sxs-lookup"><span data-stu-id="01eab-142">After content is serialized to a memory buffer, calls to one of the  <xref:System.Net.Http.HttpContent.CopyToAsync%2A> methods will copy the content of the memory buffer to the target stream.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadIntoBufferAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task LoadIntoBufferAsync (long maxBufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task LoadIntoBufferAsync(int64 maxBufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadIntoBufferAsync (maxBufferSize As Long) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ LoadIntoBufferAsync(long maxBufferSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Net.Http.HttpContent/&lt;LoadIntoBufferAsync&gt;c__async1))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxBufferSize" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="maxBufferSize"><span data-ttu-id="01eab-143">O tamanho máximo, em bytes, do buffer a usar.</span><span class="sxs-lookup"><span data-stu-id="01eab-143">The maximum size, in bytes, of the buffer to use.</span></span></param>
        <summary><span data-ttu-id="01eab-144">Serializa o conteúdo HTTP em um buffer de memória como uma operação assíncrona.</span><span class="sxs-lookup"><span data-stu-id="01eab-144">Serialize the HTTP content to a memory buffer as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="01eab-145">O objeto de tarefa que representa a operação assíncrona.</span><span class="sxs-lookup"><span data-stu-id="01eab-145">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01eab-146">Essa operação não será bloqueada.</span><span class="sxs-lookup"><span data-stu-id="01eab-146">This operation will not block.</span></span> <span data-ttu-id="01eab-147">Retornado <xref:System.Threading.Tasks.Task> objeto será concluída após todo o conteúdo tiver sido serializado para o buffer de memória.</span><span class="sxs-lookup"><span data-stu-id="01eab-147">The returned <xref:System.Threading.Tasks.Task> object will complete after all of the content has been serialized to the memory buffer.</span></span>  
  
 <span data-ttu-id="01eab-148">Depois que o conteúdo é serializado como um buffer de memória, chamadas para uma da <xref:System.Net.Http.HttpContent.CopyToAsync%2A> métodos copiará o conteúdo do buffer de memória para o fluxo de destino.</span><span class="sxs-lookup"><span data-stu-id="01eab-148">After content is serialized to a memory buffer, calls to one of the  <xref:System.Net.Http.HttpContent.CopyToAsync%2A> methods will copy the content of the memory buffer to the target stream.</span></span>  
  
 <span data-ttu-id="01eab-149">Se o conteúdo excede o valor passado a `maxBufferSize` parâmetro, uma exceção será lançada.</span><span class="sxs-lookup"><span data-stu-id="01eab-149">If the content exceeds the value  passed in the `maxBufferSize` parameter , an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsByteArrayAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; ReadAsByteArrayAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; ReadAsByteArrayAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContent.ReadAsByteArrayAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadAsByteArrayAsync () As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ ReadAsByteArrayAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Net.Http.HttpContent/&lt;ReadAsByteArrayAsync&gt;c__async3))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="01eab-150">Serialize o conteúdo HTTP em uma matriz de bytes como uma operação assíncrona.</span><span class="sxs-lookup"><span data-stu-id="01eab-150">Serialize the HTTP content to a byte array as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="01eab-151">O objeto de tarefa que representa a operação assíncrona.</span><span class="sxs-lookup"><span data-stu-id="01eab-151">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01eab-152">Essa operação não será bloqueada.</span><span class="sxs-lookup"><span data-stu-id="01eab-152">This operation will not block.</span></span> <span data-ttu-id="01eab-153">Retornado <xref:System.Threading.Tasks.Task%601> objeto será concluída após todo o conteúdo foi gravado como uma matriz de bytes.</span><span class="sxs-lookup"><span data-stu-id="01eab-153">The returned <xref:System.Threading.Tasks.Task%601> object will complete after all of the content has been written as a byte array.</span></span>  
  
 <span data-ttu-id="01eab-154">Quando a operação for concluída, o <xref:System.Threading.Tasks.Task%601.Result%2A> propriedade no objeto retornado de tarefa contém a matriz de bytes com o conteúdo HTTP.</span><span class="sxs-lookup"><span data-stu-id="01eab-154">Once the operation completes, the  <xref:System.Threading.Tasks.Task%601.Result%2A> property on the returned task object contains the byte array with the HTTP content.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsStreamAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; ReadAsStreamAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; ReadAsStreamAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContent.ReadAsStreamAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadAsStreamAsync () As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ ReadAsStreamAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Net.Http.HttpContent/&lt;ReadAsStreamAsync&gt;c__async2))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="01eab-155">Serializar o conteúdo HTTP e retornar um fluxo que representa o conteúdo como uma operação assíncrona.</span><span class="sxs-lookup"><span data-stu-id="01eab-155">Serialize the HTTP content and return a stream that represents the content as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="01eab-156">O objeto de tarefa que representa a operação assíncrona.</span><span class="sxs-lookup"><span data-stu-id="01eab-156">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01eab-157">Essa operação não será bloqueada.</span><span class="sxs-lookup"><span data-stu-id="01eab-157">This operation will not block.</span></span> <span data-ttu-id="01eab-158">Retornado <xref:System.Threading.Tasks.Task%601> objeto será concluída após todo o fluxo que representa conteúdo foi lido.</span><span class="sxs-lookup"><span data-stu-id="01eab-158">The returned <xref:System.Threading.Tasks.Task%601> object will complete after all of the stream that represents content has been read.</span></span>  
  
 <span data-ttu-id="01eab-159">Quando a operação for concluída, o <xref:System.Threading.Tasks.Task%601.Result%2A> propriedade no objeto de tarefa retornada contém o fluxo que que representa o conteúdo HTTP.</span><span class="sxs-lookup"><span data-stu-id="01eab-159">Once the operation completes, the  <xref:System.Threading.Tasks.Task%601.Result%2A> property on the returned task object contains the stream that that represents the HTTP content.</span></span> <span data-ttu-id="01eab-160">O fluxo retornado, em seguida, pode ser usado para ler o conteúdo usando o fluxo de várias APIs.</span><span class="sxs-lookup"><span data-stu-id="01eab-160">The returned stream can then be used to read the content using various stream APIs.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsStringAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; ReadAsStringAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; ReadAsStringAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContent.ReadAsStringAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadAsStringAsync () As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::String ^&gt; ^ ReadAsStringAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Net.Http.HttpContent/&lt;ReadAsStringAsync&gt;c__async4))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="01eab-161">Serialize o conteúdo HTTP em uma cadeia de caracteres como uma operação assíncrona.</span><span class="sxs-lookup"><span data-stu-id="01eab-161">Serialize the HTTP content to a string as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="01eab-162">O objeto de tarefa que representa a operação assíncrona.</span><span class="sxs-lookup"><span data-stu-id="01eab-162">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01eab-163">Essa operação não será bloqueada.</span><span class="sxs-lookup"><span data-stu-id="01eab-163">This operation will not block.</span></span> <span data-ttu-id="01eab-164">Retornado <xref:System.Threading.Tasks.Task%601> objeto será concluída após todo o conteúdo foi gravado como uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="01eab-164">The returned <xref:System.Threading.Tasks.Task%601> object will complete after all of the content has been written as a string.</span></span>  
  
 <span data-ttu-id="01eab-165">Quando a operação for concluída, o <xref:System.Threading.Tasks.Task%601.Result%2A> propriedade no objeto retornado de tarefa contém a cadeia de caracteres com o conteúdo HTTP.</span><span class="sxs-lookup"><span data-stu-id="01eab-165">Once the operation completes, the  <xref:System.Threading.Tasks.Task%601.Result%2A> property on the returned task object contains the string with the HTTP content.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializeToStreamAsync">
      <MemberSignature Language="C#" Value="protected internal abstract System.Threading.Tasks.Task SerializeToStreamAsync (System.IO.Stream stream, System.Net.TransportContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Threading.Tasks.Task SerializeToStreamAsync(class System.IO.Stream stream, class System.Net.TransportContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Threading::Tasks::Task ^ SerializeToStreamAsync(System::IO::Stream ^ stream, System::Net::TransportContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="context" Type="System.Net.TransportContext" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="01eab-166">O fluxo de destino.</span><span class="sxs-lookup"><span data-stu-id="01eab-166">The target stream.</span></span></param>
        <param name="context"><span data-ttu-id="01eab-167">Informações sobre o transporte (token da associação de canal, por exemplo).</span><span class="sxs-lookup"><span data-stu-id="01eab-167">Information about the transport (channel binding token, for example).</span></span> <span data-ttu-id="01eab-168">Esse parâmetro pode ser <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="01eab-168">This parameter may be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="01eab-169">Serialize o conteúdo HTTP em um fluxo como uma operação assíncrona.</span><span class="sxs-lookup"><span data-stu-id="01eab-169">Serialize the HTTP content to a stream as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="01eab-170">O objeto de tarefa que representa a operação assíncrona.</span><span class="sxs-lookup"><span data-stu-id="01eab-170">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01eab-171">Essa operação não será bloqueada.</span><span class="sxs-lookup"><span data-stu-id="01eab-171">This operation will not block.</span></span> <span data-ttu-id="01eab-172">Retornado <xref:System.Threading.Tasks.Task%601> objeto será concluída após todo o conteúdo foi foi serializado para o objeto de fluxo passado a `stream` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="01eab-172">The returned <xref:System.Threading.Tasks.Task%601> object will complete after all of the content has been serialized to the stream object passed in the `stream` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryComputeLength">
      <MemberSignature Language="C#" Value="protected internal abstract bool TryComputeLength (out long length);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool TryComputeLength([out] int64&amp; length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContent.TryComputeLength(System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function TryComputeLength (ByRef length As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract bool TryComputeLength([Runtime::InteropServices::Out] long % length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.Int64&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="length"><span data-ttu-id="01eab-173">Obtém o tamanho do conteúdo HTTP em bytes.</span><span class="sxs-lookup"><span data-stu-id="01eab-173">The length in bytes of the HTTP content.</span></span></param>
        <summary><span data-ttu-id="01eab-174">Determina se o conteúdo HTTP tem um tamanho válido em bytes.</span><span class="sxs-lookup"><span data-stu-id="01eab-174">Determines whether the HTTP content has a valid length in bytes.</span></span></summary>
        <returns>
          <span data-ttu-id="01eab-175"><see langword="true" /> se <paramref name="length" /> for um comprimento válido; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="01eab-175"><see langword="true" /> if <paramref name="length" /> is a valid length; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01eab-176">O <xref:System.Net.Http.HttpContent.TryComputeLength%2A> método permite que um conteúdo HTTP para calcular o tamanho do conteúdo.</span><span class="sxs-lookup"><span data-stu-id="01eab-176">The <xref:System.Net.Http.HttpContent.TryComputeLength%2A> method gives a HTTP content the ability to calculate the content length.</span></span> <span data-ttu-id="01eab-177">Isso é útil para tipos de conteúdo que pode facilmente calcular o tamanho do conteúdo.</span><span class="sxs-lookup"><span data-stu-id="01eab-177">This is useful for content types which are able to easily calculate the content length.</span></span> <span data-ttu-id="01eab-178">Se o comprimento do conteúdo não é possível ou cara (exigiria que o sistema para todo o conteúdo em que a serialização poderia ser caro ou exigem que o sistema para alocar muita memória do buffer) de computação, esse método pode retornar `false`.</span><span class="sxs-lookup"><span data-stu-id="01eab-178">If computing the content length is not possible or expensive (would require the system to buffer the whole content where the serialization would be expensive or require the system to allocate a lot of memory), this method can return `false`.</span></span> <span data-ttu-id="01eab-179">Se esse método retornar `false`, isso significa que é necessária a transferência em partes ou o conteúdo deve obter armazenados em buffer antes de serem enviados ao servidor.</span><span class="sxs-lookup"><span data-stu-id="01eab-179">If this method returns `false`, this implies that either chunked transfer is needed or the content must get buffered before being sent to the server.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>