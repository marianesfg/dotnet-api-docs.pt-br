<Type Name="ImageSourceTypeConverter" FullName="System.Windows.Xps.Serialization.ImageSourceTypeConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2d4949d12ec489a9ff0a266f599621de96df6ed6" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30668950" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ImageSourceTypeConverter : System.ComponentModel.ExpandableObjectConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ImageSourceTypeConverter extends System.ComponentModel.ExpandableObjectConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Xps.Serialization.ImageSourceTypeConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class ImageSourceTypeConverter&#xA;Inherits ExpandableObjectConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImageSourceTypeConverter : System::ComponentModel::ExpandableObjectConverter" />
  <AssemblyInfo>
    <AssemblyName>ReachFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.ExpandableObjectConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornece conversores de tipo para converter objetos <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> para e de objetos de outros tipos.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Consulte as classes base <xref:System.ComponentModel.TypeConverter> e <xref:System.ComponentModel.ExpandableObjectConverter> para notas importantes de uso.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImageSourceTypeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.Serialization.ImageSourceTypeConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImageSourceTypeConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Xps.Serialization.ImageSourceTypeConverter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Consulte as classes base <xref:System.ComponentModel.TypeConverter> e <xref:System.ComponentModel.ExpandableObjectConverter> para notas importantes de uso.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.Serialization.ImageSourceTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Um objeto que fornece informações contextuais.</param>
        <param name="sourceType">O tipo de objeto a converter.</param>
        <summary>Retorna um valor que indica se esse conversor pode converter uma instância de um tipo especificado para um <see cref="T:System.Windows.Media.Imaging.BitmapSource" />.</summary>
        <returns>
          <see langword="true" /> se objetos do tipo especificado puderem ser convertidos, caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Conforme implementado nesta classe, este método retorna `true` somente se `sourceType` é um <xref:System.Uri>.  
  
 O `context` parâmetro não for usado. Consulte **observações para herdeiros**.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Substitua este método para fornecer seus próprios requisitos de conversão. Use o <paramref name="context" /> parâmetro para extrair informações adicionais sobre o ambiente do qual este conversor é invocado. Esse parâmetro pode ser <see langword="null" />; portanto, sempre verifique a ele. Além disso, propriedades de <paramref name="context" /> objeto pode retornar uma referência nula (<see langword="Nothing" />).</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.Serialization.ImageSourceTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Um objeto que fornece informações contextuais.</param>
        <param name="destinationType">O tipo de objeto no qual você deseja converter um <see cref="T:System.Windows.Media.Imaging.BitmapSource" />.</param>
        <summary>Retorna um valor que indica se esse <see cref="T:System.Windows.Xps.Serialization.ImageSourceTypeConverter" /> pode converter um <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> em uma instância de um tipo especificado.</summary>
        <returns>
          <see langword="true" /> se a conversão for possível; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Conforme implementado nesta classe, este método retorna `true` somente se `destinationType` é um <xref:System.Uri>.  
  
 O `context` parâmetro não for usado. Consulte **observações para herdeiros**.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Substitua este método para fornecer seus próprios requisitos de conversão. Use o <paramref name="context" /> parâmetro para extrair informações adicionais sobre o ambiente do qual este conversor é invocado. Esse parâmetro pode ser <see langword="null" />; portanto, sempre verifique a ele. Além disso, propriedades de <paramref name="context" /> objeto pode retornar uma referência nula (<see langword="Nothing" />).</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.Serialization.ImageSourceTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">Um objeto que fornece informações contextuais.</param>
        <param name="culture">O idioma e cultura que são usados durante a conversão.</param>
        <param name="value">O objeto que é convertido.</param>
        <summary>Converte um objeto especificado em um <see cref="T:System.Windows.Media.Imaging.BitmapSource" />.</summary>
        <returns>O novo objeto <see cref="T:System.Windows.Media.Imaging.BitmapSource" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método não está implementado nesta classe — exceto ao lançar exceções. Consulte **observações para herdeiros**.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Este método é chamado dessa classe e não de uma classe derivada.</exception>
        <exception cref="T:System.ArgumentNullException">O <paramref name="value" /> é <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">O <paramref name="value" /> não é um tipo que pode ser convertido.</exception>
        <block subset="none" type="overrides">
          <para>Substitua este método para fornecer um método de conversão. Use o <paramref name="context" /> parâmetro para extrair informações adicionais sobre o ambiente do qual este conversor é invocado. Use o <paramref name="culture" /> parâmetro para fornecer informações sobre o idioma ou cultura.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.Serialization.ImageSourceTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Um objeto que fornece informações contextuais.</param>
        <param name="culture">O idioma e cultura que são usados durante a conversão.</param>
        <param name="value">O objeto que você deseja converter.</param>
        <param name="destinationType">O tipo para o qual <c>value</c> será convertido.</param>
        <summary>Converte um <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> em um objeto do tipo especificado.</summary>
        <returns>O novo <see cref="T:System.Object" /> do tipo designado. Conforme implementado nesta classe, o objeto deve ser um <see cref="T:System.Uri" />. O objeto expressa o [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] da imagem serializada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Conforme implementado nesta classe `value` deve ser um <xref:System.Windows.Media.Imaging.BitmapSource>.  
  
 Conforme implementado nesta classe `destinationType` deve ser um <xref:System.Uri> ou <xref:System.NotSupportedException> é gerada.  
  
 O `culture` parâmetro não for usado. Consulte **observações para herdeiros**.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">O <paramref name="destinationType" /> não é um tipo no qual <paramref name="value" /> pode ser convertido.</exception>
        <exception cref="T:System.ArgumentNullException">O <paramref name="context" /> é <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">O <paramref name="value" /> é <see langword="null" />.</exception>
        <exception cref="T:System.Windows.Xps.XpsSerializationException">Ocorre um erro ao serializar a imagem.</exception>
        <block subset="none" type="overrides">
          <para>Substitua este método para fornecer sua própria conversão. Use o <paramref name="culture" /> parâmetro para especificar o idioma e cultura. Use o <paramref name="context" /> parâmetro para extrair informações adicionais sobre o ambiente do qual este conversor é invocado. Esse parâmetro pode ser <see langword="null" />; portanto, sempre verifique a ele. Além disso, propriedades de <paramref name="context" /> objeto pode retornar uma referência nula (<see langword="Nothing" />).</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object value, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.Serialization.ImageSourceTypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProperties (context As ITypeDescriptorContext, value As Object, attributes As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="context">Um objeto que fornece informações contextuais.</param>
        <param name="value">Um objeto para o qual você precisa de descrições de propriedade.</param>
        <param name="attributes">Uma matriz de atributos usados para filtrar a coleção retornada para excluir as propriedades irrelevantes.</param>
        <summary>Obtém uma coleção de descrições de propriedade para o tipo especificado.</summary>
        <returns>Um <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> que contém as descrições de propriedade que são expostas para o componente ou <see langword="null" />, se nenhuma descrição de propriedade for retornada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método não está implementado nesta classe — exceto ao lançar a exceção. Consulte **observações para herdeiros**.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Este método é chamado dessa classe e não de uma classe derivada.</exception>
        <block subset="none" type="overrides">
          <para>Substitua este método para fornecer um método para a obtenção de selecionados <see cref="T:System.ComponentModel.PropertyDescriptor" /> objetos para os tipos. Use o <paramref name="context" /> parâmetro para extrair informações adicionais sobre o ambiente do qual este conversor é invocado. Use o <paramref name="attributes" /> matriz para designar as propriedades para incluir ou excluir.</para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>