<Type Name="PersistenceProvider" FullName="System.ServiceModel.Persistence.PersistenceProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ebe9bdbc77c412be76a9af2ba4f3d529de11c781" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48740311" /></Metadata><TypeSignature Language="C#" Value="public abstract class PersistenceProvider : System.ServiceModel.Channels.CommunicationObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PersistenceProvider extends System.ServiceModel.Channels.CommunicationObject" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Persistence.PersistenceProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PersistenceProvider&#xA;Inherits CommunicationObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class PersistenceProvider abstract : System::ServiceModel::Channels::CommunicationObject" />
  <TypeSignature Language="F#" Value="type PersistenceProvider = class&#xA;    inherit CommunicationObject" />
  <AssemblyInfo>
    <AssemblyName>System.WorkflowServices</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.CommunicationObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The WF3 types are deprecated.  Instead, please use the new WF4 types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="27827-101">A classe base abstrata da qual são derivados todos os provedores de persistência de serviço durável.</span><span class="sxs-lookup"><span data-stu-id="27827-101">The abstract base class from which all durable service persistence providers are derived.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27827-102">Os usuários podem criar classes derivadas desse tipo para criar provedores de persistência de serviço durável que usam armazenamentos de persistência personalizado, como bancos de dados de terceiros, o sistema de arquivos ou sistemas de armazenamento acessados remotamente.</span><span class="sxs-lookup"><span data-stu-id="27827-102">Users can create classes derived from this type to create durable service persistence providers that use custom persistence stores, such as third-party databases, the file system, or storage systems accessed remotely.</span></span> <span data-ttu-id="27827-103">Para criar uma implementação fornecida pelo sistema desse tipo que usa o Microsoft SQL Server como um repositório de persistência, consulte <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory>.</span><span class="sxs-lookup"><span data-stu-id="27827-103">To create a system-provided implementation of this type that uses Microsoft SQL Server as a persistence store, see <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="27827-104">Ao criar implementações do provedor de persistência, é importante manter a identidade do thread original nos métodos do novo provedor (tais como <xref:System.ServiceModel.Persistence.PersistenceProvider.Load%2A>.</span><span class="sxs-lookup"><span data-stu-id="27827-104">When creating persistence provider implementations, it is important to maintain the thread's original identity in the new provider's methods (such as <xref:System.ServiceModel.Persistence.PersistenceProvider.Load%2A>.</span></span> <span data-ttu-id="27827-105">Caso contrário, brechas de segurança podem ser criadas, porque as operações, em seguida, será executado sob a identidade incorreta.</span><span class="sxs-lookup"><span data-stu-id="27827-105">Otherwise, security loopholes could be created, because operations would then run under the wrong identity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27827-106">Para uma implementação desse tipo que usa o sistema de arquivos como um repositório de persistência, consulte o arquivo de FilePersistenceProviderFactory.cs na amostra DurableServiceFactory SDK.</span><span class="sxs-lookup"><span data-stu-id="27827-106">For an implementation of this type that uses the file system as a persistence store, see the FilePersistenceProviderFactory.cs file in the DurableServiceFactory SDK sample.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PersistenceProvider (Guid id);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.Guid id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.#ctor(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (id As Guid)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PersistenceProvider(Guid id);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Persistence.PersistenceProvider : Guid -&gt; System.ServiceModel.Persistence.PersistenceProvider" Usage="new System.ServiceModel.Persistence.PersistenceProvider id" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="id" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="id"><span data-ttu-id="27827-107">O identificador exclusivo dos dados de estado do serviço que estão sendo salvos.</span><span class="sxs-lookup"><span data-stu-id="27827-107">The unique identifier of the service state data being saved.</span></span></param>
        <summary><span data-ttu-id="27827-108">Quando implementado em uma classe derivada, inicializa uma nova instância da classe <see cref="T:System.ServiceModel.Persistence.PersistenceProvider" />.</span><span class="sxs-lookup"><span data-stu-id="27827-108">When implemented in a derived class, initializes a new instance of the <see cref="T:System.ServiceModel.Persistence.PersistenceProvider" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="27827-109">O código a seguir demonstra como usar o <xref:System.ServiceModel.Persistence.PersistenceProvider> construtor.</span><span class="sxs-lookup"><span data-stu-id="27827-109">The following code demonstrates how to use the <xref:System.ServiceModel.Persistence.PersistenceProvider> constructor.</span></span> <span data-ttu-id="27827-110">Este exemplo de código é parte do exemplo do arquivo FilePersistenceProviderFactory.cs DurableServiceFactory SDK.</span><span class="sxs-lookup"><span data-stu-id="27827-110">This code example is part of the DurableServiceFactory SDK sample from the FilePersistenceProviderFactory.cs file.</span></span> <span data-ttu-id="27827-111">Para obter mais informações, consulte o exemplo de SDK DurableServiceFactory.</span><span class="sxs-lookup"><span data-stu-id="27827-111">For more information, see the DurableServiceFactory SDK sample.</span></span>  
  
 [!code-csharp[PersistenceProvider#0](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCreate">
      <MemberSignature Language="C#" Value="public abstract IAsyncResult BeginCreate (object instance, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginCreate(object instance, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BeginCreate (instance As Object, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract IAsyncResult ^ BeginCreate(System::Object ^ instance, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginCreate : obj * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="persistenceProvider.BeginCreate (instance, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="27827-112">O estado da instância real.</span><span class="sxs-lookup"><span data-stu-id="27827-112">The actual instance state.</span></span></param>
        <param name="timeout"><span data-ttu-id="27827-113">O período após o qual o provedor de persistência anula esta tentativa.</span><span class="sxs-lookup"><span data-stu-id="27827-113">The time period after which the persistence provider aborts this attempt.</span></span></param>
        <param name="callback"><span data-ttu-id="27827-114">O método a ser chamado quando a operação for concluída.</span><span class="sxs-lookup"><span data-stu-id="27827-114">The method to be called when the operation is completed.</span></span></param>
        <param name="state"><span data-ttu-id="27827-115">Um objeto fornecido pelo usuário que distingue essa operação assíncrona específica de outras operações.</span><span class="sxs-lookup"><span data-stu-id="27827-115">A user-provided object that distinguishes this particular asynchronous operation from other operations.</span></span></param>
        <summary><span data-ttu-id="27827-116">Quando implementado em uma classe derivada, representa o início da fase Create.</span><span class="sxs-lookup"><span data-stu-id="27827-116">When implemented in a derived class, represents the beginning of the Create phase.</span></span> <span data-ttu-id="27827-117">A fase Create ocorre quando os registros de instância de serviço são criados pela primeira vez no repositório de persistência.</span><span class="sxs-lookup"><span data-stu-id="27827-117">The Create phase occurs when service instance records are first created in the persistence store.</span></span></summary>
        <returns><span data-ttu-id="27827-118">O estado da chamada assíncrona de método <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="27827-118">The state of the <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" /> asynchronous method call.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="27827-119">O código a seguir demonstra como implementar o <xref:System.ServiceModel.Persistence.PersistenceProvider.BeginCreate%2A> método.</span><span class="sxs-lookup"><span data-stu-id="27827-119">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.BeginCreate%2A> method.</span></span>  
  
 [!code-csharp[PersistenceProvider#14](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginDelete">
      <MemberSignature Language="C#" Value="public abstract IAsyncResult BeginDelete (object instance, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginDelete(object instance, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.BeginDelete(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BeginDelete (instance As Object, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract IAsyncResult ^ BeginDelete(System::Object ^ instance, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginDelete : obj * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="persistenceProvider.BeginDelete (instance, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="27827-120">O estado da instância real.</span><span class="sxs-lookup"><span data-stu-id="27827-120">The actual instance state.</span></span></param>
        <param name="timeout"><span data-ttu-id="27827-121">O período após o qual o provedor de persistência anula esta tentativa.</span><span class="sxs-lookup"><span data-stu-id="27827-121">The time period after which the persistence provider aborts this attempt.</span></span></param>
        <param name="callback"><span data-ttu-id="27827-122">O método a ser chamado quando a operação for concluída.</span><span class="sxs-lookup"><span data-stu-id="27827-122">The method to be called when the operation is completed.</span></span></param>
        <param name="state"><span data-ttu-id="27827-123">Um objeto fornecido pelo usuário que distingue essa operação assíncrona específica de outras operações.</span><span class="sxs-lookup"><span data-stu-id="27827-123">A user-provided object that distinguishes this particular asynchronous operation from other operations.</span></span></param>
        <summary><span data-ttu-id="27827-124">Quando implementado em uma classe derivada, representa o início da fase Delete.</span><span class="sxs-lookup"><span data-stu-id="27827-124">When implemented in a derived class, represents the beginning of the Delete phase.</span></span> <span data-ttu-id="27827-125">A fase Delete ocorre quando os dados de estado de serviço são excluídos permanentemente do repositório de persistência.</span><span class="sxs-lookup"><span data-stu-id="27827-125">The Delete phase occurs when service state data is permanently deleted from the persistence store.</span></span></summary>
        <returns><span data-ttu-id="27827-126">O estado da chamada assíncrona de método <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginDelete(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="27827-126">The state of the <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginDelete(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" /> asynchronous method call.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="27827-127">O código a seguir demonstra como implementar o `BeginDelete` método.</span><span class="sxs-lookup"><span data-stu-id="27827-127">The following code demonstrates how to implement the `BeginDelete` method.</span></span> <span data-ttu-id="27827-128">Este exemplo de código é parte do exemplo do arquivo FilePersistenceProviderFactory.cs DurableServiceFactory SDK.</span><span class="sxs-lookup"><span data-stu-id="27827-128">This code example is part of the DurableServiceFactory SDK sample from the FilePersistenceProviderFactory.cs file.</span></span> <span data-ttu-id="27827-129">Para obter mais informações, consulte o exemplo de SDK DurableServiceFactory.</span><span class="sxs-lookup"><span data-stu-id="27827-129">For more information, see the DurableServiceFactory SDK sample.</span></span>  
  
 [!code-csharp[PersistenceProvider#6](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public abstract IAsyncResult BeginLoad (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginLoad(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BeginLoad (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract IAsyncResult ^ BeginLoad(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginLoad : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="persistenceProvider.BeginLoad (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="27827-130">O período após o qual o provedor de persistência anula esta tentativa.</span><span class="sxs-lookup"><span data-stu-id="27827-130">The time period after which the persistence provider aborts this attempt.</span></span></param>
        <param name="callback"><span data-ttu-id="27827-131">O método a ser chamado quando a operação for concluída.</span><span class="sxs-lookup"><span data-stu-id="27827-131">The method to be called when the operation is completed.</span></span></param>
        <param name="state"><span data-ttu-id="27827-132">Um objeto fornecido pelo usuário que distingue essa operação assíncrona específica de outras operações.</span><span class="sxs-lookup"><span data-stu-id="27827-132">A user-provided object that distinguishes this particular asynchronous operation from other operations.</span></span></param>
        <summary><span data-ttu-id="27827-133">Quando implementado em uma classe derivada, representa o início da fase Load.</span><span class="sxs-lookup"><span data-stu-id="27827-133">When implemented in a derived class, represents the beginning of the Load phase.</span></span> <span data-ttu-id="27827-134">A fase Load ocorre quando os dados de estado são carregados no provedor de persistência do repositório de persistência.</span><span class="sxs-lookup"><span data-stu-id="27827-134">The Load phase occurs when state data is loaded into the persistence provider from the persistence store.</span></span></summary>
        <returns><span data-ttu-id="27827-135">O estado da chamada assíncrona de método <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="27827-135">The state of the <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)" /> asynchronous method call.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="27827-136">O código a seguir demonstra como implementar o `BeginLoad` método.</span><span class="sxs-lookup"><span data-stu-id="27827-136">The following code demonstrates how to implement the `BeginLoad` method.</span></span> <span data-ttu-id="27827-137">Este exemplo de código é parte do exemplo do arquivo FilePersistenceProviderFactory.cs DurableServiceFactory SDK.</span><span class="sxs-lookup"><span data-stu-id="27827-137">This code example is part of the DurableServiceFactory SDK sample from the FilePersistenceProviderFactory.cs file.</span></span> <span data-ttu-id="27827-138">Para obter mais informações, consulte o exemplo de SDK DurableServiceFactory.</span><span class="sxs-lookup"><span data-stu-id="27827-138">For more information, see the DurableServiceFactory SDK sample.</span></span>  
  
 [!code-csharp[PersistenceProvider#7](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoadIfChanged">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginLoadIfChanged (TimeSpan timeout, object instanceToken, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginLoadIfChanged(valuetype System.TimeSpan timeout, object instanceToken, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginLoadIfChanged (timeout As TimeSpan, instanceToken As Object, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginLoadIfChanged(TimeSpan timeout, System::Object ^ instanceToken, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginLoadIfChanged : TimeSpan * obj * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginLoadIfChanged : TimeSpan * obj * AsyncCallback * obj -&gt; IAsyncResult" Usage="persistenceProvider.BeginLoadIfChanged (timeout, instanceToken, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="instanceToken" Type="System.Object" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="27827-139">O período após o qual o provedor de persistência anula esta tentativa.</span><span class="sxs-lookup"><span data-stu-id="27827-139">The time period after which the persistence provider aborts this attempt.</span></span></param>
        <param name="instanceToken"><span data-ttu-id="27827-140">O token retornado por um <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.Create(System.Object,System.TimeSpan)" /> ou <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.Update(System.Object,System.TimeSpan)" /> anterior que representa o estado atual mantido pelo chamador.</span><span class="sxs-lookup"><span data-stu-id="27827-140">The token returned by a previous <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.Create(System.Object,System.TimeSpan)" /> or <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.Update(System.Object,System.TimeSpan)" /> that represents the current state held by the caller.</span></span></param>
        <param name="callback"><span data-ttu-id="27827-141">O método a ser chamado quando a operação for concluída.</span><span class="sxs-lookup"><span data-stu-id="27827-141">The method to be called when the operation is completed.</span></span></param>
        <param name="state"><span data-ttu-id="27827-142">Um objeto fornecido pelo usuário que distingue essa operação assíncrona específica de outras operações.</span><span class="sxs-lookup"><span data-stu-id="27827-142">A user-provided object that distinguishes this particular asynchronous operation from other operations.</span></span></param>
        <summary><span data-ttu-id="27827-143">Quando implementado em uma classe derivada, representa o início da fase LoadIfChanged.</span><span class="sxs-lookup"><span data-stu-id="27827-143">When implemented in a derived class, represents the beginning of the LoadIfChanged phase.</span></span> <span data-ttu-id="27827-144">A fase LoadIfChanged ocorre quando os dados de estado são carregados no provedor de persistência do repositório de persistência e os dados de estado no repositório de persistência foram alterados.</span><span class="sxs-lookup"><span data-stu-id="27827-144">The LoadIfChanged phase occurs when state data is loaded into the persistence provider from the persistence store, and the state data in the persistence store has been changed.</span></span></summary>
        <returns><span data-ttu-id="27827-145">O estado da chamada assíncrona de método <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="27827-145">The state of the <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)" /> asynchronous method call.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="27827-146">O código a seguir demonstra como implementar o <xref:System.ServiceModel.Persistence.PersistenceProvider.BeginLoadIfChanged%2A> método.</span><span class="sxs-lookup"><span data-stu-id="27827-146">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.BeginLoadIfChanged%2A> method.</span></span>  
  
 [!code-csharp[PersistenceProvider#11](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginUpdate">
      <MemberSignature Language="C#" Value="public abstract IAsyncResult BeginUpdate (object instance, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginUpdate(object instance, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BeginUpdate (instance As Object, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract IAsyncResult ^ BeginUpdate(System::Object ^ instance, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginUpdate : obj * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="persistenceProvider.BeginUpdate (instance, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="27827-147">O estado da instância real.</span><span class="sxs-lookup"><span data-stu-id="27827-147">The actual instance state.</span></span></param>
        <param name="timeout"><span data-ttu-id="27827-148">O período após o qual o provedor de persistência anula esta tentativa.</span><span class="sxs-lookup"><span data-stu-id="27827-148">The time period after which the persistence provider aborts this attempt.</span></span></param>
        <param name="callback"><span data-ttu-id="27827-149">O método a ser chamado quando a operação for concluída.</span><span class="sxs-lookup"><span data-stu-id="27827-149">The method to be called when the operation is completed.</span></span></param>
        <param name="state"><span data-ttu-id="27827-150">Um objeto fornecido pelo usuário que distingue essa operação assíncrona específica de outras operações.</span><span class="sxs-lookup"><span data-stu-id="27827-150">A user-provided object that distinguishes this particular asynchronous operation from other operations.</span></span></param>
        <summary><span data-ttu-id="27827-151">Quando implementado em uma classe derivada, representa o início da fase Update.</span><span class="sxs-lookup"><span data-stu-id="27827-151">When implemented in a derived class, represents the beginning of the Update phase.</span></span> <span data-ttu-id="27827-152">A fase Update ocorre quando os dados de estado do serviço são atualizados no repositório de persistência.</span><span class="sxs-lookup"><span data-stu-id="27827-152">The Update phase occurs when service state data is updated in the persistence store.</span></span></summary>
        <returns><span data-ttu-id="27827-153">O estado da chamada assíncrona de método <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="27827-153">The state of the <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" /> asynchronous method call.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="27827-154">O código a seguir demonstra como implementar o <xref:System.ServiceModel.Persistence.PersistenceProvider.BeginUpdate%2A> método.</span><span class="sxs-lookup"><span data-stu-id="27827-154">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.BeginUpdate%2A> method.</span></span>  
  
 [!code-csharp[PersistenceProvider#17](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public abstract object Create (object instance, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Create(object instance, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.Create(System.Object,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Create (instance As Object, timeout As TimeSpan) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ Create(System::Object ^ instance, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Create : obj * TimeSpan -&gt; obj" Usage="persistenceProvider.Create (instance, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="27827-155">O estado da instância real.</span><span class="sxs-lookup"><span data-stu-id="27827-155">The actual instance state.</span></span></param>
        <param name="timeout"><span data-ttu-id="27827-156">O período após o qual o provedor de persistência anula esta tentativa.</span><span class="sxs-lookup"><span data-stu-id="27827-156">The time period after which the persistence provider aborts this attempt.</span></span></param>
        <summary><span data-ttu-id="27827-157">Quando implementado em uma classe derivada, cria um registro de estado do serviço no repositório de persistência.</span><span class="sxs-lookup"><span data-stu-id="27827-157">When implemented in a derived class, creates a service state record in the persistence store.</span></span></summary>
        <returns><span data-ttu-id="27827-158">O token de instância correspondente ao estado recém-salvo.</span><span class="sxs-lookup"><span data-stu-id="27827-158">The instance token corresponding to the state just saved.</span></span> <span data-ttu-id="27827-159">Isso pode ser passado para <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" /> para determinar se o estado no repositório de persistência é diferente do estado de quando Create foi chamado.</span><span class="sxs-lookup"><span data-stu-id="27827-159">This can be passed to <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" /> to determine whether the state in the persistence store differs from the state when Create was called.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="27827-160">O código a seguir demonstra como implementar o <xref:System.ServiceModel.Persistence.PersistenceProvider.Create%2A> método.</span><span class="sxs-lookup"><span data-stu-id="27827-160">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.Create%2A> method.</span></span>  
  
 [!code-csharp[PersistenceProvider#15](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public abstract void Delete (object instance, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete(object instance, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.Delete(System.Object,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Delete (instance As Object, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Delete(System::Object ^ instance, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Delete : obj * TimeSpan -&gt; unit" Usage="persistenceProvider.Delete (instance, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="27827-161">O estado da instância real.</span><span class="sxs-lookup"><span data-stu-id="27827-161">The actual instance state.</span></span></param>
        <param name="timeout"><span data-ttu-id="27827-162">O período após o qual o provedor de persistência anula esta tentativa.</span><span class="sxs-lookup"><span data-stu-id="27827-162">The time period after which the persistence provider aborts this attempt.</span></span></param>
        <summary><span data-ttu-id="27827-163">Quando implementado em uma classe derivada, exclui permanentemente as informações de estado do serviço do repositório de persistência.</span><span class="sxs-lookup"><span data-stu-id="27827-163">When implemented in a derived class, permanently deletes service state information from the persistence store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="27827-164">O código a seguir demonstra como implementar o <xref:System.ServiceModel.Persistence.PersistenceProvider.Delete%2A> método.</span><span class="sxs-lookup"><span data-stu-id="27827-164">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.Delete%2A> method.</span></span> <span data-ttu-id="27827-165">Este exemplo de código é parte do exemplo do arquivo FilePersistenceProviderFactory.cs DurableServiceFactory SDK.</span><span class="sxs-lookup"><span data-stu-id="27827-165">This code example is part of the DurableServiceFactory SDK sample from the FilePersistenceProviderFactory.cs file.</span></span> <span data-ttu-id="27827-166">Para obter mais informações, consulte o exemplo de SDK DurableServiceFactory.</span><span class="sxs-lookup"><span data-stu-id="27827-166">For more information, see the DurableServiceFactory SDK sample.</span></span>  
  
 [!code-csharp[PersistenceProvider#9](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndCreate">
      <MemberSignature Language="C#" Value="public abstract object EndCreate (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object EndCreate(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.EndCreate(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function EndCreate (result As IAsyncResult) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ EndCreate(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndCreate : IAsyncResult -&gt; obj" Usage="persistenceProvider.EndCreate result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="27827-167">Uma referência ao resultado da operação.</span><span class="sxs-lookup"><span data-stu-id="27827-167">A reference to the result of the operation.</span></span></param>
        <summary><span data-ttu-id="27827-168">Quando implementado em uma classe derivada, representa o término da fase Create.</span><span class="sxs-lookup"><span data-stu-id="27827-168">When implemented in a derived class, represents the end of the Create phase.</span></span> <span data-ttu-id="27827-169">A fase Create ocorre quando os registros de estado de serviço são criados pela primeira vez no repositório de persistência.</span><span class="sxs-lookup"><span data-stu-id="27827-169">The Create phase occurs when service state records are first created in the persistence store.</span></span></summary>
        <returns><span data-ttu-id="27827-170">O token de instância correspondente ao estado recém-salvo.</span><span class="sxs-lookup"><span data-stu-id="27827-170">The instance token corresponding to the state just saved.</span></span> <span data-ttu-id="27827-171">Isso pode ser passado para <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" /> para determinar se o estado no repositório de persistência é diferente do estado de quando Create foi chamado.</span><span class="sxs-lookup"><span data-stu-id="27827-171">This can be passed to <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" /> to determine whether the state in the persistence store differs from the state when Create was called.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="27827-172">O código a seguir demonstra como implementar o <xref:System.ServiceModel.Persistence.PersistenceProvider.EndCreate%2A> método.</span><span class="sxs-lookup"><span data-stu-id="27827-172">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.EndCreate%2A> method.</span></span>  
  
 [!code-csharp[PersistenceProvider#16](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndDelete">
      <MemberSignature Language="C#" Value="public abstract void EndDelete (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndDelete(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.EndDelete(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub EndDelete (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void EndDelete(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndDelete : IAsyncResult -&gt; unit" Usage="persistenceProvider.EndDelete result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="27827-173">Uma referência ao resultado da operação.</span><span class="sxs-lookup"><span data-stu-id="27827-173">A reference to the result of the operation.</span></span></param>
        <summary><span data-ttu-id="27827-174">Quando implementado em uma classe derivada, representa o término da fase Delete.</span><span class="sxs-lookup"><span data-stu-id="27827-174">When implemented in a derived class, represents the end of the Delete phase.</span></span> <span data-ttu-id="27827-175">A fase Delete ocorre quando os dados de estado são excluídos permanentemente do repositório de persistência.</span><span class="sxs-lookup"><span data-stu-id="27827-175">The Delete phase occurs when state data is permanently deleted from the persistence store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="27827-176">O código a seguir demonstra como implementar o <xref:System.ServiceModel.Persistence.PersistenceProvider.EndDelete%2A> método.</span><span class="sxs-lookup"><span data-stu-id="27827-176">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.EndDelete%2A> method.</span></span> <span data-ttu-id="27827-177">Este exemplo de código é parte do exemplo do arquivo FilePersistenceProviderFactory.cs DurableServiceFactory SDK.</span><span class="sxs-lookup"><span data-stu-id="27827-177">This code example is part of the DurableServiceFactory SDK sample from the FilePersistenceProviderFactory.cs file.</span></span> <span data-ttu-id="27827-178">Para obter mais informações, consulte o exemplo de SDK DurableServiceFactory.</span><span class="sxs-lookup"><span data-stu-id="27827-178">For more information, see the DurableServiceFactory SDK sample.</span></span>  
  
 [!code-csharp[PersistenceProvider#5](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndLoad">
      <MemberSignature Language="C#" Value="public abstract object EndLoad (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object EndLoad(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.EndLoad(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function EndLoad (result As IAsyncResult) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ EndLoad(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndLoad : IAsyncResult -&gt; obj" Usage="persistenceProvider.EndLoad result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="27827-179">Uma referência ao resultado da operação.</span><span class="sxs-lookup"><span data-stu-id="27827-179">A reference to the result of the operation.</span></span></param>
        <summary><span data-ttu-id="27827-180">Quando implementado em uma classe derivada, representa o término da fase Load.</span><span class="sxs-lookup"><span data-stu-id="27827-180">When implemented in a derived class, represents the end of the Load phase.</span></span> <span data-ttu-id="27827-181">A fase Load ocorre quando os dados de estado são carregados no provedor de persistência do repositório de persistência.</span><span class="sxs-lookup"><span data-stu-id="27827-181">The Load phase occurs when state data is loaded into the persistence provider from the persistence store.</span></span></summary>
        <returns><span data-ttu-id="27827-182">As informações de estado do serviço.</span><span class="sxs-lookup"><span data-stu-id="27827-182">The service state information.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="27827-183">O código a seguir demonstra como usar o `EndLoad` método.</span><span class="sxs-lookup"><span data-stu-id="27827-183">The following code demonstrates how to use the `EndLoad` method.</span></span> <span data-ttu-id="27827-184">Este exemplo de código é parte do exemplo do arquivo FilePersistenceProviderFactory.cs DurableServiceFactory SDK.</span><span class="sxs-lookup"><span data-stu-id="27827-184">This code example is part of the DurableServiceFactory SDK sample from the FilePersistenceProviderFactory.cs file.</span></span> <span data-ttu-id="27827-185">Para obter mais informações, consulte o exemplo de SDK DurableServiceFactory.</span><span class="sxs-lookup"><span data-stu-id="27827-185">For more information, see the DurableServiceFactory SDK sample.</span></span>  
  
 [!code-csharp[PersistenceProvider#1](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndLoadIfChanged">
      <MemberSignature Language="C#" Value="public virtual bool EndLoadIfChanged (IAsyncResult result, out object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EndLoadIfChanged(class System.IAsyncResult result, [out] object&amp; instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.EndLoadIfChanged(System.IAsyncResult,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndLoadIfChanged (result As IAsyncResult, ByRef instance As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool EndLoadIfChanged(IAsyncResult ^ result, [Runtime::InteropServices::Out] System::Object ^ % instance);" />
      <MemberSignature Language="F#" Value="abstract member EndLoadIfChanged : IAsyncResult *  -&gt; bool&#xA;override this.EndLoadIfChanged : IAsyncResult *  -&gt; bool" Usage="persistenceProvider.EndLoadIfChanged (result, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
        <Parameter Name="instance" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="27827-186">Uma referência ao resultado da operação.</span><span class="sxs-lookup"><span data-stu-id="27827-186">A reference to the result of the operation.</span></span></param>
        <param name="instance"><span data-ttu-id="27827-187">O estado da instância real.</span><span class="sxs-lookup"><span data-stu-id="27827-187">The actual instance state.</span></span></param>
        <summary><span data-ttu-id="27827-188">Quando implementado em uma classe derivada, representa o término da fase LoadIfChanged.</span><span class="sxs-lookup"><span data-stu-id="27827-188">When implemented in a derived class, represents the end of the LoadIfChanged phase.</span></span> <span data-ttu-id="27827-189">A fase LoadIfChanged ocorre quando os dados de estado são carregados no provedor de persistência do repositório de persistência e os dados de estado no repositório de persistência foram alterados.</span><span class="sxs-lookup"><span data-stu-id="27827-189">The LoadIfChanged phase occurs when state data is loaded into the persistence provider from the persistence store, and the state data in the persistence store has been changed.</span></span></summary>
        <returns><span data-ttu-id="27827-190"><see langword="true" /> se a instância com a qual o parâmetro <see langword="out" /> foi definido com a última cópia do repositório de persistência; <see langword="false" /> se o estado armazenado em cache localmente já está atualizado.</span><span class="sxs-lookup"><span data-stu-id="27827-190"><see langword="true" /> if the instance <see langword="out" /> parameter has been set with the latest copy from the persistence store; <see langword="false" /> if the locally cached state is already up-to-date.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="27827-191">O código a seguir demonstra como implementar o <xref:System.ServiceModel.Persistence.PersistenceProvider.EndLoadIfChanged%2A> método.</span><span class="sxs-lookup"><span data-stu-id="27827-191">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.EndLoadIfChanged%2A> method.</span></span>  
  
 [!code-csharp[PersistenceProvider#12](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndUpdate">
      <MemberSignature Language="C#" Value="public abstract object EndUpdate (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object EndUpdate(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.EndUpdate(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function EndUpdate (result As IAsyncResult) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ EndUpdate(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndUpdate : IAsyncResult -&gt; obj" Usage="persistenceProvider.EndUpdate result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="27827-192">Uma referência ao resultado da operação.</span><span class="sxs-lookup"><span data-stu-id="27827-192">A reference to the result of the operation.</span></span></param>
        <summary><span data-ttu-id="27827-193">Representa o fim da fase Update.</span><span class="sxs-lookup"><span data-stu-id="27827-193">Represents the end of the Update phase.</span></span> <span data-ttu-id="27827-194">A fase Update ocorre quando os registros de estado do serviço são atualizados no repositório de persistência.</span><span class="sxs-lookup"><span data-stu-id="27827-194">The Update phase occurs when service state records are updated in the persistence store.</span></span></summary>
        <returns><span data-ttu-id="27827-195">O token de instância correspondente ao estado recém-salvo.</span><span class="sxs-lookup"><span data-stu-id="27827-195">The instance token corresponding to the state just saved.</span></span> <span data-ttu-id="27827-196">Isso pode ser passado para <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" /> para determinar se o estado no repositório de persistência é diferente do estado de quando Create foi chamado.</span><span class="sxs-lookup"><span data-stu-id="27827-196">This can be passed to <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" /> to determine whether the state in the persistence store differs from the state when Create was called.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="27827-197">O código a seguir demonstra como implementar o <xref:System.ServiceModel.Persistence.PersistenceProvider.EndUpdate%2A> método.</span><span class="sxs-lookup"><span data-stu-id="27827-197">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.EndUpdate%2A> method.</span></span>  
  
 [!code-csharp[PersistenceProvider#19](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public Guid Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid Id" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Persistence.PersistenceProvider.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid Id { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : Guid" Usage="System.ServiceModel.Persistence.PersistenceProvider.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="27827-198">Representa o <see cref="T:System.Guid" /> associado a esta instância.</span><span class="sxs-lookup"><span data-stu-id="27827-198">Represents the <see cref="T:System.Guid" /> associated with this instance.</span></span></summary>
        <value><span data-ttu-id="27827-199">O GUID associado a esta instância.</span><span class="sxs-lookup"><span data-stu-id="27827-199">The GUID associated with this instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="27827-200">O código a seguir demonstra como usar o <xref:System.ServiceModel.Persistence.PersistenceProvider.Id%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="27827-200">The following code demonstrates how to use the <xref:System.ServiceModel.Persistence.PersistenceProvider.Id%2A> property.</span></span>  
  
 [!code-csharp[PersistenceProvider#10](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public abstract object Load (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Load(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.Load(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Load (timeout As TimeSpan) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ Load(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Load : TimeSpan -&gt; obj" Usage="persistenceProvider.Load timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="27827-201">O período após o qual o provedor de persistência anula esta tentativa.</span><span class="sxs-lookup"><span data-stu-id="27827-201">The time period after which the persistence provider aborts this attempt.</span></span></param>
        <summary><span data-ttu-id="27827-202">Quando implementado em uma classe derivada, carrega informações de estado do serviço do repositório de persistência.</span><span class="sxs-lookup"><span data-stu-id="27827-202">When implemented in a derived class, loads service state information from the persistence store.</span></span></summary>
        <returns><span data-ttu-id="27827-203">O estado da instância carregada.</span><span class="sxs-lookup"><span data-stu-id="27827-203">The loaded instance state.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27827-204">As alterações feitas à segurança do token no <xref:System.ServiceModel.Persistence.PersistenceProvider.Load%2A> método, se não revertido, mantenha-se em vigor para o restante da mensagem do processamento.</span><span class="sxs-lookup"><span data-stu-id="27827-204">Changes made to the security token in the <xref:System.ServiceModel.Persistence.PersistenceProvider.Load%2A> method, if not reverted, stay in effect for the remainder of that message's processing.</span></span> <span data-ttu-id="27827-205">Isso significa que o código do usuário da operação de serviço, o caminho de mensagem de resposta por meio de dispatcher, bem como qualquer caminho de erro, executado no contexto de segurança alterados.</span><span class="sxs-lookup"><span data-stu-id="27827-205">This means that the service operation's user code, the response message path through the dispatcher, as well as any error paths, run in the changed security context.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27827-206">O código a seguir demonstra como implementar o <xref:System.ServiceModel.Persistence.PersistenceProvider.Load%2A> método.</span><span class="sxs-lookup"><span data-stu-id="27827-206">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.Load%2A> method.</span></span> <span data-ttu-id="27827-207">Este exemplo de código é parte do exemplo do arquivo FilePersistenceProviderFactory.cs DurableServiceFactory SDK.</span><span class="sxs-lookup"><span data-stu-id="27827-207">This code example is part of the DurableServiceFactory SDK sample from the FilePersistenceProviderFactory.cs file.</span></span> <span data-ttu-id="27827-208">Para obter mais informações, consulte o exemplo de SDK DurableServiceFactory.</span><span class="sxs-lookup"><span data-stu-id="27827-208">For more information, see the DurableServiceFactory SDK sample.</span></span>  
  
 [!code-csharp[PersistenceProvider#3](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadIfChanged">
      <MemberSignature Language="C#" Value="public virtual bool LoadIfChanged (TimeSpan timeout, object instanceToken, out object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool LoadIfChanged(valuetype System.TimeSpan timeout, object instanceToken, [out] object&amp; instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LoadIfChanged (timeout As TimeSpan, instanceToken As Object, ByRef instance As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool LoadIfChanged(TimeSpan timeout, System::Object ^ instanceToken, [Runtime::InteropServices::Out] System::Object ^ % instance);" />
      <MemberSignature Language="F#" Value="abstract member LoadIfChanged : TimeSpan * obj *  -&gt; bool&#xA;override this.LoadIfChanged : TimeSpan * obj *  -&gt; bool" Usage="persistenceProvider.LoadIfChanged (timeout, instanceToken, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="instanceToken" Type="System.Object" />
        <Parameter Name="instance" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="27827-209">O período após o qual o provedor de persistência anula esta tentativa.</span><span class="sxs-lookup"><span data-stu-id="27827-209">The time period after which the persistence provider aborts this attempt.</span></span></param>
        <param name="instanceToken"><span data-ttu-id="27827-210">O token retornado por um <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.Create(System.Object,System.TimeSpan)" /> ou <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.Update(System.Object,System.TimeSpan)" /> anterior, que representa o estado atual mantido pelo chamador.</span><span class="sxs-lookup"><span data-stu-id="27827-210">The token returned by a previous <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.Create(System.Object,System.TimeSpan)" /> or <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.Update(System.Object,System.TimeSpan)" />, which represents the current state held by the caller.</span></span></param>
        <param name="instance"><span data-ttu-id="27827-211">O estado da instância real.</span><span class="sxs-lookup"><span data-stu-id="27827-211">The actual instance state.</span></span></param>
        <summary><span data-ttu-id="27827-212">Quando implementado em uma classe derivada, carrega informações de estado do serviço do repositório de persistência se esses dados foram alterados.</span><span class="sxs-lookup"><span data-stu-id="27827-212">When implemented in a derived class, loads service state information from the persistence store if that data has been changed.</span></span></summary>
        <returns><span data-ttu-id="27827-213"><see langword="true" /> se o parâmetro <paramref name="instance" /><see langword="out" /> foi definido com a última cópia do repositório de persistência; <see langword="false" /> se o estado armazenado em cache localmente já está atualizado.</span><span class="sxs-lookup"><span data-stu-id="27827-213"><see langword="true" /> if the <paramref name="instance" /><see langword="out" /> parameter has been set with the latest copy from the persistence store; <see langword="false" /> if the locally cached state is already up to date.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="27827-214">O código a seguir demonstra como implementar o <xref:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged%2A> método.</span><span class="sxs-lookup"><span data-stu-id="27827-214">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged%2A> method.</span></span>  
  
 [!code-csharp[PersistenceProvider#13](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public abstract object Update (object instance, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Update(object instance, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.Update(System.Object,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Update (instance As Object, timeout As TimeSpan) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ Update(System::Object ^ instance, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Update : obj * TimeSpan -&gt; obj" Usage="persistenceProvider.Update (instance, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="27827-215">O estado da instância real.</span><span class="sxs-lookup"><span data-stu-id="27827-215">The actual instance state.</span></span></param>
        <param name="timeout"><span data-ttu-id="27827-216">O período após o qual o provedor de persistência anula esta tentativa.</span><span class="sxs-lookup"><span data-stu-id="27827-216">The time period after which the persistence provider aborts this attempt.</span></span></param>
        <summary><span data-ttu-id="27827-217">Quando implementado em uma classe derivada, atualiza registros de estado do serviço no repositório de persistência.</span><span class="sxs-lookup"><span data-stu-id="27827-217">When implemented in a derived class, updates service state records in the persistence store.</span></span></summary>
        <returns><span data-ttu-id="27827-218">O token de instância correspondente ao estado recém-salvo.</span><span class="sxs-lookup"><span data-stu-id="27827-218">The instance token corresponding to the state just saved.</span></span> <span data-ttu-id="27827-219">Isso pode ser passado para <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" /> para determinar se o estado no repositório de persistência é diferente do estado de quando Create foi chamado.</span><span class="sxs-lookup"><span data-stu-id="27827-219">This can be passed to <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" /> to determine whether the state in the persistence store differs from the state when Create was called.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="27827-220">O código a seguir demonstra como implementar o <xref:System.ServiceModel.Persistence.PersistenceProvider.Update%2A> método.</span><span class="sxs-lookup"><span data-stu-id="27827-220">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.Update%2A> method.</span></span>  
  
 [!code-csharp[PersistenceProvider#18](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>