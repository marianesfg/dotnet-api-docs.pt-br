<Type Name="PersistenceProvider" FullName="System.ServiceModel.Persistence.PersistenceProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="47c79f6c0b41f17304c2993fb11979f822b05793" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class PersistenceProvider : System.ServiceModel.Channels.CommunicationObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PersistenceProvider extends System.ServiceModel.Channels.CommunicationObject" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Persistence.PersistenceProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PersistenceProvider&#xA;Inherits CommunicationObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class PersistenceProvider abstract : System::ServiceModel::Channels::CommunicationObject" />
  <AssemblyInfo>
    <AssemblyName>System.WorkflowServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.CommunicationObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("The WF3 types are deprecated.  Instead, please use the new WF4 types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="420df-101">A classe base abstrata da qual são derivados todos os provedores de persistência de serviço durável.</span>
      <span class="sxs-lookup">
        <span data-stu-id="420df-101">The abstract base class from which all durable service persistence providers are derived.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="420df-102">Os usuários podem criar classes derivadas desse tipo para criar provedores de persistência do serviço durável que usam repositórios de persistência personalizado, como bancos de dados de terceiros, o sistema de arquivos ou sistemas de armazenamento acessados remotamente.</span><span class="sxs-lookup"><span data-stu-id="420df-102">Users can create classes derived from this type to create durable service persistence providers that use custom persistence stores, such as third-party databases, the file system, or storage systems accessed remotely.</span></span> <span data-ttu-id="420df-103">Para criar uma implementação fornecido pelo sistema desse tipo que usa o Microsoft SQL Server como um repositório de persistência, consulte <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory>.</span><span class="sxs-lookup"><span data-stu-id="420df-103">To create a system-provided implementation of this type that uses Microsoft SQL Server as a persistence store, see <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="420df-104">Ao criar implementações do provedor de persistência, é importante manter a identidade original do thread em métodos do novo provedor (como <xref:System.ServiceModel.Persistence.PersistenceProvider.Load%2A>.</span><span class="sxs-lookup"><span data-stu-id="420df-104">When creating persistence provider implementations, it is important to maintain the thread's original identity in the new provider's methods (such as <xref:System.ServiceModel.Persistence.PersistenceProvider.Load%2A>.</span></span> <span data-ttu-id="420df-105">Caso contrário, brechas de segurança podem ser criadas porque as operações, em seguida, será executado sob a identidade incorreta.</span><span class="sxs-lookup"><span data-stu-id="420df-105">Otherwise, security loopholes could be created, because operations would then run under the wrong identity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="420df-106">Para uma implementação desse tipo que usa o sistema de arquivos como um repositório de persistência, consulte o arquivo de FilePersistenceProviderFactory.cs no exemplo DurableServiceFactory SDK.</span><span class="sxs-lookup"><span data-stu-id="420df-106">For an implementation of this type that uses the file system as a persistence store, see the FilePersistenceProviderFactory.cs file in the DurableServiceFactory SDK sample.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PersistenceProvider (Guid id);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.Guid id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.#ctor(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (id As Guid)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PersistenceProvider(Guid id);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="id" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="id">
          <span data-ttu-id="420df-107">O identificador exclusivo dos dados de estado do serviço que estão sendo salvos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-107">The unique identifier of the service state data being saved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="420df-108">Quando implementado em uma classe derivada, inicializa uma nova instância da classe <see cref="T:System.ServiceModel.Persistence.PersistenceProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-108">When implemented in a derived class, initializes a new instance of the <see cref="T:System.ServiceModel.Persistence.PersistenceProvider" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="420df-109">O código a seguir demonstra como usar o <xref:System.ServiceModel.Persistence.PersistenceProvider> construtor.</span><span class="sxs-lookup"><span data-stu-id="420df-109">The following code demonstrates how to use the <xref:System.ServiceModel.Persistence.PersistenceProvider> constructor.</span></span> <span data-ttu-id="420df-110">Este exemplo de código é parte do exemplo do arquivo FilePersistenceProviderFactory.cs DurableServiceFactory SDK.</span><span class="sxs-lookup"><span data-stu-id="420df-110">This code example is part of the DurableServiceFactory SDK sample from the FilePersistenceProviderFactory.cs file.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="420df-111"> o exemplo DurableServiceFactory SDK.</span><span class="sxs-lookup"><span data-stu-id="420df-111"> the DurableServiceFactory SDK sample.</span></span>  
  
 [!code-csharp[PersistenceProvider#0](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCreate">
      <MemberSignature Language="C#" Value="public abstract IAsyncResult BeginCreate (object instance, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginCreate(object instance, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BeginCreate (instance As Object, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract IAsyncResult ^ BeginCreate(System::Object ^ instance, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="420df-112">O estado da instância real.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-112">The actual instance state.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="420df-113">O período após o qual o provedor de persistência anula esta tentativa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-113">The time period after which the persistence provider aborts this attempt.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="420df-114">O método a ser chamado quando a operação for concluída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-114">The method to be called when the operation is completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="420df-115">Um objeto fornecido pelo usuário que distingue essa operação assíncrona específica de outras operações.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-115">A user-provided object that distinguishes this particular asynchronous operation from other operations.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="420df-116">Quando implementado em uma classe derivada, representa o início da fase Create.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-116">When implemented in a derived class, represents the beginning of the Create phase.</span>
          </span>
          <span data-ttu-id="420df-117">A fase Create ocorre quando os registros de instância de serviço são criados pela primeira vez no repositório de persistência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-117">The Create phase occurs when service instance records are first created in the persistence store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="420df-118">O estado da chamada assíncrona de método <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-118">The state of the <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" /> asynchronous method call.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="420df-119">O código a seguir demonstra como implementar o <xref:System.ServiceModel.Persistence.PersistenceProvider.BeginCreate%2A> método.</span><span class="sxs-lookup"><span data-stu-id="420df-119">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.BeginCreate%2A> method.</span></span>  
  
 [!code-csharp[PersistenceProvider#14](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginDelete">
      <MemberSignature Language="C#" Value="public abstract IAsyncResult BeginDelete (object instance, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginDelete(object instance, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.BeginDelete(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BeginDelete (instance As Object, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract IAsyncResult ^ BeginDelete(System::Object ^ instance, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="420df-120">O estado da instância real.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-120">The actual instance state.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="420df-121">O período após o qual o provedor de persistência anula esta tentativa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-121">The time period after which the persistence provider aborts this attempt.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="420df-122">O método a ser chamado quando a operação for concluída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-122">The method to be called when the operation is completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="420df-123">Um objeto fornecido pelo usuário que distingue essa operação assíncrona específica de outras operações.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-123">A user-provided object that distinguishes this particular asynchronous operation from other operations.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="420df-124">Quando implementado em uma classe derivada, representa o início da fase Delete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-124">When implemented in a derived class, represents the beginning of the Delete phase.</span>
          </span>
          <span data-ttu-id="420df-125">A fase Delete ocorre quando os dados de estado de serviço são excluídos permanentemente do repositório de persistência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-125">The Delete phase occurs when service state data is permanently deleted from the persistence store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="420df-126">O estado da chamada assíncrona de método <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginDelete(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-126">The state of the <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginDelete(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" /> asynchronous method call.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="420df-127">O código a seguir demonstra como implementar o `BeginDelete` método.</span><span class="sxs-lookup"><span data-stu-id="420df-127">The following code demonstrates how to implement the `BeginDelete` method.</span></span> <span data-ttu-id="420df-128">Este exemplo de código é parte do exemplo do arquivo FilePersistenceProviderFactory.cs DurableServiceFactory SDK.</span><span class="sxs-lookup"><span data-stu-id="420df-128">This code example is part of the DurableServiceFactory SDK sample from the FilePersistenceProviderFactory.cs file.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="420df-129"> o exemplo DurableServiceFactory SDK.</span><span class="sxs-lookup"><span data-stu-id="420df-129"> the DurableServiceFactory SDK sample.</span></span>  
  
 [!code-csharp[PersistenceProvider#6](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public abstract IAsyncResult BeginLoad (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginLoad(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BeginLoad (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract IAsyncResult ^ BeginLoad(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="420df-130">O período após o qual o provedor de persistência anula esta tentativa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-130">The time period after which the persistence provider aborts this attempt.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="420df-131">O método a ser chamado quando a operação for concluída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-131">The method to be called when the operation is completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="420df-132">Um objeto fornecido pelo usuário que distingue essa operação assíncrona específica de outras operações.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-132">A user-provided object that distinguishes this particular asynchronous operation from other operations.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="420df-133">Quando implementado em uma classe derivada, representa o início da fase Load.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-133">When implemented in a derived class, represents the beginning of the Load phase.</span>
          </span>
          <span data-ttu-id="420df-134">A fase Load ocorre quando os dados de estado são carregados no provedor de persistência do repositório de persistência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-134">The Load phase occurs when state data is loaded into the persistence provider from the persistence store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="420df-135">O estado da chamada assíncrona de método <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-135">The state of the <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)" /> asynchronous method call.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="420df-136">O código a seguir demonstra como implementar o `BeginLoad` método.</span><span class="sxs-lookup"><span data-stu-id="420df-136">The following code demonstrates how to implement the `BeginLoad` method.</span></span> <span data-ttu-id="420df-137">Este exemplo de código é parte do exemplo do arquivo FilePersistenceProviderFactory.cs DurableServiceFactory SDK.</span><span class="sxs-lookup"><span data-stu-id="420df-137">This code example is part of the DurableServiceFactory SDK sample from the FilePersistenceProviderFactory.cs file.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="420df-138"> o exemplo DurableServiceFactory SDK.</span><span class="sxs-lookup"><span data-stu-id="420df-138"> the DurableServiceFactory SDK sample.</span></span>  
  
 [!code-csharp[PersistenceProvider#7](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoadIfChanged">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginLoadIfChanged (TimeSpan timeout, object instanceToken, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginLoadIfChanged(valuetype System.TimeSpan timeout, object instanceToken, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginLoadIfChanged (timeout As TimeSpan, instanceToken As Object, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginLoadIfChanged(TimeSpan timeout, System::Object ^ instanceToken, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="instanceToken" Type="System.Object" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="420df-139">O período após o qual o provedor de persistência anula esta tentativa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-139">The time period after which the persistence provider aborts this attempt.</span>
          </span>
        </param>
        <param name="instanceToken">
          <span data-ttu-id="420df-140">O token retornado por um <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.Create(System.Object,System.TimeSpan)" /> ou <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.Update(System.Object,System.TimeSpan)" /> anterior que representa o estado atual mantido pelo chamador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-140">The token returned by a previous <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.Create(System.Object,System.TimeSpan)" /> or <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.Update(System.Object,System.TimeSpan)" /> that represents the current state held by the caller.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="420df-141">O método a ser chamado quando a operação for concluída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-141">The method to be called when the operation is completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="420df-142">Um objeto fornecido pelo usuário que distingue essa operação assíncrona específica de outras operações.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-142">A user-provided object that distinguishes this particular asynchronous operation from other operations.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="420df-143">Quando implementado em uma classe derivada, representa o início da fase LoadIfChanged.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-143">When implemented in a derived class, represents the beginning of the LoadIfChanged phase.</span>
          </span>
          <span data-ttu-id="420df-144">A fase LoadIfChanged ocorre quando os dados de estado são carregados no provedor de persistência do repositório de persistência e os dados de estado no repositório de persistência foram alterados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-144">The LoadIfChanged phase occurs when state data is loaded into the persistence provider from the persistence store, and the state data in the persistence store has been changed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="420df-145">O estado da chamada assíncrona de método <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-145">The state of the <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)" /> asynchronous method call.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="420df-146">O código a seguir demonstra como implementar o <xref:System.ServiceModel.Persistence.PersistenceProvider.BeginLoadIfChanged%2A> método.</span><span class="sxs-lookup"><span data-stu-id="420df-146">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.BeginLoadIfChanged%2A> method.</span></span>  
  
 [!code-csharp[PersistenceProvider#11](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginUpdate">
      <MemberSignature Language="C#" Value="public abstract IAsyncResult BeginUpdate (object instance, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginUpdate(object instance, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BeginUpdate (instance As Object, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract IAsyncResult ^ BeginUpdate(System::Object ^ instance, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="420df-147">O estado da instância real.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-147">The actual instance state.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="420df-148">O período após o qual o provedor de persistência anula esta tentativa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-148">The time period after which the persistence provider aborts this attempt.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="420df-149">O método a ser chamado quando a operação for concluída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-149">The method to be called when the operation is completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="420df-150">Um objeto fornecido pelo usuário que distingue essa operação assíncrona específica de outras operações.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-150">A user-provided object that distinguishes this particular asynchronous operation from other operations.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="420df-151">Quando implementado em uma classe derivada, representa o início da fase Update.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-151">When implemented in a derived class, represents the beginning of the Update phase.</span>
          </span>
          <span data-ttu-id="420df-152">A fase Update ocorre quando os dados de estado do serviço são atualizados no repositório de persistência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-152">The Update phase occurs when service state data is updated in the persistence store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="420df-153">O estado da chamada assíncrona de método <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-153">The state of the <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" /> asynchronous method call.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="420df-154">O código a seguir demonstra como implementar o <xref:System.ServiceModel.Persistence.PersistenceProvider.BeginUpdate%2A> método.</span><span class="sxs-lookup"><span data-stu-id="420df-154">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.BeginUpdate%2A> method.</span></span>  
  
 [!code-csharp[PersistenceProvider#17](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public abstract object Create (object instance, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Create(object instance, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.Create(System.Object,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Create (instance As Object, timeout As TimeSpan) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ Create(System::Object ^ instance, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="420df-155">O estado da instância real.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-155">The actual instance state.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="420df-156">O período após o qual o provedor de persistência anula esta tentativa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-156">The time period after which the persistence provider aborts this attempt.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="420df-157">Quando implementado em uma classe derivada, cria um registro de estado do serviço no repositório de persistência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-157">When implemented in a derived class, creates a service state record in the persistence store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="420df-158">O token de instância correspondente ao estado recém-salvo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-158">The instance token corresponding to the state just saved.</span>
          </span>
          <span data-ttu-id="420df-159">Isso pode ser passado para <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" /> para determinar se o estado no repositório de persistência é diferente do estado de quando Create foi chamado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-159">This can be passed to <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" /> to determine whether the state in the persistence store differs from the state when Create was called.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="420df-160">O código a seguir demonstra como implementar o <xref:System.ServiceModel.Persistence.PersistenceProvider.Create%2A> método.</span><span class="sxs-lookup"><span data-stu-id="420df-160">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.Create%2A> method.</span></span>  
  
 [!code-csharp[PersistenceProvider#15](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public abstract void Delete (object instance, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete(object instance, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.Delete(System.Object,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Delete (instance As Object, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Delete(System::Object ^ instance, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="420df-161">O estado da instância real.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-161">The actual instance state.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="420df-162">O período após o qual o provedor de persistência anula esta tentativa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-162">The time period after which the persistence provider aborts this attempt.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="420df-163">Quando implementado em uma classe derivada, exclui permanentemente as informações de estado do serviço do repositório de persistência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-163">When implemented in a derived class, permanently deletes service state information from the persistence store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="420df-164">O código a seguir demonstra como implementar o <xref:System.ServiceModel.Persistence.PersistenceProvider.Delete%2A> método.</span><span class="sxs-lookup"><span data-stu-id="420df-164">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.Delete%2A> method.</span></span> <span data-ttu-id="420df-165">Este exemplo de código é parte do exemplo do arquivo FilePersistenceProviderFactory.cs DurableServiceFactory SDK.</span><span class="sxs-lookup"><span data-stu-id="420df-165">This code example is part of the DurableServiceFactory SDK sample from the FilePersistenceProviderFactory.cs file.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="420df-166"> o exemplo DurableServiceFactory SDK.</span><span class="sxs-lookup"><span data-stu-id="420df-166"> the DurableServiceFactory SDK sample.</span></span>  
  
 [!code-csharp[PersistenceProvider#9](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndCreate">
      <MemberSignature Language="C#" Value="public abstract object EndCreate (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object EndCreate(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.EndCreate(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function EndCreate (result As IAsyncResult) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ EndCreate(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="420df-167">Uma referência ao resultado da operação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-167">A reference to the result of the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="420df-168">Quando implementado em uma classe derivada, representa o término da fase Create.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-168">When implemented in a derived class, represents the end of the Create phase.</span>
          </span>
          <span data-ttu-id="420df-169">A fase Create ocorre quando os registros de estado de serviço são criados pela primeira vez no repositório de persistência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-169">The Create phase occurs when service state records are first created in the persistence store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="420df-170">O token de instância correspondente ao estado recém-salvo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-170">The instance token corresponding to the state just saved.</span>
          </span>
          <span data-ttu-id="420df-171">Isso pode ser passado para <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" /> para determinar se o estado no repositório de persistência é diferente do estado de quando Create foi chamado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-171">This can be passed to <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" /> to determine whether the state in the persistence store differs from the state when Create was called.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="420df-172">O código a seguir demonstra como implementar o <xref:System.ServiceModel.Persistence.PersistenceProvider.EndCreate%2A> método.</span><span class="sxs-lookup"><span data-stu-id="420df-172">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.EndCreate%2A> method.</span></span>  
  
 [!code-csharp[PersistenceProvider#16](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndDelete">
      <MemberSignature Language="C#" Value="public abstract void EndDelete (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndDelete(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.EndDelete(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub EndDelete (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void EndDelete(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="420df-173">Uma referência ao resultado da operação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-173">A reference to the result of the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="420df-174">Quando implementado em uma classe derivada, representa o término da fase Delete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-174">When implemented in a derived class, represents the end of the Delete phase.</span>
          </span>
          <span data-ttu-id="420df-175">A fase Delete ocorre quando os dados de estado são excluídos permanentemente do repositório de persistência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-175">The Delete phase occurs when state data is permanently deleted from the persistence store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="420df-176">O código a seguir demonstra como implementar o <xref:System.ServiceModel.Persistence.PersistenceProvider.EndDelete%2A> método.</span><span class="sxs-lookup"><span data-stu-id="420df-176">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.EndDelete%2A> method.</span></span> <span data-ttu-id="420df-177">Este exemplo de código é parte do exemplo do arquivo FilePersistenceProviderFactory.cs DurableServiceFactory SDK.</span><span class="sxs-lookup"><span data-stu-id="420df-177">This code example is part of the DurableServiceFactory SDK sample from the FilePersistenceProviderFactory.cs file.</span></span> <span data-ttu-id="420df-178">Para obter mais informações, consulte a amostra DurableServiceFactory SDK.</span><span class="sxs-lookup"><span data-stu-id="420df-178">For more information, see the DurableServiceFactory SDK sample.</span></span>  
  
 [!code-csharp[PersistenceProvider#5](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndLoad">
      <MemberSignature Language="C#" Value="public abstract object EndLoad (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object EndLoad(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.EndLoad(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function EndLoad (result As IAsyncResult) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ EndLoad(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="420df-179">Uma referência ao resultado da operação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-179">A reference to the result of the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="420df-180">Quando implementado em uma classe derivada, representa o término da fase Load.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-180">When implemented in a derived class, represents the end of the Load phase.</span>
          </span>
          <span data-ttu-id="420df-181">A fase Load ocorre quando os dados de estado são carregados no provedor de persistência do repositório de persistência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-181">The Load phase occurs when state data is loaded into the persistence provider from the persistence store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="420df-182">As informações de estado do serviço.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-182">The service state information.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="420df-183">O código a seguir demonstra como usar o `EndLoad` método.</span><span class="sxs-lookup"><span data-stu-id="420df-183">The following code demonstrates how to use the `EndLoad` method.</span></span> <span data-ttu-id="420df-184">Este exemplo de código é parte do exemplo do arquivo FilePersistenceProviderFactory.cs DurableServiceFactory SDK.</span><span class="sxs-lookup"><span data-stu-id="420df-184">This code example is part of the DurableServiceFactory SDK sample from the FilePersistenceProviderFactory.cs file.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="420df-185"> o exemplo DurableServiceFactory SDK.</span><span class="sxs-lookup"><span data-stu-id="420df-185"> the DurableServiceFactory SDK sample.</span></span>  
  
 [!code-csharp[PersistenceProvider#1](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndLoadIfChanged">
      <MemberSignature Language="C#" Value="public virtual bool EndLoadIfChanged (IAsyncResult result, out object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EndLoadIfChanged(class System.IAsyncResult result, [out] object&amp; instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.EndLoadIfChanged(System.IAsyncResult,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndLoadIfChanged (result As IAsyncResult, ByRef instance As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool EndLoadIfChanged(IAsyncResult ^ result, [Runtime::InteropServices::Out] System::Object ^ % instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
        <Parameter Name="instance" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="420df-186">Uma referência ao resultado da operação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-186">A reference to the result of the operation.</span>
          </span>
        </param>
        <param name="instance">
          <span data-ttu-id="420df-187">O estado da instância real.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-187">The actual instance state.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="420df-188">Quando implementado em uma classe derivada, representa o término da fase LoadIfChanged.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-188">When implemented in a derived class, represents the end of the LoadIfChanged phase.</span>
          </span>
          <span data-ttu-id="420df-189">A fase LoadIfChanged ocorre quando os dados de estado são carregados no provedor de persistência do repositório de persistência e os dados de estado no repositório de persistência foram alterados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-189">The LoadIfChanged phase occurs when state data is loaded into the persistence provider from the persistence store, and the state data in the persistence store has been changed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="420df-190">
            <see langword="true" /> se a instância com a qual o parâmetro <see langword="out" /> foi definido com a última cópia do repositório de persistência; <see langword="false" /> se o estado armazenado em cache localmente já está atualizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-190">
              <see langword="true" /> if the instance <see langword="out" /> parameter has been set with the latest copy from the persistence store; <see langword="false" /> if the locally cached state is already up-to-date.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="420df-191">O código a seguir demonstra como implementar o <xref:System.ServiceModel.Persistence.PersistenceProvider.EndLoadIfChanged%2A> método.</span><span class="sxs-lookup"><span data-stu-id="420df-191">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.EndLoadIfChanged%2A> method.</span></span>  
  
 [!code-csharp[PersistenceProvider#12](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndUpdate">
      <MemberSignature Language="C#" Value="public abstract object EndUpdate (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object EndUpdate(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.EndUpdate(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function EndUpdate (result As IAsyncResult) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ EndUpdate(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="420df-192">Uma referência ao resultado da operação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-192">A reference to the result of the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="420df-193">Representa o fim da fase Update.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-193">Represents the end of the Update phase.</span>
          </span>
          <span data-ttu-id="420df-194">A fase Update ocorre quando os registros de estado do serviço são atualizados no repositório de persistência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-194">The Update phase occurs when service state records are updated in the persistence store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="420df-195">O token de instância correspondente ao estado recém-salvo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-195">The instance token corresponding to the state just saved.</span>
          </span>
          <span data-ttu-id="420df-196">Isso pode ser passado para <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" /> para determinar se o estado no repositório de persistência é diferente do estado de quando Create foi chamado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-196">This can be passed to <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" /> to determine whether the state in the persistence store differs from the state when Create was called.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="420df-197">O código a seguir demonstra como implementar o <xref:System.ServiceModel.Persistence.PersistenceProvider.EndUpdate%2A> método.</span><span class="sxs-lookup"><span data-stu-id="420df-197">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.EndUpdate%2A> method.</span></span>  
  
 [!code-csharp[PersistenceProvider#19](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public Guid Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid Id" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Persistence.PersistenceProvider.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid Id { Guid get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="420df-198">Representa o <see cref="T:System.Guid" /> associado a esta instância.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-198">Represents the <see cref="T:System.Guid" /> associated with this instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="420df-199">O GUID associado a essa instância.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-199">The GUID associated with this instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="420df-200">O código a seguir demonstra como usar o <xref:System.ServiceModel.Persistence.PersistenceProvider.Id%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="420df-200">The following code demonstrates how to use the <xref:System.ServiceModel.Persistence.PersistenceProvider.Id%2A> property.</span></span>  
  
 [!code-csharp[PersistenceProvider#10](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public abstract object Load (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Load(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.Load(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Load (timeout As TimeSpan) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ Load(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="420df-201">O período após o qual o provedor de persistência anula esta tentativa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-201">The time period after which the persistence provider aborts this attempt.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="420df-202">Quando implementado em uma classe derivada, carrega informações de estado do serviço do repositório de persistência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-202">When implemented in a derived class, loads service state information from the persistence store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="420df-203">O estado da instância carregada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-203">The loaded instance state.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="420df-204">As alterações feitas à segurança do tokens no <xref:System.ServiceModel.Persistence.PersistenceProvider.Load%2A> método, se não revertido, fique em vigor para o restante da mensagem do processamento.</span><span class="sxs-lookup"><span data-stu-id="420df-204">Changes made to the security token in the <xref:System.ServiceModel.Persistence.PersistenceProvider.Load%2A> method, if not reverted, stay in effect for the remainder of that message's processing.</span></span> <span data-ttu-id="420df-205">Isso significa que o código do usuário da operação de serviço, o caminho de mensagem de resposta por dispatcher, bem como qualquer caminho de erro, executado no contexto de segurança alterado.</span><span class="sxs-lookup"><span data-stu-id="420df-205">This means that the service operation's user code, the response message path through the dispatcher, as well as any error paths, run in the changed security context.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="420df-206">O código a seguir demonstra como implementar o <xref:System.ServiceModel.Persistence.PersistenceProvider.Load%2A> método.</span><span class="sxs-lookup"><span data-stu-id="420df-206">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.Load%2A> method.</span></span> <span data-ttu-id="420df-207">Este exemplo de código é parte do exemplo do arquivo FilePersistenceProviderFactory.cs DurableServiceFactory SDK.</span><span class="sxs-lookup"><span data-stu-id="420df-207">This code example is part of the DurableServiceFactory SDK sample from the FilePersistenceProviderFactory.cs file.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="420df-208"> o exemplo DurableServiceFactory SDK.</span><span class="sxs-lookup"><span data-stu-id="420df-208"> the DurableServiceFactory SDK sample.</span></span>  
  
 [!code-csharp[PersistenceProvider#3](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadIfChanged">
      <MemberSignature Language="C#" Value="public virtual bool LoadIfChanged (TimeSpan timeout, object instanceToken, out object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool LoadIfChanged(valuetype System.TimeSpan timeout, object instanceToken, [out] object&amp; instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LoadIfChanged (timeout As TimeSpan, instanceToken As Object, ByRef instance As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool LoadIfChanged(TimeSpan timeout, System::Object ^ instanceToken, [Runtime::InteropServices::Out] System::Object ^ % instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="instanceToken" Type="System.Object" />
        <Parameter Name="instance" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="420df-209">O período após o qual o provedor de persistência anula esta tentativa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-209">The time period after which the persistence provider aborts this attempt.</span>
          </span>
        </param>
        <param name="instanceToken">
          <span data-ttu-id="420df-210">O token retornado por um <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.Create(System.Object,System.TimeSpan)" /> ou <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.Update(System.Object,System.TimeSpan)" /> anterior, que representa o estado atual mantido pelo chamador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-210">The token returned by a previous <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.Create(System.Object,System.TimeSpan)" /> or <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.Update(System.Object,System.TimeSpan)" />, which represents the current state held by the caller.</span>
          </span>
        </param>
        <param name="instance">
          <span data-ttu-id="420df-211">O estado da instância real.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-211">The actual instance state.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="420df-212">Quando implementado em uma classe derivada, carrega informações de estado do serviço do repositório de persistência se esses dados foram alterados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-212">When implemented in a derived class, loads service state information from the persistence store if that data has been changed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="420df-213">
            <see langword="true" /> se o parâmetro <paramref name="instance" /><see langword="out" /> foi definido com a última cópia do repositório de persistência; <see langword="false" /> se o estado armazenado em cache localmente já está atualizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-213">
              <see langword="true" /> if the <paramref name="instance" /><see langword="out" /> parameter has been set with the latest copy from the persistence store; <see langword="false" /> if the locally cached state is already up to date.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="420df-214">O código a seguir demonstra como implementar o <xref:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged%2A> método.</span><span class="sxs-lookup"><span data-stu-id="420df-214">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged%2A> method.</span></span>  
  
 [!code-csharp[PersistenceProvider#13](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public abstract object Update (object instance, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Update(object instance, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.Update(System.Object,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Update (instance As Object, timeout As TimeSpan) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ Update(System::Object ^ instance, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="420df-215">O estado da instância real.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-215">The actual instance state.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="420df-216">O período após o qual o provedor de persistência anula esta tentativa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-216">The time period after which the persistence provider aborts this attempt.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="420df-217">Quando implementado em uma classe derivada, atualiza registros de estado do serviço no repositório de persistência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-217">When implemented in a derived class, updates service state records in the persistence store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="420df-218">O token de instância correspondente ao estado recém-salvo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-218">The instance token corresponding to the state just saved.</span>
          </span>
          <span data-ttu-id="420df-219">Isso pode ser passado para <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" /> para determinar se o estado no repositório de persistência é diferente do estado de quando Create foi chamado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="420df-219">This can be passed to <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" /> to determine whether the state in the persistence store differs from the state when Create was called.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="420df-220">O código a seguir demonstra como implementar o <xref:System.ServiceModel.Persistence.PersistenceProvider.Update%2A> método.</span><span class="sxs-lookup"><span data-stu-id="420df-220">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.Update%2A> method.</span></span>  
  
 [!code-csharp[PersistenceProvider#18](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>