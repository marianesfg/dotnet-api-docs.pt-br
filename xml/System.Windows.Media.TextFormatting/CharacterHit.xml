<Type Name="CharacterHit" FullName="System.Windows.Media.TextFormatting.CharacterHit">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f4137db2f754fb1dade0081d8f8209612bfaa7cf" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51870034" /></Metadata><TypeSignature Language="C#" Value="public struct CharacterHit : IEquatable&lt;System.Windows.Media.TextFormatting.CharacterHit&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit CharacterHit extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.Windows.Media.TextFormatting.CharacterHit&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.TextFormatting.CharacterHit" />
  <TypeSignature Language="VB.NET" Value="Public Structure CharacterHit&#xA;Implements IEquatable(Of CharacterHit)" />
  <TypeSignature Language="C++ CLI" Value="public value class CharacterHit : IEquatable&lt;System::Windows::Media::TextFormatting::CharacterHit&gt;" />
  <TypeSignature Language="F#" Value="type CharacterHit = struct" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Windows.Media.TextFormatting.CharacterHit&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="8e169-101">Representa informações sobre um caractere para o qual houve uma ocorrência em uma execução de glifo.</span><span class="sxs-lookup"><span data-stu-id="8e169-101">Represents information about a character hit within a glyph run.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e169-102">O <xref:System.Windows.Media.TextFormatting.CharacterHit> estrutura fornece informações sobre o índice do primeiro caractere que houve uma ocorrência, bem como informações sobre a borda à esquerda ou à direita.</span><span class="sxs-lookup"><span data-stu-id="8e169-102">The <xref:System.Windows.Media.TextFormatting.CharacterHit> structure provides information about the index of the first character that got hit as well as information about leading or trailing edge.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159965"><span data-ttu-id="8e169-103">Exemplo de formatação de texto avançada</span><span class="sxs-lookup"><span data-stu-id="8e169-103">Advanced Text Formatting Sample</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CharacterHit (int firstCharacterIndex, int trailingLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 firstCharacterIndex, int32 trailingLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.CharacterHit.#ctor(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (firstCharacterIndex As Integer, trailingLength As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CharacterHit(int firstCharacterIndex, int trailingLength);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.TextFormatting.CharacterHit : int * int -&gt; System.Windows.Media.TextFormatting.CharacterHit" Usage="new System.Windows.Media.TextFormatting.CharacterHit (firstCharacterIndex, trailingLength)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="firstCharacterIndex" Type="System.Int32" />
        <Parameter Name="trailingLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="firstCharacterIndex"><span data-ttu-id="8e169-104">O índice do primeiro caractere do qual houve uma ocorrência.</span><span class="sxs-lookup"><span data-stu-id="8e169-104">Index of the first character that got hit.</span></span></param>
        <param name="trailingLength"><span data-ttu-id="8e169-105">No caso de uma borda à esquerda, esse valor é 0.</span><span class="sxs-lookup"><span data-stu-id="8e169-105">In the case of a leading edge, this value is 0.</span></span> <span data-ttu-id="8e169-106">No caso de uma borda à direita, esse valor é o número de pontos de código até a próxima posição de cursor válida.</span><span class="sxs-lookup"><span data-stu-id="8e169-106">In the case of a trailing edge, this value is the number of code points until the next valid caret position.</span></span></param>
        <summary><span data-ttu-id="8e169-107">Inicializa uma nova instância da estrutura <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" />.</span><span class="sxs-lookup"><span data-stu-id="8e169-107">Initializes a new instance of the <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" /> structure.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8e169-108">Determina se o objeto especificado é igual ao objeto <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> atual.</span><span class="sxs-lookup"><span data-stu-id="8e169-108">Determines whether the specified object is equal to the current <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.CharacterHit.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="characterHit.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="8e169-109">O objeto a ser comparado com o objeto <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> atual.</span><span class="sxs-lookup"><span data-stu-id="8e169-109">The object to compare with the current <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> object.</span></span></param>
        <summary><span data-ttu-id="8e169-110">Determina se o objeto especificado é igual ao objeto <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> atual.</span><span class="sxs-lookup"><span data-stu-id="8e169-110">Determines whether the specified object is equal to the current <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> object.</span></span></summary>
        <returns><span data-ttu-id="8e169-111"><see langword="true" /> se <paramref name="obj" /> for igual ao objeto <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> atual; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8e169-111"><see langword="true" /> if <paramref name="obj" /> is equal to the current <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> object; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="8e169-112">Se <paramref name="obj" /> não for um objeto <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" />, <see langword="false" /> será retornado.</span><span class="sxs-lookup"><span data-stu-id="8e169-112">If <paramref name="obj" /> is not a <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> object, <see langword="false" /> is returned.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Windows.Media.TextFormatting.CharacterHit obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Windows.Media.TextFormatting.CharacterHit obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.CharacterHit.Equals(System.Windows.Media.TextFormatting.CharacterHit)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As CharacterHit) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Windows::Media::TextFormatting::CharacterHit obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Windows.Media.TextFormatting.CharacterHit -&gt; bool" Usage="characterHit.Equals obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Windows.Media.TextFormatting.CharacterHit" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="8e169-113">O <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> a ser comparado com o objeto <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> atual.</span><span class="sxs-lookup"><span data-stu-id="8e169-113">The <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> to compare with the current <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> object.</span></span></param>
        <summary><span data-ttu-id="8e169-114">Determina se o <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> é igual ao objeto <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> atual.</span><span class="sxs-lookup"><span data-stu-id="8e169-114">Determines whether the <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> is equal to the current <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> object.</span></span></summary>
        <returns><span data-ttu-id="8e169-115"><see langword="true" /> se <paramref name="obj" /> for igual ao objeto <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> atual; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8e169-115"><see langword="true" /> if <paramref name="obj" /> is equal to the current <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FirstCharacterIndex">
      <MemberSignature Language="C#" Value="public int FirstCharacterIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FirstCharacterIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.CharacterHit.FirstCharacterIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FirstCharacterIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FirstCharacterIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.FirstCharacterIndex : int" Usage="System.Windows.Media.TextFormatting.CharacterHit.FirstCharacterIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8e169-116">Obtém o índice do primeiro caractere para o qual houve uma ocorrência.</span><span class="sxs-lookup"><span data-stu-id="8e169-116">Gets the index of the first character that got hit.</span></span></summary>
        <value><span data-ttu-id="8e169-117">Um <see cref="T:System.Int32" /> valor que representa o índice.</span><span class="sxs-lookup"><span data-stu-id="8e169-117">An <see cref="T:System.Int32" /> value that represents the index.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.CharacterHit.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="characterHit.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8e169-118">Serve como uma função de hash para <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" />.</span><span class="sxs-lookup"><span data-stu-id="8e169-118">Serves as a hash function for <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" />.</span></span> <span data-ttu-id="8e169-119">Ele é adequado para uso em algoritmos de hash e estruturas de dados como uma tabela de hash.</span><span class="sxs-lookup"><span data-stu-id="8e169-119">It is suitable for use in hashing algorithms and data structures such as a hash table.</span></span></summary>
        <returns><span data-ttu-id="8e169-120">Um valor <see cref="T:System.Int32" /> que representa o código hash para o objeto atual.</span><span class="sxs-lookup"><span data-stu-id="8e169-120">An <see cref="T:System.Int32" /> value that represents the hash code for the current object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Media.TextFormatting.CharacterHit left, System.Windows.Media.TextFormatting.CharacterHit right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.Media.TextFormatting.CharacterHit left, valuetype System.Windows.Media.TextFormatting.CharacterHit right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.CharacterHit.op_Equality(System.Windows.Media.TextFormatting.CharacterHit,System.Windows.Media.TextFormatting.CharacterHit)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As CharacterHit, right As CharacterHit) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Media::TextFormatting::CharacterHit left, System::Windows::Media::TextFormatting::CharacterHit right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Windows.Media.TextFormatting.CharacterHit * System.Windows.Media.TextFormatting.CharacterHit -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.Media.TextFormatting.CharacterHit" />
        <Parameter Name="right" Type="System.Windows.Media.TextFormatting.CharacterHit" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="8e169-121">A primeira instância de <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> a ser comparada.</span><span class="sxs-lookup"><span data-stu-id="8e169-121">The first instance of <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> to compare.</span></span></param>
        <param name="right"><span data-ttu-id="8e169-122">A segunda instância de <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> a ser comparada.</span><span class="sxs-lookup"><span data-stu-id="8e169-122">The second instance of <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> to compare.</span></span></param>
        <summary><span data-ttu-id="8e169-123">Compare duas cadeias de caracteres de <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> quanto à igualdade.</span><span class="sxs-lookup"><span data-stu-id="8e169-123">Compare two <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> strings for equality.</span></span></summary>
        <returns><span data-ttu-id="8e169-124"><see langword="true" /> quando os valores das propriedades <see cref="P:System.Windows.Media.TextFormatting.CharacterHit.FirstCharacterIndex" /> e <see cref="P:System.Windows.Media.TextFormatting.CharacterHit.TrailingLength" /> são iguais para os dois objetos; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8e169-124"><see langword="true" /> when the values of <see cref="P:System.Windows.Media.TextFormatting.CharacterHit.FirstCharacterIndex" /> and <see cref="P:System.Windows.Media.TextFormatting.CharacterHit.TrailingLength" /> properties are equal for both objects; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Media.TextFormatting.CharacterHit left, System.Windows.Media.TextFormatting.CharacterHit right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.Media.TextFormatting.CharacterHit left, valuetype System.Windows.Media.TextFormatting.CharacterHit right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.CharacterHit.op_Inequality(System.Windows.Media.TextFormatting.CharacterHit,System.Windows.Media.TextFormatting.CharacterHit)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As CharacterHit, right As CharacterHit) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Media::TextFormatting::CharacterHit left, System::Windows::Media::TextFormatting::CharacterHit right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Windows.Media.TextFormatting.CharacterHit * System.Windows.Media.TextFormatting.CharacterHit -&gt; bool" Usage="System.Windows.Media.TextFormatting.CharacterHit.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.Media.TextFormatting.CharacterHit" />
        <Parameter Name="right" Type="System.Windows.Media.TextFormatting.CharacterHit" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="8e169-125">A primeira instância de <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> a ser comparada.</span><span class="sxs-lookup"><span data-stu-id="8e169-125">The first instance of <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> to compare.</span></span></param>
        <param name="right"><span data-ttu-id="8e169-126">A segunda instância de <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> a ser comparada.</span><span class="sxs-lookup"><span data-stu-id="8e169-126">The second instance of <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> to compare.</span></span></param>
        <summary><span data-ttu-id="8e169-127">Compare duas cadeias de caracteres de <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> quanto à desigualdade.</span><span class="sxs-lookup"><span data-stu-id="8e169-127">Compare two <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> strings for inequality.</span></span></summary>
        <returns><span data-ttu-id="8e169-128"><see langword="false" /> quando os valores das propriedades <see cref="P:System.Windows.Media.TextFormatting.CharacterHit.FirstCharacterIndex" /> e <see cref="P:System.Windows.Media.TextFormatting.CharacterHit.TrailingLength" /> são iguais para os dois objetos; caso contrário, <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="8e169-128"><see langword="false" /> when the values of <see cref="P:System.Windows.Media.TextFormatting.CharacterHit.FirstCharacterIndex" /> and <see cref="P:System.Windows.Media.TextFormatting.CharacterHit.TrailingLength" /> properties are equal for both objects; otherwise, <see langword="true" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrailingLength">
      <MemberSignature Language="C#" Value="public int TrailingLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TrailingLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.CharacterHit.TrailingLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TrailingLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TrailingLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.TrailingLength : int" Usage="System.Windows.Media.TextFormatting.CharacterHit.TrailingLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8e169-129">Obtém o valor do comprimento à direita do caractere para o qual houve uma ocorrência.</span><span class="sxs-lookup"><span data-stu-id="8e169-129">Gets the trailing length value for the character that got hit.</span></span></summary>
        <value><span data-ttu-id="8e169-130">Um <see cref="T:System.Int32" /> valor que representa o comprimento à direita.</span><span class="sxs-lookup"><span data-stu-id="8e169-130">An <see cref="T:System.Int32" /> value that represents the trailing length.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e169-131">No caso de uma borda à esquerda, esse valor é 0.</span><span class="sxs-lookup"><span data-stu-id="8e169-131">In the case of a leading edge, this value is 0.</span></span> <span data-ttu-id="8e169-132">No caso de uma borda à direita, esse valor é o número de pontos de código até a próxima posição de cursor válida.</span><span class="sxs-lookup"><span data-stu-id="8e169-132">In the case of a trailing edge, this value is the number of code points until the next valid caret position.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>