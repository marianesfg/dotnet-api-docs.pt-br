<Type Name="TextLineBreak" FullName="System.Windows.Media.TextFormatting.TextLineBreak">
  <TypeSignature Language="C#" Value="public sealed class TextLineBreak : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TextLineBreak extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.TextFormatting.TextLineBreak" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TextLineBreak&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextLineBreak sealed : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="77a15-101">Especifica as propriedades de texto e o estado no ponto em que o texto é dividido pela processo de quebra de linha.</span><span class="sxs-lookup"><span data-stu-id="77a15-101">Specifies text properties and state at the point where text is broken by the line breaking process.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.TextFormatting.TextLineBreak Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.TextFormatting.TextLineBreak Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextLineBreak.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As TextLineBreak" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::TextFormatting::TextLineBreak ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.TextLineBreak</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="77a15-102">Clona uma nova instância do objeto <see cref="T:System.Windows.Media.TextFormatting.TextLineBreak" />.</span><span class="sxs-lookup"><span data-stu-id="77a15-102">Clone a new instance of the <see cref="T:System.Windows.Media.TextFormatting.TextLineBreak" /> object.</span></span></summary>
        <returns><span data-ttu-id="77a15-103">Uma nova instância de <see cref="T:System.Windows.Media.TextFormatting.TextLineBreak" />.</span><span class="sxs-lookup"><span data-stu-id="77a15-103">A new instance of <see cref="T:System.Windows.Media.TextFormatting.TextLineBreak" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextLineBreak.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="77a15-104">Libera os recursos usados pela classe <see cref="T:System.Windows.Media.TextFormatting.TextLineBreak" />.</span><span class="sxs-lookup"><span data-stu-id="77a15-104">Releases the resources used by the <see cref="T:System.Windows.Media.TextFormatting.TextLineBreak" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77a15-105">Depois de <xref:System.Windows.Media.TextFormatting.TextLineBreak.Dispose%2A> é chamado, o <xref:System.Windows.Media.TextFormatting.TextLineBreak> objeto não é mais válido.</span><span class="sxs-lookup"><span data-stu-id="77a15-105">After <xref:System.Windows.Media.TextFormatting.TextLineBreak.Dispose%2A> is called, the <xref:System.Windows.Media.TextFormatting.TextLineBreak> object is no longer valid.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~TextLineBreak ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextLineBreak.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!TextLineBreak ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="77a15-106">Finaliza o objeto para executar operações de limpeza em recursos não gerenciados mantidos pelo objeto atual antes do objeto atual ser destruído.</span><span class="sxs-lookup"><span data-stu-id="77a15-106">Finalizes the object to perform cleanup operations on unmanaged resources held by the current object before the current objet is destroyed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>