<Type Name="TextSource" FullName="System.Windows.Media.TextFormatting.TextSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f4d98a4477350ba7c77c7a5d57c007fc943547ed" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30667860" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class TextSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TextSource extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.TextFormatting.TextSource" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TextSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextSource abstract" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornece uma classe abstrata para especificar dados de caractere e formatar propriedades a serem usadas pelo objeto <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Todo o acesso ao texto no <xref:System.Windows.Media.TextFormatting.TextSource> objeto é por meio de <xref:System.Windows.Media.TextFormatting.TextSource.GetTextRun%2A>, que foi projetado para permitir que o cliente de layout de texto virtualizar o texto de qualquer forma, ele escolhe.  
  
 <xref:System.Windows.Media.TextFormatting.TextFormatter> é o [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] mecanismo de texto que fornece serviços de formatação de texto e a quebra de linhas de texto. <xref:System.Windows.Media.TextFormatting.TextFormatter> pode lidar com formatos de caracteres de texto diferente e estilos de parágrafo e inclui suporte para layout de texto internacional. Ao contrário de um texto tradicional [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)], o <xref:System.Windows.Media.TextFormatting.TextFormatter> interage com um cliente de layout de texto por meio de um conjunto de métodos de retorno de chamada. Requer que o cliente forneça esses métodos em uma implementação de <xref:System.Windows.Media.TextFormatting.TextSource> classe. A lista a seguir descreve os três membros que você deve substituir:  
  
-   <xref:System.Windows.Media.TextFormatting.TextSource.GetTextRun%2A>: Recupera um <xref:System.Windows.Media.TextFormatting.TextRun> iniciando em determinado <xref:System.Windows.Media.TextFormatting.TextSource> posição.  
  
-   <xref:System.Windows.Media.TextFormatting.TextSource.GetPrecedingText%2A>: Recupera do trecho de texto imediatamente antes especificado <xref:System.Windows.Media.TextFormatting.TextSource> posição.  
  
-   <xref:System.Windows.Media.TextFormatting.TextSource.GetTextEffectCharacterIndexFromTextSourceCharacterIndex%2A>: Recupera um valor que mapeia um <xref:System.Windows.Media.TextFormatting.TextSource> índice de caracteres para um <xref:System.Windows.Media.TextEffect> índice de caracteres.  
  
> [!NOTE]
>  Para obter um exemplo de código completo que mostra como implementar um derivado <xref:System.Windows.Media.TextFormatting.TextSource> de classe, consulte [exemplo de formatação de texto avançado](http://go.microsoft.com/fwlink/?LinkID=159965) .  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.TextFormatting.TextFormatter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TextSource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TextSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Media.TextFormatting.TextSource" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrecedingText">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Media.TextFormatting.TextSpan&lt;System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange&gt; GetPrecedingText (int textSourceCharacterIndexLimit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Media.TextFormatting.TextSpan`1&lt;class System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange&gt; GetPrecedingText(int32 textSourceCharacterIndexLimit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextSource.GetPrecedingText(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetPrecedingText (textSourceCharacterIndexLimit As Integer) As TextSpan(Of CultureSpecificCharacterBufferRange)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Media::TextFormatting::TextSpan&lt;System::Windows::Media::TextFormatting::CultureSpecificCharacterBufferRange ^&gt; ^ GetPrecedingText(int textSourceCharacterIndexLimit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.TextSpan&lt;System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textSourceCharacterIndexLimit" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="textSourceCharacterIndexLimit">Um <see cref="T:System.Int32" /> valor que especifica a posição de índice do caractere em que interrompe a recuperação de texto.</param>
        <summary>Recupera o alcance de texto imediatamente antes especificado <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> posição.</summary>
        <returns>Um <see cref="T:System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange" /> valor que representa o intervalo de texto imediatamente antes <paramref name="textSourceCharacterIndexLimit" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Media.TextFormatting.TextSource.GetPrecedingText%2A> método retornará um elemento <xref:System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange> se o texto span imediatamente antes do `textSourceCharacterIndexLimit` não contém qualquer texto, como o objeto embutido ou uma execução oculta.  
  
 Este método retorna um intervalo de texto de comprimento zero se não houver nenhum valor anterior `textSourceCharacterIndexLimit`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTextEffectCharacterIndexFromTextSourceCharacterIndex">
      <MemberSignature Language="C#" Value="public abstract int GetTextEffectCharacterIndexFromTextSourceCharacterIndex (int textSourceCharacterIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetTextEffectCharacterIndexFromTextSourceCharacterIndex(int32 textSourceCharacterIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextSource.GetTextEffectCharacterIndexFromTextSourceCharacterIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetTextEffectCharacterIndexFromTextSourceCharacterIndex (textSourceCharacterIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetTextEffectCharacterIndexFromTextSourceCharacterIndex(int textSourceCharacterIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textSourceCharacterIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="textSourceCharacterIndex">Um <see cref="T:System.Int32" /> valor que especifica o <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> índice de caracteres para mapear.</param>
        <summary>Recupera um valor que mapeia um <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> índice de caracteres para um <see cref="T:System.Windows.Media.TextEffect" /> índice de caracteres.</summary>
        <returns>Um <see cref="T:System.Int32" /> valor que representa o <see cref="T:System.Windows.Media.TextEffect" /> índice de caracteres.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTextRun">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Media.TextFormatting.TextRun GetTextRun (int textSourceCharacterIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Media.TextFormatting.TextRun GetTextRun(int32 textSourceCharacterIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextSource.GetTextRun(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetTextRun (textSourceCharacterIndex As Integer) As TextRun" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Media::TextFormatting::TextRun ^ GetTextRun(int textSourceCharacterIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.TextRun</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textSourceCharacterIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="textSourceCharacterIndex">Especifica a posição de índice do caractere no <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> em que o <see cref="T:System.Windows.Media.TextFormatting.TextRun" /> é recuperado.</param>
        <summary>Recupera um <see cref="T:System.Windows.Media.TextFormatting.TextRun" /> iniciando em determinado <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> posição.</summary>
        <returns>Um valor que representa um <see cref="T:System.Windows.Media.TextFormatting.TextRun" /> ou um objeto derivado de <see cref="T:System.Windows.Media.TextFormatting.TextRun" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Uma sequência de texto é uma sequência de caracteres que compartilha um único conjunto de propriedades. Qualquer alteração de formato, como a família de fonte, estilo de fonte, cor de primeiro plano, decoração de texto ou qualquer outro formatação efeito, quebras de executar o texto. O <xref:System.Windows.Media.TextFormatting.TextRun> classe é a raiz de uma hierarquia de tipo que representa vários tipos de conteúdo de texto processado por <xref:System.Windows.Media.TextFormatting.TextFormatter>. Cada classe é derivada de <xref:System.Windows.Media.TextFormatting.TextRun> representa um tipo distinto de conteúdo de texto.  
  
|Classe|Descrição|  
|-----------|-----------------|  
|<xref:System.Windows.Media.TextFormatting.TextRun>|Raiz da hierarquia. Define um grupo de caracteres que compartilham o mesmo conjunto de propriedades de caracteres.|  
|<xref:System.Windows.Media.TextFormatting.TextCharacters>|Define uma coleção de glifos de caractere de um tipo de letra físico distinto.|  
|<xref:System.Windows.Media.TextFormatting.TextEmbeddedObject>|Define um tipo de conteúdo de texto em qual medir, ocorrências de teste e desenho de todo o conteúdo é feito como uma entidade diferente. Um exemplo desse tipo de conteúdo é um botão no meio da linha de texto.|  
|<xref:System.Windows.Media.TextFormatting.TextEndOfLine>|Define um código de caractere de quebra de linha.|  
|<xref:System.Windows.Media.TextFormatting.TextEndOfParagraph>|Define um código de caractere de quebra de parágrafo. Deriva de <xref:System.Windows.Media.TextFormatting.TextEndOfLine>.|  
|<xref:System.Windows.Media.TextFormatting.TextEndOfSegment>|Define um marcador de quebra do segmento.|  
|<xref:System.Windows.Media.TextFormatting.TextHidden>|Define um intervalo de caracteres não visível.|  
|<xref:System.Windows.Media.TextFormatting.TextModifier>|Define o início de um escopo de modificação.|  
  
   
  
## Examples  
 No exemplo a seguir, uma substituição para o <xref:System.Windows.Media.TextFormatting.TextSource.GetTextRun%2A> método é implementado.  
  
 [!code-csharp[TextFormattingSnippets#TextFormattingSnippet4](~/samples/snippets/csharp/VS_Snippets_Wpf/TextFormattingSnippets/CSharp/CustomTextClasses.cs#textformattingsnippet4)]
 [!code-vb[TextFormattingSnippets#TextFormattingSnippet4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextFormattingSnippets/visualbasic/customtextclasses.vb#textformattingsnippet4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelsPerDip">
      <MemberSignature Language="C#" Value="public double PixelsPerDip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 PixelsPerDip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextSource.PixelsPerDip" />
      <MemberSignature Language="VB.NET" Value="Public Property PixelsPerDip As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double PixelsPerDip { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o PixelsPerDip em que o texto deve ser renderizado.</summary>
        <value>O valor <see cref="P:System.Windows.Media.TextFormatting.TextSource.PixelsPerDip" /> atual.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Qualquer classe que estende <xref:System.Windows.Media.TextFormatting.TextSource> devem atualizar <xref:System.Windows.Media.TextFormatting.TextSource.PixelsPerDip%2A> sempre que o DPI altera para um aplicativo por Monitor reconhecimento de DPI.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>