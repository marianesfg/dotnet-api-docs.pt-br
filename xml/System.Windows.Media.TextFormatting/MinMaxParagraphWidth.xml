<Type Name="MinMaxParagraphWidth" FullName="System.Windows.Media.TextFormatting.MinMaxParagraphWidth">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8bf3faa1e31db515777b311d08477bafd8d3b6d6" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51925934" /></Metadata><TypeSignature Language="C#" Value="public struct MinMaxParagraphWidth : IEquatable&lt;System.Windows.Media.TextFormatting.MinMaxParagraphWidth&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit MinMaxParagraphWidth extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.Windows.Media.TextFormatting.MinMaxParagraphWidth&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.TextFormatting.MinMaxParagraphWidth" />
  <TypeSignature Language="VB.NET" Value="Public Structure MinMaxParagraphWidth&#xA;Implements IEquatable(Of MinMaxParagraphWidth)" />
  <TypeSignature Language="C++ CLI" Value="public value class MinMaxParagraphWidth : IEquatable&lt;System::Windows::Media::TextFormatting::MinMaxParagraphWidth&gt;" />
  <TypeSignature Language="F#" Value="type MinMaxParagraphWidth = struct" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Windows.Media.TextFormatting.MinMaxParagraphWidth&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="9ef19-101">Representa a menor e a maior larguras de parágrafo possíveis que contêm totalmente o conteúdo de texto especificado.</span><span class="sxs-lookup"><span data-stu-id="9ef19-101">Represents the smallest and largest possible paragraph width that can fully contain the specified text content.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9ef19-102">O exemplo a seguir mostra como usar o <xref:System.Windows.Media.TextFormatting.MinMaxParagraphWidth.MinWidth%2A> propriedade para gerar a largura de parágrafo mínima para linhas de texto formatadas.</span><span class="sxs-lookup"><span data-stu-id="9ef19-102">The following example shows how to use the <xref:System.Windows.Media.TextFormatting.MinMaxParagraphWidth.MinWidth%2A> property to generate the minimum paragraph width for the formatted lines of text.</span></span>  
  
 [!code-csharp[TextFormattingSnippets#TextFormattingSnippet3](~/samples/snippets/csharp/VS_Snippets_Wpf/TextFormattingSnippets/CSharp/Window1.xaml.cs#textformattingsnippet3)]
 [!code-vb[TextFormattingSnippets#TextFormattingSnippet3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextFormattingSnippets/visualbasic/window1.xaml.vb#textformattingsnippet3)]  
  
 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159965"><span data-ttu-id="9ef19-103">Exemplo de formatação de texto avançada</span><span class="sxs-lookup"><span data-stu-id="9ef19-103">Advanced Text Formatting Sample</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9ef19-104">Determina se o objeto especificado é igual ao objeto <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> atual.</span><span class="sxs-lookup"><span data-stu-id="9ef19-104">Determines whether the specified object is equal to the current <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.MinMaxParagraphWidth.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="minMaxParagraphWidth.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="9ef19-105">O <see cref="T:System.Object" /> a ser comparado com o objeto <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> atual.</span><span class="sxs-lookup"><span data-stu-id="9ef19-105">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> object.</span></span></param>
        <summary><span data-ttu-id="9ef19-106">Determina se o objeto especificado é igual ao objeto <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> atual.</span><span class="sxs-lookup"><span data-stu-id="9ef19-106">Determines whether the specified object is equal to the current <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> object.</span></span></summary>
        <returns><span data-ttu-id="9ef19-107"><see langword="true" /> se <paramref name="obj" /> for igual ao objeto <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> atual; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9ef19-107"><see langword="true" /> if <paramref name="obj" /> is equal to the current <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> object; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="9ef19-108">Se <paramref name="obj" /> não for um objeto <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" />, <see langword="false" /> será retornado.</span><span class="sxs-lookup"><span data-stu-id="9ef19-108">If <paramref name="obj" /> is not a <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> object, <see langword="false" /> is returned.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Windows.Media.TextFormatting.MinMaxParagraphWidth value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Windows.Media.TextFormatting.MinMaxParagraphWidth value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.MinMaxParagraphWidth.Equals(System.Windows.Media.TextFormatting.MinMaxParagraphWidth)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (value As MinMaxParagraphWidth) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Windows::Media::TextFormatting::MinMaxParagraphWidth value);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Windows.Media.TextFormatting.MinMaxParagraphWidth -&gt; bool" Usage="minMaxParagraphWidth.Equals value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Media.TextFormatting.MinMaxParagraphWidth" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="9ef19-109">O <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> a ser comparado com o objeto <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> atual.</span><span class="sxs-lookup"><span data-stu-id="9ef19-109">The <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> to compare with the current <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> object.</span></span></param>
        <summary><span data-ttu-id="9ef19-110">Determina se o <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> é igual ao objeto <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> atual.</span><span class="sxs-lookup"><span data-stu-id="9ef19-110">Determines whether the <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> is equal to the current <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> object.</span></span></summary>
        <returns><span data-ttu-id="9ef19-111"><see langword="true" /> se <paramref name="value" /> for igual ao objeto <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> atual; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9ef19-111"><see langword="true" /> if <paramref name="value" /> is equal to the current <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.MinMaxParagraphWidth.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="minMaxParagraphWidth.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9ef19-112">Serve como uma função de hash para <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" />.</span><span class="sxs-lookup"><span data-stu-id="9ef19-112">Serves as a hash function for <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" />.</span></span> <span data-ttu-id="9ef19-113">Ele é adequado para uso em algoritmos de hash e estruturas de dados como uma tabela de hash.</span><span class="sxs-lookup"><span data-stu-id="9ef19-113">It is suitable for use in hashing algorithms and data structures such as a hash table.</span></span></summary>
        <returns><span data-ttu-id="9ef19-114">Um valor <see cref="T:System.Int32" /> que representa o código hash para o objeto atual.</span><span class="sxs-lookup"><span data-stu-id="9ef19-114">An <see cref="T:System.Int32" /> value that represents the hash code for the current object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxWidth">
      <MemberSignature Language="C#" Value="public double MaxWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MaxWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.MinMaxParagraphWidth.MaxWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaxWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double MaxWidth { double get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxWidth : double" Usage="System.Windows.Media.TextFormatting.MinMaxParagraphWidth.MaxWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9ef19-115">Obtém a maior largura de parágrafo possível que pode conter completamente o conteúdo do texto especificado.</span><span class="sxs-lookup"><span data-stu-id="9ef19-115">Gets the largest paragraph width possible that can fully contain the specified text content.</span></span></summary>
        <value><span data-ttu-id="9ef19-116">Um <see cref="T:System.Double" /> que representa a maior largura de parágrafo possíveis.</span><span class="sxs-lookup"><span data-stu-id="9ef19-116">A <see cref="T:System.Double" /> that represents the largest paragraph width possible.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinWidth">
      <MemberSignature Language="C#" Value="public double MinWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MinWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.MinMaxParagraphWidth.MinWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MinWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double MinWidth { double get(); };" />
      <MemberSignature Language="F#" Value="member this.MinWidth : double" Usage="System.Windows.Media.TextFormatting.MinMaxParagraphWidth.MinWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9ef19-117">Obtém a menor largura de parágrafo possível que pode conter completamente o conteúdo do texto especificado.</span><span class="sxs-lookup"><span data-stu-id="9ef19-117">Gets the smallest paragraph width possible that can fully contain the specified text content.</span></span></summary>
        <value><span data-ttu-id="9ef19-118">Um <see cref="T:System.Double" /> que representa a menor largura de parágrafo possíveis.</span><span class="sxs-lookup"><span data-stu-id="9ef19-118">A <see cref="T:System.Double" /> that represents the smallest paragraph width possible.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ef19-119">A largura de parágrafo mínima correspondente à palavra que tem a maior largura no conteúdo de texto.</span><span class="sxs-lookup"><span data-stu-id="9ef19-119">The minimum paragraph width corresponds to the word that has the greatest width in the text content.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9ef19-120">O exemplo a seguir mostra como usar o <xref:System.Windows.Media.TextFormatting.MinMaxParagraphWidth.MinWidth%2A> propriedade para gerar a largura de parágrafo mínima para linhas de texto formatadas.</span><span class="sxs-lookup"><span data-stu-id="9ef19-120">The following example shows how to use the <xref:System.Windows.Media.TextFormatting.MinMaxParagraphWidth.MinWidth%2A> property to generate the minimum paragraph width for the formatted lines of text.</span></span>  
  
 [!code-csharp[TextFormattingSnippets#TextFormattingSnippet3](~/samples/snippets/csharp/VS_Snippets_Wpf/TextFormattingSnippets/CSharp/Window1.xaml.cs#textformattingsnippet3)]
 [!code-vb[TextFormattingSnippets#TextFormattingSnippet3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextFormattingSnippets/visualbasic/window1.xaml.vb#textformattingsnippet3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Media.TextFormatting.MinMaxParagraphWidth left, System.Windows.Media.TextFormatting.MinMaxParagraphWidth right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.Media.TextFormatting.MinMaxParagraphWidth left, valuetype System.Windows.Media.TextFormatting.MinMaxParagraphWidth right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.MinMaxParagraphWidth.op_Equality(System.Windows.Media.TextFormatting.MinMaxParagraphWidth,System.Windows.Media.TextFormatting.MinMaxParagraphWidth)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As MinMaxParagraphWidth, right As MinMaxParagraphWidth) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Media::TextFormatting::MinMaxParagraphWidth left, System::Windows::Media::TextFormatting::MinMaxParagraphWidth right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Windows.Media.TextFormatting.MinMaxParagraphWidth * System.Windows.Media.TextFormatting.MinMaxParagraphWidth -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.Media.TextFormatting.MinMaxParagraphWidth" />
        <Parameter Name="right" Type="System.Windows.Media.TextFormatting.MinMaxParagraphWidth" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="9ef19-121">A primeira instância de <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> a ser comparada.</span><span class="sxs-lookup"><span data-stu-id="9ef19-121">The first instance of <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> to compare.</span></span></param>
        <param name="right"><span data-ttu-id="9ef19-122">A segunda instância de <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> a ser comparada.</span><span class="sxs-lookup"><span data-stu-id="9ef19-122">The second instance of <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> to compare.</span></span></param>
        <summary><span data-ttu-id="9ef19-123">Compare duas cadeias de caracteres de <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> quanto à igualdade.</span><span class="sxs-lookup"><span data-stu-id="9ef19-123">Compare two <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> strings for equality.</span></span></summary>
        <returns><span data-ttu-id="9ef19-124"><see langword="true" /> para mostrar que os objetos <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> especificados são iguais; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9ef19-124"><see langword="true" /> to show the specified <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> objects are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Media.TextFormatting.MinMaxParagraphWidth.op_Inequality(System.Windows.Media.TextFormatting.MinMaxParagraphWidth,System.Windows.Media.TextFormatting.MinMaxParagraphWidth)" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Media.TextFormatting.MinMaxParagraphWidth left, System.Windows.Media.TextFormatting.MinMaxParagraphWidth right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.Media.TextFormatting.MinMaxParagraphWidth left, valuetype System.Windows.Media.TextFormatting.MinMaxParagraphWidth right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.MinMaxParagraphWidth.op_Inequality(System.Windows.Media.TextFormatting.MinMaxParagraphWidth,System.Windows.Media.TextFormatting.MinMaxParagraphWidth)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As MinMaxParagraphWidth, right As MinMaxParagraphWidth) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Media::TextFormatting::MinMaxParagraphWidth left, System::Windows::Media::TextFormatting::MinMaxParagraphWidth right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Windows.Media.TextFormatting.MinMaxParagraphWidth * System.Windows.Media.TextFormatting.MinMaxParagraphWidth -&gt; bool" Usage="System.Windows.Media.TextFormatting.MinMaxParagraphWidth.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.Media.TextFormatting.MinMaxParagraphWidth" />
        <Parameter Name="right" Type="System.Windows.Media.TextFormatting.MinMaxParagraphWidth" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="9ef19-125">A primeira instância de <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> a ser comparada.</span><span class="sxs-lookup"><span data-stu-id="9ef19-125">The first instance of <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> to compare.</span></span></param>
        <param name="right"><span data-ttu-id="9ef19-126">A segunda instância de <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> a ser comparada.</span><span class="sxs-lookup"><span data-stu-id="9ef19-126">The second instance of <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> to compare.</span></span></param>
        <summary><span data-ttu-id="9ef19-127">Compare dois objetos <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> quanto à desigualdade.</span><span class="sxs-lookup"><span data-stu-id="9ef19-127">Compare two <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> objects for inequality.</span></span></summary>
        <returns><span data-ttu-id="9ef19-128"><see langword="false" /> para mostrar que <paramref name="left" /> é igual a <paramref name="right" />; caso contrário, <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="9ef19-128"><see langword="false" /> to show <paramref name="left" /> is equal to <paramref name="right" />; otherwise, <see langword="true" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ef19-129">Os objetos são iguais se suas <xref:System.Windows.Media.TextFormatting.MinMaxParagraphWidth.MinWidth%2A> e <xref:System.Windows.Media.TextFormatting.MinMaxParagraphWidth.MaxWidth%2A> propriedades são iguais.</span><span class="sxs-lookup"><span data-stu-id="9ef19-129">The objects are equal if their <xref:System.Windows.Media.TextFormatting.MinMaxParagraphWidth.MinWidth%2A> and <xref:System.Windows.Media.TextFormatting.MinMaxParagraphWidth.MaxWidth%2A> properties are equal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>