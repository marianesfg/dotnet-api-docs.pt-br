<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="UndoEngine.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5658fc32fd7fd13e9f252bd3a03aad6b11830e6c9.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">658fc32fd7fd13e9f252bd3a03aad6b11830e6c9</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.UndoEngine">
          <source>Specifies generic undo/redo functionality at design time.</source>
          <target state="translated">Especifica a funcionalidade genérica de desfazer/refazer em tempo de design.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.UndoEngine">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine&gt;</ph> abstract class provides a default implementation of undo functionality at design time.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine&gt;</ph> classe abstrata fornece uma implementação padrão de funcionalidade de desfazer em tempo de design.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.UndoEngine">
          <source>An undo unit represents a single unit of undoable work.</source>
          <target state="translated">Uma unidade de desfazer representa uma única unidade de trabalho não podem ser desfeita.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.UndoEngine">
          <source>This unit is added to a stack and the user can then walk the stack to undo each action.</source>
          <target state="translated">Esta unidade é adicionada a uma pilha e o usuário pode, em seguida, percorrer a pilha para cada ação de desfazer.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.UndoEngine">
          <source>Undo units typically are designed to toggle, which means that calling undo twice returns the application to its starting state.</source>
          <target state="translated">Unidades de desfazer normalmente são projetadas para alternar, o que significa que a função desfazer chamada retorna duas vezes o aplicativo para seu estado inicial.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.UndoEngine">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine&gt;</ph> class takes advantage of the following characteristics of objects running within the designer:</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine&gt;</ph> classe aproveita as seguintes características de objetos em execução dentro do designer:</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.UndoEngine">
          <source>All interesting objects can be persisted to some format by the designer loader.</source>
          <target state="translated">Todos os objetos interessantes podem ser persistentes para algum formato pelo carregador de designer.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.UndoEngine">
          <source>All objects raise property-change notifications when a property is changed.</source>
          <target state="translated">Todos os objetos acionar notificações de alteração de propriedade quando uma propriedade é alterada.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.UndoEngine">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost&gt;</ph> offers the idea of transactions, which can be used to fabricate an undo action that spans multiple smaller actions.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost&gt;</ph> oferece o conceito de transações, que podem ser usados para fabricar uma ação de desfazer que abrange várias ações menores.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.UndoEngine">
          <source>With these features, <ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine&gt;</ph> can fabricate any undo units it needs automatically.</source>
          <target state="translated">Com esses recursos, <ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine&gt;</ph> pode fabricar unidades de desfazer precisa automaticamente.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.UndoEngine">
          <source>Do not change property values directly.</source>
          <target state="translated">Não altere os valores de propriedade diretamente.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.UndoEngine">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine&gt;</ph> class requires you to use the appropriate <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> to change property values.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine&gt;</ph> classe exige que você use apropriada <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> para alterar valores de propriedade.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.UndoEngine">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine&gt;</ph> monitors for change notifications to create undo units, and the units themselves consist of serialized object states.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine&gt;</ph> monitora as notificações de alteração criar unidades de desfazer e as unidades próprios consistem de estados do objeto serializado.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.UndoEngine">
          <source>The following table shows the services that must be available when <ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine&gt;</ph> is created.</source>
          <target state="translated">A tabela a seguir mostra os serviços que devem estar disponíveis quando <ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine&gt;</ph> é criado.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.UndoEngine">
          <source>Service</source>
          <target state="translated">Serviço</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.UndoEngine">
          <source>Description</source>
          <target state="translated">Descrição</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.UndoEngine">
          <source>Saves property and object values for a component before and after a change is made.</source>
          <target state="translated">Salva os valores de propriedade e o objeto para um componente de antes e depois que uma alteração é feita.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.UndoEngine">
          <source>Notifies the undo engine of changes made to components.</source>
          <target state="translated">Notifica o mecanismo de desfazer das alterações feitas nos componentes.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.UndoEngine">
          <source>Used to track transactions.</source>
          <target state="translated">Usado para controlar transações.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.UndoEngine">
          <source>Because the <ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine&gt;</ph> class requires <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.ComponentSerializationService&gt;</ph> and <ph id="ph3">&lt;xref:System.ComponentModel.Design.IComponentChangeService&gt;</ph>, it is available only at design time.</source>
          <target state="translated">Porque o <ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine&gt;</ph> classe requer <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.ComponentSerializationService&gt;</ph> e <ph id="ph3">&lt;xref:System.ComponentModel.Design.IComponentChangeService&gt;</ph>, está disponível somente em tempo de design.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.UndoEngine">
          <source>The undo engine tracks transactions and creates a single undo unit that encompasses a transaction.</source>
          <target state="translated">O mecanismo de desfazer rastreia as transações e cria uma unidade de desfazer única que abrange uma transação.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.UndoEngine">
          <source>As a result, the undo engine has control over the duration of an undoable action.</source>
          <target state="translated">Como resultado, o mecanismo de desfazer tem controle sobre a duração de uma ação pode ser desfeita.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.UndoEngine">
          <source>Also, because transactions can be named, undoable actions inherit their names from the current transaction.</source>
          <target state="translated">Além disso, porque as transações podem ser nomeadas, ações podem ser desfeitas herdam os nomes da transação atual.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.UndoEngine">
          <source>If no transaction is available and a change is reported, the undo engine creates an undo name based on the type of change (for example, "Change property 'Text'").</source>
          <target state="translated">Se nenhuma transação está disponível e uma alteração é relatada, o mecanismo de desfazer cria um nome de desfazer com base no tipo de alteração (por exemplo, "alterar propriedade 'Text'").</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.#ctor(System.IServiceProvider)">
          <source>A parenting service provider.</source>
          <target state="translated">Um provedor de serviço de gerenciamento do domínio pai.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.#ctor(System.IServiceProvider)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.UndoEngine" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.UndoEngine" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.UndoEngine.#ctor(System.IServiceProvider)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine&gt;</ph> requires several services from the <ph id="ph2">`provider`</ph> parameter to be useful.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine&gt;</ph> requer vários serviços do <ph id="ph2">`provider`</ph> parâmetro para ser útil.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.#ctor(System.IServiceProvider)">
          <source><ph id="ph1">&lt;paramref name="provider" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="provider" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.#ctor(System.IServiceProvider)">
          <source>A required service cannot be found.</source>
          <target state="translated">Um serviço necessário não foi encontrado.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.#ctor(System.IServiceProvider)">
          <source>See <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.UndoEngine" /&gt;</ph> for required services.</source>
          <target state="translated">Consulte <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.UndoEngine" /&gt;</ph> para ver os serviços necessários.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.#ctor(System.IServiceProvider)">
          <source>If you have removed this service, ensure that you provide a replacement.</source>
          <target state="translated">Se você tiver removido esse serviço, lembre-se de substituí-lo.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.AddUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)">
          <source>The undo unit to add</source>
          <target state="translated">A unidade de desfazer a ser adicionada</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.AddUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)">
          <source>Adds an <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /&gt;</ph> to the undo stack.</source>
          <target state="translated">Adiciona um <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /&gt;</ph> à pilha de desfazer.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.UndoEngine.AddUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)">
          <source>Create the <ph id="ph1">`unit`</ph> parameter by calling the <ph id="ph2">&lt;xref:System.ComponentModel.Design.UndoEngine.CreateUndoUnit%2A&gt;</ph> method.</source>
          <target state="translated">Criar o <ph id="ph1">`unit`</ph> parâmetro ao chamar o <ph id="ph2">&lt;xref:System.ComponentModel.Design.UndoEngine.CreateUndoUnit%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.CreateUndoUnit(System.String,System.Boolean)">
          <source>The name of the unit to create.</source>
          <target state="translated">O nome da unidade a ser criada.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.CreateUndoUnit(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to create the first of a series of nested units; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to create subsequent nested units.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para criar a primeira de uma série de unidades aninhadas; <ph id="ph2">&lt;see langword="false" /&gt;</ph> para criar as unidades aninhadas subsequentes.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.CreateUndoUnit(System.String,System.Boolean)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /&gt;</ph>.</source>
          <target state="translated">Cria um novo <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.CreateUndoUnit(System.String,System.Boolean)">
          <source>A new <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /&gt;</ph> with a specified name.</source>
          <target state="translated">Um novo <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /&gt;</ph> com um nome especificado.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.UndoEngine.CreateUndoUnit(System.String,System.Boolean)">
          <source>The default implementation of the <ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine.CreateUndoUnit%2A&gt;</ph> method simply returns a new <ph id="ph2">&lt;xref:System.ComponentModel.Design.UndoEngine.UndoUnit&gt;</ph>.</source>
          <target state="translated">A implementação padrão da <ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine.CreateUndoUnit%2A&gt;</ph> método simplesmente retorna um novo <ph id="ph2">&lt;xref:System.ComponentModel.Design.UndoEngine.UndoUnit&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.UndoEngine.CreateUndoUnit(System.String,System.Boolean)">
          <source>By default, <ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine&gt;</ph> does nothing with the <ph id="ph2">`primary`</ph> parameter, but some implementations of undo, such as those involving the COM <ph id="ph3">`Microsoft.VisualStudio.OLE.Interop.IOleParentUndoUnit`</ph> design pattern, may need to identify the difference between a primary unit and its children.</source>
          <target state="translated">Por padrão, <ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine&gt;</ph> não faz nada com a <ph id="ph2">`primary`</ph> parâmetro, mas algumas implementações de desfazer, como os que envolvem o COM <ph id="ph3">`Microsoft.VisualStudio.OLE.Interop.IOleParentUndoUnit`</ph> padrão de design, talvez seja necessário identificar a diferença entre uma unidade principal e seus filhos.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.DiscardUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)">
          <source>The unit to discard.</source>
          <target state="translated">A unidade a ser descartada.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.DiscardUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)">
          <source>Discards an <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /&gt;</ph>.</source>
          <target state="translated">Descarta um <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.UndoEngine.DiscardUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)">
          <source>Before the <ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine.DiscardUndoUnit%2A&gt;</ph> method is called, the undo unit is closed and then undone.</source>
          <target state="translated">Antes do <ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine.DiscardUndoUnit%2A&gt;</ph> método é chamado, a unidade de desfazer é fechada e, em seguida, desfeita.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.UndoEngine">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.UndoEngine" /&gt;</ph>.</source>
          <target state="translated">Libera os recursos usados pelo <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.UndoEngine" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.Dispose">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.UndoEngine" /&gt;</ph>.</source>
          <target state="translated">Libera todos os recursos usados pelo <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.UndoEngine" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para liberar recursos gerenciados e não gerenciados; <ph id="ph2">&lt;see langword="false" /&gt;</ph> para liberar apenas recursos não gerenciados.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.UndoEngine" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">Libera os recursos não gerenciados usados pelo <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.UndoEngine" /&gt;</ph> e opcionalmente libera os recursos gerenciados.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.UndoEngine.Enabled">
          <source>Enables or disables the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.UndoEngine" /&gt;</ph>.</source>
          <target state="translated">Habilita ou desabilita o <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.UndoEngine" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.UndoEngine.Enabled">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.UndoEngine" /&gt;</ph> is enabled; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.UndoEngine" /&gt;</ph> estiver habilitado; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.GetRequiredService(System.Type)">
          <source>The type of service to retrieve.</source>
          <target state="translated">O tipo de serviço a ser recuperado.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.GetRequiredService(System.Type)">
          <source>Gets the requested service.</source>
          <target state="translated">Obtém o serviço solicitado.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.GetRequiredService(System.Type)">
          <source>The requested service, if found.</source>
          <target state="translated">O serviço solicitado, se encontrado.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.GetRequiredService(System.Type)">
          <source><ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.GetRequiredService(System.Type)">
          <source><ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph> is required but cannot be found.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph> é necessário, mas não pode ser encontrado.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.GetRequiredService(System.Type)">
          <source>If you have removed this service, ensure that you provide a replacement.</source>
          <target state="translated">Se você tiver removido esse serviço, lembre-se de substituí-lo.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.GetService(System.Type)">
          <source>The type of service to retrieve.</source>
          <target state="translated">O tipo de serviço a ser recuperado.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.GetService(System.Type)">
          <source>Gets the requested service.</source>
          <target state="translated">Obtém o serviço solicitado.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.GetService(System.Type)">
          <source>The requested service, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the requested service is not found.</source>
          <target state="translated">O serviço solicitado ou <ph id="ph1">&lt;see langword="null" /&gt;</ph> se o serviço solicitado não for encontrado.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.GetService(System.Type)">
          <source><ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.OnUndoing(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.OnUndoing(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.UndoEngine.Undoing" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.UndoEngine.Undoing" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.OnUndone(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.UndoEngine.OnUndone(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.UndoEngine.Undone" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.UndoEngine.Undone" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.UndoEngine.Undoing">
          <source>Occurs immediately before an undo action is performed.</source>
          <target state="translated">Ocorre imediatamente antes de uma ação de desfazer ser executada.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.UndoEngine.UndoInProgress">
          <source>Indicates if an undo action is in progress.</source>
          <target state="translated">Indica se uma ação de desfazer está em andamento.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.UndoEngine.UndoInProgress">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if an undo action is in progress; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se uma ação de desfazer está em andamento. Caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.UndoEngine.Undone">
          <source>Occurs immediately after an undo action is performed.</source>
          <target state="translated">Ocorre imediatamente depois de uma ação de desfazer ser executada.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.UndoEngine.Undone">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine.Undone&gt;</ph> event is always raised, even if an exception is thrown.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.ComponentModel.Design.UndoEngine.Undone&gt;</ph> é sempre gerado, mesmo se uma exceção for lançada.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>