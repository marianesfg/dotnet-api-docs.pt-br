<Type Name="UndoEngine+UndoUnit" FullName="System.ComponentModel.Design.UndoEngine+UndoUnit">
  <TypeSignature Language="C#" Value="protected class UndoEngine.UndoUnit" />
  <TypeSignature Language="ILAsm" Value=".class nested protected auto ansi beforefieldinit UndoEngine/UndoUnit extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />
  <TypeSignature Language="VB.NET" Value="Protected Class UndoEngine.UndoUnit" />
  <TypeSignature Language="C++ CLI" Value="protected: ref class UndoEngine::UndoUnit" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="882c2-101">Encapsula uma unidade de trabalho que um usuário pode desfazer.</span><span class="sxs-lookup"><span data-stu-id="882c2-101">Encapsulates a unit of work that a user can undo.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="882c2-102">O <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> classe é uma classe aninhada dentro de <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine%2A> que encapsula uma ação que um usuário pode desfazer.</span><span class="sxs-lookup"><span data-stu-id="882c2-102">The <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> class is a nested class within <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine%2A> that encapsulates an action that a user can undo.</span></span> <span data-ttu-id="882c2-103">O padrão <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> monitora as notificações de alteração de implementação e cria uma lista de eventos para cada alteração.</span><span class="sxs-lookup"><span data-stu-id="882c2-103">The default <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> implementation monitors change notifications and builds up a list of events for each change.</span></span> <span data-ttu-id="882c2-104">Ele salva esses eventos usando <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService>.</span><span class="sxs-lookup"><span data-stu-id="882c2-104">It saves these events using <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService>.</span></span> <span data-ttu-id="882c2-105">Um <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> recebe notificações de eventos para alterações diretamente do <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine%2A> por meio de várias `public virtual` métodos.</span><span class="sxs-lookup"><span data-stu-id="882c2-105">An <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> receives event notifications for changes directly from <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine%2A> through several `public virtual` methods.</span></span> <span data-ttu-id="882c2-106">Você pode derivar de <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> e executar qualquer lógica adicional.</span><span class="sxs-lookup"><span data-stu-id="882c2-106">You can derive from <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> and perform any additional logic.</span></span> <span data-ttu-id="882c2-107">Se desejar, você pode ignorar completamente o padrão <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> implementação.</span><span class="sxs-lookup"><span data-stu-id="882c2-107">If desired, you can completely bypass the default <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> implementation.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.UndoEngine" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationService" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UndoUnit (System.ComponentModel.Design.UndoEngine engine, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Design.UndoEngine engine, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.#ctor(System.ComponentModel.Design.UndoEngine,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (engine As UndoEngine, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UndoUnit(System::ComponentModel::Design::UndoEngine ^ engine, System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="engine" Type="System.ComponentModel.Design.UndoEngine" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="engine"><span data-ttu-id="882c2-108">O mecanismo de desfazer que é proprietário dessa unidade de desfazer.</span><span class="sxs-lookup"><span data-stu-id="882c2-108">The undo engine that owns this undo unit.</span></span></param>
        <param name="name"><span data-ttu-id="882c2-109">O nome dessa unidade de desfazer.</span><span class="sxs-lookup"><span data-stu-id="882c2-109">The name for this undo unit.</span></span></param>
        <summary><span data-ttu-id="882c2-110">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</span><span class="sxs-lookup"><span data-stu-id="882c2-110">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="882c2-111"><paramref name="engine" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="882c2-111"><paramref name="engine" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.UndoEngine" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="882c2-112">Recebe uma chamada do mecanismo de desfazer para fechar essa unidade.</span><span class="sxs-lookup"><span data-stu-id="882c2-112">Receives a call from the undo engine to close this unit.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="882c2-113">Quando uma unidade é fechada, nenhum evento mais pode vir em seus vários métodos de evento.</span><span class="sxs-lookup"><span data-stu-id="882c2-113">When a unit is closed, no more events can come into its various event methods.</span></span> <span data-ttu-id="882c2-114">O <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> em si pode agir aqui para garantir que todos os eventos que são abertos são fechados.</span><span class="sxs-lookup"><span data-stu-id="882c2-114">The <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> itself may take action here to ensure that any events that are currently open are closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComponentAdded">
      <MemberSignature Language="C#" Value="public virtual void ComponentAdded (System.ComponentModel.Design.ComponentEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ComponentAdded(class System.ComponentModel.Design.ComponentEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentAdded(System.ComponentModel.Design.ComponentEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ComponentAdded (e As ComponentEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ComponentAdded(System::ComponentModel::Design::ComponentEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Design.ComponentEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="882c2-115">Um <see cref="T:System.ComponentModel.Design.ComponentEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="882c2-115">A <see cref="T:System.ComponentModel.Design.ComponentEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="882c2-116">Recebe uma chamada do <see cref="T:System.ComponentModel.Design.UndoEngine" /> em resposta a um evento <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdded" />.</span><span class="sxs-lookup"><span data-stu-id="882c2-116">Receives a call from the <see cref="T:System.ComponentModel.Design.UndoEngine" /> in response to a <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdded" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.UndoEngine" />
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
      </Docs>
    </Member>
    <Member MemberName="ComponentAdding">
      <MemberSignature Language="C#" Value="public virtual void ComponentAdding (System.ComponentModel.Design.ComponentEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ComponentAdding(class System.ComponentModel.Design.ComponentEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentAdding(System.ComponentModel.Design.ComponentEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ComponentAdding (e As ComponentEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ComponentAdding(System::ComponentModel::Design::ComponentEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Design.ComponentEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="882c2-117">Um <see cref="T:System.ComponentModel.Design.ComponentEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="882c2-117">A <see cref="T:System.ComponentModel.Design.ComponentEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="882c2-118">Recebe uma chamada do <see cref="T:System.ComponentModel.Design.UndoEngine" /> em resposta a um evento <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdding" />.</span><span class="sxs-lookup"><span data-stu-id="882c2-118">Receives a call from the <see cref="T:System.ComponentModel.Design.UndoEngine" /> in response to a <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdding" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.UndoEngine" />
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
      </Docs>
    </Member>
    <Member MemberName="ComponentChanged">
      <MemberSignature Language="C#" Value="public virtual void ComponentChanged (System.ComponentModel.Design.ComponentChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ComponentChanged(class System.ComponentModel.Design.ComponentChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentChanged(System.ComponentModel.Design.ComponentChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ComponentChanged (e As ComponentChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ComponentChanged(System::ComponentModel::Design::ComponentChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Design.ComponentChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="882c2-119">Um <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="882c2-119">A <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="882c2-120">Recebe uma chamada do <see cref="T:System.ComponentModel.Design.UndoEngine" /> em resposta a um evento <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" />.</span><span class="sxs-lookup"><span data-stu-id="882c2-120">Receives a call from the <see cref="T:System.ComponentModel.Design.UndoEngine" /> in response to a <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.UndoEngine" />
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
      </Docs>
    </Member>
    <Member MemberName="ComponentChanging">
      <MemberSignature Language="C#" Value="public virtual void ComponentChanging (System.ComponentModel.Design.ComponentChangingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ComponentChanging(class System.ComponentModel.Design.ComponentChangingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentChanging(System.ComponentModel.Design.ComponentChangingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ComponentChanging (e As ComponentChangingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ComponentChanging(System::ComponentModel::Design::ComponentChangingEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Design.ComponentChangingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="882c2-121">Um <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="882c2-121">A <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="882c2-122">Recebe uma chamada do <see cref="T:System.ComponentModel.Design.UndoEngine" /> em resposta a um evento <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" />.</span><span class="sxs-lookup"><span data-stu-id="882c2-122">Receives a call from the <see cref="T:System.ComponentModel.Design.UndoEngine" /> in response to a <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.UndoEngine" />
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
      </Docs>
    </Member>
    <Member MemberName="ComponentRemoved">
      <MemberSignature Language="C#" Value="public virtual void ComponentRemoved (System.ComponentModel.Design.ComponentEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ComponentRemoved(class System.ComponentModel.Design.ComponentEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRemoved(System.ComponentModel.Design.ComponentEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ComponentRemoved (e As ComponentEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ComponentRemoved(System::ComponentModel::Design::ComponentEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Design.ComponentEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="882c2-123">Um <see cref="T:System.ComponentModel.Design.ComponentEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="882c2-123">A <see cref="T:System.ComponentModel.Design.ComponentEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="882c2-124">Recebe uma chamada do <see cref="T:System.ComponentModel.Design.UndoEngine" /> em resposta a um evento <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved" />.</span><span class="sxs-lookup"><span data-stu-id="882c2-124">Receives a call from the <see cref="T:System.ComponentModel.Design.UndoEngine" /> in response to a <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.UndoEngine" />
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
      </Docs>
    </Member>
    <Member MemberName="ComponentRemoving">
      <MemberSignature Language="C#" Value="public virtual void ComponentRemoving (System.ComponentModel.Design.ComponentEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ComponentRemoving(class System.ComponentModel.Design.ComponentEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRemoving(System.ComponentModel.Design.ComponentEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ComponentRemoving (e As ComponentEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ComponentRemoving(System::ComponentModel::Design::ComponentEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Design.ComponentEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="882c2-125">Um <see cref="T:System.ComponentModel.Design.ComponentEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="882c2-125">A <see cref="T:System.ComponentModel.Design.ComponentEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="882c2-126">Recebe uma chamada do <see cref="T:System.ComponentModel.Design.UndoEngine" /> em resposta a um evento <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving" />.</span><span class="sxs-lookup"><span data-stu-id="882c2-126">Receives a call from the <see cref="T:System.ComponentModel.Design.UndoEngine" /> in response to a <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.UndoEngine" />
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
      </Docs>
    </Member>
    <Member MemberName="ComponentRename">
      <MemberSignature Language="C#" Value="public virtual void ComponentRename (System.ComponentModel.Design.ComponentRenameEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ComponentRename(class System.ComponentModel.Design.ComponentRenameEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRename(System.ComponentModel.Design.ComponentRenameEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ComponentRename (e As ComponentRenameEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ComponentRename(System::ComponentModel::Design::ComponentRenameEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Design.ComponentRenameEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="882c2-127">Um <see cref="T:System.ComponentModel.Design.ComponentRenameEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="882c2-127">A <see cref="T:System.ComponentModel.Design.ComponentRenameEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="882c2-128">Recebe uma chamada do <see cref="T:System.ComponentModel.Design.UndoEngine" /> em resposta a um evento <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename" />.</span><span class="sxs-lookup"><span data-stu-id="882c2-128">Receives a call from the <see cref="T:System.ComponentModel.Design.UndoEngine" /> in response to a <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.UndoEngine" />
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="protected object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ GetService(Type ^ serviceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="882c2-129">O tipo de serviço a ser recuperado.</span><span class="sxs-lookup"><span data-stu-id="882c2-129">The type of service to retrieve.</span></span></param>
        <summary><span data-ttu-id="882c2-130">Obtém uma instância do serviço solicitado.</span><span class="sxs-lookup"><span data-stu-id="882c2-130">Gets an instance of the requested service.</span></span></summary>
        <returns><span data-ttu-id="882c2-131">Uma instância do serviço determinado ou <see langword="null" /> se o serviço não puder ser resolvido.</span><span class="sxs-lookup"><span data-stu-id="882c2-131">An instance of the given service, or <see langword="null" /> if the service cannot be resolved.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public virtual bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.UndoEngine.UndoUnit.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsEmpty { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="882c2-132">Obtém um valor que indica se <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> não contém eventos.</span><span class="sxs-lookup"><span data-stu-id="882c2-132">Gets a value indicating whether the <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> contains no events.</span></span></summary>
        <value>
          <span data-ttu-id="882c2-133"><see langword="true" /> Se o <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> não contém eventos; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="882c2-133"><see langword="true" /> if the <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> contains no events; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="882c2-134">O mecanismo de desfazer pode descartar unidades vazias.</span><span class="sxs-lookup"><span data-stu-id="882c2-134">The undo engine may discard empty units.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.UndoEngine.UndoUnit.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="882c2-135">Obtém o nome do <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</span><span class="sxs-lookup"><span data-stu-id="882c2-135">Gets the name of the <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</span></span></summary>
        <value><span data-ttu-id="882c2-136">O nome do <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</span><span class="sxs-lookup"><span data-stu-id="882c2-136">The name of the <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="882c2-137">Retorna um <see cref="T:System.String" /> que representa o nome atual da unidade.</span><span class="sxs-lookup"><span data-stu-id="882c2-137">Returns a <see cref="T:System.String" /> that represents the current name of the unit.</span></span></summary>
        <returns><span data-ttu-id="882c2-138">Um <see cref="T:System.String" /> que representa o nome atual da unidade.</span><span class="sxs-lookup"><span data-stu-id="882c2-138">A <see cref="T:System.String" /> that represents the current name of the unit.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Undo">
      <MemberSignature Language="C#" Value="public void Undo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Undo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" />
      <MemberSignature Language="VB.NET" Value="Public Sub Undo ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Undo();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="882c2-139">Executa uma ação de desfazer ou refazer.</span><span class="sxs-lookup"><span data-stu-id="882c2-139">Performs an undo or redo action.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="882c2-140">Ações de desfazer alternar se desfazer e refazer estados, por isso a chamada <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A> define duas vezes o objeto de volta ao estado original.</span><span class="sxs-lookup"><span data-stu-id="882c2-140">Undo actions toggle themselves between undo and redo states, so calling <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A> twice sets the object back to its original state.</span></span>  
  
 <span data-ttu-id="882c2-141">O <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> classe inicialmente assume que o trabalho não pode ser desfeito já foi feito, portanto, a primeira chamada para <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A> desfaz o trabalho.</span><span class="sxs-lookup"><span data-stu-id="882c2-141">The <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> class initially assumes that the undoable work has already been done, so the first call to <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A> undoes the work.</span></span> <span data-ttu-id="882c2-142">A próxima chamada desfaz a operação de desfazer anterior, executando uma restauração.</span><span class="sxs-lookup"><span data-stu-id="882c2-142">The next call undoes the previous undo operation, performing a redo.</span></span>  
  
 <span data-ttu-id="882c2-143">O <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A> chamadas de método de <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore%2A> método para executar uma operação de desfazer.</span><span class="sxs-lookup"><span data-stu-id="882c2-143">The <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A> method calls the <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore%2A> method to perform an undo operation.</span></span> <span data-ttu-id="882c2-144">O <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A> próprio método funciona para manter o estado consistente dentro do <xref:System.ComponentModel.Design.UndoEngine.UndoUnit>, mesmo no caso de uma exceção gerada pelo <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore%2A>.</span><span class="sxs-lookup"><span data-stu-id="882c2-144">The <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A> method itself works to maintain consistent state within the <xref:System.ComponentModel.Design.UndoEngine.UndoUnit>, even in the event of an exception thrown by <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="882c2-145">Não chame o <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore" /> método substituí-la diretamente; se você quiser, mas sempre chamar o <see langword="public" /> <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> método para executar o trabalho de desfazer.</span><span class="sxs-lookup"><span data-stu-id="882c2-145">Do not call the <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore" /> method directly; override it if you want, but always call the <see langword="public" /><see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> method to perform undo work.</span></span> <span data-ttu-id="882c2-146">O <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> método notifica o mecanismo de desfazer para suspender até que a operação de desfazer atual seja concluída de coleta de dados de desfazer.</span><span class="sxs-lookup"><span data-stu-id="882c2-146">The <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> method notifies the undo engine to suspend undo data gathering until the current undo operation is completed.</span></span> <span data-ttu-id="882c2-147">Isso impede que novas unidades de desfazer está sendo criado em resposta a essa unidade de trabalho.</span><span class="sxs-lookup"><span data-stu-id="882c2-147">This prevents new undo units from being created in response to this unit doing work.</span></span></para>
        </block>
        <altmember cref="T:System.ComponentModel.Design.UndoEngine" />
        <altmember cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore" />
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
      </Docs>
    </Member>
    <Member MemberName="UndoCore">
      <MemberSignature Language="C#" Value="protected virtual void UndoCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void UndoCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub UndoCore ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void UndoCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="882c2-148">Chamado por um <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> para executar uma ação de desfazer.</span><span class="sxs-lookup"><span data-stu-id="882c2-148">Called by <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> to perform an undo action.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="882c2-149">O <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A> chamadas de método de <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore%2A> método para executar uma operação de desfazer.</span><span class="sxs-lookup"><span data-stu-id="882c2-149">The <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A> method calls the <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore%2A> method to perform an undo operation.</span></span> <span data-ttu-id="882c2-150">O <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A> próprio método funciona para manter o estado consistente dentro do <xref:System.ComponentModel.Design.UndoEngine.UndoUnit>, mesmo no caso de uma exceção gerada pelo <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore%2A>.</span><span class="sxs-lookup"><span data-stu-id="882c2-150">The <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A> method itself works to maintain consistent state within the <xref:System.ComponentModel.Design.UndoEngine.UndoUnit>, even in the event of an exception thrown by <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="882c2-151">Não chame o <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore" /> método substituí-la diretamente; se você quiser, mas sempre chamar o <see langword="public" /> <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> método para executar o trabalho de desfazer.</span><span class="sxs-lookup"><span data-stu-id="882c2-151">Do not call the <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore" /> method directly; override it if you want, but always call the <see langword="public" /><see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> method to perform undo work.</span></span> <span data-ttu-id="882c2-152">O <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> método notifica o mecanismo de desfazer para suspender até que a operação de desfazer atual seja concluída de coleta de dados de operação de desfazer.</span><span class="sxs-lookup"><span data-stu-id="882c2-152">The <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> method notifies the undo engine to suspend undo-operation data gathering until the current undo operation is completed.</span></span> <span data-ttu-id="882c2-153">Isso impede que novas unidades de desfazer está sendo criado em resposta a essa unidade de trabalho.</span><span class="sxs-lookup"><span data-stu-id="882c2-153">This prevents new undo units from being created in response to this unit doing work.</span></span></para>
        </block>
        <altmember cref="T:System.ComponentModel.Design.UndoEngine" />
        <altmember cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" />
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
      </Docs>
    </Member>
    <Member MemberName="UndoEngine">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.Design.UndoEngine UndoEngine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.UndoEngine UndoEngine" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property UndoEngine As UndoEngine" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::ComponentModel::Design::UndoEngine ^ UndoEngine { System::ComponentModel::Design::UndoEngine ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.UndoEngine</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="882c2-154">Obtém o pai <see cref="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" />.</span><span class="sxs-lookup"><span data-stu-id="882c2-154">Gets the parent <see cref="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" />.</span></span></summary>
        <value><span data-ttu-id="882c2-155">O <see cref="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" /> ao qual este <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> está anexado.</span><span class="sxs-lookup"><span data-stu-id="882c2-155">The <see cref="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" /> to which this <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> is attached.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>