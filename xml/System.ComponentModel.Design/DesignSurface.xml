<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DesignSurface.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac53aa7493e17750216c5342b1ee5e784080710e3a2.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3aa7493e17750216c5342b1ee5e784080710e3a2</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Presents a user interface for designing components.</source>
          <target state="translated">Apresenta uma interface do usuário para a criação de componentes.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> class implements what the user perceives as a designer.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> classe implementa o que o usuário percebe como um designer.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> is the user interface the user manipulates to change design-time features.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> é que a interface do usuário o usuário manipula para alterar os recursos de tempo de design.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> provides a completely self-contained design surface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> Fornece uma superfície de design completamente independentes.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> class may be used as a stand-alone designer, or it may be coupled with the <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt;</ph> class to provide a common implementation for an application that hosts multiple <ph id="ph3">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> objects.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> classe pode ser usada como um designer autônomo, ou pode ser associado a <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt;</ph> classe para fornecer uma implementação comum para um aplicativo que hospeda vários <ph id="ph3">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> objetos.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> class can be used by itself, or the user can derive a new class from it and augment the behavior.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> classe pode ser usada por si só, ou o usuário pode derivar uma nova classe dela e aumentar o comportamento.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> class provides several design-time services automatically.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> classe fornece vários serviços de tempo de design automaticamente.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> class adds all of its services in its constructor.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> classe adiciona todos os seus serviços em seu construtor.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Most of these services can be overridden by replacing them in the protected <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A&gt;</ph> property.</source>
          <target state="translated">A maioria desses serviços pode ser substituída, substituindo-os em protegido <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>To replace a service, override the constructor, call base, and make any changes through the protected <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A&gt;</ph> property.</source>
          <target state="translated">Para substituir um serviço, substituir o construtor, chamar base e faça as alterações por meio do método <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>All services that are added to the service container and that implement <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> are disposed when the design surface is disposed.</source>
          <target state="translated">Todos os serviços que são adicionados ao contêiner de serviço e que implementam <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> são descartados quando a superfície de design é descartada.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>The default set of replaceable services that the <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> class provides is shown in the following table.</source>
          <target state="translated">O conjunto padrão de substituição de serviços que o <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> classe fornece é mostrado na tabela a seguir.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Service</source>
          <target state="translated">Serviço</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Description</source>
          <target state="translated">Descrição</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Enables objects that are not part of the container’s components collection to provide their own extender providers.</source>
          <target state="translated">Permite que os objetos que não fazem parte da coleção de componentes do contêiner para fornecer seus próprios provedores de extensor.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Used by <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> to get a list of extender providers.</source>
          <target state="translated">Usado por <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> para obter uma lista de provedores de extensor.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>With this service, extender providers can live outside of the container.</source>
          <target state="translated">Com esse serviço, provedores de extensor podem permanecer fora do contêiner.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Provides designer metadata hooks.</source>
          <target state="translated">Fornece ganchos de metadados de designer.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>This is the primary interface for metadata filtering.</source>
          <target state="translated">Essa é a principal interface para filtragem de metadados.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Provides a way to select components in the designer.</source>
          <target state="translated">Fornece uma maneira para selecionar componentes no designer.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Provides a way to get a name for objects, even when those objects are not sited.</source>
          <target state="translated">Fornece uma maneira de obter um nome para objetos, mesmo quando esses objetos não estão localizados.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Offers the design surface itself as a service.</source>
          <target state="translated">Oferece a superfície de design em si como um serviço.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Provides a base class for getting and setting option values for a designer.</source>
          <target state="translated">Fornece uma classe base para obter e configurar valores de opção para um designer.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>The following table shows the non-replaceable services provided by default.</source>
          <target state="translated">A tabela a seguir mostra os serviços não substituível fornecidos por padrão.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Service</source>
          <target state="translated">Serviço</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Description</source>
          <target state="translated">Descrição</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Raises events as changes are made to components.</source>
          <target state="translated">Gera eventos que são feitas alterações nos componentes.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Controls access to types, services, and transactions.</source>
          <target state="translated">Controla o acesso a tipos, serviços e transações.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Master interface for designers.</source>
          <target state="translated">Interface mestre para designers.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Owns the set of components that are being designed.</source>
          <target state="translated">Possui o conjunto de componentes que estão sendo projetados.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Each designer has an <ph id="ph1">&lt;xref:System.ComponentModel.IContainer&gt;</ph> that owns the components.</source>
          <target state="translated">Cada designer tem um <ph id="ph1">&lt;xref:System.ComponentModel.IContainer&gt;</ph> que possui os componentes.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Derives from <ph id="ph1">&lt;xref:System.IServiceProvider&gt;</ph> and provides a way to add and remove services from the designer.</source>
          <target state="translated">Deriva <ph id="ph1">&lt;xref:System.IServiceProvider&gt;</ph> e fornece uma maneira de adicionar e remover serviços do designer.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>In addition to these services, the <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> class also provides a single service that is available through a component’s site.</source>
          <target state="translated">Além desses serviços, a <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> classe também fornece um único serviço que está disponível por meio do site do componente.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>This service is unique for each component.</source>
          <target state="translated">Esse serviço é exclusivo para cada componente.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>The following table shows the services that cannot be replaced.</source>
          <target state="translated">A tabela a seguir mostra os serviços que não podem ser substituídos.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Service</source>
          <target state="translated">Serviço</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Description</source>
          <target state="translated">Descrição</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>A generic dictionary of key/value pairs that can be used to store arbitrary data about a component.</source>
          <target state="translated">Um dicionário genérico de pares chave/valor que pode ser usado para armazenar dados arbitrários sobre um componente.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>A container that enables a component to add additional child components to the designer.</source>
          <target state="translated">Um contêiner que permite que um componente adicionar componentes filhos adicionais para o designer.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>These components will be part of the design surface, but will not participate in serialization.</source>
          <target state="translated">Esses componentes serão parte da superfície de design, mas não participará na serialização.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>This is useful when you want to design a control that is capable of exposing a region of itself in a designer, but you do not want the region to participate in serialization.</source>
          <target state="translated">Isso é útil quando você deseja criar um controle que é capaz de expor uma região de si mesmo em um designer, mas você não quiser que a região para participar de serialização.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>In addition to <ph id="ph1">&lt;xref:System.ComponentModel.ISite&gt;</ph>, the site also implements the following interfaces.</source>
          <target state="translated">Além <ph id="ph1">&lt;xref:System.ComponentModel.ISite&gt;</ph>, o site também implementa as interfaces a seguir.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Check for the existence of these interfaces, rather than use indiscriminate casting, because other site implementations may not implement them.</source>
          <target state="translated">Verificar a existência dessas interfaces, em vez de usar conversão indiscriminado, pois outras implementações do site não podem implementá-las.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Service</source>
          <target state="translated">Serviço</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Description</source>
          <target state="translated">Descrição</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Provides a way to get to the container of site-specific services.</source>
          <target state="translated">Fornece uma maneira de obter o contêiner de serviços específicos do site.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>For example, <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDictionaryService&gt;</ph> is a site-specific service.</source>
          <target state="translated">Por exemplo, <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDictionaryService&gt;</ph> é um serviço específico do site.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>With this service, you can add additional site-specific services.</source>
          <target state="translated">Com esse serviço, você pode adicionar outros serviços específicos do site.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>for full access to system resources.</source>
          <target state="translated">Para obter acesso completo aos recursos do sistema.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Demand values: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /&gt;</ph>.</source>
          <target state="translated">Exigem valores: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Associated state:</source>
          <target state="translated">Estados associados:</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.#ctor">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> attached to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> has been disposed.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> anexado a <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> foi descartado.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider)">
          <source>The parent service provider, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if there is no parent used to resolve services.</source>
          <target state="translated">O provedor de serviço pai ou <ph id="ph1">&lt;see langword="null" /&gt;</ph> se não houver nenhum pai usado para resolver serviços.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider)">
          <source>When <ph id="ph1">`parentProvide`</ph> is present, designers contained within the surface can retrieve services from the application.</source>
          <target state="translated">Quando <ph id="ph1">`parentProvide`</ph> estiver presente, designers contidos na superfície de podem recuperar os serviços do aplicativo.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> attached to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> has been disposed.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> anexado a <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> foi descartado.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.#ctor(System.Type)">
          <source>The type of root component to create.</source>
          <target state="translated">O tipo de componente raiz a ser criado.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.#ctor(System.Type)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.#ctor(System.Type)">
          <source>When you use the <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A&gt;</ph> constructor, it creates a simple designer loader that, in turn, creates a component of the given type and then ends the loading process.</source>
          <target state="translated">Quando você usa o <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A&gt;</ph> construtor, ele cria um carregador de designer simple que, por sua vez, cria um componente do tipo em questão e, em seguida, encerra o processo de carregamento.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.#ctor(System.Type)">
          <source>This is a straightforward way to create a designer, under the assumption that all saving of state will be done externally.</source>
          <target state="translated">Essa é uma maneira simples para criar um designer, sob a suposição de que todos os salvamento de estado será feito externamente.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.#ctor(System.Type)">
          <source>Internally, this calls <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt;</ph> and passes the root component type.</source>
          <target state="translated">Internamente, isso se chama <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt;</ph> e passa o tipo de componente raiz.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.#ctor(System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A&gt;</ph> overload is not affected by <ph id="ph2">&lt;xref:System.Windows.Forms.Design.DesignerOptions&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A&gt;</ph> sobrecarga não é afetada por <ph id="ph2">&lt;xref:System.Windows.Forms.Design.DesignerOptions&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.#ctor(System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Design.DesignerOptions&gt;</ph> must be in the service container before the design surface loads.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Design.DesignerOptions&gt;</ph> deve estar no contêiner de serviço antes de carrega a superfície de design.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.#ctor(System.Type)">
          <source>If you need access to <ph id="ph1">&lt;xref:System.Windows.Forms.Design.DesignerOptions&gt;</ph>, call the empty constructor, add the <ph id="ph2">&lt;xref:System.Windows.Forms.Design.DesignerOptions&gt;</ph> to the <ph id="ph3">&lt;xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A&gt;</ph> and call <ph id="ph4">&lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt;</ph> with <ph id="ph5">`rootComponentType`</ph>.</source>
          <target state="translated">Se você precisar acessar <ph id="ph1">&lt;xref:System.Windows.Forms.Design.DesignerOptions&gt;</ph>, chame o construtor vazio, adicionar o <ph id="ph2">&lt;xref:System.Windows.Forms.Design.DesignerOptions&gt;</ph> para o <ph id="ph3">&lt;xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A&gt;</ph> e chame <ph id="ph4">&lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt;</ph> com <ph id="ph5">`rootComponentType`</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.#ctor(System.Type)">
          <source><ph id="ph1">&lt;paramref name="rootComponent" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rootComponent" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.#ctor(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> attached to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> has been disposed.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> anexado a <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> foi descartado.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider,System.Type)">
          <source>The parent service provider, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if there is no parent used to resolve services.</source>
          <target state="translated">O provedor de serviço pai ou <ph id="ph1">&lt;see langword="null" /&gt;</ph> se não houver nenhum pai usado para resolver serviços.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider,System.Type)">
          <source>The type of root component to create.</source>
          <target state="translated">O tipo de componente raiz a ser criado.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider,System.Type)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider,System.Type)">
          <source>Using the <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A&gt;</ph> constructor creates a simple designer loader that creates a component of the given type and then ends the loading process.</source>
          <target state="translated">Usando o <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A&gt;</ph> construtor cria um carregador de designer simple que cria um componente do tipo em questão e, em seguida, encerra o processo de carregamento.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider,System.Type)">
          <source>This is a straightforward way to create a designer, under the assumption that all saving of state will be done externally.</source>
          <target state="translated">Essa é uma maneira simples para criar um designer, sob a suposição de que todos os salvamento de estado será feito externamente.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider,System.Type)">
          <source>Internally, this calls <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt;</ph> and passes the root component type.</source>
          <target state="translated">Internamente, isso se chama <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt;</ph> e passa o tipo de componente raiz.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider,System.Type)">
          <source><ph id="ph1">&lt;paramref name="rootComponent" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rootComponent" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> attached to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> has been disposed.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> anexado a <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> foi descartado.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Begins the loading process.</source>
          <target state="translated">Inicia o processo de carregamento.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.ComponentModel.Design.Serialization.DesignerLoader)">
          <source>The designer loader to use for loading the designer.</source>
          <target state="translated">O carregador de designer a ser usado para carregar o designer.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.ComponentModel.Design.Serialization.DesignerLoader)">
          <source>Begins the loading process with the given designer loader.</source>
          <target state="translated">Inicia o processo de carregamento com o carregador de designer fornecido.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.ComponentModel.Design.Serialization.DesignerLoader)">
          <source>Designer loading can be asynchronous, so the loading may continue to progress after this call has returned.</source>
          <target state="translated">Carregamento Designer pode ser assíncrono para que o carregamento pode continuar depois que essa chamada retornou de progresso.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.ComponentModel.Design.Serialization.DesignerLoader)">
          <source>Attach an event handler to the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost.LoadComplete&gt;</ph> event to be notified when the design surface has completed loading.</source>
          <target state="translated">Anexar um manipulador de eventos para o <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost.LoadComplete&gt;</ph> evento para ser notificado quando a superfície de design for carregado.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.ComponentModel.Design.Serialization.DesignerLoader)">
          <source>After <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt;</ph> is called, you can immediately obtain the view for the designer, because designer loaders must provide at least the root component when loading asynchronously.</source>
          <target state="translated">Depois de <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt;</ph> é chamado, você pode obter imediatamente o modo de exibição para o designer, porque carregadores de designer devem fornecer pelo menos o componente raiz ao carregamento de forma assíncrona.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.ComponentModel.Design.Serialization.DesignerLoader)">
          <source><ph id="ph1">&lt;paramref name="loader" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="loader" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.ComponentModel.Design.Serialization.DesignerLoader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> attached to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> has been disposed.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> anexado a <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> foi descartado.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.Type)">
          <source>The type of component to create in design mode.</source>
          <target state="translated">O tipo de componente a ser criado no modo de design.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.Type)">
          <source>Begins the loading process.</source>
          <target state="translated">Inicia o processo de carregamento.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.Type)">
          <source>When <ph id="ph1">`rootComponentType`</ph> is specified, a default designer loader that simply creates an instance of <ph id="ph2">`rootComponentType`</ph> will be used.</source>
          <target state="translated">Quando <ph id="ph1">`rootComponentType`</ph> for especificado, um carregador de designer padrão que simplesmente cria uma instância de <ph id="ph2">`rootComponentType`</ph> será usado.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.Type)">
          <source>Designer loading can be asynchronous, so the loading may continue to progress after this call has returned.</source>
          <target state="translated">Carregamento Designer pode ser assíncrono para que o carregamento pode continuar depois que essa chamada retornou de progresso.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.Type)">
          <source>Attach an event handler to the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost.LoadComplete&gt;</ph> event to be notified when the design surface has completed loading.</source>
          <target state="translated">Anexar um manipulador de eventos para o <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost.LoadComplete&gt;</ph> evento para ser notificado quando a superfície de design for carregado.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.Type)">
          <source>After <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt;</ph> is called, you can immediately obtain the view for the designer, because designer loaders must provide at least the root component when loading asynchronously.</source>
          <target state="translated">Depois de <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt;</ph> é chamado, você pode obter imediatamente o modo de exibição para o designer, porque carregadores de designer devem fornecer pelo menos o componente raiz ao carregamento de forma assíncrona.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt;</ph> method creates an instance of the component type and initializes a designer for this instance.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt;</ph> método cria uma instância do tipo de componente e inicializa um designer para essa instância.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Loaded&gt;</ph> event is raised before this method returns.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Loaded&gt;</ph> evento é gerado antes que este método retorna.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.Type)">
          <source><ph id="ph1">&lt;paramref name="rootComponentType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rootComponentType" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> attached to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> has been disposed.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> anexado a <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> foi descartado.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.DesignSurface.ComponentContainer">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph> implementation within the design surface.</source>
          <target state="translated">Obtém a implementação de <ph id="ph1">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph> na superfície de design.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurface.ComponentContainer">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph> implementation within the design surface.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph> implementação na superfície de design.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurface.ComponentContainer">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.ComponentContainer%2A&gt;</ph> property holds all objects that are currently in design mode.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.ComponentContainer%2A&gt;</ph> propriedade contém todos os objetos que estão atualmente no modo de design.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurface.ComponentContainer">
          <source>When components are added to <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.ComponentContainer%2A&gt;</ph>, their designer, if any, is loaded.</source>
          <target state="translated">Quando os componentes são adicionados ao <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.ComponentContainer%2A&gt;</ph>, o designer, se houver, será carregado.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurface.ComponentContainer">
          <source>The component is sited with a site that provides full access to the design surface.</source>
          <target state="translated">O componente está localizado com um site que fornece acesso completo à superfície de design.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.DesignSurface.ComponentContainer">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> attached to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> has been disposed.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> anexado a <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> foi descartado.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateComponent(System.Type)">
          <source>The type of component to create.</source>
          <target state="translated">O tipo de componente a ser criado.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateComponent(System.Type)">
          <source>Creates an instance of a component.</source>
          <target state="translated">Cria uma instância de um componente.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateComponent(System.Type)">
          <source>The newly created component.</source>
          <target state="translated">O componente recém-criado.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.CreateComponent(System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.CreateComponent%2A&gt;</ph> method is called by the design surface’s <ph id="ph2">&lt;xref:System.ComponentModel.Design.IDesignerHost.CreateComponent%2A&gt;</ph> method to create an instance of a component.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.CreateComponent%2A&gt;</ph> método é chamado, a superfície de design <ph id="ph2">&lt;xref:System.ComponentModel.Design.IDesignerHost.CreateComponent%2A&gt;</ph> método para criar uma instância de um componente.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.CreateComponent(System.Type)">
          <source>The component should be created and added to the public container on the design surface.</source>
          <target state="translated">O componente deve ser criado e adicionado ao contêiner público na superfície de design.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateComponent(System.Type)">
          <source><ph id="ph1">&lt;paramref name="componentType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="componentType" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateComponent(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> attached to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> has been disposed.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> anexado a <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> foi descartado.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)">
          <source>The component for which the designer should be created.</source>
          <target state="translated">O componente para o qual o designer deve ser criado.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to create a root designer; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to create a normal designer.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para criar um designer raiz; <ph id="ph2">&lt;see langword="false" /&gt;</ph> para criar um designer normal.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)">
          <source>Creates a designer when a component is added to the container.</source>
          <target state="translated">Cria um designer quando um componente é adicionado ao contêiner.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)">
          <source>An instance of the requested designer, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no matching designer could be found.</source>
          <target state="translated">Uma instância do designer solicitado ou <ph id="ph1">&lt;see langword="null" /&gt;</ph>, se nenhum designer correspondente pôde ser encontrado.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.CreateDesigner%2A&gt;</ph> method is called by the design surface’s <ph id="ph2">&lt;xref:System.ComponentModel.IContainer&gt;</ph> when a component is added to the container.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.CreateDesigner%2A&gt;</ph> método é chamado, a superfície de design <ph id="ph2">&lt;xref:System.ComponentModel.IContainer&gt;</ph> quando um componente é adicionado ao contêiner.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)">
          <source>This method creates a designer, but does not initialize it.</source>
          <target state="translated">Esse método cria um designer, mas não inicializar.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)">
          <source>When it returns, the designer is initialized by the container.</source>
          <target state="translated">Quando retorna, o designer é inicializado pelo contêiner.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.CreateDesigner%2A&gt;</ph> can create two different types of designers: root designers and normal designers.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.CreateDesigner%2A&gt;</ph> pode criar dois tipos diferentes de designers: raiz designers e designers normais.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)">
          <source>A root designer is a designer for the root component in the design surface, which by definition is the first component added to the container.</source>
          <target state="translated">Um designer raiz é um designer para o componente raiz na superfície de design, que, por definição, é o primeiro componente adicionado ao contêiner.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)">
          <source>Root designers differ from normal designers because they are responsible for the user interface presented to the end user.</source>
          <target state="translated">Designers de raiz diferem dos designers normais, porque eles são responsáveis pela interface do usuário apresentado ao usuário final.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)">
          <source>Root designers typically coordinate with the rest of the designers on a design surface to provide this interface.</source>
          <target state="translated">Designers de raiz normalmente coordenam com o restante dos designers em uma superfície de design para fornecer essa interface.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)">
          <source>The default implementation of this method delegates to <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>, passing in <ph id="ph2">&lt;xref:System.ComponentModel.Design.IRootDesigner&gt;</ph> as the designer type for root designers, or <ph id="ph3">&lt;xref:System.ComponentModel.Design.IDesigner&gt;</ph> for normal designers.</source>
          <target state="translated">A implementação padrão desse método delega para <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>, passando <ph id="ph2">&lt;xref:System.ComponentModel.Design.IRootDesigner&gt;</ph> como o tipo de designer para designers de raiz, ou <ph id="ph3">&lt;xref:System.ComponentModel.Design.IDesigner&gt;</ph> para designers normais.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)">
          <source>You can override this method to request a specific type of designer.</source>
          <target state="translated">Você pode substituir esse método para solicitar um tipo específico de designer.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> attached to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> has been disposed.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> anexado a <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> foi descartado.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateInstance(System.Type)">
          <source>The type to create.</source>
          <target state="translated">O tipo a ser criado.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateInstance(System.Type)">
          <source>Creates an instance of the given type.</source>
          <target state="translated">Cria uma instância do tipo fornecido.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateInstance(System.Type)">
          <source>The newly created object.</source>
          <target state="translated">O objeto recém-criado.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.CreateInstance(System.Type)">
          <source>If <ph id="ph1">`type`</ph> is an <ph id="ph2">&lt;xref:System.ComponentModel.IComponent&gt;</ph>, <ph id="ph3">&lt;xref:System.ComponentModel.Design.DesignSurface.CreateInstance%2A&gt;</ph> searches for a constructor of type <ph id="ph4">&lt;xref:System.ComponentModel.IContainer&gt;</ph> first, followed by an empty constructor.</source>
          <target state="translated">Se <ph id="ph1">`type`</ph> é um <ph id="ph2">&lt;xref:System.ComponentModel.IComponent&gt;</ph>, <ph id="ph3">&lt;xref:System.ComponentModel.Design.DesignSurface.CreateInstance%2A&gt;</ph> procura um construtor de tipo <ph id="ph4">&lt;xref:System.ComponentModel.IContainer&gt;</ph> primeiro, seguido de um construtor vazio.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateInstance(System.Type)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateInstance(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> attached to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> has been disposed.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> anexado a <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> foi descartado.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Creates a container suitable for nesting controls or components.</source>
          <target state="translated">Cria um contêiner adequado para aninhar controles ou componentes.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent)">
          <source>The component that manages the nested container.</source>
          <target state="translated">O componente que gerencia o contêiner aninhado.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent)">
          <source>Creates a container suitable for nesting controls or components.</source>
          <target state="translated">Cria um contêiner adequado para aninhar controles ou componentes.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent)">
          <source>The nested container.</source>
          <target state="translated">O contêiner aninhado.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent)">
          <source>Adding a component to a nested container creates its designer and makes it eligible for all services available from the design surface.</source>
          <target state="translated">Adicionando um componente a um contêiner aninhado cria seu designer e torna qualificada para todos os serviços disponíveis da superfície de design.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent)">
          <source>Components added to nested containers do not participate in serialization.</source>
          <target state="translated">Componentes adicionados ao contêineres aninhados não participam de serialização.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent)">
          <source><ph id="ph1">&lt;paramref name="owningComponent" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="owningComponent" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> attached to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> has been disposed.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> anexado a <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> foi descartado.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent,System.String)">
          <source>The component that manages the nested container.</source>
          <target state="translated">O componente que gerencia o contêiner aninhado.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent,System.String)">
          <source>An additional name for the nested container.</source>
          <target state="translated">Um nome adicional para o contêiner aninhado.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent,System.String)">
          <source>Creates a container suitable for nesting controls or components.</source>
          <target state="translated">Cria um contêiner adequado para aninhar controles ou componentes.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent,System.String)">
          <source>The nested container.</source>
          <target state="translated">O contêiner aninhado.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent,System.String)">
          <source>Adding a component to a nested container creates its designer and makes it eligible for all services available from the design surface.</source>
          <target state="translated">Adicionando um componente a um contêiner aninhado cria seu designer e torna qualificada para todos os serviços disponíveis da superfície de design.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent,System.String)">
          <source>Components added to nested containers do not participate in serialization.</source>
          <target state="translated">Componentes adicionados ao contêineres aninhados não participam de serialização.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent,System.String)">
          <source>You can provide an additional name for the <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.CreateNestedContainer%2A&gt;</ph> method by passing a value into <ph id="ph2">`containerName`</ph>.</source>
          <target state="translated">Você pode fornecer um nome adicional para o <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.CreateNestedContainer%2A&gt;</ph> método, passando um valor em <ph id="ph2">`containerName`</ph>.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent,System.String)">
          <source><ph id="ph1">&lt;paramref name="owningComponent" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="owningComponent" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> attached to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> has been disposed.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> anexado a <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> foi descartado.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph>.</source>
          <target state="translated">Libera os recursos usados pelo <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.Dispose">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph>.</source>
          <target state="translated">Libera os recursos usados pelo <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose">
          <source>The public <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%2A&gt;</ph> method follows the standard <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> pattern.</source>
          <target state="translated">O público <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%2A&gt;</ph> método segue o padrão <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> padrão.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose">
          <source>Calling this method destroys the design surface.</source>
          <target state="translated">Chamar este método destrói a superfície de design.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose">
          <source>The protected version of this method is <ph id="ph1">`virtual`</ph> and follows the normal <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> pattern.</source>
          <target state="translated">A versão protegida desse método é <ph id="ph1">`virtual`</ph> e segue o normal <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> padrão.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose">
          <source>Because <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> does not have any native code to clean up, it does not have a finalizer that calls <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%28System.Boolean%29&gt;</ph>.</source>
          <target state="translated">Porque <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> não tem qualquer código nativo para limpar, ele não tem um finalizador que chama <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%28System.Boolean%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose">
          <source>If you need to call <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%28System.Boolean%29&gt;</ph>, you must add a finalizer yourself.</source>
          <target state="translated">Se você precisar chamar <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%28System.Boolean%29&gt;</ph>, você deve adicionar um finalizador.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose">
          <source>Call <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%2A&gt;</ph> when you are finished using the <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph>.</source>
          <target state="translated">Chamar <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%2A&gt;</ph> quando tiver terminado de usar o <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%2A&gt;</ph> method leaves the <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> in an unusable state.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%2A&gt;</ph> método deixa o <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> em um estado inutilizável.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose">
          <source>After calling <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%2A&gt;</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> was occupying.</source>
          <target state="translated">Depois de chamar <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%2A&gt;</ph>, você deve liberar todas as referências para o <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> para o coletor de lixo possa recuperar a memória que o <ph id="ph3">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> estava ocupando.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>limpeza de recursos não gerenciados<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> e <bpt id="p2">[</bpt>implementar um método Dispose<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose">
          <source>Always call <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%2A&gt;</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph>.</source>
          <target state="translated">Sempre chamar <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%2A&gt;</ph> antes de liberar sua última referência para o <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">Caso contrário, os recursos que está usando não serão liberados até que o coletor de lixo chame o <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> do objeto <ph id="ph2">`Finalize`</ph> método.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para liberar recursos gerenciados e não gerenciados; <ph id="ph2">&lt;see langword="false" /&gt;</ph> para liberar apenas recursos não gerenciados.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph>.</source>
          <target state="translated">Libera os recursos usados pelo <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)">
          <source>The public <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose&gt;</ph> method follows the standard <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> pattern.</source>
          <target state="translated">O público <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose&gt;</ph> método segue o padrão <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> padrão.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)">
          <source>Calling this method destroys the design surface.</source>
          <target state="translated">Chamar este método destrói a superfície de design.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)">
          <source>The protected version of this method is <ph id="ph1">`virtual`</ph> and follows the normal <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> pattern.</source>
          <target state="translated">A versão protegida desse método é <ph id="ph1">`virtual`</ph> e segue o normal <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> padrão.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)">
          <source>Because <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> does not have any native code to clean up, it does not have a finalizer that calls <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%2A&gt;</ph>.</source>
          <target state="translated">Porque <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> não tem qualquer código nativo para limpar, ele não tem um finalizador que chama <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)">
          <source>If you need to call <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%2A&gt;</ph>, you must add a finalizer yourself.</source>
          <target state="translated">Se você precisar chamar <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%2A&gt;</ph>, você deve adicionar um finalizador.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">Este método é chamado pelo método público <ph id="ph1">`Dispose()`</ph> e pelo método <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> invoca o método <ph id="ph2">`Dispose(Boolean)`</ph> protegido com o parâmetro <ph id="ph3">`disposing`</ph> definido como <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invoca <ph id="ph2">`Dispose`</ph> com <ph id="ph3">`disposing`</ph> definido como <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is true, this method releases all resources held by any managed objects that this <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> references.</source>
          <target state="translated">Quando o <ph id="ph1">`disposing`</ph> parâmetro for true, este método libera todos os recursos mantidos por qualquer objeto gerenciado que este <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> referências.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">Este método invoca o método <ph id="ph1">`Dispose()`</ph> de cada objeto referenciado.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> pode ser chamado várias vezes por outros objetos.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> cuidado para não fazer referência a objetos que têm foi descartados anteriormente em uma chamada anterior para <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre como implementar <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, consulte <bpt id="p1">[</bpt>implementar um método Dispose<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">Para obter mais informações sobre <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> e <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, consulte <bpt id="p1">[</bpt>limpeza de recursos não gerenciados<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> e <bpt id="p2">[</bpt>substituindo o método Finalize<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.DesignSurface.Disposed">
          <source>Occurs when the design surface is disposed.</source>
          <target state="translated">Ocorre quando a superfície de design é descartada.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.DesignSurface.Disposed">
          <source>The surface is only disposed when the public <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%2A&gt;</ph> method on <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> is called.</source>
          <target state="translated">A superfície só será descartado quando o público <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%2A&gt;</ph> método <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> é chamado.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.DesignSurface.DtelLoading">
          <source>Gets a value indicating whether the <bpt id="p1">**</bpt>Design-time Error List<ept id="p1">**</ept> is loading.</source>
          <target state="translated">Obtém um valor que indica se a <bpt id="p1">**</bpt>Lista de Erros de Tempo de Design<ept id="p1">**</ept> está carregando.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurface.DtelLoading">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <bpt id="p1">**</bpt>Design-time Error List<ept id="p1">**</ept> is loading; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se o <bpt id="p1">**</bpt>lista de erros de tempo de Design<ept id="p1">**</ept> carregar; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.Flush">
          <source>Serializes changes to the design surface.</source>
          <target state="translated">Serializa alterações para a superfície de design.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Flush">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Flush%2A&gt;</ph> method can be called to push changes made to the design surface down to the serializer.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Flush%2A&gt;</ph> método pode ser chamado para enviar por push as alterações feitas à superfície de design para o serializador.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Flush">
          <source>This ensures that the design surface and its serialized state are synchronized.</source>
          <target state="translated">Isso garante que a superfície de design e seu estado serializado são sincronizados.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Flush">
          <source>The actual implementation of this method is forwarded to the designer loader associated with design surface.</source>
          <target state="translated">A implementação real desse método é encaminhada para o carregador de designer associado à superfície de design.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Flush">
          <source>The designer loader may choose to defer changes until <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Flush%2A&gt;</ph> is called, or it may choose to keep the serialized data up to date with all user changes.</source>
          <target state="translated">O carregador de designer pode optar por adiar as alterações até <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Flush%2A&gt;</ph> é chamado, ou ele pode optar por manter os dados serializados atualizado com todas as alterações do usuário.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Flush">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Flush%2A&gt;</ph> method ensures that regardless of the model the designer loader chooses to use, the serialized state is synchronized with the actual design surface.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Flush%2A&gt;</ph> método garante que, independentemente do modelo em que o carregador de designer opta por usar, o estado serializado é sincronizado com a superfície de design real.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.DesignSurface.Flushed">
          <source>Occurs when a call is made to the <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.DesignSurface.Flush" /&gt;</ph> method of <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph>.</source>
          <target state="translated">Ocorre quando uma chamada é feita para o método <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.DesignSurface.Flush" /&gt;</ph> de <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.DesignSurface.Flushed">
          <source>The designer loader is flushed first, and then the <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Flushed&gt;</ph> event is raised.</source>
          <target state="translated">O carregador do designer é liberado primeiro e, em seguida, o <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Flushed&gt;</ph> é gerado.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.GetService(System.Type)">
          <source>The type of service to retrieve.</source>
          <target state="translated">O tipo de serviço a ser recuperado.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.GetService(System.Type)">
          <source>Gets a service from the service container.</source>
          <target state="translated">Obtém um serviço de contêiner de serviço.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.GetService(System.Type)">
          <source>An object that implements, or is a derived class of, <ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph>, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the service does not exist in the service container.</source>
          <target state="translated">Um objeto que implementa <ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph> ou é uma classe derivada dele ou então <ph id="ph2">&lt;see langword="null" /&gt;</ph>, se o serviço não existe no contêiner de serviço.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.GetService(System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.GetService%2A&gt;</ph> method retrieves a service in the design surface’s service container.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.GetService%2A&gt;</ph> método recupera um serviço no contêiner de serviço da superfície de design.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.GetService(System.Type)">
          <source>In addition, this will forward to any service provider that was given to the design surface at construction time.</source>
          <target state="translated">Além disso, isso encaminhará para qualquer provedor de serviço que foi fornecido para a superfície de design em tempo de construção.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.DesignSurface.IsLoaded">
          <source>Gets a value indicating whether the design surface is currently loaded.</source>
          <target state="translated">Obtém um valor que indica se a superfície de design está atualmente carregada.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurface.IsLoaded">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the design surface is currently loaded; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se a superfície de design está carregada no momento; Caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.DesignSurface.Loaded">
          <source>Occurs when the designer load has completed.</source>
          <target state="translated">Ocorre após a conclusão do carregamento do designer.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.DesignSurface.Loaded">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Loaded&gt;</ph> event is raised for successful loads as well as unsuccessful ones.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Loaded&gt;</ph> é gerado para cargas com êxito, bem como aqueles sem êxito.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.DesignSurface.Loaded">
          <source>If code in this event handler throws an exception, the designer is unloaded.</source>
          <target state="translated">Se o código neste manipulador de eventos gera uma exceção, o designer está descarregado.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.DesignSurface.Loaded">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.LoadedEventArgs&gt;</ph> object can be used to determine if loading succeeded, and it can also provide a list of errors that occurred during the load.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.ComponentModel.Design.LoadedEventArgs&gt;</ph> objeto pode ser usado para determinar se carregar com êxito, e ele também pode fornecer uma lista de erros que ocorreram durante o carregamento.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.DesignSurface.Loaded">
          <source>Errors can occur for successful loads as well, provided that the serialization system can tolerate errors.</source>
          <target state="translated">Podem ocorrer erros, carrega com êxito desde que o sistema de serialização pode tolerar erros.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.DesignSurface.LoadErrors">
          <source>Returns a collection of loading errors or a void collection.</source>
          <target state="translated">Retorna uma coleção de carregamento de erros ou uma coleção nula.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurface.LoadErrors">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> of loading errors.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> de erros de carregamento.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.DesignSurface.Loading">
          <source>Occurs when the designer is about to be loaded.</source>
          <target state="translated">Ocorre quando o designer está prestes a ser carregado.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.OnLoaded(System.ComponentModel.Design.LoadedEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.LoadedEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.LoadedEventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.OnLoaded(System.ComponentModel.Design.LoadedEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.OnLoading(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.OnLoading(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.DesignSurface.Loading" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.DesignSurface.Loading" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.OnUnloaded(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.OnUnloaded(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.DesignSurface.Unloaded" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.DesignSurface.Unloaded" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.OnUnloading(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.OnUnloading(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.DesignSurface.Unloading" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.DesignSurface.Unloading" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.OnViewActivate(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.OnViewActivate(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.DesignSurface.ViewActivated" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.DesignSurface.ViewActivated" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.DesignSurface.ServiceContainer">
          <source>Gets the service container.</source>
          <target state="translated">Obtém o contêiner de serviço.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurface.ServiceContainer">
          <source>The service container that provides all services to designers contained within the design surface.</source>
          <target state="translated">O contêiner de serviço que fornece todos os serviços para os designers contidos na superfície de design.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurface.ServiceContainer">
          <source>At construction time, <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> adds default services into this service container.</source>
          <target state="translated">Em tempo de construção, <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> adiciona serviços padrão neste contêiner de serviço.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurface.ServiceContainer">
          <source>You can leave the default services in their present state, or you can remove them and replace them with your own.</source>
          <target state="translated">Você pode deixar os serviços padrão em seu estado atual, ou você pode removê-los e substituí-los com seus próprios.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurface.ServiceContainer">
          <source>The default services are all demand-created, so there is no loss in performance for adding them at construction time.</source>
          <target state="translated">Os serviços padrão são todos criados para o demanda, para que não haja nenhuma perda de desempenho para adicioná-los em tempo de construção.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.DesignSurface.ServiceContainer">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> attached to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> has been disposed.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> anexado a <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> foi descartado.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.DesignSurface.Unloaded">
          <source>Occurs when a designer has finished unloading.</source>
          <target state="translated">Ocorre quando o descarregamento de um designer foi concluído.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.DesignSurface.Unloading">
          <source>Occurs when a designer is about to unload.</source>
          <target state="translated">Ocorre quando um designer está prestes a ser descarregado.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.DesignSurface.Unloading">
          <source>When a designer unloads, the entire state for that designer is destroyed, including the designer’s view.</source>
          <target state="translated">Quando um designer descarrega, todo o estado de designer é destruído, incluindo o modo de exibição designer.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.DesignSurface.Unloading">
          <source>The view should be unparented at this time.</source>
          <target state="translated">O modo de exibição deve ser órfãos no momento.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.DesignSurface.View">
          <source>Gets the view for the root designer.</source>
          <target state="translated">Obtém a exibição do designer raiz.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurface.View">
          <source>The view for the root designer.</source>
          <target state="translated">O modo de exibição para o designer raiz.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurface.View">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt;</ph> method must be called beforehand to start the loading process.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt;</ph> método deve ser chamado antecipadamente para iniciar o processo de carregamento.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurface.View">
          <source>It is possible to return a view before the designer loader finishes loading because the root designer, which supplies the view, is the first object created by the designer loader.</source>
          <target state="translated">É possível retornar uma exibição antes de concluir o carregamento porque o designer raiz, que fornece o modo de exibição, é o primeiro objeto criado pelo carregador de designer o carregador do designer.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurface.View">
          <source>If a view is unavailable, <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt;</ph> raises an exception.</source>
          <target state="translated">Se não estiver disponível, uma exibição <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt;</ph> gera uma exceção.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurface.View">
          <source>The notion of a view technology is obsolete.</source>
          <target state="translated">A noção de uma tecnologia de exibição está obsoleta.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurface.View">
          <source>But, it remains in the interfaces for root designers for backward compatibility.</source>
          <target state="translated">Mas, ele permanecerá em interfaces para designers de raiz para compatibilidade com versões anteriores.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurface.View">
          <source>Its use is hidden from anyone using <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> objects.</source>
          <target state="translated">Seu uso é oculta de qualquer pessoa usando <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> objetos.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurface.View">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.View%2A&gt;</ph> property hides view technologies by passing the supported technologies back into the root designer.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.View%2A&gt;</ph> propriedade oculta tecnologias de exibição, passando as tecnologias com suporte no designer de raiz.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurface.View">
          <source>The following code example shows how <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.View%2A&gt;</ph> hides view technologies.</source>
          <target state="translated">O seguinte exemplo de código mostra como <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.View%2A&gt;</ph> oculta exibir tecnologias.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.DesignSurface.View">
          <source>The design surface is not loading, the designer loader has not yet created a root designer, or the design surface finished the load, but failed.</source>
          <target state="translated">A superfície de design não está carregando, o carregador de designer ainda não criou um designer raiz ou o carregamento da superfície de design foi concluído, mas falhou.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.DesignSurface.View">
          <source>More information may available in the <ph id="ph1">&lt;see cref="P:System.Exception.InnerException" /&gt;</ph>.</source>
          <target state="translated">Mais informações podem estar disponíveis no <ph id="ph1">&lt;see cref="P:System.Exception.InnerException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.DesignSurface.View">
          <source>The designer loaded, but it does not offer a view compatible with this design surface.</source>
          <target state="translated">O designer foi carregado, mas não oferece uma exibição compatível com essa superfície de design.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.DesignSurface.View">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> attached to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> has been disposed.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> anexado a <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> foi descartado.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.DesignSurface.ViewActivated">
          <source>Occurs when the <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.IDesignerHost.Activate" /&gt;</ph> method has been called on <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph>.</source>
          <target state="translated">Ocorre quando o método <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.IDesignerHost.Activate" /&gt;</ph> foi chamado em <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.DesignSurface.ViewActivated">
          <source>If you want to support the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost.Activate%2A&gt;</ph> method, your event handler should activate the window for this design surface.</source>
          <target state="translated">Se você desejar oferecer suporte a <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost.Activate%2A&gt;</ph> método, o manipulador de eventos deve ativar a janela para a superfície de design.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>