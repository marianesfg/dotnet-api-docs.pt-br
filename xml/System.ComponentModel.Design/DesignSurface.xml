<Type Name="DesignSurface" FullName="System.ComponentModel.Design.DesignSurface">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3aa7493e17750216c5342b1ee5e784080710e3a2" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30370460" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DesignSurface : IDisposable, IServiceProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DesignSurface extends System.Object implements class System.IDisposable, class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.DesignSurface" />
  <TypeSignature Language="VB.NET" Value="Public Class DesignSurface&#xA;Implements IDisposable, IServiceProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class DesignSurface : IDisposable, IServiceProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="e5cb9-101">Apresenta uma interface do usuário para a criação de componentes.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e5cb9-101">Presents a user interface for designing components.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5cb9-102">O <xref:System.ComponentModel.Design.DesignSurface> classe implementa o que o usuário percebe como um designer.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-102">The <xref:System.ComponentModel.Design.DesignSurface> class implements what the user perceives as a designer.</span></span> <span data-ttu-id="e5cb9-103"><xref:System.ComponentModel.Design.DesignSurface> é que a interface do usuário o usuário manipula para alterar os recursos de tempo de design.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-103"><xref:System.ComponentModel.Design.DesignSurface> is the user interface the user manipulates to change design-time features.</span></span> <span data-ttu-id="e5cb9-104"><xref:System.ComponentModel.Design.DesignSurface> Fornece uma superfície de design completamente independentes.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-104"><xref:System.ComponentModel.Design.DesignSurface> provides a completely self-contained design surface.</span></span>  
  
 <span data-ttu-id="e5cb9-105">O <xref:System.ComponentModel.Design.DesignSurface> classe pode ser usada como um designer autônomo, ou pode ser associado a <xref:System.ComponentModel.Design.DesignSurfaceManager> classe para fornecer uma implementação comum para um aplicativo que hospeda vários <xref:System.ComponentModel.Design.DesignSurface> objetos.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-105">The <xref:System.ComponentModel.Design.DesignSurface> class may be used as a stand-alone designer, or it may be coupled with the <xref:System.ComponentModel.Design.DesignSurfaceManager> class to provide a common implementation for an application that hosts multiple <xref:System.ComponentModel.Design.DesignSurface> objects.</span></span>  
  
 <span data-ttu-id="e5cb9-106">O <xref:System.ComponentModel.Design.DesignSurface> classe pode ser usada por si só, ou o usuário pode derivar uma nova classe dela e aumentar o comportamento.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-106">The <xref:System.ComponentModel.Design.DesignSurface> class can be used by itself, or the user can derive a new class from it and augment the behavior.</span></span>  
  
 <span data-ttu-id="e5cb9-107">O <xref:System.ComponentModel.Design.DesignSurface> classe fornece vários serviços de tempo de design automaticamente.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-107">The <xref:System.ComponentModel.Design.DesignSurface> class provides several design-time services automatically.</span></span> <span data-ttu-id="e5cb9-108">O <xref:System.ComponentModel.Design.DesignSurface> classe adiciona todos os seus serviços em seu construtor.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-108">The <xref:System.ComponentModel.Design.DesignSurface> class adds all of its services in its constructor.</span></span> <span data-ttu-id="e5cb9-109">A maioria desses serviços pode ser substituída, substituindo-os em protegido <xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-109">Most of these services can be overridden by replacing them in the protected <xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A> property.</span></span> <span data-ttu-id="e5cb9-110">Para substituir um serviço, substituir o construtor, chamar base e faça as alterações por meio do método <xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-110">To replace a service, override the constructor, call base, and make any changes through the protected <xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A> property.</span></span> <span data-ttu-id="e5cb9-111">Todos os serviços que são adicionados ao contêiner de serviço e que implementam <xref:System.IDisposable> são descartados quando a superfície de design é descartada.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-111">All services that are added to the service container and that implement <xref:System.IDisposable> are disposed when the design surface is disposed.</span></span> <span data-ttu-id="e5cb9-112">O conjunto padrão de substituição de serviços que o <xref:System.ComponentModel.Design.DesignSurface> classe fornece é mostrado na tabela a seguir.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-112">The default set of replaceable services that the <xref:System.ComponentModel.Design.DesignSurface> class provides is shown in the following table.</span></span>  
  
|<span data-ttu-id="e5cb9-113">Serviço</span><span class="sxs-lookup"><span data-stu-id="e5cb9-113">Service</span></span>|<span data-ttu-id="e5cb9-114">Descrição</span><span class="sxs-lookup"><span data-stu-id="e5cb9-114">Description</span></span>|  
|-------------|-----------------|  
|<xref:System.ComponentModel.Design.IExtenderProviderService>|<span data-ttu-id="e5cb9-115">Permite que os objetos que não fazem parte da coleção de componentes do contêiner para fornecer seus próprios provedores de extensor.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-115">Enables objects that are not part of the container’s components collection to provide their own extender providers.</span></span>|  
|<xref:System.ComponentModel.Design.IExtenderListService>|<span data-ttu-id="e5cb9-116">Usado por <xref:System.ComponentModel.TypeDescriptor> para obter uma lista de provedores de extensor.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-116">Used by <xref:System.ComponentModel.TypeDescriptor> to get a list of extender providers.</span></span> <span data-ttu-id="e5cb9-117">Com esse serviço, provedores de extensor podem permanecer fora do contêiner.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-117">With this service, extender providers can live outside of the container.</span></span>|  
|<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>|<span data-ttu-id="e5cb9-118">Fornece ganchos de metadados de designer.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-118">Provides designer metadata hooks.</span></span> <span data-ttu-id="e5cb9-119">Essa é a principal interface para filtragem de metadados.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-119">This is the primary interface for metadata filtering.</span></span>|  
|<xref:System.ComponentModel.Design.ISelectionService>|<span data-ttu-id="e5cb9-120">Fornece uma maneira para selecionar componentes no designer.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-120">Provides a way to select components in the designer.</span></span>|  
|<xref:System.ComponentModel.Design.IReferenceService>|<span data-ttu-id="e5cb9-121">Fornece uma maneira de obter um nome para objetos, mesmo quando esses objetos não estão localizados.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-121">Provides a way to get a name for objects, even when those objects are not sited.</span></span>|  
|<xref:System.ComponentModel.Design.DesignSurface>|<span data-ttu-id="e5cb9-122">Oferece a superfície de design em si como um serviço.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-122">Offers the design surface itself as a service.</span></span>|  
|<xref:System.ComponentModel.Design.DesignerOptionService>|<span data-ttu-id="e5cb9-123">Fornece uma classe base para obter e configurar valores de opção para um designer.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-123">Provides a base class for getting and setting option values for a designer.</span></span>|  
  
 <span data-ttu-id="e5cb9-124">A tabela a seguir mostra os serviços não substituível fornecidos por padrão.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-124">The following table shows the non-replaceable services provided by default.</span></span>  
  
|<span data-ttu-id="e5cb9-125">Serviço</span><span class="sxs-lookup"><span data-stu-id="e5cb9-125">Service</span></span>|<span data-ttu-id="e5cb9-126">Descrição</span><span class="sxs-lookup"><span data-stu-id="e5cb9-126">Description</span></span>|  
|-------------|-----------------|  
|<xref:System.ComponentModel.Design.IComponentChangeService>|<span data-ttu-id="e5cb9-127">Gera eventos que são feitas alterações nos componentes.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-127">Raises events as changes are made to components.</span></span>|  
|<xref:System.ComponentModel.Design.IDesignerHost>|<span data-ttu-id="e5cb9-128">Controla o acesso a tipos, serviços e transações.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-128">Controls access to types, services, and transactions.</span></span> <span data-ttu-id="e5cb9-129">Interface mestre para designers.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-129">Master interface for designers.</span></span>|  
|<xref:System.ComponentModel.IContainer>|<span data-ttu-id="e5cb9-130">Possui o conjunto de componentes que estão sendo projetados.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-130">Owns the set of components that are being designed.</span></span> <span data-ttu-id="e5cb9-131">Cada designer tem um <xref:System.ComponentModel.IContainer> que possui os componentes.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-131">Each designer has an <xref:System.ComponentModel.IContainer> that owns the components.</span></span>|  
|<xref:System.ComponentModel.Design.IServiceContainer>|<span data-ttu-id="e5cb9-132">Deriva <xref:System.IServiceProvider> e fornece uma maneira de adicionar e remover serviços do designer.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-132">Derives from <xref:System.IServiceProvider> and provides a way to add and remove services from the designer.</span></span>|  
  
 <span data-ttu-id="e5cb9-133">Além desses serviços, a <xref:System.ComponentModel.Design.DesignSurface> classe também fornece um único serviço que está disponível por meio do site do componente.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-133">In addition to these services, the <xref:System.ComponentModel.Design.DesignSurface> class also provides a single service that is available through a component’s site.</span></span> <span data-ttu-id="e5cb9-134">Esse serviço é exclusivo para cada componente.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-134">This service is unique for each component.</span></span> <span data-ttu-id="e5cb9-135">A tabela a seguir mostra os serviços que não podem ser substituídos.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-135">The following table shows the services that cannot be replaced.</span></span>  
  
|<span data-ttu-id="e5cb9-136">Serviço</span><span class="sxs-lookup"><span data-stu-id="e5cb9-136">Service</span></span>|<span data-ttu-id="e5cb9-137">Descrição</span><span class="sxs-lookup"><span data-stu-id="e5cb9-137">Description</span></span>|  
|-------------|-----------------|  
|<xref:System.ComponentModel.Design.IDictionaryService>|<span data-ttu-id="e5cb9-138">Um dicionário genérico de pares chave/valor que pode ser usado para armazenar dados arbitrários sobre um componente.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-138">A generic dictionary of key/value pairs that can be used to store arbitrary data about a component.</span></span>|  
|<xref:System.ComponentModel.INestedContainer>|<span data-ttu-id="e5cb9-139">Um contêiner que permite que um componente adicionar componentes filhos adicionais para o designer.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-139">A container that enables a component to add additional child components to the designer.</span></span> <span data-ttu-id="e5cb9-140">Esses componentes serão parte da superfície de design, mas não participará na serialização.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-140">These components will be part of the design surface, but will not participate in serialization.</span></span> <span data-ttu-id="e5cb9-141">Isso é útil quando você deseja criar um controle que é capaz de expor uma região de si mesmo em um designer, mas você não quiser que a região para participar de serialização.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-141">This is useful when you want to design a control that is capable of exposing a region of itself in a designer, but you do not want the region to participate in serialization.</span></span>|  
  
 <span data-ttu-id="e5cb9-142">Além <xref:System.ComponentModel.ISite>, o site também implementa as interfaces a seguir.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-142">In addition to <xref:System.ComponentModel.ISite>, the site also implements the following interfaces.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="e5cb9-143">Verificar a existência dessas interfaces, em vez de usar conversão indiscriminado, pois outras implementações do site não podem implementá-las.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-143">Check for the existence of these interfaces, rather than use indiscriminate casting, because other site implementations may not implement them.</span></span>  
  
|<span data-ttu-id="e5cb9-144">Serviço</span><span class="sxs-lookup"><span data-stu-id="e5cb9-144">Service</span></span>|<span data-ttu-id="e5cb9-145">Descrição</span><span class="sxs-lookup"><span data-stu-id="e5cb9-145">Description</span></span>|  
|-------------|-----------------|  
|<xref:System.ComponentModel.Design.IServiceContainer>|<span data-ttu-id="e5cb9-146">Fornece uma maneira de obter o contêiner de serviços específicos do site.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-146">Provides a way to get to the container of site-specific services.</span></span> <span data-ttu-id="e5cb9-147">Por exemplo, <xref:System.ComponentModel.Design.IDictionaryService> é um serviço específico do site.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-147">For example, <xref:System.ComponentModel.Design.IDictionaryService> is a site-specific service.</span></span> <span data-ttu-id="e5cb9-148">Com esse serviço, você pode adicionar outros serviços específicos do site.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-148">With this service, you can add additional site-specific services.</span></span>|  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.NamedPermissionSet">
      <span data-ttu-id="e5cb9-149">Para obter acesso completo aos recursos do sistema.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e5cb9-149">for full access to system resources.</span>
      </span>
      <span data-ttu-id="e5cb9-150">Exigem valores: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />, <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e5cb9-150">Demand values: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />, <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
      </span>
      <span data-ttu-id="e5cb9-151">Estados associados:</span>
      <span class="sxs-lookup">
        <span data-stu-id="e5cb9-151">Associated state:</span>
      </span>
    </permission>
    <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
    <altmember cref="T:System.IServiceProvider" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e5cb9-152">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Design.DesignSurface" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-152">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurface" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignSurface ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignSurface();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e5cb9-153">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Design.DesignSurface" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-153">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurface" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e5cb9-154">O <see cref="T:System.ComponentModel.Design.IDesignerHost" /> anexado a <see cref="T:System.ComponentModel.Design.DesignSurface" /> foi descartado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-154">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignSurface (IServiceProvider parentProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider parentProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parentProvider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignSurface(IServiceProvider ^ parentProvider);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parentProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="parentProvider">
          <span data-ttu-id="e5cb9-155">O provedor de serviço pai ou <see langword="null" /> se não houver nenhum pai usado para resolver serviços.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-155">The parent service provider, or <see langword="null" /> if there is no parent used to resolve services.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5cb9-156">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Design.DesignSurface" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-156">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurface" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5cb9-157">Quando `parentProvide` estiver presente, designers contidos na superfície de podem recuperar os serviços do aplicativo.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-157">When `parentProvide` is present, designers contained within the surface can retrieve services from the application.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e5cb9-158">O <see cref="T:System.ComponentModel.Design.IDesignerHost" /> anexado a <see cref="T:System.ComponentModel.Design.DesignSurface" /> foi descartado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-158">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span>
          </span>
        </exception>
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignSurface (Type rootComponentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type rootComponentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rootComponentType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignSurface(Type ^ rootComponentType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rootComponentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="rootComponentType">
          <span data-ttu-id="e5cb9-159">O tipo de componente raiz a ser criado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-159">The type of root component to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5cb9-160">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Design.DesignSurface" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-160">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurface" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5cb9-161">Quando você usa o <xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A> construtor, ele cria um carregador de designer simple que, por sua vez, cria um componente do tipo em questão e, em seguida, encerra o processo de carregamento.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-161">When you use the <xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A> constructor, it creates a simple designer loader that, in turn, creates a component of the given type and then ends the loading process.</span></span> <span data-ttu-id="e5cb9-162">Essa é uma maneira simples para criar um designer, sob a suposição de que todos os salvamento de estado será feito externamente.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-162">This is a straightforward way to create a designer, under the assumption that all saving of state will be done externally.</span></span> <span data-ttu-id="e5cb9-163">Internamente, isso se chama <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> e passa o tipo de componente raiz.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-163">Internally, this calls <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> and passes the root component type.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e5cb9-164">O <xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A> sobrecarga não é afetada por <xref:System.Windows.Forms.Design.DesignerOptions>.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-164">The <xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A> overload is not affected by <xref:System.Windows.Forms.Design.DesignerOptions>.</span></span> <span data-ttu-id="e5cb9-165">O <xref:System.Windows.Forms.Design.DesignerOptions> deve estar no contêiner de serviço antes de carrega a superfície de design.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-165">The <xref:System.Windows.Forms.Design.DesignerOptions> must be in the service container before the design surface loads.</span></span> <span data-ttu-id="e5cb9-166">Se você precisar acessar <xref:System.Windows.Forms.Design.DesignerOptions>, chame o construtor vazio, adicionar o <xref:System.Windows.Forms.Design.DesignerOptions> para o <xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A> e chame <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> com `rootComponentType`.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-166">If you need access to <xref:System.Windows.Forms.Design.DesignerOptions>, call the empty constructor, add the <xref:System.Windows.Forms.Design.DesignerOptions> to the <xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A> and call <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> with `rootComponentType`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e5cb9-167">
            <paramref name="rootComponent" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-167">
              <paramref name="rootComponent" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e5cb9-168">O <see cref="T:System.ComponentModel.Design.IDesignerHost" /> anexado a <see cref="T:System.ComponentModel.Design.DesignSurface" /> foi descartado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-168">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignSurface (IServiceProvider parentProvider, Type rootComponentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider parentProvider, class System.Type rootComponentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parentProvider As IServiceProvider, rootComponentType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignSurface(IServiceProvider ^ parentProvider, Type ^ rootComponentType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parentProvider" Type="System.IServiceProvider" />
        <Parameter Name="rootComponentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="parentProvider">
          <span data-ttu-id="e5cb9-169">O provedor de serviço pai ou <see langword="null" /> se não houver nenhum pai usado para resolver serviços.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-169">The parent service provider, or <see langword="null" /> if there is no parent used to resolve services.</span>
          </span>
        </param>
        <param name="rootComponentType">
          <span data-ttu-id="e5cb9-170">O tipo de componente raiz a ser criado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-170">The type of root component to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5cb9-171">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Design.DesignSurface" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-171">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurface" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5cb9-172">Usando o <xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A> construtor cria um carregador de designer simple que cria um componente do tipo em questão e, em seguida, encerra o processo de carregamento.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-172">Using the <xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A> constructor creates a simple designer loader that creates a component of the given type and then ends the loading process.</span></span> <span data-ttu-id="e5cb9-173">Essa é uma maneira simples para criar um designer, sob a suposição de que todos os salvamento de estado será feito externamente.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-173">This is a straightforward way to create a designer, under the assumption that all saving of state will be done externally.</span></span> <span data-ttu-id="e5cb9-174">Internamente, isso se chama <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> e passa o tipo de componente raiz.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-174">Internally, this calls <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> and passes the root component type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e5cb9-175">
            <paramref name="rootComponent" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-175">
              <paramref name="rootComponent" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e5cb9-176">O <see cref="T:System.ComponentModel.Design.IDesignerHost" /> anexado a <see cref="T:System.ComponentModel.Design.DesignSurface" /> foi descartado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-176">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span>
          </span>
        </exception>
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginLoad">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e5cb9-177">Inicia o processo de carregamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-177">Begins the loading process.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public void BeginLoad (System.ComponentModel.Design.Serialization.DesignerLoader loader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginLoad(class System.ComponentModel.Design.Serialization.DesignerLoader loader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.ComponentModel.Design.Serialization.DesignerLoader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginLoad (loader As DesignerLoader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginLoad(System::ComponentModel::Design::Serialization::DesignerLoader ^ loader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loader" Type="System.ComponentModel.Design.Serialization.DesignerLoader" />
      </Parameters>
      <Docs>
        <param name="loader">
          <span data-ttu-id="e5cb9-178">O carregador de designer a ser usado para carregar o designer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-178">The designer loader to use for loading the designer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5cb9-179">Inicia o processo de carregamento com o carregador de designer fornecido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-179">Begins the loading process with the given designer loader.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5cb9-180">Carregamento Designer pode ser assíncrono para que o carregamento pode continuar depois que essa chamada retornou de progresso.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-180">Designer loading can be asynchronous, so the loading may continue to progress after this call has returned.</span></span> <span data-ttu-id="e5cb9-181">Anexar um manipulador de eventos para o <xref:System.ComponentModel.Design.IDesignerHost.LoadComplete> evento para ser notificado quando a superfície de design for carregado.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-181">Attach an event handler to the <xref:System.ComponentModel.Design.IDesignerHost.LoadComplete> event to be notified when the design surface has completed loading.</span></span>  
  
 <span data-ttu-id="e5cb9-182">Depois de <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> é chamado, você pode obter imediatamente o modo de exibição para o designer, porque carregadores de designer devem fornecer pelo menos o componente raiz ao carregamento de forma assíncrona.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-182">After <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> is called, you can immediately obtain the view for the designer, because designer loaders must provide at least the root component when loading asynchronously.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e5cb9-183">
            <paramref name="loader" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-183">
              <paramref name="loader" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e5cb9-184">O <see cref="T:System.ComponentModel.Design.IDesignerHost" /> anexado a <see cref="T:System.ComponentModel.Design.DesignSurface" /> foi descartado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-184">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public void BeginLoad (Type rootComponentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginLoad(class System.Type rootComponentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginLoad (rootComponentType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginLoad(Type ^ rootComponentType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootComponentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="rootComponentType">
          <span data-ttu-id="e5cb9-185">O tipo de componente a ser criado no modo de design.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-185">The type of component to create in design mode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5cb9-186">Inicia o processo de carregamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-186">Begins the loading process.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5cb9-187">Quando `rootComponentType` for especificado, um carregador de designer padrão que simplesmente cria uma instância de `rootComponentType` será usado.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-187">When `rootComponentType` is specified, a default designer loader that simply creates an instance of `rootComponentType` will be used.</span></span> <span data-ttu-id="e5cb9-188">Carregamento Designer pode ser assíncrono para que o carregamento pode continuar depois que essa chamada retornou de progresso.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-188">Designer loading can be asynchronous, so the loading may continue to progress after this call has returned.</span></span> <span data-ttu-id="e5cb9-189">Anexar um manipulador de eventos para o <xref:System.ComponentModel.Design.IDesignerHost.LoadComplete> evento para ser notificado quando a superfície de design for carregado.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-189">Attach an event handler to the <xref:System.ComponentModel.Design.IDesignerHost.LoadComplete> event to be notified when the design surface has completed loading.</span></span>  
  
 <span data-ttu-id="e5cb9-190">Depois de <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> é chamado, você pode obter imediatamente o modo de exibição para o designer, porque carregadores de designer devem fornecer pelo menos o componente raiz ao carregamento de forma assíncrona.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-190">After <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> is called, you can immediately obtain the view for the designer, because designer loaders must provide at least the root component when loading asynchronously.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e5cb9-191">O <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> método cria uma instância do tipo de componente e inicializa um designer para essa instância.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-191">The <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> method creates an instance of the component type and initializes a designer for this instance.</span></span> <span data-ttu-id="e5cb9-192">O <xref:System.ComponentModel.Design.DesignSurface.Loaded> evento é gerado antes que este método retorna.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-192">The <xref:System.ComponentModel.Design.DesignSurface.Loaded> event is raised before this method returns.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e5cb9-193">
            <paramref name="rootComponentType" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-193">
              <paramref name="rootComponentType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e5cb9-194">O <see cref="T:System.ComponentModel.Design.IDesignerHost" /> anexado a <see cref="T:System.ComponentModel.Design.DesignSurface" /> foi descartado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-194">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ComponentContainer">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IContainer ComponentContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IContainer ComponentContainer" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignSurface.ComponentContainer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ComponentContainer As IContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::IContainer ^ ComponentContainer { System::ComponentModel::IContainer ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e5cb9-195">Obtém a implementação de <see cref="T:System.ComponentModel.IContainer" /> na superfície de design.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-195">Gets the <see cref="T:System.ComponentModel.IContainer" /> implementation within the design surface.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e5cb9-196">O <see cref="T:System.ComponentModel.IContainer" /> implementação na superfície de design.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-196">The <see cref="T:System.ComponentModel.IContainer" /> implementation within the design surface.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5cb9-197">O <xref:System.ComponentModel.Design.DesignSurface.ComponentContainer%2A> propriedade contém todos os objetos que estão atualmente no modo de design.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-197">The <xref:System.ComponentModel.Design.DesignSurface.ComponentContainer%2A> property holds all objects that are currently in design mode.</span></span> <span data-ttu-id="e5cb9-198">Quando os componentes são adicionados ao <xref:System.ComponentModel.Design.DesignSurface.ComponentContainer%2A>, o designer, se houver, será carregado.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-198">When components are added to <xref:System.ComponentModel.Design.DesignSurface.ComponentContainer%2A>, their designer, if any, is loaded.</span></span> <span data-ttu-id="e5cb9-199">O componente está localizado com um site que fornece acesso completo à superfície de design.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-199">The component is sited with a site that provides full access to the design surface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e5cb9-200">O <see cref="T:System.ComponentModel.Design.IDesignerHost" /> anexado a <see cref="T:System.ComponentModel.Design.DesignSurface" /> foi descartado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-200">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateComponent">
      <MemberSignature Language="C#" Value="protected internal virtual System.ComponentModel.IComponent CreateComponent (Type componentType);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.ComponentModel.IComponent CreateComponent(class System.Type componentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.CreateComponent(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateComponent (componentType As Type) As IComponent" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::ComponentModel::IComponent ^ CreateComponent(Type ^ componentType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("CreateComponent has been replaced by CreateInstance and will be removed after Beta2")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="componentType">
          <span data-ttu-id="e5cb9-201">O tipo de componente a ser criado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-201">The type of component to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5cb9-202">Cria uma instância de um componente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-202">Creates an instance of a component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e5cb9-203">O componente recém-criado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-203">The newly created component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5cb9-204">O <xref:System.ComponentModel.Design.DesignSurface.CreateComponent%2A> método é chamado, a superfície de design <xref:System.ComponentModel.Design.IDesignerHost.CreateComponent%2A> método para criar uma instância de um componente.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-204">The <xref:System.ComponentModel.Design.DesignSurface.CreateComponent%2A> method is called by the design surface’s <xref:System.ComponentModel.Design.IDesignerHost.CreateComponent%2A> method to create an instance of a component.</span></span> <span data-ttu-id="e5cb9-205">O componente deve ser criado e adicionado ao contêiner público na superfície de design.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-205">The component should be created and added to the public container on the design surface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e5cb9-206">
            <paramref name="componentType" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-206">
              <paramref name="componentType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e5cb9-207">O <see cref="T:System.ComponentModel.Design.IDesignerHost" /> anexado a <see cref="T:System.ComponentModel.Design.DesignSurface" /> foi descartado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-207">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDesigner">
      <MemberSignature Language="C#" Value="protected internal virtual System.ComponentModel.Design.IDesigner CreateDesigner (System.ComponentModel.IComponent component, bool rootDesigner);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.ComponentModel.Design.IDesigner CreateDesigner(class System.ComponentModel.IComponent component, bool rootDesigner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateDesigner (component As IComponent, rootDesigner As Boolean) As IDesigner" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::ComponentModel::Design::IDesigner ^ CreateDesigner(System::ComponentModel::IComponent ^ component, bool rootDesigner);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.IDesigner</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="rootDesigner" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="e5cb9-208">O componente para o qual o designer deve ser criado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-208">The component for which the designer should be created.</span>
          </span>
        </param>
        <param name="rootDesigner">
          <span data-ttu-id="e5cb9-209">
            <see langword="true" /> para criar um designer raiz; <see langword="false" /> para criar um designer normal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-209">
              <see langword="true" /> to create a root designer; <see langword="false" /> to create a normal designer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5cb9-210">Cria um designer quando um componente é adicionado ao contêiner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-210">Creates a designer when a component is added to the container.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e5cb9-211">Uma instância do designer solicitado ou <see langword="null" />, se nenhum designer correspondente pôde ser encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-211">An instance of the requested designer, or <see langword="null" /> if no matching designer could be found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5cb9-212">O <xref:System.ComponentModel.Design.DesignSurface.CreateDesigner%2A> método é chamado, a superfície de design <xref:System.ComponentModel.IContainer> quando um componente é adicionado ao contêiner.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-212">The <xref:System.ComponentModel.Design.DesignSurface.CreateDesigner%2A> method is called by the design surface’s <xref:System.ComponentModel.IContainer> when a component is added to the container.</span></span> <span data-ttu-id="e5cb9-213">Esse método cria um designer, mas não inicializar.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-213">This method creates a designer, but does not initialize it.</span></span> <span data-ttu-id="e5cb9-214">Quando retorna, o designer é inicializado pelo contêiner.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-214">When it returns, the designer is initialized by the container.</span></span>  
  
 <span data-ttu-id="e5cb9-215"><xref:System.ComponentModel.Design.DesignSurface.CreateDesigner%2A> pode criar dois tipos diferentes de designers: raiz designers e designers normais.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-215"><xref:System.ComponentModel.Design.DesignSurface.CreateDesigner%2A> can create two different types of designers: root designers and normal designers.</span></span> <span data-ttu-id="e5cb9-216">Um designer raiz é um designer para o componente raiz na superfície de design, que, por definição, é o primeiro componente adicionado ao contêiner.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-216">A root designer is a designer for the root component in the design surface, which by definition is the first component added to the container.</span></span> <span data-ttu-id="e5cb9-217">Designers de raiz diferem dos designers normais, porque eles são responsáveis pela interface do usuário apresentado ao usuário final.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-217">Root designers differ from normal designers because they are responsible for the user interface presented to the end user.</span></span> <span data-ttu-id="e5cb9-218">Designers de raiz normalmente coordenam com o restante dos designers em uma superfície de design para fornecer essa interface.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-218">Root designers typically coordinate with the rest of the designers on a design surface to provide this interface.</span></span>  
  
 <span data-ttu-id="e5cb9-219">A implementação padrão desse método delega para <xref:System.ComponentModel.TypeDescriptor>, passando <xref:System.ComponentModel.Design.IRootDesigner> como o tipo de designer para designers de raiz, ou <xref:System.ComponentModel.Design.IDesigner> para designers normais.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-219">The default implementation of this method delegates to <xref:System.ComponentModel.TypeDescriptor>, passing in <xref:System.ComponentModel.Design.IRootDesigner> as the designer type for root designers, or <xref:System.ComponentModel.Design.IDesigner> for normal designers.</span></span> <span data-ttu-id="e5cb9-220">Você pode substituir esse método para solicitar um tipo específico de designer.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-220">You can override this method to request a specific type of designer.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e5cb9-221">
            <paramref name="component" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-221">
              <paramref name="component" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e5cb9-222">O <see cref="T:System.ComponentModel.Design.IDesignerHost" /> anexado a <see cref="T:System.ComponentModel.Design.DesignSurface" /> foi descartado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-222">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="protected internal virtual object CreateInstance (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance object CreateInstance(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.CreateInstance(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Object ^ CreateInstance(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="e5cb9-223">O tipo a ser criado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-223">The type to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5cb9-224">Cria uma instância do tipo fornecido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-224">Creates an instance of the given type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e5cb9-225">O objeto recém-criado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-225">The newly created object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5cb9-226">Se `type` é um <xref:System.ComponentModel.IComponent>, <xref:System.ComponentModel.Design.DesignSurface.CreateInstance%2A> procura um construtor de tipo <xref:System.ComponentModel.IContainer> primeiro, seguido de um construtor vazio.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-226">If `type` is an <xref:System.ComponentModel.IComponent>, <xref:System.ComponentModel.Design.DesignSurface.CreateInstance%2A> searches for a constructor of type <xref:System.ComponentModel.IContainer> first, followed by an empty constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e5cb9-227">
            <paramref name="type" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-227">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e5cb9-228">O <see cref="T:System.ComponentModel.Design.IDesignerHost" /> anexado a <see cref="T:System.ComponentModel.Design.DesignSurface" /> foi descartado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-228">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateNestedContainer">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e5cb9-229">Cria um contêiner adequado para aninhar controles ou componentes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-229">Creates a container suitable for nesting controls or components.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateNestedContainer">
      <MemberSignature Language="C#" Value="public System.ComponentModel.INestedContainer CreateNestedContainer (System.ComponentModel.IComponent owningComponent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.INestedContainer CreateNestedContainer(class System.ComponentModel.IComponent owningComponent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateNestedContainer (owningComponent As IComponent) As INestedContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::INestedContainer ^ CreateNestedContainer(System::ComponentModel::IComponent ^ owningComponent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.INestedContainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owningComponent" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="owningComponent">
          <span data-ttu-id="e5cb9-230">O componente que gerencia o contêiner aninhado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-230">The component that manages the nested container.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5cb9-231">Cria um contêiner adequado para aninhar controles ou componentes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-231">Creates a container suitable for nesting controls or components.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e5cb9-232">O contêiner aninhado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-232">The nested container.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5cb9-233">Adicionando um componente a um contêiner aninhado cria seu designer e torna qualificada para todos os serviços disponíveis da superfície de design.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-233">Adding a component to a nested container creates its designer and makes it eligible for all services available from the design surface.</span></span> <span data-ttu-id="e5cb9-234">Componentes adicionados ao contêineres aninhados não participam de serialização.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-234">Components added to nested containers do not participate in serialization.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e5cb9-235">
            <paramref name="owningComponent" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-235">
              <paramref name="owningComponent" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e5cb9-236">O <see cref="T:System.ComponentModel.Design.IDesignerHost" /> anexado a <see cref="T:System.ComponentModel.Design.DesignSurface" /> foi descartado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-236">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateNestedContainer">
      <MemberSignature Language="C#" Value="public System.ComponentModel.INestedContainer CreateNestedContainer (System.ComponentModel.IComponent owningComponent, string containerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.INestedContainer CreateNestedContainer(class System.ComponentModel.IComponent owningComponent, string containerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateNestedContainer (owningComponent As IComponent, containerName As String) As INestedContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::INestedContainer ^ CreateNestedContainer(System::ComponentModel::IComponent ^ owningComponent, System::String ^ containerName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.INestedContainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owningComponent" Type="System.ComponentModel.IComponent" />
        <Parameter Name="containerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="owningComponent">
          <span data-ttu-id="e5cb9-237">O componente que gerencia o contêiner aninhado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-237">The component that manages the nested container.</span>
          </span>
        </param>
        <param name="containerName">
          <span data-ttu-id="e5cb9-238">Um nome adicional para o contêiner aninhado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-238">An additional name for the nested container.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5cb9-239">Cria um contêiner adequado para aninhar controles ou componentes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-239">Creates a container suitable for nesting controls or components.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e5cb9-240">O contêiner aninhado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-240">The nested container.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5cb9-241">Adicionando um componente a um contêiner aninhado cria seu designer e torna qualificada para todos os serviços disponíveis da superfície de design.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-241">Adding a component to a nested container creates its designer and makes it eligible for all services available from the design surface.</span></span> <span data-ttu-id="e5cb9-242">Componentes adicionados ao contêineres aninhados não participam de serialização.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-242">Components added to nested containers do not participate in serialization.</span></span>  
  
 <span data-ttu-id="e5cb9-243">Você pode fornecer um nome adicional para o <xref:System.ComponentModel.Design.DesignSurface.CreateNestedContainer%2A> método, passando um valor em `containerName`.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-243">You can provide an additional name for the <xref:System.ComponentModel.Design.DesignSurface.CreateNestedContainer%2A> method by passing a value into `containerName`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e5cb9-244">
            <paramref name="owningComponent" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-244">
              <paramref name="owningComponent" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e5cb9-245">O <see cref="T:System.ComponentModel.Design.IDesignerHost" /> anexado a <see cref="T:System.ComponentModel.Design.DesignSurface" /> foi descartado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-245">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e5cb9-246">Libera os recursos usados pelo <see cref="T:System.ComponentModel.Design.DesignSurface" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-246">Releases the resources used by the <see cref="T:System.ComponentModel.Design.DesignSurface" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e5cb9-247">Libera os recursos usados pelo <see cref="T:System.ComponentModel.Design.DesignSurface" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-247">Releases the resources used by the <see cref="T:System.ComponentModel.Design.DesignSurface" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5cb9-248">O público <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> método segue o padrão <xref:System.IDisposable> padrão.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-248">The public <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> method follows the standard <xref:System.IDisposable> pattern.</span></span> <span data-ttu-id="e5cb9-249">Chamar este método destrói a superfície de design.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-249">Calling this method destroys the design surface.</span></span> <span data-ttu-id="e5cb9-250">A versão protegida desse método é `virtual` e segue o normal <xref:System.IDisposable> padrão.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-250">The protected version of this method is `virtual` and follows the normal <xref:System.IDisposable> pattern.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e5cb9-251">Porque <xref:System.ComponentModel.Design.DesignSurface> não tem qualquer código nativo para limpar, ele não tem um finalizador que chama <xref:System.ComponentModel.Design.DesignSurface.Dispose%28System.Boolean%29>.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-251">Because <xref:System.ComponentModel.Design.DesignSurface> does not have any native code to clean up, it does not have a finalizer that calls <xref:System.ComponentModel.Design.DesignSurface.Dispose%28System.Boolean%29>.</span></span> <span data-ttu-id="e5cb9-252">Se você precisar chamar <xref:System.ComponentModel.Design.DesignSurface.Dispose%28System.Boolean%29>, você deve adicionar um finalizador.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-252">If you need to call <xref:System.ComponentModel.Design.DesignSurface.Dispose%28System.Boolean%29>, you must add a finalizer yourself.</span></span>  
  
 <span data-ttu-id="e5cb9-253">Chamar <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> quando tiver terminado de usar o <xref:System.ComponentModel.Design.DesignSurface>.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-253">Call <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> when you are finished using the <xref:System.ComponentModel.Design.DesignSurface>.</span></span> <span data-ttu-id="e5cb9-254">O <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> método deixa o <xref:System.ComponentModel.Design.DesignSurface> em um estado inutilizável.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-254">The <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> method leaves the <xref:System.ComponentModel.Design.DesignSurface> in an unusable state.</span></span> <span data-ttu-id="e5cb9-255">Depois de chamar <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A>, você deve liberar todas as referências para o <xref:System.ComponentModel.Design.DesignSurface> para o coletor de lixo possa recuperar a memória que o <xref:System.ComponentModel.Design.DesignSurface> estava ocupando.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-255">After calling <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A>, you must release all references to the <xref:System.ComponentModel.Design.DesignSurface> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Design.DesignSurface> was occupying.</span></span> <span data-ttu-id="e5cb9-256">Para obter mais informações, consulte [limpeza de recursos não gerenciados](~/docs/standard/garbage-collection/unmanaged.md) e [implementar um método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="e5cb9-256">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e5cb9-257">Sempre chamar <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> antes de liberar sua última referência para o <xref:System.ComponentModel.Design.DesignSurface>.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-257">Always call <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> before you release your last reference to the <xref:System.ComponentModel.Design.DesignSurface>.</span></span> <span data-ttu-id="e5cb9-258">Caso contrário, os recursos que está usando não serão liberados até que o coletor de lixo chame o <xref:System.ComponentModel.Design.DesignSurface> do objeto `Finalize` método.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-258">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Design.DesignSurface> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="e5cb9-259">
            <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-259">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5cb9-260">Libera os recursos usados pelo <see cref="T:System.ComponentModel.Design.DesignSurface" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-260">Releases the resources used by the <see cref="T:System.ComponentModel.Design.DesignSurface" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5cb9-261">O público <xref:System.ComponentModel.Design.DesignSurface.Dispose> método segue o padrão <xref:System.IDisposable> padrão.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-261">The public <xref:System.ComponentModel.Design.DesignSurface.Dispose> method follows the standard <xref:System.IDisposable> pattern.</span></span> <span data-ttu-id="e5cb9-262">Chamar este método destrói a superfície de design.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-262">Calling this method destroys the design surface.</span></span> <span data-ttu-id="e5cb9-263">A versão protegida desse método é `virtual` e segue o normal <xref:System.IDisposable> padrão.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-263">The protected version of this method is `virtual` and follows the normal <xref:System.IDisposable> pattern.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e5cb9-264">Porque <xref:System.ComponentModel.Design.DesignSurface> não tem qualquer código nativo para limpar, ele não tem um finalizador que chama <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A>.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-264">Because <xref:System.ComponentModel.Design.DesignSurface> does not have any native code to clean up, it does not have a finalizer that calls <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A>.</span></span> <span data-ttu-id="e5cb9-265">Se você precisar chamar <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A>, você deve adicionar um finalizador.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-265">If you need to call <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A>, you must add a finalizer yourself.</span></span>  
  
 <span data-ttu-id="e5cb9-266">Este método é chamado pelo método público `Dispose()` e pelo método <xref:System.Object.Finalize%2A>.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-266">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="e5cb9-267">`Dispose()` invoca o método `Dispose(Boolean)` protegido com o parâmetro `disposing` definido como `true`.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-267">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="e5cb9-268"><xref:System.Object.Finalize%2A> invoca `Dispose` com `disposing` definido como `false`.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-268"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="e5cb9-269">Quando o `disposing` parâmetro for true, este método libera todos os recursos mantidos por qualquer objeto gerenciado que este <xref:System.ComponentModel.Design.DesignSurface> referências.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-269">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.ComponentModel.Design.DesignSurface> references.</span></span> <span data-ttu-id="e5cb9-270">Este método invoca o método `Dispose()` de cada objeto referenciado.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-270">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="e5cb9-271">
              <see langword="Dispose" /> pode ser chamado várias vezes por outros objetos.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e5cb9-271">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="e5cb9-272">Ao substituir <see langword="Dispose(Boolean)" /> cuidado para não fazer referência a objetos que têm foi descartados anteriormente em uma chamada anterior para <see langword="Dispose" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e5cb9-272">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="e5cb9-273">Para obter mais informações sobre como implementar <see langword="Dispose(Boolean)" />, consulte [implementar um método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="e5cb9-273">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="e5cb9-274">Para obter mais informações sobre <see langword="Dispose" /> e <see cref="M:System.Object.Finalize" />, consulte [limpeza de recursos não gerenciados](~/docs/standard/garbage-collection/unmanaged.md) e [substituindo o método Finalize](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span>
            <span class="sxs-lookup">
              <span data-stu-id="e5cb9-274">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Disposed">
      <MemberSignature Language="C#" Value="public event EventHandler Disposed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Disposed" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurface.Disposed" />
      <MemberSignature Language="VB.NET" Value="Public Event Disposed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Disposed;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e5cb9-275">Ocorre quando a superfície de design é descartada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-275">Occurs when the design surface is disposed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5cb9-276">A superfície só será descartado quando o público <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> método <xref:System.ComponentModel.Design.DesignSurface> é chamado.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-276">The surface is only disposed when the public <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> method on <xref:System.ComponentModel.Design.DesignSurface> is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DtelLoading">
      <MemberSignature Language="C#" Value="public bool DtelLoading { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DtelLoading" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignSurface.DtelLoading" />
      <MemberSignature Language="VB.NET" Value="Public Property DtelLoading As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DtelLoading { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e5cb9-277">Obtém um valor que indica se a **Lista de Erros de Tempo de Design** está carregando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-277">Gets a value indicating whether the **Design-time Error List** is loading.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e5cb9-278">
            <see langword="true" /> Se o **lista de erros de tempo de Design** carregar; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-278">
              <see langword="true" /> if the **Design-time Error List** is loading; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e5cb9-279">Serializa alterações para a superfície de design.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-279">Serializes changes to the design surface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5cb9-280">O <xref:System.ComponentModel.Design.DesignSurface.Flush%2A> método pode ser chamado para enviar por push as alterações feitas à superfície de design para o serializador.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-280">The <xref:System.ComponentModel.Design.DesignSurface.Flush%2A> method can be called to push changes made to the design surface down to the serializer.</span></span> <span data-ttu-id="e5cb9-281">Isso garante que a superfície de design e seu estado serializado são sincronizados.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-281">This ensures that the design surface and its serialized state are synchronized.</span></span> <span data-ttu-id="e5cb9-282">A implementação real desse método é encaminhada para o carregador de designer associado à superfície de design.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-282">The actual implementation of this method is forwarded to the designer loader associated with design surface.</span></span> <span data-ttu-id="e5cb9-283">O carregador de designer pode optar por adiar as alterações até <xref:System.ComponentModel.Design.DesignSurface.Flush%2A> é chamado, ou ele pode optar por manter os dados serializados atualizado com todas as alterações do usuário.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-283">The designer loader may choose to defer changes until <xref:System.ComponentModel.Design.DesignSurface.Flush%2A> is called, or it may choose to keep the serialized data up to date with all user changes.</span></span> <span data-ttu-id="e5cb9-284">O <xref:System.ComponentModel.Design.DesignSurface.Flush%2A> método garante que, independentemente do modelo em que o carregador de designer opta por usar, o estado serializado é sincronizado com a superfície de design real.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-284">The <xref:System.ComponentModel.Design.DesignSurface.Flush%2A> method ensures that regardless of the model the designer loader chooses to use, the serialized state is synchronized with the actual design surface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flushed">
      <MemberSignature Language="C#" Value="public event EventHandler Flushed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Flushed" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurface.Flushed" />
      <MemberSignature Language="VB.NET" Value="Public Event Flushed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Flushed;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e5cb9-285">Ocorre quando uma chamada é feita para o método <see cref="M:System.ComponentModel.Design.DesignSurface.Flush" /> de <see cref="T:System.ComponentModel.Design.DesignSurface" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-285">Occurs when a call is made to the <see cref="M:System.ComponentModel.Design.DesignSurface.Flush" /> method of <see cref="T:System.ComponentModel.Design.DesignSurface" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5cb9-286">O carregador do designer é liberado primeiro e, em seguida, o <xref:System.ComponentModel.Design.DesignSurface.Flushed> é gerado.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-286">The designer loader is flushed first, and then the <xref:System.ComponentModel.Design.DesignSurface.Flushed> event is raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="public object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetService(Type ^ serviceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">
          <span data-ttu-id="e5cb9-287">O tipo de serviço a ser recuperado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-287">The type of service to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5cb9-288">Obtém um serviço de contêiner de serviço.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-288">Gets a service from the service container.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e5cb9-289">Um objeto que implementa <paramref name="serviceType" /> ou é uma classe derivada dele ou então <see langword="null" />, se o serviço não existe no contêiner de serviço.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-289">An object that implements, or is a derived class of, <paramref name="serviceType" />, or <see langword="null" /> if the service does not exist in the service container.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5cb9-290">O <xref:System.ComponentModel.Design.DesignSurface.GetService%2A> método recupera um serviço no contêiner de serviço da superfície de design.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-290">The <xref:System.ComponentModel.Design.DesignSurface.GetService%2A> method retrieves a service in the design surface’s service container.</span></span> <span data-ttu-id="e5cb9-291">Além disso, isso encaminhará para qualquer provedor de serviço que foi fornecido para a superfície de design em tempo de construção.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-291">In addition, this will forward to any service provider that was given to the design surface at construction time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLoaded">
      <MemberSignature Language="C#" Value="public bool IsLoaded { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLoaded" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignSurface.IsLoaded" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLoaded As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLoaded { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e5cb9-292">Obtém um valor que indica se a superfície de design está atualmente carregada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-292">Gets a value indicating whether the design surface is currently loaded.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e5cb9-293">
            <see langword="true" /> Se a superfície de design está carregada no momento; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-293">
              <see langword="true" /> if the design surface is currently loaded; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Loaded">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.Design.LoadedEventHandler Loaded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.LoadedEventHandler Loaded" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurface.Loaded" />
      <MemberSignature Language="VB.NET" Value="Public Event Loaded As LoadedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::LoadedEventHandler ^ Loaded;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.LoadedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e5cb9-294">Ocorre após a conclusão do carregamento do designer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-294">Occurs when the designer load has completed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5cb9-295">O <xref:System.ComponentModel.Design.DesignSurface.Loaded> é gerado para cargas com êxito, bem como aqueles sem êxito.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-295">The <xref:System.ComponentModel.Design.DesignSurface.Loaded> event is raised for successful loads as well as unsuccessful ones.</span></span> <span data-ttu-id="e5cb9-296">Se o código neste manipulador de eventos gera uma exceção, o designer está descarregado.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-296">If code in this event handler throws an exception, the designer is unloaded.</span></span>  
  
 <span data-ttu-id="e5cb9-297">O <xref:System.ComponentModel.Design.LoadedEventArgs> objeto pode ser usado para determinar se carregar com êxito, e ele também pode fornecer uma lista de erros que ocorreram durante o carregamento.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-297">The <xref:System.ComponentModel.Design.LoadedEventArgs> object can be used to determine if loading succeeded, and it can also provide a list of errors that occurred during the load.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e5cb9-298">Podem ocorrer erros, carrega com êxito desde que o sistema de serialização pode tolerar erros.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-298">Errors can occur for successful loads as well, provided that the serialization system can tolerate errors.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadErrors">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection LoadErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection LoadErrors" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignSurface.LoadErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LoadErrors As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ICollection ^ LoadErrors { System::Collections::ICollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e5cb9-299">Retorna uma coleção de carregamento de erros ou uma coleção nula.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-299">Returns a collection of loading errors or a void collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e5cb9-300">Um <see cref="T:System.Collections.ICollection" /> de erros de carregamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-300">A <see cref="T:System.Collections.ICollection" /> of loading errors.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Loading">
      <MemberSignature Language="C#" Value="public event EventHandler Loading;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Loading" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurface.Loading" />
      <MemberSignature Language="VB.NET" Value="Public Event Loading As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Loading;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e5cb9-301">Ocorre quando o designer está prestes a ser carregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-301">Occurs when the designer is about to be loaded.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLoaded">
      <MemberSignature Language="C#" Value="protected virtual void OnLoaded (System.ComponentModel.Design.LoadedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLoaded(class System.ComponentModel.Design.LoadedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.OnLoaded(System.ComponentModel.Design.LoadedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLoaded (e As LoadedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLoaded(System::ComponentModel::Design::LoadedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Design.LoadedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="e5cb9-302">Um <see cref="T:System.ComponentModel.Design.LoadedEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-302">A <see cref="T:System.ComponentModel.Design.LoadedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5cb9-303">Aciona o evento <see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-303">Raises the <see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLoading">
      <MemberSignature Language="C#" Value="protected virtual void OnLoading (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLoading(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.OnLoading(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLoading (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLoading(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="e5cb9-304">Um <see cref="T:System.EventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-304">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5cb9-305">Aciona o evento <see cref="E:System.ComponentModel.Design.DesignSurface.Loading" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-305">Raises the <see cref="E:System.ComponentModel.Design.DesignSurface.Loading" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUnloaded">
      <MemberSignature Language="C#" Value="protected virtual void OnUnloaded (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUnloaded(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.OnUnloaded(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUnloaded (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUnloaded(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="e5cb9-306">Um <see cref="T:System.EventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-306">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5cb9-307">Aciona o evento <see cref="E:System.ComponentModel.Design.DesignSurface.Unloaded" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-307">Raises the <see cref="E:System.ComponentModel.Design.DesignSurface.Unloaded" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUnloading">
      <MemberSignature Language="C#" Value="protected virtual void OnUnloading (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUnloading(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.OnUnloading(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUnloading (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUnloading(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="e5cb9-308">Um <see cref="T:System.EventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-308">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5cb9-309">Aciona o evento <see cref="E:System.ComponentModel.Design.DesignSurface.Unloading" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-309">Raises the <see cref="E:System.ComponentModel.Design.DesignSurface.Unloading" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnViewActivate">
      <MemberSignature Language="C#" Value="protected virtual void OnViewActivate (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnViewActivate(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.OnViewActivate(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnViewActivate (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnViewActivate(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="e5cb9-310">Um <see cref="T:System.EventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-310">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5cb9-311">Aciona o evento <see cref="E:System.ComponentModel.Design.DesignSurface.ViewActivated" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-311">Raises the <see cref="E:System.ComponentModel.Design.DesignSurface.ViewActivated" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceContainer">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.Design.ServiceContainer ServiceContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.ServiceContainer ServiceContainer" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignSurface.ServiceContainer" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ServiceContainer As ServiceContainer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::ComponentModel::Design::ServiceContainer ^ ServiceContainer { System::ComponentModel::Design::ServiceContainer ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ServiceContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e5cb9-312">Obtém o contêiner de serviço.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-312">Gets the service container.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e5cb9-313">O contêiner de serviço que fornece todos os serviços para os designers contidos na superfície de design.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-313">The service container that provides all services to designers contained within the design surface.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5cb9-314">Em tempo de construção, <xref:System.ComponentModel.Design.DesignSurface> adiciona serviços padrão neste contêiner de serviço.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-314">At construction time, <xref:System.ComponentModel.Design.DesignSurface> adds default services into this service container.</span></span> <span data-ttu-id="e5cb9-315">Você pode deixar os serviços padrão em seu estado atual, ou você pode removê-los e substituí-los com seus próprios.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-315">You can leave the default services in their present state, or you can remove them and replace them with your own.</span></span> <span data-ttu-id="e5cb9-316">Os serviços padrão são todos criados para o demanda, para que não haja nenhuma perda de desempenho para adicioná-los em tempo de construção.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-316">The default services are all demand-created, so there is no loss in performance for adding them at construction time.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e5cb9-317">O <see cref="T:System.ComponentModel.Design.IDesignerHost" /> anexado a <see cref="T:System.ComponentModel.Design.DesignSurface" /> foi descartado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-317">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Unloaded">
      <MemberSignature Language="C#" Value="public event EventHandler Unloaded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Unloaded" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurface.Unloaded" />
      <MemberSignature Language="VB.NET" Value="Public Event Unloaded As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Unloaded;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e5cb9-318">Ocorre quando o descarregamento de um designer foi concluído.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-318">Occurs when a designer has finished unloading.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unloading">
      <MemberSignature Language="C#" Value="public event EventHandler Unloading;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Unloading" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurface.Unloading" />
      <MemberSignature Language="VB.NET" Value="Public Event Unloading As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Unloading;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e5cb9-319">Ocorre quando um designer está prestes a ser descarregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-319">Occurs when a designer is about to unload.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5cb9-320">Quando um designer descarrega, todo o estado de designer é destruído, incluindo o modo de exibição designer.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-320">When a designer unloads, the entire state for that designer is destroyed, including the designer’s view.</span></span> <span data-ttu-id="e5cb9-321">O modo de exibição deve ser órfãos no momento.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-321">The view should be unparented at this time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="View">
      <MemberSignature Language="C#" Value="public object View { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object View" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignSurface.View" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property View As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ View { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e5cb9-322">Obtém a exibição do designer raiz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-322">Gets the view for the root designer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e5cb9-323">O modo de exibição para o designer raiz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-323">The view for the root designer.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5cb9-324">O <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> método deve ser chamado antecipadamente para iniciar o processo de carregamento.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-324">The <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> method must be called beforehand to start the loading process.</span></span> <span data-ttu-id="e5cb9-325">É possível retornar uma exibição antes de concluir o carregamento porque o designer raiz, que fornece o modo de exibição, é o primeiro objeto criado pelo carregador de designer o carregador do designer.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-325">It is possible to return a view before the designer loader finishes loading because the root designer, which supplies the view, is the first object created by the designer loader.</span></span> <span data-ttu-id="e5cb9-326">Se não estiver disponível, uma exibição <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> gera uma exceção.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-326">If a view is unavailable, <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> raises an exception.</span></span>  
  
 <span data-ttu-id="e5cb9-327">A noção de uma tecnologia de exibição está obsoleta.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-327">The notion of a view technology is obsolete.</span></span> <span data-ttu-id="e5cb9-328">Mas, ele permanecerá em interfaces para designers de raiz para compatibilidade com versões anteriores.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-328">But, it remains in the interfaces for root designers for backward compatibility.</span></span> <span data-ttu-id="e5cb9-329">Seu uso é oculta de qualquer pessoa usando <xref:System.ComponentModel.Design.DesignSurface> objetos.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-329">Its use is hidden from anyone using <xref:System.ComponentModel.Design.DesignSurface> objects.</span></span> <span data-ttu-id="e5cb9-330">O <xref:System.ComponentModel.Design.DesignSurface.View%2A> propriedade oculta tecnologias de exibição, passando as tecnologias com suporte no designer de raiz.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-330">The <xref:System.ComponentModel.Design.DesignSurface.View%2A> property hides view technologies by passing the supported technologies back into the root designer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e5cb9-331">O seguinte exemplo de código mostra como <xref:System.ComponentModel.Design.DesignSurface.View%2A> oculta exibir tecnologias.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-331">The following code example shows how <xref:System.ComponentModel.Design.DesignSurface.View%2A> hides view technologies.</span></span>  
  
 ```csharp 
 IRootDesigner d;  
  
 ViewTechnology[] supported = d.SupportedTechnologies;  
  
 return d.GetView(supported[0]);
 ``` 
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e5cb9-332">A superfície de design não está carregando, o carregador de designer ainda não criou um designer raiz ou o carregamento da superfície de design foi concluído, mas falhou.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-332">The design surface is not loading, the designer loader has not yet created a root designer, or the design surface finished the load, but failed.</span>
          </span>
          <span data-ttu-id="e5cb9-333">Mais informações podem estar disponíveis no <see cref="P:System.Exception.InnerException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-333">More information may available in the <see cref="P:System.Exception.InnerException" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="e5cb9-334">O designer foi carregado, mas não oferece uma exibição compatível com essa superfície de design.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-334">The designer loaded, but it does not offer a view compatible with this design surface.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e5cb9-335">O <see cref="T:System.ComponentModel.Design.IDesignerHost" /> anexado a <see cref="T:System.ComponentModel.Design.DesignSurface" /> foi descartado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-335">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ViewActivated">
      <MemberSignature Language="C#" Value="public event EventHandler ViewActivated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ViewActivated" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurface.ViewActivated" />
      <MemberSignature Language="VB.NET" Value="Public Event ViewActivated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ViewActivated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e5cb9-336">Ocorre quando o método <see cref="M:System.ComponentModel.Design.IDesignerHost.Activate" /> foi chamado em <see cref="T:System.ComponentModel.Design.IDesignerHost" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5cb9-336">Occurs when the <see cref="M:System.ComponentModel.Design.IDesignerHost.Activate" /> method has been called on <see cref="T:System.ComponentModel.Design.IDesignerHost" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5cb9-337">Se você desejar oferecer suporte a <xref:System.ComponentModel.Design.IDesignerHost.Activate%2A> método, o manipulador de eventos deve ativar a janela para a superfície de design.</span><span class="sxs-lookup"><span data-stu-id="e5cb9-337">If you want to support the <xref:System.ComponentModel.Design.IDesignerHost.Activate%2A> method, your event handler should activate the window for this design surface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
      </Docs>
    </Member>
  </Members>
</Type>