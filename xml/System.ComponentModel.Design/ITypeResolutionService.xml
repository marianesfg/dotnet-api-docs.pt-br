<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ITypeResolutionService.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5260d223ba4dd43e7b087938e5acd002d75d466c8.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">260d223ba4dd43e7b087938e5acd002d75d466c8</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.ITypeResolutionService">
          <source>Provides an interface to retrieve an assembly or type by name.</source>
          <target state="translated">Fornece uma interface para recuperar um tipo ou assembly por nome.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.ITypeResolutionService">
          <source>This service is used to load types at design time.</source>
          <target state="translated">Esse serviço é usado para carregar os tipos em tempo de design.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.ITypeResolutionService">
          <source>The following example control provides an interface to call methods of the <ph id="ph1">&lt;xref:System.ComponentModel.Design.ITypeResolutionService&gt;</ph> from design mode.</source>
          <target state="translated">O controle de exemplo a seguir fornece uma interface para chamar métodos do <ph id="ph1">&lt;xref:System.ComponentModel.Design.ITypeResolutionService&gt;</ph> do modo de design.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.ITypeResolutionService">
          <source>Gets the requested assembly.</source>
          <target state="translated">Obtém o assembly solicitado.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeResolutionService.GetAssembly(System.Reflection.AssemblyName)">
          <source>The name of the assembly to retrieve.</source>
          <target state="translated">O nome do assembly a ser recuperado.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeResolutionService.GetAssembly(System.Reflection.AssemblyName)">
          <source>Gets the requested assembly.</source>
          <target state="translated">Obtém o assembly solicitado.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeResolutionService.GetAssembly(System.Reflection.AssemblyName)">
          <source>An instance of the requested assembly, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no assembly can be located.</source>
          <target state="translated">Uma instância do assembly solicitado ou <ph id="ph1">&lt;see langword="null" /&gt;</ph> se nenhum assembly puder ser localizado.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeResolutionService.GetAssembly(System.Reflection.AssemblyName,System.Boolean)">
          <source>The name of the assembly to retrieve.</source>
          <target state="translated">O nome do assembly a ser recuperado.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeResolutionService.GetAssembly(System.Reflection.AssemblyName,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this method should throw an exception if the assembly cannot be located; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>, and this method returns <ph id="ph3">&lt;see langword="null" /&gt;</ph> if the assembly cannot be located.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se esse método deverá lançar uma exceção se o assembly não puder ser localizado; do contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph> e esse método retornará <ph id="ph3">&lt;see langword="null" /&gt;</ph> se o assembly não puder ser localizado.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeResolutionService.GetAssembly(System.Reflection.AssemblyName,System.Boolean)">
          <source>Gets the requested assembly.</source>
          <target state="translated">Obtém o assembly solicitado.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeResolutionService.GetAssembly(System.Reflection.AssemblyName,System.Boolean)">
          <source>An instance of the requested assembly, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no assembly can be located.</source>
          <target state="translated">Uma instância do assembly solicitado ou <ph id="ph1">&lt;see langword="null" /&gt;</ph> se nenhum assembly puder ser localizado.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeResolutionService.GetPathOfAssembly(System.Reflection.AssemblyName)">
          <source>The name of the assembly.</source>
          <target state="translated">O nome do assembly.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeResolutionService.GetPathOfAssembly(System.Reflection.AssemblyName)">
          <source>Gets the path to the file from which the assembly was loaded.</source>
          <target state="translated">Obtém o caminho para o arquivo do qual o assembly foi carregado.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeResolutionService.GetPathOfAssembly(System.Reflection.AssemblyName)">
          <source>The path to the file from which the assembly was loaded.</source>
          <target state="translated">O caminho para o arquivo do qual o assembly foi carregado.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.ITypeResolutionService">
          <source>Loads a type with the specified name.</source>
          <target state="translated">Carrega um tipo com o nome especificado.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeResolutionService.GetType(System.String)">
          <source>The name of the type.</source>
          <target state="translated">O nome do tipo.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeResolutionService.GetType(System.String)">
          <source>If the type name is not a fully qualified name that indicates an assembly, this service will search its internal set of referenced assemblies.</source>
          <target state="translated">Se o nome do tipo não for um nome totalmente qualificado que indica um assembly, esse serviço pesquisará seu conjunto interno de assemblies referenciados.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeResolutionService.GetType(System.String)">
          <source>Loads a type with the specified name.</source>
          <target state="translated">Carrega um tipo com o nome especificado.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeResolutionService.GetType(System.String)">
          <source>An instance of <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that corresponds to the specified name, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if no type can be found.</source>
          <target state="translated">Uma instância de <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que corresponderá ao nome especificado ou <ph id="ph2">&lt;see langword="null" /&gt;</ph>, se nenhum tipo puder ser encontrado.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeResolutionService.GetType(System.String,System.Boolean)">
          <source>The name of the type.</source>
          <target state="translated">O nome do tipo.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeResolutionService.GetType(System.String,System.Boolean)">
          <source>If the type name is not a fully qualified name that indicates an assembly, this service will search its internal set of referenced assemblies.</source>
          <target state="translated">Se o nome do tipo não for um nome totalmente qualificado que indica um assembly, esse serviço pesquisará seu conjunto interno de assemblies referenciados.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeResolutionService.GetType(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this method should throw an exception if the assembly cannot be located; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>, and this method returns <ph id="ph3">&lt;see langword="null" /&gt;</ph> if the assembly cannot be located.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se esse método deverá lançar uma exceção se o assembly não puder ser localizado; do contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph> e esse método retornará <ph id="ph3">&lt;see langword="null" /&gt;</ph> se o assembly não puder ser localizado.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeResolutionService.GetType(System.String,System.Boolean)">
          <source>Loads a type with the specified name.</source>
          <target state="translated">Carrega um tipo com o nome especificado.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeResolutionService.GetType(System.String,System.Boolean)">
          <source>An instance of <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that corresponds to the specified name, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if no type can be found.</source>
          <target state="translated">Uma instância de <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que corresponderá ao nome especificado ou <ph id="ph2">&lt;see langword="null" /&gt;</ph>, se nenhum tipo puder ser encontrado.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.ITypeResolutionService.GetType(System.String,System.Boolean)">
          <source>If the type cannot be loaded and the <ph id="ph1">`throwOnError`</ph> parameter is <ph id="ph2">`true`</ph>, this will throw an exception.</source>
          <target state="translated">Se o tipo não pode ser carregado e o <ph id="ph1">`throwOnError`</ph> parâmetro é <ph id="ph2">`true`</ph>, isso gerará uma exceção.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeResolutionService.GetType(System.String,System.Boolean,System.Boolean)">
          <source>The name of the type.</source>
          <target state="translated">O nome do tipo.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeResolutionService.GetType(System.String,System.Boolean,System.Boolean)">
          <source>If the type name is not a fully qualified name that indicates an assembly, this service will search its internal set of referenced assemblies.</source>
          <target state="translated">Se o nome do tipo não for um nome totalmente qualificado que indica um assembly, esse serviço pesquisará seu conjunto interno de assemblies referenciados.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeResolutionService.GetType(System.String,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this method should throw an exception if the assembly cannot be located; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>, and this method returns <ph id="ph3">&lt;see langword="null" /&gt;</ph> if the assembly cannot be located.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se esse método deverá lançar uma exceção se o assembly não puder ser localizado; do contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph> e esse método retornará <ph id="ph3">&lt;see langword="null" /&gt;</ph> se o assembly não puder ser localizado.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeResolutionService.GetType(System.String,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to ignore case when searching for types; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para ignorar maiúsculas e minúsculas durante a pesquisa de tipos; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeResolutionService.GetType(System.String,System.Boolean,System.Boolean)">
          <source>Loads a type with the specified name.</source>
          <target state="translated">Carrega um tipo com o nome especificado.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeResolutionService.GetType(System.String,System.Boolean,System.Boolean)">
          <source>An instance of <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that corresponds to the specified name, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if no type can be found.</source>
          <target state="translated">Uma instância de <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que corresponderá ao nome especificado ou <ph id="ph2">&lt;see langword="null" /&gt;</ph>, se nenhum tipo puder ser encontrado.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.ITypeResolutionService.GetType(System.String,System.Boolean,System.Boolean)">
          <source>If the type cannot be loaded and the <ph id="ph1">`throwOnError`</ph> parameter is <ph id="ph2">`true`</ph>, this will throw an exception.</source>
          <target state="translated">Se o tipo não pode ser carregado e o <ph id="ph1">`throwOnError`</ph> parâmetro é <ph id="ph2">`true`</ph>, isso gerará uma exceção.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeResolutionService.ReferenceAssembly(System.Reflection.AssemblyName)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyName" /&gt;</ph> that indicates the assembly to reference.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyName" /&gt;</ph> que indica que o assembly para referenciar.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeResolutionService.ReferenceAssembly(System.Reflection.AssemblyName)">
          <source>Adds a reference to the specified assembly.</source>
          <target state="translated">Adiciona uma referência ao assembly especificado.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.ITypeResolutionService.ReferenceAssembly(System.Reflection.AssemblyName)">
          <source>Once a reference to an assembly has been added to this service, this service can load types from names that do not specify an assembly.</source>
          <target state="translated">Após a adição de uma referência a um assembly para esse serviço, esse serviço pode carregar tipos de nomes que não especificam um assembly.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>