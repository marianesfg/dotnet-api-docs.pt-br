<Type Name="ITypeResolutionService" FullName="System.ComponentModel.Design.ITypeResolutionService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="260d223ba4dd43e7b087938e5acd002d75d466c8" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ITypeResolutionService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITypeResolutionService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.ITypeResolutionService" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITypeResolutionService" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITypeResolutionService" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="c49ea-101">Fornece uma interface para recuperar um tipo ou assembly por nome.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c49ea-101">Provides an interface to retrieve an assembly or type by name.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c49ea-102">Esse serviço é usado para carregar os tipos em tempo de design.</span><span class="sxs-lookup"><span data-stu-id="c49ea-102">This service is used to load types at design time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c49ea-103">O controle de exemplo a seguir fornece uma interface para chamar métodos do <xref:System.ComponentModel.Design.ITypeResolutionService> do modo de design.</span><span class="sxs-lookup"><span data-stu-id="c49ea-103">The following example control provides an interface to call methods of the <xref:System.ComponentModel.Design.ITypeResolutionService> from design mode.</span></span>  
  
 [!code-cpp[ITypeResolutionServiceExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ITypeResolutionServiceExample/CPP/ityperesolutionservicecontrol.cpp#1)]
 [!code-csharp[ITypeResolutionServiceExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ITypeResolutionServiceExample/CS/ityperesolutionservicecontrol.cs#1)]
 [!code-vb[ITypeResolutionServiceExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ITypeResolutionServiceExample/VB/ityperesolutionservicecontrol.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="GetAssembly">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c49ea-104">Obtém o assembly solicitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c49ea-104">Gets the requested assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly GetAssembly (System.Reflection.AssemblyName name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Assembly GetAssembly(class System.Reflection.AssemblyName name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeResolutionService.GetAssembly(System.Reflection.AssemblyName)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAssembly (name As AssemblyName) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Assembly ^ GetAssembly(System::Reflection::AssemblyName ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Reflection.AssemblyName" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="c49ea-105">O nome do assembly a ser recuperado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c49ea-105">The name of the assembly to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c49ea-106">Obtém o assembly solicitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c49ea-106">Gets the requested assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c49ea-107">Uma instância do assembly solicitado ou <see langword="null" /> se nenhum assembly puder ser localizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c49ea-107">An instance of the requested assembly, or <see langword="null" /> if no assembly can be located.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly GetAssembly (System.Reflection.AssemblyName name, bool throwOnError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Assembly GetAssembly(class System.Reflection.AssemblyName name, bool throwOnError) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeResolutionService.GetAssembly(System.Reflection.AssemblyName,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAssembly (name As AssemblyName, throwOnError As Boolean) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Assembly ^ GetAssembly(System::Reflection::AssemblyName ^ name, bool throwOnError);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Reflection.AssemblyName" />
        <Parameter Name="throwOnError" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="c49ea-108">O nome do assembly a ser recuperado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c49ea-108">The name of the assembly to retrieve.</span>
          </span>
        </param>
        <param name="throwOnError">
          <span data-ttu-id="c49ea-109">
            <see langword="true" /> se esse método deverá lançar uma exceção se o assembly não puder ser localizado; do contrário, <see langword="false" /> e esse método retornará <see langword="null" /> se o assembly não puder ser localizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c49ea-109">
              <see langword="true" /> if this method should throw an exception if the assembly cannot be located; otherwise, <see langword="false" />, and this method returns <see langword="null" /> if the assembly cannot be located.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c49ea-110">Obtém o assembly solicitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c49ea-110">Gets the requested assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c49ea-111">Uma instância do assembly solicitado ou <see langword="null" /> se nenhum assembly puder ser localizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c49ea-111">An instance of the requested assembly, or <see langword="null" /> if no assembly can be located.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPathOfAssembly">
      <MemberSignature Language="C#" Value="public string GetPathOfAssembly (System.Reflection.AssemblyName name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetPathOfAssembly(class System.Reflection.AssemblyName name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeResolutionService.GetPathOfAssembly(System.Reflection.AssemblyName)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPathOfAssembly (name As AssemblyName) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPathOfAssembly(System::Reflection::AssemblyName ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Reflection.AssemblyName" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="c49ea-112">O nome do assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c49ea-112">The name of the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c49ea-113">Obtém o caminho para o arquivo do qual o assembly foi carregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c49ea-113">Gets the path to the file from which the assembly was loaded.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c49ea-114">O caminho para o arquivo do qual o assembly foi carregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c49ea-114">The path to the file from which the assembly was loaded.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetType">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c49ea-115">Carrega um tipo com o nome especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c49ea-115">Loads a type with the specified name.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeResolutionService.GetType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType (name As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="c49ea-116">O nome do tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c49ea-116">The name of the type.</span>
          </span>
          <span data-ttu-id="c49ea-117">Se o nome do tipo não for um nome totalmente qualificado que indica um assembly, esse serviço pesquisará seu conjunto interno de assemblies referenciados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c49ea-117">If the type name is not a fully qualified name that indicates an assembly, this service will search its internal set of referenced assemblies.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c49ea-118">Carrega um tipo com o nome especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c49ea-118">Loads a type with the specified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c49ea-119">Uma instância de <see cref="T:System.Type" /> que corresponderá ao nome especificado ou <see langword="null" />, se nenhum tipo puder ser encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c49ea-119">An instance of <see cref="T:System.Type" /> that corresponds to the specified name, or <see langword="null" /> if no type can be found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType (string name, bool throwOnError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(string name, bool throwOnError) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeResolutionService.GetType(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType (name As String, throwOnError As Boolean) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType(System::String ^ name, bool throwOnError);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="throwOnError" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="c49ea-120">O nome do tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c49ea-120">The name of the type.</span>
          </span>
          <span data-ttu-id="c49ea-121">Se o nome do tipo não for um nome totalmente qualificado que indica um assembly, esse serviço pesquisará seu conjunto interno de assemblies referenciados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c49ea-121">If the type name is not a fully qualified name that indicates an assembly, this service will search its internal set of referenced assemblies.</span>
          </span>
        </param>
        <param name="throwOnError">
          <span data-ttu-id="c49ea-122">
            <see langword="true" /> se esse método deverá lançar uma exceção se o assembly não puder ser localizado; do contrário, <see langword="false" /> e esse método retornará <see langword="null" /> se o assembly não puder ser localizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c49ea-122">
              <see langword="true" /> if this method should throw an exception if the assembly cannot be located; otherwise, <see langword="false" />, and this method returns <see langword="null" /> if the assembly cannot be located.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c49ea-123">Carrega um tipo com o nome especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c49ea-123">Loads a type with the specified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c49ea-124">Uma instância de <see cref="T:System.Type" /> que corresponderá ao nome especificado ou <see langword="null" />, se nenhum tipo puder ser encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c49ea-124">An instance of <see cref="T:System.Type" /> that corresponds to the specified name, or <see langword="null" /> if no type can be found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c49ea-125">Se o tipo não pode ser carregado e o `throwOnError` parâmetro é `true`, isso gerará uma exceção.</span><span class="sxs-lookup"><span data-stu-id="c49ea-125">If the type cannot be loaded and the `throwOnError` parameter is `true`, this will throw an exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType (string name, bool throwOnError, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(string name, bool throwOnError, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeResolutionService.GetType(System.String,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType (name As String, throwOnError As Boolean, ignoreCase As Boolean) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType(System::String ^ name, bool throwOnError, bool ignoreCase);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="throwOnError" Type="System.Boolean" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="c49ea-126">O nome do tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c49ea-126">The name of the type.</span>
          </span>
          <span data-ttu-id="c49ea-127">Se o nome do tipo não for um nome totalmente qualificado que indica um assembly, esse serviço pesquisará seu conjunto interno de assemblies referenciados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c49ea-127">If the type name is not a fully qualified name that indicates an assembly, this service will search its internal set of referenced assemblies.</span>
          </span>
        </param>
        <param name="throwOnError">
          <span data-ttu-id="c49ea-128">
            <see langword="true" /> se esse método deverá lançar uma exceção se o assembly não puder ser localizado; do contrário, <see langword="false" /> e esse método retornará <see langword="null" /> se o assembly não puder ser localizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c49ea-128">
              <see langword="true" /> if this method should throw an exception if the assembly cannot be located; otherwise, <see langword="false" />, and this method returns <see langword="null" /> if the assembly cannot be located.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="c49ea-129">
            <see langword="true" /> para ignorar maiúsculas e minúsculas durante a pesquisa de tipos; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c49ea-129">
              <see langword="true" /> to ignore case when searching for types; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c49ea-130">Carrega um tipo com o nome especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c49ea-130">Loads a type with the specified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c49ea-131">Uma instância de <see cref="T:System.Type" /> que corresponderá ao nome especificado ou <see langword="null" />, se nenhum tipo puder ser encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c49ea-131">An instance of <see cref="T:System.Type" /> that corresponds to the specified name, or <see langword="null" /> if no type can be found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c49ea-132">Se o tipo não pode ser carregado e o `throwOnError` parâmetro é `true`, isso gerará uma exceção.</span><span class="sxs-lookup"><span data-stu-id="c49ea-132">If the type cannot be loaded and the `throwOnError` parameter is `true`, this will throw an exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferenceAssembly">
      <MemberSignature Language="C#" Value="public void ReferenceAssembly (System.Reflection.AssemblyName name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReferenceAssembly(class System.Reflection.AssemblyName name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeResolutionService.ReferenceAssembly(System.Reflection.AssemblyName)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReferenceAssembly (name As AssemblyName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReferenceAssembly(System::Reflection::AssemblyName ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Reflection.AssemblyName" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="c49ea-133">Um <see cref="T:System.Reflection.AssemblyName" /> que indica que o assembly para referenciar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c49ea-133">An <see cref="T:System.Reflection.AssemblyName" /> that indicates the assembly to reference.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c49ea-134">Adiciona uma referência ao assembly especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c49ea-134">Adds a reference to the specified assembly.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c49ea-135">Após a adição de uma referência a um assembly para esse serviço, esse serviço pode carregar tipos de nomes que não especificam um assembly.</span><span class="sxs-lookup"><span data-stu-id="c49ea-135">Once a reference to an assembly has been added to this service, this service can load types from names that do not specify an assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.AssemblyName" />
      </Docs>
    </Member>
  </Members>
</Type>