<Type Name="DesignerActionList" FullName="System.ComponentModel.Design.DesignerActionList">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="05622b9de5742e191e6dbac33792fd52b9e69434" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30368750" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DesignerActionList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DesignerActionList extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.DesignerActionList" />
  <TypeSignature Language="VB.NET" Value="Public Class DesignerActionList" />
  <TypeSignature Language="C++ CLI" Value="public ref class DesignerActionList" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornece a classe base para tipos que definem uma lista de itens usados para criar um painel de marcação inteligente.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O `DesignerAction` recurso permite que componentes e controles para exibir informações contextuais e comandos. O `DesignerAction` recurso pode ser pensado como uma substituição para verbos do designer, porque um <xref:System.ComponentModel.Design.DesignerActionItem> podem ser exibidos no painel de marca inteligente e também no menu de atalho associado a um componente ou controle. O <xref:System.ComponentModel.Design.DesignerActionList> classe representa o principal ponto de interação para oferecer suporte para os desenvolvedores que desejam adicionar marcas inteligentes para seus controles e componentes personalizados.  
  
 <xref:System.ComponentModel.Design.DesignerActionList> é a classe base, derivada por desenvolvedores de componente para preencher o painel de marcas inteligentes. Painel de marcas inteligentes representa a interface de menu como usuário (UI) de marcas inteligentes.  
  
 Esta classe derivada pode implementar o `virtual` <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A> método para retornar uma coleção de objetos derivada de <xref:System.ComponentModel.Design.DesignerActionItem>. Esses objetos representam os itens do painel de marca inteligente. Cada item é exibido no painel de acordo com seu tipo. Por exemplo, um <xref:System.ComponentModel.Design.DesignerActionTextItem> é exibido como um rótulo de texto estático. Itens de painel ativo, representados pelo <xref:System.ComponentModel.Design.DesignerActionPropertyItem> e <xref:System.ComponentModel.Design.DesignerActionMethodItem> tipos, têm uma propriedade publicamente acessível correspondente ou método, respectivamente, que implementa a funcionalidade para aquele item.  
  
 Para obter mais informações sobre como adicionar itens ao painel de marca inteligente, consulte o <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A> método.  
  
> [!NOTE]
>  Formulários e caixas de diálogo podem ser exibidas por membros da classe derivada de <xref:System.ComponentModel.Design.DesignerActionList>. Por padrão, o pai dessas janelas será a janela de contêiner para o painel de marcas inteligentes. Explicitamente domínio pai essas janelas filho de outro serviço ou janela pode causar marcas inteligentes exibir incorretamente.  
>   
>  Painéis de marcas inteligentes não oferecem suporte a rolagem ou paginação, tenha cuidado para não preencher seus painéis com muitos itens de marcas inteligentes. Número excessivo de itens pode resultar no painel de marcas inteligentes ultrapassando o limite da tela.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como criar uma coleção de <xref:System.ComponentModel.Design.DesignerActionItem> objetos.  
  
 Para obter uma explicação completa sobre este exemplo de código, consulte [como: Anexar marcas inteligentes para um componente de Windows Forms](http://msdn.microsoft.com/library/42cc4a0c-9ab3-47e1-93b8-03b6a6ccf233).  
  
 [!code-csharp[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/CS/smarttags.cs#2)]
 [!code-vb[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/VB/smarttags.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
    <altmember cref="T:System.ComponentModel.Design.DesignerActionItem" />
    <altmember cref="M:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems" />
    <altmember cref="T:System.ComponentModel.Design.DesignerActionListCollection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerActionList (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionList.#ctor(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignerActionList(System::ComponentModel::IComponent ^ component);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">Um componente relacionado ao <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.ComponentModel.Design.DesignerActionList> construtor define o <xref:System.ComponentModel.Design.DesignerActionList.AutoShow%2A> propriedade `false`.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como criar uma coleção de <xref:System.ComponentModel.Design.DesignerActionItem> objetos.  
  
 Para obter uma explicação completa sobre este exemplo de código, consulte [como: Anexar marcas inteligentes para um componente de Windows Forms](http://msdn.microsoft.com/library/42cc4a0c-9ab3-47e1-93b8-03b6a6ccf233).  
  
 [!code-csharp[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/CS/smarttags.cs#4)]
 [!code-vb[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/VB/smarttags.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoShow">
      <MemberSignature Language="C#" Value="public virtual bool AutoShow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoShow" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignerActionList.AutoShow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AutoShow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoShow { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se o painel de marcações inteligentes deve ser exibido automaticamente quando ele é criado.</summary>
        <value>
          <see langword="true" /> Se o painel deve ser mostrado quando o componente proprietário é criado; Caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o valor da propriedade for definido como `true`, o componente com que esse <xref:System.ComponentModel.Design.DesignerActionList> será associado automaticamente expandir e exibir o painel de marcas inteligentes quando o componente é criado.  
  
 Você pode desativar esse comportamento, definindo a <xref:System.Windows.Forms.Design.DesignerOptions.ObjectBoundSmartTagAutoShow%2A?displayProperty=nameWithType> propriedade `false`.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como criar uma coleção de <xref:System.ComponentModel.Design.DesignerActionItem> objetos.  
  
 Para obter uma explicação completa sobre este exemplo de código, consulte [como: Anexar marcas inteligentes para um componente de Windows Forms](http://msdn.microsoft.com/library/42cc4a0c-9ab3-47e1-93b8-03b6a6ccf233).  
  
 [!code-csharp[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/CS/smarttags.cs#7)]
 [!code-vb[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/VB/smarttags.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Design.DesignerActionUIService.HideUI(System.ComponentModel.IComponent)" />
        <altmember cref="M:System.ComponentModel.Design.DesignerActionUIService.ShowUI(System.ComponentModel.IComponent)" />
        <altmember cref="T:System.ComponentModel.Design.DesignerOptionService" />
      </Docs>
    </Member>
    <Member MemberName="Component">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IComponent Component { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IComponent Component" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignerActionList.Component" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Component As IComponent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::IComponent ^ Component { System::ComponentModel::IComponent ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o componente relacionado a <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
        <value>Um componente relacionados a <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="public object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionList.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetService(Type ^ serviceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">Um serviço fornecido pelo <see cref="T:System.ComponentModel.Component" />.</param>
        <summary>Retorna um objeto que representa um serviço fornecido pelo componente associado ao <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
        <returns>Um <see cref="T:System.Object" /> que representa um serviço fornecido pelo <see cref="T:System.ComponentModel.Component" />. Esse valor é <see langword="null" /> se o <see cref="T:System.ComponentModel.Component" /> não fornece o serviço especificado.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSortedActionItems">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.Design.DesignerActionItemCollection GetSortedActionItems ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.Design.DesignerActionItemCollection GetSortedActionItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSortedActionItems () As DesignerActionItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::Design::DesignerActionItemCollection ^ GetSortedActionItems();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerActionItemCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna a coleção de objetos <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> contidos na lista.</summary>
        <returns>A matriz <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> que contém os itens nessa lista.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O `virtual` <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A> método é implementado para voltar, exibir a ordem em que o esperado, derivado de uma coleção de objetos de <xref:System.ComponentModel.Design.DesignerActionItem> classe. Esses itens podem ser dos seguintes tipos específicos.  
  
|Tipo|Descrição|  
|----------|-----------------|  
|<xref:System.ComponentModel.Design.DesignerActionHeaderItem>|O rótulo de grupo, exibido em negrito.|  
|<xref:System.ComponentModel.Design.DesignerActionTextItem>|Um rótulo, exibido em uma fonte comum.|  
|<xref:System.ComponentModel.Design.DesignerActionPropertyItem>|Um painel item associado a uma propriedade. Também pode exibir uma marca de seleção ou o editor de propriedade associado à propriedade subjacente.|  
|<xref:System.ComponentModel.Design.DesignerActionMethodItem>|Um item do painel exibido como um hiperlink e associado a um método.|  
  
 Para cada <xref:System.ComponentModel.Design.DesignerActionMethodItem> e <xref:System.ComponentModel.Design.DesignerActionPropertyItem>, uma propriedade ou método correspondente deve ser adicionada à classe fornecido pelo programador derivada de <xref:System.ComponentModel.Design.DesignerActionList> classe. Cada método e propriedade de item é exibido como uma entrada de ativa; (UI) interagir com ele por meio da interface do usuário chama o método correspondente ou a propriedade, respectivamente.  
  
 Itens de propriedade tem uma interface de especial de item de painel que permite a exibição e manipulação de seus valores de propriedade correspondente. Para obter mais informações, consulte a classe <xref:System.ComponentModel.Design.DesignerActionPropertyItem>.  
  
 A ordem dos itens na matriz retornada reflete a ordem em que eles serão exibidos no painel. Os itens são agrupados de acordo com o <xref:System.ComponentModel.Design.DesignerActionItem.Category%2A> propriedade, usando as seguintes regras:  
  
-   A categoria do primeiro item encontrado significa o início do primeiro grupo. Esse grupo continuará desde que cada item sucessivo é da mesma categoria. Quando um item de uma categoria diferente, novo é encontrado, um novo grupo é criado e o item é colocado nele.  
  
-   Se um item tem um tipo diferente de grupo atual, mas essa categoria já foi usada, o item é colocado na categoria existente correspondente.  
  
-   Se um item não tiver uma categoria, ele é colocado em um grupo de diverso no final do painel. Esse grupo também contém itens cujo <xref:System.ComponentModel.Design.DesignerActionItem.AllowAssociate%2A> está definida como `false`.  
  
 O <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A> método é chamado quando o painel é criado pela primeira vez. Você deve chamar o <xref:System.ComponentModel.Design.DesignerActionUIService.Refresh%2A> método para atualizar a lista de itens exibidos no painel.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como criar uma coleção de <xref:System.ComponentModel.Design.DesignerActionItem> objetos.  
  
 Para obter uma explicação completa sobre este exemplo de código, consulte [como: Anexar marcas inteligentes para um componente de Windows Forms](http://msdn.microsoft.com/library/42cc4a0c-9ab3-47e1-93b8-03b6a6ccf233).  
  
 [!code-csharp[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/CS/smarttags.cs#7)]
 [!code-vb[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/VB/smarttags.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerActionItem" />
        <altmember cref="P:System.ComponentModel.Design.DesignerActionItem.Category" />
        <altmember cref="P:System.ComponentModel.Design.DesignerActionItem.AllowAssociate" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
      </Docs>
    </Member>
  </Members>
</Type>