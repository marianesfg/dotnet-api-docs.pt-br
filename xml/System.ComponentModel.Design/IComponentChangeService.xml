<Type Name="IComponentChangeService" FullName="System.ComponentModel.Design.IComponentChangeService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="86a6a3083a649cd0f23842389ebab71b235eb45c" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58719072" /></Metadata><TypeSignature Language="C#" Value="public interface IComponentChangeService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IComponentChangeService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.IComponentChangeService" />
  <TypeSignature Language="VB.NET" Value="Public Interface IComponentChangeService" />
  <TypeSignature Language="C++ CLI" Value="public interface class IComponentChangeService" />
  <TypeSignature Language="F#" Value="type IComponentChangeService = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="48058-101">Fornece uma interface para adicionar e remover os manipuladores de eventos para eventos que adicionam, alteram, removem ou renomeiam componentes e fornecem métodos para gerar um evento <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" /> ou <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" />.</span><span class="sxs-lookup"><span data-stu-id="48058-101">Provides an interface to add and remove the event handlers for events that add, change, remove or rename components, and provides methods to raise a <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" /> or <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" /> event.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48058-102"><xref:System.ComponentModel.Design.IComponentChangeService> Fornece uma interface que pode ser usada para indicar os métodos que manipulam os eventos a seguir:</span><span class="sxs-lookup"><span data-stu-id="48058-102"><xref:System.ComponentModel.Design.IComponentChangeService> provides an interface that can be used to indicate the methods that handle the following events:</span></span>  
  
-   <span data-ttu-id="48058-103"><xref:System.ComponentModel.Design.IComponentChangeService.ComponentAdded>, gerado quando um componente é adicionado.</span><span class="sxs-lookup"><span data-stu-id="48058-103"><xref:System.ComponentModel.Design.IComponentChangeService.ComponentAdded>, raised when a component is added.</span></span>  
  
-   <span data-ttu-id="48058-104"><xref:System.ComponentModel.Design.IComponentChangeService.ComponentAdding>, gerado quando um componente está prestes a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="48058-104"><xref:System.ComponentModel.Design.IComponentChangeService.ComponentAdding>, raised when a component is about to be added.</span></span>  
  
-   <span data-ttu-id="48058-105"><xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged>, gerado quando um componente é alterado.</span><span class="sxs-lookup"><span data-stu-id="48058-105"><xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged>, raised when a component is changed.</span></span>  
  
-   <span data-ttu-id="48058-106"><xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanging>, gerado quando um componente está prestes a ser alterado.</span><span class="sxs-lookup"><span data-stu-id="48058-106"><xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanging>, raised when a component is about to be changed.</span></span>  
  
-   <span data-ttu-id="48058-107"><xref:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved>, gerado quando um componente é removido.</span><span class="sxs-lookup"><span data-stu-id="48058-107"><xref:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved>, raised when a component is removed.</span></span>  
  
-   <span data-ttu-id="48058-108"><xref:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving>, gerado quando um componente está prestes a ser removido.</span><span class="sxs-lookup"><span data-stu-id="48058-108"><xref:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving>, raised when a component is about to be removed.</span></span>  
  
-   <span data-ttu-id="48058-109"><xref:System.ComponentModel.Design.IComponentChangeService.ComponentRename>, gerado quando um componente é renomeado.</span><span class="sxs-lookup"><span data-stu-id="48058-109"><xref:System.ComponentModel.Design.IComponentChangeService.ComponentRename>, raised when a component is renamed.</span></span>  
  
 <span data-ttu-id="48058-110">Normalmente, o ambiente de design gera adicionar esses componentes, alterar, remover ou renomear os eventos.</span><span class="sxs-lookup"><span data-stu-id="48058-110">Typically, the design environment raises these component add, change, remove, or rename events.</span></span> <span data-ttu-id="48058-111">Designers devem chamar os métodos dessa interface ao usar <xref:System.ComponentModel.Design.DesignerTransaction> objetos para fornecer desfazer e refazer a funcionalidade para ações de tempo de design que afetam os componentes.</span><span class="sxs-lookup"><span data-stu-id="48058-111">Designers should call the methods of this interface when using <xref:System.ComponentModel.Design.DesignerTransaction> objects to provide undo and redo functionality for design-time actions that affect components.</span></span> <span data-ttu-id="48058-112">Mais informações estão disponíveis na documentação do <xref:System.ComponentModel.Design.DesignerTransaction>.</span><span class="sxs-lookup"><span data-stu-id="48058-112">More information is available in the documentation for <xref:System.ComponentModel.Design.DesignerTransaction>.</span></span> <span data-ttu-id="48058-113">Em geral, somente o designer raiz trata dessas notificações de alteração.</span><span class="sxs-lookup"><span data-stu-id="48058-113">Generally, only the root designer handles these change notifications.</span></span>  
  
 <span data-ttu-id="48058-114">Esse serviço também fornece métodos que geram um evento de componente alterado ou o evento de alteração de componente.</span><span class="sxs-lookup"><span data-stu-id="48058-114">This service also provides methods that raise a component changed event or component changing event.</span></span> <span data-ttu-id="48058-115">Um <xref:System.ComponentModel.PropertyDescriptor> ou um componente pode indicar que um componente foi alterado ou está sendo alterado com o <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A> e <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A> métodos, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="48058-115">A <xref:System.ComponentModel.PropertyDescriptor> or a component can indicate that a component has changed or is changing with the <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A> and <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A> methods, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="48058-116">O exemplo a seguir demonstra como usar o <xref:System.ComponentModel.Design.IComponentChangeService> interface para receber notificações sobre a adição de, remoção de e alterações em componentes no modo de design.</span><span class="sxs-lookup"><span data-stu-id="48058-116">This following example demonstrates how to use the <xref:System.ComponentModel.Design.IComponentChangeService> interface to receive notifications about the addition of, removal of, and changes to components in design mode.</span></span>  
  
 [!code-cpp[IComponentChangeServiceSample2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IComponentChangeServiceSample2/CPP/icomponentchangeserviceexample.cpp#1)]
 [!code-csharp[IComponentChangeServiceSample2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IComponentChangeServiceSample2/CS/icomponentchangeserviceexample.cs#1)]
 [!code-vb[IComponentChangeServiceSample2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IComponentChangeServiceSample2/VB/icomponentchangeserviceexample.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.ComponentEventHandler" />
    <altmember cref="T:System.ComponentModel.Design.ComponentChangedEventHandler" />
    <altmember cref="T:System.ComponentModel.Design.ComponentChangingEventHandler" />
    <altmember cref="T:System.ComponentModel.Design.ComponentRenameEventHandler" />
    <altmember cref="T:System.ComponentModel.MemberDescriptor" />
    <altmember cref="T:System.ComponentModel.Design.DesignerTransaction" />
  </Docs>
  <Members>
    <Member MemberName="ComponentAdded">
      <MemberSignature Language="C#" Value="event System.ComponentModel.Design.ComponentEventHandler ComponentAdded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.ComponentEventHandler ComponentAdded" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdded" />
      <MemberSignature Language="VB.NET" Value="Event ComponentAdded As ComponentEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::ComponentEventHandler ^ ComponentAdded;" />
      <MemberSignature Language="F#" Value="member this.ComponentAdded : System.ComponentModel.Design.ComponentEventHandler " Usage="member this.ComponentAdded : System.ComponentModel.Design.ComponentEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ComponentEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="48058-117">Ocorre quando um componente foi adicionado.</span><span class="sxs-lookup"><span data-stu-id="48058-117">Occurs when a component has been added.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48058-118">Esse evento ocorre durante o carregamento e quando novos componentes são criados pelo usuário, depois que o componente foi colocado no local.</span><span class="sxs-lookup"><span data-stu-id="48058-118">This event occurs during load and when new components are created by the user, after the component has been sited.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdding" />
        <altmember cref="T:System.ComponentModel.Design.ComponentEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ComponentAdding">
      <MemberSignature Language="C#" Value="event System.ComponentModel.Design.ComponentEventHandler ComponentAdding;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.ComponentEventHandler ComponentAdding" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdding" />
      <MemberSignature Language="VB.NET" Value="Event ComponentAdding As ComponentEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::ComponentEventHandler ^ ComponentAdding;" />
      <MemberSignature Language="F#" Value="member this.ComponentAdding : System.ComponentModel.Design.ComponentEventHandler " Usage="member this.ComponentAdding : System.ComponentModel.Design.ComponentEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ComponentEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="48058-119">Ocorre quando um componente está no processo de ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="48058-119">Occurs when a component is in the process of being added.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48058-120">Esse evento ocorre durante o carregamento e quando o usuário cria um novo componente.</span><span class="sxs-lookup"><span data-stu-id="48058-120">This event occurs during load and when the user creates a new component.</span></span> <span data-ttu-id="48058-121">Você pode cancelar o processo de adicionar um componente lançando uma exceção aqui.</span><span class="sxs-lookup"><span data-stu-id="48058-121">You can cancel the process of adding a component by throwing an exception here.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdded" />
        <altmember cref="T:System.ComponentModel.Design.ComponentEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ComponentChanged">
      <MemberSignature Language="C#" Value="event System.ComponentModel.Design.ComponentChangedEventHandler ComponentChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.ComponentChangedEventHandler ComponentChanged" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" />
      <MemberSignature Language="VB.NET" Value="Event ComponentChanged As ComponentChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::ComponentChangedEventHandler ^ ComponentChanged;" />
      <MemberSignature Language="F#" Value="member this.ComponentChanged : System.ComponentModel.Design.ComponentChangedEventHandler " Usage="member this.ComponentChanged : System.ComponentModel.Design.ComponentChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ComponentChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="48058-122">Ocorre quando um componente foi alterado.</span><span class="sxs-lookup"><span data-stu-id="48058-122">Occurs when a component has been changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48058-123">Esse evento ocorre quando qualquer componente do formulário é alterado.</span><span class="sxs-lookup"><span data-stu-id="48058-123">This event occurs when any component on the form changes.</span></span> <span data-ttu-id="48058-124">Esse evento não irá ocorrer durante o carregamento de formulário e unload, porque as alterações são esperadas neste momento.</span><span class="sxs-lookup"><span data-stu-id="48058-124">This event will not occur during form load and unload, because changes are expected at this time.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="48058-125">Um <xref:System.ComponentModel.Design.DesignerTransaction> pode gerar vários <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged> eventos.</span><span class="sxs-lookup"><span data-stu-id="48058-125">A <xref:System.ComponentModel.Design.DesignerTransaction> can raise multiple <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged> events.</span></span> <span data-ttu-id="48058-126">Alguns <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged> manipuladores de eventos podem interferir com sequências esperadas de eventos, por exemplo, se seu código altera os valores das propriedades enquanto uma transação está em execução.</span><span class="sxs-lookup"><span data-stu-id="48058-126">Some <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged> event handlers can interfere with expected sequences of events, such as if your code alters the values of properties while a transaction is occurring.</span></span> <span data-ttu-id="48058-127">Um <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged> manipulador de eventos também pode prejudicar o desempenho se baseia-se após cada alteração enquanto um <xref:System.ComponentModel.Design.DesignerTransaction> está em andamento.</span><span class="sxs-lookup"><span data-stu-id="48058-127">A <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged> event handler can also impair performance if it draws after each change while a <xref:System.ComponentModel.Design.DesignerTransaction> is in progress.</span></span> <span data-ttu-id="48058-128">Para permitir que um <xref:System.ComponentModel.Design.DesignerTransaction> no processo ser concluído sem interrupção ou interferência pelo seu <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged> manipulador de eventos, você pode testar o estado do <xref:System.ComponentModel.Design.IDesignerHost.InTransaction%2A> propriedade, adie manipulando os eventos de alteração até a conclusão da transação adicionando um <xref:System.ComponentModel.Design.DesignerTransactionCloseEventHandler> que irá gerar seu <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged> manipulador de eventos e removido após a conclusão da transação.</span><span class="sxs-lookup"><span data-stu-id="48058-128">In order to allow a <xref:System.ComponentModel.Design.DesignerTransaction> in process to complete without interruption or interference by your <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged> event handler, you can test the state of the <xref:System.ComponentModel.Design.IDesignerHost.InTransaction%2A> property, and defer handling the change events until the completion of the transaction by adding a <xref:System.ComponentModel.Design.DesignerTransactionCloseEventHandler> which will raise your <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged> event handler and remove itself upon completion of the transaction.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" />
        <altmember cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename" />
        <altmember cref="T:System.ComponentModel.Design.ComponentChangedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ComponentChanging">
      <MemberSignature Language="C#" Value="event System.ComponentModel.Design.ComponentChangingEventHandler ComponentChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.ComponentChangingEventHandler ComponentChanging" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" />
      <MemberSignature Language="VB.NET" Value="Event ComponentChanging As ComponentChangingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::ComponentChangingEventHandler ^ ComponentChanging;" />
      <MemberSignature Language="F#" Value="member this.ComponentChanging : System.ComponentModel.Design.ComponentChangingEventHandler " Usage="member this.ComponentChanging : System.ComponentModel.Design.ComponentChangingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ComponentChangingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="48058-129">Ocorre quando um componente está no processo de ser alterado.</span><span class="sxs-lookup"><span data-stu-id="48058-129">Occurs when a component is in the process of being changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48058-130">Esse evento ocorrerá antes que o componente realmente foram alterado e dá uma chance de anular a alteração ou executar qualquer pré-alteração de processamento de designer.</span><span class="sxs-lookup"><span data-stu-id="48058-130">This event occurs before the component is actually changed, and gives the designer a chance to abort the change or perform any pre-change processing.</span></span> <span data-ttu-id="48058-131">Esse evento não ocorrer durante o carregamento de formulário e unload, porque as alterações são esperadas neste momento.</span><span class="sxs-lookup"><span data-stu-id="48058-131">This event does not occur during form load and unload, because changes are expected at this time.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" />
        <altmember cref="T:System.ComponentModel.Design.ComponentChangingEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ComponentRemoved">
      <MemberSignature Language="C#" Value="event System.ComponentModel.Design.ComponentEventHandler ComponentRemoved;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.ComponentEventHandler ComponentRemoved" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved" />
      <MemberSignature Language="VB.NET" Value="Event ComponentRemoved As ComponentEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::ComponentEventHandler ^ ComponentRemoved;" />
      <MemberSignature Language="F#" Value="member this.ComponentRemoved : System.ComponentModel.Design.ComponentEventHandler " Usage="member this.ComponentRemoved : System.ComponentModel.Design.ComponentEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ComponentEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="48058-132">Ocorre quando um componente foi removido.</span><span class="sxs-lookup"><span data-stu-id="48058-132">Occurs when a component has been removed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48058-133">Esse evento ocorre durante o descarregamento e quando um componente é excluído pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="48058-133">This event occurs during unload and when a component is deleted by the user.</span></span> <span data-ttu-id="48058-134">O evento ocorre antes que o site foi removido do componente.</span><span class="sxs-lookup"><span data-stu-id="48058-134">The event occurs before the site has been removed from the component.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving" />
        <altmember cref="T:System.ComponentModel.Design.ComponentEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ComponentRemoving">
      <MemberSignature Language="C#" Value="event System.ComponentModel.Design.ComponentEventHandler ComponentRemoving;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.ComponentEventHandler ComponentRemoving" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving" />
      <MemberSignature Language="VB.NET" Value="Event ComponentRemoving As ComponentEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::ComponentEventHandler ^ ComponentRemoving;" />
      <MemberSignature Language="F#" Value="member this.ComponentRemoving : System.ComponentModel.Design.ComponentEventHandler " Usage="member this.ComponentRemoving : System.ComponentModel.Design.ComponentEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ComponentEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="48058-135">Ocorre quando um componente está no processo de ser removido.</span><span class="sxs-lookup"><span data-stu-id="48058-135">Occurs when a component is in the process of being removed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48058-136">Esse evento ocorre durante o descarregamento e quando o usuário exclui um componente.</span><span class="sxs-lookup"><span data-stu-id="48058-136">This event occurs during unload and when the user deletes a component.</span></span> <span data-ttu-id="48058-137">Você pode cancelar o processo de remoção de um componente lançando uma exceção aqui.</span><span class="sxs-lookup"><span data-stu-id="48058-137">You can cancel the process of removing a component by throwing an exception here.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved" />
        <altmember cref="T:System.ComponentModel.Design.ComponentEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ComponentRename">
      <MemberSignature Language="C#" Value="event System.ComponentModel.Design.ComponentRenameEventHandler ComponentRename;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.ComponentRenameEventHandler ComponentRename" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename" />
      <MemberSignature Language="VB.NET" Value="Event ComponentRename As ComponentRenameEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::ComponentRenameEventHandler ^ ComponentRename;" />
      <MemberSignature Language="F#" Value="member this.ComponentRename : System.ComponentModel.Design.ComponentRenameEventHandler " Usage="member this.ComponentRename : System.ComponentModel.Design.ComponentRenameEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ComponentRenameEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="48058-138">Ocorre quando um componente é renomeado.</span><span class="sxs-lookup"><span data-stu-id="48058-138">Occurs when a component is renamed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48058-139">Esse evento ocorre após o <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged> evento quando um componente foi renomeado.</span><span class="sxs-lookup"><span data-stu-id="48058-139">This event occurs after the <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged> event when a component has been renamed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.ComponentRenameEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="OnComponentChanged">
      <MemberSignature Language="C#" Value="public void OnComponentChanged (object component, System.ComponentModel.MemberDescriptor member, object oldValue, object newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnComponentChanged(object component, class System.ComponentModel.MemberDescriptor member, object oldValue, object newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged(System.Object,System.ComponentModel.MemberDescriptor,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnComponentChanged (component As Object, member As MemberDescriptor, oldValue As Object, newValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnComponentChanged(System::Object ^ component, System::ComponentModel::MemberDescriptor ^ member, System::Object ^ oldValue, System::Object ^ newValue);" />
      <MemberSignature Language="F#" Value="abstract member OnComponentChanged : obj * System.ComponentModel.MemberDescriptor * obj * obj -&gt; unit" Usage="iComponentChangeService.OnComponentChanged (component, member, oldValue, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="member" Type="System.ComponentModel.MemberDescriptor" />
        <Parameter Name="oldValue" Type="System.Object" />
        <Parameter Name="newValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="48058-140">O componente que mudou.</span><span class="sxs-lookup"><span data-stu-id="48058-140">The component that has changed.</span></span></param>
        <param name="member"><span data-ttu-id="48058-141">O membro que foi alterado.</span><span class="sxs-lookup"><span data-stu-id="48058-141">The member that has changed.</span></span> <span data-ttu-id="48058-142">Isso será <see langword="null" /> se essa alteração não estiver relacionada a um membro único.</span><span class="sxs-lookup"><span data-stu-id="48058-142">This is <see langword="null" /> if this change is not related to a single member.</span></span></param>
        <param name="oldValue"><span data-ttu-id="48058-143">O valor antigo do membro.</span><span class="sxs-lookup"><span data-stu-id="48058-143">The old value of the member.</span></span> <span data-ttu-id="48058-144">Isso será válido somente se o membro não for <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="48058-144">This is valid only if the member is not <see langword="null" />.</span></span></param>
        <param name="newValue"><span data-ttu-id="48058-145">O novo valor do membro.</span><span class="sxs-lookup"><span data-stu-id="48058-145">The new value of the member.</span></span> <span data-ttu-id="48058-146">Isso será válido somente se o membro não for <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="48058-146">This is valid only if the member is not <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="48058-147">Anuncia ao serviço de alteração de componente que um componente específico foi alterado.</span><span class="sxs-lookup"><span data-stu-id="48058-147">Announces to the component change service that a particular component has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48058-148">Esse método dispara o <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged> eventos.</span><span class="sxs-lookup"><span data-stu-id="48058-148">This method raises the <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged> event.</span></span>  
  
 <span data-ttu-id="48058-149">A maioria dos designers que acompanham o [!INCLUDE[winsdklong](~/includes/winsdklong-md.md)], bem como o ambiente de tempo de design do Visual Studio, normalmente gere este evento para você quando um componente em um projeto é alterado, portanto, a maioria das vezes, você não precisa explicitamente ao chama esse método.</span><span class="sxs-lookup"><span data-stu-id="48058-149">Most designers that ship with the [!INCLUDE[winsdklong](~/includes/winsdklong-md.md)], as well as the Visual Studio design-time environment, typically raise this event for you when a component in a project is changed, so most of the time you do not need to explicitly call this method.</span></span> <span data-ttu-id="48058-150">Apropriado <xref:System.ComponentModel.Design.IComponentChangeService> os eventos são automaticamente gerado quando um <xref:System.ComponentModel.PropertyDescriptor> é usado para alterar uma propriedade de valor ou componentes são adicionados ou removidos do <xref:System.ComponentModel.Design.IDesignerHost> contêiner.</span><span class="sxs-lookup"><span data-stu-id="48058-150">The appropriate <xref:System.ComponentModel.Design.IComponentChangeService> events are automatically raised when a <xref:System.ComponentModel.PropertyDescriptor> is used to change a property value or components are added or removed from the <xref:System.ComponentModel.Design.IDesignerHost> container.</span></span>  
  
 <span data-ttu-id="48058-151">Antes de chamar <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A>, primeiro chame <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A> para indicar que um componente está prestes a alterar e fazer a alteração.</span><span class="sxs-lookup"><span data-stu-id="48058-151">Before calling <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A>, first call <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A> to indicate that a component is about to change, and make the change.</span></span> <span data-ttu-id="48058-152">Em seguida, chame <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A> para gerar o <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged> eventos.</span><span class="sxs-lookup"><span data-stu-id="48058-152">Then call <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A> to raise the <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged> event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="48058-153">Este evento permite que o implementador de fazer qualquer pós-processamento que é necessária após uma alteração de propriedade.</span><span class="sxs-lookup"><span data-stu-id="48058-153">This event allows the implementer to do any post-processing that is needed after a property change.</span></span> <span data-ttu-id="48058-154">Por exemplo, um designer normalmente atualiza o código-fonte que define a propriedade com o novo valor.</span><span class="sxs-lookup"><span data-stu-id="48058-154">For example, a designer typically updates the source code that sets the property with the new value.</span></span></para></block>
        <altmember cref="T:System.ComponentModel.MemberDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="OnComponentChanging">
      <MemberSignature Language="C#" Value="public void OnComponentChanging (object component, System.ComponentModel.MemberDescriptor member);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnComponentChanging(object component, class System.ComponentModel.MemberDescriptor member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging(System.Object,System.ComponentModel.MemberDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnComponentChanging (component As Object, member As MemberDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnComponentChanging(System::Object ^ component, System::ComponentModel::MemberDescriptor ^ member);" />
      <MemberSignature Language="F#" Value="abstract member OnComponentChanging : obj * System.ComponentModel.MemberDescriptor -&gt; unit" Usage="iComponentChangeService.OnComponentChanging (component, member)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="member" Type="System.ComponentModel.MemberDescriptor" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="48058-155">O componente que está prestes a mudar.</span><span class="sxs-lookup"><span data-stu-id="48058-155">The component that is about to change.</span></span></param>
        <param name="member"><span data-ttu-id="48058-156">O membro que está sendo alterado.</span><span class="sxs-lookup"><span data-stu-id="48058-156">The member that is changing.</span></span> <span data-ttu-id="48058-157">Isso será <see langword="null" /> se essa alteração não estiver relacionada a um membro único.</span><span class="sxs-lookup"><span data-stu-id="48058-157">This is <see langword="null" /> if this change is not related to a single member.</span></span></param>
        <summary><span data-ttu-id="48058-158">Anuncia ao serviço de alteração de componente que um componente específico está sendo alterado.</span><span class="sxs-lookup"><span data-stu-id="48058-158">Announces to the component change service that a particular component is changing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48058-159">Esse método dispara o <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanging> eventos.</span><span class="sxs-lookup"><span data-stu-id="48058-159">This method raises the <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanging> event.</span></span>  
  
 <span data-ttu-id="48058-160">A maioria dos designers incluídos com o [!INCLUDE[winsdklong](~/includes/winsdklong-md.md)], bem como o ambiente de tempo de design do Visual Studio, normalmente gere este evento automaticamente; portanto, a maioria das vezes, não é necessário chamar explicitamente esse método.</span><span class="sxs-lookup"><span data-stu-id="48058-160">Most designers included with the [!INCLUDE[winsdklong](~/includes/winsdklong-md.md)], as well as the Visual Studio design-time environment, typically raise this event automatically; so most of the time, you do not need to explicitly call this method.</span></span> <span data-ttu-id="48058-161">Apropriado <xref:System.ComponentModel.Design.IComponentChangeService> os eventos são automaticamente gerado quando um <xref:System.ComponentModel.PropertyDescriptor> é usado para alterar uma propriedade de valor ou componentes são adicionados ou removidos do <xref:System.ComponentModel.Design.IDesignerHost> contêiner.</span><span class="sxs-lookup"><span data-stu-id="48058-161">The appropriate <xref:System.ComponentModel.Design.IComponentChangeService> events are automatically raised when a <xref:System.ComponentModel.PropertyDescriptor> is used to change a property value or components are added or removed from the <xref:System.ComponentModel.Design.IDesignerHost> container.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="48058-162">Esse método gera uma exceção se a propriedade não pode ser alterada.</span><span class="sxs-lookup"><span data-stu-id="48058-162">This method throws an exception if the property cannot be changed.</span></span> <span data-ttu-id="48058-163">Isso não se destina para validar os valores de uma propriedade específica.</span><span class="sxs-lookup"><span data-stu-id="48058-163">This is not intended to validate the values of a particular property.</span></span> <span data-ttu-id="48058-164">Em vez disso, destina-se para fornecer um método global de impedir a alteração de um componente.</span><span class="sxs-lookup"><span data-stu-id="48058-164">Instead, it is intended to provide a global method of preventing a component from changing.</span></span> <span data-ttu-id="48058-165">Por exemplo, se um arquivo de designer é verificado no controle do código-fonte, manipulador deste evento geralmente emitirá uma exceção se o usuário se recusou a check-out do arquivo.</span><span class="sxs-lookup"><span data-stu-id="48058-165">For example, if a designer file is checked into source code control, this event's handler would typically throw an exception if the user refused to check out the file.</span></span></para></block>
        <altmember cref="T:System.ComponentModel.MemberDescriptor" />
      </Docs>
    </Member>
  </Members>
</Type>