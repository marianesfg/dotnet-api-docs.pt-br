<Type Name="IDesignerFilter" FullName="System.ComponentModel.Design.IDesignerFilter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2dbad6fdfb09f4fc16d8d85beafb69dfaa4f5eea" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37696274" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDesignerFilter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDesignerFilter" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.IDesignerFilter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDesignerFilter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDesignerFilter" />
  <TypeSignature Language="F#" Value="type IDesignerFilter = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="fe493-101">Fornece uma interface que permite que um designer acesse e filtre os dicionários de um <see cref="T:System.ComponentModel.TypeDescriptor" /> que armazena os descritores de evento, atributo e propriedade que um componente de designer pode expor para o ambiente em tempo de design.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fe493-101">Provides an interface that enables a designer to access and filter the dictionaries of a <see cref="T:System.ComponentModel.TypeDescriptor" /> that stores the property, attribute, and event descriptors that a component designer can expose to the design-time environment.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe493-102"><xref:System.ComponentModel.Design.IDesignerFilter> permite que um designer filtrar o conjunto de descritores de propriedade, atributo e eventos que seu componente associado expõe por meio de um <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="fe493-102"><xref:System.ComponentModel.Design.IDesignerFilter> enables a designer to filter the set of property, attribute, and event descriptors that its associated component exposes through a <xref:System.ComponentModel.TypeDescriptor>.</span></span> <span data-ttu-id="fe493-103">Os métodos dessa interface cujos nomes começam com `Pre` são chamados imediatamente antes dos métodos cujos nomes começam com `Post`.</span><span class="sxs-lookup"><span data-stu-id="fe493-103">The methods of this interface whose names begin with `Pre` are called immediately before the methods whose names begin with `Post`.</span></span>  
  
 <span data-ttu-id="fe493-104">Se você quiser adicionar descritores de propriedade, evento ou atributo, use uma <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>, <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>, ou <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A> método.</span><span class="sxs-lookup"><span data-stu-id="fe493-104">If you want to add attribute, event, or property descriptors, use a <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>, <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>, or <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A> method.</span></span>  
  
 <span data-ttu-id="fe493-105">Se você quiser alterar ou remover o atributo, evento ou descritores de propriedade, use uma <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>, <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>, ou <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A> método.</span><span class="sxs-lookup"><span data-stu-id="fe493-105">If you want to change or remove attribute, event, or property descriptors, use a <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>, <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>, or <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe493-106">O exemplo a seguir demonstra uma substituição do <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A> que adiciona uma propriedade do designer para a janela Propriedades quando o controle do designer é selecionado em tempo de design.</span><span class="sxs-lookup"><span data-stu-id="fe493-106">The following example demonstrates an override of <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A> that adds a property of the designer to the Properties window when the designer's control is selected at design time.</span></span> <span data-ttu-id="fe493-107">Consulte o exemplo para o <xref:System.Windows.Forms.Design.ControlDesigner> classe para um exemplo completo de designer que usa o <xref:System.ComponentModel.Design.IDesignerFilter> interface.</span><span class="sxs-lookup"><span data-stu-id="fe493-107">See the example for the <xref:System.Windows.Forms.Design.ControlDesigner> class for a complete designer example that uses the <xref:System.ComponentModel.Design.IDesignerFilter> interface.</span></span>  
  
 [!code-cpp[ControlDesignerExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlDesignerExample/CPP/controldesignerexample.cpp#2)]
 [!code-csharp[ControlDesignerExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlDesignerExample/CS/controldesignerexample.cs#2)]
 [!code-vb[ControlDesignerExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlDesignerExample/VB/controldesignerexample.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.ITypeDescriptorFilterService" />
    <altmember cref="T:System.ComponentModel.TypeDescriptor" />
  </Docs>
  <Members>
    <Member MemberName="PostFilterAttributes">
      <MemberSignature Language="C#" Value="public void PostFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostFilterAttributes (attributes As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostFilterAttributes(System::Collections::IDictionary ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member PostFilterAttributes : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PostFilterAttributes attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes">
          <span data-ttu-id="fe493-108">Os objetos <see cref="T:System.Attribute" /> para a classe do componente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe493-108">The <see cref="T:System.Attribute" /> objects for the class of the component.</span>
          </span>
          <span data-ttu-id="fe493-109">As chaves no dicionário de atributos são os valores <see cref="P:System.Attribute.TypeId" /> dos atributos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe493-109">The keys in the dictionary of attributes are the <see cref="P:System.Attribute.TypeId" /> values of the attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe493-110">Quando substituído em uma classe derivada, permite que um designer altere ou remova itens do conjunto de atributos que ele expõe por meio de um <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe493-110">When overridden in a derived class, allows a designer to change or remove items from the set of attributes that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe493-111">Esse método fornece uma maneira de alterar ou remover itens no dicionário de atributos que o componente associado do designer que implementa essa interface expõe por meio de um <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="fe493-111">This method provides a way to change or remove items within the dictionary of attributes that the associated component of the designer implementing this interface exposes through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="fe493-112">As chaves no dicionário de atributos são as IDs de tipo dos atributos.</span><span class="sxs-lookup"><span data-stu-id="fe493-112">The keys in the dictionary of attributes are the type IDs of the attributes.</span></span> <span data-ttu-id="fe493-113">Os objetos são do tipo <xref:System.Attribute>.</span><span class="sxs-lookup"><span data-stu-id="fe493-113">The objects are of type <xref:System.Attribute>.</span></span> <span data-ttu-id="fe493-114">Esse método é chamado imediatamente após <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>.</span><span class="sxs-lookup"><span data-stu-id="fe493-114">This method is called immediately after <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>.</span></span>  
  
 <span data-ttu-id="fe493-115">A ID de tipo de um atributo pode ser qualquer objeto.</span><span class="sxs-lookup"><span data-stu-id="fe493-115">The type ID of an attribute can be any object.</span></span> <span data-ttu-id="fe493-116">Por padrão, <xref:System.Attribute> retorna seu <xref:System.Type> como o valor do seu <xref:System.Attribute.TypeId%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="fe493-116">By default, <xref:System.Attribute> returns its <xref:System.Type> as the value of its <xref:System.Attribute.TypeId%2A> property.</span></span> <span data-ttu-id="fe493-117">Você pode verificar a <xref:System.Attribute.TypeId%2A> de um atributo no dicionário quanto à equivalência com um conhecido <xref:System.Attribute.TypeId%2A> para um atributo para identificá-lo ou usar <xref:System.Reflection> para identificar o objeto de atributo.</span><span class="sxs-lookup"><span data-stu-id="fe493-117">You can check the <xref:System.Attribute.TypeId%2A> of an attribute in the dictionary for equivalence with a known <xref:System.Attribute.TypeId%2A> for an attribute to identify it, or use <xref:System.Reflection> to identify the attribute object itself.</span></span>  
  
 <span data-ttu-id="fe493-118">Quando um atributo que tem o mesmo <xref:System.Attribute.TypeId%2A> como um atributo existente ou herdado é adicionado a um componente, o novo atributo substitui o atributo antigo.</span><span class="sxs-lookup"><span data-stu-id="fe493-118">When an attribute that has the same <xref:System.Attribute.TypeId%2A> as an existing or inherited attribute is added to a component, the new attribute replaces the old attribute.</span></span> <span data-ttu-id="fe493-119">Para muitos atributos, um novo atributo do mesmo tipo substituirá qualquer atributo anterior do tipo.</span><span class="sxs-lookup"><span data-stu-id="fe493-119">For many attributes, a new attribute of the same type will replace any previous attribute of the type.</span></span> <span data-ttu-id="fe493-120">No entanto, alguns tipos de atributos retornam um <xref:System.Attribute.TypeId%2A> que distingue o atributo de forma seletiva.</span><span class="sxs-lookup"><span data-stu-id="fe493-120">However, some types of attributes return a <xref:System.Attribute.TypeId%2A> that distinguishes the attribute selectively.</span></span> <span data-ttu-id="fe493-121">Por exemplo, para fornecer diferentes tipos de designers ativos simultâneos para um tipo, como um <xref:System.ComponentModel.Design.IRootDesigner> e uma <xref:System.ComponentModel.Design.IDesigner>, o <xref:System.ComponentModel.DesignerAttribute> classe retorna uma <xref:System.Attribute.TypeId%2A> que identifica exclusivamente o atributo e o designer base tipo.</span><span class="sxs-lookup"><span data-stu-id="fe493-121">For example, in order to provide different types of simultaneously active designers for a type, such as an <xref:System.ComponentModel.Design.IRootDesigner> and an <xref:System.ComponentModel.Design.IDesigner>, the <xref:System.ComponentModel.DesignerAttribute> class returns a <xref:System.Attribute.TypeId%2A> that uniquely identifies both the attribute and the base designer type.</span></span> <span data-ttu-id="fe493-122">O <xref:System.ComponentModel.DesignerAttribute> construtor permite que você especifique o tipo de designer base do designer, além de seu tipo específico, e <xref:System.ComponentModel.DesignerAttribute> retorna um <xref:System.Attribute.TypeId%2A> que reflete isso.</span><span class="sxs-lookup"><span data-stu-id="fe493-122">The <xref:System.ComponentModel.DesignerAttribute> constructor allows you to specify the base designer type of the designer in addition to its specific type, and <xref:System.ComponentModel.DesignerAttribute> returns a <xref:System.Attribute.TypeId%2A> that reflects this.</span></span> <span data-ttu-id="fe493-123">Portanto, quando você adiciona um novo <xref:System.ComponentModel.DesignerAttribute> com um tipo de designer base do mesmo tipo como o tipo de designer base de existente <xref:System.ComponentModel.DesignerAttribute>, o atributo antigo é substituído pelo novo atributo.</span><span class="sxs-lookup"><span data-stu-id="fe493-123">Therefore when you add a new <xref:System.ComponentModel.DesignerAttribute> with a base designer type of the same type as the base designer type of an existing <xref:System.ComponentModel.DesignerAttribute>, the old attribute is replaced with the new attribute.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="fe493-124">
            <para>Você pode filtrar diretamente o dicionário que é acessível por meio de <paramref name="attributes" /> parâmetro, ou você pode deixá-lo inalterado. Se você está substituindo esse método, chame a implementação base depois de realizar sua própria filtragem.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fe493-124">
              <para>You can directly filter the dictionary that is accessible through the <paramref name="attributes" /> parameter, or you can leave it unchanged. If you are overriding this method, call the base implementation after you perform your own filtering.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PostFilterEvents">
      <MemberSignature Language="C#" Value="public void PostFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostFilterEvents (events As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostFilterEvents(System::Collections::IDictionary ^ events);" />
      <MemberSignature Language="F#" Value="abstract member PostFilterEvents : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PostFilterEvents events" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events">
          <span data-ttu-id="fe493-125">Os objetos <see cref="T:System.ComponentModel.EventDescriptor" /> que representam os eventos da classe do componente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe493-125">The <see cref="T:System.ComponentModel.EventDescriptor" /> objects that represent the events of the class of the component.</span>
          </span>
          <span data-ttu-id="fe493-126">As chaves no dicionário de eventos são nomes de evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe493-126">The keys in the dictionary of events are event names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe493-127">Quando substituído em uma classe derivada, permite que um designer altere ou remova itens do conjunto de eventos que ele expõe por meio de um <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe493-127">When overridden in a derived class, allows a designer to change or remove items from the set of events that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe493-128">Esse método fornece uma maneira de alterar ou remover itens no dicionário de eventos que são expostos por meio de um <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="fe493-128">This method provides a way to change or remove items within the dictionary of events that are exposed through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="fe493-129">As chaves no dicionário de eventos são os nomes dos eventos.</span><span class="sxs-lookup"><span data-stu-id="fe493-129">The keys in the dictionary of events are the names of the events.</span></span> <span data-ttu-id="fe493-130">Os objetos são do tipo <xref:System.ComponentModel.EventDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="fe493-130">The objects are of type <xref:System.ComponentModel.EventDescriptor>.</span></span> <span data-ttu-id="fe493-131">Esse método é chamado imediatamente após <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>.</span><span class="sxs-lookup"><span data-stu-id="fe493-131">This method is called immediately after <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="fe493-132">
            <para>Você pode filtrar diretamente o dicionário que é acessível por meio de <paramref name="events" /> parâmetro, ou você pode deixá-lo inalterado. Se você está substituindo esse método, chame a implementação base depois de realizar sua própria filtragem.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fe493-132">
              <para>You can directly filter the dictionary that is accessible through the <paramref name="events" /> parameter, or you can leave it unchanged. If you are overriding this method, call the base implementation after you perform your own filtering.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PostFilterProperties">
      <MemberSignature Language="C#" Value="public void PostFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member PostFilterProperties : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PostFilterProperties properties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">
          <span data-ttu-id="fe493-133">Os objetos <see cref="T:System.ComponentModel.PropertyDescriptor" /> que representam as propriedades da classe do componente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe493-133">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that represent the properties of the class of the component.</span>
          </span>
          <span data-ttu-id="fe493-134">As chaves no dicionário de propriedades são nomes de propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe493-134">The keys in the dictionary of properties are property names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe493-135">Quando substituído em uma classe derivada, permite que um designer altere ou remova itens do conjunto de propriedades que ele expõe por meio de um <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe493-135">When overridden in a derived class, allows a designer to change or remove items from the set of properties that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe493-136">Esse método fornece uma maneira de alterar ou remover itens no dicionário de propriedades que são expostas por meio de um <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="fe493-136">This method provides a way to change or remove items within the dictionary of properties that are exposed through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="fe493-137">As chaves no dicionário de propriedades são os nomes das propriedades.</span><span class="sxs-lookup"><span data-stu-id="fe493-137">The keys in the dictionary of properties are the names of the properties.</span></span> <span data-ttu-id="fe493-138">Os objetos são do tipo <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="fe493-138">The objects are of type <xref:System.ComponentModel.PropertyDescriptor>.</span></span> <span data-ttu-id="fe493-139">Esse método é chamado imediatamente após <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A>.</span><span class="sxs-lookup"><span data-stu-id="fe493-139">This method is called immediately after <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="fe493-140">
            <para>Você pode filtrar diretamente o dicionário que é acessível por meio de <paramref name="properties" /> parâmetro, ou você pode deixá-lo inalterado. Se você está substituindo esse método, chame a implementação base depois de realizar sua própria filtragem.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fe493-140">
              <para>You can directly filter the dictionary that is accessible through the <paramref name="properties" /> parameter, or you can leave it unchanged. If you are overriding this method, call the base implementation after you perform your own filtering.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterAttributes">
      <MemberSignature Language="C#" Value="public void PreFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PreFilterAttributes (attributes As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PreFilterAttributes(System::Collections::IDictionary ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterAttributes : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PreFilterAttributes attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes">
          <span data-ttu-id="fe493-141">Os objetos <see cref="T:System.Attribute" /> para a classe do componente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe493-141">The <see cref="T:System.Attribute" /> objects for the class of the component.</span>
          </span>
          <span data-ttu-id="fe493-142">As chaves no dicionário de atributos são os valores <see cref="P:System.Attribute.TypeId" /> dos atributos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe493-142">The keys in the dictionary of attributes are the <see cref="P:System.Attribute.TypeId" /> values of the attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe493-143">Quando substituído em uma classe derivada, permite que um designer adicione itens ao conjunto de atributos que ele expõe por meio de um <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe493-143">When overridden in a derived class, allows a designer to add items to the set of attributes that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe493-144">Esse método fornece uma maneira de adicionar itens ao dicionário de atributos que o componente associado do designer que implementa essa interface expõe por meio de um <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="fe493-144">This method provides a way to add items to the dictionary of attributes that the associated component of the designer implementing this interface exposes through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="fe493-145">As chaves no dicionário de atributos são as IDs de tipo dos atributos.</span><span class="sxs-lookup"><span data-stu-id="fe493-145">The keys in the dictionary of attributes are the type IDs of the attributes.</span></span> <span data-ttu-id="fe493-146">Os objetos são do tipo <xref:System.Attribute>.</span><span class="sxs-lookup"><span data-stu-id="fe493-146">The objects are of type <xref:System.Attribute>.</span></span> <span data-ttu-id="fe493-147">Esse método é chamado imediatamente antes do <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>.</span><span class="sxs-lookup"><span data-stu-id="fe493-147">This method is called immediately before <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>.</span></span>  
  
 <span data-ttu-id="fe493-148">A ID de tipo de um atributo pode ser qualquer objeto.</span><span class="sxs-lookup"><span data-stu-id="fe493-148">The type ID of an attribute can be any object.</span></span> <span data-ttu-id="fe493-149">Por padrão, <xref:System.Attribute> retorna seu <xref:System.Type> como o valor do seu <xref:System.Attribute.TypeId%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="fe493-149">By default, <xref:System.Attribute> returns its <xref:System.Type> as the value of its <xref:System.Attribute.TypeId%2A> property.</span></span> <span data-ttu-id="fe493-150">Você pode verificar a <xref:System.Attribute.TypeId%2A> de um atributo no dicionário quanto à equivalência com um conhecido <xref:System.Attribute.TypeId%2A> para um atributo para identificá-lo ou usar <xref:System.Reflection> para identificar o objeto de atributo.</span><span class="sxs-lookup"><span data-stu-id="fe493-150">You can check the <xref:System.Attribute.TypeId%2A> of an attribute in the dictionary for equivalence with a known <xref:System.Attribute.TypeId%2A> for an attribute to identify it, or use <xref:System.Reflection> to identify the attribute object itself.</span></span>  
  
 <span data-ttu-id="fe493-151">Quando um atributo que tem o mesmo <xref:System.Attribute.TypeId%2A> como um atributo existente ou herdado é adicionado a um componente, o novo atributo substitui o atributo antigo.</span><span class="sxs-lookup"><span data-stu-id="fe493-151">When an attribute that has the same <xref:System.Attribute.TypeId%2A> as an existing or inherited attribute is added to a component, the new attribute replaces the old attribute.</span></span> <span data-ttu-id="fe493-152">Para muitos atributos, um novo atributo do mesmo tipo substituirá qualquer atributo anterior do tipo.</span><span class="sxs-lookup"><span data-stu-id="fe493-152">For many attributes, a new attribute of the same type will replace any previous attribute of the type.</span></span> <span data-ttu-id="fe493-153">No entanto, alguns tipos de atributos retornam um <xref:System.Attribute.TypeId%2A> que distingue o atributo de forma seletiva.</span><span class="sxs-lookup"><span data-stu-id="fe493-153">However, some types of attributes return a <xref:System.Attribute.TypeId%2A> that distinguishes the attribute selectively.</span></span> <span data-ttu-id="fe493-154">Por exemplo, para fornecer diferentes tipos de designers ativos simultâneos para um tipo, como um <xref:System.ComponentModel.Design.IRootDesigner> e uma <xref:System.ComponentModel.Design.IDesigner>, o <xref:System.ComponentModel.DesignerAttribute> classe retorna uma <xref:System.Attribute.TypeId%2A> que identifica exclusivamente o atributo e o designer base tipo.</span><span class="sxs-lookup"><span data-stu-id="fe493-154">For example, in order to provide different types of simultaneously active designers for a type, such as an <xref:System.ComponentModel.Design.IRootDesigner> and an <xref:System.ComponentModel.Design.IDesigner>, the <xref:System.ComponentModel.DesignerAttribute> class returns a <xref:System.Attribute.TypeId%2A> that uniquely identifies both the attribute and the base designer type.</span></span> <span data-ttu-id="fe493-155">O <xref:System.ComponentModel.DesignerAttribute> construtor permite que você especifique o tipo de designer base do designer, além de seu tipo específico, e <xref:System.ComponentModel.DesignerAttribute> retorna um <xref:System.Attribute.TypeId%2A> que reflete isso.</span><span class="sxs-lookup"><span data-stu-id="fe493-155">The <xref:System.ComponentModel.DesignerAttribute> constructor allows you to specify the base designer type of the designer in addition to its specific type, and <xref:System.ComponentModel.DesignerAttribute> returns a <xref:System.Attribute.TypeId%2A> that reflects this.</span></span> <span data-ttu-id="fe493-156">Portanto, quando você adiciona um novo <xref:System.ComponentModel.DesignerAttribute> com um tipo de designer base do mesmo tipo como o tipo de designer base de existente <xref:System.ComponentModel.DesignerAttribute>, o atributo antigo é substituído pelo novo atributo.</span><span class="sxs-lookup"><span data-stu-id="fe493-156">Therefore when you add a new <xref:System.ComponentModel.DesignerAttribute> with a base designer type of the same type as the base designer type of an existing <xref:System.ComponentModel.DesignerAttribute>, the old attribute is replaced with the new attribute.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="fe493-157">
            <para>Você pode filtrar diretamente o dicionário que é acessível por meio de <paramref name="attributes" /> parâmetro, ou você pode deixá-lo inalterado. Se você está substituindo esse método, chame a implementação base depois de realizar sua própria filtragem.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fe493-157">
              <para>You can directly filter the dictionary that is accessible through the <paramref name="attributes" /> parameter, or you can leave it unchanged. If you are overriding this method, call the base implementation after you perform your own filtering.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterEvents">
      <MemberSignature Language="C#" Value="public void PreFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PreFilterEvents (events As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PreFilterEvents(System::Collections::IDictionary ^ events);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterEvents : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PreFilterEvents events" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events">
          <span data-ttu-id="fe493-158">Os objetos <see cref="T:System.ComponentModel.EventDescriptor" /> que representam os eventos da classe do componente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe493-158">The <see cref="T:System.ComponentModel.EventDescriptor" /> objects that represent the events of the class of the component.</span>
          </span>
          <span data-ttu-id="fe493-159">As chaves no dicionário de eventos são nomes de evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe493-159">The keys in the dictionary of events are event names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe493-160">Quando substituído em uma classe derivada, permite que um designer adicione itens ao conjunto de eventos que ele expõe por meio de um <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe493-160">When overridden in a derived class, allows a designer to add items to the set of events that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe493-161">Esse método fornece uma maneira de adicionar itens ao dicionário de eventos que um designer expõe por meio de um <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="fe493-161">This method provides a way to add items to the dictionary of events that a designer exposes through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="fe493-162">As chaves no dicionário de eventos são os nomes dos eventos.</span><span class="sxs-lookup"><span data-stu-id="fe493-162">The keys in the dictionary of events are the names of the events.</span></span> <span data-ttu-id="fe493-163">Os objetos são do tipo <xref:System.ComponentModel.EventDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="fe493-163">The objects are of type <xref:System.ComponentModel.EventDescriptor>.</span></span> <span data-ttu-id="fe493-164">Esse método é chamado imediatamente antes do <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>.</span><span class="sxs-lookup"><span data-stu-id="fe493-164">This method is called immediately before <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="fe493-165">
            <para>Você pode modificar diretamente o dicionário que é acessível por meio de <paramref name="events" /> parâmetro, ou você pode deixá-lo inalterado. Se você está substituindo esse método, chame a implementação base antes de executar seus próprios recursos de filtragem.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fe493-165">
              <para>You can directly modify the dictionary that is accessible through the <paramref name="events" /> parameter, or you can leave it unchanged. If you are overriding this method, call the base implementation before you perform your own filtering.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterProperties">
      <MemberSignature Language="C#" Value="public void PreFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PreFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PreFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterProperties : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PreFilterProperties properties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">
          <span data-ttu-id="fe493-166">Os objetos <see cref="T:System.ComponentModel.PropertyDescriptor" /> que representam as propriedades da classe do componente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe493-166">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that represent the properties of the class of the component.</span>
          </span>
          <span data-ttu-id="fe493-167">As chaves no dicionário de propriedades são nomes de propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe493-167">The keys in the dictionary of properties are property names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe493-168">Quando substituído em uma classe derivada, permite que um designer adicione itens ao conjunto de propriedades que ele expõe por meio de um <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe493-168">When overridden in a derived class, allows a designer to add items to the set of properties that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe493-169">Esse método fornece uma maneira de adicionar itens ao dicionário de propriedades que um designer expõe por meio de um <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="fe493-169">This method provides a way to add items to the dictionary of properties that a designer exposes through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="fe493-170">As chaves no dicionário de propriedades são os nomes das propriedades.</span><span class="sxs-lookup"><span data-stu-id="fe493-170">The keys in the dictionary of properties are the names of the properties.</span></span> <span data-ttu-id="fe493-171">Os objetos são do tipo <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="fe493-171">The objects are of type <xref:System.ComponentModel.PropertyDescriptor>.</span></span> <span data-ttu-id="fe493-172">Esse método é chamado imediatamente antes do <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A>.</span><span class="sxs-lookup"><span data-stu-id="fe493-172">This method is called immediately before <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="fe493-173">
            <para>Você pode modificar diretamente o dicionário que é acessível por meio de <paramref name="properties" /> parâmetro, ou você pode deixá-lo inalterado. Se você está substituindo esse método, chame a implementação base antes de executar seus próprios recursos de filtragem.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fe493-173">
              <para>You can directly modify the dictionary that is accessible through the <paramref name="properties" /> parameter, or you can leave it unchanged. If you are overriding this method, call the base implementation before you perform your own filtering.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
  </Members>
</Type>