<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IDesignerFilter.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5805c7cd0acdb03070f0db4f5eea4cf81ee1b03b9.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">805c7cd0acdb03070f0db4f5eea4cf81ee1b03b9</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.IDesignerFilter">
          <source>Provides an interface that enables a designer to access and filter the dictionaries of a <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph> that stores the property, attribute, and event descriptors that a component designer can expose to the design-time environment.</source>
          <target state="translated">Fornece uma interface que permite que um designer acesse e filtre os dicionários de um <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph> que armazena os descritores de evento, atributo e propriedade que um componente de designer pode expor para o ambiente em tempo de design.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IDesignerFilter">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerFilter&gt;</ph> enables a designer to filter the set of property, attribute, and event descriptors that its associated component exposes through a <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerFilter&gt;</ph> permite que um designer filtrar o conjunto de descritores de propriedade, o atributo e o evento que expõe seu componente associado por meio de um <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IDesignerFilter">
          <source>The methods of this interface whose names begin with <ph id="ph1">`Pre`</ph> are called immediately before the methods whose names begin with <ph id="ph2">`Post`</ph>.</source>
          <target state="translated">Os métodos dessa interface cujos nomes começam com <ph id="ph1">`Pre`</ph> são chamadas imediatamente antes dos métodos cujos nomes começam com <ph id="ph2">`Post`</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IDesignerFilter">
          <source>If you want to add attribute, event, or property descriptors, use a <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A&gt;</ph>, or <ph id="ph3">&lt;xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A&gt;</ph> method.</source>
          <target state="translated">Se você deseja adicionar o atributo, evento ou descritores de propriedade, use um <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A&gt;</ph>, ou <ph id="ph3">&lt;xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IDesignerFilter">
          <source>If you want to change or remove attribute, event, or property descriptors, use a <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A&gt;</ph>, or <ph id="ph3">&lt;xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A&gt;</ph> method.</source>
          <target state="translated">Se você deseja alterar ou remover o atributo, evento ou descritores de propriedade, use um <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A&gt;</ph>, ou <ph id="ph3">&lt;xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IDesignerFilter">
          <source>The following example demonstrates an override of <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A&gt;</ph> that adds a property of the designer to the Properties window when the designer's control is selected at design time.</source>
          <target state="translated">O exemplo a seguir demonstra uma substituição de <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A&gt;</ph> que adiciona uma propriedade do designer para a janela de propriedades quando controle do designer é selecionado em tempo de design.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IDesignerFilter">
          <source>See the example for the <ph id="ph1">&lt;xref:System.Windows.Forms.Design.ControlDesigner&gt;</ph> class for a complete designer example that uses the <ph id="ph2">&lt;xref:System.ComponentModel.Design.IDesignerFilter&gt;</ph> interface.</source>
          <target state="translated">Consulte o exemplo para o <ph id="ph1">&lt;xref:System.Windows.Forms.Design.ControlDesigner&gt;</ph> classe para um exemplo completo de designer que usa o <ph id="ph2">&lt;xref:System.ComponentModel.Design.IDesignerFilter&gt;</ph> interface.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> objects for the class of the component.</source>
          <target state="translated">Os objetos <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> para a classe do componente.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)">
          <source>The keys in the dictionary of attributes are the <ph id="ph1">&lt;see cref="P:System.Attribute.TypeId" /&gt;</ph> values of the attributes.</source>
          <target state="translated">As chaves no dicionário de atributos são os valores <ph id="ph1">&lt;see cref="P:System.Attribute.TypeId" /&gt;</ph> dos atributos.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)">
          <source>When overridden in a derived class, allows a designer to change or remove items from the set of attributes that it exposes through a <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph>.</source>
          <target state="translated">Quando substituído em uma classe derivada, permite que um designer altere ou remova itens do conjunto de atributos que ele expõe por meio de um <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)">
          <source>This method provides a way to change or remove items within the dictionary of attributes that the associated component of the designer implementing this interface exposes through a <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>.</source>
          <target state="translated">Esse método fornece uma maneira de alterar ou remover itens no dicionário de atributos que o componente associado do designer que implementa essa interface expõe por meio de um <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)">
          <source>The keys in the dictionary of attributes are the type IDs of the attributes.</source>
          <target state="translated">As chaves no dicionário de atributos são do tipo IDs dos atributos.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)">
          <source>The objects are of type <ph id="ph1">&lt;xref:System.Attribute&gt;</ph>.</source>
          <target state="translated">Os objetos são do tipo <ph id="ph1">&lt;xref:System.Attribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)">
          <source>This method is called immediately after <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A&gt;</ph>.</source>
          <target state="translated">Esse método é chamado imediatamente após <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)">
          <source>The type ID of an attribute can be any object.</source>
          <target state="translated">A ID de tipo de um atributo pode ser qualquer objeto.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)">
          <source>By default, <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> returns its <ph id="ph2">&lt;xref:System.Type&gt;</ph> as the value of its <ph id="ph3">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> property.</source>
          <target state="translated">Por padrão, <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> retorna seu <ph id="ph2">&lt;xref:System.Type&gt;</ph> como o valor do seu <ph id="ph3">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)">
          <source>You can check the <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> of an attribute in the dictionary for equivalence with a known <ph id="ph2">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> for an attribute to identify it, or use <ph id="ph3">&lt;xref:System.Reflection&gt;</ph> to identify the attribute object itself.</source>
          <target state="translated">Você pode verificar o <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> de um atributo no dicionário para equivalência com um conhecido <ph id="ph2">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> para um atributo para identificá-lo ou usar <ph id="ph3">&lt;xref:System.Reflection&gt;</ph> para identificar o objeto de atributo.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)">
          <source>When an attribute that has the same <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> as an existing or inherited attribute is added to a component, the new attribute replaces the old attribute.</source>
          <target state="translated">Quando um atributo que tem o mesmo <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> como um atributo existente ou herdado é adicionado a um componente, o novo atributo substitui o atributo antigo.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)">
          <source>For many attributes, a new attribute of the same type will replace any previous attribute of the type.</source>
          <target state="translated">Para muitos atributos, um novo atributo do mesmo tipo substituirá qualquer atributo anterior do tipo.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)">
          <source>However, some types of attributes return a <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> that distinguishes the attribute selectively.</source>
          <target state="translated">No entanto, alguns tipos de atributos retornam um <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> que distingue o atributo seletivamente.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)">
          <source>For example, in order to provide different types of simultaneously active designers for a type, such as an <ph id="ph1">&lt;xref:System.ComponentModel.Design.IRootDesigner&gt;</ph> and an <ph id="ph2">&lt;xref:System.ComponentModel.Design.IDesigner&gt;</ph>, the <ph id="ph3">&lt;xref:System.ComponentModel.DesignerAttribute&gt;</ph> class returns a <ph id="ph4">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> that uniquely identifies both the attribute and the base designer type.</source>
          <target state="translated">Por exemplo, para fornecer diferentes tipos de designers simultaneamente ativas de um tipo, como um <ph id="ph1">&lt;xref:System.ComponentModel.Design.IRootDesigner&gt;</ph> e um <ph id="ph2">&lt;xref:System.ComponentModel.Design.IDesigner&gt;</ph>, o <ph id="ph3">&lt;xref:System.ComponentModel.DesignerAttribute&gt;</ph> classe retorna uma <ph id="ph4">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> que identifica exclusivamente o atributo e o tipo de designer de base.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.DesignerAttribute&gt;</ph> constructor allows you to specify the base designer type of the designer in addition to its specific type, and <ph id="ph2">&lt;xref:System.ComponentModel.DesignerAttribute&gt;</ph> returns a <ph id="ph3">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> that reflects this.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.ComponentModel.DesignerAttribute&gt;</ph> construtor permite que você especifique o tipo de designer de base do designer além de seu tipo específico, e <ph id="ph2">&lt;xref:System.ComponentModel.DesignerAttribute&gt;</ph> retorna um <ph id="ph3">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> que reflete isso.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)">
          <source>Therefore when you add a new <ph id="ph1">&lt;xref:System.ComponentModel.DesignerAttribute&gt;</ph> with a base designer type of the same type as the base designer type of an existing <ph id="ph2">&lt;xref:System.ComponentModel.DesignerAttribute&gt;</ph>, the old attribute is replaced with the new attribute.</source>
          <target state="translated">Portanto, quando você adiciona um novo <ph id="ph1">&lt;xref:System.ComponentModel.DesignerAttribute&gt;</ph> com um tipo de designer de base do mesmo tipo como o tipo de designer de base de um objeto existente <ph id="ph2">&lt;xref:System.ComponentModel.DesignerAttribute&gt;</ph>, o atributo antigo é substituído com o novo atributo.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)">
          <source>You can directly filter the dictionary that is accessible through the <ph id="ph1">&lt;paramref name="attributes" /&gt;</ph> parameter, or you can leave it unchanged.</source>
          <target state="translated">Diretamente, você pode filtrar o dicionário que pode ser acessado por meio de <ph id="ph1">&lt;paramref name="attributes" /&gt;</ph> parâmetro, ou você pode deixá-la inalterada.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)">
          <source>If you are overriding this method, call the base implementation after you perform your own filtering.</source>
          <target state="translated">Se você está substituindo esse método, chame a implementação base depois de executar seus próprios recursos de filtragem.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> objects that represent the events of the class of the component.</source>
          <target state="translated">Os objetos <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> que representam os eventos da classe do componente.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)">
          <source>The keys in the dictionary of events are event names.</source>
          <target state="translated">As chaves no dicionário de eventos são nomes de evento.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)">
          <source>When overridden in a derived class, allows a designer to change or remove items from the set of events that it exposes through a <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph>.</source>
          <target state="translated">Quando substituído em uma classe derivada, permite que um designer altere ou remova itens do conjunto de eventos que ele expõe por meio de um <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)">
          <source>This method provides a way to change or remove items within the dictionary of events that are exposed through a <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>.</source>
          <target state="translated">Esse método fornece uma maneira de alterar ou remover itens no dicionário de eventos que são expostos por meio de um <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)">
          <source>The keys in the dictionary of events are the names of the events.</source>
          <target state="translated">As chaves no dicionário de eventos são os nomes dos eventos.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)">
          <source>The objects are of type <ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptor&gt;</ph>.</source>
          <target state="translated">Os objetos são do tipo <ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)">
          <source>This method is called immediately after <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A&gt;</ph>.</source>
          <target state="translated">Esse método é chamado imediatamente após <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)">
          <source>You can directly filter the dictionary that is accessible through the <ph id="ph1">&lt;paramref name="events" /&gt;</ph> parameter, or you can leave it unchanged.</source>
          <target state="translated">Diretamente, você pode filtrar o dicionário que pode ser acessado por meio de <ph id="ph1">&lt;paramref name="events" /&gt;</ph> parâmetro, ou você pode deixá-la inalterada.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)">
          <source>If you are overriding this method, call the base implementation after you perform your own filtering.</source>
          <target state="translated">Se você está substituindo esse método, chame a implementação base depois de executar seus próprios recursos de filtragem.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> objects that represent the properties of the class of the component.</source>
          <target state="translated">Os objetos <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> que representam as propriedades da classe do componente.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)">
          <source>The keys in the dictionary of properties are property names.</source>
          <target state="translated">As chaves no dicionário de propriedades são nomes de propriedade.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)">
          <source>When overridden in a derived class, allows a designer to change or remove items from the set of properties that it exposes through a <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph>.</source>
          <target state="translated">Quando substituído em uma classe derivada, permite que um designer altere ou remova itens do conjunto de propriedades que ele expõe por meio de um <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)">
          <source>This method provides a way to change or remove items within the dictionary of properties that are exposed through a <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>.</source>
          <target state="translated">Esse método fornece uma maneira de alterar ou remover itens no dicionário de propriedades que são expostas por meio de um <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)">
          <source>The keys in the dictionary of properties are the names of the properties.</source>
          <target state="translated">As chaves no dicionário de propriedades são os nomes das propriedades.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)">
          <source>The objects are of type <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</source>
          <target state="translated">Os objetos são do tipo <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)">
          <source>This method is called immediately after <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A&gt;</ph>.</source>
          <target state="translated">Esse método é chamado imediatamente após <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)">
          <source>You can directly filter the dictionary that is accessible through the <ph id="ph1">&lt;paramref name="properties" /&gt;</ph> parameter, or you can leave it unchanged.</source>
          <target state="translated">Diretamente, você pode filtrar o dicionário que pode ser acessado por meio de <ph id="ph1">&lt;paramref name="properties" /&gt;</ph> parâmetro, ou você pode deixá-la inalterada.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)">
          <source>If you are overriding this method, call the base implementation after you perform your own filtering.</source>
          <target state="translated">Se você está substituindo esse método, chame a implementação base depois de executar seus próprios recursos de filtragem.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> objects for the class of the component.</source>
          <target state="translated">Os objetos <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> para a classe do componente.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)">
          <source>The keys in the dictionary of attributes are the <ph id="ph1">&lt;see cref="P:System.Attribute.TypeId" /&gt;</ph> values of the attributes.</source>
          <target state="translated">As chaves no dicionário de atributos são os valores <ph id="ph1">&lt;see cref="P:System.Attribute.TypeId" /&gt;</ph> dos atributos.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)">
          <source>When overridden in a derived class, allows a designer to add items to the set of attributes that it exposes through a <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph>.</source>
          <target state="translated">Quando substituído em uma classe derivada, permite que um designer adicione itens ao conjunto de atributos que ele expõe por meio de um <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)">
          <source>This method provides a way to add items to the dictionary of attributes that the associated component of the designer implementing this interface exposes through a <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>.</source>
          <target state="translated">Esse método fornece uma maneira de adicionar itens ao dicionário de atributos que o componente associado do designer que implementa essa interface expõe por meio de um <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)">
          <source>The keys in the dictionary of attributes are the type IDs of the attributes.</source>
          <target state="translated">As chaves no dicionário de atributos são do tipo IDs dos atributos.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)">
          <source>The objects are of type <ph id="ph1">&lt;xref:System.Attribute&gt;</ph>.</source>
          <target state="translated">Os objetos são do tipo <ph id="ph1">&lt;xref:System.Attribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)">
          <source>This method is called immediately before <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A&gt;</ph>.</source>
          <target state="translated">Este método é chamado imediatamente antes do <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)">
          <source>The type ID of an attribute can be any object.</source>
          <target state="translated">A ID de tipo de um atributo pode ser qualquer objeto.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)">
          <source>By default, <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> returns its <ph id="ph2">&lt;xref:System.Type&gt;</ph> as the value of its <ph id="ph3">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> property.</source>
          <target state="translated">Por padrão, <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> retorna seu <ph id="ph2">&lt;xref:System.Type&gt;</ph> como o valor do seu <ph id="ph3">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)">
          <source>You can check the <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> of an attribute in the dictionary for equivalence with a known <ph id="ph2">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> for an attribute to identify it, or use <ph id="ph3">&lt;xref:System.Reflection&gt;</ph> to identify the attribute object itself.</source>
          <target state="translated">Você pode verificar o <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> de um atributo no dicionário para equivalência com um conhecido <ph id="ph2">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> para um atributo para identificá-lo ou usar <ph id="ph3">&lt;xref:System.Reflection&gt;</ph> para identificar o objeto de atributo.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)">
          <source>When an attribute that has the same <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> as an existing or inherited attribute is added to a component, the new attribute replaces the old attribute.</source>
          <target state="translated">Quando um atributo que tem o mesmo <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> como um atributo existente ou herdado é adicionado a um componente, o novo atributo substitui o atributo antigo.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)">
          <source>For many attributes, a new attribute of the same type will replace any previous attribute of the type.</source>
          <target state="translated">Para muitos atributos, um novo atributo do mesmo tipo substituirá qualquer atributo anterior do tipo.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)">
          <source>However, some types of attributes return a <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> that distinguishes the attribute selectively.</source>
          <target state="translated">No entanto, alguns tipos de atributos retornam um <ph id="ph1">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> que distingue o atributo seletivamente.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)">
          <source>For example, in order to provide different types of simultaneously active designers for a type, such as an <ph id="ph1">&lt;xref:System.ComponentModel.Design.IRootDesigner&gt;</ph> and an <ph id="ph2">&lt;xref:System.ComponentModel.Design.IDesigner&gt;</ph>, the <ph id="ph3">&lt;xref:System.ComponentModel.DesignerAttribute&gt;</ph> class returns a <ph id="ph4">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> that uniquely identifies both the attribute and the base designer type.</source>
          <target state="translated">Por exemplo, para fornecer diferentes tipos de designers simultaneamente ativas de um tipo, como um <ph id="ph1">&lt;xref:System.ComponentModel.Design.IRootDesigner&gt;</ph> e um <ph id="ph2">&lt;xref:System.ComponentModel.Design.IDesigner&gt;</ph>, o <ph id="ph3">&lt;xref:System.ComponentModel.DesignerAttribute&gt;</ph> classe retorna uma <ph id="ph4">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> que identifica exclusivamente o atributo e o tipo de designer de base.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.DesignerAttribute&gt;</ph> constructor allows you to specify the base designer type of the designer in addition to its specific type, and <ph id="ph2">&lt;xref:System.ComponentModel.DesignerAttribute&gt;</ph> returns a <ph id="ph3">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> that reflects this.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.ComponentModel.DesignerAttribute&gt;</ph> construtor permite que você especifique o tipo de designer de base do designer além de seu tipo específico, e <ph id="ph2">&lt;xref:System.ComponentModel.DesignerAttribute&gt;</ph> retorna um <ph id="ph3">&lt;xref:System.Attribute.TypeId%2A&gt;</ph> que reflete isso.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)">
          <source>Therefore when you add a new <ph id="ph1">&lt;xref:System.ComponentModel.DesignerAttribute&gt;</ph> with a base designer type of the same type as the base designer type of an existing <ph id="ph2">&lt;xref:System.ComponentModel.DesignerAttribute&gt;</ph>, the old attribute is replaced with the new attribute.</source>
          <target state="translated">Portanto, quando você adiciona um novo <ph id="ph1">&lt;xref:System.ComponentModel.DesignerAttribute&gt;</ph> com um tipo de designer de base do mesmo tipo como o tipo de designer de base de um objeto existente <ph id="ph2">&lt;xref:System.ComponentModel.DesignerAttribute&gt;</ph>, o atributo antigo é substituído com o novo atributo.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)">
          <source>You can directly filter the dictionary that is accessible through the <ph id="ph1">&lt;paramref name="attributes" /&gt;</ph> parameter, or you can leave it unchanged.</source>
          <target state="translated">Diretamente, você pode filtrar o dicionário que pode ser acessado por meio de <ph id="ph1">&lt;paramref name="attributes" /&gt;</ph> parâmetro, ou você pode deixá-la inalterada.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)">
          <source>If you are overriding this method, call the base implementation after you perform your own filtering.</source>
          <target state="translated">Se você está substituindo esse método, chame a implementação base depois de executar seus próprios recursos de filtragem.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> objects that represent the events of the class of the component.</source>
          <target state="translated">Os objetos <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> que representam os eventos da classe do componente.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)">
          <source>The keys in the dictionary of events are event names.</source>
          <target state="translated">As chaves no dicionário de eventos são nomes de evento.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)">
          <source>When overridden in a derived class, allows a designer to add items to the set of events that it exposes through a <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph>.</source>
          <target state="translated">Quando substituído em uma classe derivada, permite que um designer adicione itens ao conjunto de eventos que ele expõe por meio de um <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)">
          <source>This method provides a way to add items to the dictionary of events that a designer exposes through a <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>.</source>
          <target state="translated">Esse método fornece uma maneira de adicionar itens ao dicionário de eventos que expõe um designer por meio de um <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)">
          <source>The keys in the dictionary of events are the names of the events.</source>
          <target state="translated">As chaves no dicionário de eventos são os nomes dos eventos.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)">
          <source>The objects are of type <ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptor&gt;</ph>.</source>
          <target state="translated">Os objetos são do tipo <ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)">
          <source>This method is called immediately before <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A&gt;</ph>.</source>
          <target state="translated">Este método é chamado imediatamente antes do <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)">
          <source>You can directly modify the dictionary that is accessible through the <ph id="ph1">&lt;paramref name="events" /&gt;</ph> parameter, or you can leave it unchanged.</source>
          <target state="translated">Você pode modificar diretamente o dicionário que pode ser acessado por meio de <ph id="ph1">&lt;paramref name="events" /&gt;</ph> parâmetro, ou você pode deixá-la inalterada.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)">
          <source>If you are overriding this method, call the base implementation before you perform your own filtering.</source>
          <target state="translated">Se você está substituindo esse método, chame a implementação base antes de executar seu próprio processo de filtragem.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> objects that represent the properties of the class of the component.</source>
          <target state="translated">Os objetos <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> que representam as propriedades da classe do componente.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)">
          <source>The keys in the dictionary of properties are property names.</source>
          <target state="translated">As chaves no dicionário de propriedades são nomes de propriedade.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)">
          <source>When overridden in a derived class, allows a designer to add items to the set of properties that it exposes through a <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph>.</source>
          <target state="translated">Quando substituído em uma classe derivada, permite que um designer adicione itens ao conjunto de propriedades que ele expõe por meio de um <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)">
          <source>This method provides a way to add items to the dictionary of properties that a designer exposes through a <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>.</source>
          <target state="translated">Esse método fornece uma maneira de adicionar itens ao dicionário de propriedades que expõe um designer por meio de um <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)">
          <source>The keys in the dictionary of properties are the names of the properties.</source>
          <target state="translated">As chaves no dicionário de propriedades são os nomes das propriedades.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)">
          <source>The objects are of type <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</source>
          <target state="translated">Os objetos são do tipo <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)">
          <source>This method is called immediately before <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A&gt;</ph>.</source>
          <target state="translated">Este método é chamado imediatamente antes do <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)">
          <source>You can directly modify the dictionary that is accessible through the <ph id="ph1">&lt;paramref name="properties" /&gt;</ph> parameter, or you can leave it unchanged.</source>
          <target state="translated">Você pode modificar diretamente o dicionário que pode ser acessado por meio de <ph id="ph1">&lt;paramref name="properties" /&gt;</ph> parâmetro, ou você pode deixá-la inalterada.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)">
          <source>If you are overriding this method, call the base implementation before you perform your own filtering.</source>
          <target state="translated">Se você está substituindo esse método, chame a implementação base antes de executar seu próprio processo de filtragem.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>