<Type Name="IDesignerHost" FullName="System.ComponentModel.Design.IDesignerHost">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6a5d45bd683269ed3912d04dd336b2bccc6e7449" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30370040" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDesignerHost : System.ComponentModel.Design.IServiceContainer" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDesignerHost implements class System.ComponentModel.Design.IServiceContainer, class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.IDesignerHost" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDesignerHost&#xA;Implements IServiceContainer" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDesignerHost : System::ComponentModel::Design::IServiceContainer" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.IServiceContainer</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="94647-101">Fornece uma interface para gerenciar componentes e transações de designer.</span>
      <span class="sxs-lookup">
        <span data-stu-id="94647-101">Provides an interface for managing designer transactions and components.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94647-102"><xref:System.ComponentModel.Design.IDesignerHost> é uma interface que funciona com a arquitetura de designer de formulários do .NET Framework para oferecer suporte à transação de designer e o gerenciamento de componentes.</span><span class="sxs-lookup"><span data-stu-id="94647-102"><xref:System.ComponentModel.Design.IDesignerHost> is an interface that works with the .NET Framework forms designer architecture to provide support for designer transaction and component management.</span></span>  
  
 <span data-ttu-id="94647-103">O .NET Framework não fornece uma implementação desta interface.</span><span class="sxs-lookup"><span data-stu-id="94647-103">The .NET Framework does not provide an implementation of this interface.</span></span> <span data-ttu-id="94647-104">A interface é implementada por ferramentas de desenvolvimento que oferece suporte a designers.</span><span class="sxs-lookup"><span data-stu-id="94647-104">The interface is implemented by development tools that support designers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94647-105">O exemplo de código a seguir demonstra como obter o <xref:System.ComponentModel.Design.IDesignerHost> interface de serviço de um designer ou o componente se encontra.</span><span class="sxs-lookup"><span data-stu-id="94647-105">The following example code demonstrates how to obtain the <xref:System.ComponentModel.Design.IDesignerHost> service interface from a designer or sited component.</span></span>  
  
 [!code-cpp[DesignerHostAcquisition#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DesignerHostAcquisition/CPP/source.cpp#1)]
 [!code-csharp[DesignerHostAcquisition#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DesignerHostAcquisition/CS/source.cs#1)]
 [!code-vb[DesignerHostAcquisition#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DesignerHostAcquisition/VB/source.vb#1)]  
  
 <span data-ttu-id="94647-106">O exemplo de código a seguir demonstra como usar o <xref:System.ComponentModel.Design.IDesignerHost> interface para os componentes da lista de projeto.</span><span class="sxs-lookup"><span data-stu-id="94647-106">The following example code demonstrates using the <xref:System.ComponentModel.Design.IDesignerHost> interface to list project components.</span></span>  
  
 [!code-cpp[IDesignerHostExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IDesignerHostExample/CPP/idesignerhostexample.cpp#1)]
 [!code-csharp[IDesignerHostExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IDesignerHostExample/CS/idesignerhostexample.cs#1)]
 [!code-vb[IDesignerHostExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IDesignerHostExample/VB/idesignerhostexample.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="usage">
      <para>
        <span data-ttu-id="94647-107">Para obter uma implementação de <see cref="T:System.ComponentModel.Design.IDesignerHost" /> de um ambiente de desenvolvimento, chame <see cref="M:System.ComponentModel.Component.GetService(System.Type)" /> enquanto o componente está ativo no modo de design, passando o tipo de <see cref="T:System.ComponentModel.Design.IDesignerHost" /> a solicitação de um <see cref="T:System.ComponentModel.Design.IDesignerHost" /> interface de serviço.</span>
        <span class="sxs-lookup">
          <span data-stu-id="94647-107">To obtain an implementation of <see cref="T:System.ComponentModel.Design.IDesignerHost" /> from a development environment, call <see cref="M:System.ComponentModel.Component.GetService(System.Type)" /> while your component is active in design mode, passing the type of <see cref="T:System.ComponentModel.Design.IDesignerHost" /> to request an <see cref="T:System.ComponentModel.Design.IDesignerHost" /> service interface.</span>
        </span>
        <span data-ttu-id="94647-108">
          <see cref="T:System.ComponentModel.Design.IDesignerHost" /> fornece os seguintes membros relacionados ao estado do designer:</span>
        <span class="sxs-lookup">
          <span data-stu-id="94647-108">
            <see cref="T:System.ComponentModel.Design.IDesignerHost" /> provides the following members related to designer state:</span>
        </span>  
  
-   <span data-ttu-id="94647-109">O <see cref="P:System.ComponentModel.Design.IDesignerHost.Loading" /> propriedade indica se um designer ou o documento está sendo carregado.</span><span class="sxs-lookup"><span data-stu-id="94647-109">The <see cref="P:System.ComponentModel.Design.IDesignerHost.Loading" /> property indicates whether a designer or document is being loaded.</span></span>  
  
-   <span data-ttu-id="94647-110">O <see cref="E:System.ComponentModel.Design.IDesignerHost.Activated" /> evento ocorre quando um designer está ativado antes da exibição.</span><span class="sxs-lookup"><span data-stu-id="94647-110">The <see cref="E:System.ComponentModel.Design.IDesignerHost.Activated" /> event occurs when a designer is activated before display.</span></span>  
  
-   <span data-ttu-id="94647-111">O <see cref="E:System.ComponentModel.Design.IDesignerHost.Deactivated" /> evento ocorre quando um designer está desativado.</span><span class="sxs-lookup"><span data-stu-id="94647-111">The <see cref="E:System.ComponentModel.Design.IDesignerHost.Deactivated" /> event occurs when a designer is deactivated.</span></span>  
  
-   <span data-ttu-id="94647-112">O <see cref="E:System.ComponentModel.Design.IDesignerHost.LoadComplete" /> evento ocorre depois que um documento é carregado.</span><span class="sxs-lookup"><span data-stu-id="94647-112">The <see cref="E:System.ComponentModel.Design.IDesignerHost.LoadComplete" /> event occurs after a document is loaded.</span></span>  
  
-   <span data-ttu-id="94647-113">O <see cref="M:System.ComponentModel.Design.IDesignerHost.Activate" /> método ativa o designer.</span><span class="sxs-lookup"><span data-stu-id="94647-113">The <see cref="M:System.ComponentModel.Design.IDesignerHost.Activate" /> method activates the designer.</span></span><span data-ttu-id="94647-114"><see cref="T:System.ComponentModel.Design.IDesignerHost" /> fornece os seguintes membros relacionados ao gerenciamento de componentes:</span><span class="sxs-lookup"><span data-stu-id="94647-114"><see cref="T:System.ComponentModel.Design.IDesignerHost" /> provides the following members related to managing components:</span></span>  
  
-   <span data-ttu-id="94647-115">O <see cref="P:System.ComponentModel.Design.IDesignerHost.Container" /> propriedade indica o contêiner para o host do designer.</span><span class="sxs-lookup"><span data-stu-id="94647-115">The <see cref="P:System.ComponentModel.Design.IDesignerHost.Container" /> property indicates the container for the designer host.</span></span>  
  
-   <span data-ttu-id="94647-116">O <see cref="P:System.ComponentModel.Design.IDesignerHost.RootComponent" /> propriedade indica a classe base para o componente raiz.</span><span class="sxs-lookup"><span data-stu-id="94647-116">The <see cref="P:System.ComponentModel.Design.IDesignerHost.RootComponent" /> property indicates the base class for the root component.</span></span>  
  
-   <span data-ttu-id="94647-117">O <see cref="P:System.ComponentModel.Design.IDesignerHost.RootComponentClassName" /> propriedade indica o nome da classe do componente raiz.</span><span class="sxs-lookup"><span data-stu-id="94647-117">The <see cref="P:System.ComponentModel.Design.IDesignerHost.RootComponentClassName" /> property indicates the name of the class of the root component.</span></span>  
  
-   <span data-ttu-id="94647-118">O <see cref="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type)" /> método cria o tipo de componente especificado.</span><span class="sxs-lookup"><span data-stu-id="94647-118">The <see cref="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type)" /> method creates the specified type of component.</span></span>  
  
-   <span data-ttu-id="94647-119">O <see cref="M:System.ComponentModel.Design.IDesignerHost.DestroyComponent(System.ComponentModel.IComponent)" /> método destrói o componente especificado.</span><span class="sxs-lookup"><span data-stu-id="94647-119">The <see cref="M:System.ComponentModel.Design.IDesignerHost.DestroyComponent(System.ComponentModel.IComponent)" /> method destroys the specified component.</span></span>  
  
-   <span data-ttu-id="94647-120">O <see cref="M:System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)" /> método obtém o designer associado ao componente especificado.</span><span class="sxs-lookup"><span data-stu-id="94647-120">The <see cref="M:System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)" /> method gets the designer associated with a specified component.</span></span>  
  
-   <span data-ttu-id="94647-121">O <see cref="M:System.ComponentModel.Design.IDesignerHost.GetType(System.String)" /> método obtém uma instância do tipo com o nome especificado.</span><span class="sxs-lookup"><span data-stu-id="94647-121">The <see cref="M:System.ComponentModel.Design.IDesignerHost.GetType(System.String)" /> method gets an instance of the type with the specified name.</span></span><span data-ttu-id="94647-122"><see cref="T:System.ComponentModel.Design.IDesignerHost" /> fornece os seguintes membros relacionados ao gerenciamento de transações:</span><span class="sxs-lookup"><span data-stu-id="94647-122"><see cref="T:System.ComponentModel.Design.IDesignerHost" /> provides the following members related to managing transactions:</span></span>  
  
-   <span data-ttu-id="94647-123">O <see cref="P:System.ComponentModel.Design.IDesignerHost.InTransaction" /> propriedade indica se o designer está em uma transação.</span><span class="sxs-lookup"><span data-stu-id="94647-123">The <see cref="P:System.ComponentModel.Design.IDesignerHost.InTransaction" /> property indicates whether the designer is in a transaction.</span></span>  
  
-   <span data-ttu-id="94647-124">O <see cref="P:System.ComponentModel.Design.IDesignerHost.TransactionDescription" /> propriedade indica a descrição da transação atual.</span><span class="sxs-lookup"><span data-stu-id="94647-124">The <see cref="P:System.ComponentModel.Design.IDesignerHost.TransactionDescription" /> property indicates the current transaction description.</span></span>  
  
-   <span data-ttu-id="94647-125">O <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" /> evento ocorre quando uma transação for concluída.</span><span class="sxs-lookup"><span data-stu-id="94647-125">The <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" /> event occurs when a transaction has been completed.</span></span>  
  
-   <span data-ttu-id="94647-126">O <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" /> evento ocorre quando uma transação está prestes a ser concluída.</span><span class="sxs-lookup"><span data-stu-id="94647-126">The <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" /> event occurs when a transaction is about to be completed.</span></span>  
  
-   <span data-ttu-id="94647-127">O <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" /> evento ocorre quando uma transação foi iniciada.</span><span class="sxs-lookup"><span data-stu-id="94647-127">The <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" /> event occurs when a transaction has begun.</span></span>  
  
-   <span data-ttu-id="94647-128">O <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" /> evento ocorre quando uma transação está prestes a começar.</span><span class="sxs-lookup"><span data-stu-id="94647-128">The <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" /> event occurs when a transaction is about to begin.</span></span>  
  
-   <span data-ttu-id="94647-129">O <see cref="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction" /> método cria e retorna uma nova transação.</span><span class="sxs-lookup"><span data-stu-id="94647-129">The <see cref="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction" /> method creates and returns a new transaction.</span></span></para>
    </block>
    <altmember cref="T:System.ComponentModel.Design.IDesigner" />
    <altmember cref="T:System.ComponentModel.Design.IDesignerEventService" />
    <altmember cref="T:System.ComponentModel.Design.IDesignerOptionService" />
  </Docs>
  <Members>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public void Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Activate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerHost.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Activate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Activate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="94647-130">Ativa o designer que este host está hospedando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94647-130">Activates the designer that this host is hosting.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94647-131">Designers de devem ser ativados antes de exibir sua interface do usuário.</span><span class="sxs-lookup"><span data-stu-id="94647-131">Designers should be activated before they display their user interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Activated">
      <MemberSignature Language="C#" Value="event EventHandler Activated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Activated" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IDesignerHost.Activated" />
      <MemberSignature Language="VB.NET" Value="Event Activated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Activated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="94647-132">Ocorre quando esse designer é ativado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94647-132">Occurs when this designer is activated.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94647-133">Um designer está ativado antes de ser exibido.</span><span class="sxs-lookup"><span data-stu-id="94647-133">A designer is activated before it is displayed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.Deactivated" />
      </Docs>
    </Member>
    <Member MemberName="Container">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IContainer Container { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IContainer Container" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.IDesignerHost.Container" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Container As IContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::IContainer ^ Container { System::ComponentModel::IContainer ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="94647-134">Obtém o contêiner para este host de designer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94647-134">Gets the container for this designer host.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="94647-135">O <see cref="T:System.ComponentModel.IContainer" /> para este host.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94647-135">The <see cref="T:System.ComponentModel.IContainer" /> for this host.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94647-136">Isso <xref:System.ComponentModel.IContainer> contém os componentes do documento atual do modo de design.</span><span class="sxs-lookup"><span data-stu-id="94647-136">This <xref:System.ComponentModel.IContainer> contains the components of the current design mode document.</span></span> <span data-ttu-id="94647-137">Você pode listar ou acessar qualquer um dos componentes do documento atual de modo de design por meio de <xref:System.ComponentModel.IContainer.Components%2A> membro deste <xref:System.ComponentModel.IContainer>.</span><span class="sxs-lookup"><span data-stu-id="94647-137">You can list or access any of the components of the current design mode document through the <xref:System.ComponentModel.IContainer.Components%2A> member of this <xref:System.ComponentModel.IContainer>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateComponent">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="94647-138">Cria um componente do tipo especificado e o adiciona ao documento de design.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94647-138">Creates a component of the specified type and adds it to the design document.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateComponent">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IComponent CreateComponent (Type componentClass);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.IComponent CreateComponent(class System.Type componentClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateComponent (componentClass As Type) As IComponent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::IComponent ^ CreateComponent(Type ^ componentClass);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentClass" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="componentClass">
          <span data-ttu-id="94647-139">O tipo do componente a ser criado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94647-139">The type of the component to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94647-140">Cria um componente do tipo especificado e o adiciona ao documento de design.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94647-140">Creates a component of the specified type and adds it to the design document.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="94647-141">O componente recém-criado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94647-141">The newly created component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94647-142">Se o tipo não pode ser resolvido como um objeto que implementa <xref:System.ComponentModel.IComponent>, uma exceção será lançada.</span><span class="sxs-lookup"><span data-stu-id="94647-142">If the type cannot be resolved into an object that implements <xref:System.ComponentModel.IComponent>, an exception is thrown.</span></span>  
  
 <span data-ttu-id="94647-143">Esse método não especifica um nome para o componente.</span><span class="sxs-lookup"><span data-stu-id="94647-143">This method does not specify a name for the component.</span></span> <span data-ttu-id="94647-144">O método cria o componente e o adiciona ao contêiner de designer.</span><span class="sxs-lookup"><span data-stu-id="94647-144">The method creates the component and adds it to the designer container.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.IComponent" />
      </Docs>
    </Member>
    <Member MemberName="CreateComponent">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IComponent CreateComponent (Type componentClass, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.IComponent CreateComponent(class System.Type componentClass, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateComponent (componentClass As Type, name As String) As IComponent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::IComponent ^ CreateComponent(Type ^ componentClass, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentClass" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="componentClass">
          <span data-ttu-id="94647-145">O tipo do componente a ser criado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94647-145">The type of the component to create.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="94647-146">O nome do componente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94647-146">The name for the component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94647-147">Cria um componente do tipo e nome especificados e o adiciona ao documento de design.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94647-147">Creates a component of the specified type and name, and adds it to the design document.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="94647-148">O componente recém-criado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94647-148">The newly created component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94647-149">Se o tipo não pode ser resolvido como um objeto que implementa <xref:System.ComponentModel.IComponent>, uma exceção será lançada.</span><span class="sxs-lookup"><span data-stu-id="94647-149">If the type cannot be resolved into an object that implements <xref:System.ComponentModel.IComponent>, an exception is thrown.</span></span>  
  
 <span data-ttu-id="94647-150">Esse método cria o componente e o adiciona ao contêiner de designer.</span><span class="sxs-lookup"><span data-stu-id="94647-150">This method creates the component and adds it to the designer container.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.IComponent" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateTransaction">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="94647-151">Cria um <see cref="T:System.ComponentModel.Design.DesignerTransaction" /> que pode encapsular sequências de eventos para melhorar o desempenho e habilitar desfazer e refazer a funcionalidade de suporte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94647-151">Creates a <see cref="T:System.ComponentModel.Design.DesignerTransaction" /> that can encapsulate event sequences to improve performance and enable undo and redo support functionality.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateTransaction">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.DesignerTransaction CreateTransaction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.Design.DesignerTransaction CreateTransaction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateTransaction () As DesignerTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Design::DesignerTransaction ^ CreateTransaction();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerTransaction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="94647-152">Cria um <see cref="T:System.ComponentModel.Design.DesignerTransaction" /> que pode encapsular sequências de eventos para melhorar o desempenho e habilitar desfazer e refazer a funcionalidade de suporte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94647-152">Creates a <see cref="T:System.ComponentModel.Design.DesignerTransaction" /> that can encapsulate event sequences to improve performance and enable undo and redo support functionality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="94647-153">Uma nova instância de <see cref="T:System.ComponentModel.Design.DesignerTransaction" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94647-153">A new instance of <see cref="T:System.ComponentModel.Design.DesignerTransaction" />.</span>
          </span>
          <span data-ttu-id="94647-154">Quando você concluir as etapas na sua transação, deverá chamar <see cref="M:System.ComponentModel.Design.DesignerTransaction.Commit" /> neste objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94647-154">When you complete the steps in your transaction, you should call <see cref="M:System.ComponentModel.Design.DesignerTransaction.Commit" /> on this object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94647-155">Esse método cria um <xref:System.ComponentModel.Design.DesignerTransaction> que pode ser usada para encapsular uma série de operações.</span><span class="sxs-lookup"><span data-stu-id="94647-155">This method creates a <xref:System.ComponentModel.Design.DesignerTransaction> that can be used to encapsulate a series of operations.</span></span> <span data-ttu-id="94647-156">Transações designers podem melhorar o desempenho, reduzir a cintilação causada por várias atualizações durante o processo de operações e habilitar a maioria das operações a serem desfeitas.</span><span class="sxs-lookup"><span data-stu-id="94647-156">Designer transactions can improve performance, reduce flicker caused by multiple updates during a process of operations, and enable most operations to be undone.</span></span>  
  
 <span data-ttu-id="94647-157">Operações longas que envolvem vários componentes podem gerar muitos eventos.</span><span class="sxs-lookup"><span data-stu-id="94647-157">Lengthy operations that involve multiple components can raise many events.</span></span> <span data-ttu-id="94647-158">Esses eventos podem causar efeitos colaterais, como cintilação ou degradação de desempenho.</span><span class="sxs-lookup"><span data-stu-id="94647-158">These events can cause side effects, such as flicker or degraded performance.</span></span> <span data-ttu-id="94647-159">Quando operando em vários componentes ao mesmo tempo, ou definindo várias propriedades em um único componente, você pode melhorar o desempenho executando essas alterações em uma transação.</span><span class="sxs-lookup"><span data-stu-id="94647-159">When operating on multiple components at one time, or setting multiple properties on a single component, you can improve performance by performing these changes within a transaction.</span></span> <span data-ttu-id="94647-160">Algumas operações de lidar com o <xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening> e <xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed> eventos e executar o trabalho somente quando uma transação não está em andamento.</span><span class="sxs-lookup"><span data-stu-id="94647-160">Some operations handle the <xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening> and <xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed> events and perform work only when a transaction is not in progress.</span></span> <span data-ttu-id="94647-161">Para obter mais informações sobre o uso de transações, consulte a documentação para <xref:System.ComponentModel.Design.DesignerTransaction>.</span><span class="sxs-lookup"><span data-stu-id="94647-161">For more information on using transactions, see the documentation for <xref:System.ComponentModel.Design.DesignerTransaction>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTransaction">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.DesignerTransaction CreateTransaction (string description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.Design.DesignerTransaction CreateTransaction(string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateTransaction (description As String) As DesignerTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Design::DesignerTransaction ^ CreateTransaction(System::String ^ description);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="description">
          <span data-ttu-id="94647-162">Um título ou uma descrição para a transação recém-criada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94647-162">A title or description for the newly created transaction.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94647-163">Cria um <see cref="T:System.ComponentModel.Design.DesignerTransaction" /> que pode encapsular sequências de eventos para melhorar o desempenho e habilitar a funcionalidade de suporte de desfazer e refazer, usando a descrição da transação especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94647-163">Creates a <see cref="T:System.ComponentModel.Design.DesignerTransaction" /> that can encapsulate event sequences to improve performance and enable undo and redo support functionality, using the specified transaction description.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="94647-164">Um novo <see cref="T:System.ComponentModel.Design.DesignerTransaction" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94647-164">A new <see cref="T:System.ComponentModel.Design.DesignerTransaction" />.</span>
          </span>
          <span data-ttu-id="94647-165">Quando você tiver concluído as etapas na sua transação, deverá chamar <see cref="M:System.ComponentModel.Design.DesignerTransaction.Commit" /> neste objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94647-165">When you have completed the steps in your transaction, you should call <see cref="M:System.ComponentModel.Design.DesignerTransaction.Commit" /> on this object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94647-166">Esse método cria um <xref:System.ComponentModel.Design.DesignerTransaction> que pode ser usada para encapsular uma série de operações.</span><span class="sxs-lookup"><span data-stu-id="94647-166">This method creates a <xref:System.ComponentModel.Design.DesignerTransaction> that can be used to encapsulate a series of operations.</span></span> <span data-ttu-id="94647-167">Transações designers podem melhorar o desempenho, reduzir a cintilação causada por várias atualizações durante o processo de operações e habilitar a maioria das operações a serem desfeitas.</span><span class="sxs-lookup"><span data-stu-id="94647-167">Designer transactions can improve performance, reduce flicker caused by multiple updates during a process of operations, and enable most operations to be undone.</span></span>  
  
 <span data-ttu-id="94647-168">Operações longas que envolvem vários componentes podem gerar muitos eventos.</span><span class="sxs-lookup"><span data-stu-id="94647-168">Lengthy operations that involve multiple components can raise many events.</span></span> <span data-ttu-id="94647-169">Esses eventos podem causar efeitos colaterais, como cintilação ou degradação de desempenho.</span><span class="sxs-lookup"><span data-stu-id="94647-169">These events can cause side effects, such as flicker or degraded performance.</span></span> <span data-ttu-id="94647-170">Quando operando em vários componentes ao mesmo tempo, ou definindo várias propriedades em um único componente, você pode melhorar o desempenho executando essas alterações em uma transação.</span><span class="sxs-lookup"><span data-stu-id="94647-170">When operating on multiple components at one time, or setting multiple properties on a single component, you can improve performance by performing these changes within a transaction.</span></span> <span data-ttu-id="94647-171">Algumas operações de lidar com o <xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening> e <xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed> eventos e executar o trabalho somente quando uma transação não está em andamento.</span><span class="sxs-lookup"><span data-stu-id="94647-171">Some operations handle the <xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening> and <xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed> events and perform work only when a transaction is not in progress.</span></span> <span data-ttu-id="94647-172">Para obter mais informações sobre o uso de transações, consulte a documentação para <xref:System.ComponentModel.Design.DesignerTransaction>.</span><span class="sxs-lookup"><span data-stu-id="94647-172">For more information on using transactions, see the documentation for <xref:System.ComponentModel.Design.DesignerTransaction>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deactivated">
      <MemberSignature Language="C#" Value="event EventHandler Deactivated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Deactivated" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IDesignerHost.Deactivated" />
      <MemberSignature Language="VB.NET" Value="Event Deactivated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Deactivated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="94647-173">Ocorre quando esse designer é desativado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94647-173">Occurs when this designer is deactivated.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94647-174">Um designer é desativado antes que ele não é mais exibido.</span><span class="sxs-lookup"><span data-stu-id="94647-174">A designer is deactivated just before it is no longer displayed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.Activated" />
      </Docs>
    </Member>
    <Member MemberName="DestroyComponent">
      <MemberSignature Language="C#" Value="public void DestroyComponent (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DestroyComponent(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerHost.DestroyComponent(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DestroyComponent (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DestroyComponent(System::ComponentModel::IComponent ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="94647-175">O componente a destruir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94647-175">The component to destroy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94647-176">Destrói o componente especificado e remove-o do contêiner de designer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94647-176">Destroys the specified component and removes it from the designer container.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type)" />
        <altmember cref="T:System.ComponentModel.IComponent" />
      </Docs>
    </Member>
    <Member MemberName="GetDesigner">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.IDesigner GetDesigner (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.Design.IDesigner GetDesigner(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDesigner (component As IComponent) As IDesigner" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Design::IDesigner ^ GetDesigner(System::ComponentModel::IComponent ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.IDesigner</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="94647-177">O <see cref="T:System.ComponentModel.IComponent" /> para o qual recuperar o designer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94647-177">The <see cref="T:System.ComponentModel.IComponent" /> to retrieve the designer for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94647-178">Obtém a instância do designer que contém o componente especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94647-178">Gets the designer instance that contains the specified component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="94647-179">Um <see cref="T:System.ComponentModel.Design.IDesigner" /> ou <see langword="null" /> se não houver nenhum designer para o componente especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94647-179">An <see cref="T:System.ComponentModel.Design.IDesigner" />, or <see langword="null" /> if there is no designer for the specified component.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerHost.GetType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType (typeName As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType(System::String ^ typeName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="94647-180">O nome do tipo a ser carregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94647-180">The name of the type to load.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94647-181">Obtém uma instância do nome do tipo totalmente qualificado especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94647-181">Gets an instance of the specified, fully qualified type name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="94647-182">O objeto de tipo para o nome do tipo especificado ou <see langword="null" />, se não for possível localizar o tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94647-182">The type object for the specified type name, or <see langword="null" /> if the type cannot be found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InTransaction">
      <MemberSignature Language="C#" Value="public bool InTransaction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InTransaction" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.IDesignerHost.InTransaction" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InTransaction As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InTransaction { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="94647-183">Obtém um valor que indica se o host do designer está atualmente em uma transação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94647-183">Gets a value indicating whether the designer host is currently in a transaction.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="94647-184">
            <see langword="true" /> Se uma transação está em andamento. Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94647-184">
              <see langword="true" /> if a transaction is in progress; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadComplete">
      <MemberSignature Language="C#" Value="event EventHandler LoadComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LoadComplete" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IDesignerHost.LoadComplete" />
      <MemberSignature Language="VB.NET" Value="Event LoadComplete As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ LoadComplete;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="94647-185">Ocorre quando este designer termina de carregar seu documento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94647-185">Occurs when this designer completes loading its document.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94647-186">Esse evento ocorre após a conclusão de um designer de carregar seu documento.</span><span class="sxs-lookup"><span data-stu-id="94647-186">This event occurs after a designer completes loading its document.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.Design.IDesignerHost.Loading" />
      </Docs>
    </Member>
    <Member MemberName="Loading">
      <MemberSignature Language="C#" Value="public bool Loading { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Loading" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.IDesignerHost.Loading" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Loading As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Loading { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="94647-187">Obtém um valor que indica se o host de designer está carregando o documento no momento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94647-187">Gets a value indicating whether the designer host is currently loading the document.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="94647-188">
            <see langword="true" /> Se o designer host atualmente é carregar o documento; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94647-188">
              <see langword="true" /> if the designer host is currently loading the document; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RootComponent">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IComponent RootComponent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IComponent RootComponent" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.IDesignerHost.RootComponent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootComponent As IComponent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::IComponent ^ RootComponent { System::ComponentModel::IComponent ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="94647-189">Obtém a instância da classe base usada como o componente raiz para o design atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94647-189">Gets the instance of the base class used as the root component for the current design.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="94647-190">A instância da classe de componente raiz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94647-190">The instance of the root component class.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94647-191">Essa classe base é normalmente um <xref:System.Windows.Forms.Form> ou <xref:System.Windows.Forms.UserControl> instância; ele define a classe para a qual estende a classe derivada do usuário.</span><span class="sxs-lookup"><span data-stu-id="94647-191">This base class is typically a <xref:System.Windows.Forms.Form> or <xref:System.Windows.Forms.UserControl> instance; it defines the class for which the user's derived class extends.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootComponentClassName">
      <MemberSignature Language="C#" Value="public string RootComponentClassName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RootComponentClassName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.IDesignerHost.RootComponentClassName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootComponentClassName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RootComponentClassName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="94647-192">Obtém o nome totalmente qualificado da classe que está sendo criada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94647-192">Gets the fully qualified name of the class being designed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="94647-193">O nome totalmente qualificado da classe base do componente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94647-193">The fully qualified name of the base component class.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionClosed">
      <MemberSignature Language="C#" Value="event System.ComponentModel.Design.DesignerTransactionCloseEventHandler TransactionClosed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.DesignerTransactionCloseEventHandler TransactionClosed" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" />
      <MemberSignature Language="VB.NET" Value="Event TransactionClosed As DesignerTransactionCloseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::DesignerTransactionCloseEventHandler ^ TransactionClosed;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerTransactionCloseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="94647-194">Adiciona um manipulador de eventos para o evento <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94647-194">Adds an event handler for the <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94647-195">Esse evento ocorre depois que uma transação é fechada.</span><span class="sxs-lookup"><span data-stu-id="94647-195">This event occurs after a transaction is closed.</span></span>  
  
 <span data-ttu-id="94647-196">Uma transação pode alterar algumas vezes vários valores.</span><span class="sxs-lookup"><span data-stu-id="94647-196">A transaction can sometimes change multiple values.</span></span> <span data-ttu-id="94647-197">Os métodos de transação fornecem uma maneira de impedir o desempenho e a cintilação problemas evitando processamento repetitivo.</span><span class="sxs-lookup"><span data-stu-id="94647-197">The transaction methods provide a way to prevent performance and flicker problems by avoiding repetitive processing.</span></span> <span data-ttu-id="94647-198">Esses métodos adiar o processamento até depois que a transação foi fechada.</span><span class="sxs-lookup"><span data-stu-id="94647-198">These methods defer processing until after the transaction has closed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerTransaction" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" />
      </Docs>
    </Member>
    <Member MemberName="TransactionClosing">
      <MemberSignature Language="C#" Value="event System.ComponentModel.Design.DesignerTransactionCloseEventHandler TransactionClosing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.DesignerTransactionCloseEventHandler TransactionClosing" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" />
      <MemberSignature Language="VB.NET" Value="Event TransactionClosing As DesignerTransactionCloseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::DesignerTransactionCloseEventHandler ^ TransactionClosing;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerTransactionCloseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="94647-199">Adiciona um manipulador de eventos para o evento <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94647-199">Adds an event handler for the <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94647-200">Esse evento ocorre somente antes de uma transação é concluída.</span><span class="sxs-lookup"><span data-stu-id="94647-200">This event occurs just before a transaction is completed.</span></span>  
  
 <span data-ttu-id="94647-201">Uma transação pode alterar algumas vezes vários valores.</span><span class="sxs-lookup"><span data-stu-id="94647-201">A transaction can sometimes change multiple values.</span></span> <span data-ttu-id="94647-202">Os métodos de transação fornecem uma maneira de impedir o desempenho e a cintilação problemas evitando processamento repetitivo.</span><span class="sxs-lookup"><span data-stu-id="94647-202">The transaction methods provide a way to prevent performance and flicker problems by avoiding repetitive processing.</span></span> <span data-ttu-id="94647-203">Esses métodos adiar o processamento até depois que a transação foi fechada.</span><span class="sxs-lookup"><span data-stu-id="94647-203">These methods defer processing until after the transaction has closed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerTransaction" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" />
      </Docs>
    </Member>
    <Member MemberName="TransactionDescription">
      <MemberSignature Language="C#" Value="public string TransactionDescription { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TransactionDescription" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.IDesignerHost.TransactionDescription" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TransactionDescription As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TransactionDescription { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="94647-204">Obtém a descrição da transação atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94647-204">Gets the description of the current transaction.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="94647-205">Uma descrição da transação atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94647-205">A description of the current transaction.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94647-206">A descrição é especificada com a descrição do último <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A>.</span><span class="sxs-lookup"><span data-stu-id="94647-206">The description is the last description specified with <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction" />
      </Docs>
    </Member>
    <Member MemberName="TransactionOpened">
      <MemberSignature Language="C#" Value="event EventHandler TransactionOpened;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TransactionOpened" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" />
      <MemberSignature Language="VB.NET" Value="Event TransactionOpened As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TransactionOpened;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="94647-207">Adiciona um manipulador de eventos para o evento <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94647-207">Adds an event handler for the <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94647-208">Esse evento ocorre quando uma transação foi iniciada.</span><span class="sxs-lookup"><span data-stu-id="94647-208">This event occurs when a transaction has begun.</span></span>  
  
 <span data-ttu-id="94647-209">Uma transação pode alterar algumas vezes vários valores.</span><span class="sxs-lookup"><span data-stu-id="94647-209">A transaction can sometimes change multiple values.</span></span> <span data-ttu-id="94647-210">Os métodos de transação fornecem uma maneira de impedir o desempenho e a cintilação problemas evitando processamento repetitivo.</span><span class="sxs-lookup"><span data-stu-id="94647-210">The transaction methods provide a way to prevent performance and flicker problems by avoiding repetitive processing.</span></span> <span data-ttu-id="94647-211">Esses métodos adiar o processamento até depois que a transação foi fechada.</span><span class="sxs-lookup"><span data-stu-id="94647-211">These methods defer processing until after the transaction has closed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerTransaction" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" />
      </Docs>
    </Member>
    <Member MemberName="TransactionOpening">
      <MemberSignature Language="C#" Value="event EventHandler TransactionOpening;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TransactionOpening" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" />
      <MemberSignature Language="VB.NET" Value="Event TransactionOpening As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TransactionOpening;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="94647-212">Adiciona um manipulador de eventos para o evento <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94647-212">Adds an event handler for the <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94647-213">Esse evento ocorre quando uma transação está prestes a começar.</span><span class="sxs-lookup"><span data-stu-id="94647-213">This event occurs when a transaction is about to begin.</span></span>  
  
 <span data-ttu-id="94647-214">Esse método permite que os clientes de designer do host executar operações antes de outros manipuladores são notificados de que uma transação foi iniciada.</span><span class="sxs-lookup"><span data-stu-id="94647-214">This method allows designer host clients to perform operations before other handlers are notified that a transaction has begun.</span></span> <span data-ttu-id="94647-215">O manipulador especificado é chamado apenas quando a primeira chamada para <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A> é feita.</span><span class="sxs-lookup"><span data-stu-id="94647-215">The specified handler is called only when the first call to <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A> is made.</span></span> <span data-ttu-id="94647-216">As chamadas subsequentes não gerar esse evento até que todos os objetos de transação tem sido descartados.</span><span class="sxs-lookup"><span data-stu-id="94647-216">Subsequent calls do not generate this event until all transaction objects have been disposed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerTransaction" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" />
      </Docs>
    </Member>
  </Members>
</Type>