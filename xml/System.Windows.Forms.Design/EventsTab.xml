<Type Name="EventsTab" FullName="System.Windows.Forms.Design.EventsTab">
  <TypeSignature Language="C#" Value="public class EventsTab : System.Windows.Forms.Design.PropertyTab" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventsTab extends System.Windows.Forms.Design.PropertyTab" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Design.EventsTab" />
  <TypeSignature Language="VB.NET" Value="Public Class EventsTab&#xA;Inherits PropertyTab" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventsTab : System::Windows::Forms::Design::PropertyTab" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Design.PropertyTab</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="9d77c-101">Fornece um <see cref="T:System.Windows.Forms.Design.PropertyTab" /> que pode exibir eventos de seleção e vinculação.</span><span class="sxs-lookup"><span data-stu-id="9d77c-101">Provides a <see cref="T:System.Windows.Forms.Design.PropertyTab" /> that can display events for selection and linking.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9d77c-102">O exemplo de código a seguir fornece um exemplo <xref:System.Windows.Forms.Design.EventsTab>.</span><span class="sxs-lookup"><span data-stu-id="9d77c-102">The following code example provides an example <xref:System.Windows.Forms.Design.EventsTab>.</span></span> <span data-ttu-id="9d77c-103">Quando selecionada, o <xref:System.Windows.Forms.Design.EventsTab> lista todos os eventos em um componente na ordem de tipo de delegado.</span><span class="sxs-lookup"><span data-stu-id="9d77c-103">When selected, the <xref:System.Windows.Forms.Design.EventsTab> lists any events on a component in order of delegate type.</span></span>  
  
 [!code-cpp[EventsTabExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/EventsTabExample/CPP/class1.cpp#1)]
 [!code-csharp[EventsTabExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/EventsTabExample/CS/class1.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventsTab (IServiceProvider sp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider sp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.EventsTab.#ctor(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sp As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventsTab(IServiceProvider ^ sp);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sp" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="sp"><span data-ttu-id="9d77c-104">Um <see cref="T:System.IServiceProvider" /> a ser usado.</span><span class="sxs-lookup"><span data-stu-id="9d77c-104">An <see cref="T:System.IServiceProvider" /> to use.</span></span></param>
        <summary><span data-ttu-id="9d77c-105">Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.Design.EventsTab" />.</span><span class="sxs-lookup"><span data-stu-id="9d77c-105">Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.EventsTab" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanExtend">
      <MemberSignature Language="C#" Value="public override bool CanExtend (object extendee);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanExtend(object extendee) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.EventsTab.CanExtend(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanExtend (extendee As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanExtend(System::Object ^ extendee);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extendee" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="extendee"><span data-ttu-id="9d77c-106">O objeto a ser testado para extensibilidade.</span><span class="sxs-lookup"><span data-stu-id="9d77c-106">The object to test for extensibility.</span></span></param>
        <summary><span data-ttu-id="9d77c-107">Obtém um valor que indica se o objeto especificado pode ser estendido.</span><span class="sxs-lookup"><span data-stu-id="9d77c-107">Gets a value indicating whether the specified object can be extended.</span></span></summary>
        <returns>
          <span data-ttu-id="9d77c-108"><see langword="true" /> se o objeto especificado puder ser estendido; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9d77c-108"><see langword="true" /> if the specified object can be extended; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultProperty">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.PropertyDescriptor GetDefaultProperty (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.PropertyDescriptor GetDefaultProperty(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.EventsTab.GetDefaultProperty(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDefaultProperty (obj As Object) As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::PropertyDescriptor ^ GetDefaultProperty(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="9d77c-109">O objeto do qual recuperar a propriedade padrão.</span><span class="sxs-lookup"><span data-stu-id="9d77c-109">The object to retrieve the default property of.</span></span></param>
        <summary><span data-ttu-id="9d77c-110">Obtém a propriedade padrão do objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="9d77c-110">Gets the default property from the specified object.</span></span></summary>
        <returns><span data-ttu-id="9d77c-111">Um <see cref="T:System.ComponentModel.PropertyDescriptor" /> que indica a propriedade padrão.</span><span class="sxs-lookup"><span data-stu-id="9d77c-111">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> indicating the default property.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetProperties">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9d77c-112">Obtém todas as propriedades da guia de eventos.</span><span class="sxs-lookup"><span data-stu-id="9d77c-112">Gets all the properties of the event tab.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.PropertyDescriptorCollection GetProperties (object component, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(object component, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.EventsTab.GetProperties(System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProperties (component As Object, attributes As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::Object ^ component, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="9d77c-113">O componente do qual as propriedades serão recuperadas.</span><span class="sxs-lookup"><span data-stu-id="9d77c-113">The component to retrieve the properties of.</span></span></param>
        <param name="attributes"><span data-ttu-id="9d77c-114">Uma matriz de <see cref="T:System.Attribute" /> que indica os atributos das propriedades do evento a serem recuperadas.</span><span class="sxs-lookup"><span data-stu-id="9d77c-114">An array of <see cref="T:System.Attribute" /> that indicates the attributes of the event properties to retrieve.</span></span></param>
        <summary><span data-ttu-id="9d77c-115">Obtém todas as propriedades da guia de eventos que correspondem aos atributos especificados.</span><span class="sxs-lookup"><span data-stu-id="9d77c-115">Gets all the properties of the event tab that match the specified attributes.</span></span></summary>
        <returns><span data-ttu-id="9d77c-116">Um <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> que contém as propriedades.</span><span class="sxs-lookup"><span data-stu-id="9d77c-116">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that contains the properties.</span></span> <span data-ttu-id="9d77c-117">Esse será um <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> vazio se o componente não implementar um serviço de evento.</span><span class="sxs-lookup"><span data-stu-id="9d77c-117">This will be an empty <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> if the component does not implement an event service.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d77c-118">As propriedades de guia de evento são determinadas das propriedades do evento retornadas do serviço de eventos do componente.</span><span class="sxs-lookup"><span data-stu-id="9d77c-118">The event tab properties are determined from the event properties returned from a component's event service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object component, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object component, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.EventsTab.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProperties (context As ITypeDescriptorContext, component As Object, attributes As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ component, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="9d77c-119">Um <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que pode ser usado para obter informações de contexto.</span><span class="sxs-lookup"><span data-stu-id="9d77c-119">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain context information.</span></span></param>
        <param name="component"><span data-ttu-id="9d77c-120">O componente do qual as propriedades serão recuperadas.</span><span class="sxs-lookup"><span data-stu-id="9d77c-120">The component to retrieve the properties of.</span></span></param>
        <param name="attributes"><span data-ttu-id="9d77c-121">Uma matriz do tipo <see cref="T:System.Attribute" /> que indica os atributos das propriedades de evento a serem recuperadas.</span><span class="sxs-lookup"><span data-stu-id="9d77c-121">An array of type <see cref="T:System.Attribute" /> that indicates the attributes of the event properties to retrieve.</span></span></param>
        <summary><span data-ttu-id="9d77c-122">Obtém todas as propriedades da guia de eventos que correspondem aos atributos e o contexto especificados.</span><span class="sxs-lookup"><span data-stu-id="9d77c-122">Gets all the properties of the event tab that match the specified attributes and context.</span></span></summary>
        <returns><span data-ttu-id="9d77c-123">Um <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> que contém as propriedades.</span><span class="sxs-lookup"><span data-stu-id="9d77c-123">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that contains the properties.</span></span> <span data-ttu-id="9d77c-124">Esse será um <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> vazio se o componente não implementar um serviço de evento.</span><span class="sxs-lookup"><span data-stu-id="9d77c-124">This will be an empty <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> if the component does not implement an event service.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HelpKeyword">
      <MemberSignature Language="C#" Value="public override string HelpKeyword { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpKeyword" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.EventsTab.HelpKeyword" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HelpKeyword As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HelpKeyword { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d77c-125">Obtém a palavra-chave de Ajuda para o guia.</span><span class="sxs-lookup"><span data-stu-id="9d77c-125">Gets the Help keyword for the tab.</span></span></summary>
        <value><span data-ttu-id="9d77c-126">A palavra-chave ajuda para a guia.</span><span class="sxs-lookup"><span data-stu-id="9d77c-126">The Help keyword for the tab.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TabName">
      <MemberSignature Language="C#" Value="public override string TabName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TabName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.EventsTab.TabName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property TabName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ TabName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d77c-127">Obtém o nome da guia.</span><span class="sxs-lookup"><span data-stu-id="9d77c-127">Gets the name of the tab.</span></span></summary>
        <value><span data-ttu-id="9d77c-128">O nome da guia.</span><span class="sxs-lookup"><span data-stu-id="9d77c-128">The name of the tab.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>