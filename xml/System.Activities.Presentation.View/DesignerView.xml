<Type Name="DesignerView" FullName="System.Activities.Presentation.View.DesignerView">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e457008a6e135843134178089a3ab3a2d76d2568" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36652326" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DesignerView : System.Windows.Controls.UserControl, System.Windows.Markup.IComponentConnector, System.Windows.Markup.IStyleConnector" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DesignerView extends System.Windows.Controls.UserControl implements class System.Windows.Markup.IComponentConnector, class System.Windows.Markup.IStyleConnector" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.View.DesignerView" />
  <TypeSignature Language="VB.NET" Value="Public Class DesignerView&#xA;Inherits UserControl&#xA;Implements IComponentConnector, IStyleConnector" />
  <TypeSignature Language="C++ CLI" Value="public ref class DesignerView : System::Windows::Controls::UserControl, System::Windows::Markup::IComponentConnector, System::Windows::Markup::IStyleConnector" />
  <TypeSignature Language="F#" Value="type DesignerView = class&#xA;    inherit UserControl&#xA;    interface IComponentConnector&#xA;    interface IStyleConnector" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.UserControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IComponentConnector</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Markup.IStyleConnector</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Fornece controles do WPF (Windows Presentation Foundation) para o modo de exibição de designer que representa a tela de fluxo de trabalho.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementa o <xref:System.Windows.Markup.IComponentConnector> e <xref:System.Windows.Markup.IStyleConnector> interfaces para fornecer suporte para elementos XAML nomeados e para anexar manipuladores de eventos a eles.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ActivitySchema">
      <MemberSignature Language="C#" Value="public System.Activities.Presentation.Model.ModelItem ActivitySchema { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.Model.ModelItem ActivitySchema" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.DesignerView.ActivitySchema" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActivitySchema As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Presentation::Model::ModelItem ^ ActivitySchema { System::Activities::Presentation::Model::ModelItem ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ActivitySchema : System.Activities.Presentation.Model.ModelItem" Usage="System.Activities.Presentation.View.DesignerView.ActivitySchema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o esquema de atividade.</summary>
        <value>O esquema de atividade.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivitySchemaProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ActivitySchemaProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ActivitySchemaProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.ActivitySchemaProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ActivitySchemaProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ActivitySchemaProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ActivitySchemaProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.View.DesignerView.ActivitySchemaProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Contém a propriedade de dependência que representa a propriedade <see cref="P:System.Activities.Presentation.View.DesignerView.ActivitySchema" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAnnotationCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand AddAnnotationCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand AddAnnotationCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.AddAnnotationCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AddAnnotationCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ AddAnnotationCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable AddAnnotationCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.AddAnnotationCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>O comando usado para adicionar anotação.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CollapseAllCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand CollapseAllCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand CollapseAllCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.CollapseAllCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CollapseAllCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ CollapseAllCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable CollapseAllCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.CollapseAllCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>O comando usado para recolher toda a interface do usuário para o elemento atual.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CollapseCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand CollapseCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand CollapseCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.CollapseCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CollapseCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ CollapseCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable CollapseCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.CollapseCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>O comando usado para recolher a interface do usuário para o elemento atual.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandMenuMode">
      <MemberSignature Language="C#" Value="see GetCommandMenuMode, and SetCommandMenuMode" />
      <MemberSignature Language="ILAsm" Value="see GetCommandMenuMode, and SetCommandMenuMode" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.DesignerView.CommandMenuMode" />
      <MemberSignature Language="VB.NET" Value="see GetCommandMenuMode, and SetCommandMenuMode" />
      <MemberSignature Language="F#" Value="see GetCommandMenuMode, and SetCommandMenuMode" Usage="see GetCommandMenuMode, and SetCommandMenuMode" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandMenuModeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CommandMenuModeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CommandMenuModeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.CommandMenuModeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommandMenuModeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CommandMenuModeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CommandMenuModeProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.View.DesignerView.CommandMenuModeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Contém a propriedade de dependência que representa a propriedade <see cref="T:System.Activities.Presentation.View.CommandMenuMode" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Fornece tipos para dar suporte ao sistema de entrada da WPF (Windows Presentation Foundation).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommitCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand CommitCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand CommitCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.CommitCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommitCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ CommitCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable CommitCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.CommitCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>O comando usado para atualizar o valor de origem em um <see cref="T:System.Windows.Data.BindingExpression" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.Activities.Presentation.EditingContext Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.EditingContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.DesignerView.Context" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Context As EditingContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Presentation::EditingContext ^ Context { System::Activities::Presentation::EditingContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.Activities.Presentation.EditingContext" Usage="System.Activities.Presentation.View.DesignerView.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.EditingContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define uma coleção de serviços compartilhados entre todos os elementos contidos no designer.</summary>
        <value>O contexto.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode publicar e serviços por meio do contexto de solicitação.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyAsImageCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand CopyAsImageCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand CopyAsImageCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.CopyAsImageCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CopyAsImageCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ CopyAsImageCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable CopyAsImageCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.CopyAsImageCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>O <see cref="T:System.Windows.Input.RoutedCommand" /> usado para copiar a superfície de design de fluxo de trabalho atual como uma captura de tela e colocá-la na área de transferência.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Fornece tipos para dar suporte ao sistema de entrada da WPF (Windows Presentation Foundation).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand CopyCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand CopyCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.CopyCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CopyCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ CopyCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable CopyCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.CopyCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>O comando usado para copiar.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateArgumentCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand CreateArgumentCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand CreateArgumentCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.CreateArgumentCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CreateArgumentCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ CreateArgumentCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable CreateArgumentCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.CreateArgumentCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>O comando usado para criar um novo argumento.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateVariableCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand CreateVariableCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand CreateVariableCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.CreateVariableCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CreateVariableCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ CreateVariableCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable CreateVariableCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.CreateVariableCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>O comando usado para criar uma nova variável para a atividade selecionada no momento.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateWorkflowElementCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand CreateWorkflowElementCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand CreateWorkflowElementCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.CreateWorkflowElementCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CreateWorkflowElementCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ CreateWorkflowElementCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable CreateWorkflowElementCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.CreateWorkflowElementCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>O comando usado para criar um novo <see cref="T:System.Activities.Presentation.WorkflowViewElement" /> na superfície [!INCLUDE[wfd1](~/includes/wfd1-md.md)] atual ao arrastar um item de fluxo de trabalho da caixa de ferramentas para a superfície de designer.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomMenuItemsSeparatorCommand">
      <MemberSignature Language="C#" Value="public const string CustomMenuItemsSeparatorCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string CustomMenuItemsSeparatorCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.CustomMenuItemsSeparatorCommand" />
      <MemberSignature Language="VB.NET" Value="Public Const CustomMenuItemsSeparatorCommand As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ CustomMenuItemsSeparatorCommand;" />
      <MemberSignature Language="F#" Value="val mutable CustomMenuItemsSeparatorCommand : string" Usage="System.Activities.Presentation.View.DesignerView.CustomMenuItemsSeparatorCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Uma constante de cadeia de caracteres que contém o GUID para o separador de itens de menu personalizado.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CutCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand CutCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand CutCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.CutCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CutCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ CutCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable CutCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.CutCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>O comando usado para recortar.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CycleThroughDesignerCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand CycleThroughDesignerCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand CycleThroughDesignerCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.CycleThroughDesignerCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CycleThroughDesignerCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ CycleThroughDesignerCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable CycleThroughDesignerCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.CycleThroughDesignerCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>O comando usado para alternar os vários elementos de interface do usuário da superfície [!INCLUDE[wfd1](~/includes/wfd1-md.md)] atual.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAllAnnotationCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand DeleteAllAnnotationCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand DeleteAllAnnotationCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.DeleteAllAnnotationCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DeleteAllAnnotationCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ DeleteAllAnnotationCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable DeleteAllAnnotationCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.DeleteAllAnnotationCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>O comando usado para excluir todas as anotações.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAnnotationCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand DeleteAnnotationCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand DeleteAnnotationCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.DeleteAnnotationCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DeleteAnnotationCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ DeleteAnnotationCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable DeleteAnnotationCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.DeleteAnnotationCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>O comando usado para excluir uma anotação especificada.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteBreakpointCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand DeleteBreakpointCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand DeleteBreakpointCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.DeleteBreakpointCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DeleteBreakpointCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ DeleteBreakpointCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable DeleteBreakpointCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.DeleteBreakpointCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>O comando usado para excluir o ponto de interrupção definido na atividade atual.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableBreakpointCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand DisableBreakpointCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand DisableBreakpointCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.DisableBreakpointCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DisableBreakpointCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ DisableBreakpointCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable DisableBreakpointCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.DisableBreakpointCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>O comando usado para desabilitar o ponto de interrupção definido na atividade atual.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EditAnnotationCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand EditAnnotationCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand EditAnnotationCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.EditAnnotationCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EditAnnotationCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ EditAnnotationCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable EditAnnotationCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.EditAnnotationCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>O comando usado para editar a anotação.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableBreakpointCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand EnableBreakpointCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand EnableBreakpointCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.EnableBreakpointCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EnableBreakpointCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ EnableBreakpointCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable EnableBreakpointCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.EnableBreakpointCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>O comando usado para habilitar o ponto de interrupção na atividade atual.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpandAllCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand ExpandAllCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand ExpandAllCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.ExpandAllCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ExpandAllCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ ExpandAllCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable ExpandAllCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.ExpandAllCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>O comando usado para expandir a lista para o elemento atual.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpandCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand ExpandCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand ExpandCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.ExpandCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ExpandCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ ExpandCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable ExpandCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.ExpandCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>O comando usado para navegar para o filho selecionado de uma atividade de composição e expandi-la para preencher a tela inteira da superfície [!INCLUDE[wfd1](~/includes/wfd1-md.md)]. O comando de menu de contexto <paramref name="View full screen" /> inicia essa ação.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpandInPlaceCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand ExpandInPlaceCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand ExpandInPlaceCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.ExpandInPlaceCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ExpandInPlaceCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ ExpandInPlaceCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable ExpandInPlaceCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.ExpandInPlaceCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>O comando usado para expandir a lista para o elemento atual existente na exibição atual.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FitToScreenCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand FitToScreenCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand FitToScreenCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.FitToScreenCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FitToScreenCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ FitToScreenCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable FitToScreenCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.FitToScreenCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>O comando usado para ajustar o elemento atual à tela.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlushState">
      <MemberSignature Language="C#" Value="public void FlushState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FlushState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.DesignerView.FlushState" />
      <MemberSignature Language="VB.NET" Value="Public Sub FlushState ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FlushState();" />
      <MemberSignature Language="F#" Value="member this.FlushState : unit -&gt; unit" Usage="designerView.FlushState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Salva o estado associado com o modo de exibição de designer atual.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusedViewElement">
      <MemberSignature Language="C#" Value="public System.Activities.Presentation.WorkflowViewElement FocusedViewElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.WorkflowViewElement FocusedViewElement" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.DesignerView.FocusedViewElement" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FocusedViewElement As WorkflowViewElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Presentation::WorkflowViewElement ^ FocusedViewElement { System::Activities::Presentation::WorkflowViewElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FocusedViewElement : System.Activities.Presentation.WorkflowViewElement" Usage="System.Activities.Presentation.View.DesignerView.FocusedViewElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.WorkflowViewElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica qual elemento de exibição tem o foco.</summary>
        <value>O modo de exibição que tem o foco.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusedViewElementProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FocusedViewElementProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FocusedViewElementProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.FocusedViewElementProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FocusedViewElementProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FocusedViewElementProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FocusedViewElementProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.View.DesignerView.FocusedViewElementProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Contém a propriedade de dependência que representa a propriedade <see cref="P:System.Activities.Presentation.View.DesignerView.FocusedViewElement" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCommandMenuMode">
      <MemberSignature Language="C#" Value="public static System.Activities.Presentation.View.CommandMenuMode GetCommandMenuMode (System.Windows.DependencyObject obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.Presentation.View.CommandMenuMode GetCommandMenuMode(class System.Windows.DependencyObject obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.DesignerView.GetCommandMenuMode(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCommandMenuMode (obj As DependencyObject) As CommandMenuMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::Presentation::View::CommandMenuMode ^ GetCommandMenuMode(System::Windows::DependencyObject ^ obj);" />
      <MemberSignature Language="F#" Value="static member GetCommandMenuMode : System.Windows.DependencyObject -&gt; System.Activities.Presentation.View.CommandMenuMode" Usage="System.Activities.Presentation.View.DesignerView.GetCommandMenuMode obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.View.CommandMenuMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="obj">O objeto cujo modo de comando de menu é recuperado.</param>
        <summary>Recupera modo de menu de comando do objeto especificado.</summary>
        <returns>O modo de menu de comando para o <paramref name="obj" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GoToParentCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand GoToParentCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand GoToParentCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.GoToParentCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GoToParentCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ GoToParentCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable GoToParentCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.GoToParentCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>O comando usado para navegar até a atividade pai da atividade filho selecionada e expandi-la para preencher a tela inteira da superfície [!INCLUDE[wfd1](~/includes/wfd1-md.md)]. O comando de menu de contexto <paramref name="View parent" /> inicia essa ação.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HideAllAnnotationCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand HideAllAnnotationCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand HideAllAnnotationCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.HideAllAnnotationCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HideAllAnnotationCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ HideAllAnnotationCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable HideAllAnnotationCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.HideAllAnnotationCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>O comando usado para ocultar todas as anotações.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeComponent">
      <MemberSignature Language="C#" Value="public void InitializeComponent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeComponent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.DesignerView.InitializeComponent" />
      <MemberSignature Language="VB.NET" Value="Public Sub InitializeComponent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InitializeComponent();" />
      <MemberSignature Language="F#" Value="abstract member InitializeComponent : unit -&gt; unit&#xA;override this.InitializeComponent : unit -&gt; unit" Usage="designerView.InitializeComponent " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IComponentConnector.InitializeComponent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CodeDom.Compiler.GeneratedCode("PresentationBuildTasks", "4.0.0.0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerNonUserCode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inicializa o controle.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InPanModeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty InPanModeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty InPanModeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.InPanModeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InPanModeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ InPanModeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable InPanModeProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.View.DesignerView.InPanModeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A propriedade InPanMode.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertBreakpointCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand InsertBreakpointCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand InsertBreakpointCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.InsertBreakpointCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InsertBreakpointCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ InsertBreakpointCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable InsertBreakpointCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.InsertBreakpointCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>O comando usado para definir um ponto de interrupção na atividade atual.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMultipleSelectionMode">
      <MemberSignature Language="C#" Value="public bool IsMultipleSelectionMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMultipleSelectionMode" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.DesignerView.IsMultipleSelectionMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMultipleSelectionMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMultipleSelectionMode { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMultipleSelectionMode : bool" Usage="System.Activities.Presentation.View.DesignerView.IsMultipleSelectionMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se o elemento está no modo de seleção múltipla.</summary>
        <value>
          <see langword="true" /> Se o <see cref="T:System.Activities.Presentation.View.DesignerView" /> elemento está no modo de seleção de vários; caso contrário, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se você mantenha pressionada a tecla CTRL ou SHIFT e seleciona mais de um elemento, isso é `true`.  Se apenas um elemento estiver selecionado, isso é `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.DesignerView.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool with get, set" Usage="System.Activities.Presentation.View.DesignerView.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Determina se o <see cref="T:System.Activities.Presentation.View.DesignerView" /> é somente leitura.</summary>
        <value>
          <see langword="true" /> Se o <see cref="T:System.Activities.Presentation.View.DesignerView" /> é somente leitura; caso contrário, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnlyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsReadOnlyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsReadOnlyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.IsReadOnlyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsReadOnlyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsReadOnlyProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsReadOnlyProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.View.DesignerView.IsReadOnlyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Contém a propriedade de dependência que representa a propriedade <see cref="P:System.Activities.Presentation.View.DesignerView.IsReadOnly" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeRootDesigner">
      <MemberSignature Language="C#" Value="public void MakeRootDesigner (System.Activities.Presentation.Model.ModelItem modelItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MakeRootDesigner(class System.Activities.Presentation.Model.ModelItem modelItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.DesignerView.MakeRootDesigner(System.Activities.Presentation.Model.ModelItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MakeRootDesigner(System::Activities::Presentation::Model::ModelItem ^ modelItem);" />
      <MemberSignature Language="F#" Value="member this.MakeRootDesigner : System.Activities.Presentation.Model.ModelItem -&gt; unit" Usage="designerView.MakeRootDesigner modelItem" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelItem" Type="System.Activities.Presentation.Model.ModelItem" />
      </Parameters>
      <Docs>
        <param name="modelItem">O <see cref="T:System.Activities.Presentation.Model.ModelItem" /> que se torna o designer raiz.</param>
        <summary>Posiciona um item de modelo especificado na raiz (superior) de uma hierarquia de designers.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuItemStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Style MenuItemStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Style MenuItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.DesignerView.MenuItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property MenuItemStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Style ^ MenuItemStyle { System::Windows::Style ^ get(); void set(System::Windows::Style ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MenuItemStyle : System.Windows.Style with get, set" Usage="System.Activities.Presentation.View.DesignerView.MenuItemStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o estilo do item de menu.</summary>
        <value>O estilo do item de menu.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuItemStyleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MenuItemStyleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MenuItemStyleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.MenuItemStyleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MenuItemStyleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MenuItemStyleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable MenuItemStyleProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.View.DesignerView.MenuItemStyleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Contém a propriedade de dependência que representa a propriedade <see cref="P:System.Activities.Presentation.View.DesignerView.MenuItemStyle" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuSeparatorStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Style MenuSeparatorStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Style MenuSeparatorStyle" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.DesignerView.MenuSeparatorStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property MenuSeparatorStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Style ^ MenuSeparatorStyle { System::Windows::Style ^ get(); void set(System::Windows::Style ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MenuSeparatorStyle : System.Windows.Style with get, set" Usage="System.Activities.Presentation.View.DesignerView.MenuSeparatorStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o estilo do separador de menu.</summary>
        <value>O estilo do separador de menu.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuSeparatorStyleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MenuSeparatorStyleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MenuSeparatorStyleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.MenuSeparatorStyleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MenuSeparatorStyleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MenuSeparatorStyleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable MenuSeparatorStyleProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.View.DesignerView.MenuSeparatorStyleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Contém a propriedade de dependência que representa a propriedade <see cref="P:System.Activities.Presentation.View.DesignerView.MenuSeparatorStyle" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveFocusCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand MoveFocusCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand MoveFocusCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.MoveFocusCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MoveFocusCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ MoveFocusCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable MoveFocusCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.MoveFocusCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>O comando usado para mover o foco.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnContextMenuOpening">
      <MemberSignature Language="C#" Value="protected override void OnContextMenuOpening (System.Windows.Controls.ContextMenuEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnContextMenuOpening(class System.Windows.Controls.ContextMenuEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.DesignerView.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnContextMenuOpening (e As ContextMenuEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnContextMenuOpening(System::Windows::Controls::ContextMenuEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnContextMenuOpening : System.Windows.Controls.ContextMenuEventArgs -&gt; unit" Usage="designerView.OnContextMenuOpening e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.ContextMenuEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Os dados do evento.</param>
        <summary>Aciona o evento ContextMenuOpening.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInitialized">
      <MemberSignature Language="C#" Value="protected override void OnInitialized (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnInitialized(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.DesignerView.OnInitialized(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnInitialized (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnInitialized(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInitialized : EventArgs -&gt; unit" Usage="designerView.OnInitialized e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Os dados do evento.</param>
        <summary>Manipula o evento <see cref="E:System.Windows.FrameworkElement.Initialized" /> chamando a implementação da classe base <see cref="T:System.Windows.Controls.UserControl" />, adicionando um manipulador de eventos para o evento roteado <see cref="E:System.Windows.UIElement.GotKeyboardFocus" /> e configurando a cor de primeiro plano para a modo de exibição de designer.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.DesignerView.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="designerView.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Dados sobre o evento.</param>
        <summary>Aciona o evento OnKeyDown.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragOver">
      <MemberSignature Language="C#" Value="protected override void OnPreviewDragOver (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreviewDragOver(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.DesignerView.OnPreviewDragOver(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPreviewDragOver (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPreviewDragOver(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreviewDragOver : System.Windows.DragEventArgs -&gt; unit" Usage="designerView.OnPreviewDragOver e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Os dados do evento.</param>
        <summary>Invocado quando um evento anexado <see cref="E:System.Windows.DragDrop.PreviewDragOver" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="protected override void OnPreviewMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreviewMouseLeftButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.DesignerView.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPreviewMouseLeftButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPreviewMouseLeftButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreviewMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="designerView.OnPreviewMouseLeftButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Os dados do evento.</param>
        <summary>Chamado quando um evento PreviewMouseLeftButtonDown ocorre.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseWheel">
      <MemberSignature Language="C#" Value="protected override void OnPreviewMouseWheel (System.Windows.Input.MouseWheelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreviewMouseWheel(class System.Windows.Input.MouseWheelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.DesignerView.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPreviewMouseWheel (e As MouseWheelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPreviewMouseWheel(System::Windows::Input::MouseWheelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreviewMouseWheel : System.Windows.Input.MouseWheelEventArgs -&gt; unit" Usage="designerView.OnPreviewMouseWheel e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseWheelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">O <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento PreviewMouseWheel.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse evento é invocado quando sem tratamento <xref:System.Windows.Input.Mouse.PreviewMouseWheel> evento anexado atinge um elemento em sua rota que é derivada dessa classe. Substitua este método para adicionar a manipulação de classe para esse evento. Se a tecla CTRL for pressionada quando esse evento é processado, o modo é ajustado in ou out, com base no movimento da roda do mouse.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnReferenceUpdated">
      <MemberSignature Language="C#" Value="public void OnReferenceUpdated (System.Reflection.AssemblyName updatedReference, bool isAdded);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OnReferenceUpdated(class System.Reflection.AssemblyName updatedReference, bool isAdded) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.DesignerView.OnReferenceUpdated(System.Reflection.AssemblyName,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnReferenceUpdated (updatedReference As AssemblyName, isAdded As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnReferenceUpdated(System::Reflection::AssemblyName ^ updatedReference, bool isAdded);" />
      <MemberSignature Language="F#" Value="member this.OnReferenceUpdated : System.Reflection.AssemblyName * bool -&gt; unit" Usage="designerView.OnReferenceUpdated (updatedReference, isAdded)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="updatedReference" Type="System.Reflection.AssemblyName" />
        <Parameter Name="isAdded" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="updatedReference">O assembly referenciado que é adicionado ou removido.</param>
        <param name="isAdded">
          <see langword="true" /> se a referência de assembly é adicionada; <see langword="false" /> se a referência de assembly é removida.</param>
        <summary>Atualiza a lista de namespaces importados com base em se o assembly referenciado especificado é adicionado ou removido.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o assembly referenciado é adicionado, os namespaces dos tipos encontrados no assembly são adicionados à lista de namespaces importados. Se o assembly referenciado é removido, os namespaces dos tipos encontrados no assembly serão removidos da lista de namespaces importados.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasteCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand PasteCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand PasteCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.PasteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PasteCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ PasteCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable PasteCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.PasteCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>O comando usado para colar.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedoCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand RedoCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand RedoCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.RedoCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RedoCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ RedoCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable RedoCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.RedoCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>O comando usado para refazer uma operação.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterViewElement">
      <MemberSignature Language="C#" Value="public void RegisterViewElement (System.Activities.Presentation.WorkflowViewElement viewElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterViewElement(class System.Activities.Presentation.WorkflowViewElement viewElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.DesignerView.RegisterViewElement(System.Activities.Presentation.WorkflowViewElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterViewElement (viewElement As WorkflowViewElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterViewElement(System::Activities::Presentation::WorkflowViewElement ^ viewElement);" />
      <MemberSignature Language="F#" Value="member this.RegisterViewElement : System.Activities.Presentation.WorkflowViewElement -&gt; unit" Usage="designerView.RegisterViewElement viewElement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewElement" Type="System.Activities.Presentation.WorkflowViewElement" />
      </Parameters>
      <Docs>
        <param name="viewElement">O elemento de exibição do fluxo de trabalho.</param>
        <summary>Registra um elemento de exibição.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetZoomCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand ResetZoomCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand ResetZoomCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.ResetZoomCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ResetZoomCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ ResetZoomCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable ResetZoomCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.ResetZoomCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>O comando usado para redefinir o zoom.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RestoreCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand RestoreCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand RestoreCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.RestoreCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RestoreCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ RestoreCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable RestoreCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.RestoreCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>O comando usado para restaurar.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RootDesigner">
      <MemberSignature Language="C#" Value="public System.Windows.UIElement RootDesigner { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.UIElement RootDesigner" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.DesignerView.RootDesigner" />
      <MemberSignature Language="VB.NET" Value="Public Property RootDesigner As UIElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::UIElement ^ RootDesigner { System::Windows::UIElement ^ get(); void set(System::Windows::UIElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RootDesigner : System.Windows.UIElement with get, set" Usage="System.Activities.Presentation.View.DesignerView.RootDesigner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.UIElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um <see cref="T:System.Windows.UIElement" /> que é a representação da interface do usuário da raiz da árvore modelo atual.</summary>
        <value>O elemento raiz.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chamar o <xref:System.Activities.Presentation.View.DesignerView.MakeRootDesigner%2A> método para definir essa propriedade um <xref:System.Activities.Presentation.WorkflowViewElement> representação de um <xref:System.Activities.Presentation.Model.ModelItem>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootDesignerProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty RootDesignerProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty RootDesignerProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.RootDesignerProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RootDesignerProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ RootDesignerProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable RootDesignerProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.View.DesignerView.RootDesignerProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Contém a propriedade de dependência que representa a propriedade <see cref="P:System.Activities.Presentation.View.DesignerView.RootDesigner" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveAsImageCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand SaveAsImageCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand SaveAsImageCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.SaveAsImageCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SaveAsImageCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ SaveAsImageCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable SaveAsImageCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.SaveAsImageCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>O comando usado para salvar a superfície de design de fluxo de trabalho atual como uma imagem.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectAllCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand SelectAllCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand SelectAllCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.SelectAllCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectAllCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ SelectAllCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable SelectAllCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.SelectAllCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>O comando usado para selecionar todos os objetos na exibição.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCommandMenuMode">
      <MemberSignature Language="C#" Value="public static void SetCommandMenuMode (System.Windows.DependencyObject obj, System.Activities.Presentation.View.CommandMenuMode value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetCommandMenuMode(class System.Windows.DependencyObject obj, class System.Activities.Presentation.View.CommandMenuMode value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.DesignerView.SetCommandMenuMode(System.Windows.DependencyObject,System.Activities.Presentation.View.CommandMenuMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetCommandMenuMode (obj As DependencyObject, value As CommandMenuMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetCommandMenuMode(System::Windows::DependencyObject ^ obj, System::Activities::Presentation::View::CommandMenuMode ^ value);" />
      <MemberSignature Language="F#" Value="static member SetCommandMenuMode : System.Windows.DependencyObject * System.Activities.Presentation.View.CommandMenuMode -&gt; unit" Usage="System.Activities.Presentation.View.DesignerView.SetCommandMenuMode (obj, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Activities.Presentation.View.CommandMenuMode" />
      </Parameters>
      <Docs>
        <param name="obj">O objeto de dependência em que o modo de menu de comando está definido.</param>
        <param name="value">O valor do modo de menu de comando a ser definido.</param>
        <summary>Define o modo de menu de comando em um objeto de dependência especificado.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldCollapseAll">
      <MemberSignature Language="C#" Value="public bool ShouldCollapseAll { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShouldCollapseAll" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.DesignerView.ShouldCollapseAll" />
      <MemberSignature Language="VB.NET" Value="Public Property ShouldCollapseAll As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShouldCollapseAll { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShouldCollapseAll : bool with get, set" Usage="System.Activities.Presentation.View.DesignerView.ShouldCollapseAll" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se o modo de exibição de design deve recolher todos os elementos filho visíveis.</summary>
        <value>
          <see langword="true" /> se o <see cref="T:System.Activities.Presentation.View.DesignerView" /> for somente leitura; caso contrário, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldExpandAll">
      <MemberSignature Language="C#" Value="public bool ShouldExpandAll { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShouldExpandAll" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.DesignerView.ShouldExpandAll" />
      <MemberSignature Language="VB.NET" Value="Public Property ShouldExpandAll As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShouldExpandAll { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShouldExpandAll : bool with get, set" Usage="System.Activities.Presentation.View.DesignerView.ShouldExpandAll" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se um elemento deve expandir uma lista inteira.</summary>
        <value>
          <see langword="true" /> Se o <see cref="T:System.Activities.Presentation.View.DesignerView" /> elemento deve expandir uma lista inteira; caso contrário, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowAllAnnotationCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand ShowAllAnnotationCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand ShowAllAnnotationCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.ShowAllAnnotationCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ShowAllAnnotationCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ ShowAllAnnotationCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable ShowAllAnnotationCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.ShowAllAnnotationCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>O comando usado para mostrar todas as anotações.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IComponentConnector.Connect">
      <MemberSignature Language="C#" Value="void IComponentConnector.Connect (int connectionId, object target);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IComponentConnector.Connect(int32 connectionId, object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.DesignerView.System#Windows#Markup#IComponentConnector#Connect(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Connect (connectionId As Integer, target As Object) Implements IComponentConnector.Connect" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IComponentConnector.Connect(int connectionId, System::Object ^ target) = System::Windows::Markup::IComponentConnector::Connect;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IComponentConnector.Connect(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CodeDom.Compiler.GeneratedCode("PresentationBuildTasks", "4.0.0.0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerNonUserCode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionId" Type="System.Int32" />
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="connectionId">O ID da conexão.</param>
        <param name="target">O destino.</param>
        <summary>Anexa eventos e nomes ao conteúdo compilado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa interface destina-se ao uso somente pelo compilador de marcação.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IStyleConnector.Connect">
      <MemberSignature Language="C#" Value="void IStyleConnector.Connect (int connectionId, object target);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IStyleConnector.Connect(int32 connectionId, object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.DesignerView.System#Windows#Markup#IStyleConnector#Connect(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Connect (connectionId As Integer, target As Object) Implements IStyleConnector.Connect" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IStyleConnector.Connect(int connectionId, System::Object ^ target) = System::Windows::Markup::IStyleConnector::Connect;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IStyleConnector.Connect(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CodeDom.Compiler.GeneratedCode("PresentationBuildTasks", "4.0.0.0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerNonUserCode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionId" Type="System.Int32" />
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="connectionId">O ID da conexão.</param>
        <param name="target">O destino.</param>
        <summary>Chama o StyleBamlReader para anexar eventos em EventSetters e Templates no conteúdo compilado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa classe destina-se ao uso somente pelo compilador de marcação.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToggleArgumentDesignerCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand ToggleArgumentDesignerCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand ToggleArgumentDesignerCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.ToggleArgumentDesignerCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ToggleArgumentDesignerCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ ToggleArgumentDesignerCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable ToggleArgumentDesignerCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.ToggleArgumentDesignerCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>O comando usado para mostrar ou ocultar o designer de argumento. Clicar no botão <paramref name="Arguments" /> na superfície [!INCLUDE[wfd1](~/includes/wfd1-md.md)] inicia esta ação.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir demonstra como vincular essa propriedade a um botão.  
  
```xaml  
<Button xmlns:sapv="clr-namespace:System.Activities.Presentation.View;assembly=System.Activities.Presentation" Command="sapv:DesignerView.ToggleArgumentDesignerCommand">Show/Hide Arguments</Button>  
```  
  
 O exemplo de código a seguir demonstra como chamar esta propriedade em c#.  
  
```csharp  
DesignerView dView = des.Context.Services.GetService<DesignerView>();  
((RoutedCommand)DesignerView.ToggleArgumentDesignerCommand).Execute(null, dView);  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToggleImportsDesignerCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand ToggleImportsDesignerCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand ToggleImportsDesignerCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.ToggleImportsDesignerCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ToggleImportsDesignerCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ ToggleImportsDesignerCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable ToggleImportsDesignerCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.ToggleImportsDesignerCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>O comando usado para ativar/desativar o designer de importações.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToggleMiniMapCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand ToggleMiniMapCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand ToggleMiniMapCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.ToggleMiniMapCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ToggleMiniMapCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ ToggleMiniMapCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable ToggleMiniMapCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.ToggleMiniMapCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>O comando usado para mostrar ou ocultar o controle MiniMap na superfície [!INCLUDE[wfd1](~/includes/wfd1-md.md)].</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToggleSelectionCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand ToggleSelectionCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand ToggleSelectionCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.ToggleSelectionCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ToggleSelectionCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ ToggleSelectionCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable ToggleSelectionCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.ToggleSelectionCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>O comando usado para alternar a seleção.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToggleVariableDesignerCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand ToggleVariableDesignerCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand ToggleVariableDesignerCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.ToggleVariableDesignerCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ToggleVariableDesignerCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ ToggleVariableDesignerCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable ToggleVariableDesignerCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.ToggleVariableDesignerCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>O comando usado para mostrar ou ocultar o designer de variável. Clicar no botão <paramref name="Variables" /> na superfície [!INCLUDE[wfd1](~/includes/wfd1-md.md)] inicia esta ação.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UndoCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand UndoCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand UndoCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.UndoCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UndoCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ UndoCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable UndoCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.UndoCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>O comando usado para desfazer a última operação no buffer.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterViewElement">
      <MemberSignature Language="C#" Value="public void UnregisterViewElement (System.Activities.Presentation.WorkflowViewElement viewElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnregisterViewElement(class System.Activities.Presentation.WorkflowViewElement viewElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.DesignerView.UnregisterViewElement(System.Activities.Presentation.WorkflowViewElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnregisterViewElement (viewElement As WorkflowViewElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnregisterViewElement(System::Activities::Presentation::WorkflowViewElement ^ viewElement);" />
      <MemberSignature Language="F#" Value="member this.UnregisterViewElement : System.Activities.Presentation.WorkflowViewElement -&gt; unit" Usage="designerView.UnregisterViewElement viewElement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewElement" Type="System.Activities.Presentation.WorkflowViewElement" />
      </Parameters>
      <Docs>
        <param name="viewElement">O elemento de exibição do fluxo de trabalho.</param>
        <summary>Cancele o registro de um elemento de exibição.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkflowShellBarItemVisibility">
      <MemberSignature Language="C#" Value="public System.Activities.Presentation.View.ShellBarItemVisibility WorkflowShellBarItemVisibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Activities.Presentation.View.ShellBarItemVisibility WorkflowShellBarItemVisibility" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.DesignerView.WorkflowShellBarItemVisibility" />
      <MemberSignature Language="VB.NET" Value="Public Property WorkflowShellBarItemVisibility As ShellBarItemVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Presentation::View::ShellBarItemVisibility WorkflowShellBarItemVisibility { System::Activities::Presentation::View::ShellBarItemVisibility get(); void set(System::Activities::Presentation::View::ShellBarItemVisibility value); };" />
      <MemberSignature Language="F#" Value="member this.WorkflowShellBarItemVisibility : System.Activities.Presentation.View.ShellBarItemVisibility with get, set" Usage="System.Activities.Presentation.View.DesignerView.WorkflowShellBarItemVisibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.View.ShellBarItemVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica o tipo de visibilidade que a barra de shell do fluxo de trabalho tem.</summary>
        <value>O valor que indica o tipo de visibilidade de barra de shell do fluxo de trabalho.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkflowShellHeaderItemsVisibility">
      <MemberSignature Language="C#" Value="public System.Activities.Presentation.View.ShellHeaderItemsVisibility WorkflowShellHeaderItemsVisibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Activities.Presentation.View.ShellHeaderItemsVisibility WorkflowShellHeaderItemsVisibility" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.DesignerView.WorkflowShellHeaderItemsVisibility" />
      <MemberSignature Language="VB.NET" Value="Public Property WorkflowShellHeaderItemsVisibility As ShellHeaderItemsVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Presentation::View::ShellHeaderItemsVisibility WorkflowShellHeaderItemsVisibility { System::Activities::Presentation::View::ShellHeaderItemsVisibility get(); void set(System::Activities::Presentation::View::ShellHeaderItemsVisibility value); };" />
      <MemberSignature Language="F#" Value="member this.WorkflowShellHeaderItemsVisibility : System.Activities.Presentation.View.ShellHeaderItemsVisibility with get, set" Usage="System.Activities.Presentation.View.DesignerView.WorkflowShellHeaderItemsVisibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.View.ShellHeaderItemsVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica o tipo de visibilidade que o cabeçalho de shell do fluxo de trabalho tem.</summary>
        <value>O valor que indica o tipo de visibilidade que tem o cabeçalho de shell do fluxo de trabalho.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZoomFactor">
      <MemberSignature Language="C#" Value="public double ZoomFactor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ZoomFactor" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.DesignerView.ZoomFactor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ZoomFactor As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double ZoomFactor { double get(); };" />
      <MemberSignature Language="F#" Value="member this.ZoomFactor : double" Usage="System.Activities.Presentation.View.DesignerView.ZoomFactor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o nível de zoom atual da atividade.</summary>
        <value>O nível de zoom atual da atividade.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZoomInCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand ZoomInCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand ZoomInCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.ZoomInCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ZoomInCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ ZoomInCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable ZoomInCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.ZoomInCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>O comando usado para ampliar a superfície [!INCLUDE[wfd1](~/includes/wfd1-md.md)] atual.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZoomOutCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand ZoomOutCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand ZoomOutCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.DesignerView.ZoomOutCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ZoomOutCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ ZoomOutCommand;" />
      <MemberSignature Language="F#" Value=" staticval mutable ZoomOutCommand : System.Windows.Input.ICommand" Usage="System.Activities.Presentation.View.DesignerView.ZoomOutCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>O comando usado para reduzir da superfície de Designer de Fluxo de Trabalho do Windows atual.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>