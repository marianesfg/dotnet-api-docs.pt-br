<Type Name="ExpressionTextBox" FullName="System.Activities.Presentation.View.ExpressionTextBox">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6c60efc634ee64f2d30ee9026ef63ef9a1a57730" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ExpressionTextBox : System.Windows.Controls.UserControl, System.Windows.Markup.IComponentConnector" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ExpressionTextBox extends System.Windows.Controls.UserControl implements class System.Windows.Markup.IComponentConnector" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.View.ExpressionTextBox" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ExpressionTextBox&#xA;Inherits UserControl&#xA;Implements IComponentConnector" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExpressionTextBox sealed : System::Windows::Controls::UserControl, System::Windows::Markup::IComponentConnector" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.UserControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IComponentConnector</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="07349-101">Descreve um controle que permite ao usuário editar uma expressão em um designer de atividade.</span>
      <span class="sxs-lookup">
        <span data-stu-id="07349-101">Describes a control that enables the user to edit an expression in an activity designer.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07349-102">Em [!INCLUDE[vsprvs](~/includes/vsprvs-md.md)], o <xref:System.Activities.Presentation.View.ExpressionTextBox> fornece recursos como IntelliSense ao editar uma expressão.</span><span class="sxs-lookup"><span data-stu-id="07349-102">In [!INCLUDE[vsprvs](~/includes/vsprvs-md.md)], the <xref:System.Activities.Presentation.View.ExpressionTextBox> provides features such as IntelliSense when editing an expression.</span></span> <span data-ttu-id="07349-103">Esses recursos são fornecidos por um componente chamado de editor de núcleo.</span><span class="sxs-lookup"><span data-stu-id="07349-103">Such features are provided by a component called the hostable editor.</span></span> <span data-ttu-id="07349-104">A interface de edição de expressão é extensível e o editor usado para expressões de edição pode ser substituído.</span><span class="sxs-lookup"><span data-stu-id="07349-104">The expression editing interface is extensible and the editor used for editing expressions can be replaced.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="07349-105">Este componente não está disponível para uso em aplicativos que estão sendo re-hospedado fora [!INCLUDE[vsprvs](~/includes/vsprvs-md.md)].</span><span class="sxs-lookup"><span data-stu-id="07349-105">This component is not available for use in applications that are being re-hosted outside [!INCLUDE[vsprvs](~/includes/vsprvs-md.md)].</span></span>  
  
 <span data-ttu-id="07349-106">**ExpressionTextBlock** funciona da seguinte maneira, quando você editar uma expressão.</span><span class="sxs-lookup"><span data-stu-id="07349-106">**ExpressionTextBlock** works in the following manner when you edit an expression.</span></span>  
  
1.  <span data-ttu-id="07349-107">Quando você clicar em um **ExpressionTextBox**, uma <xref:System.Activities.Presentation.View.IExpressionEditorInstance> objeto é criado e uma sessão do editor de núcleo é instanciada em [!INCLUDE[vsprvs](~/includes/vsprvs-md.md)].</span><span class="sxs-lookup"><span data-stu-id="07349-107">When you click on an **ExpressionTextBox**, an <xref:System.Activities.Presentation.View.IExpressionEditorInstance> object is created and a hostable editor session is instantiated in [!INCLUDE[vsprvs](~/includes/vsprvs-md.md)].</span></span>  
  
2.  <span data-ttu-id="07349-108">Quando você digita dentro de um editor de núcleo, observe que os recursos têm dois tipos de disponibilidade.</span><span class="sxs-lookup"><span data-stu-id="07349-108">When you type inside a hostable editor, note that the features have two sorts of availability.</span></span>  
  
    1.  <span data-ttu-id="07349-109">Suporte do IntelliSense, conclusão e colorização fiquem disponível imediatamente.</span><span class="sxs-lookup"><span data-stu-id="07349-109">IntelliSense, completion and colorization support is available immediately.</span></span>  
  
    2.  <span data-ttu-id="07349-110">A validação é chamada em segundo plano e está disponível apenas após um curto intervalo de tempo.</span><span class="sxs-lookup"><span data-stu-id="07349-110">Validation is called in the background and is available only after a short interval of time elapses.</span></span> <span data-ttu-id="07349-111">Em seguida, se a expressão for inválida, o compilador hospedado relata o erro e exibe o ícone de erro vermelho à direita da expressão.</span><span class="sxs-lookup"><span data-stu-id="07349-111">Then, if your expression is invalid, the hosted compiler reports the error and the red error icon displays to the right of your expression.</span></span>  
  
3.  <span data-ttu-id="07349-112">Pressione a **Enter** chave quando a **ExpressionTextBox** tem o foco para inserir novas linhas no <xref:System.Activities.Presentation.View.IExpressionEditorInstance> objeto.</span><span class="sxs-lookup"><span data-stu-id="07349-112">Press the **Enter** key when the **ExpressionTextBox** has the focus to insert new lines in the <xref:System.Activities.Presentation.View.IExpressionEditorInstance> object.</span></span> <span data-ttu-id="07349-113">Isso faz com que uma confirmação de linha ocorrer dentro do editor de núcleo que dispara uma listagem bonita e a exibição de linhas onduladas.</span><span class="sxs-lookup"><span data-stu-id="07349-113">This causes a line commit to occur inside the hostable editor, which triggers a pretty listing and the display of squiggles.</span></span>  
  
4.  <span data-ttu-id="07349-114">A instância do editor é destruída quando o **ExpressionTextBox** perde o foco, e a exibição é revertida para um **TextBlock**.</span><span class="sxs-lookup"><span data-stu-id="07349-114">The editor instance is destroyed when the **ExpressionTextBox** loses the focus, and the display reverts to a **TextBlock**.</span></span> <span data-ttu-id="07349-115">Se você estiver na superfície de design ou na grade de propriedades, a alteração para o item de modelo é confirmada e todos os <xref:System.Activities.Presentation.View.ExpressionTextBox> controles exibindo essa mesma expressão são sincronizados.</span><span class="sxs-lookup"><span data-stu-id="07349-115">If you are on the designer surface or in the property grid, the change to the model item is committed and all <xref:System.Activities.Presentation.View.ExpressionTextBox> controls displaying that same expression are synchronized.</span></span> <span data-ttu-id="07349-116">No entanto, se você estiver em uma caixa de diálogo, a alteração para o item de modelo não é confirmada até que você clique Okey.</span><span class="sxs-lookup"><span data-stu-id="07349-116">However, if you are in a dialog box, the change to the model item is not committed until you click OK.</span></span> <span data-ttu-id="07349-117">Quando o item de modelo é confirmado, <xref:System.Activities.Validation.ActivityValidationServices.Validate%2A> é chamado e o fluxo de trabalho inteiro é validado.</span><span class="sxs-lookup"><span data-stu-id="07349-117">When the model item is committed, <xref:System.Activities.Validation.ActivityValidationServices.Validate%2A> is invoked and the entire workflow is validated.</span></span>  
  
5.  <span data-ttu-id="07349-118">Quando você clicar no **ExpressionTextBox** novamente, uma nova instância de editor é criada.</span><span class="sxs-lookup"><span data-stu-id="07349-118">When you click on the **ExpressionTextBox** again, a new editor instance is created.</span></span> <span data-ttu-id="07349-119">No editor de núcleo, reformatação, colorização e squiggling ocorre antes de começar a editar.</span><span class="sxs-lookup"><span data-stu-id="07349-119">In the hostable editor, pretty listing, colorization, and squiggling occurs before you begin editing.</span></span>  
  
 <span data-ttu-id="07349-120">Para vincular a caixa de texto expressão **OwnerActivity**, use <xref:System.Activities.Presentation.Converters.ModelPropertyEntryToModelItemConverter> para definir o contexto de dados corretamente.</span><span class="sxs-lookup"><span data-stu-id="07349-120">To bind the expression text box to **OwnerActivity**, use <xref:System.Activities.Presentation.Converters.ModelPropertyEntryToModelItemConverter> to set the data context correctly.</span></span> <span data-ttu-id="07349-121">O exemplo de código a seguir demonstra a definir o contexto de dados corretamente para associação a **OwnerActivity**.</span><span class="sxs-lookup"><span data-stu-id="07349-121">The following code sample demonstrates setting the data context correctly for binding to **OwnerActivity**.</span></span>  
  
```  
<sapc:ModelPropertyEntryToModelItemConverter x:Key="ModelPropertyEntryToContainerConverter"/>  
  
    <DataTemplate x:Key="StringInArgumentPropertyValueEditorTemplate" >  
        <Grid Margin="5" Background="LightGreen" DataContext="{Binding Converter={StaticResource ModelPropertyEntryToContainerConverter}}">  
            <sapv:ExpressionTextBox   
            Expression="{Binding Path=ModelItem.MyVal, Mode=TwoWay,   Converter={StaticResource ArgumentToExpressionConverter},  ConverterParameter=In }"  
            ExpressionType="sys:String"  
            OwnerActivity="{Binding Path=ModelItem}"   
                 />  
        </Grid>  
    </DataTemplate>  
```  
  
 <span data-ttu-id="07349-122">Para obter mais informações, consulte <xref:System.Activities.Presentation.View.IExpressionEditorInstance> e <xref:System.Activities.Presentation.View.IExpressionEditorService>.</span><span class="sxs-lookup"><span data-stu-id="07349-122">For more information, see <xref:System.Activities.Presentation.View.IExpressionEditorInstance> and <xref:System.Activities.Presentation.View.IExpressionEditorService>.</span></span> <span data-ttu-id="07349-123">Consulte também o [usando o ExpressionTextBox em um Designer de atividade personalizada](~/docs/framework/windows-workflow-foundation/samples/using-the-expressiontextbox-in-a-custom-activity-designer.md) tópico de exemplo.</span><span class="sxs-lookup"><span data-stu-id="07349-123">Also see the [Using the ExpressionTextBox in a Custom Activity Designer](~/docs/framework/windows-workflow-foundation/samples/using-the-expressiontextbox-in-a-custom-activity-designer.md) sample topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07349-124">O <xref:System.Activities.Presentation.View.ExpressionTextBox> é geralmente usado declarativamente durante a criação de designers de atividade personalizada.</span><span class="sxs-lookup"><span data-stu-id="07349-124">The <xref:System.Activities.Presentation.View.ExpressionTextBox> is usually used declaratively when creating custom activity designers.</span></span> <span data-ttu-id="07349-125">Para obter o código de exemplo, consulte o [ExpressionTextBox101](http://go.microsoft.com/fwlink/?LinkId=193145) blog.</span><span class="sxs-lookup"><span data-stu-id="07349-125">For sample code, see the [ExpressionTextBox101](http://go.microsoft.com/fwlink/?LinkId=193145) blog.</span></span>  
  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExpressionTextBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ExpressionTextBox.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExpressionTextBox();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="07349-126">Cria uma nova instância da classe <see cref="T:System.Activities.Presentation.View.ExpressionTextBox" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-126">Creates a new instance of the <see cref="T:System.Activities.Presentation.View.ExpressionTextBox" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptsReturn">
      <MemberSignature Language="C#" Value="public bool AcceptsReturn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptsReturn" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.ExpressionTextBox.AcceptsReturn" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptsReturn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcceptsReturn { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="07349-127">Obtém ou define um valor que indica se a caixa de texto da expressão aceita retornos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-127">Gets or sets a value that indicates whether the expression text box accepts returns.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="07349-128">
            <see langword="true" /> Se retorna é aceitas; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-128">
              <see langword="true" /> if returns are accepted; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptsReturnProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AcceptsReturnProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AcceptsReturnProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.AcceptsReturnProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AcceptsReturnProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AcceptsReturnProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="07349-129">Registra a propriedade de dependência <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.AcceptsReturn" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-129">Registers the <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.AcceptsReturn" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptsTab">
      <MemberSignature Language="C#" Value="public bool AcceptsTab { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptsTab" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.ExpressionTextBox.AcceptsTab" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptsTab As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcceptsTab { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="07349-130">Obtém ou define um valor que indica se a caixa de texto da expressão aceita guias.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-130">Gets or sets a value that indicates whether the expression text box accepts tabs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="07349-131">
            <see langword="true" /> Se as guias são aceitas; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-131">
              <see langword="true" /> if tabs are accepted; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptsTabProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AcceptsTabProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AcceptsTabProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.AcceptsTabProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AcceptsTabProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AcceptsTabProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="07349-132">Registra a propriedade de dependência <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.AcceptsTab" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-132">Registers the <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.AcceptsTab" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public void BeginEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ExpressionTextBox.BeginEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginEdit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="07349-133">Inicia uma edição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-133">Begins an edit.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompleteWordCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand CompleteWordCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand CompleteWordCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.CompleteWordCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CompleteWordCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ CompleteWordCommand;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="07349-134">O comando usado para completar palavras na caixa de texto da expressão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-134">The command used to complete words in the expression text box.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecreaseFilterLevelCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand DecreaseFilterLevelCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand DecreaseFilterLevelCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.DecreaseFilterLevelCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DecreaseFilterLevelCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ DecreaseFilterLevelCommand;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="07349-135">O comando usado para alterar o nível de filtro da guia **Comum** para a guia **Todos** quando você estiver filtrando o IntelliSense.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-135">The command used to change the filter level from the **Common** tab to the **All** tab when you are using IntelliSense filtering.</span>
          </span>
          <span data-ttu-id="07349-136">Isso está disponível apenas quando você edita uma expressão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-136">This is available only when you edit an expression.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultValue">
      <MemberSignature Language="C#" Value="public string DefaultValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultValue" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.ExpressionTextBox.DefaultValue" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultValue { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="07349-137">Obtém ou define o valor padrão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-137">Gets or sets the default value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="07349-138">O valor padrão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-138">The default value.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultValueProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DefaultValueProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DefaultValueProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.DefaultValueProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DefaultValueProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DefaultValueProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="07349-139">Registra a propriedade de dependência <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.DefaultValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-139">Registers the <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.DefaultValue" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EditorLostLogicalFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler EditorLostLogicalFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler EditorLostLogicalFocus" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.View.ExpressionTextBox.EditorLostLogicalFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EditorLostLogicalFocus As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ EditorLostLogicalFocus;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="07349-140">Ocorre quando o editor de expressão perde o foco lógico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-140">Occurs when the expression editor loses logical focus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07349-141">Foco lógico é diferente do foco do teclado, se o foco é deliberadamente forçado longe usando uma chamada de método, mas o foco do teclado anterior existe em um escopo diferente.</span><span class="sxs-lookup"><span data-stu-id="07349-141">Logical focus differs from keyboard focus if focus is deliberately forced away by using a method call but the previous keyboard focus exists in a different scope.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditorLostLogicalFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent EditorLostLogicalFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent EditorLostLogicalFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.EditorLostLogicalFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EditorLostLogicalFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ EditorLostLogicalFocusEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="07349-142">Identifica o evento roteado <see cref="E:System.Activities.Presentation.View.ExpressionTextBox.EditorLostLogicalFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-142">Identifies the <see cref="E:System.Activities.Presentation.View.ExpressionTextBox.EditorLostLogicalFocus" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExplicitCommit">
      <MemberSignature Language="C#" Value="public bool ExplicitCommit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExplicitCommit" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.ExpressionTextBox.ExplicitCommit" />
      <MemberSignature Language="VB.NET" Value="Public Property ExplicitCommit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExplicitCommit { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="07349-143">Obtém ou define um valor que determina se a confirmação é explícita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-143">Gets or sets a value that determines whether a commit is explicit.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="07349-144">Retorna <see langword="true" /> se a confirmação for explícitas; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-144">Returns <see langword="true" /> if the commit is explicit; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExplicitCommitProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ExplicitCommitProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ExplicitCommitProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.ExplicitCommitProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ExplicitCommitProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ExplicitCommitProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="07349-145">Registra a propriedade de dependência <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.ExplicitCommit" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-145">Registers the <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.ExplicitCommit" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public System.Activities.Presentation.Model.ModelItem Expression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.Model.ModelItem Expression" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.ExpressionTextBox.Expression" />
      <MemberSignature Language="VB.NET" Value="Public Property Expression As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Presentation::Model::ModelItem ^ Expression { System::Activities::Presentation::Model::ModelItem ^ get(); void set(System::Activities::Presentation::Model::ModelItem ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="07349-146">Obtém ou define a expressão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-146">Gets or sets the expression.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="07349-147">Retorna um <see cref="T:System.Activities.Presentation.Model.ModelItem" /> que contém a expressão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-147">Returns a <see cref="T:System.Activities.Presentation.Model.ModelItem" /> that contains the expression.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07349-148"><xref:System.Activities.Presentation.View.ExpressionTextBox.Expression%2A> sempre é necessário.</span><span class="sxs-lookup"><span data-stu-id="07349-148"><xref:System.Activities.Presentation.View.ExpressionTextBox.Expression%2A> is always required.</span></span> <span data-ttu-id="07349-149">Ao usar o <xref:System.Activities.Presentation.View.ExpressionTextBox> declarativamente para associar a argumentos, você sempre deve usar o <xref:System.Activities.Presentation.Converters.ArgumentToExpressionConverter> para associar a expressão para a configuração do argumento, o `ConverterParameter` para `In` ou `Out` dependendo da direção do argumento.</span><span class="sxs-lookup"><span data-stu-id="07349-149">When using the <xref:System.Activities.Presentation.View.ExpressionTextBox> declaratively to bind to arguments, you must always use the <xref:System.Activities.Presentation.Converters.ArgumentToExpressionConverter> to bind the expression to the argument, setting the `ConverterParameter` to `In` or `Out` depending on the direction of the argument.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpressionActivityEditor">
      <MemberSignature Language="C#" Value="public string ExpressionActivityEditor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExpressionActivityEditor" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.ExpressionTextBox.ExpressionActivityEditor" />
      <MemberSignature Language="VB.NET" Value="Public Property ExpressionActivityEditor As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ExpressionActivityEditor { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="07349-150">Obtém ou define o editor de atividade de expressão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-150">Gets or sets the expression activity editor.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="07349-151">O editor de atividades de expressão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-151">The expression activity editor.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpressionActivityEditorOptionName">
      <MemberSignature Language="C#" Value="public const string ExpressionActivityEditorOptionName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExpressionActivityEditorOptionName" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.ExpressionActivityEditorOptionName" />
      <MemberSignature Language="VB.NET" Value="Public Const ExpressionActivityEditorOptionName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExpressionActivityEditorOptionName;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="07349-152">Especifica um nome da opção de editor de atividade de expressão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-152">Specifies a name of the expression activity editor option.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpressionActivityEditorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ExpressionActivityEditorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ExpressionActivityEditorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.ExpressionActivityEditorProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ExpressionActivityEditorProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ExpressionActivityEditorProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="07349-153">Registra a propriedade de dependência <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.ExpressionActivityEditor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-153">Registers the <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.ExpressionActivityEditor" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpressionEditorService">
      <MemberSignature Language="C#" Value="public System.Activities.Presentation.View.IExpressionEditorService ExpressionEditorService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.View.IExpressionEditorService ExpressionEditorService" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.ExpressionTextBox.ExpressionEditorService" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExpressionEditorService As IExpressionEditorService" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Presentation::View::IExpressionEditorService ^ ExpressionEditorService { System::Activities::Presentation::View::IExpressionEditorService ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.View.IExpressionEditorService</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="07349-154">Obtém o serviço do editor de expressão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-154">Gets the expression editor service.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="07349-155">Retorna um <see cref="T:System.Activities.Presentation.View.IExpressionEditorService" /> que contém o serviço do editor de expressão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-155">Returns a <see cref="T:System.Activities.Presentation.View.IExpressionEditorService" /> that contains the expression editor service.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpressionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ExpressionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ExpressionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.ExpressionProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ExpressionProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ExpressionProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="07349-156">Registra a propriedade de dependência <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.Expression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-156">Registers the <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.Expression" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpressionType">
      <MemberSignature Language="C#" Value="public Type ExpressionType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ExpressionType" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.ExpressionTextBox.ExpressionType" />
      <MemberSignature Language="VB.NET" Value="Public Property ExpressionType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ExpressionType { Type ^ get(); void set(Type ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="07349-157">Obtém ou define o tipo da expressão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-157">Gets or sets the expression type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="07349-158">Retorna um <see cref="T:System.Type" /> que contém o tipo de expressão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-158">Returns a <see cref="T:System.Type" /> that contains the expression type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07349-159">O tipo de configuração é altamente recomendável.</span><span class="sxs-lookup"><span data-stu-id="07349-159">Setting the type is strongly recommended.</span></span> <span data-ttu-id="07349-160">Se você não definir <xref:System.Activities.Presentation.View.ExpressionTextBox.ExpressionType%2A>, você não pode usar o <xref:System.Activities.Presentation.View.ExpressionTextBox> para associar a delegar tipos e você não obtiver a validação do compilador hospedado.</span><span class="sxs-lookup"><span data-stu-id="07349-160">If you do not set <xref:System.Activities.Presentation.View.ExpressionTextBox.ExpressionType%2A>, you can’t use the <xref:System.Activities.Presentation.View.ExpressionTextBox> to bind to delegate types and you do not get validation from the hosted compiler.</span></span> <span data-ttu-id="07349-161">Essa validação de compilador verifica se o tipo da expressão inserida corresponde ao tipo esperado e exibe uma caixa vermelha ao redor do **ExpressionTextBox** quando dados inválidos são inseridos em um designer de atividade.</span><span class="sxs-lookup"><span data-stu-id="07349-161">This compiler validation checks to see if the type of the entered expression matches the expected type, and displays a red box around the **ExpressionTextBox** when invalid data is entered into it on an activity designer.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpressionTypeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ExpressionTypeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ExpressionTypeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.ExpressionTypeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ExpressionTypeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ExpressionTypeProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="07349-162">Registra a propriedade de dependência <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.ExpressionType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-162">Registers the <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.ExpressionType" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GlobalIntellisenseCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand GlobalIntellisenseCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand GlobalIntellisenseCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.GlobalIntellisenseCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GlobalIntellisenseCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ GlobalIntellisenseCommand;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="07349-163">O comando usado para IntelliSense global na caixa de texto da expressão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-163">The command used for global IntelliSense in the expression text box.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HintText">
      <MemberSignature Language="C#" Value="public string HintText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HintText" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.ExpressionTextBox.HintText" />
      <MemberSignature Language="VB.NET" Value="Public Property HintText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HintText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="07349-164">Obtém ou define o texto de dica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-164">Gets or sets the hint text.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="07349-165">Retorna um <see cref="T:System.String" /> que contém o texto de dica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-165">Returns a <see cref="T:System.String" /> that contains the hint text.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HintTextProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HintTextProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HintTextProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.HintTextProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HintTextProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ HintTextProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="07349-166">Registra a propriedade de dependência <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.HintText" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-166">Registers the <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.HintText" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalScrollBarVisibility">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ScrollBarVisibility HorizontalScrollBarVisibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.ScrollBarVisibility HorizontalScrollBarVisibility" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.ExpressionTextBox.HorizontalScrollBarVisibility" />
      <MemberSignature Language="VB.NET" Value="Public Property HorizontalScrollBarVisibility As ScrollBarVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ScrollBarVisibility HorizontalScrollBarVisibility { System::Windows::Controls::ScrollBarVisibility get(); void set(System::Windows::Controls::ScrollBarVisibility value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ScrollBarVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="07349-167">Obtém ou define a visibilidade da barra de rolagem horizontal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-167">Gets or sets the horizontal scroll bar visibility.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="07349-168">Retorna um <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> que contém a visibilidade da barra de rolagem horizontal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-168">Returns a <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> that contains the horizontal scroll bar visibility.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalScrollBarVisibilityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HorizontalScrollBarVisibilityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HorizontalScrollBarVisibilityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.HorizontalScrollBarVisibilityProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HorizontalScrollBarVisibilityProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ HorizontalScrollBarVisibilityProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="07349-169">Registra a propriedade de dependência <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.HorizontalScrollBarVisibility" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-169">Registers the <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.HorizontalScrollBarVisibility" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncreaseFilterLevelCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand IncreaseFilterLevelCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand IncreaseFilterLevelCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.IncreaseFilterLevelCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IncreaseFilterLevelCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ IncreaseFilterLevelCommand;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="07349-170">O comando usado para alterar o nível de filtro da guia **Todos** para a guia **Comum** quando você estiver filtrando o IntelliSense.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-170">The command used to change the filter level from the **All** tab to the **Common** tab when you are using IntelliSense filtering.</span>
          </span>
          <span data-ttu-id="07349-171">Isso está disponível apenas quando você edita uma expressão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-171">This is available only when you edit an expression.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeComponent">
      <MemberSignature Language="C#" Value="public void InitializeComponent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeComponent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ExpressionTextBox.InitializeComponent" />
      <MemberSignature Language="VB.NET" Value="Public Sub InitializeComponent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InitializeComponent();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IComponentConnector.InitializeComponent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CodeDom.Compiler.GeneratedCode("PresentationBuildTasks", "4.0.0.0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerNonUserCode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="07349-172">Inicializa este formulário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-172">Initializes this form.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07349-173">Este método destina-se ao uso somente pelo compilador de marcação.</span><span class="sxs-lookup"><span data-stu-id="07349-173">This method is intended for use only by the markup compiler.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.ExpressionTextBox.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="07349-174">Obtém ou define um valor que indica se a caixa de texto da expressão é somente leitura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-174">Gets or sets a value that indicates whether the expression textbox is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="07349-175">Um valor que indica se a caixa de texto expressão é somente leitura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-175">A value that indicates whether the expression textbox is read-only.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnlyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsReadOnlyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsReadOnlyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.IsReadOnlyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsReadOnlyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsReadOnlyProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="07349-176">Registra a propriedade <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.IsReadOnly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-176">Registers the <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.IsReadOnly" /> property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSupportedExpression">
      <MemberSignature Language="C#" Value="public bool IsSupportedExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSupportedExpression" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.ExpressionTextBox.IsSupportedExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property IsSupportedExpression As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSupportedExpression { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="07349-177">Obtém ou define um valor que determina se há suporte para a expressão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-177">Gets or sets a value that determines whether the expression is supported.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="07349-178">
            <see langword="true" /> Se a expressão é suportada; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-178">
              <see langword="true" /> if the expression is supported; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSupportedExpressionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsSupportedExpressionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsSupportedExpressionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.IsSupportedExpressionProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsSupportedExpressionProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsSupportedExpressionProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="07349-179">Registra a propriedade de dependência <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.IsSupportedExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-179">Registers the <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.IsSupportedExpression" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxLines">
      <MemberSignature Language="C#" Value="public int MaxLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLines" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.ExpressionTextBox.MaxLines" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxLines As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxLines { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="07349-180">Obtém ou define o número máximo de linhas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-180">Gets or sets the maximum number of lines.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="07349-181">Retorna um <see cref="T:System.Int32" /> que contém o número máximo de linhas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-181">Returns an <see cref="T:System.Int32" /> that contains the maximum number of lines.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxLinesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MaxLinesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MaxLinesProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.MaxLinesProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaxLinesProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MaxLinesProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="07349-182">Registra a propriedade de dependência <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.MaxLines" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-182">Registers the <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.MaxLines" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinLines">
      <MemberSignature Language="C#" Value="public int MinLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinLines" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.ExpressionTextBox.MinLines" />
      <MemberSignature Language="VB.NET" Value="Public Property MinLines As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinLines { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="07349-183">Obtém ou define o número mínimo de linhas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-183">Gets or sets the minimum number of lines.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="07349-184">Retorna um <see cref="T:System.Int32" /> que contém o número mínimo de linhas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-184">Returns an <see cref="T:System.Int32" /> that contains the minimum number of lines.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinLinesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MinLinesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MinLinesProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.MinLinesProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MinLinesProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MinLinesProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="07349-185">Registra a propriedade de dependência <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.MinLines" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-185">Registers the <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.MinLines" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ExpressionTextBox.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInitialized">
      <MemberSignature Language="C#" Value="protected override void OnInitialized (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnInitialized(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ExpressionTextBox.OnInitialized(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnInitialized (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnInitialized(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected override void OnPropertyChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPropertyChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ExpressionTextBox.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPropertyChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPropertyChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OwnerActivity">
      <MemberSignature Language="C#" Value="public System.Activities.Presentation.Model.ModelItem OwnerActivity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.Model.ModelItem OwnerActivity" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.ExpressionTextBox.OwnerActivity" />
      <MemberSignature Language="VB.NET" Value="Public Property OwnerActivity As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Presentation::Model::ModelItem ^ OwnerActivity { System::Activities::Presentation::Model::ModelItem ^ get(); void set(System::Activities::Presentation::Model::ModelItem ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="07349-186">Obtém ou define a atividade de proprietário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-186">Gets or sets the owner activity.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="07349-187">Retorna um <see cref="T:System.Activities.Presentation.Model.ModelItem" /> que contém a atividade de proprietário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-187">Returns a <see cref="T:System.Activities.Presentation.Model.ModelItem" /> that contains the owner activity.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OwnerActivityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty OwnerActivityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty OwnerActivityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.OwnerActivityProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OwnerActivityProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ OwnerActivityProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="07349-188">Registra a propriedade de dependência <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.OwnerActivity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-188">Registers the <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.OwnerActivity" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterInfoCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand ParameterInfoCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand ParameterInfoCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.ParameterInfoCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ParameterInfoCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ ParameterInfoCommand;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="07349-189">O comando usado para informações de parâmetro na caixa de texto da expressão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-189">The command used for parameter information in the expression text box.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PathToArgument">
      <MemberSignature Language="C#" Value="public string PathToArgument { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PathToArgument" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.ExpressionTextBox.PathToArgument" />
      <MemberSignature Language="VB.NET" Value="Public Property PathToArgument As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PathToArgument { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="07349-190">Obtém ou define o caminho para o argumento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-190">Gets or sets the path to the argument.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="07349-191">Retorna um <see cref="T:System.String" /> que contém o caminho para o argumento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-191">Returns a <see cref="T:System.String" /> that contains the path to the argument.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PathToArgumentProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PathToArgumentProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PathToArgumentProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.PathToArgumentProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PathToArgumentProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PathToArgumentProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="07349-192">Registra a propriedade de dependência <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.PathToArgument" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-192">Registers the <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.PathToArgument" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuickInfoCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.ICommand QuickInfoCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.ICommand QuickInfoCommand" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.QuickInfoCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly QuickInfoCommand As ICommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::ICommand ^ QuickInfoCommand;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="07349-193">O comando usado para informações rápidas na caixa de texto da expressão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-193">The command used for quick information in the expression text box.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterExpressionActivityEditor">
      <MemberSignature Language="C#" Value="public static void RegisterExpressionActivityEditor (string name, Type expressionActivityEditorType, System.Activities.Presentation.Expressions.CreateExpressionFromStringCallback convertFromString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterExpressionActivityEditor(string name, class System.Type expressionActivityEditorType, class System.Activities.Presentation.Expressions.CreateExpressionFromStringCallback convertFromString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ExpressionTextBox.RegisterExpressionActivityEditor(System.String,System.Type,System.Activities.Presentation.Expressions.CreateExpressionFromStringCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterExpressionActivityEditor (name As String, expressionActivityEditorType As Type, convertFromString As CreateExpressionFromStringCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterExpressionActivityEditor(System::String ^ name, Type ^ expressionActivityEditorType, System::Activities::Presentation::Expressions::CreateExpressionFromStringCallback ^ convertFromString);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="expressionActivityEditorType" Type="System.Type" />
        <Parameter Name="convertFromString" Type="System.Activities.Presentation.Expressions.CreateExpressionFromStringCallback" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="07349-194">O nome do editor epression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-194">The name of the epression editor.</span>
          </span>
        </param>
        <param name="expressionActivityEditorType">
          <span data-ttu-id="07349-195">O tipo do editor de atividades de expressão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-195">The type of the expression activity editor.</span>
          </span>
        </param>
        <param name="convertFromString">
          <span data-ttu-id="07349-196">O formato de cadeia de caracteres da expressão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-196">The string format of the expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="07349-197">Registra um editor de atividade de expressão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-197">Registers an expression activity editor.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IComponentConnector.Connect">
      <MemberSignature Language="C#" Value="void IComponentConnector.Connect (int connectionId, object target);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IComponentConnector.Connect(int32 connectionId, object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ExpressionTextBox.System#Windows#Markup#IComponentConnector#Connect(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Connect (connectionId As Integer, target As Object) Implements IComponentConnector.Connect" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IComponentConnector.Connect(int connectionId, System::Object ^ target) = System::Windows::Markup::IComponentConnector::Connect;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IComponentConnector.Connect(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CodeDom.Compiler.GeneratedCode("PresentationBuildTasks", "4.0.0.0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerNonUserCode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionId" Type="System.Int32" />
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="connectionId">
          <span data-ttu-id="07349-198">O ID da conexão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-198">The connection ID.</span>
          </span>
        </param>
        <param name="target">
          <span data-ttu-id="07349-199">O destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-199">The target.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="07349-200">Anexa eventos e nomes ao conteúdo compilado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-200">Attaches events and names to compiled content.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07349-201">Essa classe destina-se ao uso somente pelo compilador de marcação.</span><span class="sxs-lookup"><span data-stu-id="07349-201">This class is intended for use only by the markup compiler.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseLocationExpression">
      <MemberSignature Language="C#" Value="public bool UseLocationExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseLocationExpression" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.ExpressionTextBox.UseLocationExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property UseLocationExpression As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseLocationExpression { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="07349-202">Obtém ou define um valor que determina se esta instância usa a expressão de local.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-202">Gets or sets a value that determines whether this instance uses the location expression.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="07349-203">
            <see langword="true" /> Se esta instância usa a expressão de local; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-203">
              <see langword="true" /> if this instance uses the location expression; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07349-204">Um *expressão local* (ou expressão de valor de L) é um tipo de expressão que é avaliada como um identificador e pode ser colocado no lado esquerdo de uma instrução de atribuição.</span><span class="sxs-lookup"><span data-stu-id="07349-204">A *location expression* (or L-value expression) is a type of expression that evaluates to an identifier and can be placed on the left hand side of an assignment statement.</span></span> <span data-ttu-id="07349-205">Quando você está associando o <xref:System.Activities.Presentation.View.ExpressionTextBox> para um `Out` argumento, você deve definir essa propriedade `True`.</span><span class="sxs-lookup"><span data-stu-id="07349-205">When you are binding the <xref:System.Activities.Presentation.View.ExpressionTextBox> to an `Out` argument, you would set this property to `True`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseLocationExpressionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty UseLocationExpressionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty UseLocationExpressionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.UseLocationExpressionProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UseLocationExpressionProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ UseLocationExpressionProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="07349-206">Registra a propriedade de dependência <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.UseLocationExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-206">Registers the <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.UseLocationExpression" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalScrollBarVisibility">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ScrollBarVisibility VerticalScrollBarVisibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.ScrollBarVisibility VerticalScrollBarVisibility" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.View.ExpressionTextBox.VerticalScrollBarVisibility" />
      <MemberSignature Language="VB.NET" Value="Public Property VerticalScrollBarVisibility As ScrollBarVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ScrollBarVisibility VerticalScrollBarVisibility { System::Windows::Controls::ScrollBarVisibility get(); void set(System::Windows::Controls::ScrollBarVisibility value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ScrollBarVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="07349-207">Obtém ou define a visibilidade da barra de rolagem vertical.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-207">Gets or sets the vertical scrollbar visibility.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="07349-208">Retorna um <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> que contém a visibilidade da barra de rolagem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-208">Returns a <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> that contains the scrollbar visibility.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalScrollBarVisibilityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty VerticalScrollBarVisibilityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty VerticalScrollBarVisibilityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.View.ExpressionTextBox.VerticalScrollBarVisibilityProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly VerticalScrollBarVisibilityProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ VerticalScrollBarVisibilityProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="07349-209">Registra a propriedade de dependência <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.VerticalScrollBarVisibility" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07349-209">Registers the <see cref="P:System.Activities.Presentation.View.ExpressionTextBox.VerticalScrollBarVisibility" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>