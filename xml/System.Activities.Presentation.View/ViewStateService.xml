<Type Name="ViewStateService" FullName="System.Activities.Presentation.View.ViewStateService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4c0b0a35d67bc5d96069716512a11ca0d899870e" /><Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="11/29/2018" /><Meta Name="ms.locfileid" Value="52602211" /></Metadata><TypeSignature Language="C#" Value="public abstract class ViewStateService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ViewStateService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.View.ViewStateService" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ViewStateService" />
  <TypeSignature Language="C++ CLI" Value="public ref class ViewStateService abstract" />
  <TypeSignature Language="F#" Value="type ViewStateService = class" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="7b470-101">Permite a preservação e o acesso de todos os valores de dados associados aos componentes de interação com o usuário de um aplicativo de fluxo de trabalho, em um ponto específico no tempo na execução de um aplicativo de fluxo de trabalho.</span><span class="sxs-lookup"><span data-stu-id="7b470-101">Enables the preservation and accessing of all data values associated with the user interaction components of a workflow application, at a particular point in time in the running of a workflow application.</span></span> <span data-ttu-id="7b470-102">Um <see cref="T:System.Activities.Presentation.View.ViewStateService" /> armazena estados de exibição para os itens modelo.</span><span class="sxs-lookup"><span data-stu-id="7b470-102">A <see cref="T:System.Activities.Presentation.View.ViewStateService" /> stores view states for model items.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b470-103">Isso é útil para que o estado pode manter que estão sendo recuperado quando o controle do aplicativo vai e vem com postbacks.</span><span class="sxs-lookup"><span data-stu-id="7b470-103">This is useful so that the state can keep being retrieved when control of the application goes and comes with postbacks.</span></span> <span data-ttu-id="7b470-104"><xref:System.Activities.Presentation.View.ViewStateService> é uma classe abstrata.</span><span class="sxs-lookup"><span data-stu-id="7b470-104"><xref:System.Activities.Presentation.View.ViewStateService> is an abstract class.</span></span> <span data-ttu-id="7b470-105">As classes derivadas devem armazenar a exibição informa quando <xref:System.Activities.Presentation.View.ViewStateService.StoreViewState%2A> é chamado e recuperá-los quando <xref:System.Activities.Presentation.View.ViewStateService.RetrieveViewState%2A> é chamado.</span><span class="sxs-lookup"><span data-stu-id="7b470-105">Derived classes must store view states when <xref:System.Activities.Presentation.View.ViewStateService.StoreViewState%2A> is called, and retrieve them when <xref:System.Activities.Presentation.View.ViewStateService.RetrieveViewState%2A> is called.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ViewStateService ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ViewStateService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ViewStateService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7b470-106">Inicializa uma nova instância da classe <see cref="T:System.Activities.Presentation.View.ViewStateService" />.</span><span class="sxs-lookup"><span data-stu-id="7b470-106">Initiates a new instance of the <see cref="T:System.Activities.Presentation.View.ViewStateService" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveViewState">
      <MemberSignature Language="C#" Value="public abstract bool RemoveViewState (System.Activities.Presentation.Model.ModelItem modelItem, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RemoveViewState(class System.Activities.Presentation.Model.ModelItem modelItem, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ViewStateService.RemoveViewState(System.Activities.Presentation.Model.ModelItem,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool RemoveViewState(System::Activities::Presentation::Model::ModelItem ^ modelItem, System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member RemoveViewState : System.Activities.Presentation.Model.ModelItem * string -&gt; bool" Usage="viewStateService.RemoveViewState (modelItem, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelItem" Type="System.Activities.Presentation.Model.ModelItem" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="modelItem"><span data-ttu-id="7b470-107">A atividade de fluxo de trabalho <see cref="T:System.Activities.Presentation.Model.ModelItem" /> associada ao estado de exibição atual.</span><span class="sxs-lookup"><span data-stu-id="7b470-107">The workflow activity <see cref="T:System.Activities.Presentation.Model.ModelItem" /> associated with the current view state.</span></span></param>
        <param name="key"><span data-ttu-id="7b470-108">O <see cref="T:System.String" /> que identifica o item de estado de exibição armazenado.</span><span class="sxs-lookup"><span data-stu-id="7b470-108">The <see cref="T:System.String" /> that identifies the view state item that is stored.</span></span></param>
        <summary><span data-ttu-id="7b470-109">Quando implementado em uma classe derivada, remove o estado de exibição representado pela chave especificada e associado ao item de modelo especificado.</span><span class="sxs-lookup"><span data-stu-id="7b470-109">When implemented in a derived class, removes the view state represented by the specified key and associated with the specified model item.</span></span></summary>
        <returns><span data-ttu-id="7b470-110"><see langword="true" /> se o estado de exibição tiver sido removido; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7b470-110"><see langword="true" /> if the view state was removed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RetrieveAllViewState">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.Dictionary&lt;string,object&gt; RetrieveAllViewState (System.Activities.Presentation.Model.ModelItem modelItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.Dictionary`2&lt;string, object&gt; RetrieveAllViewState(class System.Activities.Presentation.Model.ModelItem modelItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ViewStateService.RetrieveAllViewState(System.Activities.Presentation.Model.ModelItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::Dictionary&lt;System::String ^, System::Object ^&gt; ^ RetrieveAllViewState(System::Activities::Presentation::Model::ModelItem ^ modelItem);" />
      <MemberSignature Language="F#" Value="abstract member RetrieveAllViewState : System.Activities.Presentation.Model.ModelItem -&gt; System.Collections.Generic.Dictionary&lt;string, obj&gt;" Usage="viewStateService.RetrieveAllViewState modelItem" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelItem" Type="System.Activities.Presentation.Model.ModelItem" />
      </Parameters>
      <Docs>
        <param name="modelItem"><span data-ttu-id="7b470-111">O <see cref="T:System.Activities.Presentation.Model.ModelItem" /> ao qual o estado de exibição se aplica.</span><span class="sxs-lookup"><span data-stu-id="7b470-111">The <see cref="T:System.Activities.Presentation.Model.ModelItem" /> that the view state applies to.</span></span></param>
        <summary><span data-ttu-id="7b470-112">Retorna um aspecto do estado de exibição que foi armazenado para o <paramref name="modelItem" /> especificado, correspondendo ao <paramref name="key" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="7b470-112">Returns an aspect of the view state that was stored for the specified <paramref name="modelItem" />, matching the specified <paramref name="key" />.</span></span></summary>
        <returns><span data-ttu-id="7b470-113">Retorna <see cref="T:System.Collections.Generic.Dictionary`2" />.</span><span class="sxs-lookup"><span data-stu-id="7b470-113">Returns <see cref="T:System.Collections.Generic.Dictionary`2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b470-114">Chamar <xref:System.Activities.Presentation.View.ViewStateService.StoreViewState%2A> inicialmente armazenar informações de estado de exibição para que ela possa ser recuperada.</span><span class="sxs-lookup"><span data-stu-id="7b470-114">Call <xref:System.Activities.Presentation.View.ViewStateService.StoreViewState%2A> to initially store view state information so that it can be retrieved.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RetrieveViewState">
      <MemberSignature Language="C#" Value="public abstract object RetrieveViewState (System.Activities.Presentation.Model.ModelItem modelItem, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object RetrieveViewState(class System.Activities.Presentation.Model.ModelItem modelItem, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ViewStateService.RetrieveViewState(System.Activities.Presentation.Model.ModelItem,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ RetrieveViewState(System::Activities::Presentation::Model::ModelItem ^ modelItem, System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member RetrieveViewState : System.Activities.Presentation.Model.ModelItem * string -&gt; obj" Usage="viewStateService.RetrieveViewState (modelItem, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelItem" Type="System.Activities.Presentation.Model.ModelItem" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="modelItem"><span data-ttu-id="7b470-115">A atividade de fluxo de trabalho <see cref="T:System.Activities.Presentation.Model.ModelItem" /> associada ao estado de exibição atual.</span><span class="sxs-lookup"><span data-stu-id="7b470-115">The workflow activity <see cref="T:System.Activities.Presentation.Model.ModelItem" /> associated with the current view state.</span></span></param>
        <param name="key"><span data-ttu-id="7b470-116">O <see cref="T:System.String" /> que identifica o aspecto do estado de exibição que deve ser recuperado.</span><span class="sxs-lookup"><span data-stu-id="7b470-116">The <see cref="T:System.String" /> that identifies the aspect of the view state that is to be retrieved.</span></span></param>
        <summary><span data-ttu-id="7b470-117">Recupera um aspecto do estado de exibição para o <paramref name="modelItem" /> especificado, combinando com o <paramref name="key" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="7b470-117">Retrieves an aspect of the view state for the specified <paramref name="modelItem" />, matching the specified <paramref name="key" />.</span></span></summary>
        <returns><span data-ttu-id="7b470-118">O aspecto do estado de exibição como <see cref="T:System.Object" /> ou <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7b470-118">The aspect of the view state as an <see cref="T:System.Object" />,or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b470-119">Chamar <xref:System.Activities.Presentation.View.ViewStateService.StoreViewState%2A> inicialmente armazenar informações de estado de exibição para que ela possa ser recuperada.</span><span class="sxs-lookup"><span data-stu-id="7b470-119">Call <xref:System.Activities.Presentation.View.ViewStateService.StoreViewState%2A> to initially store view state information so that it can be retrieved.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreViewState">
      <MemberSignature Language="C#" Value="public abstract void StoreViewState (System.Activities.Presentation.Model.ModelItem modelItem, string key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StoreViewState(class System.Activities.Presentation.Model.ModelItem modelItem, string key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ViewStateService.StoreViewState(System.Activities.Presentation.Model.ModelItem,System.String,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void StoreViewState(System::Activities::Presentation::Model::ModelItem ^ modelItem, System::String ^ key, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member StoreViewState : System.Activities.Presentation.Model.ModelItem * string * obj -&gt; unit" Usage="viewStateService.StoreViewState (modelItem, key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelItem" Type="System.Activities.Presentation.Model.ModelItem" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="modelItem"><span data-ttu-id="7b470-120">O <see cref="T:System.Activities.Presentation.Model.ModelItem" /> ao qual o estado de exibição se aplica.</span><span class="sxs-lookup"><span data-stu-id="7b470-120">The <see cref="T:System.Activities.Presentation.Model.ModelItem" /> that the view state applies to.</span></span></param>
        <param name="key"><span data-ttu-id="7b470-121">O <see cref="T:System.String" /> que identifica o aspecto do estado de exibição que deve ser armazenado.</span><span class="sxs-lookup"><span data-stu-id="7b470-121">The <see cref="T:System.String" /> that identifies the aspect of the view state that is to be stored.</span></span></param>
        <param name="value"><span data-ttu-id="7b470-122">Um <see cref="T:System.Object" /> a ser armazenado.</span><span class="sxs-lookup"><span data-stu-id="7b470-122">An <see cref="T:System.Object" /> to be stored.</span></span></param>
        <summary><span data-ttu-id="7b470-123">Armazena um aspecto do estado de exibição para o <paramref name="modelItem" /> especificado, combinando com o <paramref name="key" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="7b470-123">Stores an aspect of the view state for the specified <paramref name="modelItem" />, matching the specified <paramref name="key" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b470-124">Você pode recuperar o objeto armazenado chamando <xref:System.Activities.Presentation.View.ViewStateService.RetrieveViewState%2A> e passando os mesmos valores `modelItem` e `key`.</span><span class="sxs-lookup"><span data-stu-id="7b470-124">You can retrieve the stored object by calling <xref:System.Activities.Presentation.View.ViewStateService.RetrieveViewState%2A> and passing the same values for `modelItem` and `key`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreViewStateWithUndo">
      <MemberSignature Language="C#" Value="public abstract void StoreViewStateWithUndo (System.Activities.Presentation.Model.ModelItem modelItem, string key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StoreViewStateWithUndo(class System.Activities.Presentation.Model.ModelItem modelItem, string key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ViewStateService.StoreViewStateWithUndo(System.Activities.Presentation.Model.ModelItem,System.String,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void StoreViewStateWithUndo(System::Activities::Presentation::Model::ModelItem ^ modelItem, System::String ^ key, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member StoreViewStateWithUndo : System.Activities.Presentation.Model.ModelItem * string * obj -&gt; unit" Usage="viewStateService.StoreViewStateWithUndo (modelItem, key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelItem" Type="System.Activities.Presentation.Model.ModelItem" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="modelItem"><span data-ttu-id="7b470-125">O <see cref="T:System.Activities.Presentation.Model.ModelItem" /> ao qual o estado de exibição se aplica.</span><span class="sxs-lookup"><span data-stu-id="7b470-125">The <see cref="T:System.Activities.Presentation.Model.ModelItem" /> that the view state applies to.</span></span></param>
        <param name="key"><span data-ttu-id="7b470-126">O <see cref="T:System.String" /> que identifica o aspecto do estado de exibição que deve ser armazenado.</span><span class="sxs-lookup"><span data-stu-id="7b470-126">The <see cref="T:System.String" /> that identifies the aspect of the view state that is to be stored.</span></span> <span data-ttu-id="7b470-127">O <see cref="T:System.String" /> que identifica o item de estado de exibição armazenado.</span><span class="sxs-lookup"><span data-stu-id="7b470-127">The <see cref="T:System.String" /> that identifies the view state item that is stored.</span></span></param>
        <param name="value"><span data-ttu-id="7b470-128">Um <see cref="T:System.Object" /> a ser armazenado.</span><span class="sxs-lookup"><span data-stu-id="7b470-128">An <see cref="T:System.Object" /> to be stored.</span></span></param>
        <summary><span data-ttu-id="7b470-129">Quando implementado em uma classe derivada, registra a configuração atual do item representado pela chave especificada para que esteja disponível para uma operação de desfazer.</span><span class="sxs-lookup"><span data-stu-id="7b470-129">When implemented in a derived class, records the current setting of the item represented by the specified key so that it is available for an undo operation.</span></span> <span data-ttu-id="7b470-130">O item representado pela chave especificada então é armazenado no estado de exibição do item de modelo especificado.</span><span class="sxs-lookup"><span data-stu-id="7b470-130">The item represented by the specified key is then stored in the view state of the specified model item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b470-131">Você pode recuperar o objeto armazenado chamando <xref:System.Activities.Presentation.View.ViewStateService.RetrieveViewState%2A> e passando os mesmos valores `modelItem` e `key`.</span><span class="sxs-lookup"><span data-stu-id="7b470-131">You can retrieve the stored object by calling <xref:System.Activities.Presentation.View.ViewStateService.RetrieveViewState%2A> and passing the same values for `modelItem` and `key`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UndoableViewStateChanged">
      <MemberSignature Language="C#" Value="public abstract event System.Activities.Presentation.View.ViewStateChangedEventHandler UndoableViewStateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Activities.Presentation.View.ViewStateChangedEventHandler UndoableViewStateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.View.ViewStateService.UndoableViewStateChanged" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Event UndoableViewStateChanged As ViewStateChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract event System::Activities::Presentation::View::ViewStateChangedEventHandler ^ UndoableViewStateChanged;" />
      <MemberSignature Language="F#" Value="member this.UndoableViewStateChanged : System.Activities.Presentation.View.ViewStateChangedEventHandler " Usage="member this.UndoableViewStateChanged : System.Activities.Presentation.View.ViewStateChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.View.ViewStateChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7b470-132">Quando implementado em uma classe derivada, declara um evento que indica que uma alteração foi feita ao estado de exibição que não pode ser desfeito do controle.</span><span class="sxs-lookup"><span data-stu-id="7b470-132">When implemented in a derived class, declares an event that signals that a change has been made to the control's undoable view state.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewStateChanged">
      <MemberSignature Language="C#" Value="public abstract event System.Activities.Presentation.View.ViewStateChangedEventHandler ViewStateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Activities.Presentation.View.ViewStateChangedEventHandler ViewStateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.View.ViewStateService.ViewStateChanged" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Event ViewStateChanged As ViewStateChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract event System::Activities::Presentation::View::ViewStateChangedEventHandler ^ ViewStateChanged;" />
      <MemberSignature Language="F#" Value="member this.ViewStateChanged : System.Activities.Presentation.View.ViewStateChangedEventHandler " Usage="member this.ViewStateChanged : System.Activities.Presentation.View.ViewStateChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.View.ViewStateChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7b470-133">Quando implementado em uma classe derivada, declara um evento que indica se uma alteração foi feita ao estado de exibição do controle.</span><span class="sxs-lookup"><span data-stu-id="7b470-133">When implemented in a derived class, declares an event that signals that a change has been made to the control's view state.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>