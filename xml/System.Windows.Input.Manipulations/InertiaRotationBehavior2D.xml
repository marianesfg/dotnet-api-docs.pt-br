<Type Name="InertiaRotationBehavior2D" FullName="System.Windows.Input.Manipulations.InertiaRotationBehavior2D">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f788e1b04b7ffd60a97167831c948acd4f12d196" /><Meta Name="ms.sourcegitcommit" Value="0528148687f8b0e0a3d0f550431a777fbe5346bc" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="04/25/2019" /><Meta Name="ms.locfileid" Value="64443244" /></Metadata><TypeSignature Language="C#" Value="public sealed class InertiaRotationBehavior2D : System.Windows.Input.Manipulations.InertiaParameters2D" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit InertiaRotationBehavior2D extends System.Windows.Input.Manipulations.InertiaParameters2D" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.Manipulations.InertiaRotationBehavior2D" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class InertiaRotationBehavior2D&#xA;Inherits InertiaParameters2D" />
  <TypeSignature Language="C++ CLI" Value="public ref class InertiaRotationBehavior2D sealed : System::Windows::Input::Manipulations::InertiaParameters2D" />
  <TypeSignature Language="F#" Value="type InertiaRotationBehavior2D = class&#xA;    inherit InertiaParameters2D" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.Manipulations.InertiaParameters2D</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Descreve o comportamento de rotação desejado de um processador de inércia.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InertiaRotationBehavior2D ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InertiaRotationBehavior2D();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Input.Manipulations.InertiaRotationBehavior2D" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesiredDeceleration">
      <MemberSignature Language="C#" Value="public float DesiredDeceleration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 DesiredDeceleration" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredDeceleration" />
      <MemberSignature Language="VB.NET" Value="Public Property DesiredDeceleration As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float DesiredDeceleration { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.DesiredDeceleration : single with get, set" Usage="System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredDeceleration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a desaceleração angular desejada, em radianos por milissegundo ao quadrado.</summary>
        <value>A desaceleração angular desejada, em radianos por milissegundo ao quadrado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propriedade representa a desaceleração angular desejada a ser usado durante a operação de inércia. Esse valor da propriedade é mutuamente exclusivo com o <xref:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredRotation%2A> propriedade; a configuração dessa propriedade será definida como <xref:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredRotation%2A> para `NaN`. O valor padrão para esta propriedade e <xref:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredRotation%2A> é `NaN`. Você deve definir uma ou outra propriedade antes do início de processamento de inércia.  
  
 <xref:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredDeceleration%2A> deve ser um número finito e positivo.  
  
 Essa propriedade não pode ser definida enquanto o processador de inércia está em execução; Caso contrário, uma exceção é lançada.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DesiredRotation">
      <MemberSignature Language="C#" Value="public float DesiredRotation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 DesiredRotation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredRotation" />
      <MemberSignature Language="VB.NET" Value="Public Property DesiredRotation As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float DesiredRotation { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.DesiredRotation : single with get, set" Usage="System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredRotation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a rotação desejada em radianos.</summary>
        <value>A rotação desejada em radianos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propriedade representa a rotação desejada final da operação de inércia. Esse valor da propriedade é mutuamente exclusivo com o <xref:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredDeceleration%2A> propriedade; a configuração dessa propriedade será definida como <xref:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredDeceleration%2A> para `NaN`. O valor padrão para esta propriedade e <xref:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredDeceleration%2A> é `NaN`. Você deve definir uma ou outra propriedade antes do início de processamento de inércia.  
  
 <xref:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredRotation%2A> deve ser um número finito e positivo. A direção de rotação é determinada pelo <xref:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.InitialVelocity%2A> propriedade.  
  
 Essa propriedade não pode ser definida enquanto o processador de inércia está em execução; Caso contrário, uma exceção é lançada.  
  
   
  
## Examples  
 No exemplo a seguir, o <xref:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredRotation%2A> propriedade é definida para habilitar o processamento de inércia girar um objeto três-e-meia de sua orientação inicial.  
  
 [!code-csharp[ManipulationAPI#_ManipulationItem_SetDesiredRotation](~/samples/snippets/csharp/VS_Snippets_Misc/manipulationapi/cs/manipulationitem.xaml.cs#_manipulationitem_setdesiredrotation)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitialVelocity">
      <MemberSignature Language="C#" Value="public float InitialVelocity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 InitialVelocity" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.InitialVelocity" />
      <MemberSignature Language="VB.NET" Value="Public Property InitialVelocity As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float InitialVelocity { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.InitialVelocity : single with get, set" Usage="System.Windows.Input.Manipulations.InertiaRotationBehavior2D.InitialVelocity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a velocidade de rotação inicial, em radianos por milissegundo.</summary>
        <value>A velocidade de rotação inicial, em radianos por milissegundo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O valor padrão desta propriedade é `NaN`. Deixar esta propriedade inalterado do padrão ou definir essa propriedade como zero (0) desabilitará a inércia rotacional.  
  
 Essa propriedade não pode ser definida enquanto o processador de inércia está em execução; Caso contrário, uma exceção é lançada.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>