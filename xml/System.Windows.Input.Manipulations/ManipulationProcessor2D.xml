<Type Name="ManipulationProcessor2D" FullName="System.Windows.Input.Manipulations.ManipulationProcessor2D">
  <TypeSignature Language="C#" Value="public class ManipulationProcessor2D" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ManipulationProcessor2D extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.Manipulations.ManipulationProcessor2D" />
  <TypeSignature Language="VB.NET" Value="Public Class ManipulationProcessor2D" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManipulationProcessor2D" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a50e1-101">Implementa um compositor de várias entradas e uma única saída para transformações bidimensionais (2D) em um espaço de coordenada compartilhado.</span><span class="sxs-lookup"><span data-stu-id="a50e1-101">Implements a multiple-input, single-output compositor for two-dimensional (2-D) transformations in a shared coordinate space.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a50e1-102">Um <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D> objeto trata uma coleção de manipuladores como um objeto composto.</span><span class="sxs-lookup"><span data-stu-id="a50e1-102">A <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D> object treats a collection of manipulators as a composite object.</span></span> <span data-ttu-id="a50e1-103">Seu aplicativo é liberado depois da necessidade de controlar e gerenciar manipuladores individuais.</span><span class="sxs-lookup"><span data-stu-id="a50e1-103">Your application is then freed from the necessity of tracking and managing individual manipulators.</span></span>  
  
 <span data-ttu-id="a50e1-104">Um processador de manipulação por si só não faz com que um elemento mover.</span><span class="sxs-lookup"><span data-stu-id="a50e1-104">A manipulation processor by itself does not cause an element to move.</span></span> <span data-ttu-id="a50e1-105">Seu aplicativo começa uma manipulação conforme necessário e, em seguida, recebe informações de um processador de manipulação ouvindo a <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Started>, <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta> e <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed> eventos.</span><span class="sxs-lookup"><span data-stu-id="a50e1-105">Your application begins a manipulation as necessary, and then receives information from a manipulation processor by listening to the <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Started>, <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta> and <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed> events.</span></span> <span data-ttu-id="a50e1-106">Os valores recebidos por esses eventos permitem que você alterar o local, o tamanho ou a orientação de um elemento, conforme necessário.</span><span class="sxs-lookup"><span data-stu-id="a50e1-106">The values received via these events enable you to change the location, size or orientation of an element as needed.</span></span>  
  
 <span data-ttu-id="a50e1-107">Você informou um processador de manipulação que tipos de manipulações são permitidos (traduzir, redimensionar, girar) definindo o <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.SupportedManipulations%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="a50e1-107">You inform a manipulation processor which types of manipulations are allowed (translate, scale, rotate) by setting the <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.SupportedManipulations%2A> property.</span></span> <span data-ttu-id="a50e1-108">Em seguida, você pode fornecer lógica condicional não para a transformação do elemento que está sendo manipulado.</span><span class="sxs-lookup"><span data-stu-id="a50e1-108">You can then provide non-conditional logic to the transformation of the element that is being manipulated.</span></span> <span data-ttu-id="a50e1-109">Por exemplo, em vez de verificar se a rotação está habilitada antes de alterar a orientação de um elemento, você pode aplicar incondicionalmente o fator de rotação recebido do processador manipulação; Se a rotação não estiver habilitada, o processador de manipulação relatará que nenhuma alteração rotação ocorreu.</span><span class="sxs-lookup"><span data-stu-id="a50e1-109">For instance, instead of checking if rotation is enabled before changing the orientation of an element, you can unconditionally apply the rotation factor received from the manipulation processor; if rotation is not enabled, the manipulation processor will report that no rotational change has occurred.</span></span>  
  
 <span data-ttu-id="a50e1-110">Quando um elemento que está sendo manipulado é liberado (todos os manipuladores são removidos), você pode usar o processamento de inércia simular fricção e fazer com que o elemento a velocidade gradualmente seus movimentos antes de entrar para uma parada.</span><span class="sxs-lookup"><span data-stu-id="a50e1-110">When an element that is being manipulated is released (all manipulators are removed), you can use inertia processing to simulate friction and cause the element to gradually slow its movements before coming to a stop.</span></span> <span data-ttu-id="a50e1-111">Para obter mais informações consulte a classe de <xref:System.Windows.Input.Manipulations.InertiaProcessor2D> .</span><span class="sxs-lookup"><span data-stu-id="a50e1-111">For more information see the <xref:System.Windows.Input.Manipulations.InertiaProcessor2D> class.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a50e1-112">Cria um novo objeto <see cref="T:System.Windows.Input.Manipulations.ManipulationProcessor2D" />.</span><span class="sxs-lookup"><span data-stu-id="a50e1-112">Creates a new <see cref="T:System.Windows.Input.Manipulations.ManipulationProcessor2D" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManipulationProcessor2D (System.Windows.Input.Manipulations.Manipulations2D supportedManipulations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Input.Manipulations.Manipulations2D supportedManipulations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulations.ManipulationProcessor2D.#ctor(System.Windows.Input.Manipulations.Manipulations2D)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (supportedManipulations As Manipulations2D)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManipulationProcessor2D(System::Windows::Input::Manipulations::Manipulations2D supportedManipulations);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="supportedManipulations" Type="System.Windows.Input.Manipulations.Manipulations2D" />
      </Parameters>
      <Docs>
        <param name="supportedManipulations"><span data-ttu-id="a50e1-113">O conjunto inicial de manipulações compatíveis.</span><span class="sxs-lookup"><span data-stu-id="a50e1-113">The initial set of supported manipulations.</span></span></param>
        <summary><span data-ttu-id="a50e1-114">Cria um novo objeto <see cref="T:System.Windows.Input.Manipulations.ManipulationProcessor2D" />.</span><span class="sxs-lookup"><span data-stu-id="a50e1-114">Creates a new <see cref="T:System.Windows.Input.Manipulations.ManipulationProcessor2D" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a50e1-115">O parâmetro <paramref name="supportedManipulations" /> não é uma combinação válida dos valores de enumeração <see cref="T:System.Windows.Input.Manipulations.Manipulations2D" />.</span><span class="sxs-lookup"><span data-stu-id="a50e1-115">The <paramref name="supportedManipulations" /> parameter is not a valid combination of the <see cref="T:System.Windows.Input.Manipulations.Manipulations2D" /> enumeration values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManipulationProcessor2D (System.Windows.Input.Manipulations.Manipulations2D supportedManipulations, System.Windows.Input.Manipulations.ManipulationPivot2D pivot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Input.Manipulations.Manipulations2D supportedManipulations, class System.Windows.Input.Manipulations.ManipulationPivot2D pivot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulations.ManipulationProcessor2D.#ctor(System.Windows.Input.Manipulations.Manipulations2D,System.Windows.Input.Manipulations.ManipulationPivot2D)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (supportedManipulations As Manipulations2D, pivot As ManipulationPivot2D)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManipulationProcessor2D(System::Windows::Input::Manipulations::Manipulations2D supportedManipulations, System::Windows::Input::Manipulations::ManipulationPivot2D ^ pivot);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="supportedManipulations" Type="System.Windows.Input.Manipulations.Manipulations2D" />
        <Parameter Name="pivot" Type="System.Windows.Input.Manipulations.ManipulationPivot2D" />
      </Parameters>
      <Docs>
        <param name="supportedManipulations"><span data-ttu-id="a50e1-116">O conjunto inicial de manipulações compatíveis.</span><span class="sxs-lookup"><span data-stu-id="a50e1-116">The initial set of supported manipulations.</span></span></param>
        <param name="pivot"><span data-ttu-id="a50e1-117">Informações de pivô para rotações de manipulador único.</span><span class="sxs-lookup"><span data-stu-id="a50e1-117">Pivot information for single-manipulator rotations.</span></span></param>
        <summary><span data-ttu-id="a50e1-118">Cria um novo objeto <see cref="T:System.Windows.Input.Manipulations.ManipulationProcessor2D" />.</span><span class="sxs-lookup"><span data-stu-id="a50e1-118">Creates a new <see cref="T:System.Windows.Input.Manipulations.ManipulationProcessor2D" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a50e1-119">O parâmetro <paramref name="supportedManipulations" /> não é uma combinação válida dos valores de enumeração <see cref="T:System.Windows.Input.Manipulations.Manipulations2D" />.</span><span class="sxs-lookup"><span data-stu-id="a50e1-119">The <paramref name="supportedManipulations" /> parameter is not a valid combination of the <see cref="T:System.Windows.Input.Manipulations.Manipulations2D" /> enumeration values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Completed">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs&gt; Completed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs&gt; Completed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed" />
      <MemberSignature Language="VB.NET" Value="Public Event Completed As EventHandler(Of Manipulation2DCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::Manipulations::Manipulation2DCompletedEventArgs ^&gt; ^ Completed;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a50e1-120">Ocorre quando uma manipulação foi concluída.</span><span class="sxs-lookup"><span data-stu-id="a50e1-120">Occurs when a manipulation has competed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompleteManipulation">
      <MemberSignature Language="C#" Value="public void CompleteManipulation (long timestamp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CompleteManipulation(int64 timestamp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulations.ManipulationProcessor2D.CompleteManipulation(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CompleteManipulation (timestamp As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CompleteManipulation(long timestamp);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timestamp" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="timestamp"><span data-ttu-id="a50e1-121">O carimbo de data/hora para concluir a manipulação, em tiques de 100 nanossegundos.</span><span class="sxs-lookup"><span data-stu-id="a50e1-121">The timestamp to complete the manipulation, in 100-nanosecond ticks.</span></span></param>
        <summary><span data-ttu-id="a50e1-122">Força a conclusão da manipulação atual e gera o evento <see cref="E:System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed" />.</span><span class="sxs-lookup"><span data-stu-id="a50e1-122">Forces the current manipulation to complete and raises the <see cref="E:System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a50e1-123">O carimbo de data/hora é menor que o carimbo de data/hora anterior para a manipulação atual.</span><span class="sxs-lookup"><span data-stu-id="a50e1-123">The timestamp is less than the previous timestamp for the current manipulation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Delta">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs&gt; Delta;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs&gt; Delta" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta" />
      <MemberSignature Language="VB.NET" Value="Public Event Delta As EventHandler(Of Manipulation2DDeltaEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::Manipulations::Manipulation2DDeltaEventArgs ^&gt; ^ Delta;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a50e1-124">Ocorre quando a origem da manipulação mudou ou quando houve translação, colocação em escala ou rotação.</span><span class="sxs-lookup"><span data-stu-id="a50e1-124">Occurs when the manipulation origin has changed or when translation, scaling, or rotation have occurred.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a50e1-125">O <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta?displayProperty=nameWithType> evento e o <xref:System.Windows.Input.Manipulations.InertiaProcessor2D.Delta?displayProperty=nameWithType> eventos são do mesmo tipo.</span><span class="sxs-lookup"><span data-stu-id="a50e1-125">The <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta?displayProperty=nameWithType> event and the <xref:System.Windows.Input.Manipulations.InertiaProcessor2D.Delta?displayProperty=nameWithType> event are the same type.</span></span> <span data-ttu-id="a50e1-126">Normalmente, você pode usar o mesmo manipulador de eventos para ambos os eventos.</span><span class="sxs-lookup"><span data-stu-id="a50e1-126">Typically, you can use the same event handler for both events.</span></span>  
  
   
  
## Examples  
 [!code-csharp[ManipulationAPI#_ManipulationItem_OnManipulationOrInertiaDelta](~/samples/snippets/csharp/VS_Snippets_Misc/manipulationapi/cs/manipulationitem.xaml.cs#_manipulationitem_onmanipulationorinertiadelta)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimumScaleRotateRadius">
      <MemberSignature Language="C#" Value="public float MinimumScaleRotateRadius { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 MinimumScaleRotateRadius" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Manipulations.ManipulationProcessor2D.MinimumScaleRotateRadius" />
      <MemberSignature Language="VB.NET" Value="Public Property MinimumScaleRotateRadius As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float MinimumScaleRotateRadius { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a50e1-127">Obtém ou define o raio mínimo, em unidades de coordenadas, necessário para um manipulador participar de colocação em escala e rotação.</span><span class="sxs-lookup"><span data-stu-id="a50e1-127">Gets or sets the minimum radius, in coordinate units, necessary for a manipulator to participate in scaling and rotation.</span></span></summary>
        <value><span data-ttu-id="a50e1-128">O raio mínimo, em unidades de coordenadas, necessários para um manipulator participar de escala e rotação.</span><span class="sxs-lookup"><span data-stu-id="a50e1-128">The minimum radius, in coordinate units, necessary for a manipulator to participate in scaling and rotation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a50e1-129">Se um manipulator é muito semelhante a Central de massa de manipuladores de sendo processado no momento, um movimento manipulator muito pequeno pode se tornar uma alteração muito grande de rotação ou dimensionamento.</span><span class="sxs-lookup"><span data-stu-id="a50e1-129">If a manipulator is extremely close to the center of mass of the manipulators currently being processed, a very small manipulator motion can become a very large change to rotation or scaling.</span></span> <span data-ttu-id="a50e1-130">Para evitar esse problema, defina <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.MinimumScaleRotateRadius%2A> com um valor maior que zero.</span><span class="sxs-lookup"><span data-stu-id="a50e1-130">To avoid this problem, set <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.MinimumScaleRotateRadius%2A> to something greater than zero.</span></span> <span data-ttu-id="a50e1-131">Qualquer que seja mais próximo que que distância da Centro de massa manipulator não será incluída em operações de escala e rotação.</span><span class="sxs-lookup"><span data-stu-id="a50e1-131">Any manipulator that is closer than that distance to the center of mass will not be included in rotation and scaling operations.</span></span>  
  
 <span data-ttu-id="a50e1-132">Um valor típico para usar deve ser baseado em magnitude provável de "acidentais" movimentos dos manipuladores.</span><span class="sxs-lookup"><span data-stu-id="a50e1-132">A typical value to use should be based on the likely magnitude of "accidental" motions of the manipulators.</span></span> <span data-ttu-id="a50e1-133">Por exemplo, se o manipulator humano dedo tocar uma tela, um radius correspondente a um centímetro ou isso pode ser apropriado.</span><span class="sxs-lookup"><span data-stu-id="a50e1-133">For example, if the manipulator is a human finger touching a screen, a radius corresponding to a centimeter or so might be appropriate.</span></span>  
  
 <span data-ttu-id="a50e1-134">O valor de <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.MinimumScaleRotateRadius%2A> deve ser um número finito e positivo.</span><span class="sxs-lookup"><span data-stu-id="a50e1-134">The value for <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.MinimumScaleRotateRadius%2A> must be a finite, non-negative number.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pivot">
      <MemberSignature Language="C#" Value="public System.Windows.Input.Manipulations.ManipulationPivot2D Pivot { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.Manipulations.ManipulationPivot2D Pivot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Manipulations.ManipulationProcessor2D.Pivot" />
      <MemberSignature Language="VB.NET" Value="Public Property Pivot As ManipulationPivot2D" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::Manipulations::ManipulationPivot2D ^ Pivot { System::Windows::Input::Manipulations::ManipulationPivot2D ^ get(); void set(System::Windows::Input::Manipulations::ManipulationPivot2D ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.Manipulations.ManipulationPivot2D</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a50e1-135">Obtém ou define as informações de pivô para o processador de manipulação.</span><span class="sxs-lookup"><span data-stu-id="a50e1-135">Gets or sets the pivot information for the manipulation processor.</span></span></summary>
        <value><span data-ttu-id="a50e1-136">As informações de tabela dinâmica para o processador de manipulação.</span><span class="sxs-lookup"><span data-stu-id="a50e1-136">The pivot information for the manipulation processor.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a50e1-137">O <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Pivot%2A> propriedade é usada para fornecer informações pivot rotações manipulator único.</span><span class="sxs-lookup"><span data-stu-id="a50e1-137">The <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Pivot%2A> property is used to provide pivot information for single-manipulator rotations.</span></span> <span data-ttu-id="a50e1-138">A definição dessa propriedade como null desabilita rotações manipulator único.</span><span class="sxs-lookup"><span data-stu-id="a50e1-138">Setting this property to null disables single-manipulator rotations.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessManipulators">
      <MemberSignature Language="C#" Value="public void ProcessManipulators (long timestamp, System.Collections.Generic.IEnumerable&lt;System.Windows.Input.Manipulations.Manipulator2D&gt; manipulators);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ProcessManipulators(int64 timestamp, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Windows.Input.Manipulations.Manipulator2D&gt; manipulators) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulations.ManipulationProcessor2D.ProcessManipulators(System.Int64,System.Collections.Generic.IEnumerable{System.Windows.Input.Manipulations.Manipulator2D})" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProcessManipulators (timestamp As Long, manipulators As IEnumerable(Of Manipulator2D))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ProcessManipulators(long timestamp, System::Collections::Generic::IEnumerable&lt;System::Windows::Input::Manipulations::Manipulator2D&gt; ^ manipulators);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timestamp" Type="System.Int64" />
        <Parameter Name="manipulators" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Input.Manipulations.Manipulator2D&gt;" />
      </Parameters>
      <Docs>
        <param name="timestamp"><span data-ttu-id="a50e1-139">O carimbo de data/hora para o lote, em tiques de 100 nanossegundos.</span><span class="sxs-lookup"><span data-stu-id="a50e1-139">The timestamp for the batch, in 100-nanosecond ticks.</span></span></param>
        <param name="manipulators"><span data-ttu-id="a50e1-140">O conjunto de manipuladores que estão no escopo no momento.</span><span class="sxs-lookup"><span data-stu-id="a50e1-140">The set of manipulators that are currently in scope.</span></span></param>
        <summary><span data-ttu-id="a50e1-141">Processa os manipuladores especificados como uma ação de lote único.</span><span class="sxs-lookup"><span data-stu-id="a50e1-141">Processes the specified manipulators as a single batch action.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a50e1-142">O parâmetro `manipulators` pode ser uma lista vazia ou null.</span><span class="sxs-lookup"><span data-stu-id="a50e1-142">The parameter `manipulators` may be an empty list or null.</span></span> <span data-ttu-id="a50e1-143">Se o resultado é o número de manipuladores de chegar a zero, o <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed> é gerado.</span><span class="sxs-lookup"><span data-stu-id="a50e1-143">If this results in the number of manipulators reaching zero, the <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed> event is raised.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a50e1-144">No exemplo a seguir, o <xref:System.Windows.UIElement.OnLostMouseCapture%2A> método de um <xref:System.Windows.UIElement> objeto é substituído para chamar o <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.ProcessManipulators%2A> método com a lista de <xref:System.Windows.Input.Manipulations.Manipulator2D> objetos definido como nulo.</span><span class="sxs-lookup"><span data-stu-id="a50e1-144">In the following example, the <xref:System.Windows.UIElement.OnLostMouseCapture%2A> method of a <xref:System.Windows.UIElement> object is overridden to call the <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.ProcessManipulators%2A> method with the list of <xref:System.Windows.Input.Manipulations.Manipulator2D> objects set to null.</span></span>  
  
 [!code-csharp[ManipulationAPI#_ManipulationItem_OnLostMouseCapture](~/samples/snippets/csharp/VS_Snippets_Misc/manipulationapi/cs/manipulationitem.xaml.cs#_manipulationitem_onlostmousecapture)]  
  
 [!code-csharp[ManipulationAPI#_ManipulationItem_Timestamp](~/samples/snippets/csharp/VS_Snippets_Misc/manipulationapi/cs/manipulationitem.xaml.cs#_manipulationitem_timestamp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a50e1-145">O carimbo de data/hora é menor que o carimbo de data/hora anterior para a manipulação atual.</span><span class="sxs-lookup"><span data-stu-id="a50e1-145">The timestamp is less than the previous timestamp for the current manipulation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetParameters">
      <MemberSignature Language="C#" Value="public void SetParameters (System.Windows.Input.Manipulations.ManipulationParameters2D parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetParameters(class System.Windows.Input.Manipulations.ManipulationParameters2D parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulations.ManipulationProcessor2D.SetParameters(System.Windows.Input.Manipulations.ManipulationParameters2D)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetParameters (parameters As ManipulationParameters2D)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetParameters(System::Windows::Input::Manipulations::ManipulationParameters2D ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Windows.Input.Manipulations.ManipulationParameters2D" />
      </Parameters>
      <Docs>
        <param name="parameters"><span data-ttu-id="a50e1-146">Parâmetros a definir.</span><span class="sxs-lookup"><span data-stu-id="a50e1-146">Parameters to set.</span></span></param>
        <summary><span data-ttu-id="a50e1-147">Define os parâmetros no processador de manipulação.</span><span class="sxs-lookup"><span data-stu-id="a50e1-147">Sets parameters on the manipulation processor.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Started">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DStartedEventArgs&gt; Started;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.Manipulations.Manipulation2DStartedEventArgs&gt; Started" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Manipulations.ManipulationProcessor2D.Started" />
      <MemberSignature Language="VB.NET" Value="Public Event Started As EventHandler(Of Manipulation2DStartedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::Manipulations::Manipulation2DStartedEventArgs ^&gt; ^ Started;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DStartedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a50e1-148">Ocorre quando uma nova manipulação foi iniciada.</span><span class="sxs-lookup"><span data-stu-id="a50e1-148">Occurs when a new manipulation has started.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a50e1-149">No exemplo a seguir, um manipulador de eventos para o <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Started> evento verifica se o processamento de inércia está em execução e, nesse caso, interrompe-lo.</span><span class="sxs-lookup"><span data-stu-id="a50e1-149">In the following example, an event handler for the <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Started> event checks to see if inertia processing is running and if so, stops it.</span></span>  
  
 [!code-csharp[ManipulationAPI#_ManipulationItem_OnManipulationStarted](~/samples/snippets/csharp/VS_Snippets_Misc/manipulationapi/cs/manipulationitem.xaml.cs#_manipulationitem_onmanipulationstarted)]  
  
 [!code-csharp[ManipulationAPI#_ManipulationItem_Timestamp](~/samples/snippets/csharp/VS_Snippets_Misc/manipulationapi/cs/manipulationitem.xaml.cs#_manipulationitem_timestamp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportedManipulations">
      <MemberSignature Language="C#" Value="public System.Windows.Input.Manipulations.Manipulations2D SupportedManipulations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.Manipulations.Manipulations2D SupportedManipulations" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Manipulations.ManipulationProcessor2D.SupportedManipulations" />
      <MemberSignature Language="VB.NET" Value="Public Property SupportedManipulations As Manipulations2D" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::Manipulations::Manipulations2D SupportedManipulations { System::Windows::Input::Manipulations::Manipulations2D get(); void set(System::Windows::Input::Manipulations::Manipulations2D value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.Manipulations.Manipulations2D</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a50e1-150">Obtém ou define o conjunto atual de manipulações compatíveis.</span><span class="sxs-lookup"><span data-stu-id="a50e1-150">Gets or sets the current set of supported manipulations.</span></span></summary>
        <value><span data-ttu-id="a50e1-151">O conjunto atual de manipulações com suporte.</span><span class="sxs-lookup"><span data-stu-id="a50e1-151">The current set of supported manipulations.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a50e1-152">A propriedade tenta definir um valor que não é uma combinação válida de <see cref="T:System.Windows.Input.Manipulations.Manipulations2D" /></span><span class="sxs-lookup"><span data-stu-id="a50e1-152">The property tries to set a value that is not a valid combination of the <see cref="T:System.Windows.Input.Manipulations.Manipulations2D" /></span></span>  
  
 <span data-ttu-id="a50e1-153">valores de enumeração.</span><span class="sxs-lookup"><span data-stu-id="a50e1-153">enumeration values.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>