<Type Name="ReflectionModelServices" FullName="System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1a4d3b8e3f924b79615c212cabd990d42339a305" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class ReflectionModelServices" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ReflectionModelServices extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices" />
  <TypeSignature Language="VB.NET" Value="Public Class ReflectionModelServices" />
  <TypeSignature Language="C++ CLI" Value="public ref class ReflectionModelServices abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="5b185-101">Fornece métodos de extensão para criar e recuperar blocos baseados em reflexão.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5b185-101">Provides extension methods to create and retrieve reflection-based parts.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateExportDefinition">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ExportDefinition CreateExportDefinition (System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo exportingMember, string contractName, Lazy&lt;System.Collections.Generic.IDictionary&lt;string,object&gt;&gt; metadata, System.ComponentModel.Composition.Primitives.ICompositionElement origin);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ExportDefinition CreateExportDefinition(valuetype System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo exportingMember, string contractName, class System.Lazy`1&lt;class System.Collections.Generic.IDictionary`2&lt;string, object&gt;&gt; metadata, class System.ComponentModel.Composition.Primitives.ICompositionElement origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateExportDefinition(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.String,System.Lazy{System.Collections.Generic.IDictionary{System.String,System.Object}},System.ComponentModel.Composition.Primitives.ICompositionElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateExportDefinition (exportingMember As LazyMemberInfo, contractName As String, metadata As Lazy(Of IDictionary(Of String, Object)), origin As ICompositionElement) As ExportDefinition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::Composition::Primitives::ExportDefinition ^ CreateExportDefinition(System::ComponentModel::Composition::ReflectionModel::LazyMemberInfo exportingMember, System::String ^ contractName, Lazy&lt;System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^&gt; ^ metadata, System::ComponentModel::Composition::Primitives::ICompositionElement ^ origin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ExportDefinition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exportingMember" Type="System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" />
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="metadata" Type="System.Lazy&lt;System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;&gt;" />
        <Parameter Name="origin" Type="System.ComponentModel.Composition.Primitives.ICompositionElement" />
      </Parameters>
      <Docs>
        <param name="exportingMember">
          <span data-ttu-id="5b185-102">O membro a ser exportado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-102">The member to export.</span>
          </span>
        </param>
        <param name="contractName">
          <span data-ttu-id="5b185-103">O nome do contrato a ser usado para a exportação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-103">The contract name to use for the export.</span>
          </span>
        </param>
        <param name="metadata">
          <span data-ttu-id="5b185-104">Os metadados para a exportação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-104">The metadata for the export.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="5b185-105">O objeto do qual a exportação foi originada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-105">The object that the export originates from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5b185-106">Cria uma definição de exportação do membro especificado, com o nome do contrato, metadados e origem especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-106">Creates an export definition from the specified member, with the specified contract name, metadata, and origin.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5b185-107">Uma definição de exportação criada com base nos parâmetros especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-107">An export definition created from the specified parameters.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateImportDefinition">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5b185-108">Cria uma definição de importação para um membro ou parâmetro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-108">Creates an import definition for a member or parameter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateImportDefinition">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition CreateImportDefinition (Lazy&lt;System.Reflection.ParameterInfo&gt; parameter, string contractName, string requiredTypeIdentity, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,Type&gt;&gt; requiredMetadata, System.ComponentModel.Composition.Primitives.ImportCardinality cardinality, System.ComponentModel.Composition.CreationPolicy requiredCreationPolicy, System.ComponentModel.Composition.Primitives.ICompositionElement origin);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition CreateImportDefinition(class System.Lazy`1&lt;class System.Reflection.ParameterInfo&gt; parameter, string contractName, string requiredTypeIdentity, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Type&gt;&gt; requiredMetadata, valuetype System.ComponentModel.Composition.Primitives.ImportCardinality cardinality, valuetype System.ComponentModel.Composition.CreationPolicy requiredCreationPolicy, class System.ComponentModel.Composition.Primitives.ICompositionElement origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.Lazy{System.Reflection.ParameterInfo},System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.ComponentModel.Composition.CreationPolicy,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateImportDefinition (parameter As Lazy(Of ParameterInfo), contractName As String, requiredTypeIdentity As String, requiredMetadata As IEnumerable(Of KeyValuePair(Of String, Type)), cardinality As ImportCardinality, requiredCreationPolicy As CreationPolicy, origin As ICompositionElement) As ContractBasedImportDefinition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::Composition::Primitives::ContractBasedImportDefinition ^ CreateImportDefinition(Lazy&lt;System::Reflection::ParameterInfo ^&gt; ^ parameter, System::String ^ contractName, System::String ^ requiredTypeIdentity, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, Type ^&gt;&gt; ^ requiredMetadata, System::ComponentModel::Composition::Primitives::ImportCardinality cardinality, System::ComponentModel::Composition::CreationPolicy requiredCreationPolicy, System::ComponentModel::Composition::Primitives::ICompositionElement ^ origin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Lazy&lt;System.Reflection.ParameterInfo&gt;" />
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="requiredTypeIdentity" Type="System.String" />
        <Parameter Name="requiredMetadata" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Type&gt;&gt;" />
        <Parameter Name="cardinality" Type="System.ComponentModel.Composition.Primitives.ImportCardinality" />
        <Parameter Name="requiredCreationPolicy" Type="System.ComponentModel.Composition.CreationPolicy" />
        <Parameter Name="origin" Type="System.ComponentModel.Composition.Primitives.ICompositionElement" />
      </Parameters>
      <Docs>
        <param name="parameter">
          <span data-ttu-id="5b185-109">O parâmetro a ser importado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-109">The parameter to import.</span>
          </span>
        </param>
        <param name="contractName">
          <span data-ttu-id="5b185-110">O nome de contrato a ser usado para a importação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-110">The contract name to use for the import.</span>
          </span>
        </param>
        <param name="requiredTypeIdentity">
          <span data-ttu-id="5b185-111">A identidade de tipo necessária para a importação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-111">The required type identity for the import.</span>
          </span>
        </param>
        <param name="requiredMetadata">
          <span data-ttu-id="5b185-112">Os metadados necessários para a importação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-112">The required metadata for the import.</span>
          </span>
        </param>
        <param name="cardinality">
          <span data-ttu-id="5b185-113">A cardinalidade da importação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-113">The cardinality of the import.</span>
          </span>
        </param>
        <param name="requiredCreationPolicy">
          <span data-ttu-id="5b185-114">Um dos valores de enumeração que especifica a política de criação da importação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-114">One of the enumeration values that specifies the import's creation policy.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="5b185-115">O objeto para o qual importar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-115">The object to import into.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5b185-116">Cria uma definição de importação para o parâmetro especificado usando o nome de contrato, identidade de tipo, metadados de importação, cardinalidade e política de criação especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-116">Creates an import definition for the specified parameter by using the specified contract name, type identity, import metadata, cardinality, and creation policy.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5b185-117">Uma definição de importação criada com base nos parâmetros especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-117">An import definition created from the specified parameters.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateImportDefinition">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition CreateImportDefinition (System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo importingMember, string contractName, string requiredTypeIdentity, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,Type&gt;&gt; requiredMetadata, System.ComponentModel.Composition.Primitives.ImportCardinality cardinality, bool isRecomposable, System.ComponentModel.Composition.CreationPolicy requiredCreationPolicy, System.ComponentModel.Composition.Primitives.ICompositionElement origin);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition CreateImportDefinition(valuetype System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo importingMember, string contractName, string requiredTypeIdentity, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Type&gt;&gt; requiredMetadata, valuetype System.ComponentModel.Composition.Primitives.ImportCardinality cardinality, bool isRecomposable, valuetype System.ComponentModel.Composition.CreationPolicy requiredCreationPolicy, class System.ComponentModel.Composition.Primitives.ICompositionElement origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateImportDefinition (importingMember As LazyMemberInfo, contractName As String, requiredTypeIdentity As String, requiredMetadata As IEnumerable(Of KeyValuePair(Of String, Type)), cardinality As ImportCardinality, isRecomposable As Boolean, requiredCreationPolicy As CreationPolicy, origin As ICompositionElement) As ContractBasedImportDefinition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::Composition::Primitives::ContractBasedImportDefinition ^ CreateImportDefinition(System::ComponentModel::Composition::ReflectionModel::LazyMemberInfo importingMember, System::String ^ contractName, System::String ^ requiredTypeIdentity, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, Type ^&gt;&gt; ^ requiredMetadata, System::ComponentModel::Composition::Primitives::ImportCardinality cardinality, bool isRecomposable, System::ComponentModel::Composition::CreationPolicy requiredCreationPolicy, System::ComponentModel::Composition::Primitives::ICompositionElement ^ origin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importingMember" Type="System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" />
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="requiredTypeIdentity" Type="System.String" />
        <Parameter Name="requiredMetadata" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Type&gt;&gt;" />
        <Parameter Name="cardinality" Type="System.ComponentModel.Composition.Primitives.ImportCardinality" />
        <Parameter Name="isRecomposable" Type="System.Boolean" />
        <Parameter Name="requiredCreationPolicy" Type="System.ComponentModel.Composition.CreationPolicy" />
        <Parameter Name="origin" Type="System.ComponentModel.Composition.Primitives.ICompositionElement" />
      </Parameters>
      <Docs>
        <param name="importingMember">
          <span data-ttu-id="5b185-118">O membro para o qual importar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-118">The member to import into.</span>
          </span>
        </param>
        <param name="contractName">
          <span data-ttu-id="5b185-119">O nome de contrato a ser usado para a importação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-119">The contract name to use for the import.</span>
          </span>
        </param>
        <param name="requiredTypeIdentity">
          <span data-ttu-id="5b185-120">A identidade de tipo necessária para a importação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-120">The required type identity for the import.</span>
          </span>
        </param>
        <param name="requiredMetadata">
          <span data-ttu-id="5b185-121">Os metadados necessários para a importação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-121">The required metadata for the import.</span>
          </span>
        </param>
        <param name="cardinality">
          <span data-ttu-id="5b185-122">A cardinalidade da importação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-122">The cardinality of the import.</span>
          </span>
        </param>
        <param name="isRecomposable">
          <span data-ttu-id="5b185-123">
            <see langword="true" /> para indicar que a importação pode ser recomposta; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-123">
              <see langword="true" /> to indicate that the import is recomposable; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="requiredCreationPolicy">
          <span data-ttu-id="5b185-124">Um dos valores de enumeração que especifica a política de criação da importação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-124">One of the enumeration values that specifies the import's creation policy.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="5b185-125">O objeto para o qual importar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-125">The object to import into.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5b185-126">Cria uma definição de importação para o membro especificado usando o nome de contrato, identidade de tipo, metadados de importação, cardinalidade, política de recomposição e política de criação especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-126">Creates an import definition for the specified member by using the specified contract name, type identity, import metadata, cardinality, recomposition policy, and creation policy.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5b185-127">Uma definição de importação criada com base nos parâmetros especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-127">An import definition created from the specified parameters.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateImportDefinition">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition CreateImportDefinition (Lazy&lt;System.Reflection.ParameterInfo&gt; parameter, string contractName, string requiredTypeIdentity, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,Type&gt;&gt; requiredMetadata, System.ComponentModel.Composition.Primitives.ImportCardinality cardinality, System.ComponentModel.Composition.CreationPolicy requiredCreationPolicy, System.Collections.Generic.IDictionary&lt;string,object&gt; metadata, bool isExportFactory, System.ComponentModel.Composition.Primitives.ICompositionElement origin);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition CreateImportDefinition(class System.Lazy`1&lt;class System.Reflection.ParameterInfo&gt; parameter, string contractName, string requiredTypeIdentity, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Type&gt;&gt; requiredMetadata, valuetype System.ComponentModel.Composition.Primitives.ImportCardinality cardinality, valuetype System.ComponentModel.Composition.CreationPolicy requiredCreationPolicy, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; metadata, bool isExportFactory, class System.ComponentModel.Composition.Primitives.ICompositionElement origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.Lazy{System.Reflection.ParameterInfo},System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateImportDefinition (parameter As Lazy(Of ParameterInfo), contractName As String, requiredTypeIdentity As String, requiredMetadata As IEnumerable(Of KeyValuePair(Of String, Type)), cardinality As ImportCardinality, requiredCreationPolicy As CreationPolicy, metadata As IDictionary(Of String, Object), isExportFactory As Boolean, origin As ICompositionElement) As ContractBasedImportDefinition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::Composition::Primitives::ContractBasedImportDefinition ^ CreateImportDefinition(Lazy&lt;System::Reflection::ParameterInfo ^&gt; ^ parameter, System::String ^ contractName, System::String ^ requiredTypeIdentity, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, Type ^&gt;&gt; ^ requiredMetadata, System::ComponentModel::Composition::Primitives::ImportCardinality cardinality, System::ComponentModel::Composition::CreationPolicy requiredCreationPolicy, System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ metadata, bool isExportFactory, System::ComponentModel::Composition::Primitives::ICompositionElement ^ origin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Lazy&lt;System.Reflection.ParameterInfo&gt;" />
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="requiredTypeIdentity" Type="System.String" />
        <Parameter Name="requiredMetadata" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Type&gt;&gt;" />
        <Parameter Name="cardinality" Type="System.ComponentModel.Composition.Primitives.ImportCardinality" />
        <Parameter Name="requiredCreationPolicy" Type="System.ComponentModel.Composition.CreationPolicy" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="isExportFactory" Type="System.Boolean" />
        <Parameter Name="origin" Type="System.ComponentModel.Composition.Primitives.ICompositionElement" />
      </Parameters>
      <Docs>
        <param name="parameter">
          <span data-ttu-id="5b185-128">O parâmetro a ser importado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-128">The parameter to import.</span>
          </span>
        </param>
        <param name="contractName">
          <span data-ttu-id="5b185-129">O nome de contrato a ser usado para a importação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-129">The contract name to use for the import.</span>
          </span>
        </param>
        <param name="requiredTypeIdentity">
          <span data-ttu-id="5b185-130">A identidade de tipo necessária para a importação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-130">The required type identity for the import.</span>
          </span>
        </param>
        <param name="requiredMetadata">
          <span data-ttu-id="5b185-131">Os metadados necessários para a importação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-131">The required metadata for the import.</span>
          </span>
        </param>
        <param name="cardinality">
          <span data-ttu-id="5b185-132">A cardinalidade da importação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-132">The cardinality of the import.</span>
          </span>
        </param>
        <param name="requiredCreationPolicy">
          <span data-ttu-id="5b185-133">Um dos valores de enumeração que especifica a política de criação da importação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-133">One of the enumeration values that specifies the import's creation policy.</span>
          </span>
        </param>
        <param name="metadata">
          <span data-ttu-id="5b185-134">Os metadados do contrato</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-134">The contract metadata</span>
          </span>
        </param>
        <param name="isExportFactory">
          <span data-ttu-id="5b185-135">
            <see langword="true" /> para indicar que a importação representa um <see cref="T:System.ComponentModel.Composition.ExportFactory`1" />; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-135">
              <see langword="true" /> to indicate that the import represents an <see cref="T:System.ComponentModel.Composition.ExportFactory`1" />; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="5b185-136">O objeto para o qual importar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-136">The object to import into.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5b185-137">Cria uma definição de importação para o parâmetro especificado usando o nome de contrato, identidade de tipo, metadados de importação e contrato, cardinalidade e política de criação especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-137">Creates an import definition for the specified parameter by using the specified contract name, type identity, import and contract metadata, cardinality, and creation policy.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5b185-138">Uma definição de importação criada com base nos parâmetros especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-138">An import definition created from the specified parameters.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateImportDefinition">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition CreateImportDefinition (System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo importingMember, string contractName, string requiredTypeIdentity, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,Type&gt;&gt; requiredMetadata, System.ComponentModel.Composition.Primitives.ImportCardinality cardinality, bool isRecomposable, System.ComponentModel.Composition.CreationPolicy requiredCreationPolicy, System.Collections.Generic.IDictionary&lt;string,object&gt; metadata, bool isExportFactory, System.ComponentModel.Composition.Primitives.ICompositionElement origin);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition CreateImportDefinition(valuetype System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo importingMember, string contractName, string requiredTypeIdentity, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Type&gt;&gt; requiredMetadata, valuetype System.ComponentModel.Composition.Primitives.ImportCardinality cardinality, bool isRecomposable, valuetype System.ComponentModel.Composition.CreationPolicy requiredCreationPolicy, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; metadata, bool isExportFactory, class System.ComponentModel.Composition.Primitives.ICompositionElement origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateImportDefinition (importingMember As LazyMemberInfo, contractName As String, requiredTypeIdentity As String, requiredMetadata As IEnumerable(Of KeyValuePair(Of String, Type)), cardinality As ImportCardinality, isRecomposable As Boolean, requiredCreationPolicy As CreationPolicy, metadata As IDictionary(Of String, Object), isExportFactory As Boolean, origin As ICompositionElement) As ContractBasedImportDefinition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::Composition::Primitives::ContractBasedImportDefinition ^ CreateImportDefinition(System::ComponentModel::Composition::ReflectionModel::LazyMemberInfo importingMember, System::String ^ contractName, System::String ^ requiredTypeIdentity, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, Type ^&gt;&gt; ^ requiredMetadata, System::ComponentModel::Composition::Primitives::ImportCardinality cardinality, bool isRecomposable, System::ComponentModel::Composition::CreationPolicy requiredCreationPolicy, System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ metadata, bool isExportFactory, System::ComponentModel::Composition::Primitives::ICompositionElement ^ origin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importingMember" Type="System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" />
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="requiredTypeIdentity" Type="System.String" />
        <Parameter Name="requiredMetadata" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Type&gt;&gt;" />
        <Parameter Name="cardinality" Type="System.ComponentModel.Composition.Primitives.ImportCardinality" />
        <Parameter Name="isRecomposable" Type="System.Boolean" />
        <Parameter Name="requiredCreationPolicy" Type="System.ComponentModel.Composition.CreationPolicy" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="isExportFactory" Type="System.Boolean" />
        <Parameter Name="origin" Type="System.ComponentModel.Composition.Primitives.ICompositionElement" />
      </Parameters>
      <Docs>
        <param name="importingMember">
          <span data-ttu-id="5b185-139">O membro para o qual importar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-139">The member to import into.</span>
          </span>
        </param>
        <param name="contractName">
          <span data-ttu-id="5b185-140">O nome de contrato a ser usado para a importação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-140">The contract name to use for the import.</span>
          </span>
        </param>
        <param name="requiredTypeIdentity">
          <span data-ttu-id="5b185-141">A identidade de tipo necessária para a importação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-141">The required type identity for the import.</span>
          </span>
        </param>
        <param name="requiredMetadata">
          <span data-ttu-id="5b185-142">Os metadados necessários para a importação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-142">The required metadata for the import.</span>
          </span>
        </param>
        <param name="cardinality">
          <span data-ttu-id="5b185-143">A cardinalidade da importação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-143">The cardinality of the import.</span>
          </span>
        </param>
        <param name="isRecomposable">
          <span data-ttu-id="5b185-144">
            <see langword="true" /> para indicar que a importação pode ser recomposta; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-144">
              <see langword="true" /> to indicate that the import is recomposable; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="requiredCreationPolicy">
          <span data-ttu-id="5b185-145">Um dos valores de enumeração que especifica a política de criação da importação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-145">One of the enumeration values that specifies the import's creation policy.</span>
          </span>
        </param>
        <param name="metadata">
          <span data-ttu-id="5b185-146">Os metadados do contrato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-146">The contract metadata.</span>
          </span>
        </param>
        <param name="isExportFactory">
          <span data-ttu-id="5b185-147">
            <see langword="true" /> para indicar que a importação representa um <see cref="T:System.ComponentModel.Composition.ExportFactory`1" />; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-147">
              <see langword="true" /> to indicate that the import represents an <see cref="T:System.ComponentModel.Composition.ExportFactory`1" />; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="5b185-148">O objeto para o qual importar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-148">The object to import into.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5b185-149">Cria uma definição de importação para o membro especificado usando o nome de contrato, identidade de tipo, metadados de importação e contrato, cardinalidade, política de recomposição e política de criação especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-149">Creates an import definition for the specified member by using the specified contract name, type identity, import and contract metadata, cardinality, recomposition policy, and creation policy.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5b185-150">Uma definição de importação criada com base nos parâmetros especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-150">An import definition created from the specified parameters.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateImportDefinition">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition CreateImportDefinition (System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo importingMember, string contractName, string requiredTypeIdentity, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,Type&gt;&gt; requiredMetadata, System.ComponentModel.Composition.Primitives.ImportCardinality cardinality, bool isRecomposable, bool isPreRequisite, System.ComponentModel.Composition.CreationPolicy requiredCreationPolicy, System.Collections.Generic.IDictionary&lt;string,object&gt; metadata, bool isExportFactory, System.ComponentModel.Composition.Primitives.ICompositionElement origin);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition CreateImportDefinition(valuetype System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo importingMember, string contractName, string requiredTypeIdentity, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Type&gt;&gt; requiredMetadata, valuetype System.ComponentModel.Composition.Primitives.ImportCardinality cardinality, bool isRecomposable, bool isPreRequisite, valuetype System.ComponentModel.Composition.CreationPolicy requiredCreationPolicy, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; metadata, bool isExportFactory, class System.ComponentModel.Composition.Primitives.ICompositionElement origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateImportDefinition (importingMember As LazyMemberInfo, contractName As String, requiredTypeIdentity As String, requiredMetadata As IEnumerable(Of KeyValuePair(Of String, Type)), cardinality As ImportCardinality, isRecomposable As Boolean, isPreRequisite As Boolean, requiredCreationPolicy As CreationPolicy, metadata As IDictionary(Of String, Object), isExportFactory As Boolean, origin As ICompositionElement) As ContractBasedImportDefinition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::Composition::Primitives::ContractBasedImportDefinition ^ CreateImportDefinition(System::ComponentModel::Composition::ReflectionModel::LazyMemberInfo importingMember, System::String ^ contractName, System::String ^ requiredTypeIdentity, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, Type ^&gt;&gt; ^ requiredMetadata, System::ComponentModel::Composition::Primitives::ImportCardinality cardinality, bool isRecomposable, bool isPreRequisite, System::ComponentModel::Composition::CreationPolicy requiredCreationPolicy, System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ metadata, bool isExportFactory, System::ComponentModel::Composition::Primitives::ICompositionElement ^ origin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importingMember" Type="System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" />
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="requiredTypeIdentity" Type="System.String" />
        <Parameter Name="requiredMetadata" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Type&gt;&gt;" />
        <Parameter Name="cardinality" Type="System.ComponentModel.Composition.Primitives.ImportCardinality" />
        <Parameter Name="isRecomposable" Type="System.Boolean" />
        <Parameter Name="isPreRequisite" Type="System.Boolean" />
        <Parameter Name="requiredCreationPolicy" Type="System.ComponentModel.Composition.CreationPolicy" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="isExportFactory" Type="System.Boolean" />
        <Parameter Name="origin" Type="System.ComponentModel.Composition.Primitives.ICompositionElement" />
      </Parameters>
      <Docs>
        <param name="importingMember">
          <span data-ttu-id="5b185-151">O membro para o qual importar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-151">The member to import into.</span>
          </span>
        </param>
        <param name="contractName">
          <span data-ttu-id="5b185-152">O nome de contrato a ser usado para a importação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-152">The contract name to use for the import.</span>
          </span>
        </param>
        <param name="requiredTypeIdentity">
          <span data-ttu-id="5b185-153">A identidade de tipo necessária para a importação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-153">The required type identity for the import.</span>
          </span>
        </param>
        <param name="requiredMetadata">
          <span data-ttu-id="5b185-154">Os metadados necessários para a importação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-154">The required metadata for the import.</span>
          </span>
        </param>
        <param name="cardinality">
          <span data-ttu-id="5b185-155">A cardinalidade da importação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-155">The cardinality of the import.</span>
          </span>
        </param>
        <param name="isRecomposable">
          <span data-ttu-id="5b185-156">
            <see langword="true" /> para indicar que a importação pode ser recomposta; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-156">
              <see langword="true" /> to indicate that the import is recomposable; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="isPreRequisite">
          <span data-ttu-id="5b185-157">
            <see langword="true" /> para indicar que a importação é um pré-requisito; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-157">
              <see langword="true" /> to indicate that the import is a prerequisite; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="requiredCreationPolicy">
          <span data-ttu-id="5b185-158">Um dos valores de enumeração que especifica a política de criação da importação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-158">One of the enumeration values that specifies the import's creation policy.</span>
          </span>
        </param>
        <param name="metadata">
          <span data-ttu-id="5b185-159">Os metadados do contrato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-159">The contract metadata.</span>
          </span>
        </param>
        <param name="isExportFactory">
          <span data-ttu-id="5b185-160">
            <see langword="true" /> para indicar que a importação representa um <see cref="T:System.ComponentModel.Composition.ExportFactory`1" />; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-160">
              <see langword="true" /> to indicate that the import represents an <see cref="T:System.ComponentModel.Composition.ExportFactory`1" />; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="5b185-161">O objeto para o qual importar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-161">The object to import into.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5b185-162">Cria uma definição de importação para o membro especificado usando o nome de contrato, identidade de tipo, metadados de importação e contrato, cardinalidade, política de recomposição e política de criação especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-162">Creates an import definition for the specified member by using the specified contract name, type identity, import and contract metadata, cardinality, recomposition policy, and creation policy.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5b185-163">Uma definição de importação criada com base nos parâmetros especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-163">An import definition created from the specified parameters.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePartDefinition">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ComposablePartDefinition CreatePartDefinition (Lazy&lt;Type&gt; partType, bool isDisposalRequired, Lazy&lt;System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.ImportDefinition&gt;&gt; imports, Lazy&lt;System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.ExportDefinition&gt;&gt; exports, Lazy&lt;System.Collections.Generic.IDictionary&lt;string,object&gt;&gt; metadata, System.ComponentModel.Composition.Primitives.ICompositionElement origin);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ComposablePartDefinition CreatePartDefinition(class System.Lazy`1&lt;class System.Type&gt; partType, bool isDisposalRequired, class System.Lazy`1&lt;class System.Collections.Generic.IEnumerable`1&lt;class System.ComponentModel.Composition.Primitives.ImportDefinition&gt;&gt; imports, class System.Lazy`1&lt;class System.Collections.Generic.IEnumerable`1&lt;class System.ComponentModel.Composition.Primitives.ExportDefinition&gt;&gt; exports, class System.Lazy`1&lt;class System.Collections.Generic.IDictionary`2&lt;string, object&gt;&gt; metadata, class System.ComponentModel.Composition.Primitives.ICompositionElement origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreatePartDefinition(System.Lazy{System.Type},System.Boolean,System.Lazy{System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ImportDefinition}},System.Lazy{System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ExportDefinition}},System.Lazy{System.Collections.Generic.IDictionary{System.String,System.Object}},System.ComponentModel.Composition.Primitives.ICompositionElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreatePartDefinition (partType As Lazy(Of Type), isDisposalRequired As Boolean, imports As Lazy(Of IEnumerable(Of ImportDefinition)), exports As Lazy(Of IEnumerable(Of ExportDefinition)), metadata As Lazy(Of IDictionary(Of String, Object)), origin As ICompositionElement) As ComposablePartDefinition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^ CreatePartDefinition(Lazy&lt;Type ^&gt; ^ partType, bool isDisposalRequired, Lazy&lt;System::Collections::Generic::IEnumerable&lt;System::ComponentModel::Composition::Primitives::ImportDefinition ^&gt; ^&gt; ^ imports, Lazy&lt;System::Collections::Generic::IEnumerable&lt;System::ComponentModel::Composition::Primitives::ExportDefinition ^&gt; ^&gt; ^ exports, Lazy&lt;System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^&gt; ^ metadata, System::ComponentModel::Composition::Primitives::ICompositionElement ^ origin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ComposablePartDefinition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partType" Type="System.Lazy&lt;System.Type&gt;" />
        <Parameter Name="isDisposalRequired" Type="System.Boolean" />
        <Parameter Name="imports" Type="System.Lazy&lt;System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.ImportDefinition&gt;&gt;" />
        <Parameter Name="exports" Type="System.Lazy&lt;System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.ExportDefinition&gt;&gt;" />
        <Parameter Name="metadata" Type="System.Lazy&lt;System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;&gt;" />
        <Parameter Name="origin" Type="System.ComponentModel.Composition.Primitives.ICompositionElement" />
      </Parameters>
      <Docs>
        <param name="partType">
          <span data-ttu-id="5b185-164">O tipo da parte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-164">The type of the part.</span>
          </span>
        </param>
        <param name="isDisposalRequired">
          <span data-ttu-id="5b185-165">
            <see langword="true" /> se o bloco exige o descarte; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-165">
              <see langword="true" /> if the part requires disposal; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="imports">
          <span data-ttu-id="5b185-166">Uma coleção das importações do bloco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-166">A collection of the part's imports.</span>
          </span>
        </param>
        <param name="exports">
          <span data-ttu-id="5b185-167">Uma coleção das exportações do bloco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-167">A collection of the part's exports.</span>
          </span>
        </param>
        <param name="metadata">
          <span data-ttu-id="5b185-168">Os metadados do bloco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-168">The part's metadata.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="5b185-169">A origem do bloco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-169">The part's origin.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5b185-170">Cria uma definição de bloco com o tipo de bloco, importações, exportações, metadados e origem especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-170">Creates a part definition with the specified part type, imports, exports, metadata, and origin.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5b185-171">Uma definição de bloco criada com base nos parâmetros especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-171">A part definition created from the specified parameters.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExportFactoryProductImportDefinition">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition GetExportFactoryProductImportDefinition (System.ComponentModel.Composition.Primitives.ImportDefinition importDefinition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition GetExportFactoryProductImportDefinition(class System.ComponentModel.Composition.Primitives.ImportDefinition importDefinition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetExportFactoryProductImportDefinition(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::Composition::Primitives::ContractBasedImportDefinition ^ GetExportFactoryProductImportDefinition(System::ComponentModel::Composition::Primitives::ImportDefinition ^ importDefinition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importDefinition" Type="System.ComponentModel.Composition.Primitives.ImportDefinition" />
      </Parameters>
      <Docs>
        <param name="importDefinition">
          <span data-ttu-id="5b185-172">A definição de importação a ser representada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-172">The import definition to represent.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5b185-173">Retorna uma representação de uma definição de importação como um produto de alocador de exportação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-173">Returns a representation of an import definition as an export factory product.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5b185-174">A representação da definição de importação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-174">The representation of the import definition.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExportingMember">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo GetExportingMember (System.ComponentModel.Composition.Primitives.ExportDefinition exportDefinition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo GetExportingMember(class System.ComponentModel.Composition.Primitives.ExportDefinition exportDefinition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetExportingMember(System.ComponentModel.Composition.Primitives.ExportDefinition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::Composition::ReflectionModel::LazyMemberInfo GetExportingMember(System::ComponentModel::Composition::Primitives::ExportDefinition ^ exportDefinition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exportDefinition" Type="System.ComponentModel.Composition.Primitives.ExportDefinition" />
      </Parameters>
      <Docs>
        <param name="exportDefinition">
          <span data-ttu-id="5b185-175">A definição de exportação a ser examinada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-175">The export definition to examine.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5b185-176">Obtém o membro de exportação de uma definição de exportação especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-176">Gets the exporting member from a specified export definition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5b185-177">O membro especificado na definição de exportação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-177">The member specified in the export definition.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5b185-178">
            <paramref name="exportDefinition" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-178">
              <paramref name="exportDefinition" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetImportingMember">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo GetImportingMember (System.ComponentModel.Composition.Primitives.ImportDefinition importDefinition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo GetImportingMember(class System.ComponentModel.Composition.Primitives.ImportDefinition importDefinition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetImportingMember(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::Composition::ReflectionModel::LazyMemberInfo GetImportingMember(System::ComponentModel::Composition::Primitives::ImportDefinition ^ importDefinition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importDefinition" Type="System.ComponentModel.Composition.Primitives.ImportDefinition" />
      </Parameters>
      <Docs>
        <param name="importDefinition">
          <span data-ttu-id="5b185-179">A definição de importação a ser examinada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-179">The import definition to examine.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5b185-180">Obtém o membro de importação de uma definição de importação especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-180">Gets the importing member from a specified import definition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5b185-181">O membro especificado na definição de importação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-181">The member specified in the import definition.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5b185-182">
            <paramref name="importDefinition" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-182">
              <paramref name="importDefinition" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetImportingParameter">
      <MemberSignature Language="C#" Value="public static Lazy&lt;System.Reflection.ParameterInfo&gt; GetImportingParameter (System.ComponentModel.Composition.Primitives.ImportDefinition importDefinition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Lazy`1&lt;class System.Reflection.ParameterInfo&gt; GetImportingParameter(class System.ComponentModel.Composition.Primitives.ImportDefinition importDefinition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetImportingParameter(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Lazy&lt;System::Reflection::ParameterInfo ^&gt; ^ GetImportingParameter(System::ComponentModel::Composition::Primitives::ImportDefinition ^ importDefinition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Lazy&lt;System.Reflection.ParameterInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importDefinition" Type="System.ComponentModel.Composition.Primitives.ImportDefinition" />
      </Parameters>
      <Docs>
        <param name="importDefinition">
          <span data-ttu-id="5b185-183">A definição de importação a ser examinada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-183">The import definition to examine.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5b185-184">Obtém o parâmetro de importação de uma definição de importação especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-184">Gets the importing parameter from a specified import definition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5b185-185">O parâmetro especificado na definição de importação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-185">The parameter specified in the import definition.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5b185-186">
            <paramref name="importDefinition" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-186">
              <paramref name="importDefinition" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPartType">
      <MemberSignature Language="C#" Value="public static Lazy&lt;Type&gt; GetPartType (System.ComponentModel.Composition.Primitives.ComposablePartDefinition partDefinition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Lazy`1&lt;class System.Type&gt; GetPartType(class System.ComponentModel.Composition.Primitives.ComposablePartDefinition partDefinition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetPartType(System.ComponentModel.Composition.Primitives.ComposablePartDefinition)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPartType (partDefinition As ComposablePartDefinition) As Lazy(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Lazy&lt;Type ^&gt; ^ GetPartType(System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^ partDefinition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Lazy&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partDefinition" Type="System.ComponentModel.Composition.Primitives.ComposablePartDefinition" />
      </Parameters>
      <Docs>
        <param name="partDefinition">
          <span data-ttu-id="5b185-187">A definição de bloco a ser examinada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-187">The part definition to examine.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5b185-188">Obtém o tipo de um bloco de uma definição de bloco especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-188">Gets the type of a part from a specified part definition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5b185-189">O tipo do bloco definido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-189">The type of the defined part.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5b185-190">
            <paramref name="partDefinition" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-190">
              <paramref name="partDefinition" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsDisposalRequired">
      <MemberSignature Language="C#" Value="public static bool IsDisposalRequired (System.ComponentModel.Composition.Primitives.ComposablePartDefinition partDefinition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDisposalRequired(class System.ComponentModel.Composition.Primitives.ComposablePartDefinition partDefinition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.IsDisposalRequired(System.ComponentModel.Composition.Primitives.ComposablePartDefinition)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDisposalRequired (partDefinition As ComposablePartDefinition) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDisposalRequired(System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^ partDefinition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partDefinition" Type="System.ComponentModel.Composition.Primitives.ComposablePartDefinition" />
      </Parameters>
      <Docs>
        <param name="partDefinition">
          <span data-ttu-id="5b185-191">O bloco a ser examinado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-191">The part to examine.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5b185-192">Determina se o bloco especificado exige descarte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-192">Determines whether the specified part requires disposal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5b185-193">
            <see langword="true" /> se o bloco exige o descarte; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-193">
              <see langword="true" /> if the part requires disposal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5b185-194">
            <paramref name="partDefinition" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-194">
              <paramref name="partDefinition" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsExportFactoryImportDefinition">
      <MemberSignature Language="C#" Value="public static bool IsExportFactoryImportDefinition (System.ComponentModel.Composition.Primitives.ImportDefinition importDefinition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsExportFactoryImportDefinition(class System.ComponentModel.Composition.Primitives.ImportDefinition importDefinition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.IsExportFactoryImportDefinition(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsExportFactoryImportDefinition(System::ComponentModel::Composition::Primitives::ImportDefinition ^ importDefinition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importDefinition" Type="System.ComponentModel.Composition.Primitives.ImportDefinition" />
      </Parameters>
      <Docs>
        <param name="importDefinition">
          <span data-ttu-id="5b185-195">A definição de importação a ser verificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-195">The import definition to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5b185-196">Indica se uma definição de importação especificada representa um alocador de exportação (objeto <see cref="T:System.ComponentModel.Composition.ExportFactory`1" /> ou <see cref="T:System.ComponentModel.Composition.ExportFactory`2" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-196">Indicates whether a specified import definition represents an export factory (<see cref="T:System.ComponentModel.Composition.ExportFactory`1" /> or <see cref="T:System.ComponentModel.Composition.ExportFactory`2" /> object).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5b185-197">
            <see langword="true" /> se a definição de importação especificada representa um alocador de exportação; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-197">
              <see langword="true" /> if the specified import definition represents an export factory; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsImportingParameter">
      <MemberSignature Language="C#" Value="public static bool IsImportingParameter (System.ComponentModel.Composition.Primitives.ImportDefinition importDefinition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsImportingParameter(class System.ComponentModel.Composition.Primitives.ImportDefinition importDefinition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.IsImportingParameter(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsImportingParameter(System::ComponentModel::Composition::Primitives::ImportDefinition ^ importDefinition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importDefinition" Type="System.ComponentModel.Composition.Primitives.ImportDefinition" />
      </Parameters>
      <Docs>
        <param name="importDefinition">
          <span data-ttu-id="5b185-198">A definição de importação a ser examinada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-198">The import definition to examine.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5b185-199">Determina se uma definição de importação representa um membro ou um parâmetro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-199">Determines whether an import definition represents a member or a parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5b185-200">
            <see langword="true" /> se a definição de importação representa um parâmetro; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-200">
              <see langword="true" /> if the import definition represents a parameter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5b185-201">
            <paramref name="importDefinition" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-201">
              <paramref name="importDefinition" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TryMakeGenericPartDefinition">
      <MemberSignature Language="C#" Value="public static bool TryMakeGenericPartDefinition (System.ComponentModel.Composition.Primitives.ComposablePartDefinition partDefinition, System.Collections.Generic.IEnumerable&lt;Type&gt; genericParameters, out System.ComponentModel.Composition.Primitives.ComposablePartDefinition specialization);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryMakeGenericPartDefinition(class System.ComponentModel.Composition.Primitives.ComposablePartDefinition partDefinition, class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; genericParameters, [out] class System.ComponentModel.Composition.Primitives.ComposablePartDefinition&amp; specialization) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.TryMakeGenericPartDefinition(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Collections.Generic.IEnumerable{System.Type},System.ComponentModel.Composition.Primitives.ComposablePartDefinition@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryMakeGenericPartDefinition (partDefinition As ComposablePartDefinition, genericParameters As IEnumerable(Of Type), ByRef specialization As ComposablePartDefinition) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryMakeGenericPartDefinition(System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^ partDefinition, System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ genericParameters, [Runtime::InteropServices::Out] System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^ % specialization);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partDefinition" Type="System.ComponentModel.Composition.Primitives.ComposablePartDefinition" />
        <Parameter Name="genericParameters" Type="System.Collections.Generic.IEnumerable&lt;System.Type&gt;" />
        <Parameter Name="specialization" Type="System.ComponentModel.Composition.Primitives.ComposablePartDefinition&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="partDefinition">
          <span data-ttu-id="5b185-202">A definição de bloco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-202">The part definition.</span>
          </span>
        </param>
        <param name="genericParameters">
          <span data-ttu-id="5b185-203">Uma coleção de tipos para especificar os parâmetros genéricos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-203">A collection of types to specify the generic parameters.</span>
          </span>
        </param>
        <param name="specialization">
          <span data-ttu-id="5b185-204">Quando este método é retornado, contém a definição de bloco especializada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-204">When this method returns, contains the specialized part definition.</span>
          </span>
          <span data-ttu-id="5b185-205">Esse parâmetro é tratado como não inicializado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-205">This parameter is treated as uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5b185-206">Indica se uma definição de bloco genérica pode ser especializada com os parâmetros fornecidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-206">Indicates whether a generic part definition can be specialized with the provided parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5b185-207">
            <see langword="true" /> se a especialização é bem-sucedida; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b185-207">
              <see langword="true" /> if the specialization succeeds; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>