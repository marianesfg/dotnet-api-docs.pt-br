<Type Name="ModelService" FullName="System.Activities.Presentation.Services.ModelService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="03ab8a7343d58fd156490ca4d5d2269a0530ffd4" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ModelService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ModelService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.Services.ModelService" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ModelService" />
  <TypeSignature Language="C++ CLI" Value="public ref class ModelService abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="44584-101">Essa classe é o ponto de entrada principal que o designer usa para interagir com o modelo.</span>
      <span class="sxs-lookup">
        <span data-stu-id="44584-101">This class is the main entry point that the designer uses to interact with the model.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44584-102">O serviço tem uma divisão entre métodos protegidos e públicos que você deve implementar quando você cria uma classe derivada.</span><span class="sxs-lookup"><span data-stu-id="44584-102">The service has a split between public and protected methods that you must implement when you create a derived class.</span></span> <span data-ttu-id="44584-103">Métodos públicos são pode ser chamados por qualquer pessoa.</span><span class="sxs-lookup"><span data-stu-id="44584-103">The public methods are callable by anyone.</span></span> <span data-ttu-id="44584-104">Os métodos protegidos são invocados pelo modelo.</span><span class="sxs-lookup"><span data-stu-id="44584-104">The protected methods are invoked by the model.</span></span>  
  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ModelService ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Services.ModelService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ModelService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="44584-105">Cria um novo <see cref="T:System.Activities.Presentation.Services.ModelService" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44584-105">Creates a new <see cref="T:System.Activities.Presentation.Services.ModelService" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateItem">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="44584-106">Cria um <see cref="T:System.Activities.Presentation.Model.ModelItem" /> para um determinado tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44584-106">Creates a <see cref="T:System.Activities.Presentation.Model.ModelItem" /> for a given type.</span>
          </span>
          <span data-ttu-id="44584-107">Este método é chamado pela <see cref="T:System.Activities.Presentation.Model.ModelFactory" /> quando o usuário deseja criar um novo item.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44584-107">This method is called by <see cref="T:System.Activities.Presentation.Model.ModelFactory" /> when the user wants to create a new item.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateItem">
      <MemberSignature Language="C#" Value="protected abstract System.Activities.Presentation.Model.ModelItem CreateItem (object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Activities.Presentation.Model.ModelItem CreateItem(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Services.ModelService.CreateItem(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CreateItem (item As Object) As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Activities::Presentation::Model::ModelItem ^ CreateItem(System::Object ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="44584-108">O item a ser clonado e encapsulado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44584-108">The item to clone and wrap.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44584-109">Obtém uma instância existente e cria um item de modelo que é um clone profundo da instância.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44584-109">Takes an existing instance and creates a model item that is a deep clone of the instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44584-110">Retorna um <see cref="T:System.Activities.Presentation.Model.ModelItem" /> recém-criado que é um clone do item existente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44584-110">Returns a newly created <see cref="T:System.Activities.Presentation.Model.ModelItem" /> that is a clone of the existing item.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateItem">
      <MemberSignature Language="C#" Value="protected abstract System.Activities.Presentation.Model.ModelItem CreateItem (Type itemType, System.Activities.Presentation.Model.CreateOptions options, params object[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Activities.Presentation.Model.ModelItem CreateItem(class System.Type itemType, valuetype System.Activities.Presentation.Model.CreateOptions options, object[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Services.ModelService.CreateItem(System.Type,System.Activities.Presentation.Model.CreateOptions,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CreateItem (itemType As Type, options As CreateOptions, ParamArray arguments As Object()) As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Activities::Presentation::Model::ModelItem ^ CreateItem(Type ^ itemType, System::Activities::Presentation::Model::CreateOptions options, ... cli::array &lt;System::Object ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.Type" />
        <Parameter Name="options" Type="System.Activities.Presentation.Model.CreateOptions" />
        <Parameter Name="arguments" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="itemType">
          <span data-ttu-id="44584-111">O tipo de item a ser criado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44584-111">The type of item to create.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="44584-112">Opções de criação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44584-112">Creation options.</span>
          </span>
          <span data-ttu-id="44584-113">Você pode especificar se deseja inicializar valores padrão para um item.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44584-113">You can specify whether you would like to initialize default values for an item.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="44584-114">Uma matriz de argumentos para o construtor do item.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44584-114">An array of arguments to the constructor of the item.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44584-115">Cria um <see cref="T:System.Activities.Presentation.Model.ModelItem" /> para um determinado tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44584-115">Creates a <see cref="T:System.Activities.Presentation.Model.ModelItem" /> for a given type.</span>
          </span>
          <span data-ttu-id="44584-116">Este método é chamado pela <see cref="T:System.Activities.Presentation.Model.ModelFactory" /> quando o usuário deseja criar um novo item.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44584-116">This method is called by <see cref="T:System.Activities.Presentation.Model.ModelFactory" /> when the user wants to create a new item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44584-117">Retorna o <see cref="T:System.Activities.Presentation.Model.ModelItem" /> recém-criado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44584-117">Returns the newly created <see cref="T:System.Activities.Presentation.Model.ModelItem" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateStaticMemberItem">
      <MemberSignature Language="C#" Value="protected abstract System.Activities.Presentation.Model.ModelItem CreateStaticMemberItem (Type type, string memberName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Activities.Presentation.Model.ModelItem CreateStaticMemberItem(class System.Type type, string memberName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Services.ModelService.CreateStaticMemberItem(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Activities::Presentation::Model::ModelItem ^ CreateStaticMemberItem(Type ^ type, System::String ^ memberName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="memberName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="44584-118">O tipo que contém o membro estático que está sendo referenciado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44584-118">The type that contains the static member being referenced.</span>
          </span>
        </param>
        <param name="memberName">
          <span data-ttu-id="44584-119">O nome do membro estático que está sendo referenciado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44584-119">The name of the static member being referenced.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44584-120">Cria um novo item de modelo que representa o valor de um membro estático da classe fornecida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44584-120">Creates a new model item that represents the value of a static member of the given class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44584-121">Retorna <see cref="T:System.Activities.Presentation.Model.ModelItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44584-121">Returns <see cref="T:System.Activities.Presentation.Model.ModelItem" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44584-122">Por exemplo, para adicionar uma referência a `Brushes.Red` para o modelo, chamar este método com `typeof(Brushes)` e a cadeia de caracteres "Vermelho" como parâmetros.</span><span class="sxs-lookup"><span data-stu-id="44584-122">For example, to add a reference to `Brushes.Red` to the model, call this method with `typeof(Brushes)` and the string "Red" as the parameters.</span></span> <span data-ttu-id="44584-123">Isso será serializado para XAML como `{x:Static Brushes.Red}`.</span><span class="sxs-lookup"><span data-stu-id="44584-123">This will be serialized into XAML as `{x:Static Brushes.Red}`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Find">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="44584-124">Localiza os itens de modelo correspondentes dado um ponto inicial para pesquisar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44584-124">Finds matching model items given a starting point from which to look.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44584-125">Aborda todos os não é recursivos.</span><span class="sxs-lookup"><span data-stu-id="44584-125">All walks are recursive.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.Model.ModelItem&gt; Find (System.Activities.Presentation.Model.ModelItem startingItem, Predicate&lt;Type&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Activities.Presentation.Model.ModelItem&gt; Find(class System.Activities.Presentation.Model.ModelItem startingItem, class System.Predicate`1&lt;class System.Type&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Services.ModelService.Find(System.Activities.Presentation.Model.ModelItem,System.Predicate{System.Type})" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Find (startingItem As ModelItem, match As Predicate(Of Type)) As IEnumerable(Of ModelItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::IEnumerable&lt;System::Activities::Presentation::Model::ModelItem ^&gt; ^ Find(System::Activities::Presentation::Model::ModelItem ^ startingItem, Predicate&lt;Type ^&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.Model.ModelItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startingItem" Type="System.Activities.Presentation.Model.ModelItem" />
        <Parameter Name="match" Type="System.Predicate&lt;System.Type&gt;" />
      </Parameters>
      <Docs>
        <param name="startingItem">
          <span data-ttu-id="44584-126">O <see cref="T:System.Activities.Presentation.Model.ModelItem" /> do qual a pesquisa deve ser iniciada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44584-126">The <see cref="T:System.Activities.Presentation.Model.ModelItem" /> from which to start the search.</span>
          </span>
          <span data-ttu-id="44584-127">Os itens acima deste item serão ignorados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44584-127">Items above this item will be ignored.</span>
          </span>
          <span data-ttu-id="44584-128">Este item e qualquer item abaixo na hierarquia serão incluídos na pesquisa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44584-128">This item, and any item below it in the hierarchy, will be included in the search.</span>
          </span>
          <span data-ttu-id="44584-129">Se esse valor for <see langword="null" />, <see cref="P:System.Activities.Presentation.Services.ModelService.Root" /> será usado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44584-129">If this value is <see langword="null" />, <see cref="P:System.Activities.Presentation.Services.ModelService.Root" /> is used instead.</span>
          </span>
        </param>
        <param name="match">
          <span data-ttu-id="44584-130">Um predicado que permite usar uma correspondência de tipo mais complexo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44584-130">A predicate that allows more complex type matching to be used.</span>
          </span>
          <span data-ttu-id="44584-131">Esse método vai enumerar todos os itens dentro do escopo pai fornecido que correspondam ao predicado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44584-131">This method will enumerate all items within the given parent scope that match the predicate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44584-132">Localiza os itens de modelo correspondentes dado um ponto inicial para pesquisar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44584-132">Finds matching model items given a starting point from which to look.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44584-133">Retorna um <see cref="T:System.Collections.Generic.IEnumerable`1" /> que contém todos os itens de modelo que correspondem à consulta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44584-133">Returns an <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains all model items that match the query.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44584-134">Aborda todos os não é recursivos.</span><span class="sxs-lookup"><span data-stu-id="44584-134">All walks are recursive.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44584-135">
            <paramref name="match" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44584-135">
              <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.Model.ModelItem&gt; Find (System.Activities.Presentation.Model.ModelItem startingItem, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Activities.Presentation.Model.ModelItem&gt; Find(class System.Activities.Presentation.Model.ModelItem startingItem, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Services.ModelService.Find(System.Activities.Presentation.Model.ModelItem,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::IEnumerable&lt;System::Activities::Presentation::Model::ModelItem ^&gt; ^ Find(System::Activities::Presentation::Model::ModelItem ^ startingItem, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.Model.ModelItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startingItem" Type="System.Activities.Presentation.Model.ModelItem" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="startingItem">
          <span data-ttu-id="44584-136">O <see cref="T:System.Activities.Presentation.Model.ModelItem" /> do qual a pesquisa deve ser iniciada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44584-136">The <see cref="T:System.Activities.Presentation.Model.ModelItem" /> from which to start the search.</span>
          </span>
          <span data-ttu-id="44584-137">Os itens acima deste item serão ignorados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44584-137">Items above this item will be ignored.</span>
          </span>
          <span data-ttu-id="44584-138">Este item e qualquer item abaixo na hierarquia serão incluídos na pesquisa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44584-138">This item, and any item below it in the hierarchy, will be included in the search.</span>
          </span>
          <span data-ttu-id="44584-139">Se esse valor for <see langword="null" />, <see cref="P:System.Activities.Presentation.Services.ModelService.Root" /> será usado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44584-139">If this value is <see langword="null" />, <see cref="P:System.Activities.Presentation.Services.ModelService.Root" /> is used instead.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="44584-140">O <see cref="T:System.Type" /> do objeto a ser encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44584-140">The <see cref="T:System.Type" /> of the object to find.</span>
          </span>
          <span data-ttu-id="44584-141">Esse método vai enumerar todos os itens dentro do escopo pai fornecido que sejam do tipo solicitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44584-141">This method will enumerate all items within the given parent scope that are of the requested type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44584-142">Localiza os itens de modelo correspondentes dado um ponto inicial para pesquisar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44584-142">Finds matching model items given a starting point from which to look.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44584-143">Retorna um <see cref="T:System.Collections.Generic.IEnumerable`1" /> que contém todos os itens de modelo que correspondem à consulta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44584-143">Returns an <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains all model items that match the query.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44584-144">Aborda todos os não é recursivos.</span><span class="sxs-lookup"><span data-stu-id="44584-144">All walks are recursive.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44584-145">
            <paramref name="type" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44584-145">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FromName">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="44584-146">Localiza o <see cref="T:System.Activities.Presentation.Model.ModelItem" /> no escopo fornecido com o nome fornecido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44584-146">Locates the <see cref="T:System.Activities.Presentation.Model.ModelItem" /> in the given scope with the given name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44584-147">Retorna `null` se o item de modelo não pôde ser localizado.</span><span class="sxs-lookup"><span data-stu-id="44584-147">Returns `null` if the model item could not be located.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="FromName">
      <MemberSignature Language="C#" Value="public System.Activities.Presentation.Model.ModelItem FromName (System.Activities.Presentation.Model.ModelItem scope, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.Presentation.Model.ModelItem FromName(class System.Activities.Presentation.Model.ModelItem scope, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Services.ModelService.FromName(System.Activities.Presentation.Model.ModelItem,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromName (scope As ModelItem, name As String) As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::Presentation::Model::ModelItem ^ FromName(System::Activities::Presentation::Model::ModelItem ^ scope, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Activities.Presentation.Model.ModelItem" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="scope">
          <span data-ttu-id="44584-148">Um escopo opcional a ser fornecido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44584-148">An optional scope to provide.</span>
          </span>
          <span data-ttu-id="44584-149">Se o escopo não for fornecido, <see cref="P:System.Activities.Presentation.Services.ModelService.Root" /> será usado como um escopo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44584-149">If the scope is not provided, <see cref="P:System.Activities.Presentation.Services.ModelService.Root" /> will be used as a scope.</span>
          </span>
          <span data-ttu-id="44584-150">Se o escopo for fornecido, o <see cref="T:System.Windows.Markup.INameScope" /> mais próximo na hierarquia será usado para localizar o item.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44584-150">If the scope is provided, the nearest <see cref="T:System.Windows.Markup.INameScope" /> in the hierarchy will be used to locate the item.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="44584-151">O nome a ser localizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44584-151">The name to locate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44584-152">Localiza o <see cref="T:System.Activities.Presentation.Model.ModelItem" /> no escopo fornecido com o nome fornecido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44584-152">Locates the <see cref="T:System.Activities.Presentation.Model.ModelItem" /> in the given scope with the given name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44584-153">Retornará um <see cref="T:System.Activities.Presentation.Model.ModelItem" /> cujo nome corresponda a <paramref name="name" /> ou <see langword="null" /> se nenhuma correspondência for encontrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44584-153">Returns a <see cref="T:System.Activities.Presentation.Model.ModelItem" /> whose name matches <paramref name="name" />, or <see langword="null" /> if no match was found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44584-154">
            <paramref name="name" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44584-154">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FromName">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.Model.ModelItem FromName (System.Activities.Presentation.Model.ModelItem scope, string name, StringComparison comparison);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Activities.Presentation.Model.ModelItem FromName(class System.Activities.Presentation.Model.ModelItem scope, string name, valuetype System.StringComparison comparison) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Services.ModelService.FromName(System.Activities.Presentation.Model.ModelItem,System.String,System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function FromName (scope As ModelItem, name As String, comparison As StringComparison) As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Activities::Presentation::Model::ModelItem ^ FromName(System::Activities::Presentation::Model::ModelItem ^ scope, System::String ^ name, StringComparison comparison);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Activities.Presentation.Model.ModelItem" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="comparison" Type="System.StringComparison" />
      </Parameters>
      <Docs>
        <param name="scope">
          <span data-ttu-id="44584-155">Um escopo opcional a ser fornecido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44584-155">An optional scope to provide.</span>
          </span>
          <span data-ttu-id="44584-156">Se o escopo não for fornecido, <see cref="P:System.Activities.Presentation.Services.ModelService.Root" /> será usado como um escopo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44584-156">If the scope is not provided, <see cref="P:System.Activities.Presentation.Services.ModelService.Root" /> will be used as a scope.</span>
          </span>
          <span data-ttu-id="44584-157">Se o escopo for fornecido, o <see cref="T:System.Windows.Markup.INameScope" /> mais próximo na hierarquia será usado para localizar o item.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44584-157">If the scope is provided, the nearest <see cref="T:System.Windows.Markup.INameScope" /> in the hierarchy will be used to locate the item.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="44584-158">O nome a ser localizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44584-158">The name to locate.</span>
          </span>
        </param>
        <param name="comparison">
          <span data-ttu-id="44584-159">Determina como o nome deve ser comparado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44584-159">Determines how the name should be compared.</span>
          </span>
          <span data-ttu-id="44584-160">O padrão é comparar com ordinal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44584-160">The default is to compare against ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44584-161">Localiza o <see cref="T:System.Activities.Presentation.Model.ModelItem" /> no escopo fornecido com o nome fornecido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44584-161">Locates the <see cref="T:System.Activities.Presentation.Model.ModelItem" /> in the given scope with the given name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44584-162">Retornará um <see cref="T:System.Activities.Presentation.Model.ModelItem" /> cujo nome corresponda a <paramref name="name" /> ou <see langword="null" /> se nenhuma correspondência for encontrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44584-162">Returns a <see cref="T:System.Activities.Presentation.Model.ModelItem" /> whose name matches <paramref name="name" />, or <see langword="null" /> if no match was found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44584-163">
            <paramref name="name" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44584-163">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ModelChanged">
      <MemberSignature Language="C#" Value="public abstract event EventHandler&lt;System.Activities.Presentation.Services.ModelChangedEventArgs&gt; ModelChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Activities.Presentation.Services.ModelChangedEventArgs&gt; ModelChanged" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.Services.ModelService.ModelChanged" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Event ModelChanged As EventHandler(Of ModelChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract event EventHandler&lt;System::Activities::Presentation::Services::ModelChangedEventArgs ^&gt; ^ ModelChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Activities.Presentation.Services.ModelChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44584-164">Esse evento é gerado quando algo no modelo é alterado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44584-164">This event is raised when something in the model has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44584-165">Os argumentos do evento de eventos podem ser usados para localizar o que foi alterado.</span><span class="sxs-lookup"><span data-stu-id="44584-165">The event arguments in the event can be used to find what has changed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Root">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.Model.ModelItem Root { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.Model.ModelItem Root" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Services.ModelService.Root" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Root As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Activities::Presentation::Model::ModelItem ^ Root { System::Activities::Presentation::Model::ModelItem ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44584-166">A raiz da hierarquia do objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44584-166">The root of the object hierarchy.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44584-167">Retorna a raiz da hierarquia de modelo como um <see cref="T:System.Activities.Presentation.Model.ModelItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44584-167">Returns the root of the model hierarchy as a <see cref="T:System.Activities.Presentation.Model.ModelItem" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44584-168">Para repositórios lineares, a raiz é o primeiro objeto no repositório.</span><span class="sxs-lookup"><span data-stu-id="44584-168">For linear stores, the root is the first object in the store.</span></span> <span data-ttu-id="44584-169">Para as lojas que representam uma árvore de objetos, isso retorna o nó superior da árvore.</span><span class="sxs-lookup"><span data-stu-id="44584-169">For stores that represent a tree of objects, this returns the topmost node of the tree.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>