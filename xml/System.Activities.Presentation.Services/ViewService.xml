<Type Name="ViewService" FullName="System.Activities.Presentation.Services.ViewService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="91d3a3e3bca54fe6eca0c9a261fff9e49a05a917" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30348700" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ViewService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ViewService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.Services.ViewService" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ViewService" />
  <TypeSignature Language="C++ CLI" Value="public ref class ViewService abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>A classe <see cref="T:System.Activities.Presentation.Services.ViewService" /> mapeia visuais para os itens do modelo subjacentes.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Activities.Presentation.Services.ModelService> e <xref:System.Activities.Presentation.Services.ViewService> classes são necessárias para o designer de função. O <xref:System.Activities.Presentation.View.DesignerView> classe, que é responsável por processar a entrada do usuário e roteamento-lo aos comandos, requer dois desses serviços para mapear entrada do usuário para o modelo.  
  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ViewService ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Services.ViewService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ViewService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Cria um novo <see cref="T:System.Activities.Presentation.Services.ViewService" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetModel">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.Model.ModelItem GetModel (System.Windows.DependencyObject view);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Activities.Presentation.Model.ModelItem GetModel(class System.Windows.DependencyObject view) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Services.ViewService.GetModel(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetModel (view As DependencyObject) As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Activities::Presentation::Model::ModelItem ^ GetModel(System::Windows::DependencyObject ^ view);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="view">O objeto de exibição para o qual você deseja encontrar o modelo.</param>
        <summary>Retornará o modelo correspondente à exibição ou <see langword="null" /> se não houver nenhum modelo que corresponda à exibição.</summary>
        <returns>Retornará o modelo correspondente como um <see cref="T:System.Activities.Design.Model.ModelItem" /> ou <see langword="null" /> se não houver nenhum modelo para o objeto de exibição fornecido.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="view" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetView">
      <MemberSignature Language="C#" Value="public abstract System.Windows.DependencyObject GetView (System.Activities.Presentation.Model.ModelItem model);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.DependencyObject GetView(class System.Activities.Presentation.Model.ModelItem model) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Services.ViewService.GetView(System.Activities.Presentation.Model.ModelItem)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetView (model As ModelItem) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::DependencyObject ^ GetView(System::Activities::Presentation::Model::ModelItem ^ model);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="System.Activities.Presentation.Model.ModelItem" />
      </Parameters>
      <Docs>
        <param name="model">O modelo para o qual o objeto de exibição será retornado.</param>
        <summary>Retornará a exibição correspondente ao modelo fornecido ou <see langword="null" /> se não houver nenhuma exibição para o modelo.</summary>
        <returns>Retornará a exibição para este modelo como um <see cref="T:System.Windows.DependencyObject" /> ou <see langword="null" /> se não houver nenhuma exibição.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="model" /> é <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="model" /> não representa um modelo válido para este serviço.</exception>
      </Docs>
    </Member>
  </Members>
</Type>