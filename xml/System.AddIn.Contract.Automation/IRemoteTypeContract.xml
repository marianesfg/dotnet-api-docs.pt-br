<Type Name="IRemoteTypeContract" FullName="System.AddIn.Contract.Automation.IRemoteTypeContract">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6fd90a39c4157c12781aa565dd3eb3cf30a68436" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36648173" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IRemoteTypeContract : System.AddIn.Contract.IContract" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRemoteTypeContract implements class System.AddIn.Contract.IContract" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRemoteTypeContract&#xA;Implements IContract" />
  <TypeSignature Language="C++ CLI" Value="public interface class IRemoteTypeContract : System::AddIn::Contract::IContract" />
  <TypeSignature Language="F#" Value="type IRemoteTypeContract = interface&#xA;    interface IContract" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn.Contract</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.AddIn.Contract.IContract</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Define um contrato que os componentes podem usar para acessar as informações de tipo e invocar membros entre o domínio do aplicativo e os limites do processo.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obter um <xref:System.AddIn.Contract.Automation.IRemoteTypeContract>, componentes podem chamar o <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A> método de um objeto que implementa o <xref:System.AddIn.Contract.Automation.IRemoteObjectContract> interface.  
  
 Para obter informações sobre o tipo de um objeto, componentes de chamar o <xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData%2A> método.  
  
 Para obter informações sobre os membros de um objeto, componentes de chamam um dos métodos que retorna informações sobre um determinado tipo de membro. Por exemplo, para obter informações sobre os eventos de um objeto, componentes podem usar o <xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent%2A> ou <xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents%2A> método.  
  
 Para chamar um membro de um objeto, os componentes usam o <xref:System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember%2A> método.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetCanonicalName">
      <MemberSignature Language="C#" Value="public string GetCanonicalName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetCanonicalName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetCanonicalName" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCanonicalName () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCanonicalName();" />
      <MemberSignature Language="F#" Value="abstract member GetCanonicalName : unit -&gt; string" Usage="iRemoteTypeContract.GetCanonicalName " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna o nome canônico do <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> atual.</summary>
        <returns>O nome canônico do <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> atual.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O nome canônico é um nome exclusivo, como um nome de tipo totalmente qualificado. Cadeias de caracteres no formato \< *nome do assembly*>, \< *nome totalmente qualificado do tipo*> são recomendados para tipos gerenciados. Cadeias de caracteres no formato \< *nome da biblioteca de tipo*>, \< *nome do tipo*> são recomendados para tipos COM.  
  
 Não altere o nome canônico de um tipo depois que o tipo é publicado. Alterando o nome canônico de um tipo em uma versão futura de um componente de compatibilidade quebras entre o componente e os clientes que já estão usando o tipo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEvent">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Automation.IRemoteEventInfoContract GetEvent (string name, System.Reflection.BindingFlags bindingFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.Automation.IRemoteEventInfoContract GetEvent(string name, valuetype System.Reflection.BindingFlags bindingFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Automation::IRemoteEventInfoContract ^ GetEvent(System::String ^ name, System::Reflection::BindingFlags bindingFlags);" />
      <MemberSignature Language="F#" Value="abstract member GetEvent : string * System.Reflection.BindingFlags -&gt; System.AddIn.Contract.Automation.IRemoteEventInfoContract" Usage="iRemoteTypeContract.GetEvent (name, bindingFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Automation.IRemoteEventInfoContract</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingFlags" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">O nome de um evento do atual <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</param>
        <param name="bindingFlags">Uma combinação bit a bit dos valores <see cref="T:System.Reflection.BindingFlags" /> que especifica como pesquisar pelo evento.</param>
        <summary>Retorna um <see cref="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" /> que fornece acesso a um evento especificado do <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> atual.</summary>
        <returns>Um <see cref="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" /> que fornece acesso ao evento especificado, se encontrado; caso contrário, <see langword="null" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteEventInfoContract&gt; GetEvents (System.Reflection.BindingFlags bindingFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.Collections.IArrayContract`1&lt;class System.AddIn.Contract.Automation.IRemoteEventInfoContract&gt; GetEvents(valuetype System.Reflection.BindingFlags bindingFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents(System.Reflection.BindingFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Collections::IArrayContract&lt;System::AddIn::Contract::Automation::IRemoteEventInfoContract ^&gt; ^ GetEvents(System::Reflection::BindingFlags bindingFlags);" />
      <MemberSignature Language="F#" Value="abstract member GetEvents : System.Reflection.BindingFlags -&gt; System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteEventInfoContract&gt;" Usage="iRemoteTypeContract.GetEvents bindingFlags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteEventInfoContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingFlags" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingFlags">Uma combinação bit a bit dos valores <see cref="T:System.Reflection.BindingFlags" /> que especifica como pesquisar pelos eventos.</param>
        <summary>Retorna uma coleção de objetos <see cref="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" /> que fornece acesso aos eventos especificados do <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> atual.</summary>
        <returns>Um <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> de objetos <see cref="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" /> que fornecem acesso para os eventos que correspondam às restrições de associação especificada; caso contrário, um <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> vazio.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetField">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Automation.IRemoteFieldInfoContract GetField (string name, System.Reflection.BindingFlags bindingFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.Automation.IRemoteFieldInfoContract GetField(string name, valuetype System.Reflection.BindingFlags bindingFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetField(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Automation::IRemoteFieldInfoContract ^ GetField(System::String ^ name, System::Reflection::BindingFlags bindingFlags);" />
      <MemberSignature Language="F#" Value="abstract member GetField : string * System.Reflection.BindingFlags -&gt; System.AddIn.Contract.Automation.IRemoteFieldInfoContract" Usage="iRemoteTypeContract.GetField (name, bindingFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Automation.IRemoteFieldInfoContract</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingFlags" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">O nome de um campo do <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> atual.</param>
        <param name="bindingFlags">Uma combinação bit a bit dos valores <see cref="T:System.Reflection.BindingFlags" /> que especifica como pesquisar pelo campo.</param>
        <summary>Retorna um <see cref="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" /> que fornece acesso a um campo especificado do <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> atual.</summary>
        <returns>Um <see cref="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" /> que fornece acesso ao campo especificado, se encontrado; caso contrário, <see langword="null" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFields">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteFieldInfoContract&gt; GetFields (System.Reflection.BindingFlags bindingFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.Collections.IArrayContract`1&lt;class System.AddIn.Contract.Automation.IRemoteFieldInfoContract&gt; GetFields(valuetype System.Reflection.BindingFlags bindingFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetFields(System.Reflection.BindingFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Collections::IArrayContract&lt;System::AddIn::Contract::Automation::IRemoteFieldInfoContract ^&gt; ^ GetFields(System::Reflection::BindingFlags bindingFlags);" />
      <MemberSignature Language="F#" Value="abstract member GetFields : System.Reflection.BindingFlags -&gt; System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteFieldInfoContract&gt;" Usage="iRemoteTypeContract.GetFields bindingFlags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteFieldInfoContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingFlags" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingFlags">Uma combinação bit a bit dos valores <see cref="T:System.Reflection.BindingFlags" /> que especifica como pesquisar pelos campos.</param>
        <summary>Retorna uma coleção de objetos <see cref="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" /> que fornece acesso aos campos especificados do <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> atual.</summary>
        <returns>Um <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> de objetos <see cref="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" /> que fornecem acesso para os campos que correspondam às restrições de associação especificada; caso contrário, um <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> vazio.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInterface">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Automation.IRemoteTypeContract GetInterface (string canonicalName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.Automation.IRemoteTypeContract GetInterface(string canonicalName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInterface (canonicalName As String) As IRemoteTypeContract" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Automation::IRemoteTypeContract ^ GetInterface(System::String ^ canonicalName);" />
      <MemberSignature Language="F#" Value="abstract member GetInterface : string -&gt; System.AddIn.Contract.Automation.IRemoteTypeContract" Usage="iRemoteTypeContract.GetInterface canonicalName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Automation.IRemoteTypeContract</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="canonicalName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="canonicalName">O nome canônico de uma interface que é implementada pelo <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> atual.</param>
        <summary>Retorna uma interface implementada pelo <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> atual.</summary>
        <returns>Um <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> que representa a interface com o nome canônico especificado que este <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> implementa. <see langword="null" /> se este <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> não implementar uma interface com o nome canônico especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um nome canônico é um nome exclusivo, como um GUID. Cadeias de caracteres no formato \< *nome do assembly*>, \< *nome totalmente qualificado do tipo*> são recomendados para tipos gerenciados. Cadeias de caracteres no formato \< *nome da biblioteca de tipo*>, \< *nome do tipo*> são recomendados para tipos COM.  
  
 Não altere o nome canônico de um tipo depois que o tipo é publicado. Alterando o nome canônico de um tipo em uma versão futura de um componente de compatibilidade quebras entre o componente e os clientes que já estão usando o tipo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInterfaces">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteTypeContract&gt; GetInterfaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.Collections.IArrayContract`1&lt;class System.AddIn.Contract.Automation.IRemoteTypeContract&gt; GetInterfaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterfaces" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInterfaces () As IArrayContract(Of IRemoteTypeContract)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Collections::IArrayContract&lt;System::AddIn::Contract::Automation::IRemoteTypeContract ^&gt; ^ GetInterfaces();" />
      <MemberSignature Language="F#" Value="abstract member GetInterfaces : unit -&gt; System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteTypeContract&gt;" Usage="iRemoteTypeContract.GetInterfaces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteTypeContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna as interfaces implementadas pelo <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> atual.</summary>
        <returns>Um <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> de objetos <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> que representa todas as interfaces implementadas pelo <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> atual.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMember">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.IContract&gt; GetMember (string name, System.Reflection.MemberTypes memberTypes, System.Reflection.BindingFlags bindingFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.Collections.IArrayContract`1&lt;class System.AddIn.Contract.IContract&gt; GetMember(string name, valuetype System.Reflection.MemberTypes memberTypes, valuetype System.Reflection.BindingFlags bindingFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Collections::IArrayContract&lt;System::AddIn::Contract::IContract ^&gt; ^ GetMember(System::String ^ name, System::Reflection::MemberTypes memberTypes, System::Reflection::BindingFlags bindingFlags);" />
      <MemberSignature Language="F#" Value="abstract member GetMember : string * System.Reflection.MemberTypes * System.Reflection.BindingFlags -&gt; System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.IContract&gt;" Usage="iRemoteTypeContract.GetMember (name, memberTypes, bindingFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.IContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="memberTypes" Type="System.Reflection.MemberTypes" />
        <Parameter Name="bindingFlags" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">O nome de um membro do <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> atual. O nome pode representar vários membros que têm o mesmo nome.</param>
        <param name="memberTypes">Uma combinação bit a bit dos valores <see cref="T:System.Reflection.MemberTypes" /> que especifica os membros de pesquisa.</param>
        <param name="bindingFlags">Uma combinação bit a bit dos valores <see cref="T:System.Reflection.BindingFlags" /> que especifica como pesquisar pelos membros.</param>
        <summary>Retorna uma coleção de objetos <see cref="T:System.AddIn.Contract.IContract" /> que fornece acesso a todos os membros especificados do tipo de membro indicado no <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> atual usando as restrições de associação definidas.</summary>
        <returns>Um <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> de objetos <see cref="T:System.AddIn.Contract.IContract" /> que representam os membros do <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> atual que têm o nome especificado e que atendem aos critérios definidos pelos parâmetros <paramref name="memberTypes" /> e <paramref name="bindingFlags" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método pode ser usado para obter um único membro, ou para obter vários membros que têm o mesmo nome, como as sobrecargas de construtor ou método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMembers">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.IContract&gt; GetMembers (System.Reflection.BindingFlags bindingFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.Collections.IArrayContract`1&lt;class System.AddIn.Contract.IContract&gt; GetMembers(valuetype System.Reflection.BindingFlags bindingFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMembers(System.Reflection.BindingFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Collections::IArrayContract&lt;System::AddIn::Contract::IContract ^&gt; ^ GetMembers(System::Reflection::BindingFlags bindingFlags);" />
      <MemberSignature Language="F#" Value="abstract member GetMembers : System.Reflection.BindingFlags -&gt; System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.IContract&gt;" Usage="iRemoteTypeContract.GetMembers bindingFlags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.IContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingFlags" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingFlags">Uma combinação bit a bit dos valores <see cref="T:System.Reflection.BindingFlags" /> que especifica como pesquisar pelos membros.</param>
        <summary>Retorna uma coleção de objetos <see cref="T:System.AddIn.Contract.IContract" /> que fornece acesso a todos os membros do <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> atual que correspondem às restrições de associação especificadas.</summary>
        <returns>Um <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> de objetos <see cref="T:System.AddIn.Contract.IContract" /> que fornece acesso aos membros do <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> atual que atendem às restrições de associação especificadas.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMethod">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Automation.IRemoteMethodInfoContract GetMethod (string name, System.Reflection.BindingFlags bindingFlags, System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteTypeContract&gt; remoteTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.Automation.IRemoteMethodInfoContract GetMethod(string name, valuetype System.Reflection.BindingFlags bindingFlags, class System.AddIn.Contract.Collections.IArrayContract`1&lt;class System.AddIn.Contract.Automation.IRemoteTypeContract&gt; remoteTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Automation::IRemoteMethodInfoContract ^ GetMethod(System::String ^ name, System::Reflection::BindingFlags bindingFlags, System::AddIn::Contract::Collections::IArrayContract&lt;System::AddIn::Contract::Automation::IRemoteTypeContract ^&gt; ^ remoteTypes);" />
      <MemberSignature Language="F#" Value="abstract member GetMethod : string * System.Reflection.BindingFlags * System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteTypeContract&gt; -&gt; System.AddIn.Contract.Automation.IRemoteMethodInfoContract" Usage="iRemoteTypeContract.GetMethod (name, bindingFlags, remoteTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Automation.IRemoteMethodInfoContract</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingFlags" Type="System.Reflection.BindingFlags" />
        <Parameter Name="remoteTypes" Type="System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteTypeContract&gt;" />
      </Parameters>
      <Docs>
        <param name="name">O nome de um método do <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> atual.</param>
        <param name="bindingFlags">Uma combinação bit a bit dos valores <see cref="T:System.Reflection.BindingFlags" /> que especifica como pesquisar pelo método.</param>
        <param name="remoteTypes">Um <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> de objetos <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> que representam o número, a ordem e o tipo dos parâmetros a ser obtido pelo método.</param>
        <summary>Retorna um <see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /> que fornece acesso a um método especificado do <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> atual.</summary>
        <returns>Um <see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /> que fornece acesso ao método especificado, se encontrado; caso contrário, <see langword="null" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMethods">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteMethodInfoContract&gt; GetMethods (System.Reflection.BindingFlags bindingFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.Collections.IArrayContract`1&lt;class System.AddIn.Contract.Automation.IRemoteMethodInfoContract&gt; GetMethods(valuetype System.Reflection.BindingFlags bindingFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethods(System.Reflection.BindingFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Collections::IArrayContract&lt;System::AddIn::Contract::Automation::IRemoteMethodInfoContract ^&gt; ^ GetMethods(System::Reflection::BindingFlags bindingFlags);" />
      <MemberSignature Language="F#" Value="abstract member GetMethods : System.Reflection.BindingFlags -&gt; System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteMethodInfoContract&gt;" Usage="iRemoteTypeContract.GetMethods bindingFlags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteMethodInfoContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingFlags" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingFlags">Uma combinação bit a bit dos valores <see cref="T:System.Reflection.BindingFlags" /> que especifica como pesquisar pelos métodos.</param>
        <summary>Retorna uma coleção de objetos <see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /> que fornece acesso aos métodos especificados do <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> atual.</summary>
        <returns>Um <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> de objetos <see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /> que fornece acesso aos métodos que correspondem às restrições de associação especificadas.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemotePropertyInfoContract&gt; GetProperties (System.Reflection.BindingFlags bindingFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.Collections.IArrayContract`1&lt;class System.AddIn.Contract.Automation.IRemotePropertyInfoContract&gt; GetProperties(valuetype System.Reflection.BindingFlags bindingFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperties(System.Reflection.BindingFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Collections::IArrayContract&lt;System::AddIn::Contract::Automation::IRemotePropertyInfoContract ^&gt; ^ GetProperties(System::Reflection::BindingFlags bindingFlags);" />
      <MemberSignature Language="F#" Value="abstract member GetProperties : System.Reflection.BindingFlags -&gt; System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemotePropertyInfoContract&gt;" Usage="iRemoteTypeContract.GetProperties bindingFlags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemotePropertyInfoContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingFlags" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingFlags">Uma combinação bit a bit dos valores <see cref="T:System.Reflection.BindingFlags" /> que especifica como pesquisar pelas propriedades.</param>
        <summary>Retorna uma coleção de objetos <see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" /> que fornece acesso às propriedades especificadas do <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> atual.</summary>
        <returns>Um <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> de objetos <see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" /> que fornece acesso às propriedades que correspondem às restrições de associação especificadas.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Automation.IRemotePropertyInfoContract GetProperty (string name, System.Reflection.BindingFlags bindingFlags, System.AddIn.Contract.Automation.IRemoteTypeContract remoteReturnType, System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteTypeContract&gt; remoteTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.Automation.IRemotePropertyInfoContract GetProperty(string name, valuetype System.Reflection.BindingFlags bindingFlags, class System.AddIn.Contract.Automation.IRemoteTypeContract remoteReturnType, class System.AddIn.Contract.Collections.IArrayContract`1&lt;class System.AddIn.Contract.Automation.IRemoteTypeContract&gt; remoteTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperty(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteTypeContract,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Automation::IRemotePropertyInfoContract ^ GetProperty(System::String ^ name, System::Reflection::BindingFlags bindingFlags, System::AddIn::Contract::Automation::IRemoteTypeContract ^ remoteReturnType, System::AddIn::Contract::Collections::IArrayContract&lt;System::AddIn::Contract::Automation::IRemoteTypeContract ^&gt; ^ remoteTypes);" />
      <MemberSignature Language="F#" Value="abstract member GetProperty : string * System.Reflection.BindingFlags * System.AddIn.Contract.Automation.IRemoteTypeContract * System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteTypeContract&gt; -&gt; System.AddIn.Contract.Automation.IRemotePropertyInfoContract" Usage="iRemoteTypeContract.GetProperty (name, bindingFlags, remoteReturnType, remoteTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Automation.IRemotePropertyInfoContract</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingFlags" Type="System.Reflection.BindingFlags" />
        <Parameter Name="remoteReturnType" Type="System.AddIn.Contract.Automation.IRemoteTypeContract" />
        <Parameter Name="remoteTypes" Type="System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteTypeContract&gt;" />
      </Parameters>
      <Docs>
        <param name="name">O nome de uma propriedade do <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> atual.</param>
        <param name="bindingFlags">Uma combinação bit a bit dos valores <see cref="T:System.Reflection.BindingFlags" /> que especifica como pesquisar pelo método.</param>
        <param name="remoteReturnType">Um <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> que especifica o tipo de retorno da propriedade.</param>
        <param name="remoteTypes">Um <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> de <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> objetos que representam os parâmetros para a propriedade especificada.</param>
        <summary>Retorna um <see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" /> que fornece acesso a uma propriedade especificada do <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> atual.</summary>
        <returns>Um <see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" /> que fornece acesso à propriedade especificada, se encontrado; caso contrário, <see langword="null" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeData">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Automation.RemoteTypeData GetTypeData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.AddIn.Contract.Automation.RemoteTypeData GetTypeData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeData () As RemoteTypeData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Automation::RemoteTypeData GetTypeData();" />
      <MemberSignature Language="F#" Value="abstract member GetTypeData : unit -&gt; System.AddIn.Contract.Automation.RemoteTypeData" Usage="iRemoteTypeContract.GetTypeData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Automation.RemoteTypeData</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna as informações de tipo sobre o objeto que o <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> atual identifica.</summary>
        <returns>Um <see cref="T:System.AddIn.Contract.Automation.RemoteTypeData" /> que contém informações sobre o objeto que <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> atual identifica.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeMember">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.RemoteArgument InvokeMember (string name, System.Reflection.BindingFlags bindingFlags, System.AddIn.Contract.Automation.IRemoteObjectContract target, System.AddIn.Contract.Collections.IRemoteArgumentArrayContract remoteArgs, bool[] remoteArgModifiers, int localeId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.AddIn.Contract.RemoteArgument InvokeMember(string name, valuetype System.Reflection.BindingFlags bindingFlags, class System.AddIn.Contract.Automation.IRemoteObjectContract target, class System.AddIn.Contract.Collections.IRemoteArgumentArrayContract remoteArgs, bool[] remoteArgModifiers, int32 localeId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Boolean[],System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::RemoteArgument InvokeMember(System::String ^ name, System::Reflection::BindingFlags bindingFlags, System::AddIn::Contract::Automation::IRemoteObjectContract ^ target, System::AddIn::Contract::Collections::IRemoteArgumentArrayContract ^ remoteArgs, cli::array &lt;bool&gt; ^ remoteArgModifiers, int localeId);" />
      <MemberSignature Language="F#" Value="abstract member InvokeMember : string * System.Reflection.BindingFlags * System.AddIn.Contract.Automation.IRemoteObjectContract * System.AddIn.Contract.Collections.IRemoteArgumentArrayContract * bool[] * int -&gt; System.AddIn.Contract.RemoteArgument" Usage="iRemoteTypeContract.InvokeMember (name, bindingFlags, target, remoteArgs, remoteArgModifiers, localeId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.RemoteArgument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingFlags" Type="System.Reflection.BindingFlags" />
        <Parameter Name="target" Type="System.AddIn.Contract.Automation.IRemoteObjectContract" />
        <Parameter Name="remoteArgs" Type="System.AddIn.Contract.Collections.IRemoteArgumentArrayContract" />
        <Parameter Name="remoteArgModifiers" Type="System.Boolean[]" />
        <Parameter Name="localeId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">O nome do membro a ser invocado.</param>
        <param name="bindingFlags">Uma combinação bit a bit dos valores <see cref="T:System.Reflection.BindingFlags" /> que especifica como pesquisar pelo membro.</param>
        <param name="target">O <see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" /> no qual invocar o membro especificado.</param>
        <param name="remoteArgs">Um <see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentArrayContract" /> que contém os argumentos que serão passados para o membro a ser invocado.</param>
        <param name="remoteArgModifiers">Uma matriz de valores boolianos que indicam se cada um dos valores <c>remoteArgs</c> é passado por referência.</param>
        <param name="localeId">Uma identificação de localidade a ser usada para conversões específicas de localidade que podem ser executadas pelo membro que está sendo invocado.</param>
        <summary>Invoca o membro especificado do <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> atual.</summary>
        <returns>Um <see cref="T:System.AddIn.Contract.RemoteArgument" /> que representa o valor retornado do membro invocado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O `remoteArgModifiers` parâmetro é usado apenas para componentes que são escritos usando COM. Cada valor de `remoteArgModifiers` parâmetro indica se o valor correspondente no `remoteArgs` parâmetro é passado por referência. O comprimento de `remoteArgModifiers` deve ser o mesmo que o comprimento de `remoteArgs`.  
  
 Se você passar `null` para `remoteArgModifiers`, esse método usa a lógica padrão para determinar se um argumento é passado por referência.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>