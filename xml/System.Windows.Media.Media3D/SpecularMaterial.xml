<Type Name="SpecularMaterial" FullName="System.Windows.Media.Media3D.SpecularMaterial">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="969ed8753812708f2d76a989b0907004429428de" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37497908" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SpecularMaterial : System.Windows.Media.Media3D.Material" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SpecularMaterial extends System.Windows.Media.Media3D.Material" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Media3D.SpecularMaterial" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SpecularMaterial&#xA;Inherits Material" />
  <TypeSignature Language="C++ CLI" Value="public ref class SpecularMaterial sealed : System::Windows::Media::Media3D::Material" />
  <TypeSignature Language="F#" Value="type SpecularMaterial = class&#xA;    inherit Material" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Media3D.Material</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Permite que um pincel 2D, como um <see cref="T:System.Windows.Media.SolidColorBrush" /> ou <see cref="T:System.Windows.Media.TileBrush" />, seja aplicado a um modelo 3D de luz especular.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.Media3D.SpecularMaterial> adiciona cor para outro material aplicado a uma malha, em vez de sua subtração.  
  
 <xref:System.Windows.Media.Media3D.SpecularMaterial> aplicado a uma malha será iluminada sempre que ocorrerem realces especulares para o modelo.  
  
   
  
## Examples  
 O exemplo a seguir cria uma instância de <xref:System.Windows.Media.Media3D.SpecularMaterial> e define suas propriedades de pincel.  
  
 [!code-xaml[hittest3d#_MIL3D_HitTest3D_xaml_n1](~/samples/snippets/csharp/VS_Snippets_Wpf/HitTest3D/CSharp/MyApp.xaml#_mil3d_hittest3d_xaml_n1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Media.Media3D.SpecularMaterial" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SpecularMaterial ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Media3D.SpecularMaterial.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SpecularMaterial();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Media.Media3D.SpecularMaterial" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.Media3D.SpecularMaterial> adiciona cor para outro material aplicado a uma malha, em vez de sua subtração.  
  
 <xref:System.Windows.Media.Media3D.SpecularMaterial> aplicado a uma malha será iluminada sempre que ocorrerem realces especulares para o modelo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SpecularMaterial (System.Windows.Media.Brush brush, double specularPower);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Media.Brush brush, float64 specularPower) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Media3D.SpecularMaterial.#ctor(System.Windows.Media.Brush,System.Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SpecularMaterial(System::Windows::Media::Brush ^ brush, double specularPower);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.Media3D.SpecularMaterial : System.Windows.Media.Brush * double -&gt; System.Windows.Media.Media3D.SpecularMaterial" Usage="new System.Windows.Media.Media3D.SpecularMaterial (brush, specularPower)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="brush" Type="System.Windows.Media.Brush" />
        <Parameter Name="specularPower" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="brush">O pincel aplicado pelo novo <see cref="T:System.Windows.Media.Media3D.SpecularMaterial" />.</param>
        <param name="specularPower">O expoente especular.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Media.Media3D.SpecularMaterial" /> com o pincel e o expoente especular especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.Media3D.SpecularMaterial> adiciona cor para outro material aplicado a uma malha, em vez de sua subtração.  
  
 <xref:System.Windows.Media.Media3D.SpecularMaterial> aplicado a uma malha será iluminada sempre que ocorrerem realces especulares para o modelo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Brush">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush Brush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush Brush" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Media3D.SpecularMaterial.Brush" />
      <MemberSignature Language="VB.NET" Value="Public Property Brush As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Brush ^ Brush { System::Windows::Media::Brush ^ get(); void set(System::Windows::Media::Brush ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Brush : System.Windows.Media.Brush with get, set" Usage="System.Windows.Media.Media3D.SpecularMaterial.Brush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o pincel [!INCLUDE[TLA#tla_2d](~/includes/tlasharptla-2d-md.md)] a ser aplicado a um modelo [!INCLUDE[TLA#tla_3d](~/includes/tlasharptla-3d-md.md)] aceso especularmente.</summary>
        <value>O pincel a ser aplicado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se as coordenadas de textura não forem especificadas para um <xref:System.Windows.Media.Media3D.MeshGeometry3D>, seu material talvez não sejam renderizadas conforme o esperado.  A única exceção é quando esta propriedade especifica um <xref:System.Windows.Media.SolidColorBrush>; nesse caso, o material será renderizado usando um conjunto padrão de coordenadas de textura.  
  
<a name="dependencyPropertyInfo_BrushProperty"></a>   
## <a name="dependency-property-information"></a>Informações da propriedade de dependência  
  
|||  
|-|-|  
|Campo de identificador|<xref:System.Windows.Media.Media3D.SpecularMaterial.BrushProperty>|  
|Propriedades de metadados definido como `true`|Nenhum|  
  
   
  
## Examples  
 O exemplo a seguir cria uma instância de <xref:System.Windows.Media.Media3D.SpecularMaterial> e define suas propriedades de pincel.  
  
 [!code-xaml[hittest3d#_MIL3D_HitTest3D_xaml_n1](~/samples/snippets/csharp/VS_Snippets_Wpf/HitTest3D/CSharp/MyApp.xaml#_mil3d_hittest3d_xaml_n1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BrushProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BrushProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BrushProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Media3D.SpecularMaterial.BrushProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BrushProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BrushProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable BrushProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Media3D.SpecularMaterial.BrushProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica a propriedade de dependência <see cref="P:System.Windows.Media.Media3D.SpecularMaterial.Brush" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Media3D.SpecularMaterial Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Media3D.SpecularMaterial Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Media3D.SpecularMaterial.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As SpecularMaterial" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Media3D::SpecularMaterial ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.Media.Media3D.SpecularMaterial" Usage="specularMaterial.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Media3D.SpecularMaterial</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cria um clone modificável desse <see cref="T:System.Windows.Media.Media3D.SpecularMaterial" />, fazendo cópias em profundidade dos valores do objeto. Ao copiar as propriedades de dependência, esse método copia associações de dados e referências de recurso (mas eles não podem mais resolver), mas não animações ou seus valores atuais.</summary>
        <returns>Um clone modificável do objeto atual. A propriedade <see cref="P:System.Windows.Freezable.IsFrozen" /> do objeto clonado será <see langword="false" />, mesmo se a propriedade <see cref="P:System.Windows.Freezable.IsFrozen" /> da origem tiver sido <see langword="true." /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método é usado para produzir cópias modificáveis de congelado <xref:System.Windows.Freezable> objetos (ou qualquer <xref:System.Windows.Freezable> objeto). Para sua conveniência, este método sombreia a versão herdada com uma implementação fortemente tipada.  
  
 Para obter mais informações, consulte <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Media3D.SpecularMaterial CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Media3D.SpecularMaterial CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Media3D.SpecularMaterial.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As SpecularMaterial" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Media3D::SpecularMaterial ^ CloneCurrentValue();" />
      <MemberSignature Language="F#" Value="override this.CloneCurrentValue : unit -&gt; System.Windows.Media.Media3D.SpecularMaterial" Usage="specularMaterial.CloneCurrentValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Media3D.SpecularMaterial</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cria um clone modificável desse objeto <see cref="T:System.Windows.Media.Media3D.SpecularMaterial" />, fazendo cópias em profundidade dos valores do objeto atual. Referências a recursos, vinculações de dados e animações não são copiadas, mas seus valores atuais são.</summary>
        <returns>Um clone modificável do objeto atual. A propriedade <see cref="P:System.Windows.Freezable.IsFrozen" /> do objeto clonado será <see langword="false" />, mesmo se a propriedade <see cref="P:System.Windows.Freezable.IsFrozen" /> da origem tiver sido <see langword="true" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método é usado para produzir cópias modificáveis de congelado <xref:System.Windows.Freezable> objetos (ou qualquer <xref:System.Windows.Freezable> objeto). Para sua conveniência, este método sombreia a versão herdada com uma implementação fortemente tipada.  
  
 Para obter mais informações, consulte <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Color">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Color Color { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.Color Color" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Media3D.SpecularMaterial.Color" />
      <MemberSignature Language="VB.NET" Value="Public Property Color As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Color Color { System::Windows::Media::Color get(); void set(System::Windows::Media::Color value); };" />
      <MemberSignature Language="F#" Value="member this.Color : System.Windows.Media.Color with get, set" Usage="System.Windows.Media.Media3D.SpecularMaterial.Color" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que filtra as propriedades de cor do material aplicado ao modelo.</summary>
        <value>A cor com a qual o material de filtro.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa propriedade tem o efeito de filtragem o material aplicado ao modelo, o valor de cor especificado.  Por exemplo, definir essa propriedade como `Colors.Red` obstruía azul e verde no material.  
  
<a name="dependencyPropertyInfo_Color"></a>   
## <a name="dependency-property-information"></a>Informações da propriedade de dependência  
  
|||  
|-|-|  
|Campo de identificador|<xref:System.Windows.Media.Media3D.SpecularMaterial.ColorProperty>|  
|Propriedades de metadados definido como `true`|Nenhum|  
  
   
  
## Examples  
 [!code-xaml[hittest3d#_MIL3D_HitTest3D_xaml_n1](~/samples/snippets/csharp/VS_Snippets_Wpf/HitTest3D/CSharp/MyApp.xaml#_mil3d_hittest3d_xaml_n1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ColorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ColorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Media3D.SpecularMaterial.ColorProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ColorProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ColorProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ColorProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Media3D.SpecularMaterial.ColorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica a propriedade de dependência <see cref="P:System.Windows.Media.Media3D.SpecularMaterial.Color" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O identificador da propriedade de dependência <xref:System.Windows.Media.Media3D.SpecularMaterial.Color%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Media3D.SpecularMaterial.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="abstract member CreateInstanceCore : unit -&gt; System.Windows.Freezable&#xA;override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="specularMaterial.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpecularPower">
      <MemberSignature Language="C#" Value="public double SpecularPower { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SpecularPower" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Media3D.SpecularMaterial.SpecularPower" />
      <MemberSignature Language="VB.NET" Value="Public Property SpecularPower As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double SpecularPower { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.SpecularPower : double with get, set" Usage="System.Windows.Media.Media3D.SpecularMaterial.SpecularPower" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que especifica o grau ao qual um material aplicado a um modelo 3D reflete o modelo de iluminação como brilho.</summary>
        <value>Contribuição relativa, para um material aplicado como um [!INCLUDE[TLA2#tla_2d](~/includes/tla2sharptla-2d-md.md)] de pincel para um [!INCLUDE[TLA2#tla_3d](~/includes/tla2sharptla-3d-md.md)] modelo do componente do modelo de iluminação especular.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Iluminação especular reproduz a aparência de superfícies brilhantes ou tendem a refletir realces. Essa propriedade indica à relativa "brilho" do material aplicado ao modelo.  Um valor maior para essa propriedade especifica o maior tamanho e a nitidez da brilhar refletido pelo material.  
  
<a name="dependencyPropertyInfo_SpecularPowerProperty"></a>   
## <a name="dependency-property-information"></a>Informações da propriedade de dependência  
  
|||  
|-|-|  
|Campo de identificador|<xref:System.Windows.Media.Media3D.SpecularMaterial.SpecularPowerProperty>|  
|Propriedades de metadados definido como `true`|Nenhum|  
  
   
  
## Examples  
 O exemplo a seguir cria uma instância de <xref:System.Windows.Media.Media3D.SpecularMaterial> e define essa propriedade.  
  
 [!code-xaml[hittest3d#_MIL3D_HitTest3D_xaml_n1](~/samples/snippets/csharp/VS_Snippets_Wpf/HitTest3D/CSharp/MyApp.xaml#_mil3d_hittest3d_xaml_n1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SpecularPowerProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SpecularPowerProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SpecularPowerProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Media3D.SpecularMaterial.SpecularPowerProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SpecularPowerProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SpecularPowerProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SpecularPowerProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Media3D.SpecularMaterial.SpecularPowerProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica a propriedade de dependência <see cref="P:System.Windows.Media.Media3D.SpecularMaterial.SpecularPower" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>