<Type Name="AdvancedFilters" FullName="System.DirectoryServices.AccountManagement.AdvancedFilters">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="04aba62078a0490474bdb49aceefeffd6633c589" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30398730" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AdvancedFilters" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AdvancedFilters extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.AccountManagement.AdvancedFilters" />
  <TypeSignature Language="VB.NET" Value="Public Class AdvancedFilters" />
  <TypeSignature Language="C++ CLI" Value="public ref class AdvancedFilters" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Essa classe fornece acesso gravável a determinados atributos para que os usuários possam modificar propriedades somente leitura do objeto de entidade de segurança "fictício" que é passado para um objeto <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearcher" /> ao usar a [Consulta por Amostra](http://msdn.microsoft.com/library/84ac40bb-04c4-4d0b-adaf-0ddb9253599e).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.DirectoryServices.AccountManagement.AdvancedFilters> classe é acessada de um <xref:System.DirectoryServices.AccountManagement.UserPrincipal> por meio do objeto a <xref:System.DirectoryServices.AccountManagement.UserPrincipal.AdvancedSearchFilter%2A> propriedade e eficazmente é tratado como uma propriedade do <xref:System.DirectoryServices.AccountManagement.UserPrincipal> de objeto e não se destina a ser usado em seu próprio.  
  
   
  
## Examples  
 Consulte o [consulta através de exemplo](http://msdn.microsoft.com/library/84ac40bb-04c4-4d0b-adaf-0ddb9253599e) tópico por exemplo de código.  
  
 ]]></format>
    </remarks>
    <altmember cref="N:System.DirectoryServices.AccountManagement" />
    <altmember cref="T:System.DirectoryServices.AccountManagement.PrincipalSearcher" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal AdvancedFilters (System.DirectoryServices.AccountManagement.Principal p);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(class System.DirectoryServices.AccountManagement.Principal p) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.AdvancedFilters.#ctor(System.DirectoryServices.AccountManagement.Principal)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (p As Principal)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; AdvancedFilters(System::DirectoryServices::AccountManagement::Principal ^ p);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="p" Type="System.DirectoryServices.AccountManagement.Principal" />
      </Parameters>
      <Docs>
        <param name="p">Um objeto <see cref="T:System.DirectoryServices.AccountManagement.Principal" />.</param>
        <summary>Cria um novo objeto <see cref="T:System.DirectoryServices.AccountManagement.AdvancedFilters" />. Não se destina a ser chamado diretamente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Os aplicativos devem acessar <xref:System.DirectoryServices.AccountManagement.AdvancedFilters> por meio de <xref:System.DirectoryServices.AccountManagement.UserPrincipal.AdvancedSearchFilter%2A> propriedade do objeto de usuário.  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
        <altmember cref="T:System.DirectoryServices.AccountManagement.PrincipalSearcher" />
      </Docs>
    </Member>
    <Member MemberName="AccountExpirationDate">
      <MemberSignature Language="C#" Value="public void AccountExpirationDate (DateTime expirationTime, System.DirectoryServices.AccountManagement.MatchType match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AccountExpirationDate(valuetype System.DateTime expirationTime, valuetype System.DirectoryServices.AccountManagement.MatchType match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.AdvancedFilters.AccountExpirationDate(System.DateTime,System.DirectoryServices.AccountManagement.MatchType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AccountExpirationDate (expirationTime As DateTime, match As MatchType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AccountExpirationDate(DateTime expirationTime, System::DirectoryServices::AccountManagement::MatchType match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expirationTime" Type="System.DateTime" />
        <Parameter Name="match" Type="System.DirectoryServices.AccountManagement.MatchType" />
      </Parameters>
      <Docs>
        <param name="expirationTime">Um objeto <see cref="T:System.DateTime" />.</param>
        <param name="match">Um <see cref="T:System.DirectoryServices.AccountManagement.MatchType" /> que especifica como <c>expirationTime</c> deve ser usado na comparação.</param>
        <summary>Define o filtro de consulta para o atributo <see cref="P:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountExpirationDate" /> para o tipo de comparação e o tempo especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A hora UTC padrão. Se você quiser especificar a hora em hora local, em seguida, especifique o <xref:System.DateTime.Kind%2A> propriedade do seu <xref:System.DateTime> de objeto como <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.  
  
   
  
## Examples  
  
```csharp  
  
// Create the principal context for the usr object.  
PrincipalContext ctx = new PrincipalContext(ContextType.Domain, "fabrikam.com", "CN=Users,DC=fabrikam,DC=com", "administrator", "securlyStoredPassword");  
  
// Create the principal user object from the context  
UserPrincipal usr = new UserPrincipal(ctx);  
  
// Set the advanced query filter  
usr.AdvancedSearchFilter.AccountExpirationDate(DateTime.Now, MatchType.LessThan);  
  
// Create a PrincipalSearcher object.  
PrincipalSearcher ps = new PrincipalSearcher(usr);  
  
PrincipalSearchResult<Principal> results = ps.FindAll();  
  
Console.WriteLine("The following users' accounts have expired:");  
  
foreach (UserPrincipal u in results)  
{  
  Console.WriteLine(u.Name);  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
        <altmember cref="T:System.DirectoryServices.AccountManagement.PrincipalSearcher" />
      </Docs>
    </Member>
    <Member MemberName="AccountLockoutTime">
      <MemberSignature Language="C#" Value="public void AccountLockoutTime (DateTime lockoutTime, System.DirectoryServices.AccountManagement.MatchType match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AccountLockoutTime(valuetype System.DateTime lockoutTime, valuetype System.DirectoryServices.AccountManagement.MatchType match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.AdvancedFilters.AccountLockoutTime(System.DateTime,System.DirectoryServices.AccountManagement.MatchType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AccountLockoutTime (lockoutTime As DateTime, match As MatchType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AccountLockoutTime(DateTime lockoutTime, System::DirectoryServices::AccountManagement::MatchType match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lockoutTime" Type="System.DateTime" />
        <Parameter Name="match" Type="System.DirectoryServices.AccountManagement.MatchType" />
      </Parameters>
      <Docs>
        <param name="lockoutTime">Um objeto <see cref="T:System.DateTime" />.</param>
        <param name="match">Um <see cref="T:System.DirectoryServices.AccountManagement.MatchType" /> que especifica como <c>lockoutTime</c> deve ser usado na comparação.</param>
        <summary>Define o filtro de consulta <see cref="P:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountLockoutTime" /> para o tipo de comparação e o tempo especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A hora UTC padrão. Se você quiser especificar a hora em hora local, em seguida, especifique o <xref:System.DateTime.Kind%2A> propriedade do seu <xref:System.DateTime> de objeto como <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.  
  
   
  
## Examples  
  
```csharp  
  
// Create the principal context for the usr object.  
PrincipalContext ctx = new PrincipalContext(ContextType.Domain, "fabrikam.com", "CN=Users,DC=fabrikam,DC=com", "administrator", "SecurlyStoredPassword");  
  
// Create the principal user object from the context  
UserPrincipal usr = new UserPrincipal(ctx);  
  
// Set the advanced query filter  
usr.AdvancedSearchFilter.AccountLockoutTime(DateTime.Now.AddDays(-1), MatchType.GreaterThan);  
  
// Create a PrincipalSearcher object.  
PrincipalSearcher ps = new PrincipalSearcher(usr);  
  
PrincipalSearchResult<Principal> results = ps.FindAll();  
  
//Print user names of all accounts locked within the last 24 hours.  
  
foreach (UserPrincipal u in results)  
{  
  Console.WriteLine(u.Name);  
 }  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
        <altmember cref="T:System.DirectoryServices.AccountManagement.PrincipalSearcher" />
      </Docs>
    </Member>
    <Member MemberName="AdvancedFilterSet">
      <MemberSignature Language="C#" Value="protected void AdvancedFilterSet (string attribute, object value, Type objectType, System.DirectoryServices.AccountManagement.MatchType mt);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AdvancedFilterSet(string attribute, object value, class System.Type objectType, valuetype System.DirectoryServices.AccountManagement.MatchType mt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.AdvancedFilters.AdvancedFilterSet(System.String,System.Object,System.Type,System.DirectoryServices.AccountManagement.MatchType)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AdvancedFilterSet (attribute As String, value As Object, objectType As Type, mt As MatchType)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AdvancedFilterSet(System::String ^ attribute, System::Object ^ value, Type ^ objectType, System::DirectoryServices::AccountManagement::MatchType mt);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="objectType" Type="System.Type" />
        <Parameter Name="mt" Type="System.DirectoryServices.AccountManagement.MatchType" />
      </Parameters>
      <Docs>
        <param name="attribute">O nome do atributo</param>
        <param name="value">Um objeto.</param>
        <param name="objectType">O tipo de objeto de <c>valor</c>.</param>
        <param name="mt">Um <see cref="T:System.DirectoryServices.AccountManagement.MatchType" /> que especifica como <c>value</c> deve ser comparado ao valor do atributo.</param>
        <summary>Cria um filtro de consulta para uma propriedade em uma classe estendida.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Em uma classe estendida, você pode implementar um filtro de pesquisa avançada para `LogonCount`:  
  
```csharp  
  
public class InetOrgPersonSearchFilter : AdvancedFilters  
{  
    public InetOrgPersonSearchFilter(Principal p) : base(p) { }  
  
    public void LogonCount(int value, MatchType mt)  
    {  
        this.AdvancedFilterSet("LogonCount", value, typeof(int), mt);  
    }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
        <altmember cref="T:System.DirectoryServices.AccountManagement.PrincipalSearcher" />
      </Docs>
    </Member>
    <Member MemberName="BadLogonCount">
      <MemberSignature Language="C#" Value="public void BadLogonCount (int badLogonCount, System.DirectoryServices.AccountManagement.MatchType match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BadLogonCount(int32 badLogonCount, valuetype System.DirectoryServices.AccountManagement.MatchType match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.AdvancedFilters.BadLogonCount(System.Int32,System.DirectoryServices.AccountManagement.MatchType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BadLogonCount (badLogonCount As Integer, match As MatchType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BadLogonCount(int badLogonCount, System::DirectoryServices::AccountManagement::MatchType match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="badLogonCount" Type="System.Int32" />
        <Parameter Name="match" Type="System.DirectoryServices.AccountManagement.MatchType" />
      </Parameters>
      <Docs>
        <param name="badLogonCount">Um inteiro.</param>
        <param name="match">Um <see cref="T:System.DirectoryServices.AccountManagement.MatchType" /> que especifica como <c>badLogonCount</c> deve ser comparado ao valor do atributo.</param>
        <summary>Define o filtro de consulta para o atributo <see cref="P:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.BadLogonCount" /> para o tipo de comparação e o valor especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
  
```csharp  
  
// Create the principal context for the usr object.  
PrincipalContext ctx = new PrincipalContext(ContextType.Domain, "fabrikam.com", "CN=Users,DC=fabrikam,DC=com", "administrator", "SecurlyStoredPassword");  
  
// Create the principal user object from the context  
UserPrincipal usr = new UserPrincipal(ctx);  
  
// Set the advanced query filter  
int badLogonThreshold = 3;  
usr.AdvancedSearchFilter.BadLogonCount(badLogonThreshold, MatchType.GreaterThan);  
  
// Create a PrincipalSearcher object.  
PrincipalSearcher ps = new PrincipalSearcher(usr);  
PrincipalSearchResult<Principal> results = ps.FindAll();  
Console.WriteLine("The following users have logged on unsuccessfully at more than " + badLogonThreshold.toString + " times:");  
foreach (UserPrincipal u in results)  
{  
  Console.WriteLine(u.Name);  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
        <altmember cref="T:System.DirectoryServices.AccountManagement.PrincipalSearcher" />
      </Docs>
    </Member>
    <Member MemberName="LastBadPasswordAttempt">
      <MemberSignature Language="C#" Value="public void LastBadPasswordAttempt (DateTime lastAttempt, System.DirectoryServices.AccountManagement.MatchType match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LastBadPasswordAttempt(valuetype System.DateTime lastAttempt, valuetype System.DirectoryServices.AccountManagement.MatchType match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.AdvancedFilters.LastBadPasswordAttempt(System.DateTime,System.DirectoryServices.AccountManagement.MatchType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LastBadPasswordAttempt (lastAttempt As DateTime, match As MatchType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LastBadPasswordAttempt(DateTime lastAttempt, System::DirectoryServices::AccountManagement::MatchType match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lastAttempt" Type="System.DateTime" />
        <Parameter Name="match" Type="System.DirectoryServices.AccountManagement.MatchType" />
      </Parameters>
      <Docs>
        <param name="lastAttempt">Um objeto <see cref="T:System.DateTime" />.</param>
        <param name="match">Um <see cref="T:System.DirectoryServices.AccountManagement.MatchType" /> que especifica como <c>lastAttempt</c> deve ser usado na comparação.</param>
        <summary>Define o filtro de consulta para o atributo <see cref="P:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastBadPasswordAttempt" /> para o <see cref="T:System.DateTime" /> especificado e o valor de comparação especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A hora UTC padrão. Se você quiser especificar a hora em hora local, em seguida, especifique o <xref:System.DateTime.Kind%2A> propriedade do seu <xref:System.DateTime> de objeto como <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.  
  
   
  
## Examples  
  
```csharp  
  
// Create the principal context for the usr object.  
PrincipalContext ctx = new PrincipalContext(ContextType.Domain, "fabrikam.com", "CN=Users,DC=fabrikam,DC=com", "administrator", "SecurlyStoredPassword");  
  
// Create the principal user object from the context  
UserPrincipal usr = new UserPrincipal(ctx);  
  
// Set the advanced query filter  
usr.AdvancedSearchFilter.LastBadPasswordAttempt(DateTime.Now.AddDays(-1), MatchType.GreaterThan);  
  
// Create a PrincipalSearcher object.  
PrincipalSearcher ps = new PrincipalSearcher(usr);  
PrincipalSearchResult<Principal> results = ps.FindAll();  
  
//Write the name of all users whose most recent incorrect  
//password entry was within the last day  
  
foreach (UserPrincipal u in results)  
{  
    Console.WriteLine(u.Name);  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
        <altmember cref="T:System.DirectoryServices.AccountManagement.PrincipalSearcher" />
      </Docs>
    </Member>
    <Member MemberName="LastLogonTime">
      <MemberSignature Language="C#" Value="public void LastLogonTime (DateTime logonTime, System.DirectoryServices.AccountManagement.MatchType match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LastLogonTime(valuetype System.DateTime logonTime, valuetype System.DirectoryServices.AccountManagement.MatchType match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.AdvancedFilters.LastLogonTime(System.DateTime,System.DirectoryServices.AccountManagement.MatchType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LastLogonTime (logonTime As DateTime, match As MatchType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LastLogonTime(DateTime logonTime, System::DirectoryServices::AccountManagement::MatchType match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logonTime" Type="System.DateTime" />
        <Parameter Name="match" Type="System.DirectoryServices.AccountManagement.MatchType" />
      </Parameters>
      <Docs>
        <param name="logonTime">Um objeto <see cref="T:System.DateTime" />.</param>
        <param name="match">Um <see cref="T:System.DirectoryServices.AccountManagement.MatchType" /> que especifica como <c>logonTime</c> deve ser usado na comparação.</param>
        <summary>Define o filtro de consulta para o atributo <see cref="P:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastLogon" /> para o <see cref="T:System.DateTime" /> especificado e o valor de comparação especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A hora UTC padrão. Se você quiser especificar a hora em hora local, em seguida, especifique o <xref:System.DateTime.Kind%2A> propriedade do seu <xref:System.DateTime> de objeto como <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.  
  
   
  
## Examples  
  
```csharp  
  
// Create the principal context for the usr object.  
PrincipalContext ctx = new PrincipalContext(ContextType.Domain, "fabrikam.com", "CN=Users,DC=fabrikam,DC=com", "administrator", "SecurlyStoredPassword");  
  
// Create the principal user object from the context  
UserPrincipal usr = new UserPrincipal(ctx);  
  
// Set the advanced query filter  
usr.AdvancedSearchFilter.LastLogonTime(DateTime.Now.AddDays(-1), MatchType.GreaterThan);  
  
// Create a PrincipalSearcher object.  
PrincipalSearcher ps = new PrincipalSearcher(usr);  
PrincipalSearchResult<Principal> results = ps.FindAll();  
  
//Write the names of all users who have logged on since yesterday  
foreach (UserPrincipal u in results)  
{  
    Console.WriteLine(u.Name);  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
        <altmember cref="T:System.DirectoryServices.AccountManagement.PrincipalSearcher" />
      </Docs>
    </Member>
    <Member MemberName="LastPasswordSetTime">
      <MemberSignature Language="C#" Value="public void LastPasswordSetTime (DateTime passwordSetTime, System.DirectoryServices.AccountManagement.MatchType match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LastPasswordSetTime(valuetype System.DateTime passwordSetTime, valuetype System.DirectoryServices.AccountManagement.MatchType match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.AdvancedFilters.LastPasswordSetTime(System.DateTime,System.DirectoryServices.AccountManagement.MatchType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LastPasswordSetTime (passwordSetTime As DateTime, match As MatchType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LastPasswordSetTime(DateTime passwordSetTime, System::DirectoryServices::AccountManagement::MatchType match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="passwordSetTime" Type="System.DateTime" />
        <Parameter Name="match" Type="System.DirectoryServices.AccountManagement.MatchType" />
      </Parameters>
      <Docs>
        <param name="passwordSetTime">Um objeto <see cref="T:System.DateTime" />.</param>
        <param name="match">Um <see cref="T:System.DirectoryServices.AccountManagement.MatchType" /> que especifica como <c>passwordSetTime</c> deve ser usado na comparação.</param>
        <summary>Define o filtro de consulta para o atributo <see cref="P:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastPasswordSet" /> para o <see cref="T:System.DateTime" /> especificado e o valor de comparação especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A hora UTC padrão. Se você quiser especificar a hora em hora local, em seguida, especifique o <xref:System.DateTime.Kind%2A> propriedade do seu <xref:System.DateTime> de objeto como <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.  
  
   
  
## Examples  
  
```csharp  
  
// Create the principal context for the usr object.  
PrincipalContext ctx = new PrincipalContext(ContextType.Domain, "fabrikam.com", "CN=Users,DC=fabrikam,DC=com", "administrator", "SecurlyStoredPassword");  
  
// Create the principal user object from the context  
UserPrincipal usr = new UserPrincipal(ctx);  
  
// Set the advanced query filter  
usr.AdvancedSearchFilter.LastPasswordSetTime(DateTime.Now.AddDays(-30), MatchType.LessThan);  
  
// Create a PrincipalSearcher object.  
PrincipalSearcher ps = new PrincipalSearcher(usr);  
PrincipalSearchResult<Principal> results = ps.FindAll();  
  
//Force users who have not changed their password in the last  
//30 days to do so at next logon  
foreach (UserPrincipal u in results)  
{  
    u.ExpirePasswordNow();  
    u.Save();  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
        <altmember cref="T:System.DirectoryServices.AccountManagement.PrincipalSearcher" />
      </Docs>
    </Member>
  </Members>
</Type>