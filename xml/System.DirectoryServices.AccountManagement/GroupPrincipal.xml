<Type Name="GroupPrincipal" FullName="System.DirectoryServices.AccountManagement.GroupPrincipal">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4f49905e405fa17947bd25dc33760bd65bb264ab" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37662725" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class GroupPrincipal : System.DirectoryServices.AccountManagement.Principal" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GroupPrincipal extends System.DirectoryServices.AccountManagement.Principal" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.AccountManagement.GroupPrincipal" />
  <TypeSignature Language="VB.NET" Value="Public Class GroupPrincipal&#xA;Inherits Principal" />
  <TypeSignature Language="C++ CLI" Value="public ref class GroupPrincipal : System::DirectoryServices::AccountManagement::Principal" />
  <TypeSignature Language="F#" Value="type GroupPrincipal = class&#xA;    inherit Principal" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.DirectoryServices.AccountManagement.Principal</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.DirectoryServices.AccountManagement.DirectoryRdnPrefix("CN")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Encapsula as contas de grupo. As contas de grupo podem ser coleções arbitrárias de contas ou objetos de entidade de segurança criadas para fins administrativos.</summary>
    <remarks>To be added.</remarks>
    <altmember cref="N:System.DirectoryServices.AccountManagement" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" />.</summary>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GroupPrincipal (System.DirectoryServices.AccountManagement.PrincipalContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.DirectoryServices.AccountManagement.PrincipalContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.GroupPrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As PrincipalContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GroupPrincipal(System::DirectoryServices::AccountManagement::PrincipalContext ^ context);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.AccountManagement.GroupPrincipal : System.DirectoryServices.AccountManagement.PrincipalContext -&gt; System.DirectoryServices.AccountManagement.GroupPrincipal" Usage="new System.DirectoryServices.AccountManagement.GroupPrincipal context" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.AccountManagement.PrincipalContext" />
      </Parameters>
      <Docs>
        <param name="context">O <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> que especifica o servidor ou domínio no qual as operações são executadas.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" />, usando o contexto especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A conta de entidade de grupo não é persistida quando ele é criado. Para manter a conta, chame o <xref:System.DirectoryServices.AccountManagement.Principal.Save%2A> método.  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GroupPrincipal (System.DirectoryServices.AccountManagement.PrincipalContext context, string samAccountName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.DirectoryServices.AccountManagement.PrincipalContext context, string samAccountName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.GroupPrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As PrincipalContext, samAccountName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GroupPrincipal(System::DirectoryServices::AccountManagement::PrincipalContext ^ context, System::String ^ samAccountName);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.AccountManagement.GroupPrincipal : System.DirectoryServices.AccountManagement.PrincipalContext * string -&gt; System.DirectoryServices.AccountManagement.GroupPrincipal" Usage="new System.DirectoryServices.AccountManagement.GroupPrincipal (context, samAccountName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.AccountManagement.PrincipalContext" />
        <Parameter Name="samAccountName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">O <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> que especifica o servidor ou domínio no qual as operações são executadas.</param>
        <param name="samAccountName">O nome da conta do SAM dessa entidade de segurança.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> e atribui a ela o contexto e o nome da conta do SAM especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A conta de entidade de grupo não é persistida quando ele é criado. Para manter a conta, chame o <xref:System.DirectoryServices.AccountManagement.Principal.Save%2A> método.  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.GroupPrincipal.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Dispose();" />
      <MemberSignature Language="F#" Value="override this.Dispose : unit -&gt; unit" Usage="groupPrincipal.Dispose " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Descarta a instância atual do objeto <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindByIdentity">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Retorna um objeto de entidade de segurança de grupo que corresponde ao valor de identidade especificado.</summary>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </MemberGroup>
    <Member MemberName="FindByIdentity">
      <MemberSignature Language="C#" Value="public static System.DirectoryServices.AccountManagement.GroupPrincipal FindByIdentity (System.DirectoryServices.AccountManagement.PrincipalContext context, string identityValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.DirectoryServices.AccountManagement.GroupPrincipal FindByIdentity(class System.DirectoryServices.AccountManagement.PrincipalContext context, string identityValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindByIdentity (context As PrincipalContext, identityValue As String) As GroupPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::DirectoryServices::AccountManagement::GroupPrincipal ^ FindByIdentity(System::DirectoryServices::AccountManagement::PrincipalContext ^ context, System::String ^ identityValue);" />
      <MemberSignature Language="F#" Value="static member FindByIdentity : System.DirectoryServices.AccountManagement.PrincipalContext * string -&gt; System.DirectoryServices.AccountManagement.GroupPrincipal" Usage="System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity (context, identityValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.GroupPrincipal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.AccountManagement.PrincipalContext" />
        <Parameter Name="identityValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">O <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> que especifica o servidor ou domínio no qual as operações são executadas.</param>
        <param name="identityValue">A identidade da entidade de segurança do grupo. Esse parâmetro pode estar em qualquer formato que esteja contido na enumeração <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" />.</param>
        <summary>Retorna um objeto de entidade de segurança de grupo que corresponde ao valor de identidade especificado.</summary>
        <returns>Um objeto <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> que corresponde ao valor e ao tipo de identidade especificado, ou nulo, se nenhuma correspondência for encontrada.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.MultipleMatchesException">Foram encontrados vários objetos de entidade de segurança do grupo que correspondem ao objeto de grupo atual.</exception>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName="FindByIdentity">
      <MemberSignature Language="C#" Value="public static System.DirectoryServices.AccountManagement.GroupPrincipal FindByIdentity (System.DirectoryServices.AccountManagement.PrincipalContext context, System.DirectoryServices.AccountManagement.IdentityType identityType, string identityValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.DirectoryServices.AccountManagement.GroupPrincipal FindByIdentity(class System.DirectoryServices.AccountManagement.PrincipalContext context, valuetype System.DirectoryServices.AccountManagement.IdentityType identityType, string identityValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::DirectoryServices::AccountManagement::GroupPrincipal ^ FindByIdentity(System::DirectoryServices::AccountManagement::PrincipalContext ^ context, System::DirectoryServices::AccountManagement::IdentityType identityType, System::String ^ identityValue);" />
      <MemberSignature Language="F#" Value="static member FindByIdentity : System.DirectoryServices.AccountManagement.PrincipalContext * System.DirectoryServices.AccountManagement.IdentityType * string -&gt; System.DirectoryServices.AccountManagement.GroupPrincipal" Usage="System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity (context, identityType, identityValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.GroupPrincipal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.AccountManagement.PrincipalContext" />
        <Parameter Name="identityType" Type="System.DirectoryServices.AccountManagement.IdentityType" />
        <Parameter Name="identityValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">O <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> que especifica o servidor ou domínio no qual as operações são executadas.</param>
        <param name="identityType">Um valor de enumeração <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" /> que especifica o formato do parâmetro <c>identityValue</c>.</param>
        <param name="identityValue">A identidade da entidade de segurança do grupo. Esse parâmetro pode estar em qualquer formato que esteja contido na enumeração <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" />.</param>
        <summary>Retorna um objeto de entidade de segurança do grupo que corresponde ao tipo de identidade especificado e ao valor. Essa versão do método <see cref="Overload:System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity" /> determina o formato do valor de identidade.</summary>
        <returns>Um <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> que corresponde ao valor e ao tipo de identidade especificado, ou nulo, se nenhuma correspondência for encontrada.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.MultipleMatchesException">Foram encontrados vários objetos de entidade de segurança do grupo que correspondem ao objeto de grupo atual.</exception>
        <exception cref="T:System.ComponenetModel.InvalidEnumerationOperatorException">O valor de identidade não é um valor de enumeração <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" /> válido.</exception>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMembers">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Retorna uma coleção de objetos de entidade de segurança que está contida no grupo.</summary>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMembers">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.AccountManagement.PrincipalSearchResult&lt;System.DirectoryServices.AccountManagement.Principal&gt; GetMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.AccountManagement.PrincipalSearchResult`1&lt;class System.DirectoryServices.AccountManagement.Principal&gt; GetMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.GroupPrincipal.GetMembers" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMembers () As PrincipalSearchResult(Of Principal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::AccountManagement::PrincipalSearchResult&lt;System::DirectoryServices::AccountManagement::Principal ^&gt; ^ GetMembers();" />
      <MemberSignature Language="F#" Value="member this.GetMembers : unit -&gt; System.DirectoryServices.AccountManagement.PrincipalSearchResult&lt;System.DirectoryServices.AccountManagement.Principal&gt;" Usage="groupPrincipal.GetMembers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.PrincipalSearchResult&lt;System.DirectoryServices.AccountManagement.Principal&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna uma coleção de objetos de entidade de segurança que está contida no grupo.</summary>
        <returns>Um <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult`1" /> objeto que contém os objetos de entidade de segurança que são membros do grupo ou uma coleção vazia se o grupo não tem membros.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método pesquisa recursivamente o grupo atual. Portanto, os objetos de grupo podem ser retornados da coleção do objeto de entidade.  
  
 Os membros serão retornados independentemente do contexto. Por exemplo, se um contexto de AD DS com base em "CN = SpecialUsers, DC = Fabrikam, DC = com", o conjunto de PrincipalFindResult incluirá os membros do grupo que estão localizados em "CN = NormalUsers, DC = Fabrikam, DC = com" Além disso, mesmo que eles se encaixam em um escopo que não é parte do contexto que é pesquisado. A coleção retornada de entidade de segurança também pode conter membros que estão localizados em um repositório diferente do grupo.  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName="GetMembers">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.AccountManagement.PrincipalSearchResult&lt;System.DirectoryServices.AccountManagement.Principal&gt; GetMembers (bool recursive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.AccountManagement.PrincipalSearchResult`1&lt;class System.DirectoryServices.AccountManagement.Principal&gt; GetMembers(bool recursive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.GroupPrincipal.GetMembers(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMembers (recursive As Boolean) As PrincipalSearchResult(Of Principal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::AccountManagement::PrincipalSearchResult&lt;System::DirectoryServices::AccountManagement::Principal ^&gt; ^ GetMembers(bool recursive);" />
      <MemberSignature Language="F#" Value="member this.GetMembers : bool -&gt; System.DirectoryServices.AccountManagement.PrincipalSearchResult&lt;System.DirectoryServices.AccountManagement.Principal&gt;" Usage="groupPrincipal.GetMembers recursive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.PrincipalSearchResult&lt;System.DirectoryServices.AccountManagement.Principal&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recursive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="recursive">Um valor booliano que especifica se o grupo é pesquisado recursivamente.</param>
        <summary>Retorna uma coleção de objetos de entidade de segurança que está contida no grupo. Quando esse sinalizador é definido como verdadeiro, este método pesquisa recursivamente o grupo atual e retorna todos os membros do grupo.</summary>
        <returns>Um <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult`1" /> objeto que contém os objetos de entidade de segurança que são membros do grupo ou uma coleção vazia se o grupo não tem membros.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A coleção de entidade retornada não contém objetos de grupo quando esse sinalizador é definido como `true`; somente os nós folha são retornados. Por exemplo, quando um grupo que contém um objeto de computador e um objeto de grupo (com apenas as entidades de usuário) é pesquisado recursivamente, a coleção retornada contém o objeto de computador e os objetos de entidade de usuário no grupo aninhado. Uma vez que o objeto de grupo não é uma folha, mesmo quando ele estiver vazio, ele não é retornado na pesquisa recursiva.  Quando esse sinalizador é definido como `false`, a coleção retornada pode conter objetos de grupo.  
  
 Os membros serão retornados independentemente do contexto. Por exemplo, se um contexto de AD DS com base em "CN = SpecialUsers, DC = Fabrikam, DC = com", o conjunto de PrincipalFindResult incluirá os membros do grupo que estão localizados em "CN = NormalUsers, DC = Fabrikam, DC = com" Além disso, mesmo que eles se encaixam em um escopo que não é parte do contexto que é pesquisado. A coleção retornada de entidade de segurança também pode conter membros que estão localizados em um repositório diferente do grupo.  
  
   
  
## Examples  
 O código a seguir conecta-se ao domínio LDAP "fabrikam.com" com o nome de usuário definido como "administrador" e a senha definida para "SecretPwd123" no <xref:System.DirectoryServices.AccountManagement.PrincipalContext> construtor.  
  
 Uma pesquisa é executada para encontrar o grupo que tem o nome "Administradores do domínio" no contêiner especificado no <xref:System.DirectoryServices.AccountManagement.PrincipalContext> construtor "DC = fabrikam, DC = com." Se o grupo for encontrado, todas as entidades que são membros desse grupo, que inclui membros recursivos, em seguida, são enumeradas  
  
```  
PrincipalContext ctx = new PrincipalContext(ContextType.Domain,                                                                      
                                            "fabrikam.com",   
                                            "DC=fabrikam,DC=com",   
                                            "administrator",   
                                            "SecretPwd123");  
  
GroupPrincipal grp = GroupPrincipal.FindByIdentity(ctx,   
                                                   IdentityType.Name,   
                                                   "Domain Admins");  
  
if (grp != null)  
{  
    foreach (Principal p in grp.GetMembers(true))  
    {  
         Console.WriteLine(p.Name);  
    }  
    grp.Dispose();  
}  
  
ctx.Dispose();   
```  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName="GroupScope">
      <MemberSignature Language="C#" Value="public Nullable&lt;System.DirectoryServices.AccountManagement.GroupScope&gt; GroupScope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.DirectoryServices.AccountManagement.GroupScope&gt; GroupScope" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.AccountManagement.GroupPrincipal.GroupScope" />
      <MemberSignature Language="VB.NET" Value="Public Property GroupScope As Nullable(Of GroupScope)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;System::DirectoryServices::AccountManagement::GroupScope&gt; GroupScope { Nullable&lt;System::DirectoryServices::AccountManagement::GroupScope&gt; get(); void set(Nullable&lt;System::DirectoryServices::AccountManagement::GroupScope&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.GroupScope : Nullable&lt;System.DirectoryServices.AccountManagement.GroupScope&gt; with get, set" Usage="System.DirectoryServices.AccountManagement.GroupPrincipal.GroupScope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DirectoryServices.AccountManagement.GroupScope&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define uma enumeração <see cref="T:System.DirectoryServices.AccountManagement.GroupScope" /> que permite valor nulo que especifica o escopo para essa entidade de grupo.</summary>
        <value>Um valor de enumeração <see cref="T:System.DirectoryServices.AccountManagement.GroupScope" /> que permite valor nulo que especifica o escopo desse grupo ou nulo se nenhum escopo tiver sido definido.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">O aplicativo poderá não definir essa propriedade como nula.</exception>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName="IsSecurityGroup">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; IsSecurityGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsSecurityGroup" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.AccountManagement.GroupPrincipal.IsSecurityGroup" />
      <MemberSignature Language="VB.NET" Value="Public Property IsSecurityGroup As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;bool&gt; IsSecurityGroup { Nullable&lt;bool&gt; get(); void set(Nullable&lt;bool&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.IsSecurityGroup : Nullable&lt;bool&gt; with get, set" Usage="System.DirectoryServices.AccountManagement.GroupPrincipal.IsSecurityGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor booliano anulável que indica se o grupo está habilitado para segurança.</summary>
        <value>
          <see langword="true" /> Se o grupo é segurança habilitada ou nulo se o grupo não foi persistente; Caso contrário, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando essa propriedade retorna false, o grupo é temporariamente não segurança habilitada. Quando o <xref:System.DirectoryServices.AccountManagement.GroupPrincipal.IsSecurityGroup> propriedade é redefinida para true mais tarde, o grupo terá as mesmas propriedades como antes, ele foi definido como false.  
  
 Se a entidade de segurança não foi persistente no repositório, essa propriedade retornará null. Depois que a entidade de segurança é persistente, a segurança habilitada configuração padrão depende do armazenamento. Os repositórios de AD DS e AD LDS desabilitar novas entidades quando elas são mantidas, enquanto SAM permite novas entidades quando elas são persistentes.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O aplicativo poderá não definir essa propriedade como nula.</exception>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName="Members">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.AccountManagement.PrincipalCollection Members { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.AccountManagement.PrincipalCollection Members" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.AccountManagement.GroupPrincipal.Members" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Members As PrincipalCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::AccountManagement::PrincipalCollection ^ Members { System::DirectoryServices::AccountManagement::PrincipalCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Members : System.DirectoryServices.AccountManagement.PrincipalCollection" Usage="System.DirectoryServices.AccountManagement.GroupPrincipal.Members" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.PrincipalCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma coleção de objetos de entidade de segurança que representam os membros do grupo.</summary>
        <value>Um objeto <see cref="T:System.DirectoryServices.AccountManagement.PrincipalCollection" /> que contém os objetos de entidade de segurança que representam os membros do grupo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para grupos do AD DS, o <xref:System.DirectoryServices.AccountManagement.GroupPrincipal.Members%2A> propriedade inclui entidades de usuário que são membros do grupo por causa de sua primaryId atributo. Quando o grupo contém esses tipos de membros, as seguintes restrições se aplicam:  
  
-   O <xref:System.DirectoryServices.AccountManagement.PrincipalCollection.Remove*> método não pode ser usado para remover os membros que fazem parte do grupo por causa de sua primaryId atributo.  
  
-   O <xref:System.DirectoryServices.AccountManagement.PrincipalCollection.Clear*> método não pode ser usado para limpar membros que fazem parte do grupo por causa de sua primaryId atributo.  
  
   
  
## Examples  
 O código a seguir conecta-se ao domínio LDAP "fabrikam.com" com o nome de usuário definido como "administrador" e a senha definida para "SecretPwd123" no <xref:System.DirectoryServices.AccountManagement.PrincipalContext> construtor.  
  
 Uma pesquisa é executada para encontrar o grupo que tem o nome "Administradores do domínio" no contêiner especificado no <xref:System.DirectoryServices.AccountManagement.PrincipalContext> construtor, "DC = fabrikam, DC = com." Se o grupo for encontrado, o usuário que tem o nome "John Smith" é removido do grupo e usuário que tem o nome "Jim Daly" é adicionado ao grupo  
  
```  
PrincipalContext ctx = new PrincipalContext(ContextType.Domain,                                                                       
                                            "fabrikam.com",                                                                               
                                            "DC=fabrikam,DC=com",                                                                 
                                            "administrator",   
                                            "SecretPwd123");  
  
GroupPrincipal grp = GroupPrincipal.FindByIdentity(ctx,   
                                                   IdentityType.Name,   
                                                   "Domain Admins");  
  
if (grp != null)  
{  
    grp.Members.Remove(ctx, IdentityType.Name, "John Smith");            
    grp.Members.Add(ctx, IdentityType.Name, "Jim Daly");  
    grp.Save();  
    grp.Dispose();  
}  
ctx.Dispose();  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
  </Members>
</Type>