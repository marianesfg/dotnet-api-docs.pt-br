<Type Name="GroupPrincipal" FullName="System.DirectoryServices.AccountManagement.GroupPrincipal">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="64f9457582a03293723a3df59208a18457f4b2e9" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36673627" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class GroupPrincipal : System.DirectoryServices.AccountManagement.Principal" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GroupPrincipal extends System.DirectoryServices.AccountManagement.Principal" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.AccountManagement.GroupPrincipal" />
  <TypeSignature Language="VB.NET" Value="Public Class GroupPrincipal&#xA;Inherits Principal" />
  <TypeSignature Language="C++ CLI" Value="public ref class GroupPrincipal : System::DirectoryServices::AccountManagement::Principal" />
  <TypeSignature Language="F#" Value="type GroupPrincipal = class&#xA;    inherit Principal" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.DirectoryServices.AccountManagement.Principal</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.DirectoryServices.AccountManagement.DirectoryRdnPrefix("CN")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="845a7-101">Encapsula as contas de grupo.</span>
      <span class="sxs-lookup">
        <span data-stu-id="845a7-101">Encapsulates group accounts.</span>
      </span>
      <span data-ttu-id="845a7-102">As contas de grupo podem ser coleções arbitrárias de contas ou objetos de entidade de segurança criadas para fins administrativos.</span>
      <span class="sxs-lookup">
        <span data-stu-id="845a7-102">Group accounts can be arbitrary collections of principal objects or accounts created for administrative purposes.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
    <altmember cref="N:System.DirectoryServices.AccountManagement" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="845a7-103">Inicializa uma nova instância da classe <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="845a7-103">Initializes a new instance of the <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> class.</span>
          </span>
        </summary>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GroupPrincipal (System.DirectoryServices.AccountManagement.PrincipalContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.DirectoryServices.AccountManagement.PrincipalContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.GroupPrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As PrincipalContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GroupPrincipal(System::DirectoryServices::AccountManagement::PrincipalContext ^ context);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.AccountManagement.GroupPrincipal : System.DirectoryServices.AccountManagement.PrincipalContext -&gt; System.DirectoryServices.AccountManagement.GroupPrincipal" Usage="new System.DirectoryServices.AccountManagement.GroupPrincipal context" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.AccountManagement.PrincipalContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="845a7-104">O <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> que especifica o servidor ou domínio no qual as operações são executadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="845a7-104">The <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> that specifies the server or domain against which operations are performed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="845a7-105">Inicializa uma nova instância da classe <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" />, usando o contexto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="845a7-105">Initializes a new instance of the <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> class by using the specified context.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="845a7-106">A conta de grupo de entidade não é mantida quando ele é criado.</span><span class="sxs-lookup"><span data-stu-id="845a7-106">The group principal account is not persisted when it is created.</span></span> <span data-ttu-id="845a7-107">Para manter a conta, chame o <xref:System.DirectoryServices.AccountManagement.Principal.Save%2A> método.</span><span class="sxs-lookup"><span data-stu-id="845a7-107">To persist the account, call the <xref:System.DirectoryServices.AccountManagement.Principal.Save%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GroupPrincipal (System.DirectoryServices.AccountManagement.PrincipalContext context, string samAccountName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.DirectoryServices.AccountManagement.PrincipalContext context, string samAccountName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.GroupPrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As PrincipalContext, samAccountName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GroupPrincipal(System::DirectoryServices::AccountManagement::PrincipalContext ^ context, System::String ^ samAccountName);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.AccountManagement.GroupPrincipal : System.DirectoryServices.AccountManagement.PrincipalContext * string -&gt; System.DirectoryServices.AccountManagement.GroupPrincipal" Usage="new System.DirectoryServices.AccountManagement.GroupPrincipal (context, samAccountName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.AccountManagement.PrincipalContext" />
        <Parameter Name="samAccountName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="845a7-108">O <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> que especifica o servidor ou domínio no qual as operações são executadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="845a7-108">The <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> that specifies the server or domain against which operations are performed.</span>
          </span>
        </param>
        <param name="samAccountName">
          <span data-ttu-id="845a7-109">O nome da conta do SAM dessa entidade de segurança.</span>
          <span class="sxs-lookup">
            <span data-stu-id="845a7-109">The SAM account name for this principal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="845a7-110">Inicializa uma nova instância da classe <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> e atribui a ela o contexto e o nome da conta do SAM especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="845a7-110">Initializes a new instance of the <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> class and assigns it to the specified context and SAM account name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="845a7-111">A conta de grupo de entidade não é mantida quando ele é criado.</span><span class="sxs-lookup"><span data-stu-id="845a7-111">The group principal account is not persisted when it is created.</span></span> <span data-ttu-id="845a7-112">Para manter a conta, chame o <xref:System.DirectoryServices.AccountManagement.Principal.Save%2A> método.</span><span class="sxs-lookup"><span data-stu-id="845a7-112">To persist the account, call the <xref:System.DirectoryServices.AccountManagement.Principal.Save%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.GroupPrincipal.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Dispose();" />
      <MemberSignature Language="F#" Value="override this.Dispose : unit -&gt; unit" Usage="groupPrincipal.Dispose " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="845a7-113">Descarta a instância atual do objeto <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="845a7-113">Disposes the current instance of the <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindByIdentity">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="845a7-114">Retorna um objeto de entidade de segurança de grupo que corresponde ao valor de identidade especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="845a7-114">Returns a group principal object that matches the specified identity value.</span>
          </span>
        </summary>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </MemberGroup>
    <Member MemberName="FindByIdentity">
      <MemberSignature Language="C#" Value="public static System.DirectoryServices.AccountManagement.GroupPrincipal FindByIdentity (System.DirectoryServices.AccountManagement.PrincipalContext context, string identityValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.DirectoryServices.AccountManagement.GroupPrincipal FindByIdentity(class System.DirectoryServices.AccountManagement.PrincipalContext context, string identityValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindByIdentity (context As PrincipalContext, identityValue As String) As GroupPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::DirectoryServices::AccountManagement::GroupPrincipal ^ FindByIdentity(System::DirectoryServices::AccountManagement::PrincipalContext ^ context, System::String ^ identityValue);" />
      <MemberSignature Language="F#" Value="static member FindByIdentity : System.DirectoryServices.AccountManagement.PrincipalContext * string -&gt; System.DirectoryServices.AccountManagement.GroupPrincipal" Usage="System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity (context, identityValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.GroupPrincipal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.AccountManagement.PrincipalContext" />
        <Parameter Name="identityValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="845a7-115">O <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> que especifica o servidor ou domínio no qual as operações são executadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="845a7-115">The <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> that specifies the server or domain against which operations are performed.</span>
          </span>
        </param>
        <param name="identityValue">
          <span data-ttu-id="845a7-116">A identidade da entidade de segurança do grupo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="845a7-116">The identity of the group principal.</span>
          </span>
          <span data-ttu-id="845a7-117">Esse parâmetro pode estar em qualquer formato que esteja contido na enumeração <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="845a7-117">This parameter can be any format that is contained in the <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" /> enumeration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="845a7-118">Retorna um objeto de entidade de segurança de grupo que corresponde ao valor de identidade especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="845a7-118">Returns a group principal object that matches the specified identity value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="845a7-119">Um objeto <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> que corresponde ao valor e ao tipo de identidade especificado, ou nulo, se nenhuma correspondência for encontrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="845a7-119">A <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> object that matches the specified identity value and type, or null if no matches are found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.MultipleMatchesException">
          <span data-ttu-id="845a7-120">Foram encontrados vários objetos de entidade de segurança do grupo que correspondem ao objeto de grupo atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="845a7-120">Multiple group principal objects matching the current group object were found.</span>
          </span>
        </exception>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName="FindByIdentity">
      <MemberSignature Language="C#" Value="public static System.DirectoryServices.AccountManagement.GroupPrincipal FindByIdentity (System.DirectoryServices.AccountManagement.PrincipalContext context, System.DirectoryServices.AccountManagement.IdentityType identityType, string identityValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.DirectoryServices.AccountManagement.GroupPrincipal FindByIdentity(class System.DirectoryServices.AccountManagement.PrincipalContext context, valuetype System.DirectoryServices.AccountManagement.IdentityType identityType, string identityValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::DirectoryServices::AccountManagement::GroupPrincipal ^ FindByIdentity(System::DirectoryServices::AccountManagement::PrincipalContext ^ context, System::DirectoryServices::AccountManagement::IdentityType identityType, System::String ^ identityValue);" />
      <MemberSignature Language="F#" Value="static member FindByIdentity : System.DirectoryServices.AccountManagement.PrincipalContext * System.DirectoryServices.AccountManagement.IdentityType * string -&gt; System.DirectoryServices.AccountManagement.GroupPrincipal" Usage="System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity (context, identityType, identityValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.GroupPrincipal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.AccountManagement.PrincipalContext" />
        <Parameter Name="identityType" Type="System.DirectoryServices.AccountManagement.IdentityType" />
        <Parameter Name="identityValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="845a7-121">O <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> que especifica o servidor ou domínio no qual as operações são executadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="845a7-121">The <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> that specifies the server or domain against which operations are performed.</span>
          </span>
        </param>
        <param name="identityType">
          <span data-ttu-id="845a7-122">Um valor de enumeração <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" /> que especifica o formato do parâmetro <c>identityValue</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="845a7-122">A <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" /> enumeration value that specifies the format of the <c>identityValue</c> parameter.</span>
          </span>
        </param>
        <param name="identityValue">
          <span data-ttu-id="845a7-123">A identidade da entidade de segurança do grupo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="845a7-123">The identity of the group principal.</span>
          </span>
          <span data-ttu-id="845a7-124">Esse parâmetro pode estar em qualquer formato que esteja contido na enumeração <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="845a7-124">This parameter can be any format that is contained in the <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" /> enumeration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="845a7-125">Retorna um objeto de entidade de segurança do grupo que corresponde ao tipo de identidade especificado e ao valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="845a7-125">Returns a group principal object that matches the specified identity type, and value.</span>
          </span>
          <span data-ttu-id="845a7-126">Essa versão do método <see cref="Overload:System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity" /> determina o formato do valor de identidade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="845a7-126">This version of the <see cref="Overload:System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity" /> method determines the format of the identity value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="845a7-127">Um <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> que corresponde ao valor e ao tipo de identidade especificado, ou nulo, se nenhuma correspondência for encontrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="845a7-127">A <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> that matches the specified identity value and type, or null if no matches are found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.MultipleMatchesException">
          <span data-ttu-id="845a7-128">Foram encontrados vários objetos de entidade de segurança do grupo que correspondem ao objeto de grupo atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="845a7-128">Multiple group principal objects matching the current group object were found.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponenetModel.InvalidEnumerationOperatorException">
          <span data-ttu-id="845a7-129">O valor de identidade não é um valor de enumeração <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" /> válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="845a7-129">The identity value is not a valid <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" /> enumeration value.</span>
          </span>
        </exception>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMembers">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="845a7-130">Retorna uma coleção de objetos de entidade de segurança que está contida no grupo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="845a7-130">Returns a collection of the principal objects that is contained in the group.</span>
          </span>
        </summary>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMembers">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.AccountManagement.PrincipalSearchResult&lt;System.DirectoryServices.AccountManagement.Principal&gt; GetMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.AccountManagement.PrincipalSearchResult`1&lt;class System.DirectoryServices.AccountManagement.Principal&gt; GetMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.GroupPrincipal.GetMembers" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMembers () As PrincipalSearchResult(Of Principal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::AccountManagement::PrincipalSearchResult&lt;System::DirectoryServices::AccountManagement::Principal ^&gt; ^ GetMembers();" />
      <MemberSignature Language="F#" Value="member this.GetMembers : unit -&gt; System.DirectoryServices.AccountManagement.PrincipalSearchResult&lt;System.DirectoryServices.AccountManagement.Principal&gt;" Usage="groupPrincipal.GetMembers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.PrincipalSearchResult&lt;System.DirectoryServices.AccountManagement.Principal&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="845a7-131">Retorna uma coleção de objetos de entidade de segurança que está contida no grupo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="845a7-131">Returns a collection of the principal objects that is contained in the group.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="845a7-132">Um <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult`1" /> objeto que contém os objetos de entidade de segurança que são membros do grupo ou uma coleção vazia se o grupo não tem membros.</span>
          <span class="sxs-lookup">
            <span data-stu-id="845a7-132">A <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult`1" /> object that contains the principal objects that are members of the group, or an empty collection if the group has no members.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="845a7-133">Esse método não procura o grupo atual de forma recursiva.</span><span class="sxs-lookup"><span data-stu-id="845a7-133">This method does not search the current group recursively.</span></span> <span data-ttu-id="845a7-134">Portanto, os objetos de grupo podem ser retornados na coleção do objeto principal.</span><span class="sxs-lookup"><span data-stu-id="845a7-134">Therefore, group objects may be returned in the principal object collection.</span></span>  
  
 <span data-ttu-id="845a7-135">Os membros serão retornados independentemente do contexto.</span><span class="sxs-lookup"><span data-stu-id="845a7-135">Members are returned without respect to the context.</span></span> <span data-ttu-id="845a7-136">Por exemplo, se um contexto de AD DS baseado no "CN = SpecialUsers, DC = Fabrikam, DC = com", o conjunto de PrincipalFindResult incluirá os membros do grupo que estão localizados em "CN = NormalUsers, DC = Fabrikam, DC = com" Além disso, mesmo que eles se encaixam em um escopo que não é parte do contexto que é pesquisado.</span><span class="sxs-lookup"><span data-stu-id="845a7-136">For example, if an AD DS context based at "CN=SpecialUsers,DC=Fabrikam,DC=com", the PrincipalFindResult set will include group members that are located under "CN=NormalUsers,DC=Fabrikam,DC=com" also, even though they fall under a scope that is not part of the context that is searched.</span></span> <span data-ttu-id="845a7-137">Coleção retornada principal também pode conter membros que estão localizados em um repositório diferente que o grupo.</span><span class="sxs-lookup"><span data-stu-id="845a7-137">The returned principal collection may also contain members that are located in a different store than the group.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName="GetMembers">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.AccountManagement.PrincipalSearchResult&lt;System.DirectoryServices.AccountManagement.Principal&gt; GetMembers (bool recursive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.AccountManagement.PrincipalSearchResult`1&lt;class System.DirectoryServices.AccountManagement.Principal&gt; GetMembers(bool recursive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.GroupPrincipal.GetMembers(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMembers (recursive As Boolean) As PrincipalSearchResult(Of Principal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::AccountManagement::PrincipalSearchResult&lt;System::DirectoryServices::AccountManagement::Principal ^&gt; ^ GetMembers(bool recursive);" />
      <MemberSignature Language="F#" Value="member this.GetMembers : bool -&gt; System.DirectoryServices.AccountManagement.PrincipalSearchResult&lt;System.DirectoryServices.AccountManagement.Principal&gt;" Usage="groupPrincipal.GetMembers recursive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.PrincipalSearchResult&lt;System.DirectoryServices.AccountManagement.Principal&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recursive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="recursive">
          <span data-ttu-id="845a7-138">Um valor booliano que especifica se o grupo é pesquisado recursivamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="845a7-138">A Boolean value that specifies whether the group is searched recursively.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="845a7-139">Retorna uma coleção de objetos de entidade de segurança que está contida no grupo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="845a7-139">Returns a collection of the principal objects that is contained in the group.</span>
          </span>
          <span data-ttu-id="845a7-140">Quando esse sinalizador é definido como verdadeiro, este método pesquisa recursivamente o grupo atual e retorna todos os membros do grupo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="845a7-140">When the recursive flag is set to true, this method searches the current group recursively and returns all nested group members.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="845a7-141">Um <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult`1" /> objeto que contém os objetos de entidade de segurança que são membros do grupo ou uma coleção vazia se o grupo não tem membros.</span>
          <span class="sxs-lookup">
            <span data-stu-id="845a7-141">A <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult`1" /> object that contains the principal objects that are members of the group, or an empty collection if the group has no members.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="845a7-142">A coleção de entidade retornada não contém objetos de grupo quando esse sinalizador é definido como `true`; só são retornados nós folha.</span><span class="sxs-lookup"><span data-stu-id="845a7-142">The returned principal collection does not contain group objects when the recursive flag is set to `true`; only leaf nodes are returned.</span></span> <span data-ttu-id="845a7-143">Por exemplo, quando um grupo que contém um objeto de computador e um objeto de grupo (somente capitais de usuários) é pesquisada recursivamente, a coleção retornada contém o objeto de computador e os objetos principal do usuário no grupo aninhado.</span><span class="sxs-lookup"><span data-stu-id="845a7-143">For example, when a group that contains a computer object and a group object (with only user principals) is searched recursively, the returned collection contains the computer object and the user principal objects in the nested group.</span></span> <span data-ttu-id="845a7-144">Como o objeto de grupo não é uma folha, mesmo quando ele estiver vazio, ele não é retornado na pesquisa recursiva.</span><span class="sxs-lookup"><span data-stu-id="845a7-144">Since the group object is not a leaf, even when it is empty, it is not returned in the recursive search.</span></span>  <span data-ttu-id="845a7-145">Quando esse sinalizador é definido como `false`, a coleção retornada poderá conter objetos de grupo.</span><span class="sxs-lookup"><span data-stu-id="845a7-145">When the recursive flag is set to `false`, the returned collection may contain group objects.</span></span>  
  
 <span data-ttu-id="845a7-146">Os membros serão retornados independentemente do contexto.</span><span class="sxs-lookup"><span data-stu-id="845a7-146">Members are returned without respect to the context.</span></span> <span data-ttu-id="845a7-147">Por exemplo, se um contexto de AD DS baseado no "CN = SpecialUsers, DC = Fabrikam, DC = com", o conjunto de PrincipalFindResult incluirá os membros do grupo que estão localizados em "CN = NormalUsers, DC = Fabrikam, DC = com" Além disso, mesmo que eles se encaixam em um escopo que não é parte do contexto que é pesquisado.</span><span class="sxs-lookup"><span data-stu-id="845a7-147">For example, if an AD DS context based at "CN=SpecialUsers,DC=Fabrikam,DC=com", the PrincipalFindResult set will include group members that are located under "CN=NormalUsers,DC=Fabrikam,DC=com" also, even though they fall under a scope that is not part of the context that is searched.</span></span> <span data-ttu-id="845a7-148">Coleção retornada principal também pode conter membros que estão localizados em um repositório diferente que o grupo.</span><span class="sxs-lookup"><span data-stu-id="845a7-148">The returned principal collection may also contain members that are located in a different store than the group.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="845a7-149">O código a seguir se conecta ao domínio LDAP "fabrikam.com" com o nome de usuário definido como "administrador" e a senha definida como "SecretPwd123" no <xref:System.DirectoryServices.AccountManagement.PrincipalContext> construtor.</span><span class="sxs-lookup"><span data-stu-id="845a7-149">The following code connects to the LDAP domain "fabrikam.com" with the username set to "administrator" and the password set to "SecretPwd123" in the <xref:System.DirectoryServices.AccountManagement.PrincipalContext> constructor.</span></span>  
  
 <span data-ttu-id="845a7-150">Uma pesquisa é executada para localizar o grupo que tem o nome "Admins. do domínio" sob o contêiner especificado no <xref:System.DirectoryServices.AccountManagement.PrincipalContext> construtor "DC = fabrikam, DC = com."</span><span class="sxs-lookup"><span data-stu-id="845a7-150">A search is performed to find the group that has the name "Domain Admins" under the container specified in the <xref:System.DirectoryServices.AccountManagement.PrincipalContext> constructor "DC=fabrikam,DC=com."</span></span> <span data-ttu-id="845a7-151">Se o grupo for encontrado, todas as entidades que são membros desse grupo, o que inclui membros recursivos, em seguida, são enumeradas</span><span class="sxs-lookup"><span data-stu-id="845a7-151">If the group is found, all the principals that are members of this group, which includes recursive members, are then enumerated</span></span>  
  
```  
PrincipalContext ctx = new PrincipalContext(ContextType.Domain,                                                                      
                                            "fabrikam.com",   
                                            "DC=fabrikam,DC=com",   
                                            "administrator",   
                                            "SecretPwd123");  
  
GroupPrincipal grp = GroupPrincipal.FindByIdentity(ctx,   
                                                   IdentityType.Name,   
                                                   "Domain Admins");  
  
if (grp != null)  
{  
    foreach (Principal p in grp.GetMembers(true))  
    {  
         Console.WriteLine(p.Name);  
    }  
    grp.Dispose();  
}  
  
ctx.Dispose();   
```  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName="GroupScope">
      <MemberSignature Language="C#" Value="public Nullable&lt;System.DirectoryServices.AccountManagement.GroupScope&gt; GroupScope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.DirectoryServices.AccountManagement.GroupScope&gt; GroupScope" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.AccountManagement.GroupPrincipal.GroupScope" />
      <MemberSignature Language="VB.NET" Value="Public Property GroupScope As Nullable(Of GroupScope)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;System::DirectoryServices::AccountManagement::GroupScope&gt; GroupScope { Nullable&lt;System::DirectoryServices::AccountManagement::GroupScope&gt; get(); void set(Nullable&lt;System::DirectoryServices::AccountManagement::GroupScope&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.GroupScope : Nullable&lt;System.DirectoryServices.AccountManagement.GroupScope&gt; with get, set" Usage="System.DirectoryServices.AccountManagement.GroupPrincipal.GroupScope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DirectoryServices.AccountManagement.GroupScope&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="845a7-152">Obtém ou define uma enumeração <see cref="T:System.DirectoryServices.AccountManagement.GroupScope" /> que permite valor nulo que especifica o escopo para essa entidade de grupo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="845a7-152">Gets or sets a Nullable <see cref="T:System.DirectoryServices.AccountManagement.GroupScope" /> enumeration that specifies the scope for this group principal.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="845a7-153">Um valor de enumeração <see cref="T:System.DirectoryServices.AccountManagement.GroupScope" /> que permite valor nulo que especifica o escopo desse grupo ou nulo se nenhum escopo tiver sido definido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="845a7-153">A nullable <see cref="T:System.DirectoryServices.AccountManagement.GroupScope" /> enumeration value that specifies the scope of this group or null if no scope has been set.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="845a7-154">O aplicativo poderá não definir essa propriedade como nula.</span>
          <span class="sxs-lookup">
            <span data-stu-id="845a7-154">The application may not set this property to null.</span>
          </span>
        </exception>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName="IsSecurityGroup">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; IsSecurityGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsSecurityGroup" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.AccountManagement.GroupPrincipal.IsSecurityGroup" />
      <MemberSignature Language="VB.NET" Value="Public Property IsSecurityGroup As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;bool&gt; IsSecurityGroup { Nullable&lt;bool&gt; get(); void set(Nullable&lt;bool&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.IsSecurityGroup : Nullable&lt;bool&gt; with get, set" Usage="System.DirectoryServices.AccountManagement.GroupPrincipal.IsSecurityGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="845a7-155">Obtém ou define um valor booliano anulável que indica se o grupo está habilitado para segurança.</span>
          <span class="sxs-lookup">
            <span data-stu-id="845a7-155">Gets or sets a Nullable Boolean value that indicates whether the group is security-enabled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="845a7-156">
            <see langword="true" /> Se o grupo é habilitado para segurança, ou nulo se o grupo não é persistente; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="845a7-156">
              <see langword="true" /> if the group is security enabled, or null if the group has not been persisted; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="845a7-157">Quando essa propriedade retorna false, o grupo é temporariamente não segurança habilitada.</span><span class="sxs-lookup"><span data-stu-id="845a7-157">When this property returns false, the group is temporarily not security-enabled.</span></span> <span data-ttu-id="845a7-158">Quando o <xref:System.DirectoryServices.AccountManagement.GroupPrincipal.IsSecurityGroup> propriedade é redefinida para true mais tarde, o grupo terá as mesmas propriedades como antes, foi definido para false.</span><span class="sxs-lookup"><span data-stu-id="845a7-158">When the <xref:System.DirectoryServices.AccountManagement.GroupPrincipal.IsSecurityGroup> property is reset to true later, the group will have the same properties as before it was set to false.</span></span>  
  
 <span data-ttu-id="845a7-159">Se a entidade não é persistente no repositório, esta propriedade retornará nula.</span><span class="sxs-lookup"><span data-stu-id="845a7-159">If the principal has not been persisted in the store, this property returns null.</span></span> <span data-ttu-id="845a7-160">Depois que a entidade é persistente, a configuração padrão de segurança habilitada depende do armazenamento.</span><span class="sxs-lookup"><span data-stu-id="845a7-160">After the principal is persisted, the default security-enabled setting depends on the store.</span></span> <span data-ttu-id="845a7-161">Os repositórios do AD DS e AD LDS desabilitar novas entidades quando eles são mantidos, enquanto SAM permite novas entidades quando eles são persistentes.</span><span class="sxs-lookup"><span data-stu-id="845a7-161">The AD DS and AD LDS stores disable new principals when they are persisted, whereas SAM enables new principals when they are persisted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="845a7-162">O aplicativo poderá não definir essa propriedade como nula.</span>
          <span class="sxs-lookup">
            <span data-stu-id="845a7-162">The application may not set this property to null.</span>
          </span>
        </exception>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName="Members">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.AccountManagement.PrincipalCollection Members { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.AccountManagement.PrincipalCollection Members" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.AccountManagement.GroupPrincipal.Members" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Members As PrincipalCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::AccountManagement::PrincipalCollection ^ Members { System::DirectoryServices::AccountManagement::PrincipalCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Members : System.DirectoryServices.AccountManagement.PrincipalCollection" Usage="System.DirectoryServices.AccountManagement.GroupPrincipal.Members" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.PrincipalCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="845a7-163">Obtém uma coleção de objetos de entidade de segurança que representam os membros do grupo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="845a7-163">Gets a collection of principal objects that represent the members of the group.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="845a7-164">Um objeto <see cref="T:System.DirectoryServices.AccountManagement.PrincipalCollection" /> que contém os objetos de entidade de segurança que representam os membros do grupo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="845a7-164">A <see cref="T:System.DirectoryServices.AccountManagement.PrincipalCollection" /> object that contains the principal objects that represent the members of the group.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="845a7-165">Para grupos do AD DS, o <xref:System.DirectoryServices.AccountManagement.GroupPrincipal.Members%2A> propriedade inclui entidades de usuário que são membros do grupo devido a seu primaryId atributo.</span><span class="sxs-lookup"><span data-stu-id="845a7-165">For AD DS groups, the <xref:System.DirectoryServices.AccountManagement.GroupPrincipal.Members%2A> property includes user principals that are members of the group because of their primaryId Attribute.</span></span> <span data-ttu-id="845a7-166">Quando o grupo contém estes tipos de membros, as seguintes restrições se aplicam:</span><span class="sxs-lookup"><span data-stu-id="845a7-166">When the group contains these types of members, the following restrictions apply:</span></span>  
  
-   <span data-ttu-id="845a7-167">O <xref:System.DirectoryServices.AccountManagement.PrincipalCollection.Remove*> método não pode ser usado para remover os membros que fazem parte do grupo devido a seu primaryId atributo.</span><span class="sxs-lookup"><span data-stu-id="845a7-167">The <xref:System.DirectoryServices.AccountManagement.PrincipalCollection.Remove*> method cannot be used to remove members that are part of the group because of their primaryId Attribute.</span></span>  
  
-   <span data-ttu-id="845a7-168">O <xref:System.DirectoryServices.AccountManagement.PrincipalCollection.Clear*> método não pode ser usado para limpar membros que fazem parte do grupo devido a seu primaryId atributo.</span><span class="sxs-lookup"><span data-stu-id="845a7-168">The <xref:System.DirectoryServices.AccountManagement.PrincipalCollection.Clear*> method cannot be used to clear members that are part of the group because of their primaryId Attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="845a7-169">O código a seguir se conecta ao domínio LDAP "fabrikam.com" com o nome de usuário definido como "administrador" e a senha definida como "SecretPwd123" no <xref:System.DirectoryServices.AccountManagement.PrincipalContext> construtor.</span><span class="sxs-lookup"><span data-stu-id="845a7-169">The following code connects to the LDAP domain "fabrikam.com" with the username set to "administrator" and the password set to "SecretPwd123" in the <xref:System.DirectoryServices.AccountManagement.PrincipalContext> constructor.</span></span>  
  
 <span data-ttu-id="845a7-170">Uma pesquisa é executada para localizar o grupo que tem o nome "Admins. do domínio" sob o contêiner especificado no <xref:System.DirectoryServices.AccountManagement.PrincipalContext> construtor, "DC = fabrikam, DC = com."</span><span class="sxs-lookup"><span data-stu-id="845a7-170">A search is performed to find the group that has name "Domain Admins" under the container specified in the <xref:System.DirectoryServices.AccountManagement.PrincipalContext> constructor, "DC=fabrikam,DC=com."</span></span> <span data-ttu-id="845a7-171">Se o grupo for encontrado, o usuário que tem o nome "John Smith" é removido do grupo e o usuário que tem o nome "Jim Daly" é adicionado ao grupo</span><span class="sxs-lookup"><span data-stu-id="845a7-171">If the group is found, the user who has name "John Smith" is removed from the group and the user who has name "Jim Daly" is added to the group</span></span>  
  
```  
PrincipalContext ctx = new PrincipalContext(ContextType.Domain,                                                                       
                                            "fabrikam.com",                                                                               
                                            "DC=fabrikam,DC=com",                                                                 
                                            "administrator",   
                                            "SecretPwd123");  
  
GroupPrincipal grp = GroupPrincipal.FindByIdentity(ctx,   
                                                   IdentityType.Name,   
                                                   "Domain Admins");  
  
if (grp != null)  
{  
    grp.Members.Remove(ctx, IdentityType.Name, "John Smith");            
    grp.Members.Add(ctx, IdentityType.Name, "Jim Daly");  
    grp.Save();  
    grp.Dispose();  
}  
ctx.Dispose();  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
  </Members>
</Type>