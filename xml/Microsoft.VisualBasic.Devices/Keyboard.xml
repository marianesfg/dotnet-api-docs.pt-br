<Type Name="Keyboard" FullName="Microsoft.VisualBasic.Devices.Keyboard">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8809b0a6d6a42f45367abb94fb268832cdc9bd82" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51889846" /></Metadata><TypeSignature Language="C#" Value="public class Keyboard" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Keyboard extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Devices.Keyboard" />
  <TypeSignature Language="VB.NET" Value="Public Class Keyboard" />
  <TypeSignature Language="C++ CLI" Value="public ref class Keyboard" />
  <TypeSignature Language="F#" Value="type Keyboard = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornece propriedades para acessar o estado atual do teclado, como quais teclas estão pressionadas no momento e fornece um método para enviar pressionamentos de teclas para a janela ativa.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O `My.Computer.Keyboard` objeto fornece uma interface para o teclado do computador. As propriedades do `My.Computer.Keyboard` fornecem informações sobre o estado de várias teclas especiais. O `My.Computer.Keyboard.SendKeys` método permite que você envie as chaves para a janela ativa, como se eles tivessem sido digitados no teclado.  
  
## <a name="tasks"></a>Tarefas  
 A tabela a seguir lista um exemplo de uma tarefa que envolvem o `My.Computer.Keyboard` objeto.  
  
|Para|Consulte|  
|-|-|  
|Enviar pressionamentos de teclas para um aplicativo|[Como Iniciar um Aplicativo e Enviar Pressionamentos de tecla (Visual Basic)](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-start-an-application-and-send-it-keystrokes.md)|  
  
## <a name="availability-by-project-type"></a>Disponibilidade por tipo de projeto  
  
|Tipo de projeto|Disponível|  
|-|-|  
|Aplicativo do Windows|**Sim**|  
|Biblioteca de Classes|**Sim**|  
|Aplicativo do Console|**Sim**|  
|Biblioteca de controle do Windows|**Sim**|  
|Biblioteca de controle da Web|Não|  
|Serviço do Windows|**Sim**|  
|Site da Web|Não|  
  
   
  
## Examples  
 Este exemplo usa o `My.Computer.Keyboard.CtrlKeyDown` propriedade para determinar se a chave do computador CTRL está pressionada.  
  
 [!code-vb[VbVbalrMyComputer#36](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#36)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
    <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
    <related type="Article" href="https://msdn.microsoft.com/library/aa37d54c-5c98-4b44-b98a-c26d2a03c038">Acessando o teclado</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Keyboard ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Keyboard.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Keyboard();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:Microsoft.VisualBasic.Devices.Keyboard" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/aa37d54c-5c98-4b44-b98a-c26d2a03c038">Acessando o teclado</related>
      </Docs>
    </Member>
    <Member MemberName="AltKeyDown">
      <MemberSignature Language="C#" Value="public bool AltKeyDown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AltKeyDown" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Keyboard.AltKeyDown" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AltKeyDown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AltKeyDown { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AltKeyDown : bool" Usage="Microsoft.VisualBasic.Devices.Keyboard.AltKeyDown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um <see langword="Boolean" /> que indica se a tecla ALT está pressionada.</summary>
        <value>Um <see langword="Boolean" /> valor: <see langword="True" /> se a tecla ALT estiver pressionada; caso contrário <see langword="False" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O `My.Computer.Keyboard.AltKeyDown` propriedade fornece uma funcionalidade semelhante para o <xref:System.Windows.Forms.Control.ModifierKeys%2A> propriedade.  
  
## <a name="availability-by-project-type"></a>Disponibilidade por tipo de projeto  
  
|Tipo de projeto|Disponível|  
|-|-|  
|Aplicativo do Windows|**Sim**|  
|Biblioteca de Classes|**Sim**|  
|Aplicativo do Console|**Sim**|  
|Biblioteca de controle do Windows|**Sim**|  
|Biblioteca de controle da Web|Não|  
|Serviço do Windows|**Sim**|  
|Site da Web|Não|  
  
   
  
## Examples  
 Este exemplo usa o `My.Computer.Keyboard.AltKeyDown` propriedade para determinar se a chave do computador ALT está pressionada.  
  
 [!code-vb[VbVbalrMyComputer#23](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#23)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="P:System.Windows.Forms.Control.ModifierKeys" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/aa37d54c-5c98-4b44-b98a-c26d2a03c038">Acessando o teclado</related>
      </Docs>
    </Member>
    <Member MemberName="CapsLock">
      <MemberSignature Language="C#" Value="public bool CapsLock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CapsLock" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Keyboard.CapsLock" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CapsLock As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CapsLock { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CapsLock : bool" Usage="Microsoft.VisualBasic.Devices.Keyboard.CapsLock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um <see langword="Boolean" /> indicando se CAPS LOCK está ativado.</summary>
        <value>Um valor <see langword="Boolean" />: <see langword="True" /> se CAPS LOCK estiver ativado; caso contrário, <see langword="False" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Apenas o estado da tecla CAPS LOCK é retornado.  
  
## <a name="availability-by-project-type"></a>Disponibilidade por tipo de projeto  
  
|Tipo de projeto|Disponível|  
|-|-|  
|Aplicativo do Windows|**Sim**|  
|Biblioteca de Classes|**Sim**|  
|Aplicativo do Console|**Sim**|  
|Biblioteca de controle do Windows|**Sim**|  
|Biblioteca de controle da Web|Não|  
|Serviço do Windows|**Sim**|  
|Site da Web|Não|  
  
   
  
## Examples  
 Este exemplo usa o `My.Computer.Keyboard.CapsLock` propriedade para determinar se tecla CAPS LOCK do computador está ativado.  
  
 [!code-vb[VbVbalrMyComputer#50](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#50)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/aa37d54c-5c98-4b44-b98a-c26d2a03c038">Acessando o teclado</related>
      </Docs>
    </Member>
    <Member MemberName="CtrlKeyDown">
      <MemberSignature Language="C#" Value="public bool CtrlKeyDown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CtrlKeyDown" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Keyboard.CtrlKeyDown" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CtrlKeyDown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CtrlKeyDown { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CtrlKeyDown : bool" Usage="Microsoft.VisualBasic.Devices.Keyboard.CtrlKeyDown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um <see langword="Boolean" /> que indica se uma tecla CTRL está pressionada.</summary>
        <value>Um valor <see langword="Boolean" />. <see langword="True" /> se uma tecla CTRL estiver pressionada; caso contrário, <see langword="False" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O `My.Computer.Keyboard.CtrlKeyDown` propriedade fornece uma funcionalidade semelhante para o <xref:System.Windows.Forms.Control.ModifierKeys%2A> propriedade.  
  
## <a name="availability-by-project-type"></a>Disponibilidade por tipo de projeto  
  
|Tipo de projeto|Disponível|  
|-|-|  
|Aplicativo do Windows|**Sim**|  
|Biblioteca de Classes|**Sim**|  
|Aplicativo do Console|**Sim**|  
|Biblioteca de controle do Windows|**Sim**|  
|Biblioteca de controle da Web|Não|  
|Serviço do Windows|**Sim**|  
|Site da Web|Não|  
  
   
  
## Examples  
 Este exemplo usa o `My.Computer.Keyboard.CtrlKeyDown` propriedade para determinar se a chave do computador CTRL está pressionada.  
  
 [!code-vb[VbVbalrMyComputer#34](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#34)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="P:System.Windows.Forms.Control.ModifierKeys" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/aa37d54c-5c98-4b44-b98a-c26d2a03c038">Acessando o teclado</related>
      </Docs>
    </Member>
    <Member MemberName="NumLock">
      <MemberSignature Language="C#" Value="public bool NumLock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NumLock" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Keyboard.NumLock" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NumLock As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NumLock { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.NumLock : bool" Usage="Microsoft.VisualBasic.Devices.Keyboard.NumLock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um <see langword="Boolean" /> indicando se a tecla NUM LOCK está ativada.</summary>
        <value>Um valor <see langword="Boolean" />. <see langword="True" /> se NUM LOCK estiver ativada; caso contrário, <see langword="False" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Somente o estado da tecla NUM LOCK é retornado.  
  
## <a name="availability-by-project-type"></a>Disponibilidade por tipo de projeto  
  
|Tipo de projeto|Disponível|  
|-|-|  
|Aplicativo do Windows|**Sim**|  
|Biblioteca de Classes|**Sim**|  
|Aplicativo do Console|**Sim**|  
|Biblioteca de controle do Windows|**Sim**|  
|Biblioteca de controle da Web|Não|  
|Serviço do Windows|**Sim**|  
|Site da Web|Não|  
  
   
  
## Examples  
 Este exemplo usa o `My.Computer.Keyboard.NumLock` propriedade para determinar se a chave do computador NUM LOCK está ativado.  
  
 [!code-vb[VbVbalrMyComputer#48](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#48)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/aa37d54c-5c98-4b44-b98a-c26d2a03c038">Acessando o teclado</related>
      </Docs>
    </Member>
    <Member MemberName="ScrollLock">
      <MemberSignature Language="C#" Value="public bool ScrollLock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ScrollLock" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Keyboard.ScrollLock" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ScrollLock As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ScrollLock { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ScrollLock : bool" Usage="Microsoft.VisualBasic.Devices.Keyboard.ScrollLock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um <see langword="Boolean" /> que indica se a tecla SCROLL LOCK está ativada.</summary>
        <value>Um valor <see langword="Boolean" />. <see langword="True" /> se SCROLL LOCK estiver ativada; caso contrário, <see langword="False" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Somente o estado da tecla SCROLL LOCK é retornado.  
  
## <a name="availability-by-project-type"></a>Disponibilidade por tipo de projeto  
  
|Tipo de projeto|Disponível|  
|-|-|  
|Aplicativo do Windows|**Sim**|  
|Biblioteca de Classes|**Sim**|  
|Aplicativo do Console|**Sim**|  
|Biblioteca de controle do Windows|**Sim**|  
|Biblioteca de controle da Web|Não|  
|Serviço do Windows|**Sim**|  
|Site da Web|Não|  
  
   
  
## Examples  
 Este exemplo usa o `My.Computer.Keyboard.ScrollLock` propriedade para determinar se a chave do computador SCROLL LOCK está ativado.  
  
 [!code-vb[VbVbalrMyComputer#31](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#31)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/aa37d54c-5c98-4b44-b98a-c26d2a03c038">Acessando o teclado</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="SendKeys">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Envia um ou mais pressionamentos de teclas para a janela ativa, como se eles tivessem sido digitados no teclado.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendKeys">
      <MemberSignature Language="C#" Value="public void SendKeys (string keys);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void SendKeys(string keys) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Keyboard.SendKeys(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendKeys (keys As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendKeys(System::String ^ keys);" />
      <MemberSignature Language="F#" Value="member this.SendKeys : string -&gt; unit" Usage="keyboard.SendKeys keys" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keys">Um <see langword="String" /> que define as teclas a serem enviadas.</param>
        <summary>Envia um ou mais pressionamentos de teclas para a janela ativa, como se eles tivessem sido digitados no teclado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O `My.Computer.Keyboard.SendKeys` método fornece uma funcionalidade semelhante para o <xref:System.Windows.Forms.SendKeys.Send%2A> e <xref:System.Windows.Forms.SendKeys.SendWait%2A> métodos.  
  
 O `wait` argumento é útil se o outro aplicativo deve terminar antes que seu aplicativo possa continuar.  
  
> [!NOTE]
>  Porque não há nenhum método gerenciado para ativar outro aplicativo, você pode usar essa classe dentro do aplicativo atual, manualmente selecione a janela para enviar as teclas ou usar métodos da API do Windows, como `FindWindow` e `SetForegroundWindow`, para forçar foco em outros aplicativos. Para obter mais informações, consulte [instruções passo a passo: chamando APIs do Windows](~/docs/visual-basic/programming-guide/com-interop/walkthrough-calling-windows-apis.md).  
  
 O `keys` argumento pode especificar qualquer tecla única ou qualquer tecla combinada com ALT, CTRL ou SHIFT (ou qualquer combinação dessas teclas). Cada chave é representado por um ou mais caracteres, como `a` para o caractere "a", ou `{ENTER}` para a tecla ENTER.  
  
 Para combinar uma chave com a tecla SHIFT, preceda o código de chave com `+` (sinal de adição). Para combinar uma chave com CTRL, preceda o código de chave com `^` (cursor). Para combinar uma chave com a tecla ALT, preceda o código de chave com `%` (sinal de porcentagem). Para especificar as teclas de repetição, use o formulário `{` *número da chave*`}`. Você deve colocar um espaço entre *chave* e *número*. Por exemplo, `{LEFT 42}` significa "pressione a tecla de seta para a esquerda 42 vezes"; `{h 10}` significa "Pressione 'h' 10 vezes."  
  
 A tabela a seguir lista os códigos que podem ser usados para especificar caracteres que não são exibidos quando você pressiona a tecla correspondente (por exemplo, ENTER ou TAB).  
  
|Chave|Código|  
|-|-|  
|BACKSPACE|{BACKSPACE} ou {BS}|  
|QUEBRA|{BREAK}|  
|CAPS LOCK|{CAPSLOCK}|  
|LIMPAR|{CLEAR}|  
|DELETE|{EXCLUIR} ou {DEL}|  
|SETA PARA BAIXO|{DOWN}|  
|END|{END}|  
|ENTER (no teclado numérico)|{INSERIR}|  
|ENTER|~|  
|ESC|{ESCAPE} ou {ESC}|  
|HELP|{HELP}|  
|HOME|{HOME}|  
|INS|{INSERT}|  
|SETA PARA A ESQUERDA|{LEFT}|  
|NUM LOCK|{NUMLOCK}|  
|PAGE DOWN|{PGDN}|  
|PAGE UP|{PGUP}|  
|RETORNAR|{RETORNAR}|  
|SETA PARA A DIREITA|{RIGHT}|  
|BLOQUEIO DE ROLAGEM|{SCROLLLOCK}|  
|TAB|{TAB}|  
|SETA PARA CIMA|{UP}|  
|F1 a F15|{F1} por meio do {F15}|  
  
## <a name="availability-by-project-type"></a>Disponibilidade por tipo de projeto  
  
|Tipo de projeto|Disponível|  
|-|-|  
|Aplicativo do Windows|**Sim**|  
|Biblioteca de Classes|**Sim**|  
|Aplicativo do Console|**Sim**|  
|Biblioteca de controle do Windows|**Sim**|  
|Biblioteca de controle da Web|Não|  
|Serviço do Windows|**Sim**|  
|Site da Web|Não|  
  
   
  
## Examples  
 Este exemplo usa o `My.Computer.Keyboard.SendKeys` método para enviar pressionamentos de teclas para um aplicativo externo, o aplicativo Calculadora, iniciado pela `Shell` função.  
  
 [!code-vb[VbVbalrMyComputer#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#25)]  
  
 Uma exceção <xref:System.ArgumentException> será gerada se um aplicativo com o identificador do processo solicitado não for localizado.  
  
 A chamada para a função `Shell` exige confiança total (classe <xref:System.Security.SecurityException>).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Existe uma situação de confiança parcial na qual o usuário não tem as permissões necessárias.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controla a capacidade de acessar arquivos e pastas. Enumeração associada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Controla as permissões relacionadas às interfaces de usuário e a área de transferência. Enumeração associada: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="M:System.Windows.Forms.SendKeys.Send(System.String)" />
        <altmember cref="M:System.Windows.Forms.SendKeys.SendWait(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/aa37d54c-5c98-4b44-b98a-c26d2a03c038">Acessando o teclado</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9280ca96-7a93-47a3-8d01-6d01be0657cb">Instruções passo a passo: chamando APIs do Windows</related>
      </Docs>
    </Member>
    <Member MemberName="SendKeys">
      <MemberSignature Language="C#" Value="public void SendKeys (string keys, bool wait);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void SendKeys(string keys, bool wait) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Keyboard.SendKeys(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendKeys (keys As String, wait As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendKeys(System::String ^ keys, bool wait);" />
      <MemberSignature Language="F#" Value="member this.SendKeys : string * bool -&gt; unit" Usage="keyboard.SendKeys (keys, wait)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.String" />
        <Parameter Name="wait" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="keys">Um <see langword="String" /> que define as teclas a serem enviadas.</param>
        <param name="wait">Opcional. Um <see langword="Boolean" /> que especifica se deverá ou não aguardar o processamento dos pressionamentos de tecla antes que o aplicativo continue. <see langword="True" /> por padrão.</param>
        <summary>Envia um ou mais pressionamentos de teclas para a janela ativa, como se eles tivessem sido digitados no teclado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O `My.Computer.Keyboard.SendKeys` método fornece uma funcionalidade semelhante para o <xref:System.Windows.Forms.SendKeys.Send%2A> e <xref:System.Windows.Forms.SendKeys.SendWait%2A> métodos.  
  
 O `wait` argumento é útil se o outro aplicativo deve terminar antes que seu aplicativo possa continuar.  
  
> [!NOTE]
>  Porque não há nenhum método gerenciado para ativar outro aplicativo, você pode usar essa classe dentro do aplicativo atual, manualmente selecione a janela para enviar as teclas ou usar métodos da API do Windows, como `FindWindow` e `SetForegroundWindow`, para forçar foco em outros aplicativos. Para obter mais informações, consulte [instruções passo a passo: chamando APIs do Windows](~/docs/visual-basic/programming-guide/com-interop/walkthrough-calling-windows-apis.md).  
  
 O `keys` argumento pode especificar qualquer tecla única ou qualquer tecla combinada com ALT, CTRL ou SHIFT (ou qualquer combinação dessas teclas). Cada chave é representado por um ou mais caracteres, como `a` para o caractere "a", ou `{ENTER}` para a tecla ENTER.  
  
 Para combinar uma chave com a tecla SHIFT, preceda o código de chave com `+` (sinal de adição). Para combinar uma chave com CTRL, preceda o código de chave com `^` (cursor). Para combinar uma chave com a tecla ALT, preceda o código de chave com `%` (sinal de porcentagem). Para especificar as teclas de repetição, use o formulário `{` *número da chave*`}`. Você deve colocar um espaço entre *chave* e *número*. Por exemplo, `{LEFT 42}` significa "pressione a tecla de seta para a esquerda 42 vezes"; `{h 10}` significa "Pressione 'h' 10 vezes."  
  
 A tabela a seguir lista os códigos que podem ser usados para especificar caracteres que não são exibidos quando você pressiona a tecla correspondente (por exemplo, ENTER ou TAB).  
  
|Chave|Código|  
|-|-|  
|BACKSPACE|{BACKSPACE} ou {BS}|  
|QUEBRA|{BREAK}|  
|CAPS LOCK|{CAPSLOCK}|  
|LIMPAR|{CLEAR}|  
|DELETE|{EXCLUIR} ou {DEL}|  
|SETA PARA BAIXO|{DOWN}|  
|END|{END}|  
|ENTER (no teclado numérico)|{INSERIR}|  
|ENTER|~|  
|ESC|{ESCAPE} ou {ESC}|  
|HELP|{HELP}|  
|HOME|{HOME}|  
|INS|{INSERT}|  
|SETA PARA A ESQUERDA|{LEFT}|  
|NUM LOCK|{NUMLOCK}|  
|PAGE DOWN|{PGDN}|  
|PAGE UP|{PGUP}|  
|RETORNAR|{RETORNAR}|  
|SETA PARA A DIREITA|{RIGHT}|  
|BLOQUEIO DE ROLAGEM|{SCROLLLOCK}|  
|TAB|{TAB}|  
|SETA PARA CIMA|{UP}|  
|F1 a F15|{F1} por meio do {F15}|  
  
## <a name="availability-by-project-type"></a>Disponibilidade por tipo de projeto  
  
|Tipo de projeto|Disponível|  
|-|-|  
|Aplicativo do Windows|**Sim**|  
|Biblioteca de Classes|**Sim**|  
|Aplicativo do Console|**Sim**|  
|Biblioteca de controle do Windows|**Sim**|  
|Biblioteca de controle da Web|Não|  
|Serviço do Windows|**Sim**|  
|Site da Web|Não|  
  
   
  
## Examples  
 Este exemplo usa o `My.Computer.Keyboard.SendKeys` método para enviar pressionamentos de teclas para um aplicativo externo, o aplicativo Calculadora, iniciado pela `Shell` função.  
  
 [!code-vb[VbVbalrMyComputer#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#25)]  
  
 Uma exceção <xref:System.ArgumentException> será gerada se um aplicativo com o identificador do processo solicitado não for localizado.  
  
 A chamada para a função `Shell` exige confiança total (classe <xref:System.Security.SecurityException>).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Existe uma situação de confiança parcial na qual o usuário não tem as permissões necessárias.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controla a capacidade de acessar arquivos e pastas. Enumeração associada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Controla as permissões relacionadas às interfaces de usuário e a área de transferência. Enumeração associada: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="M:System.Windows.Forms.SendKeys.Send(System.String)" />
        <altmember cref="M:System.Windows.Forms.SendKeys.SendWait(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/aa37d54c-5c98-4b44-b98a-c26d2a03c038">Acessando o teclado</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9280ca96-7a93-47a3-8d01-6d01be0657cb">Instruções passo a passo: chamando APIs do Windows</related>
      </Docs>
    </Member>
    <Member MemberName="ShiftKeyDown">
      <MemberSignature Language="C#" Value="public bool ShiftKeyDown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShiftKeyDown" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Keyboard.ShiftKeyDown" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ShiftKeyDown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShiftKeyDown { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ShiftKeyDown : bool" Usage="Microsoft.VisualBasic.Devices.Keyboard.ShiftKeyDown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um <see langword="Boolean" /> que indica se uma tecla SHIFT está pressionada.</summary>
        <value>Um valor <see langword="Boolean" />. <see langword="True" /> se uma tecla SHIFT estiver pressionada; caso contrário, <see langword="False" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O `My.Computer.Keyboard.ShiftKeyDown` propriedade fornece uma funcionalidade semelhante para o <xref:System.Windows.Forms.Control.ModifierKeys%2A> propriedade.  
  
## <a name="availability-by-project-type"></a>Disponibilidade por tipo de projeto  
  
|Tipo de projeto|Disponível|  
|-|-|  
|Aplicativo do Windows|**Sim**|  
|Biblioteca de Classes|**Sim**|  
|Aplicativo do Console|**Sim**|  
|Biblioteca de controle do Windows|**Sim**|  
|Biblioteca de controle da Web|Não|  
|Serviço do Windows|**Sim**|  
|Site da Web|Não|  
  
   
  
## Examples  
 Este exemplo usa o `My.Computer.Keyboard.ShiftKeyDown` propriedade para determinar se uma das teclas SHIFT do computador está pressionada.  
  
 [!code-vb[VbVbalrMyComputer#47](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#47)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="P:System.Windows.Forms.Control.ModifierKeys" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/aa37d54c-5c98-4b44-b98a-c26d2a03c038">Acessando o teclado</related>
      </Docs>
    </Member>
  </Members>
</Type>