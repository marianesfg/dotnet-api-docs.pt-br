<Type Name="Network" FullName="Microsoft.VisualBasic.Devices.Network">
  <Metadata><Meta Name="ms.openlocfilehash" Value="04a6a2db7a56e73d311562333fd0c10c253cd321" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52244740" /></Metadata><TypeSignature Language="C#" Value="public class Network" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Network extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Devices.Network" />
  <TypeSignature Language="VB.NET" Value="Public Class Network" />
  <TypeSignature Language="C++ CLI" Value="public ref class Network" />
  <TypeSignature Language="F#" Value="type Network = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornece uma propriedade, um evento e métodos para interagir com a rede à qual o computador está conectado.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A tabela a seguir lista exemplos de tarefas que envolvem o `My.Computer.Network` objeto.  
  
|Para|Consulte|  
|-|-|  
|Carregar um arquivo|[Como Carregar um Arquivo](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
|Baixar um arquivo|[Como Baixar um Arquivo](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
|Verificar o status de conexão|[Como Verificar o Status da Conexão](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-check-connection-status.md)|  
  
   
  
## Examples  
 Este exemplo carrega o arquivo `Order.txt` para http://www.cohowinery.com/uploads.  
  
 [!code-vb[VbVbalrMyNetwork#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#6)]  
  
 ]]></format>
    </remarks>
    <altmember cref="E:Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged" />
    <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Network ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Network();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:Microsoft.VisualBasic.Devices.Network" />.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadFile">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Baixa o arquivo remoto especificado e o salva no local especificado.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (string address, string destinationFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(string address, string destinationFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As String, destinationFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(System::String ^ address, System::String ^ destinationFileName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : string * string -&gt; unit" Usage="network.DownloadFile (address, destinationFileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Caminho do arquivo a ser baixado, incluindo o nome do arquivo e endereço do host.</param>
        <param name="destinationFileName">Nome do arquivo e caminho do arquivo baixado.</param>
        <summary>Baixa o arquivo remoto especificado e o salva no local especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o arquivo de destino já existir, o `DownloadFile` método não substituirá o arquivo existente. Você pode usar uma das outras sobrecargas do <xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A> método para instruí-lo para substituir arquivos existentes, forneça as credenciais do usuário, ou especifique um valor de tempo limite específico.  
  
 `DownloadFile` saídas de informações de rastreamento ao habilitar o rastreamento de rede em seu aplicativo. Para obter mais informações, consulte [habilitando o rastreamento de rede](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  O `DownloadFile` método não deve enviar cabeçalhos HTTP opcionais. Alguns servidores podem retornar 500 (erro interno do servidor), se o cabeçalho de agente de usuário opcionais está ausente. Para enviar cabeçalhos opcionais, você precisa construir uma solicitação usando o <xref:System.Net.WebClient> classe.  
  
 A tabela a seguir lista um exemplo de uma tarefa que envolvem o `My.Computer.Network.DownloadFile` método.  
  
|Para|Consulte|  
|-|-|  
|Baixar um arquivo|[Como Baixar um Arquivo](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 Este exemplo baixa o arquivo `WineList.txt` partir `http://www.cohowinery.com/downloads` e salva-o em `C:\Documents and Settings\All Users\Documents`.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 Este exemplo baixa o arquivo `WineList.txt` partir `http://www.cohowinery.com/downloads` e salva-o em `C:\Documents and Settings\All Users\Documents`, especificando um intervalo de tempo limite de 500 milissegundos.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> termina com uma barra à direita.</exception>
        <exception cref="T:System.TimeoutException">O servidor não responde durante o intervalo padrão (100 segundos).</exception>
        <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para executar uma operação de rede.</exception>
        <exception cref="T:System.Net.WebException">A solicitação foi negada pelo servidor Web de destino.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controla a capacidade de acessar arquivos e pastas. Enumeração associada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controla os direitos de acesso a recursos de Internet HTTP. Enumeração associada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Como baixar um arquivo no Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Como analisar demarcadores de arquivo no Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string -&gt; unit" Usage="network.DownloadFile (address, destinationFileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Caminho do arquivo a ser baixado, incluindo o nome do arquivo e endereço do host.</param>
        <param name="destinationFileName">Nome do arquivo e caminho do arquivo baixado.</param>
        <summary>Baixa o arquivo remoto especificado e o salva no local especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o arquivo de destino já existir, o `DownloadFile` método não substituirá o arquivo existente. Você pode usar uma das outras sobrecargas do <xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A> método para instruí-lo para substituir arquivos existentes, forneça as credenciais do usuário, ou especifique um valor de tempo limite específico. `DownloadFile` saídas de informações de rastreamento ao habilitar o rastreamento de rede em seu aplicativo. Para obter mais informações, consulte [habilitando o rastreamento de rede](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  O `DownloadFile` método não deve enviar cabeçalhos HTTP opcionais. Alguns servidores podem retornar 500 (erro interno do servidor), se o cabeçalho de agente de usuário opcionais está ausente. Para enviar cabeçalhos opcionais, você precisa construir uma solicitação usando o <xref:System.Net.WebClient> classe.  
  
 A tabela a seguir lista um exemplo de uma tarefa que envolvem o `My.Computer.Network.DownloadFile` método.  
  
|Para|Consulte|  
|-|-|  
|Baixar um arquivo|[Como Baixar um Arquivo](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 Este exemplo baixa o arquivo `WineList.txt` partir `http://www.cohowinery.com/downloads` e salva-o em `C:\Documents and Settings\All Users\Documents`.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 Este exemplo baixa o arquivo `WineList.txt` partir `http://www.cohowinery.com/downloads` e salva-o em `C:\Documents and Settings\All Users\Documents`, especificando um intervalo de tempo limite de 500 milissegundos.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> termina com uma barra à direita.</exception>
        <exception cref="T:System.TimeoutException">O servidor não responde durante o intervalo padrão (100 segundos).</exception>
        <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para executar uma operação de rede.</exception>
        <exception cref="T:System.Net.WebException">A solicitação foi negada pelo servidor Web de destino.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controla a capacidade de acessar arquivos e pastas. Enumeração associada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controla os direitos de acesso a recursos de Internet HTTP. Enumeração associada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Como baixar um arquivo no Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Como analisar demarcadores de arquivo no Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (string address, string destinationFileName, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(string address, string destinationFileName, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As String, destinationFileName As String, userName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(System::String ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : string * string * string * string -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Caminho do arquivo a ser baixado, incluindo o nome do arquivo e endereço do host.</param>
        <param name="destinationFileName">Nome do arquivo e caminho do arquivo baixado.</param>
        <param name="userName">Nome de usuário a ser autenticado. O padrão é uma cadeia de caracteres vazia, "".</param>
        <param name="password">Senha para autenticação. O padrão é uma cadeia de caracteres vazia, "".</param>
        <summary>Baixa o arquivo remoto especificado e o salva no local especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o arquivo de destino já existir, o `DownloadFile` método não substituirá o arquivo existente. Você pode usar uma das outras sobrecargas do <xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A> método instruí-la para substituir arquivos existentes ou especificar um valor de tempo limite específico.  
  
 `DownloadFile` saídas de informações de rastreamento ao habilitar o rastreamento de rede em seu aplicativo. Para obter mais informações, consulte [habilitando o rastreamento de rede](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  O `DownloadFile` método não deve enviar cabeçalhos HTTP opcionais. Alguns servidores podem retornar 500 (erro interno do servidor), se o cabeçalho de agente de usuário opcionais está ausente. Para enviar cabeçalhos opcionais, você precisa construir uma solicitação usando o <xref:System.Net.WebClient> classe.  
  
> [!NOTE]
>  O protocolo FTP envia informações, incluindo senhas, em texto sem formatação e não deve ser usado para transmitir informações confidenciais.  
  
 A tabela a seguir lista um exemplo de uma tarefa que envolvem o `My.Computer.Network.DownloadFile` método.  
  
|Para|Consulte|  
|-|-|  
|Baixar um arquivo|[Como Baixar um Arquivo](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 Este exemplo baixa o arquivo `WineList.txt` partir `http://www.cohowinery.com/downloads` e salva-o em `C:\Documents and Settings\All Users\Documents`.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 Este exemplo baixa o arquivo `WineList.txt` partir `http://www.cohowinery.com/downloads` e salva-o em `C:\Documents and Settings\All Users\Documents`, especificando um intervalo de tempo limite de 500 milissegundos.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> termina com uma barra à direita.</exception>
        <exception cref="T:System.TimeoutException">O servidor não responde durante o intervalo padrão (100 segundos).</exception>
        <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para executar uma operação de rede.</exception>
        <exception cref="T:System.Net.WebException">A solicitação foi negada pelo servidor Web de destino.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controla a capacidade de acessar arquivos e pastas. Enumeração associada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controla os direitos de acesso a recursos de Internet HTTP. Enumeração associada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Como baixar um arquivo no Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Como analisar demarcadores de arquivo no Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String, userName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string * string * string -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Caminho do arquivo a ser baixado, incluindo o nome do arquivo e endereço do host.</param>
        <param name="destinationFileName">Nome do arquivo e caminho do arquivo baixado.</param>
        <param name="userName">Nome de usuário a ser autenticado. O padrão é uma cadeia de caracteres vazia, "".</param>
        <param name="password">Senha para autenticação. O padrão é uma cadeia de caracteres vazia, "".</param>
        <summary>Baixa o arquivo remoto especificado e o salva no local especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o arquivo de destino já existir, o `DownloadFile` método não substituirá o arquivo existente. Você pode usar uma das outras sobrecargas do <xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A> método instruí-la para substituir arquivos existentes ou especificar um valor de tempo limite específico.  
  
 `DownloadFile` saídas de informações de rastreamento ao habilitar o rastreamento de rede em seu aplicativo. Para obter mais informações, consulte [habilitando o rastreamento de rede](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  O `DownloadFile` método não deve enviar cabeçalhos HTTP opcionais. Alguns servidores podem retornar 500 (erro interno do servidor), se o cabeçalho de agente de usuário opcionais está ausente. Para enviar cabeçalhos opcionais, você precisa construir uma solicitação usando o <xref:System.Net.WebClient> classe.  
  
> [!NOTE]
>  O protocolo FTP envia informações, incluindo senhas, em texto sem formatação e não deve ser usado para transmitir informações confidenciais.  
  
 A tabela a seguir lista um exemplo de uma tarefa que envolvem o `My.Computer.Network.DownloadFile` método.  
  
|Para|Consulte|  
|-|-|  
|Baixar um arquivo|[Como Baixar um Arquivo](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 Este exemplo baixa o arquivo `WineList.txt` partir `http://www.cohowinery.com/downloads` e salva-o em `C:\Documents and Settings\All Users\Documents`.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 Este exemplo baixa o arquivo `WineList.txt` partir `http://www.cohowinery.com/downloads` e salva-o em `C:\Documents and Settings\All Users\Documents`, especificando um intervalo de tempo limite de 500 milissegundos.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> termina com uma barra à direita.</exception>
        <exception cref="T:System.TimeoutException">O servidor não responde durante o intervalo padrão (100 segundos).</exception>
        <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para executar uma operação de rede.</exception>
        <exception cref="T:System.Net.WebException">A solicitação foi negada pelo servidor Web de destino.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controla a capacidade de acessar arquivos e pastas. Enumeração associada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controla os direitos de acesso a recursos de Internet HTTP. Enumeração associada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Como baixar um arquivo no Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Como analisar demarcadores de arquivo no Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, class System.Net.ICredentials networkCredentials, bool showUI, int32 connectionTimeout, bool overwrite) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.Net.ICredentials,System.Boolean,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String, networkCredentials As ICredentials, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName, System::Net::ICredentials ^ networkCredentials, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string * System.Net.ICredentials * bool * int * bool -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, networkCredentials, showUI, connectionTimeout, overwrite)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="networkCredentials" Type="System.Net.ICredentials" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="address"><see langword="String" /> ou <see cref="T:System.Uri" />. Caminho do arquivo a ser baixado, incluindo o nome do arquivo e endereço do host.</param>
        <param name="destinationFileName"><see langword="String" />. Nome do arquivo e caminho do arquivo baixado.</param>
        <param name="networkCredentials"><see cref="T:System.Net.ICredentials" />. Credenciais a serem fornecidas.</param>
        <param name="showUI"><see langword="True" /> para exibir o andamento da operação; caso contrário, <see langword="False" />. O padrão é <see langword="False" />.</param>
        <param name="connectionTimeout">Intervalo de tempo limite, em milissegundos. O padrão é 100 segundos.</param>
        <param name="overwrite"><see langword="True" /> para substituir arquivos existentes; caso contrário, <see langword="False" />. O padrão é <see langword="False" />.</param>
        <summary>Baixa o arquivo remoto especificado e o salva no local especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se `showUI` é definido como `True`, aparece uma caixa de diálogo que mostra o andamento da operação; a caixa de diálogo contém uma **Cancelar** botão que pode ser usado para cancelar a operação. A caixa de diálogo não é modal e, portanto, não bloqueia a entrada do usuário para outras janelas no programa.  
  
 Se o servidor não responder dentro especificado `connectionTimeout`, a operação será cancelada e uma exceção será lançada.  
  
 `DownloadFile` saídas de informações de rastreamento ao habilitar o rastreamento de rede em seu aplicativo. Para obter mais informações, consulte [habilitando o rastreamento de rede](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  O `DownloadFile` método não deve enviar cabeçalhos HTTP opcionais. Alguns servidores podem retornar 500 (erro interno do servidor), se o cabeçalho de agente de usuário opcionais está ausente. Para enviar cabeçalhos opcionais, você precisa construir uma solicitação usando o <xref:System.Net.WebClient> classe.  
  
> [!NOTE]
>  O protocolo FTP envia informações, incluindo senhas, em texto sem formatação e não deve ser usado para transmitir informações confidenciais.  
  
 A tabela a seguir lista um exemplo de uma tarefa que envolvem o `My.Computer.Network.DownloadFile` método.  
  
|Para|Consulte|  
|-|-|  
|Baixar um arquivo|[Como Baixar um Arquivo](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 Este exemplo baixa o arquivo `WineList.txt` partir `http://www.cohowinery.com/downloads` e salva-o em `C:\Documents and Settings\All Users\Documents`.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 Este exemplo baixa o arquivo `WineList.txt` partir `http://www.cohowinery.com/downloads` e salva-o em `C:\Documents and Settings\All Users\Documents`, especificando um intervalo de tempo limite de 500 milissegundos.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> termina com uma barra à direita.</exception>
        <exception cref="T:System.IO.IOException"><paramref name="overwrite" /> é definido como <see langword="False" /> e o arquivo de destino já existe.</exception>
        <exception cref="T:System.TimeoutException">O servidor não responde dentro do <paramref name="connectionTimeout" /> especificado.</exception>
        <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para executar uma operação de rede.</exception>
        <exception cref="T:System.Net.WebException">A solicitação foi negada pelo servidor Web de destino.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controla a capacidade de acessar arquivos e pastas. Enumeração associada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Controla as permissões relacionadas às interfaces de usuário e a área de transferência. Enumeração associada: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controla os direitos de acesso a recursos de Internet HTTP. Enumeração associada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Como baixar um arquivo no Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Como analisar demarcadores de arquivo no Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (string address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(string address, string destinationFileName, string userName, string password, bool showUI, int32 connectionTimeout, bool overwrite) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As String, destinationFileName As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(System::String ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : string * string * string * string * bool * int * bool -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password, showUI, connectionTimeout, overwrite)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="address">Caminho do arquivo a ser baixado, incluindo o nome do arquivo e endereço do host.</param>
        <param name="destinationFileName">Nome do arquivo e caminho do arquivo baixado.</param>
        <param name="userName">Nome de usuário a ser autenticado. O padrão é uma cadeia de caracteres vazia, "".</param>
        <param name="password">Senha para autenticação. O padrão é uma cadeia de caracteres vazia, "".</param>
        <param name="showUI"><see langword="True" /> para exibir o andamento da operação; caso contrário, <see langword="False" />. O padrão é <see langword="False" />.</param>
        <param name="connectionTimeout"><see cref="T:System.Int32" />. Intervalo de tempo limite, em milissegundos. O padrão é 100 segundos.</param>
        <param name="overwrite"><see langword="True" /> para substituir arquivos existentes; caso contrário, <see langword="False" />. O padrão é <see langword="False" />.</param>
        <summary>Baixa o arquivo remoto especificado e o salva no local especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se `showUI` é definido como `True`, aparece uma caixa de diálogo que mostra o andamento da operação; a caixa de diálogo contém uma **Cancelar** botão que pode ser usado para cancelar a operação. A caixa de diálogo não é modal e, portanto, não bloqueia a entrada do usuário para outras janelas no programa.  
  
 Se o servidor não responder dentro especificado `connectionTimeout`, a operação será cancelada e uma exceção será lançada.  
  
 `DownloadFile` saídas de informações de rastreamento ao habilitar o rastreamento de rede em seu aplicativo. Para obter mais informações, consulte [habilitando o rastreamento de rede](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  O `DownloadFile` método não deve enviar cabeçalhos HTTP opcionais. Alguns servidores podem retornar 500 (erro interno do servidor), se o cabeçalho de agente de usuário opcionais está ausente. Para enviar cabeçalhos opcionais, você precisa construir uma solicitação usando o <xref:System.Net.WebClient> classe.  
  
> [!NOTE]
>  O protocolo FTP envia informações, incluindo senhas, em texto sem formatação e não deve ser usado para transmitir informações confidenciais.  
  
 A tabela a seguir lista um exemplo de uma tarefa que envolvem o `My.Computer.Network.DownloadFile` método.  
  
|Para|Consulte|  
|-|-|  
|Baixar um arquivo|[Como Baixar um Arquivo](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 Este exemplo baixa o arquivo `WineList.txt` partir `http://www.cohowinery.com/downloads` e salva-o em `C:\Documents and Settings\All Users\Documents`.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 Este exemplo baixa o arquivo `WineList.txt` partir `http://www.cohowinery.com/downloads` e salva-o em `C:\Documents and Settings\All Users\Documents`, especificando um intervalo de tempo limite de 500 milissegundos.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> termina com uma barra à direita.</exception>
        <exception cref="T:System.IO.IOException"><paramref name="overwrite" /> é definido como <see langword="False" /> e o arquivo de destino já existe.</exception>
        <exception cref="T:System.TimeoutException">O servidor não responde dentro do <paramref name="connectionTimeout" /> especificado.</exception>
        <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para executar uma operação de rede.</exception>
        <exception cref="T:System.Net.WebException">A solicitação foi negada pelo servidor Web de destino.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controla a capacidade de acessar arquivos e pastas. Enumeração associada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Controla as permissões relacionadas às interfaces de usuário e a área de transferência. Enumeração associada: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controla os direitos de acesso a recursos de Internet HTTP. Enumeração associada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Como baixar um arquivo no Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Como analisar demarcadores de arquivo no Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout, bool overwrite, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, class System.Net.ICredentials networkCredentials, bool showUI, int32 connectionTimeout, bool overwrite, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.Net.ICredentials,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String, networkCredentials As ICredentials, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName, System::Net::ICredentials ^ networkCredentials, bool showUI, int connectionTimeout, bool overwrite, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string * System.Net.ICredentials * bool * int * bool * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, networkCredentials, showUI, connectionTimeout, overwrite, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="networkCredentials" Type="System.Net.ICredentials" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="address">Caminho do arquivo a ser baixado, incluindo o nome do arquivo e endereço do host.</param>
        <param name="destinationFileName">Nome do arquivo e caminho do arquivo baixado.</param>
        <param name="networkCredentials">Credenciais a serem fornecidas.</param>
        <param name="showUI"><see langword="True" /> para exibir o andamento da operação; caso contrário, <see langword="False" />. O padrão é <see langword="False" />.</param>
        <param name="connectionTimeout">Intervalo de tempo limite, em milissegundos. O padrão é 100 segundos.</param>
        <param name="overwrite"><see langword="True" /> para substituir arquivos existentes; caso contrário, <see langword="False" />. O padrão é <see langword="False" />.</param>
        <param name="onUserCancel">Especifica o comportamento quando o usuário clica em **Cancelar** ou **Não** na caixa de diálogo mostrada como resultado de <paramref name="showUI" /> definido como <see langword="True" />. O padrão é <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
        <summary>Baixa o arquivo remoto especificado e o salva no local especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se `showUI` é definido como `True`, aparece uma caixa de diálogo que mostra o andamento da operação; a caixa de diálogo contém uma **Cancelar** botão que pode ser usado para cancelar a operação. A caixa de diálogo não é modal e, portanto, não bloqueia a entrada do usuário para outras janelas no programa.  
  
 Se o servidor não responder dentro especificado `connectionTimeout`, a operação será cancelada e uma exceção será lançada.  
  
 `DownloadFile` saídas de informações de rastreamento ao habilitar o rastreamento de rede em seu aplicativo. Para obter mais informações, consulte [habilitando o rastreamento de rede](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  O `DownloadFile` método não deve enviar cabeçalhos HTTP opcionais. Alguns servidores podem retornar 500 (erro interno do servidor), se o cabeçalho de agente de usuário opcionais está ausente. Para enviar cabeçalhos opcionais, você precisa construir uma solicitação usando o <xref:System.Net.WebClient> classe.  
  
> [!NOTE]
>  O protocolo FTP envia informações, incluindo senhas, em texto sem formatação e não deve ser usado para transmitir informações confidenciais.  
  
 A tabela a seguir lista um exemplo de uma tarefa que envolvem o `My.Computer.Network.DownloadFile` método.  
  
|Para|Consulte|  
|-|-|  
|Baixar um arquivo|[Como Baixar um Arquivo](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 Este exemplo baixa o arquivo `WineList.txt` partir `http://www.cohowinery.com/downloads` e salva-o em `C:\Documents and Settings\All Users\Documents`.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 Este exemplo baixa o arquivo `WineList.txt` partir `http://www.cohowinery.com/downloads` e salva-o em `C:\Documents and Settings\All Users\Documents`, especificando um intervalo de tempo limite de 500 milissegundos.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> termina com uma barra à direita.</exception>
        <exception cref="T:System.IO.IOException"><paramref name="overwrite" /> é definido como <see langword="False" /> e o arquivo de destino já existe.</exception>
        <exception cref="T:System.TimeoutException">O servidor não responde dentro do <paramref name="connectionTimeout" /> especificado.</exception>
        <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para executar uma operação de rede.</exception>
        <exception cref="T:System.Net.WebException">A solicitação foi negada pelo servidor Web de destino.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controla a capacidade de acessar arquivos e pastas. Enumeração associada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Controla as permissões relacionadas às interfaces de usuário e a área de transferência. Enumeração associada: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controla os direitos de acesso a recursos de Internet HTTP. Enumeração associada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Como baixar um arquivo no Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Como analisar demarcadores de arquivo no Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, string userName, string password, bool showUI, int32 connectionTimeout, bool overwrite) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string * string * string * bool * int * bool -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password, showUI, connectionTimeout, overwrite)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="address">Caminho do arquivo a ser baixado, incluindo o nome do arquivo e endereço do host.</param>
        <param name="destinationFileName">Nome do arquivo e caminho do arquivo baixado.</param>
        <param name="userName">Nome de usuário a ser autenticado. O padrão é uma cadeia de caracteres vazia, "".</param>
        <param name="password">Senha para autenticação. O padrão é uma cadeia de caracteres vazia, "".</param>
        <param name="showUI"><see langword="True" /> para exibir o andamento da operação; caso contrário, <see langword="False" />. O padrão é <see langword="False" />.</param>
        <param name="connectionTimeout">Intervalo de tempo limite, em milissegundos. O padrão é 100 segundos.</param>
        <param name="overwrite"><see langword="True" /> para substituir arquivos existentes; caso contrário, <see langword="False" />. O padrão é <see langword="False" />.</param>
        <summary>Baixa o arquivo remoto especificado e o salva no local especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se `showUI` é definido como `True`, aparece uma caixa de diálogo que mostra o andamento da operação; a caixa de diálogo contém uma **Cancelar** botão que pode ser usado para cancelar a operação. A caixa de diálogo não é modal e, portanto, não bloqueia a entrada do usuário para outras janelas no programa.  
  
 Se o servidor não responder dentro especificado `connectionTimeout`, a operação será cancelada e uma exceção será lançada.  
  
 `DownloadFile` saídas de informações de rastreamento ao habilitar o rastreamento de rede em seu aplicativo. Para obter mais informações, consulte [habilitando o rastreamento de rede](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  O `DownloadFile` método não deve enviar cabeçalhos HTTP opcionais. Alguns servidores podem retornar 500 (erro interno do servidor), se o cabeçalho de agente de usuário opcionais está ausente. Para enviar cabeçalhos opcionais, você precisa construir uma solicitação usando o <xref:System.Net.WebClient> classe.  
  
> [!NOTE]
>  O protocolo FTP envia informações, incluindo senhas, em texto sem formatação e não deve ser usado para transmitir informações confidenciais.  
  
 A tabela a seguir lista um exemplo de uma tarefa que envolvem o `My.Computer.Network.DownloadFile` método.  
  
|Para|Consulte|  
|-|-|  
|Baixar um arquivo|[Como Baixar um Arquivo](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 Este exemplo baixa o arquivo `WineList.txt` partir `http://www.cohowinery.com/downloads` e salva-o em `C:\Documents and Settings\All Users\Documents`.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 Este exemplo baixa o arquivo `WineList.txt` partir `http://www.cohowinery.com/downloads` e salva-o em `C:\Documents and Settings\All Users\Documents`, especificando um intervalo de tempo limite de 500 milissegundos.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> termina com uma barra à direita.</exception>
        <exception cref="T:System.IO.IOException"><paramref name="overwrite" /> é definido como <see langword="False" /> e o arquivo de destino já existe.</exception>
        <exception cref="T:System.TimeoutException">O servidor não responde dentro do <paramref name="connectionTimeout" /> especificado.</exception>
        <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para executar uma operação de rede.</exception>
        <exception cref="T:System.Net.WebException">A solicitação foi negada pelo servidor Web de destino.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controla a capacidade de acessar arquivos e pastas. Enumeração associada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Controla as permissões relacionadas às interfaces de usuário e a área de transferência. Enumeração associada: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controla os direitos de acesso a recursos de Internet HTTP. Enumeração associada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Como baixar um arquivo no Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Como analisar demarcadores de arquivo no Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (string address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(string address, string destinationFileName, string userName, string password, bool showUI, int32 connectionTimeout, bool overwrite, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As String, destinationFileName As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(System::String ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, bool overwrite, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : string * string * string * string * bool * int * bool * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password, showUI, connectionTimeout, overwrite, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="address">Caminho do arquivo a ser baixado, incluindo o nome do arquivo e endereço do host.</param>
        <param name="destinationFileName">Nome do arquivo e caminho do arquivo baixado.</param>
        <param name="userName">Nome de usuário a ser autenticado. O padrão é uma cadeia de caracteres vazia, "".</param>
        <param name="password">Senha para autenticação. O padrão é uma cadeia de caracteres vazia, "".</param>
        <param name="showUI"><see langword="True" /> para exibir o andamento da operação; caso contrário, <see langword="False" />. O padrão é <see langword="False" />.</param>
        <param name="connectionTimeout">Intervalo de tempo limite, em milissegundos. O padrão é 100 segundos.</param>
        <param name="overwrite"><see langword="True" /> para substituir arquivos existentes; caso contrário, <see langword="False" />. O padrão é <see langword="False" />.</param>
        <param name="onUserCancel">Especifica o comportamento quando o usuário clica em **Cancelar** ou **Não** na caixa de diálogo mostrada como resultado de <c>ShowUI</c> definido como <see langword="True" />. O padrão é <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
        <summary>Baixa o arquivo remoto especificado e o salva no local especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se `showUI` é definido como `True`, aparece uma caixa de diálogo que mostra o andamento da operação; a caixa de diálogo contém uma **Cancelar** botão que pode ser usado para cancelar a operação. A caixa de diálogo não é modal e, portanto, não bloqueia a entrada do usuário para outras janelas no programa.  
  
 Se o servidor não responder dentro especificado `connectionTimeout`, a operação será cancelada e uma exceção será lançada.  
  
 `DownloadFile` saídas de informações de rastreamento ao habilitar o rastreamento de rede em seu aplicativo. Para obter mais informações, consulte [habilitando o rastreamento de rede](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  O `DownloadFile` método não deve enviar cabeçalhos HTTP opcionais. Alguns servidores podem retornar 500 (erro interno do servidor), se o cabeçalho de agente de usuário opcionais está ausente. Para enviar cabeçalhos opcionais, você precisa construir uma solicitação usando o <xref:System.Net.WebClient> classe.  
  
> [!NOTE]
>  O protocolo FTP envia informações, incluindo senhas, em texto sem formatação e não deve ser usado para transmitir informações confidenciais.  
  
 A tabela a seguir lista um exemplo de uma tarefa que envolvem o `My.Computer.Network.DownloadFile` método.  
  
|Para|Consulte|  
|-|-|  
|Baixar um arquivo|[Como Baixar um Arquivo](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 Este exemplo baixa o arquivo `WineList.txt` partir `http://www.cohowinery.com/downloads` e salva-o em `C:\Documents and Settings\All Users\Documents`.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 Este exemplo baixa o arquivo `WineList.txt` partir `http://www.cohowinery.com/downloads` e salva-o em `C:\Documents and Settings\All Users\Documents`, especificando um intervalo de tempo limite de 500 milissegundos.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> termina com uma barra à direita.</exception>
        <exception cref="T:System.IO.IOException"><paramref name="overwrite" /> é definido como <see langword="False" /> e o arquivo de destino já existe.</exception>
        <exception cref="T:System.TimeoutException">O servidor não responde dentro do <paramref name="connectionTimeout" /> especificado.</exception>
        <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para executar uma operação de rede.</exception>
        <exception cref="T:System.Net.WebException">A solicitação foi negada pelo servidor Web de destino.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controla a capacidade de acessar arquivos e pastas. Enumeração associada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Controla as permissões relacionadas às interfaces de usuário e a área de transferência. Enumeração associada: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controla os direitos de acesso a recursos de Internet HTTP. Enumeração associada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Como baixar um arquivo no Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Como analisar demarcadores de arquivo no Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, string userName, string password, bool showUI, int32 connectionTimeout, bool overwrite, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, bool overwrite, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string * string * string * bool * int * bool * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password, showUI, connectionTimeout, overwrite, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="address">Caminho do arquivo a ser baixado, incluindo o nome do arquivo e endereço do host.</param>
        <param name="destinationFileName">Nome do arquivo e caminho do arquivo baixado.</param>
        <param name="userName">Nome de usuário a ser autenticado. O padrão é uma cadeia de caracteres vazia, "".</param>
        <param name="password">Senha para autenticação. O padrão é uma cadeia de caracteres vazia, "".</param>
        <param name="showUI"><see langword="True" /> para exibir o andamento da operação; caso contrário, <see langword="False" />. O padrão é <see langword="False" />.</param>
        <param name="connectionTimeout">Intervalo de tempo limite, em milissegundos. O padrão é 100 segundos.</param>
        <param name="overwrite"><see langword="True" /> para substituir arquivos existentes; caso contrário, <see langword="False" />. O padrão é <see langword="False" />.</param>
        <param name="onUserCancel">Especifica o comportamento quando o usuário clica em **Cancelar** ou **Não** na caixa de diálogo mostrada como resultado de <c>ShowUI</c> definido como <see langword="True" />. O padrão é <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
        <summary>Baixa o arquivo remoto especificado e o salva no local especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se `showUI` é definido como `True`, aparece uma caixa de diálogo que mostra o andamento da operação; a caixa de diálogo contém uma **Cancelar** botão que pode ser usado para cancelar a operação. A caixa de diálogo não é modal e, portanto, não bloqueia a entrada do usuário para outras janelas no programa.  
  
 Se o servidor não responder dentro especificado `connectionTimeout`, a operação será cancelada e uma exceção será lançada.  
  
 `DownloadFile` saídas de informações de rastreamento ao habilitar o rastreamento de rede em seu aplicativo. Para obter mais informações, consulte [habilitando o rastreamento de rede](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  O `DownloadFile` método não deve enviar cabeçalhos HTTP opcionais. Alguns servidores podem retornar 500 (erro interno do servidor), se o cabeçalho de agente de usuário opcionais está ausente. Para enviar cabeçalhos opcionais, você precisa construir uma solicitação usando o <xref:System.Net.WebClient> classe.  
  
> [!NOTE]
>  O protocolo FTP envia informações, incluindo senhas, em texto sem formatação e não deve ser usado para transmitir informações confidenciais.  
  
 A tabela a seguir lista um exemplo de uma tarefa que envolvem o `My.Computer.Network.DownloadFile` método.  
  
|Para|Consulte|  
|-|-|  
|Baixar um arquivo|[Como Baixar um Arquivo](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 Este exemplo baixa o arquivo `WineList.txt` partir `http://www.cohowinery.com/downloads` e salva-o em `C:\Documents and Settings\All Users\Documents`.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 Este exemplo baixa o arquivo `WineList.txt` partir `http://www.cohowinery.com/downloads` e salva-o em `C:\Documents and Settings\All Users\Documents`, especificando um intervalo de tempo limite de 500 milissegundos.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> termina com uma barra à direita.</exception>
        <exception cref="T:System.IO.IOException"><paramref name="overwrite" /> é definido como <see langword="False" /> e o arquivo de destino já existe.</exception>
        <exception cref="T:System.TimeoutException">O servidor não responde dentro do <paramref name="connectionTimeout" /> especificado.</exception>
        <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para executar uma operação de rede.</exception>
        <exception cref="T:System.Net.WebException">A solicitação foi negada pelo servidor Web de destino.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controla a capacidade de acessar arquivos e pastas. Enumeração associada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Controla as permissões relacionadas às interfaces de usuário e a área de transferência. Enumeração associada: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controla os direitos de acesso a recursos de Internet HTTP. Enumeração associada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Como baixar um arquivo no Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Como analisar demarcadores de arquivo no Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="IsAvailable">
      <MemberSignature Language="C#" Value="public bool IsAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAvailable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Network.IsAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAvailable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAvailable : bool" Usage="Microsoft.VisualBasic.Devices.Network.IsAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indica se um computador está conectado a uma rede.</summary>
        <value><see langword="True" /> se o computador estiver conectado a uma rede; caso contrário, <see langword="False" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `IsAvailable` sempre retorna `False` quando chamado de um `Click Once` aplicativo ou se o usuário não tiver <xref:System.Net.NetworkInformation.NetworkInformationPermission>.  
  
 A tabela a seguir lista exemplos de tarefas que envolvem o `My.Computer.Network.IsAvailable` propriedade.  
  
|Para|Consulte|  
|-|-|  
|Verifique se um computador está conectado a uma rede|[Como Verificar o Status da Conexão](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-check-connection-status.md)|  
  
   
  
## Examples  
 Este exemplo verifica o status da propriedade e reportá-lo.  
  
 [!code-vb[VbVbalrMyNetwork#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controla a capacidade de acessar arquivos e pastas. Enumeração associada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controla os direitos de acesso a recursos de Internet HTTP. Enumeração associada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="NetworkAvailabilityChanged">
      <MemberSignature Language="C#" Value="public event Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler NetworkAvailabilityChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler NetworkAvailabilityChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NetworkAvailabilityChanged As NetworkAvailableEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event Microsoft::VisualBasic::Devices::NetworkAvailableEventHandler ^ NetworkAvailabilityChanged;" />
      <MemberSignature Language="F#" Value="member this.NetworkAvailabilityChanged : Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler " Usage="member this.NetworkAvailabilityChanged : Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando a disponibilidade de rede é alterada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um aplicativo gera o `NetworkAvailabilityChanged` evento sempre que a disponibilidade da rede muda. Você pode usar o <xref:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs.IsNetworkAvailable%2A> propriedade do `e` para obter o novo estado da conexão de rede. Para obter o estado atual da conexão de rede, use o <xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A> propriedade.  
  
 Em um aplicativo de formulários do Windows, esse evento é gerado no thread principal do aplicativo com os outros eventos de interface do usuário. Isso permite que o manipulador de eventos acessar diretamente a interface do usuário do aplicativo. No entanto, se o aplicativo estiver ocupado tratando outro evento de interface do usuário quando esse evento é gerado, esse evento não pode ser processado até que o manipulador de eventos termine ou chame o <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents%2A> método.  
  
 Não é possível usar o `Handles` instrução para lidar com o `NetworkAvailabilityChanged` evento; você deve usar o `AddHandler` instrução.  
  
 Em aplicativos Windows Forms, o `MyApplication` objeto expõe uma `NetworkAvailabilityChanged` evento que fornece a mesma funcionalidade que este evento, mas você pode tratá-la com o `Handles` instrução.  
  
> [!NOTE]
>  Muitos centros de rede fornecem uma conexão de rede, mesmo se o hub for desconectado de uma rede maior. Consequentemente, para conexões com fio, esse evento indica uma alteração na conexão entre o computador e um hub.  
  
> [!NOTE]
>  O `NetworkAvailabilityChanged` evento não será gerado pelos aplicativos executados no Windows 95 e Windows 98 ou por aplicativos que são executados no Windows 2000 por não-administrador. Se seu aplicativo pode ser executado nessas plataformas, use o <xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A> propriedade.  
  
   
  
## Examples  
 Este exemplo usa o `My.Computer.Network.NetworkAvailabilityChanged` eventos para atualizar a interface do usuário de um formulário ou controle.  
  
 Esse código deve para estar em um formulário ou controle que tem um <xref:System.Windows.Forms.Label> chamado `Label1`.  
  
 [!code-vb[VbVbalrMyApplication#50](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Network" />
        <altmember cref="N:Microsoft.VisualBasic.Devices" />
        <altmember cref="T:Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler" />
        <altmember cref="T:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Ping">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Executa o ping no servidor especificado.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Ping">
      <MemberSignature Language="C#" Value="public bool Ping (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool Ping(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.Ping(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ping (hostNameOrAddress As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Ping(System::String ^ hostNameOrAddress);" />
      <MemberSignature Language="F#" Value="member this.Ping : string -&gt; bool" Usage="network.Ping hostNameOrAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">A URL, nome do computador ou número IP do servidor para executar o ping.</param>
        <summary>Executa o ping no servidor especificado.</summary>
        <returns><see langword="True" /> se a operação tiver sido bem-sucedida; caso contrário, <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O `Ping` método não é um método à prova de falhas para determinar a disponibilidade de um computador remoto: a porta de ping no computador de destino pode ser desativada ou a solicitação de ping pode ser bloqueada por um firewall ou roteador.  
  
 O endereço passado para o `Ping` método deve ser compatível com DNS e não pode ser precedido por "http://".  
  
   
  
## Examples  
 Este exemplo informa se o servidor pode ser alcançados pelo ping, determinando se o `Ping` retorno do método `True`.  
  
 [!code-vb[VbVbalrMyNetwork#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#4)]  
  
 Substitua `"198.01.01.01"` com o nome de computador, URL ou endereço IP do servidor para executar o ping.  
  
 Este exemplo informa se o servidor pode ser alcançados pelo ping, determinando se o `Ping` retornados pelo método `True` e especifica um intervalo de tempo limite de 1000 milissegundos.  
  
 [!code-vb[VbVbalrMyNetwork#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#5)]  
  
 Substitua `"www.cohowinery.com"` com o nome de computador, URL ou endereço IP do servidor para executar o ping.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Não há nenhuma conexão de rede disponível.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">A URL não é válida.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controla a capacidade de acessar arquivos e pastas. Enumeração associada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Descreve um conjunto de permissões de segurança aplicadas ao código. Enumeração associada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controla os direitos de acesso a recursos de Internet HTTP. Enumeração associada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.SocketPermission">Controla os direitos para estabelecer ou aceitar conexões em um endereço de transporte. Enumeração associada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">Controla o acesso a um componente de contador de desempenho do Windows NT. Enumeração associada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">Controla o acesso às informações de rede e às estatísticas de tráfego do computador local. Enumeração associada: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" />.</permission>
        <altmember cref="T:System.Uri" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Ping">
      <MemberSignature Language="C#" Value="public bool Ping (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool Ping(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.Ping(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ping (address As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Ping(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.Ping : Uri -&gt; bool" Usage="network.Ping address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">O URI do servidor no qual o ping será executado.</param>
        <summary>Executa o ping no servidor especificado.</summary>
        <returns><see langword="True" /> se a operação tiver sido bem-sucedida; caso contrário, <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O `Ping` método não é um método à prova de falhas para determinar a disponibilidade de um computador remoto: a porta de ping no computador de destino pode ser desativada ou a solicitação de ping pode ser bloqueada por um firewall ou roteador.  
  
 O endereço passado para o `Ping` método deve ser compatível com DNS e não pode ser precedido por "http://".  
  
   
  
## Examples  
 Este exemplo informa se o servidor pode ser alcançados pelo ping, determinando se o `Ping` retorno do método `True`.  
  
 [!code-vb[VbVbalrMyNetwork#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#4)]  
  
 Substitua `"198.01.01.01"` com o nome de computador, URL ou endereço IP do servidor para executar o ping.  
  
 Este exemplo informa se o servidor pode ser alcançados pelo ping, determinando se o `Ping` retornados pelo método `True` e especifica um intervalo de tempo limite de 1000 milissegundos.  
  
 [!code-vb[VbVbalrMyNetwork#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#5)]  
  
 Substitua `"www.cohowinery.com"` com o nome de computador, URL ou endereço IP do servidor para executar o ping.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Não há nenhuma conexão de rede disponível.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">A URL não é válida.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controla a capacidade de acessar arquivos e pastas. Enumeração associada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Descreve um conjunto de permissões de segurança aplicadas ao código. Enumeração associada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controla os direitos de acesso a recursos de Internet HTTP. Enumeração associada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.SocketPermission">Controla os direitos para estabelecer ou aceitar conexões em um endereço de transporte. Enumeração associada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">Controla o acesso a um componente de contador de desempenho do Windows NT. Enumeração associada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">Controla o acesso às informações de rede e às estatísticas de tráfego do computador local. Enumeração associada: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" />.</permission>
        <altmember cref="T:System.Uri" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Ping">
      <MemberSignature Language="C#" Value="public bool Ping (string hostNameOrAddress, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool Ping(string hostNameOrAddress, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.Ping(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ping (hostNameOrAddress As String, timeout As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Ping(System::String ^ hostNameOrAddress, int timeout);" />
      <MemberSignature Language="F#" Value="member this.Ping : string * int -&gt; bool" Usage="network.Ping (hostNameOrAddress, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">A URL, nome do computador ou número IP do servidor para executar o ping.</param>
        <param name="timeout">O limite de tempo em milissegundos para entrar em contato com o destino. O padrão é 500.</param>
        <summary>Executa o ping no servidor especificado.</summary>
        <returns><see langword="True" /> se a operação tiver sido bem-sucedida; caso contrário, <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O `Ping` método não é um método à prova de falhas para determinar a disponibilidade de um computador remoto: a porta de ping no computador de destino pode ser desativada ou a solicitação de ping pode ser bloqueada por um firewall ou roteador.  
  
 O endereço passado para o `Ping` método deve ser compatível com DNS e não pode ser precedido por "http://".  
  
   
  
## Examples  
 Este exemplo informa se o servidor pode ser alcançados pelo ping, determinando se o `Ping` retorno do método `True`.  
  
 [!code-vb[VbVbalrMyNetwork#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#4)]  
  
 Substitua `"198.01.01.01"` com o nome de computador, URL ou endereço IP do servidor para executar o ping.  
  
 Este exemplo informa se o servidor pode ser alcançados pelo ping, determinando se o `Ping` retornados pelo método `True` e especifica um intervalo de tempo limite de 1000 milissegundos.  
  
 [!code-vb[VbVbalrMyNetwork#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#5)]  
  
 Substitua `"www.cohowinery.com"` com o nome de computador, URL ou endereço IP do servidor para executar o ping.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Não há nenhuma conexão de rede disponível.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">A URL não é válida.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controla a capacidade de acessar arquivos e pastas. Enumeração associada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Descreve um conjunto de permissões de segurança aplicadas ao código. Enumeração associada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controla os direitos de acesso a recursos de Internet HTTP. Enumeração associada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.SocketPermission">Controla os direitos para estabelecer ou aceitar conexões em um endereço de transporte. Enumeração associada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">Controla o acesso a um componente de contador de desempenho do Windows NT. Enumeração associada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">Controla o acesso às informações de rede e às estatísticas de tráfego do computador local. Enumeração associada: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" />.</permission>
        <altmember cref="T:System.Uri" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Ping">
      <MemberSignature Language="C#" Value="public bool Ping (Uri address, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool Ping(class System.Uri address, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.Ping(System.Uri,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ping (address As Uri, timeout As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Ping(Uri ^ address, int timeout);" />
      <MemberSignature Language="F#" Value="member this.Ping : Uri * int -&gt; bool" Usage="network.Ping (address, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address">O URI do servidor no qual o ping será executado.</param>
        <param name="timeout">O limite de tempo em milissegundos para entrar em contato com o destino. O padrão é 500.</param>
        <summary>Executa o ping no servidor especificado.</summary>
        <returns><see langword="True" /> se a operação tiver sido bem-sucedida; caso contrário, <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O `Ping` método não é um método à prova de falhas para determinar a disponibilidade de um computador remoto: a porta de ping no computador de destino pode ser desativada ou a solicitação de ping pode ser bloqueada por um firewall ou roteador.  
  
 O endereço passado para o `Ping` método deve ser compatível com DNS e não pode ser precedido por "http://".  
  
   
  
## Examples  
 Este exemplo informa se o servidor pode ser alcançados pelo ping, determinando se o `Ping` retorno do método `True`.  
  
 [!code-vb[VbVbalrMyNetwork#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#4)]  
  
 Substitua `"198.01.01.01"` com o nome de computador, URL ou endereço IP do servidor para executar o ping.  
  
 Este exemplo informa se o servidor pode ser alcançados pelo ping, determinando se o `Ping` retornados pelo método `True` e especifica um intervalo de tempo limite de 1000 milissegundos.  
  
 [!code-vb[VbVbalrMyNetwork#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#5)]  
  
 Substitua `"www.cohowinery.com"` com o nome de computador, URL ou endereço IP do servidor para executar o ping.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Não há nenhuma conexão de rede disponível.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">A URL não é válida.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controla a capacidade de acessar arquivos e pastas. Enumeração associada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Descreve um conjunto de permissões de segurança aplicadas ao código. Enumeração associada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controla os direitos de acesso a recursos de Internet HTTP. Enumeração associada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.SocketPermission">Controla os direitos para estabelecer ou aceitar conexões em um endereço de transporte. Enumeração associada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">Controla o acesso a um componente de contador de desempenho do Windows NT. Enumeração associada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">Controla o acesso às informações de rede e às estatísticas de tráfego do computador local. Enumeração associada: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" />.</permission>
        <altmember cref="T:System.Uri" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadFile">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Envia o arquivo especificado para o endereço do host especificado.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, string address);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, System::String ^ address);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * string -&gt; unit" Usage="network.UploadFile (sourceFileName, address)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Caminho e nome do arquivo a ser carregado.</param>
        <param name="address">URL, endereço IP ou URI do servidor de destino.</param>
        <summary>Envia o arquivo especificado para o endereço do host especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode usar uma das outras sobrecargas do <xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A> método para fornecer credenciais de usuário ou especificar um valor de tempo limite específico.  
  
 `My.Computer.Network.UploadFile` saídas de informações de rastreamento ao habilitar o rastreamento de rede em seu aplicativo. Para obter mais informações, consulte [habilitando o rastreamento de rede](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
 A tabela a seguir lista um exemplo de uma tarefa que envolvem o `My.Computer.Network.UploadFile` método.  
  
|Para|Consulte|  
|-|-|  
|Carregar um arquivo|[Como Carregar um Arquivo](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 Este exemplo carrega o arquivo `Order.txt` para `http://www.cohowinery.com/uploads`.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 Este exemplo carrega o arquivo `Order.txt` para `http://www.cohowinery.com/uploads` sem fornecer um nome de usuário ou senha, mostra o andamento do upload e tem um intervalo de tempo limite de 500 milissegundos.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">O caminho do arquivo de origem não é válido.</exception>
        <exception cref="T:System.InvalidOperationException">O <paramref name="address" /> não inclui um nome de arquivo.</exception>
        <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para executar uma operação de rede.</exception>
        <exception cref="T:System.TimeoutException">O servidor não responde durante o intervalo padrão (100 segundos).</exception>
        <exception cref="T:System.Net.WebException">A solicitação foi negada pelo servidor Web de destino.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controla a capacidade de acessar arquivos e pastas. Enumeração associada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controla os direitos de acesso a recursos de Internet HTTP. Enumeração associada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Como baixar um arquivo no Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Como analisar demarcadores de arquivo no Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri -&gt; unit" Usage="network.UploadFile (sourceFileName, address)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Caminho e nome do arquivo a ser carregado.</param>
        <param name="address">URL, endereço IP ou URI do servidor de destino.</param>
        <summary>Envia o arquivo especificado para o endereço do host especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode usar uma das outras sobrecargas do <xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A> método para fornecer credenciais de usuário ou especificar um valor de tempo limite específico.  
  
 `My.Computer.Network.UploadFile` saídas de informações de rastreamento ao habilitar o rastreamento de rede em seu aplicativo. Para obter mais informações, consulte [habilitando o rastreamento de rede](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
 A tabela a seguir lista um exemplo de uma tarefa que envolvem o `My.Computer.Network.UploadFile` método.  
  
|Para|Consulte|  
|-|-|  
|Carregar um arquivo|[Como Carregar um Arquivo](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 Este exemplo carrega o arquivo `Order.txt` para `http://www.cohowinery.com/uploads`.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 Este exemplo carrega o arquivo `Order.txt` para `http://www.cohowinery.com/uploads` sem fornecer um nome de usuário ou senha, mostra o andamento do upload e tem um intervalo de tempo limite de 500 milissegundos.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">O caminho do arquivo de origem não é válido.</exception>
        <exception cref="T:System.InvalidOperationException">O <paramref name="address" /> não inclui um nome de arquivo.</exception>
        <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para executar uma operação de rede.</exception>
        <exception cref="T:System.TimeoutException">O servidor não responde durante o intervalo padrão (100 segundos).</exception>
        <exception cref="T:System.Net.WebException">A solicitação foi negada pelo servidor Web de destino.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controla a capacidade de acessar arquivos e pastas. Enumeração associada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controla os direitos de acesso a recursos de Internet HTTP. Enumeração associada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Como baixar um arquivo no Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Como analisar demarcadores de arquivo no Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, string address, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, string address, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As String, userName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, System::String ^ address, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * string * string * string -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Caminho e nome do arquivo a ser carregado.</param>
        <param name="address">URL, endereço IP ou URI do servidor de destino.</param>
        <param name="userName">Nome de usuário a ser autenticado. O padrão é uma cadeia de caracteres vazia: <c>""</c>.</param>
        <param name="password">Senha para autenticação. O padrão é uma cadeia de caracteres vazia: <c>""</c>.</param>
        <summary>Envia o arquivo especificado para o endereço do host especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode usar uma das outras sobrecargas do <xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A> método para especificar um valor de tempo limite específico.  
  
 `My.Computer.Network.UploadFile` saídas de informações de rastreamento ao habilitar o rastreamento de rede em seu aplicativo. Para obter mais informações, consulte [habilitando o rastreamento de rede](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  O protocolo FTP envia informações, incluindo senhas, em texto sem formatação e não deve ser usado para transmitir informações confidenciais.  
  
 A tabela a seguir lista um exemplo de uma tarefa que envolvem o `My.Computer.Network.UploadFile` método.  
  
|Para|Consulte|  
|-|-|  
|Carregar um arquivo|[Como Carregar um Arquivo](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 Este exemplo carrega o arquivo `Order.txt` para `http://www.cohowinery.com/uploads`.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 Este exemplo carrega o arquivo `Order.txt` para `http://www.cohowinery.com/uploads` sem fornecer um nome de usuário ou senha, mostra o andamento do upload e tem um intervalo de tempo limite de 500 milissegundos.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="connectionTimeout" /> é menor que ou igual a zero.</exception>
        <exception cref="T:System.InvalidOperationException">O <paramref name="address" /> não inclui um nome de arquivo.</exception>
        <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para executar uma operação de rede.</exception>
        <exception cref="T:System.TimeoutException">O servidor não responde durante o intervalo padrão (100 segundos).</exception>
        <exception cref="T:System.Net.WebException">A solicitação foi negada pelo servidor Web de destino.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controla a capacidade de acessar arquivos e pastas. Enumeração associada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controla os direitos de acesso a recursos de Internet HTTP. Enumeração associada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Como baixar um arquivo no Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Como analisar demarcadores de arquivo no Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri, userName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri * string * string -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Caminho e nome do arquivo a ser carregado.</param>
        <param name="address">URL, endereço IP ou URI do servidor de destino.</param>
        <param name="userName">Nome de usuário a ser autenticado. O padrão é uma cadeia de caracteres vazia: <c>""</c>.</param>
        <param name="password">Senha para autenticação. O padrão é uma cadeia de caracteres vazia: <c>""</c>.</param>
        <summary>Envia o arquivo especificado para o endereço do host especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode usar uma das outras sobrecargas do <xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A> método para especificar um valor de tempo limite específico.  
  
 `My.Computer.Network.UploadFile` saídas de informações de rastreamento ao habilitar o rastreamento de rede em seu aplicativo. Para obter mais informações, consulte [habilitando o rastreamento de rede](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  O protocolo FTP envia informações, incluindo senhas, em texto sem formatação e não deve ser usado para transmitir informações confidenciais.  
  
 A tabela a seguir lista um exemplo de uma tarefa que envolvem o `My.Computer.Network.UploadFile` método.  
  
|Para|Consulte|  
|-|-|  
|Carregar um arquivo|[Como Carregar um Arquivo](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 Este exemplo carrega o arquivo `Order.txt` para `http://www.cohowinery.com/uploads`.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 Este exemplo carrega o arquivo `Order.txt` para `http://www.cohowinery.com/uploads` sem fornecer um nome de usuário ou senha, mostra o andamento do upload e tem um intervalo de tempo limite de 500 milissegundos.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="connectionTimeout" /> é menor que ou igual a zero.</exception>
        <exception cref="T:System.InvalidOperationException">O <paramref name="address" /> não inclui um nome de arquivo.</exception>
        <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para executar uma operação de rede.</exception>
        <exception cref="T:System.TimeoutException">O servidor não responde durante o intervalo padrão (100 segundos).</exception>
        <exception cref="T:System.Net.WebException">A solicitação foi negada pelo servidor Web de destino.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controla a capacidade de acessar arquivos e pastas. Enumeração associada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controla os direitos de acesso a recursos de Internet HTTP. Enumeração associada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Como baixar um arquivo no Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Como analisar demarcadores de arquivo no Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, class System.Net.ICredentials networkCredentials, bool showUI, int32 connectionTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.Net.ICredentials,System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri, networkCredentials As ICredentials, showUI As Boolean, connectionTimeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address, System::Net::ICredentials ^ networkCredentials, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri * System.Net.ICredentials * bool * int -&gt; unit" Usage="network.UploadFile (sourceFileName, address, networkCredentials, showUI, connectionTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="networkCredentials" Type="System.Net.ICredentials" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Caminho e nome do arquivo a ser carregado.</param>
        <param name="address">URL, endereço IP ou URI do servidor de destino.</param>
        <param name="networkCredentials">Credenciais para autenticação.</param>
        <param name="showUI"><see langword="True" /> para exibir o progresso da operação; caso contrário, <see langword="False" />. O padrão é <see langword="False" />.</param>
        <param name="connectionTimeout">O intervalo de tempo limite em milissegundos. O padrão é 100 segundos.</param>
        <summary>Envia o arquivo especificado para o endereço do host especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se `showUI` é definido como `True`, uma caixa de diálogo mostra o andamento da operação e inclui um **Cancelar** botão o usuário pode clicar para cancelar a operação. Como a caixa de diálogo não modal, ele não bloqueia a entrada do usuário para outras janelas no programa.  
  
 Se o servidor não responder dentro do intervalo especificado em `connectionTimeout`, a operação será cancelada e uma exceção será lançada.  
  
 `My.Computer.Network.UploadFile` saídas de informações de rastreamento ao habilitar o rastreamento de rede em seu aplicativo. Para obter mais informações, consulte [habilitando o rastreamento de rede](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  O protocolo FTP envia informações, incluindo senhas, em texto sem formatação e não deve ser usado para transmitir informações confidenciais.  
  
 A tabela a seguir lista um exemplo de uma tarefa que envolvem o `My.Computer.Network.UploadFile` método.  
  
|Para|Consulte|  
|-|-|  
|Carregar um arquivo|[Como Carregar um Arquivo](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 Este exemplo carrega o arquivo `Order.txt` para `http://www.cohowinery.com/uploads`.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 Este exemplo carrega o arquivo `Order.txt` para `http://www.cohowinery.com/uploads` sem fornecer um nome de usuário ou senha, mostra o andamento do upload e tem um intervalo de tempo limite de 500 milissegundos.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="connectionTimeout" /> é menor que ou igual a zero.</exception>
        <exception cref="T:System.InvalidOperationException">O <paramref name="address" /> não inclui um nome de arquivo.</exception>
        <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para executar uma operação de rede.</exception>
        <exception cref="T:System.TimeoutException">O servidor não responde dentro do <paramref name="connectionTimeout" /> especificado.</exception>
        <exception cref="T:System.Net.WebException">A solicitação foi negada pelo servidor Web de destino.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controla a capacidade de acessar arquivos e pastas. Enumeração associada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Controla as permissões relacionadas às interfaces de usuário e a área de transferência. Enumeração associada: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controla os direitos de acesso a recursos de Internet HTTP. Enumeração associada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Como baixar um arquivo no Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Como analisar demarcadores de arquivo no Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, string address, string userName, string password, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, string address, string userName, string password, bool showUI, int32 connectionTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, System::String ^ address, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * string * string * string * bool * int -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password, showUI, connectionTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Caminho e nome do arquivo a ser carregado.</param>
        <param name="address">URL, endereço IP ou URI do servidor de destino.</param>
        <param name="userName">Nome de usuário a ser autenticado. O padrão é uma cadeia de caracteres vazia: <c>""</c>.</param>
        <param name="password">Senha para autenticação. O padrão é uma cadeia de caracteres vazia: <c>""</c>.</param>
        <param name="showUI"><see langword="True" /> para exibir o progresso da operação; caso contrário, <see langword="False" />. O padrão é <see langword="False" />.</param>
        <param name="connectionTimeout">O intervalo de tempo limite em milissegundos. O padrão é 100 segundos.</param>
        <summary>Envia o arquivo especificado para o endereço do host especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se `showUI` é definido como `True`, uma caixa de diálogo mostra o andamento da operação e inclui um **Cancelar** botão o usuário pode clicar para cancelar a operação. Como a caixa de diálogo não modal, ele não bloqueia a entrada do usuário para outras janelas no programa.  
  
 Se o servidor não responder dentro do intervalo especificado em `connectionTimeout`, a operação será cancelada e uma exceção será lançada.  
  
 `My.Computer.Network.UploadFile` saídas de informações de rastreamento ao habilitar o rastreamento de rede em seu aplicativo. Para obter mais informações, consulte [habilitando o rastreamento de rede](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  O protocolo FTP envia informações, incluindo senhas, em texto sem formatação e não deve ser usado para transmitir informações confidenciais.  
  
 A tabela a seguir lista um exemplo de uma tarefa que envolvem o `My.Computer.Network.UploadFile` método.  
  
|Para|Consulte|  
|-|-|  
|Carregar um arquivo|[Como Carregar um Arquivo](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 Este exemplo carrega o arquivo `Order.txt` para `http://www.cohowinery.com/uploads`.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 Este exemplo carrega o arquivo `Order.txt` para `http://www.cohowinery.com/uploads` sem fornecer um nome de usuário ou senha, mostra o andamento do upload e tem um intervalo de tempo limite de 500 milissegundos.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="connectionTimeout" /> é menor que ou igual a zero.</exception>
        <exception cref="T:System.InvalidOperationException">O <paramref name="address" /> não inclui um nome de arquivo.</exception>
        <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para executar uma operação de rede.</exception>
        <exception cref="T:System.TimeoutException">O servidor não responde dentro do <paramref name="connectionTimeout" /> especificado.</exception>
        <exception cref="T:System.Net.WebException">A solicitação foi negada pelo servidor Web de destino.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controla a capacidade de acessar arquivos e pastas. Enumeração associada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Controla as permissões relacionadas às interfaces de usuário e a área de transferência. Enumeração associada: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controla os direitos de acesso a recursos de Internet HTTP. Enumeração associada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Como baixar um arquivo no Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Como analisar demarcadores de arquivo no Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, class System.Net.ICredentials networkCredentials, bool showUI, int32 connectionTimeout, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.Net.ICredentials,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri, networkCredentials As ICredentials, showUI As Boolean, connectionTimeout As Integer, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address, System::Net::ICredentials ^ networkCredentials, bool showUI, int connectionTimeout, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri * System.Net.ICredentials * bool * int * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.UploadFile (sourceFileName, address, networkCredentials, showUI, connectionTimeout, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="networkCredentials" Type="System.Net.ICredentials" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Caminho e nome do arquivo a ser carregado.</param>
        <param name="address">URL, endereço IP ou URI do servidor de destino.</param>
        <param name="networkCredentials">Credenciais para autenticação.</param>
        <param name="showUI"><see langword="True" /> para exibir o progresso da operação; caso contrário, <see langword="False" />. O padrão é <see langword="False" />.</param>
        <param name="connectionTimeout">O intervalo de tempo limite em milissegundos. O padrão é 100 segundos.</param>
        <param name="onUserCancel">Ação a ser tomada quando o usuário clica em **Cancelar**. O padrão é <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
        <summary>Envia o arquivo especificado para o endereço do host especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se `showUI` é definido como `True`, uma caixa de diálogo mostra o andamento da operação e inclui um **Cancelar** botão o usuário pode clicar para cancelar a operação. Como a caixa de diálogo não modal, ele não bloqueia a entrada do usuário para outras janelas no programa.  
  
 Se o servidor não responder dentro do intervalo especificado em `connectionTimeout`, a operação será cancelada e uma exceção será lançada.  
  
 `My.Computer.Network.UploadFile` saídas de informações de rastreamento ao habilitar o rastreamento de rede em seu aplicativo. Para obter mais informações, consulte [habilitando o rastreamento de rede](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  O protocolo FTP envia informações, incluindo senhas, em texto sem formatação e não deve ser usado para transmitir informações confidenciais.  
  
 A tabela a seguir lista um exemplo de uma tarefa que envolvem o `My.Computer.Network.UploadFile` método.  
  
|Para|Consulte|  
|-|-|  
|Carregar um arquivo|[Como Carregar um Arquivo](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 Este exemplo carrega o arquivo `Order.txt` para `http://www.cohowinery.com/uploads`.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 Este exemplo carrega o arquivo `Order.txt` para `http://www.cohowinery.com/uploads` sem fornecer um nome de usuário ou senha, mostra o andamento do upload e tem um intervalo de tempo limite de 500 milissegundos.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="connectionTimeout" /> é menor que ou igual a zero.</exception>
        <exception cref="T:System.InvalidOperationException">O <paramref name="address" /> não inclui um nome de arquivo.</exception>
        <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para executar uma operação de rede.</exception>
        <exception cref="T:System.TimeoutException">O servidor não responde dentro do <paramref name="connectionTimeout" /> especificado.</exception>
        <exception cref="T:System.Net.WebException">A solicitação foi negada pelo servidor Web de destino.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controla a capacidade de acessar arquivos e pastas. Enumeração associada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Controla as permissões relacionadas às interfaces de usuário e a área de transferência. Enumeração associada: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controla os direitos de acesso a recursos de Internet HTTP. Enumeração associada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Como baixar um arquivo no Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Como analisar demarcadores de arquivo no Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, string userName, string password, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, string userName, string password, bool showUI, int32 connectionTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String,System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri * string * string * bool * int -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password, showUI, connectionTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Caminho e nome do arquivo a ser carregado.</param>
        <param name="address">URL, endereço IP ou URI do servidor de destino.</param>
        <param name="userName">Nome de usuário a ser autenticado. O padrão é uma cadeia de caracteres vazia: <c>""</c>.</param>
        <param name="password">Senha para autenticação. O padrão é uma cadeia de caracteres vazia: <c>""</c>.</param>
        <param name="showUI"><see langword="True" /> para exibir o progresso da operação; caso contrário, <see langword="False" />. O padrão é <see langword="False" />.</param>
        <param name="connectionTimeout">O intervalo de tempo limite em milissegundos. O padrão é 100 segundos.</param>
        <summary>Envia o arquivo especificado para o endereço do host especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se `showUI` é definido como `True`, uma caixa de diálogo mostra o andamento da operação e inclui um **Cancelar** botão o usuário pode clicar para cancelar a operação. Como a caixa de diálogo não modal, ele não bloqueia a entrada do usuário para outras janelas no programa.  
  
 Se o servidor não responder dentro do intervalo especificado em `connectionTimeout`, a operação será cancelada e uma exceção será lançada.  
  
 `My.Computer.Network.UploadFile` saídas de informações de rastreamento ao habilitar o rastreamento de rede em seu aplicativo. Para obter mais informações, consulte [habilitando o rastreamento de rede](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  O protocolo FTP envia informações, incluindo senhas, em texto sem formatação e não deve ser usado para transmitir informações confidenciais.  
  
 A tabela a seguir lista um exemplo de uma tarefa que envolvem o `My.Computer.Network.UploadFile` método.  
  
|Para|Consulte|  
|-|-|  
|Carregar um arquivo|[Como Carregar um Arquivo](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 Este exemplo carrega o arquivo `Order.txt` para `http://www.cohowinery.com/uploads`.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 Este exemplo carrega o arquivo `Order.txt` para `http://www.cohowinery.com/uploads` sem fornecer um nome de usuário ou senha, mostra o andamento do upload e tem um intervalo de tempo limite de 500 milissegundos.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="connectionTimeout" /> é menor que ou igual a zero.</exception>
        <exception cref="T:System.InvalidOperationException">O <paramref name="address" /> não inclui um nome de arquivo.</exception>
        <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para executar uma operação de rede.</exception>
        <exception cref="T:System.TimeoutException">O servidor não responde dentro do <paramref name="connectionTimeout" /> especificado.</exception>
        <exception cref="T:System.Net.WebException">A solicitação foi negada pelo servidor Web de destino.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controla a capacidade de acessar arquivos e pastas. Enumeração associada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Controla as permissões relacionadas às interfaces de usuário e a área de transferência. Enumeração associada: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controla os direitos de acesso a recursos de Internet HTTP. Enumeração associada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Como baixar um arquivo no Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Como analisar demarcadores de arquivo no Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, string address, string userName, string password, bool showUI, int connectionTimeout, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, string address, string userName, string password, bool showUI, int32 connectionTimeout, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, System::String ^ address, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * string * string * string * bool * int * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password, showUI, connectionTimeout, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Caminho e nome do arquivo a ser carregado.</param>
        <param name="address">URL, endereço IP ou URI do servidor de destino.</param>
        <param name="userName">Nome de usuário a ser autenticado. O padrão é uma cadeia de caracteres vazia: <c>""</c>.</param>
        <param name="password">Senha para autenticação. O padrão é uma cadeia de caracteres vazia: <c>""</c>.</param>
        <param name="showUI">Se o progresso da operação deve ser exibido. O padrão é <see langword="False" />.</param>
        <param name="connectionTimeout">O intervalo de tempo limite em milissegundos. O padrão é 100 segundos.</param>
        <param name="onUserCancel">Ação a ser tomada quando o usuário clica em **Cancelar**. O padrão é <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
        <summary>Envia o arquivo especificado para o endereço do host especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se `showUI` é definido como `True`, uma caixa de diálogo mostra o andamento da operação e inclui um **Cancelar** botão o usuário pode clicar para cancelar a operação. Como a caixa de diálogo não modal, ele não bloqueia a entrada do usuário para outras janelas no programa.  
  
 Se o servidor não responder dentro do intervalo especificado em `connectionTimeout`, a operação será cancelada e uma exceção será lançada.  
  
 `My.Computer.Network.UploadFile` saídas de informações de rastreamento ao habilitar o rastreamento de rede em seu aplicativo. Para obter mais informações, consulte [habilitando o rastreamento de rede](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  O protocolo FTP envia informações, incluindo senhas, em texto sem formatação e não deve ser usado para transmitir informações confidenciais.  
  
 A tabela a seguir lista um exemplo de uma tarefa que envolvem o `My.Computer.Network.UploadFile` método.  
  
|Para|Consulte|  
|-|-|  
|Carregar um arquivo|[Como Carregar um Arquivo](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 Este exemplo carrega o arquivo `Order.txt` para `http://www.cohowinery.com/uploads`.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 Este exemplo carrega o arquivo `Order.txt` para `http://www.cohowinery.com/uploads` sem fornecer um nome de usuário ou senha, mostra o andamento do upload e tem um intervalo de tempo limite de 500 milissegundos.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="connectionTimeout" /> é menor que ou igual a zero.</exception>
        <exception cref="T:System.InvalidOperationException">O <paramref name="address" /> não inclui um nome de arquivo.</exception>
        <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para executar uma operação de rede.</exception>
        <exception cref="T:System.TimeoutException">O servidor não responde dentro do <paramref name="connectionTimeout" /> especificado.</exception>
        <exception cref="T:System.Net.WebException">A solicitação foi negada pelo servidor Web de destino.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controla a capacidade de acessar arquivos e pastas. Enumeração associada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Controla as permissões relacionadas às interfaces de usuário e a área de transferência. Enumeração associada: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controla os direitos de acesso a recursos de Internet HTTP. Enumeração associada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Como baixar um arquivo no Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Como analisar demarcadores de arquivo no Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, string userName, string password, bool showUI, int connectionTimeout, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, string userName, string password, bool showUI, int32 connectionTimeout, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri * string * string * bool * int * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password, showUI, connectionTimeout, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Caminho e nome do arquivo a ser carregado.</param>
        <param name="address">URL, endereço IP ou URI do servidor de destino.</param>
        <param name="userName">Nome de usuário a ser autenticado. O padrão é uma cadeia de caracteres vazia: <c>""</c>.</param>
        <param name="password">Senha para autenticação. O padrão é uma cadeia de caracteres vazia: <c>""</c>.</param>
        <param name="showUI">Se o progresso da operação deve ser exibido. O padrão é <see langword="False" />.</param>
        <param name="connectionTimeout">O intervalo de tempo limite em milissegundos. O padrão é 100 segundos.</param>
        <param name="onUserCancel">Ação a ser tomada quando o usuário clica em **Cancelar**. O padrão é <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
        <summary>Envia o arquivo especificado para o endereço do host especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se `showUI` é definido como `True`, uma caixa de diálogo mostra o andamento da operação e inclui um **Cancelar** botão o usuário pode clicar para cancelar a operação. Como a caixa de diálogo não modal, ele não bloqueia a entrada do usuário para outras janelas no programa.  
  
 Se o servidor não responder dentro do intervalo especificado em `connectionTimeout`, a operação será cancelada e uma exceção será lançada.  
  
 `My.Computer.Network.UploadFile` saídas de informações de rastreamento ao habilitar o rastreamento de rede em seu aplicativo. Para obter mais informações, consulte [habilitando o rastreamento de rede](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  O protocolo FTP envia informações, incluindo senhas, em texto sem formatação e não deve ser usado para transmitir informações confidenciais.  
  
 A tabela a seguir lista um exemplo de uma tarefa que envolvem o `My.Computer.Network.UploadFile` método.  
  
|Para|Consulte|  
|-|-|  
|Carregar um arquivo|[Como Carregar um Arquivo](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 Este exemplo carrega o arquivo `Order.txt` para `http://www.cohowinery.com/uploads`.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 Este exemplo carrega o arquivo `Order.txt` para `http://www.cohowinery.com/uploads` sem fornecer um nome de usuário ou senha, mostra o andamento do upload e tem um intervalo de tempo limite de 500 milissegundos.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="connectionTimeout" /> é menor que ou igual a zero.</exception>
        <exception cref="T:System.InvalidOperationException">O <paramref name="address" /> não inclui um nome de arquivo.</exception>
        <exception cref="T:System.Security.SecurityException">O usuário não tem as permissões necessárias para executar uma operação de rede.</exception>
        <exception cref="T:System.TimeoutException">O servidor não responde dentro do <paramref name="connectionTimeout" /> especificado.</exception>
        <exception cref="T:System.Net.WebException">A solicitação foi negada pelo servidor Web de destino.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controla a capacidade de acessar arquivos e pastas. Enumeração associada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Controla as permissões relacionadas às interfaces de usuário e a área de transferência. Enumeração associada: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controla os direitos de acesso a recursos de Internet HTTP. Enumeração associada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Como baixar um arquivo no Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Como analisar demarcadores de arquivo no Visual Basic</related>
      </Docs>
    </Member>
  </Members>
</Type>