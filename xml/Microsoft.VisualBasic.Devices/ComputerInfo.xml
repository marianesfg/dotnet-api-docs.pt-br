<Type Name="ComputerInfo" FullName="Microsoft.VisualBasic.Devices.ComputerInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="777b6f4c6f038060a1e04201612acb8db949cf09" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48734760" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ComputerInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ComputerInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Devices.ComputerInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class ComputerInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComputerInfo" />
  <TypeSignature Language="F#" Value="type ComputerInfo = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(Microsoft.VisualBasic.Devices.ComputerInfo/ComputerInfoDebugView))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="f9274-101">Fornece propriedades para obter informações sobre memória, assemblies carregados, nome e sistema operacional do computador.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f9274-101">Provides properties for getting information about the computer's memory, loaded assemblies, name, and operating system.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9274-102">As propriedades expostas pelo `My.Computer.Info` objeto retornam informações sobre o computador do qual o aplicativo é implantado, conforme determinado no tempo de execução.</span><span class="sxs-lookup"><span data-stu-id="f9274-102">The properties exposed by the `My.Computer.Info` object return information about the computer from which the application is deployed, as determined at run time.</span></span> <span data-ttu-id="f9274-103">Normalmente, esses dados é diferente do que está disponível no computador de desenvolvimento.</span><span class="sxs-lookup"><span data-stu-id="f9274-103">Typically, this data differs from what was available on the development computer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9274-104">Este exemplo usa o `My.Computer.Info.AvailablePhysicalMemory` propriedade para exibir a quantidade de memória física disponível para o computador no qual o código é executado.</span><span class="sxs-lookup"><span data-stu-id="f9274-104">This example uses the `My.Computer.Info.AvailablePhysicalMemory` property to display the amount of available physical memory for the computer on which the code runs.</span></span>  
  
 [!code-vb[VbVbalrMyComputer#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#2)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">
      <span data-ttu-id="f9274-105">Objetos (Visual Basic)</span>
      <span class="sxs-lookup">
        <span data-stu-id="f9274-105">Objects (Visual Basic)</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComputerInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.ComputerInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComputerInfo();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f9274-106">Inicializa uma nova instância da classe <see cref="T:Microsoft.VisualBasic.Devices.ComputerInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9274-106">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Devices.ComputerInfo" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">
          <span data-ttu-id="f9274-107">Objetos (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9274-107">Objects (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="AvailablePhysicalMemory">
      <MemberSignature Language="C#" Value="public ulong AvailablePhysicalMemory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int64 AvailablePhysicalMemory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.ComputerInfo.AvailablePhysicalMemory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AvailablePhysicalMemory As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::UInt64 AvailablePhysicalMemory { System::UInt64 get(); };" />
      <MemberSignature Language="F#" Value="member this.AvailablePhysicalMemory : uint64" Usage="Microsoft.VisualBasic.Devices.ComputerInfo.AvailablePhysicalMemory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9274-108">Obtém a quantidade total de memória física livre no computador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9274-108">Gets the total amount of free physical memory for the computer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9274-109">Um <see langword="ULong" /> que contém o número de bytes de memória física livre no computador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9274-109">A <see langword="ULong" /> containing the number of bytes of free physical memory for the computer.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9274-110">O `My.Computer.Info.AvailablePhysicalMemory` propriedade requer o Windows XP, Windows 2000 Professional, Windows Server 2003, Windows 2000 Server ou Windows Vista.</span><span class="sxs-lookup"><span data-stu-id="f9274-110">The `My.Computer.Info.AvailablePhysicalMemory` property requires Windows XP, Windows 2000 Professional, Windows Server 2003, Windows 2000 Server, or Windows Vista.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9274-111">Este exemplo usa o `My.Computer.Info.AvailablePhysicalMemory` propriedade para exibir a quantidade de memória física disponível para o computador no qual o código é executado.</span><span class="sxs-lookup"><span data-stu-id="f9274-111">This example uses the `My.Computer.Info.AvailablePhysicalMemory` property to display the amount of available physical memory for the computer on which the code runs.</span></span>  
  
 [!code-vb[VbVbalrMyComputer#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">
          <span data-ttu-id="f9274-112">O aplicativo não pode obter o status da memória.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9274-112">The application cannot obtain the memory status.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">
          <span data-ttu-id="f9274-113">Objetos (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9274-113">Objects (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="AvailableVirtualMemory">
      <MemberSignature Language="C#" Value="public ulong AvailableVirtualMemory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int64 AvailableVirtualMemory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.ComputerInfo.AvailableVirtualMemory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AvailableVirtualMemory As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::UInt64 AvailableVirtualMemory { System::UInt64 get(); };" />
      <MemberSignature Language="F#" Value="member this.AvailableVirtualMemory : uint64" Usage="Microsoft.VisualBasic.Devices.ComputerInfo.AvailableVirtualMemory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9274-114">Obtém a quantidade total de espaço livre de endereço virtual do computador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9274-114">Gets the total amount of the computer's free virtual address space.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9274-115">Um <see langword="ULong" /> que contém o número de bytes do espaço livre do endereço virtual do computador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9274-115">A <see langword="ULong" /> containing the number of bytes of the computer's free virtual address space.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9274-116">O `My.Computer.Info.AvailableVirtualMemory` propriedade requer o Windows XP, Windows 2000 Professional, Windows Server 2003, Windows 2000 Server ou Windows Vista.</span><span class="sxs-lookup"><span data-stu-id="f9274-116">The `My.Computer.Info.AvailableVirtualMemory` property requires Windows XP, Windows 2000 Professional, Windows Server 2003, Windows 2000 Server, or Windows Vista.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9274-117">Este exemplo usa o `My.Computer.Info.AvailableVirtualMemory` propriedade para exibir a quantidade de memória virtual disponível para o computador no qual o código é executado.</span><span class="sxs-lookup"><span data-stu-id="f9274-117">This example uses the `My.Computer.Info.AvailableVirtualMemory` property to display the amount of available virtual memory for the computer on which the code runs.</span></span>  
  
 [!code-vb[VbVbalrMyComputer#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">
          <span data-ttu-id="f9274-118">O aplicativo não pode obter o status da memória.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9274-118">The application cannot obtain the memory status.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">
          <span data-ttu-id="f9274-119">Objetos (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9274-119">Objects (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="InstalledUICulture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo InstalledUICulture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo InstalledUICulture" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.ComputerInfo.InstalledUICulture" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InstalledUICulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ InstalledUICulture { System::Globalization::CultureInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InstalledUICulture : System.Globalization.CultureInfo" Usage="Microsoft.VisualBasic.Devices.ComputerInfo.InstalledUICulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9274-120">Obtém a cultura de interface do usuário atual instalada com o sistema operacional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9274-120">Gets the current UI culture installed with the operating system.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9274-121">Um objeto <see cref="T:System.Globalization.CultureInfo" /> representa a cultura de interface do usuário instalada no computador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9274-121">A <see cref="T:System.Globalization.CultureInfo" /> object represents the UI culture installed on the computer.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9274-122">O `My.Computer.Info.InstalledUICulture` propriedade tem o mesmo comportamento que o <xref:System.Globalization.CultureInfo.InstalledUICulture%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="f9274-122">The `My.Computer.Info.InstalledUICulture` property has the same behavior as the <xref:System.Globalization.CultureInfo.InstalledUICulture%2A> property.</span></span>  
  
 <span data-ttu-id="f9274-123">Em um sistema operacional localizado, como japonês Windows 2000 Professional, essa propriedade retorna a cultura do sistema operacional.</span><span class="sxs-lookup"><span data-stu-id="f9274-123">In a localized operating system, such as Japanese Windows 2000 Professional, this property returns the culture of the operating system.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9274-124">Este exemplo usa o `My.Computer.Info.InstalledUICulture` propriedade para exibir o nome da cultura de interface do usuário do sistema operacional.</span><span class="sxs-lookup"><span data-stu-id="f9274-124">This example uses the `My.Computer.Info.InstalledUICulture` property to display the name of the operating system's UI culture.</span></span>  
  
 [!code-vb[VbVbalrMyComputer#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">
          <span data-ttu-id="f9274-125">Objetos (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9274-125">Objects (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="OSFullName">
      <MemberSignature Language="C#" Value="public string OSFullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OSFullName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.ComputerInfo.OSFullName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OSFullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OSFullName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OSFullName : string" Usage="Microsoft.VisualBasic.Devices.ComputerInfo.OSFullName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9274-126">Obtém o nome completo do sistema operacional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9274-126">Gets the full operating system name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9274-127">Um <see langword="String" /> que contém o nome do sistema operacional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9274-127">A <see langword="String" /> containing the operating-system name.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9274-128">Essa propriedade retorna informações detalhadas sobre o nome do sistema operacional se o Windows Management Instrumentation (WMI) está instalado no computador.</span><span class="sxs-lookup"><span data-stu-id="f9274-128">This property returns detailed information about the operating system name if Windows Management Instrumentation (WMI) is installed on the computer.</span></span> <span data-ttu-id="f9274-129">Caso contrário, essa propriedade retornará a mesma cadeia de caracteres como o `My.Computer.Info.OSPlatform` propriedade, que fornece menos informações detalhadas que o WMI pode fornecer.</span><span class="sxs-lookup"><span data-stu-id="f9274-129">Otherwise, this property returns the same string as the `My.Computer.Info.OSPlatform` property, which provides less detailed information than WMI can provide.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9274-130">Este exemplo usa o `My.Computer.Info.OSFullName` propriedade para exibir o nome do computador do sistema operacional.</span><span class="sxs-lookup"><span data-stu-id="f9274-130">This example uses the `My.Computer.Info.OSFullName` property to display the name of the computer's operating system.</span></span>  
  
 [!code-vb[VbVbalrMyComputer#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="f9274-131">O código de chamada não tem confiança total.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9274-131">The calling code does not have full trust.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="f9274-132">Controla a capacidade de acessar arquivos e pastas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9274-132">Controls the ability to access files and folders.</span>
          </span>
          <span data-ttu-id="f9274-133">Enumeração associada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9274-133">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span>
          </span>
        </permission>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">
          <span data-ttu-id="f9274-134">Objetos (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9274-134">Objects (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="OSPlatform">
      <MemberSignature Language="C#" Value="public string OSPlatform { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OSPlatform" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.ComputerInfo.OSPlatform" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OSPlatform As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OSPlatform { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OSPlatform : string" Usage="Microsoft.VisualBasic.Devices.ComputerInfo.OSPlatform" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9274-135">Obtém o identificador de plataforma do sistema operacional do computador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9274-135">Gets the platform identifier for the operating system of the computer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9274-136">Um <see langword="String" /> que contém o identificador de plataforma do sistema operacional do computador, escolhido pelos nomes de membro da enumeração <see cref="T:System.PlatformID" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9274-136">A <see langword="String" /> containing the platform identifier for the operating system of the computer, chosen from the member names of the <see cref="T:System.PlatformID" /> enumeration.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9274-137">O `My.Computer.Info.OSPlatform` propriedade fornece uma funcionalidade semelhante para o <xref:System.OperatingSystem.Platform%2A> propriedade do objeto retornado pelo <xref:System.Environment.OSVersion%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="f9274-137">The `My.Computer.Info.OSPlatform` property provides functionality similar to the <xref:System.OperatingSystem.Platform%2A> property of the object returned by the <xref:System.Environment.OSVersion%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9274-138">Este exemplo usa o `My.Computer.Info.OSPlatform` propriedade para exibir a plataforma do computador do sistema operacional.</span><span class="sxs-lookup"><span data-stu-id="f9274-138">This example uses the `My.Computer.Info.OSPlatform` property to display the platform of the computer's operating system.</span></span>  
  
 [!code-vb[VbVbalrMyComputer#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ExecutionEngineException">
          <span data-ttu-id="f9274-139">O aplicativo não pode obter as informações de plataforma do sistema operacional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9274-139">The application cannot obtain the operating-system platform information.</span>
          </span>
        </exception>
        <altmember cref="P:System.OperatingSystem.Platform" />
        <altmember cref="P:System.Environment.OSVersion" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">
          <span data-ttu-id="f9274-140">Objetos (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9274-140">Objects (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="OSVersion">
      <MemberSignature Language="C#" Value="public string OSVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OSVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.ComputerInfo.OSVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OSVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OSVersion { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OSVersion : string" Usage="Microsoft.VisualBasic.Devices.ComputerInfo.OSVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9274-141">Obtém a versão do sistema operacional do computador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9274-141">Gets the version of the computer's operating system.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9274-142">Uma <see langword="String" /> que contém o número de versão atual do sistema operacional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9274-142">A <see langword="String" /> containing the current version number of the operating system.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9274-143">O `My.Computer.Info.OSVersion` propriedade formata a versão como "Major".</span><span class="sxs-lookup"><span data-stu-id="f9274-143">The `My.Computer.Info.OSVersion` property formats the version as "major.minor.build.revision".</span></span>  
  
 <span data-ttu-id="f9274-144">O `My.Computer.Info.OSVersion` propriedade fornece uma funcionalidade semelhante para o <xref:System.OperatingSystem.Version%2A> propriedade do objeto retornado pelo <xref:System.Environment.OSVersion%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="f9274-144">The `My.Computer.Info.OSVersion` property provides functionality similar to the <xref:System.OperatingSystem.Version%2A> property of the object returned by the <xref:System.Environment.OSVersion%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9274-145">Este exemplo usa o `My.Computer.Info.OSVersion` propriedade para exibir a versão do computador do sistema operacional.</span><span class="sxs-lookup"><span data-stu-id="f9274-145">This example uses the `My.Computer.Info.OSVersion` property to display the version of the computer's operating system.</span></span>  
  
 [!code-vb[VbVbalrMyComputer#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ExecutionEngineException">
          <span data-ttu-id="f9274-146">O aplicativo não pode obter as informações de versão do sistema operacional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9274-146">The application cannot obtain the operating-system version information.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">
          <span data-ttu-id="f9274-147">Objetos (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9274-147">Objects (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="TotalPhysicalMemory">
      <MemberSignature Language="C#" Value="public ulong TotalPhysicalMemory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int64 TotalPhysicalMemory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.ComputerInfo.TotalPhysicalMemory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TotalPhysicalMemory As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::UInt64 TotalPhysicalMemory { System::UInt64 get(); };" />
      <MemberSignature Language="F#" Value="member this.TotalPhysicalMemory : uint64" Usage="Microsoft.VisualBasic.Devices.ComputerInfo.TotalPhysicalMemory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9274-148">Obtém a quantidade total de memória física no computador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9274-148">Gets the total amount of physical memory for the computer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9274-149">Um <see langword="ULong" /> que contém o número de bytes de memória física no computador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9274-149">A <see langword="ULong" /> containing the number of bytes of physical memory for the computer.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9274-150">O `My.Computer.Info.TotalPhysicalMemory` propriedade requer o Windows XP, Windows 2000 Professional, Windows Server 2003, Windows 2000 Server ou Windows Vista...</span><span class="sxs-lookup"><span data-stu-id="f9274-150">The `My.Computer.Info.TotalPhysicalMemory` property requires Windows XP, Windows 2000 Professional, Windows Server 2003, Windows 2000 Server, or Windows Vista..</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9274-151">Este exemplo usa o `My.Computer.Info.TotalPhysicalMemory` propriedade para exibir a quantidade total de memória física para o computador no qual o código é executado.</span><span class="sxs-lookup"><span data-stu-id="f9274-151">This example uses the `My.Computer.Info.TotalPhysicalMemory` property to display the total amount of physical memory for the computer on which the code runs.</span></span>  
  
 [!code-vb[VbVbalrMyComputer#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">
          <span data-ttu-id="f9274-152">O aplicativo não pode obter o status da memória.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9274-152">The application cannot obtain the memory status.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">
          <span data-ttu-id="f9274-153">Objetos (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9274-153">Objects (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="TotalVirtualMemory">
      <MemberSignature Language="C#" Value="public ulong TotalVirtualMemory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int64 TotalVirtualMemory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.ComputerInfo.TotalVirtualMemory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TotalVirtualMemory As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::UInt64 TotalVirtualMemory { System::UInt64 get(); };" />
      <MemberSignature Language="F#" Value="member this.TotalVirtualMemory : uint64" Usage="Microsoft.VisualBasic.Devices.ComputerInfo.TotalVirtualMemory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9274-154">Obtém a quantidade total de espaço de endereço virtual disponível para o computador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9274-154">Gets the total amount of virtual address space available for the computer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9274-155">Um <see langword="ULong" /> que contém o número de bytes de espaço de endereço virtual disponível para o computador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9274-155">A <see langword="ULong" /> containing the number of bytes of virtual address space available for the computer.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9274-156">O `My.Computer.Info.TotalVirtualMemory` propriedade requer o Windows XP, Windows 2000 Professional, Windows Server 2003, Windows 2000 Server ou Windows Vista...</span><span class="sxs-lookup"><span data-stu-id="f9274-156">The `My.Computer.Info.TotalVirtualMemory` property requires Windows XP, Windows 2000 Professional, Windows Server 2003, Windows 2000 Server, or Windows Vista..</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9274-157">Este exemplo usa o `My.Computer.Info.TotalVirtualMemory` propriedade para exibir a quantidade total de memória virtual para o computador no qual o código é executado.</span><span class="sxs-lookup"><span data-stu-id="f9274-157">This example uses the `My.Computer.Info.TotalVirtualMemory` property to display the total amount of virtual memory for the computer on which the code runs.</span></span>  
  
 [!code-vb[VbVbalrMyComputer#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">
          <span data-ttu-id="f9274-158">O aplicativo não pode obter o status da memória.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9274-158">The application cannot obtain the memory status.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">
          <span data-ttu-id="f9274-159">Objetos (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9274-159">Objects (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
  </Members>
</Type>