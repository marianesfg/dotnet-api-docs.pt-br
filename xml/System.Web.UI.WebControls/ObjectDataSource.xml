<Type Name="ObjectDataSource" FullName="System.Web.UI.WebControls.ObjectDataSource">
  <Metadata><Meta Name="ms.openlocfilehash" Value="df4d6ed9bb42e90109053c0901178ec37b3d6e71" /><Meta Name="ms.sourcegitcommit" Value="adc8598fd19d91438cacaa8fa7ce613e28c8218e" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="12/11/2018" /><Meta Name="ms.locfileid" Value="53230202" /></Metadata><TypeSignature Language="C#" Value="public class ObjectDataSource : System.Web.UI.DataSourceControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ObjectDataSource extends System.Web.UI.DataSourceControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ObjectDataSource" />
  <TypeSignature Language="VB.NET" Value="Public Class ObjectDataSource&#xA;Inherits DataSourceControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectDataSource : System::Web::UI::DataSourceControl" />
  <TypeSignature Language="F#" Value="type ObjectDataSource = class&#xA;    inherit DataSourceControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.DataSourceControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultEvent("Selecting")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultProperty("TypeName")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ObjectDataSourceDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.ObjectDataSource))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ObjectDataSourceDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa um objeto comercial que fornece dados a controles com associação de dados em arquiteturas de aplicativo Web multicamadas.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Neste tópico:  
  
-   [Introdução](#introduction)  
  
-   [Finalidade](#purpose)  
  
-   [Recuperando dados](#retrieving_data)  
  
-   [Executando operações de dados](#performing_data_operations)  
  
-   [Filtrando Dados](#filtering_data)  
  
-   [Cache](#caching)  
  
-   [Recursos](#features)  
  
-   [Exibição de dados](#data_view)  
  
-   [Usando LINQ to SQL](#using_linq_to_sql)  
  
-   [Sintaxe declarativa](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Introdução  
 Um <xref:System.Web.UI.WebControls.ObjectDataSource> controle funciona com uma classe que você cria. Criar métodos que recuperam e atualizam dados, e você fornecer os nomes desses métodos para o <xref:System.Web.UI.WebControls.ObjectDataSource> controle na marcação. Durante o processamento ou processamento de postagem, o <xref:System.Web.UI.WebControls.ObjectDataSource> chama os métodos que você especificou.  
  
 Não há nenhum processamento visual do <xref:System.Web.UI.WebControls.ObjectDataSource> controle. Como resultado, o <xref:System.Web.UI.WebControls.ObjectDataSource> não oferece suporte a recursos visuais, como o <xref:System.Web.UI.DataSourceControl.EnableTheming%2A> ou <xref:System.Web.UI.DataSourceControl.SkinID%2A> propriedade.  
  
<a name="purpose"></a>   
## <a name="purpose"></a>Finalidade  
 Uma prática de design de aplicativo muito comum é separar a camada de apresentação da lógica de negócios e encapsular a lógica de negócios em objetos comerciais. Esses objetos comerciais formam uma camada distinta entre a camada de apresentação e a camada de dados, resultando em uma arquitetura de aplicativo de três camadas. O <xref:System.Web.UI.WebControls.ObjectDataSource> controle permite aos desenvolvedores usar um controle de fonte de dados do ASP.NET, mantendo sua arquitetura de aplicativo de três camadas.  
  
 O <xref:System.Web.UI.WebControls.ObjectDataSource> controle usa reflexão para criar instâncias de objetos de negócios e chamar métodos neles para recuperar, atualizar, inserir e excluir dados. O <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> propriedade identifica o nome da classe que o <xref:System.Web.UI.WebControls.ObjectDataSource> funciona com. O <xref:System.Web.UI.WebControls.ObjectDataSource> controle cria e destrói uma instância da classe para cada chamada de método; ele não mantém o objeto na memória para o tempo de vida da solicitação da Web. Isso é uma consideração séria se o objeto comercial que você use requer muitos recursos ou caro de criar e destruir. Usar um objeto caro pode não ser uma opção de design ideal, mas você pode controlar o ciclo de vida do objeto usando o <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>, <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>, e <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> eventos.  
  
> [!NOTE]
>  Os métodos que são identificados pela <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>, e <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> as propriedades podem ser métodos de instância ou `static` (`Shared` no Visual Basic) métodos. Se os métodos são `static` (`Shared` no Visual Basic), não é possível criar uma instância do objeto comercial e o <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>, <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>, e <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> eventos não são gerados.  
  
<a name="retrieving_data"></a>   
## <a name="retrieving-data"></a>Recuperando dados  
 Para recuperar dados de um objeto comercial, definir o <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propriedade para o nome do método que recupera dados. Se o método não retorna um <xref:System.Collections.IEnumerable> ou <xref:System.Data.DataSet> do objeto, o objeto é encapsulado pelo tempo de execução em um <xref:System.Collections.IEnumerable> coleção. Se a assinatura do método tiver parâmetros, você pode adicionar <xref:System.Web.UI.WebControls.Parameter> objetos para o <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> coleção e, em seguida, associá-las para os valores que você deseja passar para o método que é especificado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propriedade. Para que o <xref:System.Web.UI.WebControls.ObjectDataSource> de controle para usar os parâmetros, os parâmetros devem corresponder os nomes e tipos dos parâmetros na assinatura do método. Para obter mais informações, consulte [usando parâmetros com o controle ObjectDataSource](https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4).  
  
 O <xref:System.Web.UI.WebControls.ObjectDataSource> controle recupera dados sempre que o <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método é chamado. Esse método fornece acesso programático para o método que é especificado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propriedade. O método que é especificado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propriedade é chamada automaticamente por todos os controles que estão associados aos <xref:System.Web.UI.WebControls.ObjectDataSource> quando seus `DataBind` método é chamado. Se você definir o `DataSourceID` propriedade de um controle associado a dados, o controle automaticamente se associa aos dados da fonte de dados, conforme necessário. Definindo o `DataSourceID` propriedade é o método recomendado para associação de um <xref:System.Web.UI.WebControls.ObjectDataSource> controle para um controle associado a dados. Como alternativa, você pode definir as `DataSource` propriedade, mas, em seguida, você deve chamar explicitamente o `DataBind` método do controle associado a dados. Você pode chamar o <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método por meio de programação a qualquer momento para recuperar dados.  
  
 Para obter mais informações sobre controles ligados a dados de associação para controles de fonte de dados, consulte [associando a dados usando um controle de fonte de dados](https://msdn.microsoft.com/library/e41adfff-8fb8-449e-9cd1-9bd49788c5f7).  
  
<a name="performing_data_operations"></a>   
## <a name="performing-data-operations"></a>Executando operações de dados  
 Dependendo dos recursos da empresa do objeto que o <xref:System.Web.UI.WebControls.ObjectDataSource> controle funciona com, você pode executar operações de dados, como atualizações, inserções e exclusões. Para executar essas operações de dados, defina o nome do método apropriado e quaisquer parâmetros associados para a operação que você deseja executar. Por exemplo, para uma operação de atualização, defina as <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> propriedade para o nome do método objeto comercial que executa atualizações e adicionar qualquer necessários parâmetros para o <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> coleção. Se o <xref:System.Web.UI.WebControls.ObjectDataSource> controle está associado um controle associado a dados, os parâmetros são adicionados pelo controle associado a dados. Nesse caso, você precisa garantir que os nomes de parâmetro do método correspondam os nomes de campo no controle associado a dados. A atualização é executada quando o <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> método é chamado explicitamente por seu código ou automaticamente por um controle associado a dados. O mesmo padrão geral é seguido para <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> e <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> operações. Objetos de negócios são que supostamente executa esses tipos de um registro de operações de dados por vez, em vez de em lote.  
  
<a name="filtering_data"></a>   
## <a name="filtering-data"></a>Filtrando dados  
 O <xref:System.Web.UI.WebControls.ObjectDataSource> controle pode filtrar os dados recuperados com o <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propriedade, se os dados são retornados como um <xref:System.Data.DataSet> ou <xref:System.Data.DataTable> objeto. Você pode definir as <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> sintaxe de cadeia de caracteres de propriedade para uma expressão de filtragem usando um formato e associar os valores na expressão para parâmetros que são especificados no <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> coleção.  
  
<a name="caching"></a>   
## <a name="caching"></a>Cache  
 Embora o <xref:System.Web.UI.WebControls.ObjectDataSource> não mantém a instância do objeto comercial em várias solicitações, ele pode armazenar em cache o resultado de chamar o método identificado pela <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propriedade. Enquanto os dados estão armazenados em cache, chamadas subsequentes para o <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método retorna os dados em cache em vez de criar o objeto comercial e chamar seu <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> usando reflexão. O cache permite que você evite criar o objeto e chamando seu método de dados às custas de memória no servidor Web. O <xref:System.Web.UI.WebControls.ObjectDataSource> automaticamente armazena em cache os dados quando o <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> estiver definida como `true`e o <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> estiver definida como o número de segundos que o cache armazena os dados antes do cache é descartado. Você também pode especificar uma <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> propriedade e um opcional <xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A> propriedade. O <xref:System.Web.UI.WebControls.ObjectDataSource> controle permite armazenar em cache todos os tipos de dados, mas você não deve armazenar em cache objetos que mantêm o estado que não pode ser compartilhado para várias solicitações de serviço ou recursos (por exemplo, um aberto <xref:System.Data.SqlClient.SqlDataReader> objeto), pois a mesma instância do objeto será usado para várias solicitações de serviço.  
  
<a name="features"></a>   
## <a name="features"></a>Recursos  
 A tabela a seguir descreve os recursos do <xref:System.Web.UI.WebControls.ObjectDataSource> controle.  
  
|Recurso|Requisitos|  
|----------------|------------------|  
|Selecionando|Defina a <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propriedade para o nome da empresa método que seleciona dados de objeto e inclui quaisquer parâmetros necessários no <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> coleção programaticamente ou por meio de um controle associado a dados.|  
|Classificação|Defina a <xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A> propriedade para o nome do parâmetro no <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> método que executa os critérios de classificação.|  
|Filtragem|Defina a <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> propriedade para uma expressão de filtragem e, opcionalmente, adicione quaisquer parâmetros para o <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> coleção para filtrar os dados quando o <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método é chamado. O método especificado pela <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propriedade deverá retornar um <xref:System.Data.DataSet> ou <xref:System.Data.DataTable>.|  
|Paginação|Paginação de fonte de dados terá suporte, se o <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> método contém parâmetros para o número máximo de registros a serem recuperados e o índice do primeiro registro a recuperar. Os nomes desses parâmetros devem ser definidos a <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> e <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> propriedades, respectivamente. Um controle associado a dados pode não ser capaz de executar a paginação em si, mesmo se o <xref:System.Web.UI.WebControls.ObjectDataSource> controle não dá suporte a paginação diretamente no método especificado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propriedade. O requisito para o controle associado a dados ser capaz de fazer isso é que o método especificado pela <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propriedade retorna um objeto que implementa o <xref:System.Collections.ICollection> interface.|  
|Atualizando|Defina a <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> propriedade para o nome da empresa método que atualiza os dados de objeto e inclui quaisquer parâmetros necessários no <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> coleção.|  
|Excluindo|Defina a <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> propriedade para o nome da empresa método ou função que exclui dados de objeto e inclui quaisquer parâmetros necessários no <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> coleção.|  
|Inserindo|Defina a <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> propriedade para o nome da empresa método ou função que insere dados de objeto e inclui quaisquer parâmetros necessários no <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> coleção.|  
|Cache|Defina as <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> propriedade para `true`e o <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> e <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> propriedades de acordo com o comportamento de cache que você deseja que seus dados em cache.|  
  
> [!NOTE]
>  Quando você usa o <xref:System.Web.UI.WebControls.ObjectDataSource> classe para atualizar ou inserir dados, cadeias de caracteres que são inseridos no cliente não são automaticamente convertidas do formato de cultura do cliente para o formato de cultura do servidor. Por exemplo, a cultura do cliente pode especificar DD/MM/AAAA como o formato de data e o formato de data no servidor pode ser DD/MM/AAAA. Nesse caso, 5 de outubro de 2009, serão inseridas em um <xref:System.Web.UI.WebControls.TextBox> controlar como 10/5/2009, mas poderia ser interpretado como 10 de maio de 2009. 15 de outubro de 2009, deve ser inserido como 15/10/2009 e deve ser rejeitado como uma data inválida.  
  
<a name="data_view"></a>   
## <a name="data-view"></a>Exibição de dados  
 Assim como acontece com todos os controles de fonte de dados, o <xref:System.Web.UI.WebControls.ObjectDataSource> controle está associado uma classe de exibição da fonte de dados. Enquanto o <xref:System.Web.UI.WebControls.ObjectDataSource> controle é a interface que o desenvolvedor de página usa para trabalhar com dados, o <xref:System.Web.UI.WebControls.ObjectDataSourceView> classe é a interface que controles ligados a dados funcionam com. Além disso, o <xref:System.Web.UI.WebControls.ObjectDataSourceView> classe descreve os recursos do controle de fonte de dados e executa o trabalho real. O <xref:System.Web.UI.WebControls.ObjectDataSource> controle tem apenas um associado <xref:System.Web.UI.WebControls.ObjectDataSourceView>, e é sempre denominado `DefaultView`. Enquanto o <xref:System.Web.UI.WebControls.ObjectDataSourceView> objeto é exposto pelo <xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A> método, muitas das suas propriedades e métodos são encapsulados e expostas diretamente pelo <xref:System.Web.UI.WebControls.ObjectDataSource> controle. Nos bastidores, o <xref:System.Web.UI.WebControls.ObjectDataSourceView> objeto executa todas as operações de dados, incluindo recuperando, inserindo, atualizando, excluindo, filtrando e classificando os dados. Para obter mais informações, consulte <xref:System.Web.UI.WebControls.ObjectDataSourceView>.  
  
<a name="using_linq_to_sql"></a>   
## <a name="using-linq-to-sql"></a>Usando LINQ to SQL  
 Você pode usar o <xref:System.Web.UI.WebControls.ObjectDataSource> controle com uma classe LINQ to SQL. Para fazer isso, você deve definir o <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> propriedade com o nome da classe de contexto de dados. Você também definir a <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>, e <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> métodos para os métodos na classe de contexto de dados que executam as operações correspondentes. Você deve criar um manipulador de eventos para o <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> evento para cancelar o descarte da classe de contexto de dados. Esta etapa é necessária porque LINQ to SQL dá suporte à execução adiada, enquanto o <xref:System.Web.UI.WebControls.ObjectDataSource> controle tenta descartar o contexto de dados após a operação de seleção. Para obter mais informações sobre como criar LINQ to SQL classes, consulte [como: Criar Classes LINQ to SQL em um projeto Web](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081). Para obter um exemplo de como cancelar o descarte de uma classe de contexto de dados, consulte o <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> eventos.  
  
## <a name="using-the-entity-framework"></a>Usando o Entity Framework  
 Você também pode usar o <xref:System.Web.UI.WebControls.ObjectDataSource> controle com o Entity Framework. Para obter mais informações, consulte [usando o Entity Framework e o controle ObjectDataSource](https://go.microsoft.com/fwlink/?LinkId=209117).  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Sintaxe declarativa  
  
```  
<asp:ObjectDataSource  
    CacheDuration="string|Infinite"  
    CacheExpirationPolicy="Absolute|Sliding"  
    CacheKeyDependency="string"  
    ConflictDetection="OverwriteChanges|CompareAllValues"  
    ConvertNullToDBNull="True|False"  
    DataObjectTypeName="string"  
    DeleteMethod="string"  
    EnableCaching="True|False"  
    EnablePaging="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    FilterExpression="string"  
    ID="string"  
    InsertMethod="string"  
    MaximumRowsParameterName="string"  
    OldValuesParameterFormatString="string"  
    OnDataBinding="DataBinding event handler"  
    OnDeleted="Deleted event handler"  
    OnDeleting="Deleting event handler"  
    OnDisposed="Disposed event handler"  
    OnFiltering="Filtering event handler"  
    OnInit="Init event handler"  
    OnInserted="Inserted event handler"  
    OnInserting="Inserting event handler"  
    OnLoad="Load event handler"  
    OnObjectCreated="ObjectCreated event handler"  
    OnObjectCreating="ObjectCreating event handler"  
    OnObjectDisposing="ObjectDisposing event handler"  
    OnPreRender="PreRender event handler"  
    OnSelected="Selected event handler"  
    OnSelecting="Selecting event handler"  
    OnUnload="Unload event handler"  
    OnUpdated="Updated event handler"  
    OnUpdating="Updating event handler"  
    runat="server"  
    SelectCountMethod="string"  
    SelectMethod="string"  
    SkinID="string"  
    SortParameterName="string"  
    SqlCacheDependency="string"  
    StartRowIndexParameterName="string"  
    TypeName="string"  
    UpdateMethod="string"  
    Visible="True|False"  
>  
        <DeleteParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </DeleteParameters>  
        <FilterParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </FilterParameters>  
        <InsertParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </InsertParameters>  
        <SelectParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </SelectParameters>  
        <UpdateParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </UpdateParameters>  
</asp:ObjectDataSource>  
```  
  
   
  
## Examples  
 Um projeto de site da Web do Visual Studio com o código-fonte está disponível para acompanhar este tópico: [Baixe o](https://code.msdn.microsoft.com/Project/Download/FileDownload.aspx?ProjectName=aspnetmsdnexamples&DownloadId=14838).  
  
 Esta seção mostra um <xref:System.Web.UI.WebControls.ObjectDataSource> na marcação em um. aspx página e ele mostra os objetos de negócios que ele funciona com. O exemplo é a página. aspx. Ele contém um <xref:System.Web.UI.WebControls.GridView> controle que está associado a um <xref:System.Web.UI.WebControls.ObjectDataSource> controle. O <xref:System.Web.UI.WebControls.ObjectDataSource> marcação de controle especifica o nome do objeto comercial e o nome do método ser chamado para recuperar dados de objeto comercial.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/objds1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/objds1vb.aspx#1)]  
  
 O exemplo a seguir mostra o objeto comercial que o <xref:System.Web.UI.WebControls.ObjectDataSource> usa o controle na página. aspx. (Muitos outros <xref:System.Web.UI.WebControls.ObjectDataSource> exemplos de código a usam esse objeto de negócios também.) O exemplo consiste em duas classes básicas a seguir:  
  
-   O `EmployeeLogic` classe é a lógica de negócios de classe que o <xref:System.Web.UI.WebControls.ObjectDataSource> usa.  
  
-   O `NorthwindEmployee` classe define o objeto de dados que é retornado pelo `GetAllEmployees` método o `EmployeeLogic` classe.  
  
 Adicional `NorthwindDataException` classe é fornecida como uma conveniência.  
  
 Esse conjunto de classes de exemplo funciona com o banco de dados Northwind Traders, que está disponível com o Microsoft SQL Server e Microsoft Access. Para obter um exemplo de trabalho completa, você deve compilar e usar essas classes com o exemplo de página. aspx que é fornecido. Para obter informações sobre como instalar o banco de dados da Northwind Traders, consulte [como: Instalar bancos de dados de exemplo](https://msdn.microsoft.com/library/ed1291f6-604c-4972-ae22-0345c6dea12e).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/northwindemployee1.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/northwindemployee1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.IDataSource" />
    <altmember cref="T:System.Web.UI.DataSourceControl" />
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSourceView" />
    <related type="Article" href="https://msdn.microsoft.com/library/a806fa2c-fe6a-405f-869c-74e804a642ea">Passo a passo: Associação de dados a um objeto comercial personalizado</related>
    <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">{1&amp;gt;Controles de servidor Web de fonte de dados&amp;lt;1}</related>
    <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Visão geral do controle ObjectDataSource</related>
    <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">{1&amp;gt;Criando um objeto de origem de controle ObjectDataSource&amp;lt;1}</related>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011">Usando o Entity Framework e o controle ObjectDataSource</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">{1&amp;gt;Controles de servidor Web de fonte de dados&amp;lt;1}</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Visão geral do controle ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">{1&amp;gt;Criando um objeto de origem de controle ObjectDataSource&amp;lt;1}</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectDataSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectDataSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">{1&amp;gt;Controles de servidor Web de fonte de dados&amp;lt;1}</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Visão geral do controle ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">{1&amp;gt;Criando um objeto de origem de controle ObjectDataSource&amp;lt;1}</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectDataSource (string typeName, string selectMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName, string selectMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String, selectMethod As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectDataSource(System::String ^ typeName, System::String ^ selectMethod);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.ObjectDataSource : string * string -&gt; System.Web.UI.WebControls.ObjectDataSource" Usage="new System.Web.UI.WebControls.ObjectDataSource (typeName, selectMethod)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="selectMethod" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">O nome da classe com a qual o <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> funciona.</param>
        <param name="selectMethod">O nome do método ou da função que a <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> invoca para recuperar dados.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> com o nome do tipo e o nome do método de recuperação de dados especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O valor da `typeName` parâmetro pode ser um tipo parcialmente qualificado para o código que está localizado no diretório Bin ou App_Code ou um nome de tipo totalmente qualificado para o código que é registrado no cache de assembly global. Se você usar o cache de assembly global, você deve adicionar a referência apropriada para o `assemblies` seção do arquivo de configuração Machine. config ou Web. config.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">{1&amp;gt;Controles de servidor Web de fonte de dados&amp;lt;1}</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Visão geral do controle ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">{1&amp;gt;Criando um objeto de origem de controle ObjectDataSource&amp;lt;1}</related>
      </Docs>
    </Member>
    <Member MemberName="CacheDuration">
      <MemberSignature Language="C#" Value="public virtual int CacheDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CacheDuration" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.CacheDuration" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheDuration As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CacheDuration { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CacheDuration : int with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.CacheDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataSourceCacheDurationConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o período de tempo, em segundos, que o controle de fonte de dados armazena em cache os dados recuperados da propriedade <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />.</summary>
        <value>O número de segundos que o <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> armazena em cache os resultados de uma invocação à propriedade <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />. O padrão é 0. O valor não pode ser negativo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.ObjectDataSource> controle dá suporte a cache de dados. Enquanto os dados armazenados em cache, chamadas para o <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> recupera dados do cache em vez de negócios de método do objeto que o <xref:System.Web.UI.WebControls.ObjectDataSource> funciona com. Quando o cache expira, o <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método recupera dados de objeto comercial e, em seguida, armazena em cache os dados novamente.  
  
 O <xref:System.Web.UI.WebControls.ObjectDataSource> controle automaticamente armazena dados em cache quando o <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> estiver definida como `true` e o <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> propriedade é definida como um valor maior que 0, que indica o número de segundos que o cache armazena os dados antes da entrada de cache é descartado. Um valor de 0 indica um cache infinitamente longo.  
  
 O cache é controlado por uma combinação da duração e o <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> configuração. Se o <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> estiver definida como o <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> valor, o <xref:System.Web.UI.WebControls.ObjectDataSource> armazena em cache dados na primeira chamada para o <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método e o mantém na memória para, no máximo, a quantidade de tempo especificado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> propriedade. Os dados talvez seja liberados antes da hora de duração, se a memória é necessária. O cache, em seguida, é atualizado durante a próxima chamada para o <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método. Se o <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> estiver definida como <xref:System.Web.UI.DataSourceCacheExpiry.Sliding> valor, o controle de fonte de dados armazena dados em cache na primeira chamada para o <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método, mas redefine a janela de tempo para os quais ele mantém o cache em cada chamada subsequente para o <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método. O cache expira se não houver nenhuma atividade por um período que é igual para o <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> propriedade desde a última chamada para o <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método.  
  
   
  
## Examples  
 Esta seção contém dois exemplos de código. O primeiro exemplo de código demonstra como um <xref:System.Web.UI.WebControls.ObjectDataSource> objeto dá suporte ao cache. O segundo exemplo de código demonstra como implementar um método de invólucro que retorna um <xref:System.Data.DataSet> objeto para habilitar o cache com um <xref:System.Web.UI.WebControls.ObjectDataSource> objeto.  
  
 O exemplo de código a seguir demonstra como um <xref:System.Web.UI.WebControls.ObjectDataSource> controle dá suporte ao cache. Para habilitar o cache, você deve implementar o método que recupera dados, que são identificados pela <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propriedade para retornar os dados como um <xref:System.Data.DataSet> objeto. Neste exemplo, o <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> estiver definida como `true`e o <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> e <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> são definidas. O <xref:System.Web.UI.WebControls.ObjectDataSource> armazena em cache os dados retornados pelo <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propriedade por 30 segundos.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_6#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_6/CS/objds6cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_6#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_6/VB/objds6vb.aspx#1)]  
  
 O exemplo de código a seguir demonstra como implementar um método de invólucro que retorna um <xref:System.Data.DataSet> objeto para habilitar o cache com um <xref:System.Web.UI.WebControls.ObjectDataSource> controle. Na implementação de base de `EmployeeLogic` classe, o `GetAllEmployees` método retorna um <xref:System.Collections.ArrayList> objeto. Em vez de refatoração de objeto completamente para trabalhar com o <xref:System.Web.UI.WebControls.ObjectDataSource> em uma página de Web Forms, chamado um método wrapper `GetAllEmployeesAsDataSet` é adicionado, que retorna um conjunto de `NorthwindEmployee` dados como um <xref:System.Data.DataSet>.  
  
 Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Web.UI.WebControls.ObjectDataSource> classe.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_5#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/CS/northwindemployee5.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_5#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/VB/northwindemployee5.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">{1&amp;gt;Controles de servidor Web de fonte de dados&amp;lt;1}</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Visão geral do controle ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">{1&amp;gt;Criando um objeto de origem de controle ObjectDataSource&amp;lt;1}</related>
      </Docs>
    </Member>
    <Member MemberName="CacheExpirationPolicy">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.DataSourceCacheExpiry CacheExpirationPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataSourceCacheExpiry CacheExpirationPolicy" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheExpirationPolicy As DataSourceCacheExpiry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::DataSourceCacheExpiry CacheExpirationPolicy { System::Web::UI::DataSourceCacheExpiry get(); void set(System::Web::UI::DataSourceCacheExpiry value); };" />
      <MemberSignature Language="F#" Value="member this.CacheExpirationPolicy : System.Web.UI.DataSourceCacheExpiry with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceCacheExpiry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o comportamento de expiração de cache que, quando combinado com a duração, descreve o comportamento do cache usado pelo controle de fonte de dados.</summary>
        <value>Um dos valores de <see cref="T:System.Web.UI.DataSourceCacheExpiry" />. O padrão é <see cref="F:System.Web.UI.DataSourceCacheExpiry.Absolute" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.ObjectDataSource> controle dá suporte a cache de dados. Enquanto os dados armazenados em cache, chamadas para o <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> recupera dados do cache em vez de negócios de método do objeto que o <xref:System.Web.UI.WebControls.ObjectDataSource> funciona com. Quando o cache expira, o <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método recupera dados de objeto comercial e, em seguida, armazena em cache os dados novamente.  
  
 O <xref:System.Web.UI.WebControls.ObjectDataSource> controle automaticamente armazena dados em cache quando o <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> estiver definida como `true` e o <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> propriedade é definida como um valor maior que 0, que indica o número de segundos que o cache armazena os dados antes da entrada de cache é descartado. Um valor de 0 indica um período de cache infinitamente longo.  
  
 O cache é controlado por uma combinação da duração e o <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> configuração. Se o <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> estiver definida como o <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> valor, o <xref:System.Web.UI.WebControls.ObjectDataSource> armazena em cache dados na primeira chamada para o <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método e o mantém na memória para, no máximo, a quantidade de tempo especificado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> propriedade. Os dados talvez seja liberados antes da hora de duração, se a memória é necessária. O cache, em seguida, é atualizado durante a próxima chamada para o <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método. Se o <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> estiver definida como o <xref:System.Web.UI.DataSourceCacheExpiry.Sliding> valor, o controle de fonte de dados armazena dados em cache na primeira chamada para o <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método, mas redefine a janela de tempo para os quais ele mantém o cache para cada chamada subsequente para o <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método. O cache expira se não houver nenhuma atividade por um período que é igual para o <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> propriedade desde a última chamada para o <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método.  
  
   
  
## Examples  
 Esta seção contém dois exemplos de código. O primeiro exemplo de código demonstra como um <xref:System.Web.UI.WebControls.ObjectDataSource> objeto dá suporte a filtragem e o cache. O segundo exemplo de código demonstra como implementar um método de invólucro que retorna um <xref:System.Data.DataSet> objeto para habilitar o armazenamento em cache e a filtragem com um <xref:System.Web.UI.WebControls.ObjectDataSource> objeto.  
  
 O exemplo de código a seguir demonstra como um <xref:System.Web.UI.WebControls.ObjectDataSource> controle dá suporte à filtragem e o cache. Para habilitar a filtragem e o cache, você deve implementar o método que recupera dados, que são identificados pela <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propriedade para retornar os dados como um <xref:System.Data.DataSet> objeto. Neste exemplo, o cache está habilitado porque o `EmployeeLogic` objeto retorna dados como uma <xref:System.Data.DataSet>, o <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> estiver definida como `true`e o <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> e <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> são definidas. O <xref:System.Web.UI.WebControls.ObjectDataSource> armazena em cache os dados retornados pelo <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propriedade por 30 segundos.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_6#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_6/CS/objds6cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_6#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_6/VB/objds6vb.aspx#1)]  
  
 O exemplo de código a seguir demonstra como implementar um método de invólucro que retorna um <xref:System.Data.DataSet> objeto para habilitar o armazenamento em cache e a filtragem com um <xref:System.Web.UI.WebControls.ObjectDataSource> controle. Na implementação de base de `EmployeeLogic` classe, o `GetAllEmployees` método retorna um <xref:System.Collections.ArrayList>. Em vez de refatoração de objeto completamente para trabalhar com o <xref:System.Web.UI.WebControls.ObjectDataSource> em uma página de Web Forms, chamado um método wrapper `GetAllEmployeesAsDataSet` é adicionado, que retorna um conjunto de `NorthwindEmployee` dados como um <xref:System.Data.DataSet>. Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Web.UI.WebControls.ObjectDataSource> classe.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_5#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/CS/northwindemployee5.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_5#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/VB/northwindemployee5.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.CacheDuration" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">{1&amp;gt;Controles de servidor Web de fonte de dados&amp;lt;1}</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Visão geral do controle ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">{1&amp;gt;Criando um objeto de origem de controle ObjectDataSource&amp;lt;1}</related>
      </Docs>
    </Member>
    <Member MemberName="CacheKeyDependency">
      <MemberSignature Language="C#" Value="public virtual string CacheKeyDependency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CacheKeyDependency" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheKeyDependency As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CacheKeyDependency { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CacheKeyDependency : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define uma dependência de chave definida pelo usuário que é vinculada a todos os objetos de cache de dados que são criados pelo controle de fonte de dados.</summary>
        <value>Uma chave que identifica todos os objetos de cache criados pelo <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> propriedade pode ser definida como qualquer valor de cadeia de caracteres arbitrária.  
  
 Todos os objetos de cache expiram explicitamente quando a chave expira. Isso permite que você invalida as entradas de cache que são criadas pelo <xref:System.Web.UI.WebControls.ObjectDataSource> desde sua própria página de código por meio de programação.  
  
 O <xref:System.Web.UI.WebControls.ObjectDataSource> controle dá suporte a cache de dados. Enquanto os dados armazenados em cache, chamadas para o <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> recupera dados do cache em vez de negócios de método do objeto que o <xref:System.Web.UI.WebControls.ObjectDataSource> funciona com. Quando o cache expira, o <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método recupera dados de objeto comercial e, em seguida, armazena em cache os dados novamente.  
  
 O <xref:System.Web.UI.WebControls.ObjectDataSource> controle automaticamente armazena dados em cache quando o <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> estiver definida como `true` e o <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> propriedade é definida como um valor maior que 0, que indica o número de segundos que o cache armazena os dados antes da entrada de cache é descartado. Um valor de 0 indica um cache infinitamente longo.  
  
 Você pode definir as <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> propriedade para criar dependência entre todas as entradas de cache que são criados pelo <xref:System.Web.UI.WebControls.ObjectDataSource> controle e a chave. Você pode expirar todas as entradas de cache por meio de programação a qualquer momento por meio da expiração da chave. Expirar a chave usando o <xref:System.Web.Caching.Cache.Remove%2A?displayProperty=nameWithType> método com o atual <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> valor de parâmetro.  
  
 Uma entrada de cache exclusiva é criada para cada combinação da <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>, e <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> propriedades. Vários <xref:System.Web.UI.WebControls.ObjectDataSource> controles podem usar as mesmas entradas de cache em cenários em que eles carregam dados usando o mesmo tipo, método e parâmetros.  
  
   
  
## Examples  
 Os três exemplos a seguir mostram uma página da Web, uma classe de página code-behind e uma classe de acesso a dados que recuperam registros da tabela de funcionários no banco de dados Northwind.  
  
 O primeiro exemplo mostra uma página da Web que contém duas <xref:System.Web.UI.WebControls.ObjectDataSource> controles, uma <xref:System.Web.UI.WebControls.DropDownList> controle e um <xref:System.Web.UI.WebControls.DetailsView> controle. A primeira <xref:System.Web.UI.WebControls.ObjectDataSource> controle e o <xref:System.Web.UI.WebControls.DropDownList> controle são usados para recuperar e exibir os nomes dos funcionários do banco de dados. A segunda <xref:System.Web.UI.WebControls.ObjectDataSource> controle e o <xref:System.Web.UI.WebControls.DetailsView> controle são usados para recuperar e exibir o registro de funcionário é selecionado pelo usuário.  
  
 O cache é habilitado para o <xref:System.Web.UI.WebControls.ObjectDataSource> controle. Portanto, cada registro é recuperado apenas uma vez do banco de dados. O <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> estiver definida como "EmployeeDetails", mas qualquer valor de cadeia de caracteres pode funcionar como a chave. A página da Web também inclui um <xref:System.Web.UI.WebControls.Button> controle que o usuário pode clicar para expirar os dados em cache.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_18#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default2.aspx#3)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_18#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default2.aspx#3)]  
  
 O segundo exemplo mostra um manipulador para o <xref:System.Web.UI.Control.Load> evento e um manipulador para o <xref:System.Web.UI.WebControls.Button.Click> evento do <xref:System.Web.UI.WebControls.Button> controle. O <xref:System.Web.UI.Control.Load> manipulador de eventos cria um item de cache com uma chave definida como o <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> valor. O <xref:System.Web.UI.WebControls.Button.Click> manipulador de eventos remove o item de cache cuja chave é igual ao <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> valor. Quando o item de cache é removido, todos os dados armazenados em cache é dependentes da chave está expirado.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default2.aspx.cs#4)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default2.aspx.vb#4)]  
  
 O terceiro exemplo mostra a classe de acesso de dados que interage com o banco de dados Northwind. A classe usa LINQ para consultar a tabela de funcionários. O exemplo requer uma classe LINQ to SQL que representa o banco de dados Northwind e a tabela de funcionários. Para obter mais informações, consulte [como: Criar Classes LINQ to SQL em um projeto Web](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/App_Code/EmployeeLogic.cs#5)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/App_Code/EmployeeLogic.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.SqlCacheDependency" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">{1&amp;gt;Controles de servidor Web de fonte de dados&amp;lt;1}</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Visão geral do controle ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">{1&amp;gt;Criando um objeto de origem de controle ObjectDataSource&amp;lt;1}</related>
      </Docs>
    </Member>
    <Member MemberName="ConflictDetection">
      <MemberSignature Language="C#" Value="public System.Web.UI.ConflictOptions ConflictDetection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ConflictOptions ConflictDetection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection" />
      <MemberSignature Language="VB.NET" Value="Public Property ConflictDetection As ConflictOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ConflictOptions ConflictDetection { System::Web::UI::ConflictOptions get(); void set(System::Web::UI::ConflictOptions value); };" />
      <MemberSignature Language="F#" Value="member this.ConflictDetection : System.Web.UI.ConflictOptions with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.ConflictDetection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ConflictOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que determina se apenas os novos valores são passados para o método <see langword="Update" /> ou se os valores novos e antigos são passados para o método <see langword="Update" />.</summary>
        <value>Um dos valores de <see cref="T:System.Web.UI.ConflictOptions" />. O padrão é <see cref="F:System.Web.UI.ConflictOptions.OverwriteChanges" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa propriedade determina se os parâmetros para os valores novos e antigos são aplicados ao método especificado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> propriedade. Por exemplo, se o método que é especificado pela <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propriedade retorna um <xref:System.Data.DataTable> controle com as colunas `Name` e `Number`e o <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> estiver definida como o <xref:System.Web.UI.ConflictOptions.OverwriteChanges> campo, os parâmetros são criados para `Name` e `Number` para o `Update` método. Se o <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> estiver definida como o <xref:System.Web.UI.ConflictOptions.CompareAllValues> valor, os parâmetros são criados para `Name`, `Number`, `original_Name`, e `original_Number`. (O nome exato de parâmetros para os valores originais depende o <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> propriedade.) O <xref:System.Web.UI.WebControls.ObjectDataSource> , em seguida, determina se o método que é especificado no <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> propriedade tem parâmetros que correspondam.  
  
 Controle de simultaneidade é uma técnica de armazenamentos de dados usam para controlar como os dados são lidos e alterados no repositório quando vários clientes estão acessando e manipulando os mesmos dados. Por exemplo, um cliente lê os dados e apresenta-as para um usuário, enquanto outro cliente lê os mesmos dados e apresenta-as para um usuário diferente. Se ambos os usuários atualizam os dados e enviá-lo para o armazenamento de dados, um resultado inesperado pode ocorrer porque ambos os clientes podem fornecer valores diferentes para os mesmos dados. Isso é considerado um conflito. Definindo o <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> propriedade para o <xref:System.Web.UI.ConflictOptions.CompareAllValues> valor, o `Update` método pode comparar os valores novos e antigos para a fonte de dados original para detectar conflitos e tratá-los conforme necessário.  
  
 O <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> propriedade delega para o <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> propriedade da <xref:System.Web.UI.WebControls.ObjectDataSourceView> objeto que está associado com o <xref:System.Web.UI.WebControls.ObjectDataSource> controle.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ConflictOptions" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">{1&amp;gt;Controles de servidor Web de fonte de dados&amp;lt;1}</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Visão geral do controle ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">{1&amp;gt;Criando um objeto de origem de controle ObjectDataSource&amp;lt;1}</related>
      </Docs>
    </Member>
    <Member MemberName="ConvertNullToDBNull">
      <MemberSignature Language="C#" Value="public bool ConvertNullToDBNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConvertNullToDBNull" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull" />
      <MemberSignature Language="VB.NET" Value="Public Property ConvertNullToDBNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConvertNullToDBNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ConvertNullToDBNull : bool with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se os valores de <see cref="T:System.Web.UI.WebControls.Parameter" /> passados para uma operação de atualização, inserção ou exclusão são convertidos automaticamente de <see langword="null" /> para o valor <see cref="F:System.DBNull.Value" /> pelo controle <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</summary>
        <value><see langword="true" />, se houver <see langword="null" /> os valores em <see cref="T:System.Web.UI.WebControls.Parameter" /> objetos passados para o <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> controle são automaticamente convertidos em <see cref="F:System.DBNull.Value" /> valores; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Não convertendo `null` para o <xref:System.DBNull.Value> valor pode resultar em erros em tempo de execução. Use o <xref:System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull%2A> propriedade para indicar se <xref:System.Web.UI.WebControls.Parameter> valores que são passados para uma atualização, inserção ou operação de exclusão são automaticamente convertidos do `null` para o <xref:System.DBNull.Value> valor pelo <xref:System.Web.UI.WebControls.ObjectDataSource> controle.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.DBNull.Value" />
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">{1&amp;gt;Controles de servidor Web de fonte de dados&amp;lt;1}</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Visão geral do controle ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">{1&amp;gt;Criando um objeto de origem de controle ObjectDataSource&amp;lt;1}</related>
      </Docs>
    </Member>
    <Member MemberName="DataObjectTypeName">
      <MemberSignature Language="C#" Value="public string DataObjectTypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataObjectTypeName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property DataObjectTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataObjectTypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataObjectTypeName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o nome de uma classe que controle o <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> usa para um parâmetro em uma atualização, inserção ou exclusão da operação de dados, em vez de passar valores individuais do controle associado a dados.</summary>
        <value>Um nome de classe parcial ou totalmente qualificado que identifica o tipo do objeto que o <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> pode usar como um parâmetro para uma operação <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />, <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" /> ou <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />. O padrão é uma cadeia de caracteres vazia ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Em vez de especificar vários parâmetros que são passados para o <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A>, e <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> métodos, você pode criar um objeto que agrega vários valores de campo de dados. Este um objeto é passado para os métodos, em vez de vários parâmetros.  
  
 O comportamento padrão de um <xref:System.Web.UI.WebControls.ObjectDataSource> controle que está associado a um controle associado a dados é que o controle de associação de dados cria um <xref:System.Web.UI.WebControls.Parameter> objeto para cada parâmetro na fonte de dados. Se o objeto de negócios tem muitos campos, o método resultante também tem muitos campos. O <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> propriedade permite que você especifique um tipo que tem uma propriedade para cada campo de dados. Em seguida, em vez de passar vários parâmetros para o método, o tempo de execução cria um objeto e define todas as suas propriedades. Esse objeto de um é adicionado à coleção de parâmetros para a chamada de método.  
  
 O tipo especificado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> propriedade deve ter um construtor padrão que não tem parâmetros, portanto, o <xref:System.Web.UI.WebControls.ObjectDataSource> controle pode criar uma instância do tipo. O tipo também deve ter as propriedades configuráveis que permitem que o <xref:System.Web.UI.WebControls.ObjectDataSource> controle para preencher o objeto com valores que são passados do controle associado a dados. Nomes de propriedade sobre a <xref:System.Web.UI.WebControls.ObjectDataSource> controle deve corresponder exatamente aos nomes de parâmetro de valores que são passados pelo controle associado a dados.  
  
 Quando o <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> estiver definida e o <xref:System.Web.UI.WebControls.ObjectDataSource> controle está associado um controle associado a dados, os métodos que são especificados pelo <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> e <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> propriedades devem ter um parâmetro do tipo especificado no <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> propriedade. Se o <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> estiver definida como o <xref:System.Web.UI.ConflictOptions.OverwriteChanges> de valor, o método que é especificado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> propriedade deve ter um parâmetro do tipo especificado no <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> propriedade. Se o <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> estiver definida como o <xref:System.Web.UI.ConflictOptions.CompareAllValues> de valor, o método que é especificado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> propriedade deve ter dois parâmetros do tipo especificado no <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> propriedade. O primeiro parâmetro contém os valores originais. o segundo parâmetro contém os novos valores.  
  
 O <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> propriedade delega para o <xref:System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName%2A> propriedade da <xref:System.Web.UI.WebControls.ObjectDataSourceView> que está associado com o <xref:System.Web.UI.WebControls.ObjectDataSource> controle.  
  
   
  
## Examples  
 A seção contém dois exemplos de código. O primeiro exemplo de código demonstra como implementar um tipo que combina todos os valores de parâmetro em um único objeto, usando o <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> propriedade. O segundo exemplo de código mostra a página da Web que usa as duas classes que são usadas no primeiro exemplo de código.  
  
 O exemplo de código a seguir demonstra como implementar um tipo que combina todos os valores de parâmetro em um único objeto, usando o <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> propriedade. O método select do `AggregateData` classe retorna uma <xref:System.Data.DataTable> objeto com duas colunas nomeadas `Name` e `Number`. Da mesma forma, o `NewData` classe define duas propriedades de leitura/gravação, `Name` e `Number`. O `Insert` método da `AggregateData` classe assume um parâmetro de tipo `NewData`. O `TypeName` propriedade do <xref:System.Web.UI.WebControls.ObjectDataSource> é definido como `AggregateData` e o <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> estiver definida como `NewData`.  
  
 [!code-csharp[ObjectDataSourceDataObjectTypeName#2](~/samples/snippets/csharp/VS_Snippets_WebNet/ObjectDataSourceDataObjectTypeName/CS/AggregateData.cs#2)]
 [!code-vb[ObjectDataSourceDataObjectTypeName#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ObjectDataSourceDataObjectTypeName/VB/AggregateData.vb#2)]  
  
 O exemplo de código a seguir mostra a página da Web que usa as duas classes que são usadas no exemplo de código anterior.  
  
 [!code-aspx-csharp[ObjectDataSourceDataObjectTypeName#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ObjectDataSourceDataObjectTypeName/CS/AggregateDataPageCS.aspx#1)]
 [!code-aspx-vb[ObjectDataSourceDataObjectTypeName#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ObjectDataSourceDataObjectTypeName/VB/AggregateDataPageVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">{1&amp;gt;Controles de servidor Web de fonte de dados&amp;lt;1}</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Visão geral do controle ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">{1&amp;gt;Criando um objeto de origem de controle ObjectDataSource&amp;lt;1}</related>
        <related type="Article" href="https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4">Usando parâmetros com o controle ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public int Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Delete();" />
      <MemberSignature Language="F#" Value="member this.Delete : unit -&gt; int" Usage="objectDataSource.Delete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Executa uma operação de exclusão, chamando o método identificado pela propriedade <see cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" /> com os parâmetros que estão na coleção <see cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />.</summary>
        <returns>Um valor que representará o número de linhas excluídas do armazenamento de dados subjacente se a propriedade <see cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows" /> do <see cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" /> for definida no evento <see cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleted" />, caso contrário, -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Antes do <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> operação é executada, o <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting%2A> método é chamado para acionar o <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> eventos. Você pode lidar com o <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> eventos para examinar os valores dos parâmetros e executar qualquer pré-processamento antes de um <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> operação. Para executar uma operação de exclusão, o <xref:System.Web.UI.WebControls.ObjectDataSourceView> objeto usa a reflexão para criar uma instância do objeto que é identificado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> propriedade. Depois, ele chama o método que é identificado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> propriedade, usando qualquer associado <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> propriedades. Se os parâmetros de exclusão vem de um controle associado a dados, o nome dos parâmetros é criado de acordo com o <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> propriedade. Após o <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> operação é concluída, o <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A> método é chamado para acionar o <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> eventos. Você pode manipular o <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> para examinar quaisquer valores de retorno, parâmetros de saída e exceções e para executar qualquer pós-processamento de eventos.  
  
 O <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> método delega para o <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> método da <xref:System.Web.UI.WebControls.ObjectDataSourceView> objeto que está associado com o <xref:System.Web.UI.WebControls.ObjectDataSource> controle.  
  
## <a name="data-bound-controls"></a>Controles ligados a dados  
 Quando o <xref:System.Web.UI.WebControls.ObjectDataSource> controle é associado ao controle associado a dados, como o <xref:System.Web.UI.WebControls.GridView> controle, não é necessário chamar o <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> método a partir do código da página. O <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> método é invocado diretamente pelo controle associado a dados.  
  
 Para obter mais informações sobre mesclagem de parâmetro, o tempo de vida do objeto e a resolução de método, consulte <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">{1&amp;gt;Controles de servidor Web de fonte de dados&amp;lt;1}</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Visão geral do controle ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">{1&amp;gt;Criando um objeto de origem de controle ObjectDataSource&amp;lt;1}</related>
      </Docs>
    </Member>
    <Member MemberName="Deleted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Deleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Deleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Deleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleted As ObjectDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceStatusEventHandler ^ Deleted;" />
      <MemberSignature Language="F#" Value="member this.Deleted : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " Usage="member this.Deleted : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando uma operação <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" /> foi concluída.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lidar com o <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> evento para examinar os valores dos parâmetros de saída ou um valor de retorno, ou para determinar se uma exceção foi lançada após um <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> operação foi concluída. O valor de retorno, parâmetros de saída e as propriedades de tratamento de exceção estão disponíveis do <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> objeto que está associado com o evento.  
  
 Você pode usar o <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A> propriedade do <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> objeto para retornar o número de linhas que foram excluídos do <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> método. Para fazer isso, defina o <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A> propriedade. Se você retornar o número de linhas excluídas do método que é especificado pela <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> propriedade, o valor está disponível na <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A> propriedade do <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> objeto.  
  
 Para obter mais informações sobre como manipular eventos, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Esta seção contém dois exemplos de código. O primeiro exemplo de código demonstra como usar um <xref:System.Web.UI.WebControls.ObjectDataSource> objeto com um objeto comercial e um <xref:System.Web.UI.WebControls.GridView> controle para excluir dados. O segundo exemplo de código mostra o `EmployeeLogic` classe que é usada no primeiro exemplo de código.  
  
 O exemplo de código a seguir demonstra como usar um <xref:System.Web.UI.WebControls.ObjectDataSource> controle com um objeto comercial e um <xref:System.Web.UI.WebControls.GridView> controle para excluir dados. Inicialmente, o <xref:System.Web.UI.WebControls.GridView> controle exibe um conjunto de todos os funcionários, usando o método que é especificado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propriedade para recuperar os dados, o `EmployeeLogic` objeto. Porque o <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> estiver definida como `true`, o <xref:System.Web.UI.WebControls.GridView> controlar automaticamente exibe uma **excluir** botão.  
  
 Se você clicar na **excluir** botão, a operação de exclusão é executada usando o método que é especificado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> propriedade e quaisquer parâmetros que são especificados no <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> coleção. Neste exemplo de código, algumas etapas de pré-processamento e pós-processamento também são executadas. O `NorthwindEmployeeDeleting` delegado é chamado para manipular a <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> evento antes que a operação é executada e o `NorthwindEmployeeDeleted` delegado é chamado para manipular o <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> evento após a conclusão da operação para executar a manipulação de exceção. Neste exemplo de código, se um `NorthwindDataException` é lançada, ela é tratada pelo `NorthwindEmployeeDeleted` método.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 O seguinte exemplo de código mostra o `EmployeeLogic` classe que é usada no exemplo de código anterior.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/northwindemployee10.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/northwindemployee10.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleting" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">{1&amp;gt;Controles de servidor Web de fonte de dados&amp;lt;1}</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Visão geral do controle ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">{1&amp;gt;Criando um objeto de origem de controle ObjectDataSource&amp;lt;1}</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011">Usando o Entity Framework e o controle ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteMethod">
      <MemberSignature Language="C#" Value="public string DeleteMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DeleteMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o nome do método ou da função invocada pelo controle <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> para excluir os dados.</summary>
        <value>Uma cadeia de caracteres que representa o nome do método ou da função usado pelo <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> para excluir os dados. O padrão é uma cadeia de caracteres vazia ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O objeto comercial é assumido como para excluir um registro de dados por vez, em vez de em um lote.  
  
 O <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> propriedade delega para o <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> propriedade da <xref:System.Web.UI.WebControls.ObjectDataSourceView> objeto que está associado com o <xref:System.Web.UI.WebControls.ObjectDataSource> controle.  
  
 Certifique-se de que os nomes de parâmetro configurado para o <xref:System.Web.UI.WebControls.ObjectDataSource> no controlar o <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> coleção corresponder aos nomes de coluna que são retornados pelo método select.  
  
## <a name="object-lifetime"></a>Tempo de vida do objeto  
 O que é identificado pelo método as <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> propriedade pode ser um método de instância ou um `static` (`Shared` no Visual Basic) método. Se for um método de instância, o objeto comercial é criado e destruído cada vez que o <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> propriedade é chamada. Você pode lidar com o <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> e <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> eventos para trabalhar com o objeto de negócios antes do <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> propriedade é chamada. Você também pode lidar com o <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> evento é gerado após o <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> propriedade é chamada. Se o objeto comercial implementa o <xref:System.IDisposable> interface, o <xref:System.IDisposable.Dispose%2A> método é chamado antes que o objeto é destruído. Se o método for um `static` (`Shared` no Visual Basic) método, o objeto de negócios nunca é criado e você não pode manipular o <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>, <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>, e <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> eventos.  
  
## <a name="parameter-merging"></a>Parâmetro de mesclagem  
 Parâmetros são adicionados à <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> coleção de três fontes:  
  
-   No controle associado a dados, no tempo de execução.  
  
-   Do `DeleteParameters` elemento, declarativamente.  
  
-   Do `Deleting` método, declarativamente.  
  
 Primeiro, todos os parâmetros que são gerados a partir de controles ligados a dados são adicionados ao <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> coleção. Por exemplo, se o <xref:System.Web.UI.WebControls.ObjectDataSource> controle é associado a um <xref:System.Web.UI.WebControls.GridView> controle que tem as colunas `Name` e `Number`, parâmetros para `Name` e `Number` são adicionados à coleção. O nome exato do parâmetro depende do <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> propriedade. O tipo de dados desses parâmetros é `string`. Em seguida, os parâmetros que são listados no `DeleteParameters` elemento são adicionadas. Se um parâmetro na `DeleteParameters` elemento for encontrado com o mesmo nome como um parâmetro que já está na <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> coleção, o parâmetro existente é modificada para coincidir com o que é especificado no parâmetro o `DeleteParameters` elemento. Normalmente, isso é usado para modificar o tipo de dados no parâmetro. Por fim, você pode adicionar e remover parâmetros em programaticamente os <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> evento, que ocorre antes do <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> método é executado. O método será resolvido depois que os parâmetros são mesclados. Resolução do método é abordada na próxima seção.  
  
## <a name="method-resolution"></a>Método de resolução  
 Quando o <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> método é chamado, os campos de dados do controle associado a dados, os parâmetros que foram criados declarativamente na `DeleteParameters` elemento e os parâmetros que foram adicionados a <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> manipulador de eventos são mescladas. (Para obter mais informações, consulte a seção anterior). O <xref:System.Web.UI.WebControls.ObjectDataSource> objeto, em seguida, tenta encontrar um método a ser chamado. Primeiro, ele procura por um ou mais métodos com o nome especificado no <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> propriedade. Se nenhuma correspondência for encontrada, um <xref:System.InvalidOperationException> exceção é lançada. Se uma correspondência for encontrada, em seguida, procura nomes de parâmetros correspondentes. Por exemplo, suponha que o tipo especificado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> propriedade tem dois métodos chamados `DeleteARecord`. Uma `DeleteARecord` tem um parâmetro, `ID`e o outro `DeleteARecord` tem dois parâmetros, `Name` e `Number`. Se o <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> coleção tem apenas um parâmetro denominado `ID`, o `DeleteARecord` método com apenas o `ID` parâmetro é chamado. O tipo do parâmetro não é verificado na resolução de métodos. Não importa a ordem dos parâmetros.  
  
 Se o <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> propriedade for definida, o método é resolvido de maneira diferente. O <xref:System.Web.UI.WebControls.ObjectDataSource> procura por um método com o nome especificado na <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> propriedade que recebe um parâmetro do tipo que é especificada no <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> propriedade. Nesse caso, o nome do parâmetro não importa.  
  
   
  
## Examples  
 Esta seção contém dois exemplos de código. O primeiro exemplo de código demonstra como usar um <xref:System.Web.UI.WebControls.ObjectDataSource> objeto com um objeto comercial e um <xref:System.Web.UI.WebControls.GridView> controle para excluir dados. O segundo exemplo de código mostra o `EmployeeLogic` classe que é usada no primeiro exemplo de código.  
  
 O exemplo de código a seguir demonstra como usar um <xref:System.Web.UI.WebControls.ObjectDataSource> controle com um objeto comercial e um <xref:System.Web.UI.WebControls.GridView> controle para excluir dados. Inicialmente, o <xref:System.Web.UI.WebControls.GridView> controle exibe um conjunto de todos os funcionários, usando o método que é especificado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propriedade para recuperar os dados, o `EmployeeLogic` objeto. Porque o <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> estiver definida como `true`, o <xref:System.Web.UI.WebControls.GridView> controlar automaticamente exibe uma **excluir** botão.  
  
 Se você clicar na **excluir** botão, a operação de exclusão é executada usando o método que é especificado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> propriedade e quaisquer parâmetros que são especificados no <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> coleção. Neste exemplo de código, algumas etapas de pré-processamento e pós-processamento também são executadas. O `NorthwindEmployeeDeleting` delegado é chamado para manipular a <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> evento antes que a operação é executada e o `NorthwindEmployeeDeleted` delegado é chamado para manipular o <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> evento após a conclusão da operação para executar a manipulação de exceção. Neste exemplo, se um `NorthwindDataException` é lançada, ela é tratada pelo `NorthwindDataException` delegar.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 O seguinte exemplo de código mostra o `EmployeeLogic` classe que é usada no exemplo de código anterior.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/northwindemployee10.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/northwindemployee10.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">{1&amp;gt;Controles de servidor Web de fonte de dados&amp;lt;1}</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Visão geral do controle ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">{1&amp;gt;Criando um objeto de origem de controle ObjectDataSource&amp;lt;1}</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011">Usando o Entity Framework e o controle ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection DeleteParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeleteParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ DeleteParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeleteParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a coleção de parâmetros que contém os parâmetros usados pelo método <see cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" />.</summary>
        <value>Um <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> que contém os parâmetros usados pelo método <see cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Os nomes e tipos dos parâmetros que estão contidos na <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> coleção deve coincidir com os nomes e tipos dos parâmetros no <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> assinatura do método. Os nomes de parâmetro são afetados pelo <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> propriedade e são diferencia maiusculas de minúsculas. Os parâmetros na coleção dependem dos dados que estão no controle associado a dados, os parâmetros que são especificados de forma declarativa e os parâmetros que são adicionados por meio de programação. Para obter mais informações, consulte "Parâmetro de mesclagem" em <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> e [usando parâmetros com o controle ObjectDataSource](https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4).  
  
 O <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> propriedade recupera o <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> contidos pela propriedade de <xref:System.Web.UI.WebControls.ObjectDataSourceView> objeto que está associado com o <xref:System.Web.UI.WebControls.ObjectDataSource> controle.  
  
 Para obter mais informações sobre mesclagem de parâmetro, o tempo de vida do objeto e a resolução de método, consulte <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>.  
  
   
  
## Examples  
 Esta seção contém dois exemplos de código. O primeiro exemplo de código demonstra como usar um <xref:System.Web.UI.WebControls.ObjectDataSource> objeto com um objeto comercial e um <xref:System.Web.UI.WebControls.GridView> controle para excluir dados. O segundo exemplo de código mostra o `EmployeeLogic` classe que é usada no primeiro exemplo de código.  
  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> propriedade do <xref:System.Web.UI.WebControls.ObjectDataSource> controle com um objeto comercial e um <xref:System.Web.UI.WebControls.GridView> controle para excluir dados. Inicialmente, o <xref:System.Web.UI.WebControls.GridView> controle exibe um conjunto de todos os funcionários, usando o método que é especificado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propriedade para recuperar os dados, o `EmployeeLogic` objeto. Porque o <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> estiver definida como `true`, o <xref:System.Web.UI.WebControls.GridView> controlar automaticamente exibe uma **excluir** botão.  
  
 Se você clicar na **exclua** botão, o <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> evento é chamado com dois parâmetros. Um parâmetro, `EmpID`, é proveniente de <xref:System.Web.UI.WebControls.DataGrid> controlar e se baseia no <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> propriedade. O outro parâmetro vem de declarativo <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> propriedade. O `EmployeeLogic` sobrecargas de classe a `DeleteEmployee` método. Uma sobrecarga toma um `NorthwindEmployee` parâmetro e o outro usa um <xref:System.Int32> parâmetro chamado `anID`. No <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> evento, as entradas na <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> propriedade são ajustadas para incluir apenas um parâmetro chamado `anID` com o valor de `original_EmpID`. Quando o manipulador de eventos existe, a correspondência `DeleteEmployee` método é chamado.  
  
 O exemplo de código a seguir mostra a página da Web que exibe a <xref:System.Web.UI.WebControls.DataGrid> controle e as alças de <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> eventos.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_11#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_11/CS/objds11cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_11#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_11/VB/objds11vb.aspx#1)]  
  
 O seguinte exemplo de código mostra o `EmployeeLogic` classe que é usada no exemplo de código anterior.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_11#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_11/CS/northwindemployee11.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_11#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_11/VB/northwindemployee11.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">{1&amp;gt;Controles de servidor Web de fonte de dados&amp;lt;1}</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Visão geral do controle ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">{1&amp;gt;Criando um objeto de origem de controle ObjectDataSource&amp;lt;1}</related>
      </Docs>
    </Member>
    <Member MemberName="Deleting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Deleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Deleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Deleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleting As ObjectDataSourceMethodEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceMethodEventHandler ^ Deleting;" />
      <MemberSignature Language="F#" Value="member this.Deleting : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " Usage="member this.Deleting : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre antes de uma operação <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lidar com o <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> evento para executar a inicialização adicional que é específica para seu aplicativo, para validar os valores de parâmetros ou alterar os valores de parâmetro antes do <xref:System.Web.UI.WebControls.ObjectDataSource> controle executa a operação de exclusão. Os parâmetros estão disponíveis como um <xref:System.Collections.IDictionary> coleção que é acessada pelo <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> propriedade, que é exposta pelo <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> objeto.  
  
 Você pode cancelar a operação de exclusão definindo o <xref:Microsoft.Win32.SessionEndingEventArgs.Cancel%2A> propriedade do <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> para `true`.  
  
 Para obter mais informações sobre como manipular eventos, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Esta seção contém dois exemplos de código. O primeiro exemplo de código demonstra como usar um <xref:System.Web.UI.WebControls.ObjectDataSource> objeto com um objeto comercial e um <xref:System.Web.UI.WebControls.GridView> controle para excluir dados. O segundo exemplo de código mostra o `EmployeeLogic` classe que é usada no primeiro exemplo de código.  
  
 O exemplo de código a seguir demonstra como usar um <xref:System.Web.UI.WebControls.ObjectDataSource> controle com um objeto comercial e um <xref:System.Web.UI.WebControls.GridView> controle para excluir dados. Inicialmente, o <xref:System.Web.UI.WebControls.GridView> controle exibe um conjunto de todos os funcionários, usando o método que é especificado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propriedade para recuperar os dados, o `EmployeeLogic` objeto. Porque o <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> estiver definida como `true`, o <xref:System.Web.UI.WebControls.GridView> controlar automaticamente exibe uma **excluir** botão.  
  
 Se você clicar na **excluir** botão, a operação de exclusão é executada usando o método que é especificado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> propriedade e quaisquer parâmetros que são especificados no <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> coleção. Neste exemplo de código, algumas etapas de pré-processamento e pós-processamento também são executadas. O `NorthwindEmployeeDeleting` delegado é chamado para manipular a <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> evento antes que a operação é executada e o `NorthwindEmployeeDeleted` delegado é chamado para manipular o <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> evento após a conclusão da operação para executar a manipulação de exceção. Neste exemplo de código, se um `NorthwindDataException` é lançada, ela é tratada pelo `NorthwindEmployeeDeleted` método.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 O seguinte exemplo de código mostra o `EmployeeLogic` classe que é usada no exemplo de código anterior.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/northwindemployee10.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/northwindemployee10.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleted" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">{1&amp;gt;Controles de servidor Web de fonte de dados&amp;lt;1}</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Visão geral do controle ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">{1&amp;gt;Criando um objeto de origem de controle ObjectDataSource&amp;lt;1}</related>
      </Docs>
    </Member>
    <Member MemberName="EnableCaching">
      <MemberSignature Language="C#" Value="public virtual bool EnableCaching { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableCaching" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnableCaching As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableCaching { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableCaching : bool with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.EnableCaching" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se o controle <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> tem o cache de dados habilitado.</summary>
        <value><see langword="true" /> se o cache de dados estiver habilitado para o controle de fonte de dados; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.ObjectDataSource> controle dá suporte a cache de dados. Enquanto os dados armazenados em cache, chamadas para o <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método de recuperar dados do cache em vez de <xref:System.Web.UI.WebControls.ObjectDataSource> criando uma instância do objeto comercial e chamar seu método de dados. Quando o cache expira, o <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método recupera dados de objeto comercial e, em seguida, armazena em cache os dados novamente.  
  
 O <xref:System.Web.UI.WebControls.ObjectDataSource> controle automaticamente armazena dados em cache quando o <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> estiver definida como `true` e o <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> propriedade é definida como um valor maior que 0, que indica o número de segundos que o cache armazena os dados antes da entrada de cache é descartado. Um valor de 0 indica um cache infinitamente longo.  
  
   
  
## Examples  
 Os três exemplos a seguir mostram uma página da Web, uma classe de página code-behind e uma classe de acesso a dados que recuperam registros da tabela de funcionários no banco de dados Northwind.  
  
 O primeiro exemplo mostra uma página da Web que contém duas <xref:System.Web.UI.WebControls.ObjectDataSource> controles, uma <xref:System.Web.UI.WebControls.DropDownList> controle e um <xref:System.Web.UI.WebControls.DetailsView> controle. A primeira <xref:System.Web.UI.WebControls.ObjectDataSource> controle e o <xref:System.Web.UI.WebControls.DropDownList> controle são usados para recuperar e exibir os nomes dos funcionários do banco de dados. A segunda <xref:System.Web.UI.WebControls.ObjectDataSource> controle e o <xref:System.Web.UI.WebControls.DetailsView> controle são usados para recuperar e exibir o registro de funcionário é selecionado pelo usuário.  
  
 O cache é habilitado para o <xref:System.Web.UI.WebControls.ObjectDataSource> controle. Portanto, cada registro é recuperado apenas uma vez do banco de dados. O <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> estiver definida como "EmployeeDetails", mas qualquer valor de cadeia de caracteres pode funcionar como a chave. A página da Web também inclui um <xref:System.Web.UI.WebControls.Button> controle que o usuário pode clicar para expirar os dados em cache.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_18#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default2.aspx#3)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_18#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default2.aspx#3)]  
  
 O segundo exemplo mostra um manipulador para o <xref:System.Web.UI.Control.Load> evento e um manipulador para o <xref:System.Web.UI.WebControls.Button.Click> evento do <xref:System.Web.UI.WebControls.Button> controle. O <xref:System.Web.UI.Control.Load> manipulador de eventos cria um item de cache com uma chave definida como o <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> valor. O <xref:System.Web.UI.WebControls.Button.Click> manipulador de eventos remove o item de cache cuja chave é igual ao <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> valor. Quando o item de cache é removido, todos os dados armazenados em cache é dependentes da chave está expirado.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default2.aspx.cs#4)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default2.aspx.vb#4)]  
  
 O terceiro exemplo mostra a classe de acesso de dados que interage com o banco de dados Northwind. A classe usa LINQ para consultar a tabela de funcionários. O exemplo requer uma classe LINQ to SQL que representa o banco de dados Northwind e a tabela de funcionários. Para obter mais informações, consulte [como: Criar Classes LINQ to SQL em um projeto Web](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/App_Code/EmployeeLogic.cs#5)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/App_Code/EmployeeLogic.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">A propriedade <see cref="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching" /> é definida como <see langword="true" /> quando o método especificado pela propriedade <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> retorna um <see cref="T:System.Data.Common.DbDataReader" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.CacheDuration" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">{1&amp;gt;Controles de servidor Web de fonte de dados&amp;lt;1}</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Visão geral do controle ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">{1&amp;gt;Criando um objeto de origem de controle ObjectDataSource&amp;lt;1}</related>
      </Docs>
    </Member>
    <Member MemberName="EnablePaging">
      <MemberSignature Language="C#" Value="public bool EnablePaging { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePaging" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging" />
      <MemberSignature Language="VB.NET" Value="Public Property EnablePaging As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnablePaging { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnablePaging : bool with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.EnablePaging" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se o controle de fonte de dados dá suporte à paginação no conjunto de dados que recupera.</summary>
        <value><see langword="true" /> se o controle de fonte de dados der suporte à paginação dos dados recuperados; caso contrário, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Paginação, o <xref:System.Web.UI.WebControls.ObjectDataSource> é manipulado pelo controle definindo o <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A>, e <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> propriedades do <xref:System.Web.UI.WebControls.ObjectDataSource> e definindo um método de seleção no objeto comercial com os parâmetros apropriados. Quando o <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> estiver definida como `true`, o <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> coleção inclui dois parâmetros adicionais para a primeira linha que é solicitada e o número de linhas que são solicitadas. Esses dois parâmetros são nomeados conforme definido pela <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> e <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> propriedades. O `Select` método deverá retornar o número solicitado de linhas, iniciando no índice especificado. Porque os dados não podem se dividir uniformemente pelo tamanho da página, a última página pode conter menos linhas. Portanto, o número de linhas que são solicitadas é, na verdade, o número máximo de linhas retornadas.  
  
 Quando a paginação está habilitada no controle associado a dados associado, o controle de associação de dados chama o `Select` método com o índice inicial e o número de linhas que são necessários. Além disso, se o <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> propriedade for definida, o controle associado a dados chama o método antes de renderizar os controles de paginação. Por exemplo, se um <xref:System.Web.UI.WebControls.GridView> controle tem paginação habilitada com um tamanho de página de 5 e o método que é especificado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> propriedade retorna 20, apenas 4 páginas são exibidas no pager.  
  
 O <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> propriedade delega para o <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A> propriedade do <xref:System.Web.UI.WebControls.ObjectDataSourceView> objeto.  
  
   
  
## Examples  
 Os três exemplos a seguir mostram uma página da Web, uma classe de página code-behind e uma classe de acesso a dados que permitem que o usuário escolha quantos registros é exibido na página.  
  
 A página da Web contém uma <xref:System.Web.UI.WebControls.ObjectDataSource> controle cuja <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> estiver definida como `true`. O <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> estiver definida como o nome de um método que retorna o número total de registros na consulta. O <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> propriedade e o <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> estiverem definidas como os nomes dos parâmetros que são usados no método Select. A página também contém um <xref:System.Web.UI.WebControls.DropDownList> controle.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx#1)]  
  
 O segundo exemplo mostra um manipulador para o <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged?displayProperty=nameWithType> eventos do <xref:System.Web.UI.WebControls.DropDownList> controle. O código nos conjuntos de manipulador a <xref:System.Web.UI.WebControls.GridView.PageSize%2A> propriedade para a seleção do usuário.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx.vb#2)]  
  
 O terceiro exemplo mostra a classe de acesso de dados que recupera dados da tabela Customers. Ele inclui um método chamado `GetSubsetOfEmployees`, que é atribuído à <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propriedade do <xref:System.Web.UI.WebControls.ObjectDataSource> controle. O exemplo também inclui um método chamado `GetEmployeeCount`, que é atribuído para o <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> propriedade do <xref:System.Web.UI.WebControls.ObjectDataSource> controle. A classe usa LINQ para consultar a tabela de clientes. O exemplo requer uma classe LINQ to SQL que representa o banco de dados Northwind e a tabela Customers. Para obter mais informações, consulte [como: Criar Classes LINQ to SQL em um projeto Web](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/App_Code/CustomerLogic.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/App_Code/CustomerLogic.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanPage" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">{1&amp;gt;Controles de servidor Web de fonte de dados&amp;lt;1}</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Visão geral do controle ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">{1&amp;gt;Criando um objeto de origem de controle ObjectDataSource&amp;lt;1}</related>
      </Docs>
    </Member>
    <Member MemberName="FilterExpression">
      <MemberSignature Language="C#" Value="public string FilterExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilterExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilterExpression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FilterExpression : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define uma expressão de filtragem que é aplicada quando o método especificado pela propriedade <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> é chamado.</summary>
        <value>Uma cadeia de caracteres que representa uma expressão de filtragem aplicada quando dados são recuperados usando o método ou a função identificada pela propriedade <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.ObjectDataSource> controle dá suporte à filtragem de dados somente quando o <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método retorna um <xref:System.Data.DataSet> ou <xref:System.Data.DataTable> objeto.  
  
 A sintaxe que é usada para o <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> propriedade é uma expressão de estilo de cadeia de caracteres de formato. A sintaxe de expressão de filtro é a mesma sintaxe que é aceito pelo <xref:System.Data.DataColumn.Expression%2A> propriedade. Se você adicionar parâmetros para o <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> coleção, você também pode incluir espaços reservados de cadeia de caracteres de formato. Por exemplo, incluir `"{0}"` na expressão para substituir valores de parâmetro. Os espaços reservados são substituídos de acordo com o índice do parâmetro no <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> coleção.  
  
 Você pode incluir parâmetros no <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> propriedade. Se o tipo do parâmetro é um tipo de cadeia de caracteres ou caractere, coloque o parâmetro entre aspas simples. Aspas não são necessárias se o parâmetro for um tipo numérico.  
  
 O <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> coleção contém os parâmetros que são avaliados para os espaços reservados que se encontram no <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> propriedade.  
  
 O <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> propriedade delega para o <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A> propriedade da <xref:System.Web.UI.WebControls.ObjectDataSourceView> objeto que está associado com o <xref:System.Web.UI.WebControls.ObjectDataSource> controle.  
  
> [!NOTE]
>  Você deve validar qualquer valor de parâmetro de filtro que você recebe do cliente. O tempo de execução simplesmente substitui o valor do parâmetro na expressão de filtro e aplica-se à <xref:System.Data.DataSet> ou <xref:System.Data.DataTable> objeto que é retornado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método. Se você estiver usando o <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> a propriedade como uma medida de segurança para limitar o número de itens que são retornados, você deve validar os valores de parâmetro antes que a filtragem ocorra.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como exibir os dados filtrados usando um <xref:System.Web.UI.WebControls.ObjectDataSource> controle para recuperar dados de um objeto comercial de camada intermediária e uma <xref:System.Web.UI.WebControls.GridView> controle para exibir os resultados. O <xref:System.Web.UI.WebControls.ObjectDataSource> controle pode filtrar os dados somente quando o método que recupera os dados recupera-o como uma <xref:System.Data.DataSet> ou <xref:System.Data.DataTable> objeto. Por esse motivo, o <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propriedade identifica um método de objeto comercial que recupera dados como um <xref:System.Data.DataSet>.  
  
 O exemplo de código consiste em uma <xref:System.Web.UI.WebControls.TextBox> controle, um <xref:System.Web.UI.WebControls.GridView> controle, o <xref:System.Web.UI.WebControls.ObjectDataSource> controle e uma **enviar** botão. Por padrão, o <xref:System.Web.UI.WebControls.TextBox> é preenchido com o nome de um dos funcionários da Northwind Traders. O <xref:System.Web.UI.WebControls.GridView> exibe informações sobre o funcionário que é identificado pelo nome no <xref:System.Web.UI.WebControls.TextBox>. Para recuperar dados em outro funcionário, insira o nome completo do funcionário na <xref:System.Web.UI.WebControls.TextBox>e, em seguida, clique em de **enviar** botão.  
  
 O <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> propriedade especifica uma expressão que é usada para filtrar os dados recuperados pelo método que é especificado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propriedade. Ele usa espaços reservados de parâmetros que são avaliados para os parâmetros que estão contidos no <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> coleção. Neste exemplo, o espaço reservado de parâmetro é delimitado por aspas simples porque o tipo do parâmetro é um tipo de cadeia de caracteres que pode conter espaços. Se o tipo do parâmetro é um tipo numérico ou data, delimitadora aspas não são necessárias.  
  
> [!IMPORTANT]
>  Este exemplo tem uma caixa de texto que aceita entrada do usuário, que é uma potencial ameaça de segurança. Por padrão, as páginas da Web do ASP.NET validam que a entrada do usuário não inclui elementos HTML ou script. Para obter mais informações, consulte [Visão geral de explorações de script](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/objds9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/objds9vb.aspx#1)]  
  
 O exemplo de código a seguir fornece um exemplo de um objeto comercial de camada intermediária que usa o exemplo de código anterior. O exemplo de código consiste em duas classes básicas:  
  
-   O `EmployeeLogic` classe, que é uma classe que encapsula a lógica de negócios.  
  
-   O `NorthwindEmployee` classe, que é uma classe de modelo que contém apenas a funcionalidade básica que é necessário para carregar e manter os dados da camada de dados.  
  
 Para simplificar, o `EmployeeLogic` classe cria um conjunto estático de dados, em vez de recuperar os dados de uma camada de dados. Também é útil para este exemplo, porque o exemplo se baseia em que você forneça o nome completo de um funcionário da Northwind Traders para demonstrar a filtragem. Para obter um exemplo de trabalho completa, você deve compilar e usar essas classes com os exemplos de código do Web Forms que são fornecidos.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/northwindemployee9.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/northwindemployee9.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">A propriedade <see cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" /> foi definida e o método <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" /> não retorna um <see cref="T:System.Data.DataSet" /> ou <see cref="T:System.Data.DataTable" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Filtering" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">{1&amp;gt;Controles de servidor Web de fonte de dados&amp;lt;1}</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Visão geral do controle ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">{1&amp;gt;Criando um objeto de origem de controle ObjectDataSource&amp;lt;1}</related>
      </Docs>
    </Member>
    <Member MemberName="Filtering">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler Filtering;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler Filtering" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Filtering" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Filtering As ObjectDataSourceFilteringEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceFilteringEventHandler ^ Filtering;" />
      <MemberSignature Language="F#" Value="member this.Filtering : System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler " Usage="member this.Filtering : System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre antes de uma operação de filtragem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lidar com o <xref:System.Web.UI.WebControls.ObjectDataSource.Filtering> evento para executar operações de validação nos valores de parâmetro de filtro antes do <xref:System.Web.UI.WebControls.ObjectDataSource> controle executa uma operação de filtro. Você pode cancelar a operação selecionada, definindo o <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propriedade do <xref:System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs> para `true`. O evento é gerado apenas se o <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> propriedade está definida.  
  
 O <xref:System.Web.UI.WebControls.ObjectDataSource.Filtering?displayProperty=nameWithType> evento delega para o <xref:System.Web.UI.WebControls.ObjectDataSourceView.Filtering?displayProperty=nameWithType> eventos da <xref:System.Web.UI.WebControls.ObjectDataSourceView> que está associado com o <xref:System.Web.UI.WebControls.ObjectDataSource> controle.  
  
> [!IMPORTANT]
>  Você deve validar qualquer valor de parâmetro de filtro que você recebe do cliente. O tempo de execução simplesmente substitui o valor do parâmetro na expressão de filtro e aplica-se à <xref:System.Data.DataSet> ou <xref:System.Data.DataTable> objeto que é retornado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método. Se você estiver usando o <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> a propriedade como uma medida de segurança para limitar o número de itens que são retornados, você deve validar os valores de parâmetro antes que a filtragem ocorra.  
  
 Para obter mais informações sobre como manipular eventos, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">{1&amp;gt;Controles de servidor Web de fonte de dados&amp;lt;1}</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Visão geral do controle ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">{1&amp;gt;Criando um objeto de origem de controle ObjectDataSource&amp;lt;1}</related>
      </Docs>
    </Member>
    <Member MemberName="FilterParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection FilterParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection FilterParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilterParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ FilterParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FilterParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSource.FilterParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma coleção de parâmetros associados a espaços reservados para parâmetros na cadeia de caracteres <see cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />.</summary>
        <value>Um <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> que contém um conjunto de parâmetros associados a quaisquer espaços reservados para parâmetro encontrados na propriedade <see cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.ObjectDataSource> controle dá suporte à filtragem de dados somente quando o <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método retorna um <xref:System.Data.DataSet> ou <xref:System.Data.DataTable> objeto.  
  
 A sintaxe que é usada para o <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> é uma expressão de estilo de cadeia de caracteres de formato. A sintaxe de expressão de filtro é a mesma sintaxe que é aceito pelo <xref:System.Data.DataColumn.Expression%2A> propriedade. Se você adicionar parâmetros para o <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> coleção, você também pode incluir espaços reservados de cadeia de caracteres de formato. Por exemplo, incluir `"{0}"` na expressão para substituir valores de parâmetro. Os espaços reservados são substituídos de acordo com o índice do parâmetro no <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> coleção.  
  
 Você pode incluir parâmetros no <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> propriedade. Se o parâmetro for um tipo de cadeia de caracteres ou caractere, coloque o parâmetro entre aspas simples. Aspas não são necessárias se o parâmetro for um tipo numérico.  
  
 O <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> propriedade recupera o <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A> contidos pela propriedade de <xref:System.Web.UI.WebControls.ObjectDataSourceView> objeto que está associado com o <xref:System.Web.UI.WebControls.ObjectDataSource> controle.  
  
   
  
## Examples  
 Esta seção contém dois exemplos de código. O primeiro exemplo de código demonstra como exibir os dados filtrados usando um <xref:System.Web.UI.WebControls.ObjectDataSource> objeto para recuperar dados de um objeto comercial de camada intermediária e uma <xref:System.Web.UI.WebControls.GridView> controle para exibir os resultados. O segundo exemplo de código fornece um exemplo de um objeto comercial de camada intermediária que é usado no primeiro exemplo de código.  
  
 O exemplo de código a seguir demonstra como exibir os dados filtrados usando um <xref:System.Web.UI.WebControls.ObjectDataSource> controle para recuperar dados de um objeto comercial de camada intermediária e uma <xref:System.Web.UI.WebControls.GridView> controle para exibir os resultados. O <xref:System.Web.UI.WebControls.ObjectDataSource> controle pode filtrar os dados somente quando o método que recupera os dados recupera-o como uma <xref:System.Data.DataSet> ou <xref:System.Data.DataTable> objeto. Por esse motivo, o <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propriedade identifica um método de objeto comercial que recupera dados como um <xref:System.Data.DataSet>.  
  
 O exemplo de código consiste em uma <xref:System.Web.UI.WebControls.TextBox> controle, um <xref:System.Web.UI.WebControls.GridView> controle, o <xref:System.Web.UI.WebControls.ObjectDataSource> controle e uma **enviar** botão. Por padrão, o <xref:System.Web.UI.WebControls.TextBox> é preenchido com o nome de um dos funcionários da Northwind Traders. O <xref:System.Web.UI.WebControls.GridView> exibe informações sobre o funcionário que é identificado pelo nome no <xref:System.Web.UI.WebControls.TextBox>. Para recuperar dados em outro funcionário, na <xref:System.Web.UI.WebControls.TextBox>, digite o nome completo do funcionário e, em seguida, clique em de **enviar** botão.  
  
 O <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> propriedade especifica uma expressão que é usada para filtrar os dados recuperados com o <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propriedade. Ele usa espaços reservados de parâmetros que são avaliados para os parâmetros que estão contidos no <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> coleção. Neste exemplo, o espaço reservado de parâmetro é delimitado por aspas simples porque o tipo do parâmetro é um tipo de cadeia de caracteres que pode conter espaços. Se o tipo do parâmetro é um tipo numérico ou data, delimitadora aspas não são necessárias. O <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> coleção contém um parâmetro, uma <xref:System.Web.UI.WebControls.FormParameter> que está associado ao objeto o <xref:System.Web.UI.WebControls.TextBox> controle.  
  
> [!IMPORTANT]
>  Você deve validar qualquer valor de parâmetro de filtro que você recebe do cliente. O tempo de execução simplesmente substitui o valor do parâmetro na expressão de filtro e aplica-se à <xref:System.Data.DataView> objeto que é retornado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método. Se você estiver usando o <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> a propriedade como uma medida de segurança para limitar o número de itens que são retornados, você deve validar os valores de parâmetro antes que a filtragem ocorra.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/objds9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/objds9vb.aspx#1)]  
  
 O exemplo de código a seguir fornece um exemplo de um objeto comercial de camada intermediária que usa o exemplo de código anterior. O exemplo de código consiste em duas classes básicas:  
  
-   O `EmployeeLogic` classe, que é uma classe que encapsula a lógica de negócios.  
  
-   O `NorthwindEmployee` classe, que é uma classe de modelo que contém apenas a funcionalidade básica que é necessário para carregar e manter os dados da camada de dados.  
  
 Para simplificar, o `EmployeeLogic` classe cria um conjunto estático de dados, em vez de recuperar os dados de uma camada de dados. Também é útil para este exemplo, porque o exemplo se baseia em que você forneça o nome completo de um funcionário da Northwind Traders para demonstrar a filtragem. Para obter um exemplo de trabalho completa, você deve compilar e usar essas classes com os exemplos de código do Web Forms que são fornecidos.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/northwindemployee9.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/northwindemployee9.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Se você definir a propriedade <see cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />, o método <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" /> não retornará um <see cref="T:System.Data.DataSet" /> ou <see cref="T:System.Data.DataTable" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Filtering" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">{1&amp;gt;Controles de servidor Web de fonte de dados&amp;lt;1}</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Visão geral do controle ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">{1&amp;gt;Criando um objeto de origem de controle ObjectDataSource&amp;lt;1}</related>
      </Docs>
    </Member>
    <Member MemberName="GetView">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.DataSourceView GetView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.DataSourceView GetView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.GetView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetView (viewName As String) As DataSourceView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::DataSourceView ^ GetView(System::String ^ viewName);" />
      <MemberSignature Language="F#" Value="override this.GetView : string -&gt; System.Web.UI.DataSourceView" Usage="objectDataSource.GetView viewName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">O nome da exibição a ser recuperada. Como o <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> dá suporte a apenas uma exibição, <paramref name="viewName" /> é ignorado.</param>
        <summary>Recupera a exibição da fonte de dados nomeada que está associada ao controle de fonte de dados.</summary>
        <returns>O <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> chamado <see langword="DefaultView" /> que está associado à <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.ObjectDataSource> controle dá suporte à exibição da fonte de dados de apenas um. Assim como acontece com todos os objetos de exibição de fonte de dados, o <xref:System.Web.UI.WebControls.ObjectDataSourceView> que está associado com os dados de controle de origem define seus recursos, executa todo o trabalho que é necessário para recuperar dados do armazenamento de dados subjacente e executa operações como classificação, inserção, exclusão e atualização.  
  
 O <xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A> método é destinado a ser chamada por controles associados a dados, não pelo código da página.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">O <paramref name="viewName" /> especificado é <see langword="null" /> ou algo diferente de <see langword="DefaultView" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSourceView" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.GetViewNames" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">{1&amp;gt;Controles de servidor Web de fonte de dados&amp;lt;1}</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Visão geral do controle ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">{1&amp;gt;Criando um objeto de origem de controle ObjectDataSource&amp;lt;1}</related>
      </Docs>
    </Member>
    <Member MemberName="GetViewNames">
      <MemberSignature Language="C#" Value="protected override System.Collections.ICollection GetViewNames ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.ICollection GetViewNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.GetViewNames" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetViewNames () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::ICollection ^ GetViewNames();" />
      <MemberSignature Language="F#" Value="override this.GetViewNames : unit -&gt; System.Collections.ICollection" Usage="objectDataSource.GetViewNames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera uma coleção de nomes que representa a lista de objetos de exibição que estão associados ao objeto <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</summary>
        <returns>Uma <see cref="T:System.Collections.ICollection" /> que contém os nomes das exibições associadas à <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.ObjectDataSource> controle dá suporte a apenas uma exibição, chamada `DefaultView`, em seus dados subjacentes. O <xref:System.Web.UI.WebControls.ObjectDataSource.GetViewNames%2A> método retorna uma coleção de elemento único desse nome de um modo de exibição.  
  
 O <xref:System.Web.UI.WebControls.ObjectDataSource.GetViewNames%2A> método é destinado a ser chamada por controles associados a dados, não pelo código da página.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.GetView(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">{1&amp;gt;Controles de servidor Web de fonte de dados&amp;lt;1}</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Visão geral do controle ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">{1&amp;gt;Criando um objeto de origem de controle ObjectDataSource&amp;lt;1}</related>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public int Insert ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Insert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Insert();" />
      <MemberSignature Language="F#" Value="member this.Insert : unit -&gt; int" Usage="objectDataSource.Insert " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Executa uma operação de inserção chamando o método que é identificado pela propriedade <see cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" /> e todos os parâmetros na coleção <see cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />.</summary>
        <returns>Um valor que representa o número de linhas inseridas no armazenamento de dados subjacente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Antes do <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> operação é executada, o <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting%2A> método é chamado para acionar o <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> eventos. Você pode lidar com o <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> eventos para examinar os valores dos parâmetros e executar qualquer pré-processamento antes de um <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> operação. Para executar uma operação de inserção, o <xref:System.Web.UI.WebControls.ObjectDataSourceView> objeto usa a reflexão para criar uma instância do objeto que é identificado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> propriedade. Depois, ele chama o método que é identificado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> propriedade, usando qualquer associado <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> propriedades. Após o <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> operação é concluída, o <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A> método é chamado para acionar o <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted> eventos. Você pode manipular o <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted> para examinar quaisquer valores de retorno, parâmetros de saída e exceções e para executar qualquer pós-processamento de eventos.  
  
 O <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> método delega para o <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> método da <xref:System.Web.UI.WebControls.ObjectDataSourceView> que está associado com o <xref:System.Web.UI.WebControls.ObjectDataSource> controle.  
  
 Para obter mais informações sobre mesclagem de parâmetro, o tempo de vida do objeto e a resolução de método, consulte <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>.  
  
## <a name="data-bound-controls"></a>Controles ligados a dados  
 Quando o <xref:System.Web.UI.WebControls.ObjectDataSource> objeto está associado ao controle associado a dados, como o <xref:System.Web.UI.WebControls.GridView> controle, não é necessário chamar o <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> método a partir do código da página. O <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> método é invocado diretamente pelo controle associado a dados.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/a806fa2c-fe6a-405f-869c-74e804a642ea">Passo a passo: Associação de dados a um objeto comercial personalizado</related>
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">{1&amp;gt;Controles de servidor Web de fonte de dados&amp;lt;1}</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Visão geral do controle ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">{1&amp;gt;Criando um objeto de origem de controle ObjectDataSource&amp;lt;1}</related>
      </Docs>
    </Member>
    <Member MemberName="Inserted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Inserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Inserted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Inserted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserted As ObjectDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceStatusEventHandler ^ Inserted;" />
      <MemberSignature Language="F#" Value="member this.Inserted : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " Usage="member this.Inserted : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando uma operação <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" /> foi concluída.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lidar com o <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted> evento para examinar os valores dos parâmetros de saída ou um valor de retorno, ou para determinar se uma exceção foi lançada após um <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> operação foi concluída. O valor de retorno, parâmetros de saída e as propriedades de tratamento de exceção estão disponíveis do <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> objeto que está associado com o evento.  
  
 Para obter mais informações sobre como manipular eventos, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Inserting" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">{1&amp;gt;Controles de servidor Web de fonte de dados&amp;lt;1}</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Visão geral do controle ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">{1&amp;gt;Criando um objeto de origem de controle ObjectDataSource&amp;lt;1}</related>
      </Docs>
    </Member>
    <Member MemberName="Inserting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Inserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Inserting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Inserting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserting As ObjectDataSourceMethodEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceMethodEventHandler ^ Inserting;" />
      <MemberSignature Language="F#" Value="member this.Inserting : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " Usage="member this.Inserting : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre antes de uma operação de <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lidar com o <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> evento para executar a inicialização adicional que é específica para seu aplicativo, para validar os valores de parâmetros ou alterar os valores de parâmetro antes do <xref:System.Web.UI.WebControls.ObjectDataSource> controle executa a operação de inserção. Os parâmetros estão disponíveis como um <xref:System.Collections.IDictionary> coleção que é acessada pelo <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> propriedade, que é exposta pelo <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> objeto.  
  
 Para obter mais informações sobre como manipular eventos, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Esta seção contém dois exemplos de código. O primeiro exemplo de código demonstra como usar um <xref:System.Web.UI.WebControls.ObjectDataSource> objeto com um objeto comercial e um <xref:System.Web.UI.WebControls.DetailsView> controle para inserir dados. O segundo exemplo de código fornece um exemplo do objeto comercial de camada intermediária que é usado no primeiro exemplo de código.  
  
 O exemplo de código a seguir demonstra como usar um <xref:System.Web.UI.WebControls.ObjectDataSource> controle com um objeto comercial e um <xref:System.Web.UI.WebControls.DetailsView> controle para inserir dados. Inicialmente, o <xref:System.Web.UI.WebControls.DetailsView> exibirá uma nova `NorthwindEmployee` registros, juntamente com uma gerada automaticamente **inserir** botão. Depois de inserir dados nos campos do <xref:System.Web.UI.WebControls.DetailsView> de controle, clique em de **inserir** botão. O <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> propriedade identifica qual método executa a operação de inserção.  
  
 Neste exemplo, o `UpdateEmployeeInfo` método é usado para executar uma instrução insert; no entanto, ele requer um `NorthwindEmployee` parâmetro para inserir os dados. Por esse motivo, a coleção de cadeias de caracteres que o <xref:System.Web.UI.WebControls.DetailsView> controle passa automaticamente não é suficiente. O `NorthwindEmployeeInserting` delegado é um <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler> objeto que manipula a <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> evento e permite que você manipule os parâmetros de entrada antes do <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> operação continua. Porque o `UpdateEmployeeInfo` método exige um `NorthwindEmployee` do objeto como um parâmetro, um é criado usando a coleção de cadeias de caracteres e é adicionado ao <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> coleção usando um nome de parâmetro (`ne`) que o método espera. Você pode executar etapas como essas ao usar um objeto de camada intermediária existente como uma fonte de dados com tipos e métodos que não foram projetados especificamente para uso com o <xref:System.Web.UI.WebControls.ObjectDataSource> controle.  
  
 Quando o <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> operação é executada, o método que é identificado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> propriedade é chamada. Se o `Insert` método do objeto tem uma assinatura de método que inclui parâmetros, o <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> coleção deve conter um parâmetro com nomes que coincidem com os parâmetros de assinatura de método para o <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> método seja concluído com êxito.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/objds4cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/objds4vb.aspx#1)]  
  
 O exemplo de código a seguir fornece um exemplo de um objeto comercial de camada intermediária que usa o exemplo de código anterior. O exemplo de código consiste em duas classes básicas:  
  
-   O `EmployeeLogic` classe, que é uma classe sem monitoração de estado que encapsula a lógica de negócios.  
  
-   O `NorthwindEmployee` classe, que é uma classe de modelo que contém apenas a funcionalidade básica que é necessário para carregar e manter os dados da camada de dados.  
  
 Adicional `NorthwindDataException` classe é fornecida como uma conveniência. Para obter um exemplo de trabalho completa, você deve compilar e usar essas classes. O `UpdateEmployeeInfo` método não é totalmente implementado, portanto, você não irá inserir dados no banco de dados Northwind Traders quando você testar este exemplo.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/northwindemployee4.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/northwindemployee4.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Inserted" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">{1&amp;gt;Controles de servidor Web de fonte de dados&amp;lt;1}</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Visão geral do controle ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">{1&amp;gt;Criando um objeto de origem de controle ObjectDataSource&amp;lt;1}</related>
      </Docs>
    </Member>
    <Member MemberName="InsertMethod">
      <MemberSignature Language="C#" Value="public string InsertMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InsertMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InsertMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.InsertMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o nome do método ou da função invocada pelo controle <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> para inserir os dados.</summary>
        <value>Uma cadeia de caracteres que representa o nome do método ou da função usado pelo <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> para inserir os dados. O padrão é uma cadeia de caracteres vazia ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O objeto comercial é assumido como para inserir um registro de dados por vez, em vez de em um lote.  
  
 O <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> propriedade delega para o <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> propriedade da <xref:System.Web.UI.WebControls.ObjectDataSourceView> objeto que está associado com o <xref:System.Web.UI.WebControls.ObjectDataSource> objeto.  
  
## <a name="object-lifetime"></a>Tempo de vida do objeto  
 O que é identificado pelo método as <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> propriedade pode ser um método de instância ou um `static` (`Shared` no Visual Basic) método. Se for um método de instância, o objeto comercial é criado e destruída cada vez que o método especificado pela <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> propriedade é chamada. Você pode lidar com o <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> e <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> eventos para trabalhar com o objeto de negócios antes do <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> propriedade é chamada. Você também pode lidar com o <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> evento que é gerado após o método que é especificado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> propriedade é chamada. Se o objeto comercial implementa o <xref:System.IDisposable> interface, o <xref:System.IDisposable.Dispose%2A> método é chamado antes que o objeto é destruído. Se o método `static` (`Shared` no Visual Basic), o objeto de negócios nunca é criado e você não pode manipular o <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>, <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>, e <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> eventos.  
  
## <a name="parameter-merging"></a>Parâmetro de mesclagem  
 Parâmetros são adicionados à <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> coleção de três fontes:  
  
-   No controle associado a dados, no tempo de execução.  
  
-   Do `InsertParameters` elemento, declarativamente.  
  
-   Do `Inserting` método, por meio de programação.  
  
 Primeiro, todos os parâmetros que são gerados a partir de controles ligados a dados são adicionados ao <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> coleção. Por exemplo, se o <xref:System.Web.UI.WebControls.ObjectDataSource> controle é associado a um <xref:System.Web.UI.WebControls.GridView> controle que tem as colunas `Name` e `Number`, os parâmetros para `Name` e `Number` são adicionados à coleção. O tipo de dados desses parâmetros é `string`. Em seguida, os parâmetros que são listados no `InsertParameters` elemento são adicionadas. Se um parâmetro na `InsertParameters` elemento for encontrado com o mesmo nome como um parâmetro que já está na <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> coleção, o parâmetro existente é modificada para coincidir com o que é especificado no parâmetro o `InsertParameters` elemento. Normalmente, isso é usado para modificar o tipo de dados no parâmetro. Por fim, você pode adicionar e remover parâmetros em programaticamente os <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> evento, que ocorre antes do <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> método é executado. O método será resolvido depois que os parâmetros são mesclados. Resolução do método é abordada na próxima seção.  
  
> [!IMPORTANT]
>  Você deve validar qualquer valor de parâmetro que você recebe do cliente. O tempo de execução simplesmente substitui o valor de parâmetro para o <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> propriedade.  
  
## <a name="method-resolution"></a>Método de resolução  
 Quando o <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> método é chamado, os campos de dados do controle associado a dados, os parâmetros que foram criados declarativamente na `InsertParameters` elemento e os parâmetros que foram adicionados a <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> manipulador de eventos são mescladas. (Para obter mais informações, consulte a seção anterior). O <xref:System.Web.UI.WebControls.ObjectDataSource> objeto, em seguida, tenta encontrar um método a ser chamado. Primeiro, ele procura por um ou mais métodos com o nome especificado no <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> propriedade. Se nenhuma correspondência for encontrada, um <xref:System.InvalidOperationException> exceção é lançada. Se uma correspondência for encontrada, em seguida, procura nomes de parâmetros correspondentes. Por exemplo, suponha que um tipo que é especificado pela <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> propriedade tem dois métodos chamados `InsertARecord`. Uma `InsertARecord` tem um parâmetro, `ID`e o outro `InsertARecord` tem dois parâmetros, `Name` e `Number`. Se o <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> coleção tem apenas um parâmetro denominado `ID`, o `InsertARecord` método com apenas o `ID` parâmetro é chamado. O tipo do parâmetro não é verificado na resolução de métodos. Não importa a ordem dos parâmetros.  
  
 Se o <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> propriedade for definida, o método é resolvido de maneira diferente. O <xref:System.Web.UI.WebControls.ObjectDataSource> procura por um método com o nome especificado na <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> propriedade que recebe um parâmetro do tipo que é especificada no <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> propriedade. Nesse caso, o nome do parâmetro não importa.  
  
   
  
## Examples  
 Esta seção contém dois exemplos de código. O primeiro exemplo de código demonstra como usar um <xref:System.Web.UI.WebControls.ObjectDataSource> objeto com um objeto comercial e um <xref:System.Web.UI.WebControls.DetailsView> controle para inserir dados. O segundo exemplo de código fornece um exemplo do objeto comercial de camada intermediária que é usado no primeiro exemplo de código.  
  
 O exemplo de código a seguir demonstra como usar um <xref:System.Web.UI.WebControls.ObjectDataSource> controle com um objeto comercial e um <xref:System.Web.UI.WebControls.DetailsView> controle para inserir dados. Inicialmente, o <xref:System.Web.UI.WebControls.DetailsView> exibirá uma nova `NorthwindEmployee` registros, juntamente com uma gerada automaticamente **inserir** botão. Depois de inserir dados nos campos do <xref:System.Web.UI.WebControls.DetailsView> de controle, clique em de **inserir** botão. O <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> propriedade identifica qual método executa a operação de inserção.  
  
 Neste exemplo, o `UpdateEmployeeInfo` método é usado para executar uma instrução insert; no entanto, ele requer um `NorthwindEmployee` parâmetro para inserir os dados. Por esse motivo, a coleção de cadeias de caracteres que o <xref:System.Web.UI.WebControls.DetailsView> controle passa automaticamente não é suficiente. O `NorthwindEmployeeInserting` delegado é um <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler> objeto que manipula a <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> evento e permite que você manipule os parâmetros de entrada antes do <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> operação continua. Porque o `UpdateEmployeeInfo` método exige um `NorthwindEmployee` do objeto como um parâmetro, um é criado usando a coleção de cadeias de caracteres e é adicionado ao <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> coleção usando um nome de parâmetro (`ne`) que o método espera. Você pode executar etapas como essas ao usar um objeto de camada intermediária existente como uma fonte de dados com tipos e métodos que não foram projetados especificamente para uso com o <xref:System.Web.UI.WebControls.ObjectDataSource> controle.  
  
 Quando o <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> operação é executada, o método que é identificado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> propriedade é chamada. Se o `Insert` método do objeto tem uma assinatura de método que inclui parâmetros, o <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> coleção deve conter um parâmetro com nomes que coincidem com os parâmetros de assinatura de método para o <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> método seja concluído com êxito.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/objds4cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/objds4vb.aspx#1)]  
  
 O exemplo de código a seguir fornece um exemplo de um objeto comercial de camada intermediária que usa o exemplo de código anterior. O exemplo de código consiste em duas classes básicas:  
  
-   O `EmployeeLogic` classe, que é uma classe sem monitoração de estado que encapsula a lógica de negócios.  
  
-   O `NorthwindEmployee` classe, que é uma classe de modelo que contém apenas a funcionalidade básica que é necessário para carregar e manter os dados da camada de dados.  
  
 Adicional `NorthwindDataException` classe é fornecida como uma conveniência. Para obter um exemplo de trabalho completa, você deve compilar e usar essas classes. O `UpdateEmployeeInfo` método não é totalmente implementado, portanto, você não irá inserir dados no banco de dados Northwind Traders quando você testar este exemplo.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/northwindemployee4.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/northwindemployee4.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">{1&amp;gt;Controles de servidor Web de fonte de dados&amp;lt;1}</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Visão geral do controle ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">{1&amp;gt;Criando um objeto de origem de controle ObjectDataSource&amp;lt;1}</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011">Usando o Entity Framework e o controle ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="InsertParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection InsertParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InsertParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ InsertParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InsertParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a coleção de parâmetros que contém os parâmetros usados pela propriedade <see cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" />.</summary>
        <value>Um <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> que contém os parâmetros usados pelo método identificado pela propriedade <see cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Os nomes e tipos dos parâmetros que estão contidos na <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> coleção deve coincidir com os nomes e tipos dos parâmetros que estão no <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> assinatura de propriedade. Os nomes de parâmetros diferenciam maiusculas de minúsculas. Ao trabalhar com controles ligados a dados que fornecem os parâmetros, como o <xref:System.Web.UI.WebControls.GridView> e <xref:System.Web.UI.WebControls.DetailsView> controles, o <xref:System.Web.UI.WebControls.ObjectDataSource> controle automaticamente mescla todos os parâmetros que são especificados explicitamente na coleção com os parâmetros que são fornecido pelo controle associado a dados. Isso é importante porque os controles ligados a dados sempre fornecem seus parâmetros conforme <xref:System.String> tipos e se a assinatura do método inclui numérico ou tipos de data, você deve explicitamente incluir um parâmetro no <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> coleção com o tipo correto. Caso contrário, o <xref:System.Web.UI.WebControls.ObjectDataSource> controle tentará converter os parâmetros de acordo com o tipo que é definido pelos parâmetros na coleção. Para obter mais informações, consulte [usando parâmetros com o controle ObjectDataSource](https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4).  
  
 O <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> propriedade recupera o <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> contidos pela propriedade de <xref:System.Web.UI.WebControls.ObjectDataSourceView> que está associado com o <xref:System.Web.UI.WebControls.ObjectDataSource> controle.  
  
 Para obter mais informações sobre mesclagem de parâmetro, o tempo de vida do objeto e a resolução de método, consulte <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>.  
  
   
  
## Examples  
 Esta seção contém dois exemplos de código. O primeiro exemplo de código demonstra como usar um <xref:System.Web.UI.WebControls.ObjectDataSource> objeto com um objeto comercial e um <xref:System.Web.UI.WebControls.DetailsView> controle para inserir dados. O segundo exemplo de código fornece uma implementação de exemplo do `Insert` método que é usado no primeiro exemplo de código.  
  
 O exemplo de código a seguir demonstra como usar um <xref:System.Web.UI.WebControls.ObjectDataSource> controle com um objeto comercial e um <xref:System.Web.UI.WebControls.DetailsView> controle para inserir dados. Inicialmente, o <xref:System.Web.UI.WebControls.DetailsView> exibe as caixas de texto no qual você pode inserir dados para um novo `NorthwindEmployee` registros, juntamente com uma gerada automaticamente **inserir** botão. Depois de inserir dados nos campos do <xref:System.Web.UI.WebControls.DetailsView> de controle, clique em de **inserir** botão. O <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> propriedade identifica qual método executa a operação de inserção.  
  
 Se você clicar na **inserir** botão, a operação é executada usando o método que é especificado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> propriedade e quaisquer parâmetros que são especificados no <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> coleção. Neste exemplo de código, um parâmetro é especificado no <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> coleção que corresponde à ID. do supervisor Isso ocorre porque, embora a ID é exibida na <xref:System.Web.UI.WebControls.GridView.Rows%2A> coleta para o <xref:System.Web.UI.WebControls.DetailsView> controlar como um <xref:System.Web.UI.WebControls.BoundField> do objeto, ela é passada como uma cadeia de caracteres para o <xref:System.Web.UI.WebControls.ObjectDataSource> controle. Adicionando explicitamente para o <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> coleção com uma <xref:System.Web.UI.WebControls.Parameter.Type%2A> propriedade definida como o <xref:System.TypeCode.Int32> valor, ela será transmitida corretamente pelo <xref:System.Web.UI.WebControls.ObjectDataSource> para o método como um <xref:System.Int32>, e não como uma cadeia de caracteres.  
  
 Quando o <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> operação é executada, o método que é identificado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> propriedade é chamada. Se o <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> método do objeto tem uma assinatura de método que inclui parâmetros, o <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> coleção deve conter parâmetros que têm nomes que coincidem com os parâmetros de assinatura de método para o <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> método seja concluído com êxito.  
  
> [!IMPORTANT]
>  Você deve validar qualquer valor de parâmetro que você recebe do cliente. O tempo de execução simplesmente substitui o valor de parâmetro para o <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> propriedade.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_8#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/CS/objds8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_8#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/VB/objds8vb.aspx#1)]  
  
 O exemplo de código a seguir fornece um exemplo de implementação do `Insert` método que usa o exemplo de código anterior. O `InsertNewEmployeeWrapper` método é adicionado à `EmployeeLogic` objeto de camada intermediária que é fornecido na <xref:System.Web.UI.WebControls.ObjectDataSource> visão geral da classe para habilitar o objeto trabalhar mais facilmente com o <xref:System.Web.UI.WebControls.ObjectDataSource> controle em cenários de Web, sem uma reescrita substancial para o real lógica de negócios.  
  
 Para executar o exemplo, você deve ter o `NorthwindEmployee` classe que é fornecida no <xref:System.Web.UI.WebControls.ObjectDataSource> visão geral da classe. Este exemplo ilustra apenas como se conectar a <xref:System.Web.UI.WebControls.ObjectDataSource> para um método de objeto comercial que obtém dados para um novo registro de banco de dados usando parâmetros. O exemplo não adiciona registros no banco de dados, porque o `Save` método da `NorthwindEmployee` classe não inclui o código para atualizar o banco de dados.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_8#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/CS/northwindemployee8.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_8#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/VB/northwindemployee8.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">{1&amp;gt;Controles de servidor Web de fonte de dados&amp;lt;1}</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Visão geral do controle ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">{1&amp;gt;Criando um objeto de origem de controle ObjectDataSource&amp;lt;1}</related>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="objectDataSource.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Um objeto que contém os valores de estado de exibição salvos para o controle.</param>
        <summary>Carrega o estado de exibição salvo anteriormente do controle <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método é usado principalmente pela infraestrutura do .NET Framework e não se destina a ser usado diretamente do seu código. No entanto, os desenvolvedores de controle podem substituir este método para especificar como um controle de servidor personalizado restaura o estado de exibição. Para obter mais informações, consulte [visão geral do gerenciamento de estado ASP.NET](https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)).  
  
 O <xref:System.Web.UI.WebControls.ObjectDataSource.LoadViewState%2A> método é usado para carregar o estado de exibição salvo anteriormente do <xref:System.Web.UI.WebControls.ObjectDataSource> controle.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>O <see cref="M:System.Web.UI.WebControls.ObjectDataSource.LoadViewState(System.Object)" /> método é usado principalmente por desenvolvedores de controle ao estender o <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> controle.</para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">{1&amp;gt;Controles de servidor Web de fonte de dados&amp;lt;1}</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Visão geral do controle ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">{1&amp;gt;Criando um objeto de origem de controle ObjectDataSource&amp;lt;1}</related>
      </Docs>
    </Member>
    <Member MemberName="MaximumRowsParameterName">
      <MemberSignature Language="C#" Value="public string MaximumRowsParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MaximumRowsParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumRowsParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MaximumRowsParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumRowsParameterName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("maximumRows")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o nome do parâmetro de método de recuperação de dados do objeto comercial usado para indicar o número de registros a serem recuperados para suporte à paginação de fonte de dados.</summary>
        <value>O nome do parâmetro <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> que é usado para indicar o número de registros a recuperar. O padrão é <c>"maximumRows"</c>.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> propriedade é usada para dar suporte à paginação de fonte de dados. Para obter informações sobre o suporte a paginação o <xref:System.Web.UI.WebControls.ObjectDataSource> de controle, consulte <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>.  
  
 O <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> propriedade delega para o <xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A> propriedade da <xref:System.Web.UI.WebControls.ObjectDataSourceView> objeto que está associado com o <xref:System.Web.UI.WebControls.ObjectDataSource> controle.  
  
   
  
## Examples  
 Os três exemplos a seguir mostram uma página da Web, uma classe de página code-behind e uma classe de acesso a dados que permitem que o usuário escolha quantos registros é exibido na página.  
  
 A página da Web contém uma <xref:System.Web.UI.WebControls.ObjectDataSource> controle cuja <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> estiver definida como `true`. O <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> estiver definida como o nome de um método que retorna o número total de registros na consulta. O <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> propriedade e o <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> estiverem definidas como os nomes dos parâmetros que são usados no método Select. A página também contém um <xref:System.Web.UI.WebControls.DropDownList> controle.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx#1)]  
  
 O segundo exemplo mostra um manipulador para o <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged?displayProperty=nameWithType> eventos do <xref:System.Web.UI.WebControls.DropDownList> controle. O código nos conjuntos de manipulador a <xref:System.Web.UI.WebControls.GridView.PageSize%2A> propriedade para a seleção do usuário.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx.vb#2)]  
  
 O terceiro exemplo mostra a classe de acesso de dados que recupera dados da tabela Customers. Ele inclui um método chamado `GetSubsetOfEmployees`, que é atribuído à <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propriedade do <xref:System.Web.UI.WebControls.ObjectDataSource> controle. O exemplo também inclui um método chamado `GetEmployeeCount`, que é atribuído para o <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> propriedade do <xref:System.Web.UI.WebControls.ObjectDataSource> controle. A classe usa LINQ para consultar a tabela de clientes. O exemplo requer uma classe LINQ to SQL que representa o banco de dados Northwind e a tabela Customers. Para obter mais informações, consulte [como: Criar Classes LINQ to SQL em um projeto Web](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/App_Code/CustomerLogic.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/App_Code/CustomerLogic.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanPage" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">{1&amp;gt;Controles de servidor Web de fonte de dados&amp;lt;1}</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Visão geral do controle ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">{1&amp;gt;Criando um objeto de origem de controle ObjectDataSource&amp;lt;1}</related>
      </Docs>
    </Member>
    <Member MemberName="ObjectCreated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectCreated As ObjectDataSourceObjectEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceObjectEventHandler ^ ObjectCreated;" />
      <MemberSignature Language="F#" Value="member this.ObjectCreated : System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler " Usage="member this.ObjectCreated : System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre depois que o objeto identificado pela propriedade <see cref="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" /> é criado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lidar com o <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> eventos para chamar outros métodos no objeto comercial, definir propriedades ou executar outra inicialização que é específica para o objeto de negócios antes do <xref:System.Web.UI.WebControls.ObjectDataSource> objeto chama o método de dados do objeto de negócios para executar uma operação de dados . Uma referência ao objeto é acessada pela <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> propriedade, que é exposta pelo <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> objeto.  
  
 Se o método que é identificado para executar a operação de dados será `static` (`Shared` no Visual Basic), o <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> e <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> eventos nunca são gerados.  
  
 Para obter mais informações sobre como manipular eventos, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">{1&amp;gt;Controles de servidor Web de fonte de dados&amp;lt;1}</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Visão geral do controle ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">{1&amp;gt;Criando um objeto de origem de controle ObjectDataSource&amp;lt;1}</related>
      </Docs>
    </Member>
    <Member MemberName="ObjectCreating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectCreating As ObjectDataSourceObjectEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceObjectEventHandler ^ ObjectCreating;" />
      <MemberSignature Language="F#" Value="member this.ObjectCreating : System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler " Usage="member this.ObjectCreating : System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre antes que o objeto identificado pela propriedade <see cref="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" /> é criado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o método que é identificado para executar a operação de dados será `static` (`Shared` no Visual Basic), o <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> e <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> eventos nunca são gerados.  
  
 O <xref:System.Web.UI.WebControls.ObjectDataSource> controle automaticamente chama o construtor padrão de um objeto de negócios para criar uma instância dele usando reflexão. Lidar com o <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> evento explicitamente chamar outro construtor e defina a instância do objeto que os resultados para o <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> propriedade de associado <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> objeto.  
  
 Para obter mais informações sobre como manipular eventos, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Esta seção contém dois exemplos de código. O primeiro exemplo de código demonstra como usar um <xref:System.Web.UI.WebControls.ObjectDataSource> objeto com um objeto comercial e um <xref:System.Web.UI.WebControls.GridView> controle para exibir informações. O segundo exemplo de código fornece o objeto de negócios de camada intermediária que é usado no primeiro exemplo de código.  
  
 O exemplo de código a seguir demonstra como usar um <xref:System.Web.UI.WebControls.ObjectDataSource> controle com um objeto comercial e um <xref:System.Web.UI.WebControls.GridView> controle para exibir informações. Você pode trabalhar com um objeto comercial que é muito caro criar (em termos de tempo ou recursos) para cada operação de dados que executa sua página da Web. Pode ser uma maneira de trabalhar com um objeto caro criar uma instância de uma vez e, em seguida, armazena em cache para operações subsequentes, em vez de criar e destruí-lo para cada operação de dados.  
  
> [!NOTE]
>  Em um aplicativo de produção, várias solicitações podem terminar simultaneamente usando a mesma instância. Portanto, o objeto precisa ser implementado de forma thread-safe.  
  
 Este exemplo de código demonstra esse padrão. Você pode manipular o <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> eventos para verificar o cache para um objeto pela primeira vez e apenas criar uma instância do objeto, se um não já está em cache. Em seguida, manipular o <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> eventos em cache o objeto de negócios para uso futuro, em vez de destruí-lo. Neste exemplo de código, o <xref:System.ComponentModel.CancelEventArgs.Cancel?displayProperty=nameWithType> propriedade do <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs> objeto é definido como `true` para direcionar o <xref:System.Web.UI.WebControls.ObjectDataSource> não chamar <xref:System.IDisposable.Dispose%2A> método no objeto.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/objds16cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/objds16vb.aspx#1)]  
  
 O exemplo de código a seguir fornece o objeto de negócios de camada intermediária de exemplo que usa o exemplo de código anterior. O exemplo de código consiste em um objeto de negócios básico, definido pelo `EmployeeLogic` classe, que é uma classe com monitoração de estado que encapsula a lógica de negócios. Para obter um exemplo de trabalho completa, você deve compilar esse código como uma biblioteca e usar essas classes de uma página ASP.NET (arquivo. aspx).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_16#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/northwindemployee16.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_16#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/northwindemployee16.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(System.Web.UI.WebControls.ObjectDataSourceEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">{1&amp;gt;Controles de servidor Web de fonte de dados&amp;lt;1}</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Visão geral do controle ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">{1&amp;gt;Criando um objeto de origem de controle ObjectDataSource&amp;lt;1}</related>
      </Docs>
    </Member>
    <Member MemberName="ObjectDisposing">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler ObjectDisposing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler ObjectDisposing" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectDisposing As ObjectDataSourceDisposingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceDisposingEventHandler ^ ObjectDisposing;" />
      <MemberSignature Language="F#" Value="member this.ObjectDisposing : System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler " Usage="member this.ObjectDisposing : System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre antes que o objeto identificado pela propriedade <see cref="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" /> seja descartado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> é sempre gerado antes que a instância do objeto comercial é descartada. Se o objeto comercial implementa o <xref:System.IDisposable> interface, o <xref:System.IDisposable.Dispose%2A> método é chamado depois que esse evento é gerado.  
  
 Manipular o <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> evento para chamar outros métodos no objeto, definir propriedades ou realizar limpeza que são específica para o objeto antes do objeto é destruído. Uma referência ao objeto é acessada pela <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> propriedade, que é exposta pelo <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> objeto.  
  
 Quando você usa um <xref:System.Web.UI.WebControls.ObjectDataSource> controle com uma classe LINQ to SQL, você deve cancelar o descarte da classe de contexto de dados em um manipulador para o <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> eventos. Esta etapa é necessária porque LINQ to SQL dá suporte à execução adiada, enquanto o <xref:System.Web.UI.WebControls.ObjectDataSource> controle tenta descartar o contexto de dados após a operação de seleção.  
  
 Para obter mais informações sobre como manipular eventos, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Esta seção contém dois exemplos de código. O primeiro exemplo de código demonstra como usar um <xref:System.Web.UI.WebControls.ObjectDataSource> objeto com um objeto comercial e um <xref:System.Web.UI.WebControls.GridView> controle para exibir informações. O segundo exemplo de código fornece o objeto de negócios de camada intermediária que é usado no primeiro exemplo de código.  
  
 O exemplo de código a seguir demonstra como usar um <xref:System.Web.UI.WebControls.ObjectDataSource> controle com um objeto comercial e um <xref:System.Web.UI.WebControls.GridView> controle para exibir informações. Você pode trabalhar com um objeto comercial que é muito caro criar (em termos de tempo ou recursos) para cada operação de dados que executa sua página da Web. Pode ser uma maneira de trabalhar com um objeto caro criar uma instância de uma vez e, em seguida, armazena em cache para operações subsequentes, em vez de criar e destruí-lo para cada operação de dados. Este exemplo demonstra esse padrão. Você pode manipular o <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> eventos para verificar o cache para um objeto pela primeira vez e apenas criar uma instância dele, se um não já está em cache. Em seguida, manipular o <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> eventos em cache o objeto de negócios para uso futuro, em vez de destruí-lo. Neste exemplo de código, o <xref:System.ComponentModel.CancelEventArgs.Cancel?displayProperty=nameWithType> propriedade do <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs> objeto é definido como `true` para direcionar o <xref:System.Web.UI.WebControls.ObjectDataSource> não chamar o <xref:System.IDisposable.Dispose%2A> método no objeto.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/objds16cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/objds16vb.aspx#1)]  
  
 O exemplo de código a seguir fornece o objeto de negócios de camada intermediária de exemplo que usa o exemplo de código anterior. O exemplo de código consiste em um objeto de negócios básico, definido pelo `EmployeeLogic` classe, que é uma classe com monitoração de estado que encapsula a lógica de negócios. Para obter um exemplo de trabalho completa, você deve compilar esse código como uma biblioteca e usar essas classes de uma página ASP.NET (arquivo. aspx).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_16#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/northwindemployee16.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_16#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/northwindemployee16.vb#2)]  
  
 O exemplo a seguir mostra como lidar com o <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> evento ao usar um <xref:System.Web.UI.WebControls.ObjectDataSource> controle com uma classe LINQ to SQL.  
  
```vb  
Public Sub ExampleObjectDisposing(ByVal sender As Object, _   
        ByVal e As ObjectDataSourceDisposingEventArgs)  
    e.Cancel = True  
End Sub  
```  
  
```csharp  
public void ExampleObjectDisposing(object sender,   
        ObjectDataSourceDisposingEventArgs e)  
{  
    e.Cancel = true;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">{1&amp;gt;Controles de servidor Web de fonte de dados&amp;lt;1}</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Visão geral do controle ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">{1&amp;gt;Criando um objeto de origem de controle ObjectDataSource&amp;lt;1}</related>
      </Docs>
    </Member>
    <Member MemberName="OldValuesParameterFormatString">
      <MemberSignature Language="C#" Value="public string OldValuesParameterFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OldValuesParameterFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property OldValuesParameterFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OldValuesParameterFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OldValuesParameterFormatString : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("{0}")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define uma cadeia de caracteres de formato para aplicar aos nomes dos parâmetros para os valores originais que são passados para os métodos <see langword="Delete" /> ou <see langword="Update" />.</summary>
        <value>Uma cadeia de caracteres que representa uma cadeia de caracteres de formato aplicada aos nomes de qualquer <paramref name="oldValues" /> ou parâmetros chave passados para os métodos <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" /> ou <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />. O padrão é <c>"{0}"</c>, que significa que o nome do parâmetro é o nome do campo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O valor da <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> propriedade é aplicada às chaves primárias, como aqueles que são identificados com o `DataKeyNames` propriedade de um controle associado a dados, ou em Excluir e cenários de atualização em que o <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> estiver definida como o <xref:System.Web.UI.ConflictOptions.CompareAllValues> valor e o conjunto de valores originais são passados para o método de dados correspondente.  
  
 A seguir estão dois cenários comuns onde você pode alterar o <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> propriedade:  
  
-   Você talvez queira alterar a propriedade para diferenciar entre os valores novos e antigos em atualizações. Quando o <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> estiver definida como o <xref:System.Web.UI.ConflictOptions.CompareAllValues> parâmetros de valores, para os valores novos e originais são adicionados ao <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> coleção. Sem a cadeia de caracteres de formatação, dois parâmetros com o mesmo nome seriam criados para cada campo de dados. Alterando o nome do parâmetro de valor original, você pode comparar os dados na fonte de dados original para detectar conflitos e comparar valores de chave.  
  
-   Alguns designers visuais implementam um esquema de nomenclatura específico para as chaves e valores originais.  
  
 O <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> propriedade delega para o <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> propriedade da <xref:System.Web.UI.WebControls.ObjectDataSourceView> objeto que está associado com o <xref:System.Web.UI.WebControls.ObjectDataSource> controle.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">{1&amp;gt;Controles de servidor Web de fonte de dados&amp;lt;1}</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Visão geral do controle ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">{1&amp;gt;Criando um objeto de origem de controle ObjectDataSource&amp;lt;1}</related>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="objectDataSource.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.EventArgs" /> que contém dados do evento.</param>
        <summary>Adiciona um manipulador de eventos <see cref="E:System.Web.UI.Page.LoadComplete" /> na página que contém o controle <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações sobre como manipular eventos, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
 O <xref:System.Web.UI.WebControls.ObjectDataSource.OnInit%2A> método também permite que classes derivadas manipular o evento sem anexar um delegado. Essa é a técnica preferencial para manipular o evento em uma classe derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Ao substituir a <see cref="M:System.Web.UI.WebControls.ObjectDataSource.OnInit(System.EventArgs)" /> método em uma classe derivada, certifique-se de chamar o <see cref="M:System.Web.UI.Control.OnInit(System.EventArgs)" /> método para a classe base, de modo que delegados registrados recebam o evento.</para></block>
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
        <altmember cref="M:System.Web.UI.Control.OnInit(System.EventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">{1&amp;gt;Controles de servidor Web de fonte de dados&amp;lt;1}</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Visão geral do controle ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">{1&amp;gt;Criando um objeto de origem de controle ObjectDataSource&amp;lt;1}</related>
      </Docs>
    </Member>
    <Member MemberName="ParsingCulture">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParsingCulture ParsingCulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ParsingCulture ParsingCulture" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.ParsingCulture" />
      <MemberSignature Language="VB.NET" Value="Public Property ParsingCulture As ParsingCulture" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParsingCulture ParsingCulture { System::Web::UI::WebControls::ParsingCulture get(); void set(System::Web::UI::WebControls::ParsingCulture value); };" />
      <MemberSignature Language="F#" Value="member this.ParsingCulture : System.Web.UI.WebControls.ParsingCulture with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.ParsingCulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParsingCulture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica quais informações de cultura são usadas ao converter valores de cadeia de caracteres em tipos de propriedade reais para construir um objeto do tipo indicado por <see cref="P:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName" />.</summary>
        <value>As informações de cultura. O valor padrão é <see cref="F:System.Web.UI.WebControls.ParsingCulture.Invariant" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="objectDataSource.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Salva o estado do controle <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</summary>
        <returns>Retornará o estado de exibição atual do controle de servidor, caso contrário, <see langword="null" />, se não houver nenhum estado de exibição associado ao controle.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.IStateManager.SaveViewState" />
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">{1&amp;gt;Controles de servidor Web de fonte de dados&amp;lt;1}</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Visão geral do controle ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">{1&amp;gt;Criando um objeto de origem de controle ObjectDataSource&amp;lt;1}</related>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerable Select() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
      <MemberSignature Language="VB.NET" Value="Public Function Select () As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerable ^ Select();" />
      <MemberSignature Language="F#" Value="member this.Select : unit -&gt; System.Collections.IEnumerable" Usage="objectDataSource.Select " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera dados do armazenamento de dados subjacente chamando o método identificado pela propriedade <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> com os parâmetros na coleção <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />.</summary>
        <returns>Uma lista <see cref="T:System.Collections.IEnumerable" /> de linhas de dados.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O método especificado pode ter qualquer assinatura de método, mas ele deve retornar ou ser derivado de um dos tipos listados na tabela a seguir para o <xref:System.Web.UI.WebControls.ObjectDataSource> controle chamá-lo com êxito.  
  
|Tipo de retorno|Ação|  
|-----------------|------------|  
|<xref:System.Collections.IEnumerable>|O <xref:System.Collections.IEnumerable> é retornado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método.|  
|<xref:System.Data.DataTable>|Um <xref:System.Data.DataView> é criado usando o <xref:System.Data.DataTable> e retornado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método.|  
|<xref:System.Data.DataView>|O <xref:System.Data.DataView> é retornado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método.|  
|<xref:System.Data.DataSet>|A primeira <xref:System.Data.DataTable> do <xref:System.Data.DataSet> é extraído e uma <xref:System.Data.DataView> é criada e retornada pelo <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método.|  
|<xref:System.Object>|O objeto é encapsulado em um elemento <xref:System.Collections.IEnumerable> coleta e retornado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método.|  
  
 O que é identificado pelo método as <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propriedade pode ser um método de instância ou um `static` (`Shared` no Visual Basic) método. Se for um método de instância, o objeto comercial é criado e destruída cada vez que o método que é especificado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propriedade é chamada, exceto que a mesma instância é usada para chamar o método que é especificado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propriedade e o método que é especificado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> propriedade. O <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método retorna um <xref:System.Collections.IEnumerable> interface. No entanto, para habilitar o armazenamento em cache e cenários de filtragem, o valor de retorno deve ser um <xref:System.Data.DataSet> objeto. Enquanto o <xref:System.Data.DataSet> classe não implementa o <xref:System.Collections.IEnumerable> interface, o <xref:System.Web.UI.WebControls.ObjectDataSource> controle extrai automaticamente o padrão <xref:System.Data.DataView> controlar, que implementa o <xref:System.Collections.IEnumerable>.  
  
 Antes do <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> operação é executada, o <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting%2A> método é chamado para acionar o <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> eventos. Você pode lidar com o <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> eventos para examinar os valores dos parâmetros e executar qualquer pré-processamento antes de um <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> operação. Para executar uma operação de recuperação de dados, o <xref:System.Web.UI.WebControls.ObjectDataSourceView> objeto usa a reflexão para criar uma instância do objeto que é identificado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> propriedade. Depois, ele chama o método que é identificado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propriedade, usando qualquer associado <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> propriedades. Após o <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> operação é concluída, o <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A> método é chamado para acionar o <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> eventos. Você pode manipular o <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> para examinar quaisquer valores de retorno, parâmetros de saída e exceções e para executar qualquer pós-processamento de eventos.  
  
 Se o <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propriedade retorna um <xref:System.Data.DataSet>, <xref:System.Data.DataTable>, ou <xref:System.Data.DataView> objeto e o cache estiver habilitado, o <xref:System.Web.UI.WebControls.ObjectDataSource> recupera e salva dados em cache durante o <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> operação. O cache é criado, descartados ou atualizados com base no comportamento de cache que é especificado pela combinação da <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> e <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> propriedades.  
  
 Se o <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propriedade retorna um <xref:System.Data.DataSet> ou <xref:System.Data.DataTable> objeto e uma <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> propriedade tiver sido especificada, ela é avaliada com qualquer fornecido <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> propriedades e o filtro resultante é aplicada à lista de dados durante a <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> operação.  
  
 O <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método delega para o <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> método da <xref:System.Web.UI.WebControls.ObjectDataSourceView> que está associado com o <xref:System.Web.UI.WebControls.ObjectDataSource> controle.  
  
 Para obter mais informações sobre mesclagem de parâmetro, o tempo de vida do objeto e a resolução de método, consulte <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>.  
  
## <a name="data-bound-controls"></a>Controles ligados a dados  
 Quando o <xref:System.Web.UI.WebControls.ObjectDataSource> controle é associado ao controle associado a dados, como o <xref:System.Web.UI.WebControls.GridView> controle, não é necessário chamar o <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método a partir do código da página. O <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método é invocado diretamente pelo controle associado a dados.  
  
   
  
## Examples  
 Para obter um exemplo de código, consulte <xref:System.Web.UI.WebControls.ObjectDataSource>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">{1&amp;gt;Controles de servidor Web de fonte de dados&amp;lt;1}</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Visão geral do controle ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">{1&amp;gt;Criando um objeto de origem de controle ObjectDataSource&amp;lt;1}</related>
      </Docs>
    </Member>
    <Member MemberName="SelectCountMethod">
      <MemberSignature Language="C#" Value="public string SelectCountMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectCountMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCountMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectCountMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCountMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o nome do método ou função invocada pelo controle <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> para recuperar uma contagem de linhas.</summary>
        <value>Uma cadeia de caracteres que representa o nome do método ou função usada pelo <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> para recuperar uma contagem de dados. O método deve retornar um número inteiro (<see cref="T:System.Int32" />). O padrão é uma cadeia de caracteres vazia ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> propriedade identifica um método de objeto comercial que é usado para recuperar uma contagem total de linhas, para dar suporte à paginação de fonte de dados. O <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> propriedade será avaliada apenas se o <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> estiver definida como `true`.  
  
 O <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> propriedade delega para o <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A> propriedade da <xref:System.Web.UI.WebControls.ObjectDataSourceView> objeto que está associado com o <xref:System.Web.UI.WebControls.ObjectDataSource> controle. Para obter informações sobre o suporte a paginação o <xref:System.Web.UI.WebControls.ObjectDataSource> de controle, consulte <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>.  
  
   
  
## Examples  
 Os três exemplos a seguir mostram uma página da Web, uma classe de página code-behind e uma classe de acesso a dados que permitem que o usuário escolha quantos registros é exibido na página.  
  
 A página da Web contém uma <xref:System.Web.UI.WebControls.ObjectDataSource> controle cuja <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> estiver definida como `true`. O <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> estiver definida como o nome de um método que retorna o número total de registros na consulta. O <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> propriedade e o <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> estiverem definidas como os nomes dos parâmetros que são usados no método Select. A página também contém um <xref:System.Web.UI.WebControls.DropDownList> controle.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx#1)]  
  
 O segundo exemplo mostra um manipulador para o <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged?displayProperty=nameWithType> eventos do <xref:System.Web.UI.WebControls.DropDownList> controle. O código nos conjuntos de manipulador a <xref:System.Web.UI.WebControls.GridView.PageSize%2A> propriedade para a seleção do usuário.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx.vb#2)]  
  
 O terceiro exemplo mostra a classe de acesso de dados que recupera dados da tabela Customers. Ele inclui um método chamado `GetSubsetOfEmployees`, que é atribuído à <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propriedade do <xref:System.Web.UI.WebControls.ObjectDataSource> controle. O exemplo também inclui um método chamado `GetEmployeeCount`, que é atribuído para o <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> propriedade do <xref:System.Web.UI.WebControls.ObjectDataSource> controle. A classe usa LINQ para consultar a tabela de clientes. O exemplo requer uma classe LINQ to SQL que representa o banco de dados Northwind e a tabela Customers. Para obter mais informações, consulte [como: Criar Classes LINQ to SQL em um projeto Web](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/App_Code/CustomerLogic.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/App_Code/CustomerLogic.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">{1&amp;gt;Controles de servidor Web de fonte de dados&amp;lt;1}</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Visão geral do controle ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">{1&amp;gt;Criando um objeto de origem de controle ObjectDataSource&amp;lt;1}</related>
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Selected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Selected" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selected As ObjectDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceStatusEventHandler ^ Selected;" />
      <MemberSignature Language="F#" Value="member this.Selected : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " Usage="member this.Selected : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando uma operação <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" /> foi concluída.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lidar com o <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> evento para examinar os valores dos parâmetros de saída ou um valor de retorno, ou para determinar se uma exceção foi lançada após um <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> operação foi concluída. O valor de retorno, parâmetros de saída e as propriedades de tratamento de exceção estão disponíveis do <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> objeto que está associado com o evento.  
  
 Para obter mais informações sobre como manipular eventos, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Os três exemplos a seguir mostram uma página da Web, uma classe de página code-behind e uma classe de acesso a dados que permitem que um usuário recuperar e atualizar registros na tabela Employees no banco de dados Northwind.  
  
 O primeiro exemplo mostra uma página da Web que contém duas <xref:System.Web.UI.WebControls.ObjectDataSource> controles, uma <xref:System.Web.UI.WebControls.DropDownList> controle e um <xref:System.Web.UI.WebControls.DetailsView> controle. A primeira <xref:System.Web.UI.WebControls.ObjectDataSource> controle e o <xref:System.Web.UI.WebControls.DropDownList> controle são usados para recuperar e exibir os nomes dos funcionários do banco de dados. A segunda <xref:System.Web.UI.WebControls.ObjectDataSource> controle e o <xref:System.Web.UI.WebControls.DetailsView> controle são usados para recuperar, exibir e modificar os dados do registro de funcionário que é selecionado pelo usuário.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx#1)]  
  
 O segundo exemplo mostra os manipuladores para o <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> e <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> eventos. O <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> manipulador de eventos serializa o objeto que contém dados que foi recuperados da tabela de funcionários. O objeto serializado é armazenado no estado de exibição. O <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> manipulador de eventos desserializa o objeto no estado de exibição que contém os dados originais para o registro de dados que está sendo atualizado. O objeto que contém os dados originais é passado como um parâmetro para o método Update. Os dados originais devem ser passados para o banco de dados para que possa ser usado para verificar se os dados foi modificados por outro processo.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx.vb#2)]  
  
 O terceiro exemplo mostra a classe de acesso de dados que interage com o banco de dados Northwind. A classe usa LINQ para consultar e atualizar a tabela de funcionários. O exemplo requer uma classe LINQ to SQL que representa o banco de dados Northwind e a tabela de funcionários. Para obter mais informações, consulte [como: Criar Classes LINQ to SQL em um projeto Web](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/App_Code/EmployeeLogic.cs#5)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/App_Code/EmployeeLogic.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Selecting" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">{1&amp;gt;Controles de servidor Web de fonte de dados&amp;lt;1}</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Visão geral do controle ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">{1&amp;gt;Criando um objeto de origem de controle ObjectDataSource&amp;lt;1}</related>
      </Docs>
    </Member>
    <Member MemberName="Selecting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler Selecting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler Selecting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Selecting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selecting As ObjectDataSourceSelectingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceSelectingEventHandler ^ Selecting;" />
      <MemberSignature Language="F#" Value="member this.Selecting : System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler " Usage="member this.Selecting : System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre antes de uma operação <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lidar com o <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> evento para executar a inicialização adicional que é específica para seu aplicativo, para validar os valores de parâmetros ou alterar os valores de parâmetro antes do <xref:System.Web.UI.WebControls.ObjectDataSource> controle executa a operação de recuperação de dados. Os parâmetros estão disponíveis como um <xref:System.Collections.IDictionary> coleção que é acessada pelo <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> propriedade, que é exposta pelo <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> objeto.  
  
 Este evento pode ser disparado duas vezes para uma única chamada para o <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método, se o <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> propriedade está definida. O <xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs.ExecutingSelectCount%2A> propriedade do <xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs> objeto é usado para determinar se select foi chamado para recuperar dados ou recuperar a contagem.  
  
 Para obter mais informações sobre como manipular eventos, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Selected" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">{1&amp;gt;Controles de servidor Web de fonte de dados&amp;lt;1}</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Visão geral do controle ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">{1&amp;gt;Criando um objeto de origem de controle ObjectDataSource&amp;lt;1}</related>
      </Docs>
    </Member>
    <Member MemberName="SelectMethod">
      <MemberSignature Language="C#" Value="public string SelectMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o nome do método ou da função invocada pelo controle <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> para recuperar dados.</summary>
        <value>Uma cadeia de caracteres que representa o nome do método ou da função usado pelo <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> para recuperar dados. O padrão é uma cadeia de caracteres vazia ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O método especificado pode ter qualquer assinatura de método, mas ele deve retornar um dos tipos mostrados na tabela a seguir para o <xref:System.Web.UI.WebControls.ObjectDataSource> controle chamá-lo com êxito.  
  
|Tipo de retorno|Ação|  
|-----------------|------------|  
|<xref:System.Collections.IEnumerable>|O <xref:System.Collections.IEnumerable> é retornado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método.|  
|<xref:System.Data.DataTable>|Um <xref:System.Data.DataView> é criado usando o <xref:System.Data.DataTable> e retornado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método.|  
|<xref:System.Data.DataView>|Um <xref:System.Data.DataView> é retornado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método.|  
|<xref:System.Data.DataSet>|A primeira <xref:System.Data.DataTable> do <xref:System.Data.DataSet> é extraído e uma <xref:System.Data.DataView> é criada e retornada pelo <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método.|  
|<xref:System.Object>|O objeto é encapsulado em um elemento <xref:System.Collections.IEnumerable> coleta e retornado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método.|  
  
 O <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propriedade delega para o <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> propriedade da <xref:System.Web.UI.WebControls.ObjectDataSourceView> objeto que está associado com o <xref:System.Web.UI.WebControls.ObjectDataSource> controle.  
  
 Quando você usa o <xref:System.Web.UI.WebControls.ObjectDataSource> classe para excluir ou atualizar dados, certifique-se de que os nomes de parâmetro configurado para o <xref:System.Web.UI.WebControls.ObjectDataSource> no controlar a <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> coleção ou <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> coleção corresponder aos nomes de coluna que são retornados pelo método select .  
  
## <a name="object-lifetime"></a>Tempo de vida do objeto  
 O que é identificado pelo método as <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propriedade pode ser um método de instância ou um `static` (`Shared` no Visual Basic) método. Se for um método de instância, o objeto comercial é criado e destruída cada vez que o método que é especificado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propriedade é chamada. Você pode lidar com o <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> e <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> eventos para trabalhar com o objeto de negócios antes que o método que é especificado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propriedade é chamada. Você também pode lidar com o <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> evento que é gerado após o método que é especificado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propriedade é chamada. Se o objeto comercial implementa o <xref:System.IDisposable> interface, o <xref:System.IDisposable.Dispose%2A> método é chamado antes que o objeto é destruído. Se o método `static` (`Shared` no Visual Basic), o objeto de negócios nunca é criado e você não pode manipular o <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>, <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>, e <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> eventos.  
  
## <a name="parameter-merging"></a>Parâmetro de mesclagem  
 Parâmetros são adicionados à <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> coleção destas origens:  
  
-   Declarativamente a partir de `SelectParameters` elemento.  
  
-   Programaticamente a partir de `Selecting` método.  
  
 Primeiro, os parâmetros listados no `SelectParameters` elemento são adicionadas. Em segundo lugar, parâmetros por meio de programação são adicionados e removidos na <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> evento, que ocorre antes do <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método é executado. O método será resolvido depois que os parâmetros são mesclados. Resolução do método é abordada na próxima seção.  
  
> [!IMPORTANT]
>  Você deve validar qualquer valor de parâmetro que você recebe do cliente. O tempo de execução simplesmente substitui o valor de parâmetro para o <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propriedade.  
  
## <a name="method-resolution"></a>Método de resolução  
 Quando o <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método é chamado, os campos de dados do controle associado a dados, os parâmetros que foram criados declarativamente na `SelectParameters` elemento e os parâmetros que foram adicionados a <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> manipulador de eventos são mescladas. (Para obter mais informações, consulte a seção anterior). O <xref:System.Web.UI.WebControls.ObjectDataSource> tenta encontrar um método a ser chamado de controle. Primeiro, ele procura por um ou mais métodos com o nome especificado no <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propriedade. Se nenhuma correspondência for encontrada, um <xref:System.InvalidOperationException> exceção é lançada. Se uma correspondência for encontrada, em seguida, procura nomes de parâmetros correspondentes. Por exemplo, suponha que um tipo que é especificado pela <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> propriedade tem dois métodos chamados `SelectARecord`. Uma `SelectARecord` tem um parâmetro, `ID`e o outro `SelectARecord` tem dois parâmetros, `Name` e `Number`. Se o <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> coleção tem apenas um parâmetro denominado `ID`, o `SelectARecord` método com apenas o `ID` parâmetro é chamado. O tipo do parâmetro não é verificado na resolução de métodos. Não importa a ordem dos parâmetros.  
  
 Se o <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> propriedade for definida, o método é resolvido de maneira diferente. O <xref:System.Web.UI.WebControls.ObjectDataSource> procura por um método com o nome especificado na <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propriedade que recebe um parâmetro do tipo que é especificada no <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> propriedade. Nesse caso, o nome do parâmetro não importa.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como um <xref:System.Web.UI.WebControls.GridView> controle pode exibir dados usando um <xref:System.Web.UI.WebControls.ObjectDataSource> controle em uma página de Web Forms. O <xref:System.Web.UI.WebControls.ObjectDataSource> identifica um nome de classe parcial ou totalmente qualificado com seus <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> propriedade e um método que é chamado para recuperar dados com seu <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propriedade. Em tempo de execução, o objeto é criado e o método é chamado usando a reflexão. O <xref:System.Web.UI.WebControls.GridView> controle enumera através de <xref:System.Collections.IEnumerable> coleção retornada pelo método que é especificado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propriedade e exibe os dados.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/objds1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/objds1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">{1&amp;gt;Controles de servidor Web de fonte de dados&amp;lt;1}</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Visão geral do controle ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">{1&amp;gt;Criando um objeto de origem de controle ObjectDataSource&amp;lt;1}</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011">Usando o Entity Framework e o controle ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="SelectParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection SelectParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ SelectParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma coleção de parâmetros que são usados pelo método especificado pela propriedade <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />.</summary>
        <value>Uma coleção de parâmetros que são usados pelo método especificado pela propriedade <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> propriedade obtém o <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A> propriedade da <xref:System.Web.UI.WebControls.ObjectDataSourceView> objeto que está associado com o <xref:System.Web.UI.WebControls.ObjectDataSource> controle.  
  
 Adicionar parâmetros a serem os <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> coleção declarativamente usando o `SelectParameters` elemento ou programaticamente no manipulador para o <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> eventos. Em tempo de execução, os parâmetros listados no `SelectParameters` elemento são adicionados à coleção primeiro. Parâmetros na coleção, em seguida, são adicionados ou removidos pelo manipulador para o <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> eventos. O <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> é gerado antes do <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método é executado.  
  
 Antes do <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método for executado, os nomes e tipos dos parâmetros que estão contidos em de <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> coleção deve corresponder à assinatura do método que é especificado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propriedade. Por exemplo, se um método de seleção denominado `GetEmployeesByStateAndAge` usa um `string` e um inteiro como parâmetros, o <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> coleção deve conter dois parâmetros. O primeiro parâmetro deve ser resolvido para uma cadeia de caracteres e o segundo parâmetro deve ser resolvido para um número inteiro. Ambos os parâmetros podem ser especificados na marcação no `SelectParameters` elemento. Como alternativa, eles podem ser podem ser adicionadas a <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> manipulador de eventos, ou um parâmetro pode ser adicionados na marcação e o outro é pode ser adicionado programaticamente.  
  
 Para obter mais informações, consulte [usando parâmetros com o controle ObjectDataSource](https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4) e o <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod> propriedade.  
  
> [!IMPORTANT]
>  No código para o <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> manipulador de eventos ou no método especificado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propriedade, certifique-se de que você valide qualquer valor de parâmetro que é recebido do cliente.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como recuperar um registro de dados único usando um <xref:System.Web.UI.WebControls.ObjectDataSource> controlar e exibi-lo em um <xref:System.Web.UI.WebControls.DetailsView> controle. O <xref:System.Web.UI.WebControls.ObjectDataSource> controle recupera um registro de funcionário específico chamando o `GetEmployee` método o `EmployeeLogic` classe. O `GetEmployee` método exige um parâmetro de ID do funcionário. O <xref:System.Web.UI.WebControls.ObjectDataSource> controlar usa um `QueryStringParameter` elemento na marcação para criar um <xref:System.Web.UI.WebControls.QueryStringParameter> objeto que irá recuperar o valor de um parâmetro de cadeia de consulta especificado da URL e passá-lo para o `GetEmployee` método.  
  
 Outras classes de parâmetro podem ser usadas para recuperar valores de outras fontes, como as propriedades de controle, campos de formulário, cookies, dados de perfil do ASP.NET ou o estado de sessão. Você também pode usar um objeto de parâmetro que é definido na marcação para passar um valor embutido em código para o método select. Para obter mais informações sobre classes de parâmetro que estão disponíveis, consulte [usando parâmetros com controles de fonte de dados para filtragem](https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)).  
  
 Para executar este exemplo, você precisará do seguinte:  
  
-   Um site que tem uma cadeia de conexão chamada `NorthwindConnection` que se conecta ao banco de dados Northwind Traders. Para obter mais informações, consulte o <xref:System.Web.UI.WebControls.ObjectDataSource> visão geral da classe.  
  
-   O `EmployeeLogic` classe que é mostrado como um dos exemplos de código para o <xref:System.Web.UI.WebControls.ObjectDataSource> visão geral da classe. O arquivo de classe deve estar localizado na pasta App_Code.  
  
-   O código de exemplo pode ser executado como uma página. aspx. Se você solicitar a página sem um parâmetro de cadeia de caracteres de consulta, uma mensagem de erro é exibida. Se você solicitar a página usando uma cadeia de caracteres de consulta, como `?empid=1` após o nome do arquivo. aspx, você verá os detalhes para o funcionário solicitado.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_3/CS/objds3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_3/VB/objds3vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">{1&amp;gt;Controles de servidor Web de fonte de dados&amp;lt;1}</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Visão geral do controle ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">{1&amp;gt;Criando um objeto de origem de controle ObjectDataSource&amp;lt;1}</related>
      </Docs>
    </Member>
    <Member MemberName="SortParameterName">
      <MemberSignature Language="C#" Value="public string SortParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.SortParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property SortParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SortParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SortParameterName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.SortParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o nome do objeto comercial que o parâmetro <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> usou para especificar uma expressão de classificação para suporte à classificação de fonte de dados.</summary>
        <value>O nome do parâmetro de método usado para indicar o parâmetro que é usado para classificar os dados. O padrão é uma cadeia de caracteres vazia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A> propriedade é usada para oferecer suporte à classificação de fonte de dados. Quando um <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> propriedade está definida a <xref:System.Web.UI.DataSourceSelectArguments> do objeto e passado para o <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método, o <xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A> valor identifica o nome do parâmetro do <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> acordo com os quais os dados são classificados de método de objeto comercial.  
  
 Se o <xref:System.Web.UI.WebControls.ObjectDataSource> está associado um controle associado a dados, os valores que são passados para esse take parâmetro seguida de forma de valores de campo separados por vírgula `"ASC"` ou `"DESC"`. Por exemplo, o valor para uma classificação crescente no `Name` seria `"Name ASC"`.  
  
 O <xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A> propriedade delega para o <xref:System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName%2A> propriedade da <xref:System.Web.UI.WebControls.ObjectDataSourceView> objeto que está associado com o <xref:System.Web.UI.WebControls.ObjectDataSource> controle.  
  
   
  
## Examples  
 Esta seção contém dois exemplos de código. O primeiro exemplo de código demonstra como implementar um tipo que dá suporte à classificação. O segundo exemplo de código demonstra como implementar uma expressão de classificação.  
  
 O exemplo de código a seguir demonstra como implementar um tipo que dá suporte à classificação. O `SelectMethod` do `SortingData` classe usa um parâmetro, `sortExpression`. A cadeia de caracteres que é passada para `SelectMethod` é usado para o <xref:System.Data.DataView.Sort%2A> propriedade da <xref:System.Data.DataView> que é retornado pelo objeto `SelectMethod`.  
  
 [!code-csharp[ObjectDataSourceSorting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ObjectDataSourceSorting/CS/SortingData.cs#1)]
 [!code-vb[ObjectDataSourceSorting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ObjectDataSourceSorting/VB/SortingData.vb#1)]  
  
 O exemplo de código a seguir demonstra como implementar uma expressão de classificação. O código na página da Web cria uma instância da <xref:System.Web.UI.WebControls.ObjectDataSource> controle. O <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> estiver definida como `SortingData` e o <xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A> estiver definida como `sortExpression`. O <xref:System.Web.UI.WebControls.GridView.AllowSorting%2A> propriedade do <xref:System.Web.UI.WebControls.GridView> controle é definida como `true`. Quando o usuário clica o **Sort** botão, o nome do campo `Name` ou `Number`, é passado para `SelectMethod` no parâmetro de classificação.  
  
 [!code-aspx-csharp[ObjectDataSourceSorting#2](~/samples/snippets/csharp/VS_Snippets_WebNet/ObjectDataSourceSorting/CS/SortingDataExample.aspx#2)]
 [!code-aspx-vb[ObjectDataSourceSorting#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ObjectDataSourceSorting/VB/SortingDataExampleVB.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanSort" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">{1&amp;gt;Controles de servidor Web de fonte de dados&amp;lt;1}</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Visão geral do controle ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">{1&amp;gt;Criando um objeto de origem de controle ObjectDataSource&amp;lt;1}</related>
      </Docs>
    </Member>
    <Member MemberName="SqlCacheDependency">
      <MemberSignature Language="C#" Value="public virtual string SqlCacheDependency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SqlCacheDependency" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SqlCacheDependency As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SqlCacheDependency { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SqlCacheDependency : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define uma cadeia de caracteres separada por ponto-e-vírgula que indica quais bancos de dados e tabelas usar para a dependência de cache do Microsoft SQL Server.</summary>
        <value>Uma cadeia de caracteres que indica quais bancos de dados e tabelas usar para a dependência de cache do SQL Server.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.ObjectDataSource> controle dá suporte a uma política de expiração opcional que se baseia o <xref:System.Web.Caching.SqlCacheDependency> objeto para o cache de dados (o serviço deve ser configurado para o servidor de banco de dados).  
  
 SQL Server dá suporte a dois mecanismos para invalidação de cache: notificação de consulta e. Cada mecanismo tem uma sintaxe diferente para o <xref:System.Web.Caching.SqlCacheDependency> objeto.  
  
 O <xref:System.Web.UI.WebControls.ObjectDataSource> dá suporte a sondagem única. O <xref:System.Web.Caching.SqlCacheDependency> cadeia de caracteres é usada para criar um <xref:System.Data.SqlClient.SqlDependency> objeto é passado para o <xref:System.Data.Common.DbCommand> construtor antes do <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método é executado. O <xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A> cadeia de caracteres identifica bancos de dados e tabelas de acordo com o mesmo formato que é usado pelo `@ Page` diretiva, em que a primeira parte da cadeia de caracteres é uma cadeia de caracteres de conexão para um banco de dados do SQL Server, seguido por um delimitador de dois-pontos e, finalmente, o nome da tabela de banco de dados (por exemplo, `"connectionstring1:table1"`). Se o <xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A> propriedade depende de mais de uma tabela, os pares de nomes de tabela e de cadeia de caracteres de conexão são separados por ponto e vírgula (por exemplo, `"connectionstring1:table1";connectionstring2:table2"`).  
  
 Para dar suporte à notificação, você deve escrever a lógica de cache na implementação de sua <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propriedade e lidar com a construção do <xref:System.Web.Caching.SqlCacheDependency> objeto em seu código.  
  
   
  
## Examples  
 Esta seção contém dois exemplos de código. O primeiro exemplo de código demonstra como criar uma dependência de cache do SQL Server e definir as <xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A> propriedade de um <xref:System.Web.UI.WebControls.ObjectDataSource> objeto. O segundo exemplo de código demonstra como implementar um método de invólucro que retorna um <xref:System.Data.DataSet> objeto para habilitar o armazenamento em cache e a filtragem com um <xref:System.Web.UI.WebControls.ObjectDataSource> objeto.  
  
 O exemplo de código a seguir demonstra como criar uma dependência de cache do SQL Server e defina as <xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A> propriedade de um <xref:System.Web.UI.WebControls.ObjectDataSource> controle. Neste exemplo, o banco de dados é sondado a cada 120 segundos. Se os dados da Northwind Traders funcionários tabela alterações durante esse tempo, todos os dados que é armazenado em cache pela <xref:System.Web.UI.WebControls.ObjectDataSource> controlar e exibido pelo <xref:System.Web.UI.WebControls.GridView> controle expirou e um novo conjunto de dados é recuperado na próxima solicitação para a página.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_7#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_7/CS/objds7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_7#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_7/VB/objds7vb.aspx#1)]  
  
 O exemplo de código a seguir demonstra como implementar um método de invólucro que retorna um <xref:System.Data.DataSet> objeto para habilitar o armazenamento em cache e a filtragem com um <xref:System.Web.UI.WebControls.ObjectDataSource> controle. Na implementação de base de `EmployeeLogic` classe, o `GetAllEmployees` método retorna um <xref:System.Collections.ArrayList> objeto. Em vez de refatoração de objeto completamente para trabalhar com o <xref:System.Web.UI.WebControls.ObjectDataSource> em uma página de Web Forms, chamado um método wrapper `GetAllEmployeesAsDataSet` é adicionado, que retorna um conjunto de `NorthwindEmployee` dados como um <xref:System.Data.DataSet>.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_5#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/CS/northwindemployee5.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_5#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/VB/northwindemployee5.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.SqlCacheDependency" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">{1&amp;gt;Controles de servidor Web de fonte de dados&amp;lt;1}</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Visão geral do controle ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">{1&amp;gt;Criando um objeto de origem de controle ObjectDataSource&amp;lt;1}</related>
      </Docs>
    </Member>
    <Member MemberName="StartRowIndexParameterName">
      <MemberSignature Language="C#" Value="public string StartRowIndexParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StartRowIndexParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property StartRowIndexParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StartRowIndexParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StartRowIndexParameterName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("startRowIndex")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o nome do parâmetro de método de recuperação de dados usado para indicar o valor do identificador do primeiro registro a ser recuperado para o suporte à paginação de fonte de dados.</summary>
        <value>O nome do parâmetro de método de objeto comercial usado para indicar o primeiro registro a ser recuperado. O parâmetro deve retornar um valor inteiro. O padrão é <c>"startRowIndex"</c>.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> propriedade é usada para dar suporte à paginação de fonte de dados. Para obter informações sobre o suporte a paginação o <xref:System.Web.UI.WebControls.ObjectDataSource> de controle, consulte <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>.  
  
 O <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> propriedade delega para o <xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A> propriedade da <xref:System.Web.UI.WebControls.ObjectDataSourceView> objeto que está associado com o <xref:System.Web.UI.WebControls.ObjectDataSource> controle.  
  
   
  
## Examples  
 Os três exemplos a seguir mostram uma página da Web, uma classe de página code-behind e uma classe de acesso a dados que permitem que o usuário escolha quantos registros é exibido na página.  
  
 A página da Web contém uma <xref:System.Web.UI.WebControls.ObjectDataSource> controle cuja <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> estiver definida como `true`. O <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> estiver definida como o nome de um método que retorna o número total de registros na consulta. O <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> propriedade e o <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> estiverem definidas como os nomes dos parâmetros que são usados no método Select. A página também contém um <xref:System.Web.UI.WebControls.DropDownList> controle.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx#1)]  
  
 O segundo exemplo mostra um manipulador para o <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged?displayProperty=nameWithType> eventos do <xref:System.Web.UI.WebControls.DropDownList> controle. O código nos conjuntos de manipulador a <xref:System.Web.UI.WebControls.GridView.PageSize%2A> propriedade para a seleção do usuário.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx.vb#2)]  
  
 O terceiro exemplo mostra a classe de acesso de dados que recupera dados da tabela Customers. Ele inclui um método chamado `GetSubsetOfEmployees`, que é atribuído à <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propriedade do <xref:System.Web.UI.WebControls.ObjectDataSource> controle. O exemplo também inclui um método chamado `GetEmployeeCount`, que é atribuído para o <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> propriedade do <xref:System.Web.UI.WebControls.ObjectDataSource> controle. A classe usa LINQ para consultar a tabela de clientes. O exemplo requer uma classe LINQ to SQL que representa o banco de dados Northwind e a tabela Customers. Para obter mais informações, consulte [como: Criar Classes LINQ to SQL em um projeto Web](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/App_Code/CustomerLogic.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/App_Code/CustomerLogic.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanPage" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">{1&amp;gt;Controles de servidor Web de fonte de dados&amp;lt;1}</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Visão geral do controle ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">{1&amp;gt;Criando um objeto de origem de controle ObjectDataSource&amp;lt;1}</related>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="objectDataSource.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Controla as alterações de estado de exibição no controle <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />, para que elas possam ser armazenadas no objeto <see cref="T:System.Web.UI.StateBag" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.ObjectDataSource.TrackViewState%2A> método é substituído para marcar o ponto de partida para começar a acompanhar e salvar as alterações no controle como parte do estado de exibição para o objeto.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IStateManager.TrackViewState" />
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">{1&amp;gt;Controles de servidor Web de fonte de dados&amp;lt;1}</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Visão geral do controle ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">{1&amp;gt;Criando um objeto de origem de controle ObjectDataSource&amp;lt;1}</related>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TypeName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o nome da classe que o objeto <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> representa.</summary>
        <value>Um nome de classe parcial ou totalmente qualificado que identifica o tipo do objeto que o <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> representa. O padrão é uma cadeia de caracteres vazia ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para criar uma instância do objeto que o <xref:System.Web.UI.WebControls.ObjectDataSource> controle está associado, o controle usa reflexão para carregar o tipo que é identificado pelo nome do tipo em tempo de execução. Portanto, o valor da <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> propriedade pode ser um tipo parcialmente qualificado para o código que está localizado nos diretórios Bin ou App_Code ou um nome de tipo totalmente qualificado para o código que é registrado no cache de assembly global. Se você usar o cache de assembly global, você deve adicionar a referência apropriada para o `assemblies` seção do arquivo Machine. config ou Web. config.  
  
 O tipo deve ter um construtor padrão, a menos que você manipule o <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> evento para criar uma instância dele por conta própria. Uma instância do tipo é criada para cada chamada para o <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A>, e <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> métodos, se os métodos no tipo são métodos de membro. Não é possível criar uma instância se os métodos são `static` (`Shared` no Visual Basic). Se o tipo implementa a <xref:System.IDisposable> interface, o <xref:System.IDisposable.Dispose%2A> método é chamado antes que o objeto é destruído.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como um <xref:System.Web.UI.WebControls.GridView> controle pode exibir dados usando um <xref:System.Web.UI.WebControls.ObjectDataSource> controle em uma página de Web Forms. O <xref:System.Web.UI.WebControls.ObjectDataSource> identifica um nome de classe parcial ou totalmente qualificado com seus <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> propriedade e um método que é chamado para recuperar dados com seu <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propriedade. Em tempo de execução, o objeto é criado e o método é chamado usando a reflexão. O <xref:System.Web.UI.WebControls.GridView> controle enumera através de <xref:System.Collections.IEnumerable> coleção que é retornada pelo <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propriedade e exibe os dados.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/objds1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/objds1vb.aspx#1)]  
  
 O exemplo a seguir mostra a classe que o <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> valor da propriedade refere-se a.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/northwindemployee1.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/northwindemployee1.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">{1&amp;gt;Controles de servidor Web de fonte de dados&amp;lt;1}</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Visão geral do controle ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">{1&amp;gt;Criando um objeto de origem de controle ObjectDataSource&amp;lt;1}</related>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
      <MemberSignature Language="VB.NET" Value="Public Function Update () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update();" />
      <MemberSignature Language="F#" Value="member this.Update : unit -&gt; int" Usage="objectDataSource.Update " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Executa uma operação de atualização chamando o método que é identificado pela propriedade <see cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" /> e os parâmetros que estão na coleção <see cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />.</summary>
        <returns>Um valor que representa o número de linhas atualizadas no armazenamento de dados subjacente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O objeto comercial é assumido como para atualizar um registro de dados por vez, em vez de em um lote.  
  
 Antes do <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> operação é executada, o <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating%2A> método é chamado para acionar o <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> eventos. Você pode lidar com o <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> eventos para examinar os valores dos parâmetros e executar qualquer pré-processamento antes de um <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> operação. Para executar uma operação de atualização, o <xref:System.Web.UI.WebControls.ObjectDataSourceView> objeto usa a reflexão para criar uma instância do objeto que é identificado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> propriedade. Depois, ele chama o método que é identificado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> propriedade, usando qualquer associado <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> propriedades. Após o <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> operação é concluída, o <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A> método é chamado para acionar o <xref:System.Web.UI.WebControls.ObjectDataSource.Updated> eventos. Você pode manipular o <xref:System.Web.UI.WebControls.ObjectDataSource.Updated> para examinar quaisquer valores de retorno, parâmetros de saída e exceções e para executar qualquer pós-processamento de eventos.  
  
 O <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> método delega para o <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> método da <xref:System.Web.UI.WebControls.ObjectDataSourceView> que está associado com o <xref:System.Web.UI.WebControls.ObjectDataSource> controle.  
  
 Para obter mais informações sobre mesclagem de parâmetro, o tempo de vida do objeto e a resolução de método, consulte <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>.  
  
> [!IMPORTANT]
>  Você deve validar qualquer valor de parâmetro que você recebe do cliente. O tempo de execução simplesmente substitui o valor de parâmetro para o <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> propriedade.  
  
## <a name="data-bound-controls"></a>Controles ligados a dados  
 Quando o <xref:System.Web.UI.WebControls.ObjectDataSource> controle é associado ao controle associado a dados, como o <xref:System.Web.UI.WebControls.GridView> controle, não é necessário chamar o <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> método a partir do código da página. O <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> método é invocado diretamente pelo controle associado a dados.  
  
   
  
## Examples  
 Esta seção contém dois exemplos de código. O primeiro exemplo de código demonstra como usar um <xref:System.Web.UI.WebControls.DropDownList> controle, <xref:System.Web.UI.WebControls.TextBox> controles e vários <xref:System.Web.UI.WebControls.ObjectDataSource> objetos para atualizar os dados. O segundo exemplo de código mostra o `EmployeeLogic` classe que é usada no primeiro exemplo de código.  
  
 O exemplo de código a seguir demonstra como usar um <xref:System.Web.UI.WebControls.DropDownList> controle, <xref:System.Web.UI.WebControls.TextBox> controles e vários <xref:System.Web.UI.WebControls.ObjectDataSource> controles para atualizar dados. O <xref:System.Web.UI.WebControls.DropDownList> exibe o nome de um funcionário da Northwind, enquanto o <xref:System.Web.UI.WebControls.TextBox> controles são usados para inserir e atualizar informações de endereço. Porque o <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> coleção contém um <xref:System.Web.UI.WebControls.ControlParameter> objeto está associado ao valor selecionado da <xref:System.Web.UI.WebControls.DropDownList>, o botão que aciona o <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> a operação é habilitada somente depois que um funcionário é selecionado.  
  
> [!IMPORTANT]
>  Este exemplo tem uma caixa de texto que aceita entrada do usuário, que é uma potencial ameaça de segurança. Por padrão, as páginas da Web do ASP.NET validam que a entrada do usuário não inclui elementos HTML ou script. Para obter mais informações, consulte [Visão geral de explorações de script](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_12#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/CS/objds12cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_12#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/VB/objds12vb.aspx#1)]  
  
 O seguinte exemplo de código mostra o `EmployeeLogic` classe que é usada no exemplo de código anterior.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_12#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/CS/northwindemployee12.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_12#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/VB/northwindemployee12.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">{1&amp;gt;Controles de servidor Web de fonte de dados&amp;lt;1}</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Visão geral do controle ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">{1&amp;gt;Criando um objeto de origem de controle ObjectDataSource&amp;lt;1}</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011">Usando o Entity Framework e o controle ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="Updated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Updated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Updated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Updated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updated As ObjectDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceStatusEventHandler ^ Updated;" />
      <MemberSignature Language="F#" Value="member this.Updated : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " Usage="member this.Updated : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando uma operação <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" /> foi concluída.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lidar com o <xref:System.Web.UI.WebControls.ObjectDataSource.Updated> evento para examinar os valores dos parâmetros de saída ou um valor de retorno, ou para determinar se uma exceção foi lançada após um <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> operação foi concluída. O valor de retorno, parâmetros de saída e as propriedades de tratamento de exceção estão disponíveis do <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> objeto que está associado com o evento.  
  
 Para obter mais informações sobre como manipular eventos, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Updating" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">{1&amp;gt;Controles de servidor Web de fonte de dados&amp;lt;1}</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Visão geral do controle ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">{1&amp;gt;Criando um objeto de origem de controle ObjectDataSource&amp;lt;1}</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011">Usando o Entity Framework e o controle ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateMethod">
      <MemberSignature Language="C#" Value="public string UpdateMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdateMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UpdateMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o nome do método ou da função invocada pelo controle <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> para atualizar os dados.</summary>
        <value>Uma cadeia de caracteres que representa o nome do método ou da função usado pelo <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> para atualizar dados. O padrão é uma cadeia de caracteres vazia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.ObjectDataSource> controle supõe que o método que é identificado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> propriedade executa atualizações uma por vez, em vez de em um lote.  
  
 O <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> propriedade delega para o <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> propriedade da <xref:System.Web.UI.WebControls.ObjectDataSourceView> objeto que está associado com o <xref:System.Web.UI.WebControls.ObjectDataSource> controle.  
  
 Certifique-se de que os nomes de parâmetro configurado para o <xref:System.Web.UI.WebControls.ObjectDataSource> no controlar o <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> coleção corresponder aos nomes de coluna que são retornados pelo método select.  
  
## <a name="object-lifetime"></a>Tempo de vida do objeto  
 O que é identificado pelo método as <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> propriedade pode ser um método de instância ou um `static` (`Shared` no Visual Basic) método. Se for um método de instância, o objeto comercial é criado e destruída cada vez que o método que é especificado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> propriedade é chamada. Você pode lidar com o <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> e <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> eventos para trabalhar com o objeto de negócios antes que o método que é especificado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> propriedade é chamada. Você também pode lidar com o <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> evento que é gerado após o método que é especificado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> propriedade é chamada. Se o objeto comercial implementa o <xref:System.IDisposable> interface, o <xref:System.IDisposable.Dispose%2A> método é chamado antes que o objeto é destruído. Se o método `static` (`Shared` no Visual Basic), o objeto de negócios nunca é criado e você não pode manipular o <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>, <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>, e <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> eventos.  
  
## <a name="parameter-merging"></a>Parâmetro de mesclagem  
 Parâmetros são adicionados à <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> coleção de três fontes:  
  
-   No controle associado a dados, no tempo de execução.  
  
-   Do `UpdateParameters` elemento, declarativamente.  
  
-   Do <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> manipulador de eventos, por meio de programação.  
  
 Primeiro, todos os parâmetros que são gerados a partir de controles ligados a dados são adicionados ao <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> coleção. Por exemplo, se o <xref:System.Web.UI.WebControls.ObjectDataSource> controle é associado a um <xref:System.Web.UI.WebControls.GridView> controle que tem as colunas `Name` e `Number`, os parâmetros para `Name` e `Number` são adicionados à coleção. O nome exato do parâmetro depende do <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> propriedade. O tipo de dados desses parâmetros é `string`. Em seguida, os parâmetros que são listados no `UpdateParameters` elemento são adicionadas. Se um parâmetro na `UpdateParameters` elemento for encontrado com o mesmo nome como um parâmetro que já está na <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> coleção, o parâmetro existente é modificada para coincidir com o que é especificado no parâmetro o `UpdateParameters` elemento. Normalmente, isso é usado para modificar o tipo de dados no parâmetro. Por fim, você pode adicionar e remover parâmetros em programaticamente os <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> evento, que ocorre antes do <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> método é executado. O método será resolvido depois que os parâmetros são mesclados. Resolução do método é abordada na próxima seção.  
  
> [!IMPORTANT]
>  Você deve validar qualquer valor de parâmetro que você recebe do cliente. O tempo de execução simplesmente substitui o valor de parâmetro para o <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> propriedade.  
  
## <a name="method-resolution"></a>Método de resolução  
 Quando o <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> método é chamado, os campos de dados do controle associado a dados, os parâmetros que foram criados declarativamente na `UpdateParameters` elemento e os parâmetros que foram adicionados a <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> manipulador de eventos são mescladas. (Para obter mais informações, consulte a seção anterior). O <xref:System.Web.UI.WebControls.ObjectDataSource> tenta encontrar um método a ser chamado de controle. Primeiro, ele procura por um ou mais métodos com o nome especificado no <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> propriedade. Se nenhuma correspondência for encontrada, um <xref:System.InvalidOperationException> exceção é lançada. Se uma correspondência for encontrada, em seguida, procura nomes de parâmetros correspondentes. Por exemplo, suponha que um tipo que é especificado pela <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> propriedade tem dois métodos chamados `UpdateARecord`. Uma `UpdateARecord` tem um parâmetro, `ID`e o outro `UpdateARecord` tem dois parâmetros, `Name` e `Number`. Se o <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> coleção tem apenas um parâmetro denominado `ID`, o `UpdateARecord` método com apenas o `ID` parâmetro é chamado. O tipo do parâmetro não é verificado na resolução de métodos. Não importa a ordem dos parâmetros.  
  
 Se o <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> propriedade for definida, o método é resolvido de maneira diferente. O <xref:System.Web.UI.WebControls.ObjectDataSource> procura por um método com o nome especificado na <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> propriedade que recebe um parâmetro do tipo que é especificada no <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> propriedade. Nesse caso, o nome do parâmetro não importa.  
  
   
  
## Examples  
 Os três exemplos a seguir mostram uma página da Web, uma classe de página code-behind e uma classe de acesso a dados que permitem que um usuário recuperar e atualizar registros na tabela Employees no banco de dados Northwind.  
  
 O primeiro exemplo mostra uma página da Web que contém duas <xref:System.Web.UI.WebControls.ObjectDataSource> controles, uma <xref:System.Web.UI.WebControls.DropDownList> controle e um <xref:System.Web.UI.WebControls.DetailsView> controle. A primeira <xref:System.Web.UI.WebControls.ObjectDataSource> controle e o <xref:System.Web.UI.WebControls.DropDownList> controle são usados para recuperar e exibir os nomes dos funcionários do banco de dados. A segunda <xref:System.Web.UI.WebControls.ObjectDataSource> controle e o <xref:System.Web.UI.WebControls.DetailsView> controle são usados para recuperar, exibir e modificar os dados do registro de funcionário que é selecionado pelo usuário.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx#1)]  
  
 O segundo exemplo mostra os manipuladores para o <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> e <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> eventos. O <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> manipulador de eventos serializa o objeto que contém dados que foi recuperados da tabela de funcionários. O objeto serializado é armazenado no estado de exibição. O <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> manipulador de eventos desserializa o objeto no estado de exibição que contém os dados originais para o registro de dados que está sendo atualizado. O objeto que contém os dados originais é passado como um parâmetro para o método Update. Os dados originais devem ser passados para o banco de dados para que possa ser usado para verificar se os dados foi modificados por outro processo.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx.vb#2)]  
  
 O terceiro exemplo mostra a classe de acesso de dados que interage com o banco de dados Northwind. A classe usa LINQ para consultar e atualizar a tabela de funcionários. O exemplo requer uma classe LINQ to SQL que representa o banco de dados Northwind e a tabela de funcionários. Para obter mais informações, consulte [como: Criar Classes LINQ to SQL em um projeto Web](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/App_Code/EmployeeLogic.cs#5)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/App_Code/EmployeeLogic.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">{1&amp;gt;Controles de servidor Web de fonte de dados&amp;lt;1}</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Visão geral do controle ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">{1&amp;gt;Criando um objeto de origem de controle ObjectDataSource&amp;lt;1}</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011">Usando o Entity Framework e o controle ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection UpdateParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdateParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ UpdateParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdateParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a coleção de parâmetros que contém os parâmetros usados pelo método especificado pela propriedade <see cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />.</summary>
        <value>Um <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> que contém os parâmetros usados pelo método especificado pela propriedade <see cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Os nomes e tipos dos parâmetros que estão contidos na <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> coleção deve coincidir com os nomes e tipos dos parâmetros no <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> assinatura do método. Os nomes de parâmetro são afetados pelo <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> propriedade e são diferencia maiusculas de minúsculas. Os parâmetros na coleção dependem dos dados no controle associado a dados, os parâmetros que são especificados de forma declarativa e os parâmetros que são adicionados por meio de programação. Para obter mais informações, consulte a seção "Parâmetro mesclagem" em <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> e [usando parâmetros com o controle ObjectDataSource](https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4).  
  
 O <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> propriedade recupera o <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> contidos pela propriedade de <xref:System.Web.UI.WebControls.ObjectDataSourceView> objeto que está associado com o <xref:System.Web.UI.WebControls.ObjectDataSource> controle.  
  
 Para obter mais informações sobre mesclagem de parâmetro, o tempo de vida do objeto e a resolução de método, consulte <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>.  
  
> [!IMPORTANT]
>  Você deve validar qualquer valor de parâmetro que você recebe do cliente. O tempo de execução simplesmente substitui o valor de parâmetro para o <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> propriedade.  
  
   
  
## Examples  
 Esta seção contém dois exemplos de código. O primeiro exemplo de código demonstra como usar um <xref:System.Web.UI.WebControls.DropDownList> controle, <xref:System.Web.UI.WebControls.TextBox> controles e vários <xref:System.Web.UI.WebControls.ObjectDataSource> objetos para atualizar os dados. O segundo exemplo de código mostra o `EmployeeLogic` classe que é usada no primeiro exemplo de código.  
  
 O exemplo de código a seguir demonstra como usar um <xref:System.Web.UI.WebControls.DropDownList> controle, <xref:System.Web.UI.WebControls.TextBox> controles e vários <xref:System.Web.UI.WebControls.ObjectDataSource> controles para atualizar dados. O <xref:System.Web.UI.WebControls.DropDownList> exibe o nome de um funcionário da Northwind, enquanto o <xref:System.Web.UI.WebControls.TextBox> controles são usados para inserir e atualizar informações de endereço. Porque o <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> coleção contém um <xref:System.Web.UI.WebControls.ControlParameter> que está associado ao valor selecionado da <xref:System.Web.UI.WebControls.DropDownList>, o botão que aciona o <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> a operação é habilitada somente depois que um funcionário é selecionado.  
  
> [!IMPORTANT]
>  Este exemplo tem uma caixa de texto que aceita entrada do usuário, que é uma potencial ameaça de segurança. Por padrão, as páginas da Web do ASP.NET validam que a entrada do usuário não inclui elementos HTML ou script. Para obter mais informações, consulte [Visão geral de explorações de script](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_12#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/CS/objds12cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_12#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/VB/objds12vb.aspx#1)]  
  
 O seguinte exemplo de código mostra o `EmployeeLogic` classe que é usada no exemplo de código anterior.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_12#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/CS/northwindemployee12.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_12#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/VB/northwindemployee12.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">{1&amp;gt;Controles de servidor Web de fonte de dados&amp;lt;1}</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Visão geral do controle ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">{1&amp;gt;Criando um objeto de origem de controle ObjectDataSource&amp;lt;1}</related>
      </Docs>
    </Member>
    <Member MemberName="Updating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Updating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Updating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Updating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updating As ObjectDataSourceMethodEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceMethodEventHandler ^ Updating;" />
      <MemberSignature Language="F#" Value="member this.Updating : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " Usage="member this.Updating : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre antes de uma operação de <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lidar com o <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> evento para executar a inicialização adicional que é específica para seu aplicativo, para validar os valores de parâmetros ou alterar os valores de parâmetro antes do <xref:System.Web.UI.WebControls.ObjectDataSource> controle executa a operação de atualização. Os parâmetros estão disponíveis como um <xref:System.Collections.IDictionary> coleção que é acessada pelo <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> propriedade, que é exposta pelo <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> objeto.  
  
 Para obter mais informações sobre como manipular eventos, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Os três exemplos a seguir mostram uma página da Web, uma classe de página code-behind e uma classe de acesso a dados que permitem que um usuário recuperar e atualizar registros na tabela Employees no banco de dados Northwind.  
  
 O primeiro exemplo mostra uma página da Web que contém duas <xref:System.Web.UI.WebControls.ObjectDataSource> controles, uma <xref:System.Web.UI.WebControls.DropDownList> controle e um <xref:System.Web.UI.WebControls.DetailsView> controle. A primeira <xref:System.Web.UI.WebControls.ObjectDataSource> controle e o <xref:System.Web.UI.WebControls.DropDownList> controle são usados para recuperar e exibir os nomes dos funcionários do banco de dados. A segunda <xref:System.Web.UI.WebControls.ObjectDataSource> controle e o <xref:System.Web.UI.WebControls.DetailsView> controle são usados para recuperar, exibir e modificar os dados do registro de funcionário que é selecionado pelo usuário.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx#1)]  
  
 O segundo exemplo mostra os manipuladores para o <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> e <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> eventos. O <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> manipulador de eventos serializa o objeto que contém dados que foi recuperados da tabela de funcionários. O objeto serializado é armazenado no estado de exibição. O <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> manipulador de eventos desserializa o objeto no estado de exibição que contém os dados originais para o registro de dados que está sendo atualizado. O objeto que contém os dados originais é passado como um parâmetro para o método Update. Os dados originais devem ser passados para o banco de dados para que possa ser usado para verificar se os dados foi modificados por outro processo.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx.vb#2)]  
  
 O terceiro exemplo mostra a classe de acesso de dados que interage com o banco de dados Northwind. A classe usa LINQ para consultar e atualizar a tabela de funcionários. O exemplo requer uma classe LINQ to SQL que representa o banco de dados Northwind e a tabela de funcionários. Para obter mais informações, consulte [como: Criar Classes LINQ to SQL em um projeto Web](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/App_Code/EmployeeLogic.cs#5)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/App_Code/EmployeeLogic.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Updated" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">{1&amp;gt;Controles de servidor Web de fonte de dados&amp;lt;1}</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Visão geral do controle ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">{1&amp;gt;Criando um objeto de origem de controle ObjectDataSource&amp;lt;1}</related>
      </Docs>
    </Member>
  </Members>
</Type>