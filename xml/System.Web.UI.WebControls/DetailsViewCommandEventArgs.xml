<Type Name="DetailsViewCommandEventArgs" FullName="System.Web.UI.WebControls.DetailsViewCommandEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="02e7458c8c5ae748c453566ac537a5e6810045b9" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39749437" /></Metadata><TypeSignature Language="C#" Value="public class DetailsViewCommandEventArgs : System.Web.UI.WebControls.CommandEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DetailsViewCommandEventArgs extends System.Web.UI.WebControls.CommandEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.DetailsViewCommandEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DetailsViewCommandEventArgs&#xA;Inherits CommandEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DetailsViewCommandEventArgs : System::Web::UI::WebControls::CommandEventArgs" />
  <TypeSignature Language="F#" Value="type DetailsViewCommandEventArgs = class&#xA;    inherit CommandEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.CommandEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornece dados para o evento de <see cref="E:System.Web.UI.WebControls.DetailsView.ItemCommand" /> .</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.DetailsView> controlar gera a <xref:System.Web.UI.WebControls.DetailsView.ItemCommand> evento quando um botão em um <xref:System.Web.UI.WebControls.ButtonField>, <xref:System.Web.UI.WebControls.CommandField>, ou <xref:System.Web.UI.WebControls.TemplateField> campo de linha é clicado. Isso permite que você forneça um manipulador de eventos que executa uma rotina personalizada sempre que esse evento ocorre.  
  
> [!NOTE]
>  O <xref:System.Web.UI.WebControls.DetailsView> controle também gera outros eventos especializados quando determinados botões são clicados (botões com o `CommandName` propriedade definida como "Excluir", "Insert", "Page" ou "Update"). Ao usar um desses botões, você deve considerar usar um dos eventos especializados fornecidos pelo controle (como <xref:System.Web.UI.WebControls.DetailsView.ItemDeleted> ou <xref:System.Web.UI.WebControls.DetailsView.ItemDeleting>).  
  
 Um <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs> objeto é passado para o manipulador de eventos. Se o botão que acionou o evento tem um nome de comando ou o valor do argumento de comando, você pode usar o <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs> objeto para determinar esses valores. Para determinar o nome do comando e o argumento de comando do botão clicado, use o <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A> e <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> propriedades, respectivamente. Você também pode acessar o <xref:System.Web.UI.WebControls.DetailsView> controle que acionou o evento usando o <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource%2A> propriedade.  
  
 Para obter uma lista de valores de propriedade inicial para uma instância das <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs> classe, consulte o <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs.%23ctor%2A> construtor.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs> objeto passado para o manipulador de eventos para o <xref:System.Web.UI.WebControls.DetailsView.ItemCommand> evento para determinar o nome do comando do botão clicado pelo usuário. Este exemplo usa o modelo de codificação de arquivo único.  
  
 [!code-aspx-csharp[DetailsViewCommandEventArgsCodeInline#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewCommandEventArgsCodeInline/CS/detailsviewcommandeventargscs.aspx#1)]
 [!code-aspx-vb[DetailsViewCommandEventArgsCodeInline#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewCommandEventArgsCodeInline/VB/detailsviewcommandeventargsvb.aspx#1)]  
  
 O exemplo de código a seguir mostra uma versão de modelo da codificação de lógica do exemplo anterior. Para esse exemplo funcione, você deve copiar o código a seguir no arquivo code-behind associado.  
  
 [!code-aspx-csharp[DetailsViewCommandEventArgsCodeBehind2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewCommandEventArgsCodeBehind2/CS/Default.aspx#1)]
 [!code-aspx-vb[DetailsViewCommandEventArgsCodeBehind2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewCommandEventArgsCodeBehind2/VB/DefaultVB.aspx#1)]  
  
 O exemplo de código a seguir mostra o arquivo code-behind para o exemplo anterior.  
  
 [!code-csharp[DetailsViewCommandEventArgsCodeBehind2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewCommandEventArgsCodeBehind2/CS/Default.aspx.cs#2)]
 [!code-vb[DetailsViewCommandEventArgsCodeBehind2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewCommandEventArgsCodeBehind2/VB/DefaultVB.aspx.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
    <altmember cref="T:System.Web.UI.WebControls.DetailsViewCommandEventHandler" />
    <altmember cref="T:System.Web.UI.WebControls.ButtonField" />
    <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
    <altmember cref="T:System.Web.UI.WebControls.CommandEventArgs" />
    <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemCommand" />
    <altmember cref="M:System.Web.UI.WebControls.DetailsView.OnItemCommand(System.Web.UI.WebControls.DetailsViewCommandEventArgs)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DetailsViewCommandEventArgs (object commandSource, System.Web.UI.WebControls.CommandEventArgs originalArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object commandSource, class System.Web.UI.WebControls.CommandEventArgs originalArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsViewCommandEventArgs.#ctor(System.Object,System.Web.UI.WebControls.CommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (commandSource As Object, originalArgs As CommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DetailsViewCommandEventArgs(System::Object ^ commandSource, System::Web::UI::WebControls::CommandEventArgs ^ originalArgs);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.DetailsViewCommandEventArgs : obj * System.Web.UI.WebControls.CommandEventArgs -&gt; System.Web.UI.WebControls.DetailsViewCommandEventArgs" Usage="new System.Web.UI.WebControls.DetailsViewCommandEventArgs (commandSource, originalArgs)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="commandSource" Type="System.Object" />
        <Parameter Name="originalArgs" Type="System.Web.UI.WebControls.CommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="commandSource">A origem do comando.</param>
        <param name="originalArgs">Um <see cref="T:System.Web.UI.WebControls.CommandEventArgs" /> que contém dados do evento.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.UI.WebControls.DetailsViewCommandEventArgs" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usar esse construtor para inicializar uma nova instância do <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs> classe.  
  
 A tabela a seguir mostra os valores de propriedade iniciais para uma instância de <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs>.  
  
|Propriedade|Valor inicial|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A>|O valor da <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> propriedade do <xref:System.Web.UI.WebControls.CommandEventArgs> contido no `originalArgs` parâmetro.|  
|<xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A>|O valor da <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A> propriedade do <xref:System.Web.UI.WebControls.CommandEventArgs> objeto contido no `originalArgs` parâmetro.|  
|<xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource%2A>|O objeto contido no `commandSource` parâmetro.|  
  
> [!NOTE]
>  Este construtor é usado principalmente por desenvolvedores de controle ao gerar eventos.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.CommandEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.CommandEventArgs.CommandArgument" />
        <altmember cref="P:System.Web.UI.WebControls.CommandEventArgs.CommandName" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource" />
        <altmember cref="M:System.Web.UI.WebControls.DetailsView.OnItemCommand(System.Web.UI.WebControls.DetailsViewCommandEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="CommandSource">
      <MemberSignature Language="C#" Value="public object CommandSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CommandSource" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandSource As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CommandSource { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandSource : obj" Usage="System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a fonte do comando.</summary>
        <value>Uma instância da <see cref="T:System.Object" /> classe que representa a fonte do comando.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource%2A> propriedade para acessar as propriedades do objeto que representa a fonte do comando. Em alguns casos, esse será o <xref:System.Web.UI.WebControls.DetailsView> próprio controle, e em outros casos será o <xref:System.Web.UI.WebControls.Button> controle que foi clicado.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource%2A> propriedade para determinar qual dos dois <xref:System.Web.UI.WebControls.DetailsView> controles gerados o <xref:System.Web.UI.WebControls.DetailsView.ItemCommand> eventos.  
  
 [!code-aspx-csharp[DetailsViewCommandEventArgsCommandSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewCommandEventArgsCommandSource/CS/detailsviewcommandeventargscommandsourcecs.aspx#1)]
 [!code-aspx-vb[DetailsViewCommandEventArgsCommandSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewCommandEventArgsCommandSource/VB/detailsviewcommandeventargscommandsourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
      </Docs>
    </Member>
    <Member MemberName="Handled">
      <MemberSignature Language="C#" Value="public bool Handled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Handled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsViewCommandEventArgs.Handled" />
      <MemberSignature Language="VB.NET" Value="Public Property Handled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Handled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Handled : bool with get, set" Usage="System.Web.UI.WebControls.DetailsViewCommandEventArgs.Handled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se o controle manipulou o evento.</summary>
        <value><see langword="true" /> Se o código de associação de dados de evento foi ignorado ou concluiu a execução; Caso contrário, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Defina essa propriedade como `true` no manipulador de eventos para especificar que o <xref:System.Web.UI.WebControls.DetailsView> controle não deve tratar o evento porque você lidar com isso em seu código.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>