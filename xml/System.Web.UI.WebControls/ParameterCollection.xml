<Type Name="ParameterCollection" FullName="System.Web.UI.WebControls.ParameterCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d78a38a22de229f66adcc2ad731b20b348d5bc53" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48675038" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ParameterCollection : System.Web.UI.StateManagedCollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ParameterCollection extends System.Web.UI.StateManagedCollection" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ParameterCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ParameterCollection&#xA;Inherits StateManagedCollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class ParameterCollection : System::Web::UI::StateManagedCollection" />
  <TypeSignature Language="F#" Value="type ParameterCollection = class&#xA;    inherit StateManagedCollection" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.StateManagedCollection</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa uma coleção de objetos derivados de <see cref="T:System.Web.UI.WebControls.Parameter" /> e <see cref="T:System.Web.UI.WebControls.Parameter" /> usados por controles de fonte de dados em cenários de associação de dados avançados.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.ParameterCollection> classe representa uma coleção de <xref:System.Web.UI.WebControls.Parameter> objetos usados em cenários avançados de vinculação de dados com controles de fonte de dados. O <xref:System.Web.UI.WebControls.Parameter> objetos são usados para associar os valores contidos pelo local <xref:System.Web.UI.Page> variáveis, cookies HTTP, variáveis de sessão e valores dos outros controles para controles de fonte de dados ao recuperar, atualizar, excluir e inserir dados.  
  
 Use o <xref:System.Web.UI.WebControls.ParameterCollection> classe programaticamente para gerenciar um conjunto de <xref:System.Web.UI.WebControls.Parameter> objetos. Você pode adicionar, inserir e remover <xref:System.Web.UI.WebControls.Parameter> objetos usando os métodos apropriados do <xref:System.Web.UI.WebControls.ParameterCollection> classe. Recuperar de forma programática <xref:System.Web.UI.WebControls.Parameter> objetos de uma coleção, use um dos seguintes métodos:  
  
-   Use o indexador para obter um único <xref:System.Web.UI.WebControls.Parameter> objeto da coleção por nome ou usando a notação de matriz.  
  
-   Use o <xref:System.Collections.IEnumerable.GetEnumerator%2A> método para criar um <xref:System.Collections.IEnumerator?displayProperty=nameWithType>-objeto implementado, que pode ser usado para obter itens da coleção.  
  
 O <xref:System.Web.UI.StateManagedCollection.Count%2A> propriedade especifica o número total de itens na coleção e é usada para determinar o limite superior da coleção. Você pode adicionar e remover itens da coleção usando o <xref:System.Web.UI.WebControls.ParameterCollection.Add%2A>, <xref:System.Web.UI.WebControls.ParameterCollection.Insert%2A>, <xref:System.Web.UI.WebControls.ParameterCollection.Remove%2A>, e <xref:System.Web.UI.WebControls.ParameterCollection.RemoveAt%2A> métodos.  
  
 Dependendo da implementação e a semântica de um controle de fonte de dados em particular, a ordem na qual os parâmetros são armazenados no <xref:System.Web.UI.WebControls.ParameterCollection> coleção pode ser importante. Por exemplo, ao usar o <xref:System.Web.UI.WebControls.SqlDataSource> controle como uma fonte de dados ODBC, a ordem dos <xref:System.Web.UI.WebControls.Parameter> objetos no <xref:System.Web.UI.WebControls.ParameterCollection> coleção deve ser igual à ordem dos parâmetros em consultas de SQL com parâmetros que você usar. No entanto, ao usar o <xref:System.Web.UI.WebControls.SqlDataSource> controle com o Microsoft SQL Server, a ordem dos <xref:System.Web.UI.WebControls.Parameter> objetos não são importantes.  
  
> [!IMPORTANT]
>  Quando você usa controles de fonte de dados, os valores são inseridos em parâmetros de comando sem validação, que é uma ameaça potencial de segurança. Use um evento no controle de fonte de dados para validar valores de parâmetro antes do comando é executado. Para obter mais informações, consulte [Visão geral de explorações de script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 A tabela a seguir lista as classes de parâmetros diferentes e como eles são usados.  
  
|Classe de parâmetro|Descrição|  
|---------------------|-----------------|  
|<xref:System.Web.UI.WebControls.Parameter>|A classe base do parâmetro. Usá-lo para associar a uma variável local ou qualquer cadeia de caracteres estática usando o <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> propriedade.|  
|<xref:System.Web.UI.WebControls.ControlParameter>|Valor de retorno de um parâmetro que pode ser usado para associar a propriedade ou método de um controle.|  
|<xref:System.Web.UI.WebControls.CookieParameter>|Um parâmetro que pode ser usado para associar ao valor de um cookie.|  
|<xref:System.Web.UI.WebControls.FormParameter>|Um parâmetro que pode ser usado para associar a um atributo de página de Web Forms atual.|  
|<xref:System.Web.UI.WebControls.QueryStringParameter>|Um parâmetro que pode ser usado para associar a um valor passado a uma página de Web Forms em uma cadeia de caracteres de consulta.|  
|<xref:System.Web.UI.WebControls.SessionParameter>|Um parâmetro que pode ser usado para associar ao valor de uma variável de sessão.|  
|<xref:System.Web.UI.WebControls.ProfileParameter>|Um parâmetro que pode ser usado para associar ao valor de uma propriedade de perfil do ASP.NET.|  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar um <xref:System.Web.UI.WebControls.AccessDataSource> controle e um <xref:System.Web.UI.WebControls.FormParameter> para exibir informações de um banco de dados do Microsoft Access em um <xref:System.Web.UI.WebControls.GridView> controle. O <xref:System.Web.UI.WebControls.FormParameter> objeto é adicionado para o <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> coleção usando o <xref:System.Web.UI.WebControls.ParameterCollection.Add%2A> método.  
  
> [!IMPORTANT]
>  Este exemplo tem uma caixa de texto que aceita entrada do usuário, que é uma potencial ameaça de segurança. Por padrão, as páginas da Web do ASP.NET validam que a entrada do usuário não inclui elementos HTML ou script. Para obter mais informações, consulte [Visão geral de explorações de script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.FormParameter_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_2/CS/fp2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.FormParameter_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_2/VB/fp2vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.Parameter" />
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSource" />
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
    <altmember cref="T:System.Web.UI.WebControls.XmlDataSource" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParameterCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ParameterCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa a classe para uso por uma instância de classe herdada. Esse construtor pode ser chamado apenas por uma classe herdada.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Adiciona um objeto de <see cref="T:System.Web.UI.WebControls.Parameter" /> à coleção.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.Web.UI.WebControls.Parameter parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.Web.UI.WebControls.Parameter parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.Add(System.Web.UI.WebControls.Parameter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Web::UI::WebControls::Parameter ^ parameter);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Web.UI.WebControls.Parameter -&gt; int" Usage="parameterCollection.Add parameter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Web.UI.WebControls.Parameter" />
      </Parameters>
      <Docs>
        <param name="parameter">O <see cref="T:System.Web.UI.WebControls.Parameter" /> a ser acrescentado à coleção.</param>
        <summary>Acrescenta o objeto <see cref="T:System.Web.UI.WebControls.Parameter" /> especificado ao final da coleção.</summary>
        <returns>O valor de índice do item adicionado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.ParameterCollection.Add%28System.Web.UI.WebControls.Parameter%29> método para acrescentar um <xref:System.Web.UI.WebControls.Parameter> objeto até o final da coleção. Essa implementação do método usa o <xref:System.Web.UI.WebControls.Parameter> objeto especificado pelo `param` parâmetro e acrescenta-o à coleção.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar um <xref:System.Web.UI.WebControls.AccessDataSource> controle e um <xref:System.Web.UI.WebControls.FormParameter> objeto para exibir informações de um banco de dados do Microsoft Access em um <xref:System.Web.UI.WebControls.GridView> controle. O <xref:System.Web.UI.WebControls.FormParameter> objeto é adicionado para o <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> coleção usando o <xref:System.Web.UI.WebControls.ParameterCollection.Add%28System.Web.UI.WebControls.Parameter%29> método.  
  
> [!IMPORTANT]
>  Este exemplo tem uma caixa de texto que aceita entrada do usuário, que é uma potencial ameaça de segurança. Por padrão, as páginas da Web do ASP.NET validam que a entrada do usuário não inclui elementos HTML ou script. Para obter mais informações, consulte [Visão geral de explorações de script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.FormParameter_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_2/CS/fp2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.FormParameter_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_2/VB/fp2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ParameterCollection.Insert(System.Int32,System.Web.UI.WebControls.Parameter)" />
        <altmember cref="M:System.Web.UI.WebControls.ParameterCollection.Remove(System.Web.UI.WebControls.Parameter)" />
        <altmember cref="M:System.Web.UI.WebControls.ParameterCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.Add(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (name As String, value As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.Add : string * string -&gt; int" Usage="parameterCollection.Add (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">O nome do parâmetro.</param>
        <param name="value">Uma cadeia de caracteres que funciona como um valor padrão para o parâmetro.</param>
        <summary>Cria um objeto <see cref="T:System.Web.UI.WebControls.Parameter" /> com o nome especificado e o valor padrão e anexa-o ao final da coleção.</summary>
        <returns>O valor de índice do item adicionado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.ParameterCollection.Add%28System.String%2CSystem.String%29> método para criar e anexar um <xref:System.Web.UI.WebControls.Parameter> objeto com um valor padrão para o final da coleção. Essa implementação do método cria o <xref:System.Web.UI.WebControls.Parameter> do objeto usando o nome e o valor padrão especificado pelo `name` e `value` parâmetros, respectivamente e acrescenta-o à coleção.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como o <xref:System.Web.UI.WebControls.ParameterCollection.Add%28System.String%2CSystem.String%29> método pode ser usado para adicionar novos <xref:System.Web.UI.WebControls.Parameter> objetos para um <xref:System.Web.UI.WebControls.ParameterCollection> coleção fornecendo o `name` e `value` parâmetros. Neste exemplo, uma <xref:System.Web.UI.WebControls.Parameter> objeto é adicionado a um comando de atualização de um controle de fonte de dados do Access que está associado ao valor de um <xref:System.Web.UI.WebControls.TextBox> controle.  
  
> [!IMPORTANT]
>  Este exemplo tem uma caixa de texto que aceita entrada do usuário, que é uma potencial ameaça de segurança. Por padrão, as páginas da Web do ASP.NET validam que a entrada do usuário não inclui elementos HTML ou script. Para obter mais informações, consulte [Visão geral de explorações de script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ParameterCollection_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ParameterCollection_2/CS/paramcoll2cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.ParameterCollection_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ParameterCollection_2/VB/paramcoll2vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Parameter" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (string name, System.Data.DbType dbType, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(string name, valuetype System.Data.DbType dbType, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.Add(System.String,System.Data.DbType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::String ^ name, System::Data::DbType dbType, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.Add : string * System.Data.DbType * string -&gt; int" Usage="parameterCollection.Add (name, dbType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.DbType" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">O nome do parâmetro.</param>
        <param name="dbType">O tipo de banco de dados do parâmetro.</param>
        <param name="value">O valor padrão do parâmetro.</param>
        <summary>Cria um objeto <see cref="T:System.Web.UI.WebControls.Parameter" /> com o nome especificado, tipo de banco de dados e valor padrão e o adiciona ao final da coleção.</summary>
        <returns>O valor de índice do item adicionado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método é para tipos de banco de dados. Use o <xref:System.Web.UI.WebControls.ParameterCollection.Add%28System.String%2CSystem.TypeCode%2CSystem.String%29> método para tipos CLR.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (string name, TypeCode type, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(string name, valuetype System.TypeCode type, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.Add(System.String,System.TypeCode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (name As String, type As TypeCode, value As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::String ^ name, TypeCode type, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.Add : string * TypeCode * string -&gt; int" Usage="parameterCollection.Add (name, type, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.TypeCode" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">O nome do parâmetro.</param>
        <param name="type">O tipo do parâmetro.</param>
        <param name="value">O valor padrão do parâmetro.</param>
        <summary>Cria um objeto <see cref="T:System.Web.UI.WebControls.Parameter" /> com o nome especificado, <see cref="T:System.TypeCode" /> e valor padrão e o acrescenta ao final da coleção.</summary>
        <returns>O valor de índice do item adicionado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.ParameterCollection.Add%28System.String%2CSystem.TypeCode%2CSystem.String%29> método para criar e acrescentar fortemente tipado <xref:System.Web.UI.WebControls.Parameter> objeto com um valor padrão para o final da coleção. Essa implementação do método cria o <xref:System.Web.UI.WebControls.Parameter> do objeto usando o nome, tipo e o valor especificado pela `name`, `type` e `value` parâmetros, respectivamente e acrescenta-o à coleção.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como o <xref:System.Web.UI.WebControls.ParameterCollection.Add%28System.String%2CSystem.TypeCode%2CSystem.String%29> método pode ser usado para adicionar novos <xref:System.Web.UI.WebControls.Parameter> objetos para um <xref:System.Web.UI.WebControls.ParameterCollection> coleção fornecendo o `name`, `value`, e `type` parâmetros. Neste exemplo, um <xref:System.Web.UI.WebControls.Parameter> objeto é adicionado a um comando de atualização de um controle de fonte de dados de acesso que fornece o valor da hora do sistema atual. O parâmetro é adicionado com o <xref:System.TypeCode> de <xref:System.DateTime>.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ParameterCollection_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ParameterCollection_2/CS/paramcoll2cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.ParameterCollection_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ParameterCollection_2/VB/paramcoll2vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Parameter" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Web.UI.WebControls.Parameter parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Web.UI.WebControls.Parameter parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.Contains(System.Web.UI.WebControls.Parameter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Web::UI::WebControls::Parameter ^ parameter);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Web.UI.WebControls.Parameter -&gt; bool" Usage="parameterCollection.Contains parameter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Web.UI.WebControls.Parameter" />
      </Parameters>
      <Docs>
        <param name="parameter">O <see cref="T:System.Web.UI.WebControls.Parameter" /> a ser localizado no <see cref="T:System.Web.UI.WebControls.ParameterCollection" />.</param>
        <summary>Determina se a coleção <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> contém um valor específico</summary>
        <returns>
          <see langword="true" /> se o objeto for encontrado no <see cref="T:System.Web.UI.WebControls.ParameterCollection" />; caso contrário, <see langword="false" />. Se <see langword="null" /> for passado para o parâmetro <paramref name="value" />, <see langword="false" /> será retornado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use esse método para determinar se um especificado <xref:System.Web.UI.WebControls.Parameter> objeto está no <xref:System.Web.UI.WebControls.ParameterCollection> coleção.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Web.UI.WebControls.Parameter[] parameterArray, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Web.UI.WebControls.Parameter[] parameterArray, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.CopyTo(System.Web.UI.WebControls.Parameter[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (parameterArray As Parameter(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Web::UI::WebControls::Parameter ^&gt; ^ parameterArray, int index);" />
      <MemberSignature Language="F#" Value="override this.CopyTo : System.Web.UI.WebControls.Parameter[] * int -&gt; unit" Usage="parameterCollection.CopyTo (parameterArray, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterArray" Type="System.Web.UI.WebControls.Parameter[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterArray">A matriz de parâmetros da qual o valor em um índice especificado deve ser copiado.</param>
        <param name="index">O índice <see langword="integer" /> do item <c>parameterArray</c> que deve ser copiado.</param>
        <summary>Copia um índice especificado de uma matriz de parâmetros para a coleção de parâmetros.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateKnownType">
      <MemberSignature Language="C#" Value="protected override object CreateKnownType (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object CreateKnownType(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.CreateKnownType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateKnownType (index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ CreateKnownType(int index);" />
      <MemberSignature Language="F#" Value="override this.CreateKnownType : int -&gt; obj" Usage="parameterCollection.CreateKnownType index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">O índice do tipo de <see cref="T:System.Web.UI.WebControls.Parameter" /> a ser criado na lista ordenada de tipos retornados por <see cref="M:System.Web.UI.WebControls.ParameterCollection.GetKnownTypes" />.</param>
        <summary>Cria uma instância de um objeto <see cref="T:System.Web.UI.WebControls.Parameter" /> padrão.</summary>
        <returns>Uma instância padrão de um <see cref="T:System.Web.UI.WebControls.Parameter" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.ParameterCollection.CreateKnownType%2A> método cria uma instância de um <xref:System.Web.UI.WebControls.Parameter> objeto de acordo com o índice do <xref:System.Type> retornado pelo <xref:System.Web.UI.WebControls.ParameterCollection.GetKnownTypes%2A> método. Os valores de índice correspondem aos tipos mostrados na tabela a seguir.  
  
|Índice|Tipo de parâmetro|  
|-----------|--------------------|  
|0|<xref:System.Web.UI.WebControls.ControlParameter>|  
|1|<xref:System.Web.UI.WebControls.CookieParameter>|  
|2|<xref:System.Web.UI.WebControls.FormParameter>|  
|3|<xref:System.Web.UI.WebControls.Parameter>|  
|4|<xref:System.Web.UI.WebControls.QueryStringParameter>|  
|5|<xref:System.Web.UI.WebControls.SessionParameter>|  
|6|<xref:System.Web.UI.WebControls.ProfileParameter>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">O índice especificado não está dentro do intervalo reconhecido.</exception>
        <altmember cref="M:System.Web.UI.WebControls.ParameterCollection.GetKnownTypes" />
      </Docs>
    </Member>
    <Member MemberName="GetKnownTypes">
      <MemberSignature Language="C#" Value="protected override Type[] GetKnownTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Type[] GetKnownTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.GetKnownTypes" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetKnownTypes () As Type()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;Type ^&gt; ^ GetKnownTypes();" />
      <MemberSignature Language="F#" Value="override this.GetKnownTypes : unit -&gt; Type[]" Usage="parameterCollection.GetKnownTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtém uma matriz de tipos <see cref="T:System.Web.UI.WebControls.Parameter" /> que a coleção <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> pode conter.</summary>
        <returns>Uma matriz ordenada de objetos <see cref="T:System.Type" /> que identificam os tipos de objetos <see cref="T:System.Web.UI.WebControls.Parameter" /> que a coleção pode conter.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.ParameterCollection.CreateKnownType(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary GetValues (System.Web.HttpContext context, System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Specialized.IOrderedDictionary GetValues(class System.Web.HttpContext context, class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.GetValues(System.Web.HttpContext,System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Specialized::IOrderedDictionary ^ GetValues(System::Web::HttpContext ^ context, System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="member this.GetValues : System.Web.HttpContext * System.Web.UI.Control -&gt; System.Collections.Specialized.IOrderedDictionary" Usage="parameterCollection.GetValues (context, control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="context">A <see cref="T:System.Web.HttpRequest" /> atual à qual o <see cref="T:System.Web.UI.WebControls.Parameter" /> se associa.</param>
        <param name="control">A instância de <see cref="T:System.Web.UI.Control" /> que é passada para cada método <see cref="M:System.Web.UI.WebControls.ControlParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" /> do parâmetro.</param>
        <summary>Obtém uma coleção ordenada de nomes de objetos <see cref="T:System.Web.UI.WebControls.Parameter" /> e seus valores correspondentes contidos atualmente na coleção.</summary>
        <returns>Um <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> de pares nome/valor.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O `control` parâmetro é usado pelo <xref:System.Web.UI.WebControls.Parameter> objetos contidos na coleção para recuperar o <xref:System.Web.UI.Page> atuais e <xref:System.Web.HttpRequest> do objeto que o <xref:System.Web.UI.WebControls.Parameter> objeto está associado.  
  
 Porque o <xref:System.Collections.Specialized.IOrderedDictionary> objeto deve exclusivamente nomeada entradas, mas o <xref:System.Web.UI.WebControls.ParameterCollection> coleção não exige ou garantir exclusiva <xref:System.Web.UI.WebControls.Parameter> nomes de objeto, a implementação desse método acrescenta um número ao final de cada <xref:System.Web.UI.WebControls.Parameter.Name%2A> propriedade para garantir a exclusividade na coleção retornada.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Web.UI.WebControls.Parameter parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Web.UI.WebControls.Parameter parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.IndexOf(System.Web.UI.WebControls.Parameter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Web::UI::WebControls::Parameter ^ parameter);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Web.UI.WebControls.Parameter -&gt; int" Usage="parameterCollection.IndexOf parameter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Web.UI.WebControls.Parameter" />
      </Parameters>
      <Docs>
        <param name="parameter">O <see cref="T:System.Web.UI.WebControls.Parameter" /> a ser localizado no <see cref="T:System.Web.UI.WebControls.ParameterCollection" />.</param>
        <summary>Determina o índice de um objeto <see cref="T:System.Web.UI.WebControls.Parameter" /> especificado na coleção <see cref="T:System.Web.UI.WebControls.ParameterCollection" />.</summary>
        <returns>O índice do <paramref name="parameter" />, se ele estiver localizado na coleção, caso contrário, -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use esse método para determinar o índice de um parâmetro no <xref:System.Web.UI.WebControls.ParameterCollection> coleção.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Web.UI.WebControls.Parameter parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Web.UI.WebControls.Parameter parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.Insert(System.Int32,System.Web.UI.WebControls.Parameter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Web::UI::WebControls::Parameter ^ parameter);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * System.Web.UI.WebControls.Parameter -&gt; unit" Usage="parameterCollection.Insert (index, parameter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="parameter" Type="System.Web.UI.WebControls.Parameter" />
      </Parameters>
      <Docs>
        <param name="index">O índice de base zero no qual o <see cref="T:System.Web.UI.WebControls.Parameter" /> é inserido.</param>
        <param name="parameter">O <see cref="T:System.Web.UI.WebControls.Parameter" /> a ser inserido.</param>
        <summary>Insere o objeto <see cref="T:System.Web.UI.WebControls.Parameter" /> especificado na coleção <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> no índice especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.ParameterCollection.Insert%2A> método para adicionar um <xref:System.Web.UI.WebControls.Parameter> do objeto para um <xref:System.Web.UI.WebControls.ParameterCollection> coleção em um local específico. Neste exemplo, várias <xref:System.Web.UI.WebControls.QueryStringParameter> objetos são adicionados a uma <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> coleção, um <xref:System.Web.UI.WebControls.QueryStringParameter> é inserido na coleção, e a ordem da coleção será impresso quando a página for carregada.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.QueryStringParameter_7#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.QueryStringParameter_7/CS/qsp7acs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.QueryStringParameter_7#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.QueryStringParameter_7/VB/qsp7avb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> é menor que zero.  
  
- ou - 
 <paramref name="index" /> é maior que <see langword="Count" />.</exception>
        <altmember cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#IndexOf(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Obtém ou define o objeto <see cref="T:System.Web.UI.WebControls.Parameter" /> na coleção.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Parameter this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Parameter Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ParameterCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As Parameter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Parameter ^ default[int] { System::Web::UI::WebControls::Parameter ^ get(int index); void set(int index, System::Web::UI::WebControls::Parameter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Web.UI.WebControls.Parameter with get, set" Usage="System.Web.UI.WebControls.ParameterCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Parameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">O índice do <see cref="T:System.Web.UI.WebControls.Parameter" /> a ser recuperado da coleção.</param>
        <summary>Obtém ou define o objeto <see cref="T:System.Web.UI.WebControls.Parameter" /> no índice especificado na coleção.</summary>
        <value>O <see cref="T:System.Web.UI.WebControls.Parameter" /> no índice especificado na coleção.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use esse indexador para obter um <xref:System.Web.UI.WebControls.Parameter> objeto por sua localização no <xref:System.Web.UI.WebControls.ParameterCollection> coleção.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Parameter" />
        <altmember cref="T:System.Web.UI.WebControls.ControlParameter" />
        <altmember cref="T:System.Web.UI.WebControls.FormParameter" />
        <altmember cref="T:System.Web.UI.WebControls.QueryStringParameter" />
        <altmember cref="T:System.Web.UI.WebControls.SessionParameter" />
        <altmember cref="T:System.Web.UI.WebControls.ProfileParameter" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Parameter this[string name] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Parameter Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ParameterCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(name As String) As Parameter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Parameter ^ default[System::String ^] { System::Web::UI::WebControls::Parameter ^ get(System::String ^ name); void set(System::String ^ name, System::Web::UI::WebControls::Parameter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Web.UI.WebControls.Parameter with get, set" Usage="System.Web.UI.WebControls.ParameterCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Parameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">O <see cref="P:System.Web.UI.WebControls.Parameter.Name" /> do <see cref="T:System.Web.UI.WebControls.Parameter" /> a ser recuperado da coleção.</param>
        <summary>Obtém ou define o objeto <see cref="T:System.Web.UI.WebControls.Parameter" /> com o nome especificado na coleção.</summary>
        <value>O <see cref="T:System.Web.UI.WebControls.Parameter" /> com o nome especificado na coleção. Se o <see cref="T:System.Web.UI.WebControls.Parameter" /> não for encontrado na coleção, o indexador retornará <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use esse indexador para obter um <xref:System.Web.UI.WebControls.Parameter> objeto pelo nome da <xref:System.Web.UI.WebControls.ParameterCollection> coleção, usando a notação de matriz.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.ParameterCollection.Remove%2A> método e o <xref:System.Web.UI.WebControls.ParameterCollection.Item%2A> indexador para remover um <xref:System.Web.UI.WebControls.Parameter> do objeto de um <xref:System.Web.UI.WebControls.ParameterCollection> coleção. Neste exemplo, várias <xref:System.Web.UI.WebControls.QueryStringParameter> objetos são adicionados a uma <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> coleção, um <xref:System.Web.UI.WebControls.QueryStringParameter> é removido da coleção, e a ordem da coleção será impresso quando a página for carregada.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.QueryStringParameter_6#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.QueryStringParameter_6/CS/qsp6cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.QueryStringParameter_6#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.QueryStringParameter_6/VB/qsp6vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Parameter" />
        <altmember cref="T:System.Web.UI.WebControls.ControlParameter" />
        <altmember cref="T:System.Web.UI.WebControls.FormParameter" />
        <altmember cref="T:System.Web.UI.WebControls.QueryStringParameter" />
        <altmember cref="T:System.Web.UI.WebControls.SessionParameter" />
        <altmember cref="T:System.Web.UI.WebControls.ProfileParameter" />
      </Docs>
    </Member>
    <Member MemberName="OnClearComplete">
      <MemberSignature Language="C#" Value="protected override void OnClearComplete ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnClearComplete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.OnClearComplete" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnClearComplete ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnClearComplete();" />
      <MemberSignature Language="F#" Value="override this.OnClearComplete : unit -&gt; unit" Usage="parameterCollection.OnClearComplete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Executa processos personalizados adicionais depois de limpar o conteúdo da coleção.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.ParameterCollection.OnClearComplete%2A> método é chamado para executar processamento adicional após o <xref:System.Web.UI.StateManagedCollection.Clear%2A> método é concluído. Ele chama o <xref:System.Web.UI.WebControls.ParameterCollection.OnParametersChanged%2A> método.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Esse método permite que os implementadores defina processos que devem ser executados após a exclusão de todos os elementos da coleção subjacente. Ao definir esse método, os implementadores podem adicionar funcionalidade para métodos herdados sem precisar substituir todos os outros métodos.  
  
 <see cref="M:System.Web.UI.StateManagedCollection.OnClear" /> é invocado antes do padrão <see langword="Clear" /> comportamento, enquanto <see cref="M:System.Web.UI.WebControls.ParameterCollection.OnClearComplete" /> é invocado após o padrão <see langword="Clear" /> comportamento.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.ParameterCollection.OnParametersChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnInsert">
      <MemberSignature Language="C#" Value="protected override void OnInsert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnInsert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.OnInsert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnInsert (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnInsert(int index, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.OnInsert : int * obj -&gt; unit" Usage="parameterCollection.OnInsert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">O índice na coleção em que o <see cref="T:System.Web.UI.WebControls.Parameter" /> está inserido.</param>
        <param name="value">O <see cref="T:System.Web.UI.WebControls.Parameter" /> que está inserido na <see cref="T:System.Web.UI.WebControls.ParameterCollection" />.</param>
        <summary>Ocorre antes que o método <see cref="M:System.Web.UI.WebControls.ParameterCollection.Insert(System.Int32,System.Web.UI.WebControls.Parameter)" /> seja chamado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.ParameterCollection.OnInsert%2A> método é chamado para executar processamento adicional antes do <xref:System.Web.UI.WebControls.ParameterCollection.Insert%2A> método é chamado.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Esse método permite que os implementadores defina processos que devem ser executados antes de inserir um elemento na coleção subjacente. Ao definir esse método, os implementadores podem adicionar funcionalidade para métodos herdados sem precisar substituir todos os outros métodos.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.ParameterCollection.Insert(System.Int32,System.Web.UI.WebControls.Parameter)" />
      </Docs>
    </Member>
    <Member MemberName="OnInsertComplete">
      <MemberSignature Language="C#" Value="protected override void OnInsertComplete (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnInsertComplete(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.OnInsertComplete(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnInsertComplete (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnInsertComplete(int index, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.OnInsertComplete : int * obj -&gt; unit" Usage="parameterCollection.OnInsertComplete (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">O índice na coleção em que o <see cref="T:System.Web.UI.WebControls.Parameter" /> foi inserido.</param>
        <param name="value">O <see cref="T:System.Web.UI.WebControls.Parameter" /> que foi inserido na <see cref="T:System.Web.UI.WebControls.ParameterCollection" />.</param>
        <summary>Ocorre depois que o método <see cref="M:System.Web.UI.WebControls.ParameterCollection.Insert(System.Int32,System.Web.UI.WebControls.Parameter)" /> é concluído.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.ParameterCollection.OnInsertComplete%2A> método é chamado para executar processamento adicional após o <xref:System.Web.UI.WebControls.ParameterCollection.Insert%2A> método é concluído. Ele chama o <xref:System.Web.UI.WebControls.ParameterCollection.OnParametersChanged%2A> método.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Esse método permite que os implementadores defina processos que devem ser executados após a inserção de um elemento na coleção subjacente. Ao definir esse método, os implementadores podem adicionar funcionalidade para métodos herdados sem precisar substituir todos os outros métodos.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.ParameterCollection.Insert(System.Int32,System.Web.UI.WebControls.Parameter)" />
      </Docs>
    </Member>
    <Member MemberName="OnParametersChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnParametersChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnParametersChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.OnParametersChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnParametersChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnParametersChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnParametersChanged : EventArgs -&gt; unit&#xA;override this.OnParametersChanged : EventArgs -&gt; unit" Usage="parameterCollection.OnParametersChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.EventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Web.UI.WebControls.ParameterCollection.ParametersChanged" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Web.UI.WebControls.ParameterCollection.ParametersChanged" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.OnParameterChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnRemoveComplete">
      <MemberSignature Language="C#" Value="protected override void OnRemoveComplete (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRemoveComplete(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.OnRemoveComplete(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnRemoveComplete (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnRemoveComplete(int index, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.OnRemoveComplete : int * obj -&gt; unit" Usage="parameterCollection.OnRemoveComplete (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">O índice na coleção da qual o objeto <see cref="T:System.Web.UI.WebControls.Parameter" /> foi removido.</param>
        <param name="value">O <see cref="T:System.Web.UI.WebControls.Parameter" /> que foi removido da <see cref="T:System.Web.UI.WebControls.ParameterCollection" />.</param>
        <summary>Ocorre depois que o método <see cref="M:System.Web.UI.WebControls.ParameterCollection.Remove(System.Web.UI.WebControls.Parameter)" /> é concluído.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.ParameterCollection.OnRemoveComplete%2A> método é chamado para executar processamento adicional após o <xref:System.Web.UI.WebControls.ParameterCollection.Remove%2A> método é concluído. Ele chama o <xref:System.Web.UI.WebControls.ParameterCollection.OnParametersChanged%2A> método.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Esse método permite que os implementadores defina processos que devem ser executados após a remoção de um elemento da coleção subjacente. Ao definir esse método, os implementadores podem adicionar funcionalidade para métodos herdados sem precisar substituir todos os outros métodos.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.ParameterCollection.Remove(System.Web.UI.WebControls.Parameter)" />
        <altmember cref="M:System.Web.UI.WebControls.ParameterCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="OnValidate">
      <MemberSignature Language="C#" Value="protected override void OnValidate (object o);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnValidate(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.OnValidate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnValidate (o As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnValidate(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.OnValidate : obj -&gt; unit" Usage="parameterCollection.OnValidate o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">O <see langword="object" /> que está sendo validado.</param>
        <summary>Executa processos personalizados adicionais ao validar um valor.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.ParameterCollection.OnValidate%2A> método determina se o objeto especificado em de `o` parâmetro é um <xref:System.Web.UI.WebControls.Parameter> instância. Se não, ele gerará um <xref:System.ArgumentException> exceção.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">O objeto não é uma instância da classe <see cref="T:System.Web.UI.WebControls.Parameter" /> nem uma de suas classes derivadas.</exception>
        <exception cref="T:System.ArgumentNullException">O objeto é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ParametersChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ParametersChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ParametersChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ParameterCollection.ParametersChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ParametersChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ParametersChanged;" />
      <MemberSignature Language="F#" Value="member this.ParametersChanged : EventHandler " Usage="member this.ParametersChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando um ou mais objetos <see cref="T:System.Web.UI.WebControls.Parameter" /> contidos na coleção muda de estado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o <xref:System.Web.UI.WebControls.ParameterCollection> coleção contida por um controle de fonte de dados, o <xref:System.Web.UI.WebControls.ParameterCollection.ParametersChanged> evento dispara o controle de fonte de dados `DataSourceChanged` evento, fazendo com que todos os controles ligados a dados associar novamente.  
  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
 O <xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> método também permite que classes derivadas manipular o evento sem anexar um delegado. Essa é a técnica preferencial para manipular o evento em uma classe derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao substituir <see cref="M:System.Web.UI.WebControls.Parameter.OnParameterChanged" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Web.UI.WebControls.Parameter.OnParameterChanged" /> , de modo que delegados registrados recebam o evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Web.UI.WebControls.Parameter parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Web.UI.WebControls.Parameter parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.Remove(System.Web.UI.WebControls.Parameter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Web::UI::WebControls::Parameter ^ parameter);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Web.UI.WebControls.Parameter -&gt; unit" Usage="parameterCollection.Remove parameter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Web.UI.WebControls.Parameter" />
      </Parameters>
      <Docs>
        <param name="parameter">O <see cref="T:System.Web.UI.WebControls.Parameter" /> a ser removido de <see cref="T:System.Web.UI.WebControls.ParameterCollection" />.</param>
        <summary>Remove o objeto <see cref="T:System.Web.UI.WebControls.Parameter" /> especificado da coleção <see cref="T:System.Web.UI.WebControls.ParameterCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use esse método para remover especificado <xref:System.Web.UI.WebControls.Parameter> do objeto de um <xref:System.Web.UI.WebControls.ParameterCollection> coleção.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.ParameterCollection.Remove%2A> método e o <xref:System.Web.UI.WebControls.ParameterCollection.Item%2A> indexador para remover um <xref:System.Web.UI.WebControls.Parameter> do objeto de um <xref:System.Web.UI.WebControls.ParameterCollection> coleção. Neste exemplo, várias <xref:System.Web.UI.WebControls.QueryStringParameter> objetos são adicionados a uma <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> coleção, um <xref:System.Web.UI.WebControls.QueryStringParameter> objeto é removido da coleção e a ordem da coleção será impresso quando a página for carregada.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.QueryStringParameter_6#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.QueryStringParameter_6/CS/qsp6cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.QueryStringParameter_6#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.QueryStringParameter_6/VB/qsp6vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Parameter" />
        <altmember cref="M:System.Web.UI.WebControls.ParameterCollection.Add(System.Web.UI.WebControls.Parameter)" />
        <altmember cref="M:System.Web.UI.WebControls.ParameterCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int -&gt; unit" Usage="parameterCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">O índice do <see cref="T:System.Web.UI.WebControls.Parameter" /> a ser removido.</param>
        <summary>Remove o objeto <see cref="T:System.Web.UI.WebControls.Parameter" /> no índice especificado da coleção <see cref="T:System.Web.UI.WebControls.ParameterCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.ParameterCollection.RemoveAt%2A> método para remover o <xref:System.Web.UI.WebControls.Parameter> objeto no índice especificado da coleção.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.ParameterCollection.RemoveAt%2A> método para remover uma <xref:System.Web.UI.WebControls.Parameter> do objeto de um <xref:System.Web.UI.WebControls.ParameterCollection> coleção em um local específico. Neste exemplo, várias <xref:System.Web.UI.WebControls.QueryStringParameter> objetos são adicionados a uma <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> coleção, um <xref:System.Web.UI.WebControls.QueryStringParameter> objeto é removido da coleção e a ordem da coleção será impresso quando a página for carregada.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.QueryStringParameter_5#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.QueryStringParameter_5/CS/qsp5cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.QueryStringParameter_5#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.QueryStringParameter_5/VB/qsp5vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Parameter" />
        <altmember cref="M:System.Web.UI.WebControls.ParameterCollection.Add(System.Web.UI.WebControls.Parameter)" />
        <altmember cref="M:System.Web.UI.WebControls.ParameterCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SetDirtyObject">
      <MemberSignature Language="C#" Value="protected override void SetDirtyObject (object o);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetDirtyObject(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.SetDirtyObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetDirtyObject (o As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetDirtyObject(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.SetDirtyObject : obj -&gt; unit" Usage="parameterCollection.SetDirtyObject o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">O <see cref="T:System.Web.UI.WebControls.Parameter" /> a ser marcado como alterado desde o último carregamento ou salvamento do estado de exibição.</param>
        <summary>Marca o objeto <see cref="T:System.Web.UI.WebControls.Parameter" /> especificado como alterado desde o último carregamento ou salvamento do estado de exibição.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.ParameterCollection.SetDirtyObject%2A> método é uma função auxiliar que é usada para marcar um <xref:System.Web.UI.WebControls.Parameter> de objeto como tendo sido alterado desde o último carregamento ou salvamento do estado de exibição de.  
  
> [!NOTE]
>  Esse método é usado somente por desenvolvedores de controle.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateValues">
      <MemberSignature Language="C#" Value="public void UpdateValues (System.Web.HttpContext context, System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateValues(class System.Web.HttpContext context, class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.UpdateValues(System.Web.HttpContext,System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateValues(System::Web::HttpContext ^ context, System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="member this.UpdateValues : System.Web.HttpContext * System.Web.UI.Control -&gt; unit" Usage="parameterCollection.UpdateValues (context, control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="context">A <see cref="T:System.Web.HttpRequest" /> atual à qual o <see cref="T:System.Web.UI.WebControls.Parameter" /> se associa.</param>
        <param name="control">A instância de <see cref="T:System.Web.UI.Control" /> que é passada para cada método <see cref="M:System.Web.UI.WebControls.ControlParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" /> do parâmetro.</param>
        <summary>Itera nos objetos <see cref="T:System.Web.UI.WebControls.Parameter" /> contidos na coleção e chama o método <see langword="Evaluate" /> em cada um deles.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O `control` parâmetro é usado pelo <xref:System.Web.UI.WebControls.Parameter> objetos contidos na coleção para recuperar o <xref:System.Web.UI.Page> atuais e <xref:System.Web.HttpRequest> do objeto que o <xref:System.Web.UI.WebControls.Parameter> objeto está associado.  
  
 Se o valor atual para o <xref:System.Web.UI.WebControls.Parameter> objeto é diferente do valor armazenado em cache no estado de exibição, o <xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> método é chamado.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ParameterCollection.GetValues(System.Web.HttpContext,System.Web.UI.Control)" />
      </Docs>
    </Member>
  </Members>
</Type>