<Type Name="SqlDataSourceView" FullName="System.Web.UI.WebControls.SqlDataSourceView">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f9235718555bab37ca9803a4559c3c31e870117d" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36579552" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SqlDataSourceView : System.Web.UI.DataSourceView, System.Web.UI.IStateManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlDataSourceView extends System.Web.UI.DataSourceView implements class System.Web.UI.IStateManager" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.SqlDataSourceView" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlDataSourceView&#xA;Inherits DataSourceView&#xA;Implements IStateManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlDataSourceView : System::Web::UI::DataSourceView, System::Web::UI::IStateManager" />
  <TypeSignature Language="F#" Value="type SqlDataSourceView = class&#xA;    inherit DataSourceView&#xA;    interface IStateManager" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.DataSourceView</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IStateManager</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Supports the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control and provides an interface for data-bound controls to perform SQL data operations against relational databases.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.SqlDataSourceView> classe destina-se principalmente a ser usado por controles de associação de dados e não como um objeto programável no código da página.  
  
 Controles de fonte de dados do ASP.NET contêm uma ou mais listas de dados, representados por objetos de exibição de fonte de dados. O <xref:System.Web.UI.WebControls.SqlDataSourceView> classe estende a <xref:System.Web.UI.DataSourceView> da classe, que define os recursos do <xref:System.Web.UI.WebControls.SqlDataSource> controle com a qual ele está associado e implementa a funcionalidade básica de dados para o controle de fonte de dados. O <xref:System.Web.UI.WebControls.SqlDataSourceView> classe implementa a funcionalidade de dados para o <xref:System.Web.UI.WebControls.SqlDataSource> controlar, incluindo o <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>, <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A>, <xref:System.Web.UI.WebControls.SqlDataSourceView.Insert%2A>, e <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> operações de classificação, filtragem e gerenciamento de configurações que são mantidas no modo de exibição estado.  
  
 Embora o <xref:System.Web.UI.WebControls.SqlDataSourceView> objeto não é diretamente exposto aos desenvolvedores de página pelo <xref:System.Web.UI.WebControls.SqlDataSource> controlar muitas de suas propriedades são. A operação mais básica que executa uma exibição da fonte de dados é a recuperação de dados de banco de dados subjacente usando a <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> método, que recupera um <xref:System.Collections.IEnumerable> coleção de itens de dados. O <xref:System.Web.UI.WebControls.SqlDataSourceView> classe implementa a recuperação de dados de bancos de dados relacionais usando consultas SQL. As consultas SQL podem ser parametrizadas para obter maior flexibilidade e segurança. Os seguintes métodos de recuperação de dados, propriedades e eventos são implementados pelo <xref:System.Web.UI.WebControls.SqlDataSourceView> e expostos diretamente pelo seu <xref:System.Web.UI.WebControls.SqlDataSource> controle para desenvolvedores de página e outros chamadores:  
  
-   A propriedade <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>  
  
-   A propriedade <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>  
  
-   O <xref:System.Web.UI.WebControls.SqlDataSource.Selecting> evento  
  
-   O <xref:System.Web.UI.WebControls.SqlDataSource.Selected> evento  
  
 O <xref:System.Web.UI.WebControls.SqlDataSourceView> oferece suporte à atualização de dados em um banco de dados relacional usando comandos SQL do objeto. Os comandos SQL podem ser parametrizados para obter maior flexibilidade e segurança. Controles de associação de dados, como o <xref:System.Web.UI.WebControls.GridView> e <xref:System.Web.UI.WebControls.DetailsView>, pode ser configurado para executar atualizações automaticamente usando o <xref:System.Web.UI.WebControls.SqlDataSourceView>, enquanto outros controles não podem. Os seguintes métodos de atualização, propriedades e eventos são implementados pelo <xref:System.Web.UI.WebControls.SqlDataSourceView> e expostos diretamente pelo seu <xref:System.Web.UI.WebControls.SqlDataSource> controle para desenvolvedores de página e outros chamadores:  
  
-   A propriedade <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>  
  
-   A propriedade <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A>  
  
-   O <xref:System.Web.UI.WebControls.SqlDataSource.Updating> evento  
  
-   O <xref:System.Web.UI.WebControls.SqlDataSource.Updated> evento  
  
 O <xref:System.Web.UI.WebControls.SqlDataSourceView> dá suporte à inserção de novas linhas de dados em um banco de dados relacional. Os comandos SQL que são especificados no <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> propriedade pode ser parametrizada para obter maior flexibilidade e segurança. Controles de associação de dados, como o <xref:System.Web.UI.WebControls.GridView> e <xref:System.Web.UI.WebControls.DetailsView>, pode ser configurado para executar inserções automaticamente usando o <xref:System.Web.UI.WebControls.SqlDataSourceView>, enquanto outros controles não podem. A seguinte inserção métodos, propriedades e eventos são implementados pelo <xref:System.Web.UI.WebControls.SqlDataSourceView> e expostos diretamente pelo seu <xref:System.Web.UI.WebControls.SqlDataSource> controle para desenvolvedores de página e outros chamadores:  
  
-   A propriedade <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A>  
  
-   A propriedade <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A>  
  
-   O <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> evento  
  
-   O <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> evento  
  
 O <xref:System.Web.UI.WebControls.SqlDataSourceView> objeto também dá suporte à exclusão de dados de um banco de dados relacional. Assim como acontece com outros comandos, o comandos SQL que são especificados no <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> propriedade pode ser parametrizada para obter maior flexibilidade e segurança. Controles de associação de dados, como o <xref:System.Web.UI.WebControls.GridView> e <xref:System.Web.UI.WebControls.DetailsView>, pode ser configurado para executar exclusões automaticamente usando o <xref:System.Web.UI.WebControls.SqlDataSourceView>, enquanto outros controles não podem. O seguinte excluir métodos, propriedades e eventos são implementados pelo <xref:System.Web.UI.WebControls.SqlDataSourceView> e expostos diretamente pelo seu <xref:System.Web.UI.WebControls.SqlDataSource> controle para desenvolvedores de página e outros chamadores:  
  
-   A propriedade <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A>  
  
-   A propriedade <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A>  
  
-   O <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> evento  
  
-   O <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> evento  
  
 Recuperação de dados é mais eficiente quando a cláusula que é usada para filtrar os dados durante a recuperação de dados é dinâmica. Em outras palavras, uma consulta SQL com uma estática onde cláusula não é tão flexível e poderosa como uma consulta SQL em que os valores na cláusula WHERE são associados aos valores que podem ser alterados, como valores que são exibidos em controles em uma página de Web Forms. Em vez de reconstruir um SQL de consulta e definir o <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> propriedade em cada página carregada, você pode usar o <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> e <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> propriedades para aplicar a filtragem dinâmica para recuperação de dados. Essas propriedades são implementadas pelo <xref:System.Web.UI.WebControls.SqlDataSourceView> e expostos diretamente pelo seu <xref:System.Web.UI.WebControls.SqlDataSource> controle para controles associados a dados e outros chamadores.  
  
 Você pode classificar os dados recuperados com o <xref:System.Web.UI.WebControls.SqlDataSource> controle adicionando uma cláusula ORDER BY, que faz com que o banco de dados executar a ordenação para você quando você recuperar dados ou ordenando os dados na memória depois de recuperados. Você pode fornecer uma expressão de classificação para o <xref:System.Web.UI.WebControls.SqlDataSourceView> definindo o <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> propriedade do <xref:System.Web.UI.DataSourceSelectArguments> objeto que é passado para o <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> método. A sintaxe para a <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> propriedade é o mesmo que a sintaxe para uma <xref:System.Data.DataView.Sort%2A?displayProperty=nameWithType> propriedade. Se você usar um procedimento armazenado para recuperar dados, você também pode usar o <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> propriedade para especificar um parâmetro que é usado especificamente para classificar os resultados de uma chamada de procedimento armazenado.  
  
 Quando mais de um usuário pode alterar o banco de dados ao mesmo tempo, há o potencial para conflitos de simultaneidade. O <xref:System.Web.UI.WebControls.SqlDataSource> controle tem controles de simultaneidade por meio de <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection?displayProperty=nameWithType> propriedade. A funcionalidade é implementada no <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection?displayProperty=nameWithType> propriedade.  
  
 Como muitos outros controles de servidor Web, o <xref:System.Web.UI.WebControls.SqlDataSourceView> implementa o <xref:System.Web.UI.IStateManager> interface e usa estado de exibição para controlar o estado entre solicitações de página. Implementações do <xref:System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState%2A> e a propriedade e o <xref:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState%2A>, <xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A>, e <xref:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState%2A> métodos são fornecidos para habilitar o rastreamento de estado de exibição para o controle. Para obter mais informações, consulte [visão geral do gerenciamento de estado ASP.NET](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce).  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSource" />
    <altmember cref="T:System.Web.UI.DataSourceView" />
    <altmember cref="T:System.Web.UI.WebControls.AccessDataSourceView" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataSourceView (System.Web.UI.WebControls.SqlDataSource owner, string name, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.SqlDataSource owner, string name, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.#ctor(System.Web.UI.WebControls.SqlDataSource,System.String,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As SqlDataSource, name As String, context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataSourceView(System::Web::UI::WebControls::SqlDataSource ^ owner, System::String ^ name, System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.SqlDataSourceView : System.Web.UI.WebControls.SqlDataSource * string * System.Web.HttpContext -&gt; System.Web.UI.WebControls.SqlDataSourceView" Usage="new System.Web.UI.WebControls.SqlDataSourceView (owner, name, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.WebControls.SqlDataSource" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="owner">The data source control with which the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> is associated.</param>
        <param name="name">A unique name for the data source view, within the scope of the data source control that owns it.</param>
        <param name="context">The current <see cref="T:System.Web.HttpContext" />.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> class setting the specified <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control as the owner of the current view.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.SqlDataSourceView.%23ctor%2A> construtor é chamado pelo <xref:System.Web.UI.WebControls.SqlDataSource.GetView%2A> método para retornar uma nova instância de uma exibição da fonte de dados com especificado `name` parâmetro. O <xref:System.Web.UI.WebControls.SqlDataSource> controle está associado a apenas um <xref:System.Web.UI.WebControls.SqlDataSourceView> nomes de objeto a qualquer momento e sempre a exibição `Table`, embora essa restrição de nomenclatura é imposta pelo <xref:System.Web.UI.WebControls.SqlDataSource> controlar, não o <xref:System.Web.UI.WebControls.SqlDataSourceView>. Você pode substituir o <xref:System.Web.UI.WebControls.SqlDataSource.GetView%2A> método para oferecer suporte a exibições com uma convenção de nomenclatura diferente.  
  
 O <xref:System.Web.HttpContext> objeto que é passado pelo `context` parâmetro é usado pela exibição da fonte de dados para acessar objetos de parâmetro, como o <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> e <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A> propriedades.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.GetView(System.String)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.GetViewNames" />
      </Docs>
    </Member>
    <Member MemberName="CancelSelectOnNullParameter">
      <MemberSignature Language="C#" Value="public bool CancelSelectOnNullParameter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CancelSelectOnNullParameter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter" />
      <MemberSignature Language="VB.NET" Value="Public Property CancelSelectOnNullParameter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CancelSelectOnNullParameter { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CancelSelectOnNullParameter : bool with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether a data retrieval operation is canceled when any parameter that is contained in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" /> collection evaluates to <see langword="null" />.</summary>
        <value>
          <see langword="true" />, se uma operação de recuperação de dados é cancelada quando dentro de um parâmetro de <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" /> coleção é avaliada como <see langword="null" />; caso contrário, <see langword="false" />. O padrão é <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O valor de <xref:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter%2A> propriedade é armazenada em um estado de exibição.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter" />
      </Docs>
    </Member>
    <Member MemberName="CanDelete">
      <MemberSignature Language="C#" Value="public override bool CanDelete { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanDelete" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.CanDelete" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanDelete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanDelete { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanDelete : bool" Usage="System.Web.UI.WebControls.SqlDataSourceView.CanDelete" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control supports the delete operation.</summary>
        <value>
          <see langword="true" />, se houver suporte para a operação; Caso contrário, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.SqlDataSourceView.CanDelete%2A> propriedade retorna `true` se o <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> está definida. Uma operação de exclusão ainda poderá falhar se todas as propriedades de dados não estão definidas ou não estão definidas corretamente.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="CanInsert">
      <MemberSignature Language="C#" Value="public override bool CanInsert { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanInsert" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.CanInsert" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanInsert As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanInsert { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanInsert : bool" Usage="System.Web.UI.WebControls.SqlDataSourceView.CanInsert" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control supports the insert operation.</summary>
        <value>
          <see langword="true" />, se houver suporte para a operação; Caso contrário, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.SqlDataSourceView.CanInsert%2A> propriedade retorna `true` se o <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> está definida. Uma operação de inserção ainda poderá falhar se todas as propriedades de dados não estão definidas ou não estão definidas corretamente.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="CanPage">
      <MemberSignature Language="C#" Value="public override bool CanPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanPage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.CanPage" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanPage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanPage { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanPage : bool" Usage="System.Web.UI.WebControls.SqlDataSourceView.CanPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control supports the paging of retrieved data.</summary>
        <value>
          <see langword="false" /> em todos os casos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.SqlDataSourceView> objeto não oferece suporte para paginação.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.StartRowIndex" />
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.MaximumRows" />
      </Docs>
    </Member>
    <Member MemberName="CanRetrieveTotalRowCount">
      <MemberSignature Language="C#" Value="public override bool CanRetrieveTotalRowCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRetrieveTotalRowCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRetrieveTotalRowCount As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRetrieveTotalRowCount { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRetrieveTotalRowCount : bool" Usage="System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control supports retrieving the total number of data rows, in addition to the set of data.</summary>
        <value>
          <see langword="false" /> em todos os casos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.SqlDataSourceView> objeto não oferece suporte a recuperar contagens de linhas.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.RetrieveTotalRowCount" />
      </Docs>
    </Member>
    <Member MemberName="CanSort">
      <MemberSignature Language="C#" Value="public override bool CanSort { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSort" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.CanSort" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSort As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSort { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSort : bool" Usage="System.Web.UI.WebControls.SqlDataSourceView.CanSort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control supports a sorted view on the retrieved data.</summary>
        <value>
          <see langword="true" />, se há suporte para classificação; Caso contrário, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.SqlDataSourceView.CanSort%2A> propriedade retorna `true`, se atual <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> está definida como o <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> valor e o <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> está definida.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.SortExpression" />
      </Docs>
    </Member>
    <Member MemberName="CanUpdate">
      <MemberSignature Language="C#" Value="public override bool CanUpdate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanUpdate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanUpdate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanUpdate { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanUpdate : bool" Usage="System.Web.UI.WebControls.SqlDataSourceView.CanUpdate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control supports the update operation.</summary>
        <value>
          <see langword="true" />, se houver suporte para a operação; Caso contrário, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate%2A> propriedade retorna `true` se o <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> está definida. Uma operação de exclusão ainda poderá falhar se todas as propriedades de dados não estão definidas ou não estão definidas corretamente.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="ConflictDetection">
      <MemberSignature Language="C#" Value="public System.Web.UI.ConflictOptions ConflictDetection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ConflictOptions ConflictDetection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" />
      <MemberSignature Language="VB.NET" Value="Public Property ConflictDetection As ConflictOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ConflictOptions ConflictDetection { System::Web::UI::ConflictOptions get(); void set(System::Web::UI::ConflictOptions value); };" />
      <MemberSignature Language="F#" Value="member this.ConflictDetection : System.Web.UI.ConflictOptions with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ConflictOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the value indicating how the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control performs updates and deletes when data in a row in the underlying database changes during the time of the operation.</summary>
        <value>Um dos valores de <see cref="T:System.Web.UI.ConflictOptions" />. O padrão é o valor <see cref="F:System.Web.UI.ConflictOptions.OverwriteChanges" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> propriedade determina se os parâmetros para os valores novos e antigos são aplicados para o `Update` método. Por exemplo, se o comando que é especificado pelo <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> propriedade retorna um <xref:System.Data.DataSet> objeto com as colunas `Name` e `Number`e o <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> está definida como o <xref:System.Web.UI.ConflictOptions.OverwriteChanges> valor, os parâmetros são criados para `Name` e `Number` para a operação de atualização. Se o <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> está definida como o <xref:System.Web.UI.ConflictOptions.CompareAllValues> valor, os parâmetros são criados para `Name`, `Number`, `original_Name`, e `original_Number`. (O nome exato dos parâmetros para os valores originais depende do <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A>.) Em seguida, o <xref:System.Web.UI.WebControls.SqlDataSourceView> objeto determina se o método é especificado no <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> propriedade tem parâmetros que correspondam.  
  
 Controle de simultaneidade é uma técnica de repositórios de dados usam para controlar como os dados é lida e alterados no repositório quando vários clientes estão acessando e manipulando os mesmos dados. Por exemplo, um cliente lê os dados e apresenta-as para um usuário, enquanto outro cliente lê os mesmos dados e apresenta-as para um usuário diferente. Se ambos os usuários atualizam os dados e enviá-lo para o armazenamento de dados, alguns resultados inesperados poderão ocorrer, pois ambos os clientes podem atualizar valores diferentes para os mesmos dados. Isso é considerado um conflito. Definindo o <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> propriedade para o <xref:System.Web.UI.ConflictOptions.CompareAllValues> valor, a operação de atualização pode comparar os valores antigos e novos para a fonte de dados original para detectar conflitos e tratá-los conforme necessário.  
  
 O valor de <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> propriedade é armazenada em um estado de exibição.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The selected value is not one of the <see cref="T:System.Web.UI.ConflictOptions" /> values.</exception>
        <altmember cref="T:System.Web.UI.ConflictOptions" />
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public int Delete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Delete(class System.Collections.IDictionary keys, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete (keys As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Delete(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="override this.Delete : System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="sqlDataSourceView.Delete (keys, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">An <see cref="T:System.Collections.IDictionary" /> of object or row key values for the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" /> operation to delete.</param>
        <param name="oldValues">An <see cref="T:System.Collections.IDictionary" /> that contains row values that are evaluated only if the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" /> property is set to the <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /> value.</param>
        <summary>Performs a delete operation using the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" /> SQL string, any parameters that are specified in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" /> collection, and the values that are in the specified <paramref name="keys" /> and <paramref name="oldValues" /> collections.</summary>
        <returns>A value that represents the number of rows deleted from the underlying database.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> chamadas de método de <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete%2A> método, passando o `keys` e `oldValues` parâmetros.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> cannot establish a connection with the underlying data source.  \- or -  The <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" /> property is set to the <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /> value and no <paramref name="oldValues" /> parameters are passed.</exception>
        <exception cref="T:System.NotSupportedException">The <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanDelete" /> property is <see langword="false" />.</exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public string DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DeleteCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteCommand : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the SQL string that the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> uses to delete data from the underlying database.</summary>
        <value>Uma cadeia de caracteres SQL usada pelo <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> para excluir dados.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Porque os produtos diferentes de base de dados usam diferentes variedades SQL, a sintaxe da cadeia de caracteres SQL depende do provedor atual do ADO.NET que está sendo usado, que é identificado pela propriedade de <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> .  
  
 Se a cadeia de caracteres SQL é uma consulta ou comando parametrizado, o espaço reservado de parâmetro também depende do provedor ADO.NET sendo usado. Por exemplo, se o provedor é o <xref:System.Data.SqlClient?displayProperty=nameWithType>, que é o provedor padrão para o <xref:System.Web.UI.WebControls.SqlDataSource> classe, o espaço reservado do parâmetro é `'@parameterName'`. No entanto, se o provedor está definido como o <xref:System.Data.Odbc?displayProperty=nameWithType> ou <xref:System.Data.OleDb?displayProperty=nameWithType>, o espaço reservado do parâmetro é `'?'`. Para obter mais informações sobre comandos e consultas SQL parametrizadas, consulte [usando parâmetros com o controle SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
 O <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> pode ser uma cadeia de caracteres SQL ou o nome de um procedimento armazenado, se o banco de dados subjacente oferece suporte a procedimentos armazenados.  
  
 O valor de <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> propriedade é armazenada em um estado de exibição.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como definir a <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> texto para excluir uma ordem da tabela de pedidos de banco de dados Northwind. Dados são recuperados da tabela de pedidos e exibidos em um <xref:System.Web.UI.WebControls.GridView> controle. O <xref:System.Web.UI.WebControls.GridView> renderiza um **excluir** botão automaticamente quando o <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> está definida como `true` e preenche automaticamente o <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> coleta e chamadas a <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> método quando o **Excluir** botão é clicado. Por fim, porque esse exemplo exclui dados, um manipulador de eventos é adicionado fazer backup do banco de dados em disco antes da operação de exclusão é executada.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/CS/sql10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/VB/sql10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="DeleteCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType DeleteCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType DeleteCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType DeleteCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteCommandType : System.Web.UI.WebControls.SqlDataSourceCommandType with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether the text in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" /> property is a SQL statement or the name of a stored procedure.</summary>
        <value>Um dos valores de <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />. O padrão é o valor <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O valor de <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType%2A> propriedade é armazenada em um estado de exibição.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The selected value is not one of the <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> values.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommandType" />
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />
      </Docs>
    </Member>
    <Member MemberName="Deleted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Deleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Deleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Deleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleted As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Deleted;" />
      <MemberSignature Language="F#" Value="member this.Deleted : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " Usage="member this.Deleted : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when a delete operation has completed.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Manipular o <xref:System.Web.UI.WebControls.SqlDataSourceView.Deleted> evento para examinar os valores de parâmetros de saída após uma operação de exclusão. Os parâmetros de saída estão disponíveis no <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> objeto que está associado com o evento.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Deleting" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="DeleteParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection DeleteParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeleteParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ DeleteParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeleteParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the parameters collection containing the parameters that are used by the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" /> property.</summary>
        <value>Um <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> que contém os parâmetros usados pela propriedade <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> propriedade contém uma consulta SQL parametrizada, o <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> coleção contém qualquer <xref:System.Web.UI.WebControls.Parameter> objetos que correspondem aos espaços reservados de parâmetro na cadeia de caracteres SQL.  
  
 Nomes de parâmetro podem ser afetados pelo <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> propriedade; especificamente, se o nome identifica uma chave primária, como uma chave que é especificado usando o `DataKeyNames` propriedade de um controle associado a dados, ou em Excluir e atualizar os cenários nos quais o <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>está definida como o <xref:System.Web.UI.ConflictOptions.CompareAllValues> valor e um conjunto de `oldValues` é passado para o método de dados correspondente. Nesse caso, a cadeia de caracteres de formato é aplicada a cada nome de parâmetro no `oldValues` coleção.  
  
 Dependendo do provedor ADO.NET, a ordem dos parâmetros de <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> coleção pode ser importante. O <xref:System.Data.OleDb?displayProperty=nameWithType> e <xref:System.Data.Odbc?displayProperty=nameWithType> provedores associar os parâmetros na coleção de acordo com a ordem em que os parâmetros aparecem na consulta SQL com parâmetros. O <xref:System.Data.SqlClient?displayProperty=nameWithType> provedor, que é o provedor ADO.NET padrão para o <xref:System.Web.UI.WebControls.SqlDataSource> controlar, associa parâmetros na coleção por correspondente ao nome do parâmetro com o espaço reservado na consulta SQL. Para obter mais informações sobre comandos e consultas SQL parametrizadas, consulte [usando parâmetros com o controle SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como definir a <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> texto para excluir uma ordem de banco de dados Northwind. Inicialmente, os dados são recuperados da tabela de pedidos e exibidos em um <xref:System.Web.UI.WebControls.DropDownList> controle. Você deve declarar explicitamente o <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> propriedade e chame o <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> método ao usar controles de associação de dados, como o <xref:System.Web.UI.WebControls.DropDownList> (ao contrário de controles, como o <xref:System.Web.UI.WebControls.GridView> e <xref:System.Web.UI.WebControls.DetailsView>, que preencher automaticamente o parâmetros e chamar o <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> método em um controle de fonte de dados). Neste exemplo, o <xref:System.Web.UI.WebControls.Button.OnClick%2A> evento é delegado ao particular <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A> manipulador de eventos, chame explicitamente o <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> método o <xref:System.Web.UI.WebControls.SqlDataSource> controle.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_11sql/CS/sql11cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_11sql/VB/sql11vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />
      </Docs>
    </Member>
    <Member MemberName="Deleting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Deleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Deleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Deleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleting As SqlDataSourceCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceCommandEventHandler ^ Deleting;" />
      <MemberSignature Language="F#" Value="member this.Deleting : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " Usage="member this.Deleting : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs before a delete operation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Manipular o <xref:System.Web.UI.WebControls.SqlDataSourceView.Deleting> evento para executar operações de inicialização adicionais que são específicas para seu aplicativo, para validar os valores de parâmetros, ou para alterar os valores de parâmetro antes do <xref:System.Web.UI.WebControls.SqlDataSource> controle executa a operação de exclusão.  
  
 A conexão à fonte de dados subjacente não ainda estiver aberto quando o delegado de manipulador de eventos é chamado. Portanto, você não pode cancelar o <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> operação diretamente, chamando o <xref:System.Data.Common.DbCommand.Cancel%2A> método no <xref:System.Data.Common.DbCommand> objeto que é exposto pelo <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> objeto. No entanto, você pode cancelar a operação, definindo a <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propriedade o <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> para `true`.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como tratar o <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> evento é gerado antes de uma operação de exclusão. Como este exemplo exclui os dados do banco de dados Northwind, um <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> manipulador é adicionado ao tentar fazer backup do banco de dados no disco antes da operação de exclusão é executada.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/CS/sql10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/VB/sql10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Deleted" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteDelete">
      <MemberSignature Language="C#" Value="protected override int ExecuteDelete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 ExecuteDelete(class System.Collections.IDictionary keys, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteDelete (keys As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int ExecuteDelete(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="override this.ExecuteDelete : System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="sqlDataSourceView.ExecuteDelete (keys, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">An <see cref="T:System.Collections.IDictionary" /> of object or row key values for the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" /> operation to delete.</param>
        <param name="oldValues">An <see cref="T:System.Collections.IDictionary" /> that contains row values that are evaluated only if the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" /> property is set to the <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /> value.</param>
        <summary>Performs a delete operation using the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" /> SQL string, any parameters that are specified in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" /> collection, and the values that are in the specified <paramref name="keys" /> and <paramref name="oldValues" /> collections.</summary>
        <returns>A value that represents the number of rows deleted from the underlying database.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.SqlDataSourceView> classe implementa o herdadas <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> método para excluir dados de um banco de dados. Os desenvolvedores de páginas e autores de controle associado a dados não chamar o <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete%2A> método diretamente; em vez disso, use o exposto publicamente <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> método.  
  
 Os valores que estão contidos no `keys` coleção são avaliadas e mesclado com quaisquer valores contidos o <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> coleção. Se o <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> está definida como o <xref:System.Web.UI.ConflictOptions.CompareAllValues> valor, os valores que estão contidos no `oldValues` coleção são formatados com o <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> propriedade e são também mesclagem.  
  
 Antes da operação de exclusão é executada, o <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> método é chamado para gerar o <xref:System.Web.UI.WebControls.SqlDataSourceView.Deleting> evento. Você pode manipular esse evento para examinar os valores dos parâmetros e executar qualquer pré-processamento antes de uma exclusão.  
  
 Para executar uma operação de exclusão, o <xref:System.Web.UI.WebControls.SqlDataSourceView> objeto compilações um <xref:System.Data.Common.DbCommand> objeto usando o <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> texto e associados <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> propriedades e, em seguida, executa o <xref:System.Data.Common.DbCommand> objeto no banco de dados subjacente. Após a operação de exclusão, o <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A> método é chamado para gerar o <xref:System.Web.UI.WebControls.SqlDataSourceView.Deleted> evento. Você pode manipular esse evento para examinar quaisquer valores de retorno e os códigos de erro e executar qualquer pós-processamento.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> cannot establish a connection with the underlying data source.  \- or -  The <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" /> property is set to the <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /> value and no <paramref name="oldValues" /> parameters are passed.</exception>
        <exception cref="T:System.Web.HttpException">The current user does not have the correct permissions to access to the database.  \- or -  The instance of the control is an <see cref="T:System.Web.UI.WebControls.AccessDataSource" /> control and access is denied to the path specified for the <see cref="P:System.Web.UI.WebControls.AccessDataSource.DataFile" /> property.</exception>
        <exception cref="T:System.NotSupportedException">The <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanDelete" /> property is <see langword="false" />.  \- or -  A design-time relative path was not mapped correctly by the designer before using an instance of the <see cref="T:System.Web.UI.WebControls.AccessDataSource" /> control.</exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteInsert">
      <MemberSignature Language="C#" Value="protected override int ExecuteInsert (System.Collections.IDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 ExecuteInsert(class System.Collections.IDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteInsert (values As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int ExecuteInsert(System::Collections::IDictionary ^ values);" />
      <MemberSignature Language="F#" Value="override this.ExecuteInsert : System.Collections.IDictionary -&gt; int" Usage="sqlDataSourceView.ExecuteInsert values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="values">An <see cref="T:System.Collections.IDictionary" /> of values used with the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> property to perform the insert database operation. If there are no parameters associated with the query or if the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> property is not a parameterized SQL query, pass <see langword="null" />.</param>
        <summary>Performs an insert operation using the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> SQL string, any parameters that are specified in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" /> collection, and the values that are in the specified <paramref name="values" /> collection.</summary>
        <returns>A value that represents the number of rows inserted into the underlying database.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.SqlDataSourceView> classe implementa o herdadas <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> método para inserir dados em um banco de dados. Os desenvolvedores de páginas e autores de controle associado a dados não chamar o <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert%2A> método diretamente; em vez disso, use o exposto publicamente <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> método.  
  
 Antes da operação de inserção é executada, o <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> método é chamado para gerar o <xref:System.Web.UI.WebControls.SqlDataSourceView.Inserting> evento. Você pode manipular esse evento para examinar os valores dos parâmetros e executar qualquer pré-processamento antes de uma instrução insert.  
  
 Para executar uma operação de inserção, o <xref:System.Web.UI.WebControls.SqlDataSourceView> objeto compilações um <xref:System.Data.Common.DbCommand> objeto usando o <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> texto e associados <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A> propriedades e, em seguida, executa o <xref:System.Data.Common.DbCommand> objeto no banco de dados subjacente. Após a inserção, o <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> método é chamado para gerar o <xref:System.Web.UI.WebControls.SqlDataSourceView.Inserted> evento. Você pode manipular esse evento para examinar quaisquer valores de retorno e os códigos de erro e executar qualquer pós-processamento.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> cannot establish a connection with the underlying data source.</exception>
        <exception cref="T:System.Web.HttpException">The current user does not have the correct permissions to gain access to the database.</exception>
        <exception cref="T:System.NotSupportedException">The <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanInsert" /> property is <see langword="false" />.</exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteSelect">
      <MemberSignature Language="C#" Value="protected internal override System.Collections.IEnumerable ExecuteSelect (System.Web.UI.DataSourceSelectArguments arguments);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Collections.IEnumerable ExecuteSelect(class System.Web.UI.DataSourceSelectArguments arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function ExecuteSelect (arguments As DataSourceSelectArguments) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Collections::IEnumerable ^ ExecuteSelect(System::Web::UI::DataSourceSelectArguments ^ arguments);" />
      <MemberSignature Language="F#" Value="override this.ExecuteSelect : System.Web.UI.DataSourceSelectArguments -&gt; System.Collections.IEnumerable" Usage="sqlDataSourceView.ExecuteSelect arguments" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Web.UI.DataSourceSelectArguments" />
      </Parameters>
      <Docs>
        <param name="arguments">A <see cref="T:System.Web.UI.DataSourceSelectArguments" /> object used to request operations on the data beyond basic data retrieval.</param>
        <summary>Retrieves data from the underlying database using the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" /> SQL string and any parameters that are in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" /> collection.</summary>
        <returns>An <see cref="T:System.Collections.IEnumerable" /> list of data rows.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.SqlDataSourceView> classe implementa o herdadas <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A> método para recuperar dados de um banco de dados. Os desenvolvedores de páginas e autores de controle associado a dados não chamar o <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A> método diretamente; em vez disso, use o exposto publicamente <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> método.  
  
 Antes da recuperação de dados é executada, o <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting%2A> método é chamado para gerar o <xref:System.Web.UI.WebControls.SqlDataSourceView.Selecting> evento. Você pode manipular esse evento para examinar os valores dos parâmetros e executar qualquer pré-processamento antes que os dados são recuperados.  
  
 Para executar a operação, o <xref:System.Web.UI.WebControls.SqlDataSourceView> objeto compilações um <xref:System.Data.Common.DbCommand> objeto usando o <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> texto e associados <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>e o executa no banco de dados subjacente. Após a conclusão da operação, o <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelected%2A> método é chamado para gerar o <xref:System.Web.UI.WebControls.SqlDataSource.Selected> evento. Você pode manipular esse evento para examinar os valores de retorno, códigos de erro e executar qualquer pós-processamento.  
  
 O <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A> método retorna um <xref:System.Data.DataView> objeto se a <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> é definido como <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet>, ou um <xref:System.Data.IDataReader> objeto se a <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> é definido como <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader>. Fechar o <xref:System.Data.IDataReader> quando você terminar de ler os dados do objeto.  
  
 Se o <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> é definido como <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> e o cache está habilitado, o <xref:System.Web.UI.WebControls.SqlDataSourceView> recupera e salva os dados em cache durante a operação de dados. O cache é criado, descartado ou atualizada com base no comportamento de cache especificado pela combinação da <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> e <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> propriedades.  
  
> [!IMPORTANT]
>  Quando você estiver usando representação do cliente com a autenticação do Windows, os dados são armazenadas em cache quando o primeiro usuário que acessa os dados. Se outro usuário solicita os mesmos dados, os dados são recuperados do cache. Os dados não serão recuperados fazendo outra chamada para o banco de dados para verificar o acesso do usuário aos dados. Se você espera que vários usuários acessem os dados e você deseja que cada recuperação para os dados a ser verificada por configurações de segurança do banco de dados, não use o cache.  
  
 Se o <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> é definido como <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> e um <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> foi especificado, ele será avaliado junto com qualquer fornecido <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> e o filtro resultante é aplicado à lista de dados durante a operação de recuperação de dados.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">The <paramref name="arguments" /> passed to the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> method specify that the data source should perform some additional work while retrieving data to enable paging or sorting through the retrieved data, but the data source control does not support the requested capability.  \- or -  Caching is enabled but the <see cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" /> property of the data source is not set to <see cref="F:System.Web.UI.WebControls.SqlDataSourceMode.DataSet" />.  \- or -  The <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName" /> property is set but <see cref="P:System.Data.SqlClient.SqlCommand.CommandType" /> is not set to <see cref="F:System.Data.CommandType.StoredProcedure" />.</exception>
        <exception cref="T:System.InvalidOperationException">The data source cannot create a database connection.  \- or -  Caching is enabled but the internal cache and command types do not match.</exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteUpdate">
      <MemberSignature Language="C#" Value="protected override int ExecuteUpdate (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 ExecuteUpdate(class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteUpdate (keys As IDictionary, values As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int ExecuteUpdate(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="override this.ExecuteUpdate : System.Collections.IDictionary * System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="sqlDataSourceView.ExecuteUpdate (keys, values, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">An <see cref="T:System.Collections.IDictionary" /> of primary keys to use with the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> property to perform the update database operation. If there are no keys associated with the query or if the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> property is not a parameterized SQL query, pass <see langword="null" />.</param>
        <param name="values">An <see cref="T:System.Collections.IDictionary" /> of values to use with the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> property to perform the update database operation. If there are no parameters associated with the query or if the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> is not a parameterized SQL query, pass <see langword="null" />.</param>
        <param name="oldValues">An <see cref="T:System.Collections.IDictionary" /> that represents the original values in the database. If there are no parameters associated with the query or if the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> property is not a parameterized SQL query, pass <see langword="null" />.</param>
        <summary>Performs an update operation using the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> SQL string, any parameters that are in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" /> collection, and the values that are in the specified <paramref name="keys" />, <paramref name="values" />, and <paramref name="oldValues" /> collections.</summary>
        <returns>A value that represents the number of rows updated in the underlying database.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.SqlDataSourceView> classe implementa o herdadas <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate%2A> método para atualizar dados em um banco de dados. Os desenvolvedores de páginas e autores de controle associado a dados não chamar o <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate%2A> método diretamente; em vez disso, use o exposto publicamente <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> método.  
  
 Os valores contidos no `keys` e `values` coleções são avaliadas e mescladas com os valores contidos o <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A> coleção. Se o <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> está definida como <xref:System.Web.UI.ConflictOptions.CompareAllValues>, os valores contidos no `oldValues` coleção são formatados com o <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> e também mesclados.  
  
 Antes da operação de atualização é executada, o <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A> método é chamado para gerar o <xref:System.Web.UI.WebControls.SqlDataSourceView.Updating> evento. Você pode manipular esse evento para examinar os valores dos parâmetros e executar qualquer pré-processamento antes de uma atualização.  
  
 Para executar a operação, o <xref:System.Web.UI.WebControls.SqlDataSourceView> cria um <xref:System.Data.Common.DbCommand> objeto usando o <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> texto e associados <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A> propriedades e, em seguida, executa o <xref:System.Data.Common.DbCommand> objeto no banco de dados subjacente. Após a conclusão da operação, o <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated%2A> método é chamado para gerar o <xref:System.Web.UI.WebControls.SqlDataSourceView.Updated> evento. Você pode manipular esse evento para examinar quaisquer valores de retorno e os códigos de erro e executar qualquer pós-processamento.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> cannot establish a connection with the underlying data source.  \- or -  The <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" /> property is set to the <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /> value and no <paramref name="oldValues" /> parameters are passed.</exception>
        <exception cref="T:System.Web.HttpException">The current user does not have the correct permissions to gain access to the database.</exception>
        <exception cref="T:System.NotSupportedException">The <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate" /> property is <see langword="false" />.</exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="FilterExpression">
      <MemberSignature Language="C#" Value="public string FilterExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilterExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilterExpression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FilterExpression : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a filtering expression that is applied when the <see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Select" /> method is called.</summary>
        <value>Uma cadeia de caracteres que representa uma expressão de filtragem aplicada quando os dados são recuperados usando o método <see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A sintaxe usada para o <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> propriedade é uma sintaxe de cadeia de caracteres – estilo de formato. Você pode incluir parâmetros de <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> propriedade. Se o tipo do parâmetro de cadeia de caracteres ou caractere, coloque o parâmetro entre aspas simples. Aspas não são necessárias, se o parâmetro é um tipo numérico.  
  
 O <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> coleção contém os parâmetros que são avaliados para os espaços reservados que se encontram no <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> propriedade.  
  
 O <xref:System.Web.UI.WebControls.SqlDataSource> controle oferece suporte à filtragem de dados somente quando estiver na `DataSet` modo.  
  
 O valor de <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> propriedade é armazenada em um estado de exibição.  
  
> [!IMPORTANT]
>  Você deve validar qualquer valor de parâmetro de filtro que você recebe do cliente. O tempo de execução simplesmente substitui o valor do parâmetro na expressão de filtro e aplica-se para o <xref:System.Data.DataView> objeto que é retornado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método. Se você estiver usando o <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> a propriedade como uma medida de segurança para limitar o número de itens que são retornados, você deve validar os valores de parâmetro antes da filtragem ocorre.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como recuperar dados do banco de dados Northwind e filtrá-los usando o <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> e <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> propriedades. O <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> propriedade o <xref:System.Web.UI.WebControls.SqlDataSource> controle é aplicado a qualquer momento o <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> o método é executado para recuperar dados. Neste exemplo, o <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> propriedade contém um espaço reservado para um parâmetro de filtro, que está contido no <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> coleção. Neste exemplo, o parâmetro de filtro é um <xref:System.Web.UI.WebControls.ControlParameter> objeto que está associado ao <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> propriedade o <xref:System.Web.UI.WebControls.DropDownList> controle. Porque o <xref:System.Web.UI.WebControls.DropDownList> controle tem seu <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A> propriedade definida como `true`, qualquer alteração no <xref:System.Web.UI.WebControls.DropDownList> seleção faz com que a página para enviar para o servidor e o <xref:System.Web.UI.WebControls.GridView> controle associar novamente para o controle de fonte de dados com o novo filtro.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/CS/sql17cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/VB/sql17vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">The <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" /> property was set when the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> is in the <see cref="F:System.Web.UI.WebControls.SqlDataSourceMode.DataReader" /> mode.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" />
      </Docs>
    </Member>
    <Member MemberName="Filtering">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler Filtering;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler Filtering" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Filtering" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Filtering As SqlDataSourceFilteringEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceFilteringEventHandler ^ Filtering;" />
      <MemberSignature Language="F#" Value="member this.Filtering : System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler " Usage="member this.Filtering : System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs before a filter operation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Manipular o <xref:System.Web.UI.WebControls.SqlDataSourceView.Filtering> evento para executar operações de validação em valores de parâmetro de filtro antes do <xref:System.Web.UI.WebControls.SqlDataSourceView> object realiza uma operação de filtro. Você pode cancelar o <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> método definindo o <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propriedade o <xref:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs> do objeto para `true`. O evento é gerado apenas se o <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> está definida.  
  
> [!IMPORTANT]
>  Você deve validar qualquer valor de parâmetro de filtro que você recebe do cliente. O tempo de execução simplesmente substitui o valor do parâmetro na expressão de filtro e aplica-se para o <xref:System.Data.DataView> objeto que é retornado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método. Se você estiver usando o <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> a propriedade como uma medida de segurança para limitar o número de itens que são retornados, você deve validar os valores de parâmetro antes da filtragem ocorre.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Filtering" />
      </Docs>
    </Member>
    <Member MemberName="FilterParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection FilterParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection FilterParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilterParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ FilterParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FilterParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.SqlDataSourceView.FilterParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a collection of parameters that are associated with any parameter placeholders in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" /> string.</summary>
        <value>Um <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> que contém um conjunto de parâmetros associados a quaisquer espaços reservados para parâmetro encontrados na propriedade <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Os parâmetros a <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> coleção estão associados com os parâmetros que são especificados no <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> propriedade. Os espaços reservados de parâmetro que são especificados no <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> são avaliadas pela ordem e correspondeu aos objetos de parâmetro no <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> coleção quando o <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> método é chamado.  
  
> [!IMPORTANT]
>  Você deve validar qualquer valor de parâmetro de filtro que você recebe do cliente. O tempo de execução simplesmente substitui o valor do parâmetro na expressão de filtro e aplica-se para o <xref:System.Data.DataView> objeto que é retornado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método. Se você estiver usando o <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> a propriedade como uma medida de segurança para limitar o número de itens que são retornados, você deve validar os valores de parâmetro antes da filtragem ocorre.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como recuperar dados do banco de dados Northwind e filtrá-los usando o <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> e <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> propriedades. O <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> propriedade o <xref:System.Web.UI.WebControls.SqlDataSource> controle é aplicado a qualquer momento o <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> o método é executado para recuperar dados. Neste exemplo, o <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> propriedade contém um espaço reservado para um parâmetro de filtro, que está contido no <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> coleção. Além disso, o parâmetro de filtro é um <xref:System.Web.UI.WebControls.ControlParameter> objeto que está associado ao <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> propriedade o <xref:System.Web.UI.WebControls.DropDownList> controle. Porque o <xref:System.Web.UI.WebControls.DropDownList> controle tem seu <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A> propriedade definida como `true`, qualquer alteração no <xref:System.Web.UI.WebControls.DropDownList> seleção faz com que a página postar informações de volta para o servidor e o <xref:System.Web.UI.WebControls.GridView> controle associar novamente para o controle de fonte de dados com o novo filtro.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/CS/sql17cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/VB/sql17vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public int Insert (System.Collections.IDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Insert(class System.Collections.IDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (values As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Insert(System::Collections::IDictionary ^ values);" />
      <MemberSignature Language="F#" Value="override this.Insert : System.Collections.IDictionary -&gt; int" Usage="sqlDataSourceView.Insert values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="values">An <see cref="T:System.Collections.IDictionary" /> of parameters for the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> property to use to perform the insert database operation. If there are no parameters associated with the query or if the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> is not a parameterized SQL query, pass <see langword="null" />.</param>
        <summary>Performs an insert operation using the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> SQL string, any parameters that are specified in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" /> collection, and the values that are in the specified <paramref name="values" /> collection.</summary>
        <returns>A value that represents the number of rows inserted into the underlying database.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.SqlDataSourceView.Insert%2A> chamadas de método de <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert%2A> método, passando o `values` parâmetro.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> cannot establish a connection with the underlying data source.</exception>
        <exception cref="T:System.NotSupportedException">The <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanInsert" /> property is <see langword="false" />.</exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public string InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InsertCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertCommand : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the SQL string that the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> object uses to insert data into the underlying database.</summary>
        <value>Uma cadeia de caracteres SQL usada pelo <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> para inserir dados.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Porque os produtos diferentes de base de dados usam diferentes variedades SQL, a sintaxe da cadeia de caracteres SQL depende do provedor atual do ADO.NET que está sendo usado, que é identificado pela propriedade de <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> . Se a cadeia de caracteres SQL é uma consulta ou comando parametrizado, o espaço reservado de parâmetro também depende do provedor ADO.NET sendo usado. Por exemplo, se o provedor é o <xref:System.Data.SqlClient?displayProperty=nameWithType>, que é o provedor padrão para o <xref:System.Web.UI.WebControls.SqlDataSource> classe, o espaço reservado do parâmetro é `'@parameterName'`. No entanto, se o provedor está definido como o <xref:System.Data.Odbc?displayProperty=nameWithType> ou <xref:System.Data.OleDb?displayProperty=nameWithType>, o espaço reservado do parâmetro é `'?'`. Para obter mais informações sobre comandos e consultas SQL parametrizadas, consulte [usando parâmetros com o controle SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
 O <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> propriedade pode ser uma cadeia de caracteres SQL ou o nome de um procedimento armazenado, se a fonte de dados oferece suporte a procedimentos armazenados.  
  
 O valor de <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> propriedade é armazenada em um estado de exibição.  
  
   
  
## Examples  
 Esta seção contém dois exemplos de código. O primeiro exemplo de código demonstra como inserir dados em um banco de dados usando o <xref:System.Web.UI.WebControls.SqlDataSource> controle. O segundo exemplo de código demonstra como recuperar dados do Microsoft SQL Server, exibi-lo em uma <xref:System.Web.UI.WebControls.GridView> controlar e usar um <xref:System.Web.UI.WebControls.DetailsView> controle para ver os detalhes de uma linha selecionada no <xref:System.Web.UI.WebControls.GridView> e como um formulário para inserir novos registros.  
  
 O exemplo de código a seguir demonstra como inserir dados em um banco de dados usando o <xref:System.Web.UI.WebControls.SqlDataSource> controle. Os dados atuais da tabela são exibidos no <xref:System.Web.UI.WebControls.DropDownList> controle. Você pode adicionar novos registros inserindo valores no <xref:System.Web.UI.WebControls.TextBox> controles e, em seguida, clicando no **inserir** botão. Quando o **inserir** botão é clicado, os valores especificados são inseridos no banco de dados e o <xref:System.Web.UI.WebControls.DropDownList> é atualizado.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/CS/sql24cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/VB/sql24vb.aspx#1)]  
  
 O exemplo de código a seguir demonstra como recuperar dados do SQL Server, exibi-lo em uma <xref:System.Web.UI.WebControls.GridView> controlar e usar um <xref:System.Web.UI.WebControls.DetailsView> controle para ver os detalhes de uma linha selecionada no <xref:System.Web.UI.WebControls.GridView> e como um formulário para inserir novos registros.  
  
 Inicialmente, os dados são exibidos no <xref:System.Web.UI.WebControls.GridView> controle e a linha selecionada do <xref:System.Web.UI.WebControls.GridView> também é exibida no <xref:System.Web.UI.WebControls.DetailsView> controle. O <xref:System.Web.UI.WebControls.GridView> e <xref:System.Web.UI.WebControls.DetailsView> controles usar dados diferentes controles de origem; que está associado a <xref:System.Web.UI.WebControls.DetailsView> tem o <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> e <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> propriedades, certifique-se de que a linha selecionada do <xref:System.Web.UI.WebControls.GridView> é exibido.  
  
 Se você clicar em automaticamente gerado **inserir** botão do <xref:System.Web.UI.WebControls.DetailsView> controle, o <xref:System.Web.UI.WebControls.DetailsView> mostra uma interface de usuário diferente, que é usada para inserir um novo registro. O exemplo usa um procedimento armazenado para inserir registros e retorna a chave primária da linha inserida. Se você inserir um registro, o <xref:System.Web.UI.WebControls.DetailsView> preenche automaticamente o <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> coleção com valores das colunas associadas e chama o <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> método. O <xref:System.Web.UI.WebControls.DetailsView> pode deduzir os parâmetros corretos de qualquer <xref:System.Web.UI.WebControls.BoundField> objeto e um parâmetro para o <xref:System.Web.UI.WebControls.TemplateField> objeto quando a sintaxe de associação de dados bidirecional do ASP.NET é usada. Neste exemplo, um parâmetro adicional é adicionado a <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> manipulador de eventos para lidar com a chave primária que é retornada pelo procedimento armazenado.  
  
 Por fim, depois que os dados são inseridos o <xref:System.Web.UI.WebControls.DetailsView> controle no banco de dados, o <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> manipulador de eventos é chamado para manipular a <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> evento, o valor da chave primária da linha inserida é exibido e o <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> método o <xref:System.Web.UI.WebControls.GridView> controle for chamado explicitamente para atualizar os dados.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="InsertCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType InsertCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType InsertCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType InsertCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberSignature Language="F#" Value="member this.InsertCommandType : System.Web.UI.WebControls.SqlDataSourceCommandType with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether the text in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> property is a SQL statement or the name of a stored procedure.</summary>
        <value>Um dos valores de <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />. O valor é o valor <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O valor de <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType%2A> propriedade é armazenada em um estado de exibição.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como recuperar dados do Microsoft SQL Server, exibi-lo em uma <xref:System.Web.UI.WebControls.GridView> controlar e usar um <xref:System.Web.UI.WebControls.DetailsView> controle para ver os detalhes de uma linha selecionada no <xref:System.Web.UI.WebControls.GridView> e como um formulário para inserir novos registros.  
  
 O <xref:System.Web.UI.WebControls.GridView> controle exibe um conjunto de dados e o <xref:System.Web.UI.WebControls.DetailsView> controle exibe os detalhes de uma linha específica. Se você clicar em automaticamente gerado **inserir** botão do <xref:System.Web.UI.WebControls.DetailsView> controle, o <xref:System.Web.UI.WebControls.DetailsView> mostra uma interface de usuário diferente, que é usada para inserir um novo registro. O exemplo usa um procedimento armazenado para inserir registros e retorna a chave primária da linha inserida. O nome do procedimento armazenado é definido <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> propriedade e é identificado como um procedimento armazenado, definindo o <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommandType%2A> propriedade para o <xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure> valor.  
  
 Por fim, depois que os dados são inseridos o <xref:System.Web.UI.WebControls.DetailsView> controle no banco de dados, o <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> manipulador de eventos é chamado para manipular a <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> evento, o valor da chave primária da linha inserida é exibido e o <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> método o <xref:System.Web.UI.WebControls.GridView> controle for chamado explicitamente para atualizar os dados.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The selected value is not one of the <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> values.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommandType" />
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />
      </Docs>
    </Member>
    <Member MemberName="Inserted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Inserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Inserted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Inserted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserted As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Inserted;" />
      <MemberSignature Language="F#" Value="member this.Inserted : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " Usage="member this.Inserted : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when an insert operation has completed.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Manipular o <xref:System.Web.UI.WebControls.SqlDataSourceView.Inserted> evento para examinar os valores de parâmetros de saída após uma operação de inserção. Os parâmetros de saída estão disponíveis no <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> objeto que está associado com o evento.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como recuperar dados do Microsoft SQL Server e exibi-lo em um <xref:System.Web.UI.WebControls.GridView> controle. O exemplo também usa um <xref:System.Web.UI.WebControls.DetailsView> controle para exibir os detalhes da linha selecionada no <xref:System.Web.UI.WebControls.GridView>e como um formulário para inserir novos registros.  
  
 Inicialmente, os dados são exibidos no <xref:System.Web.UI.WebControls.GridView> controle e a linha selecionada do <xref:System.Web.UI.WebControls.GridView> também é exibida no <xref:System.Web.UI.WebControls.DetailsView>. O <xref:System.Web.UI.WebControls.GridView> e <xref:System.Web.UI.WebControls.DetailsView> controles usar dados diferentes controles de origem; que está associado a <xref:System.Web.UI.WebControls.DetailsView> tem o <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> e <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> propriedades, certifique-se de que a linha selecionada do <xref:System.Web.UI.WebControls.GridView> é exibido.  
  
 Se você clicar em automaticamente gerado **inserir** botão do <xref:System.Web.UI.WebControls.DetailsView> controle, o <xref:System.Web.UI.WebControls.DetailsView> mostra uma interface de usuário diferente é usada para inserir um novo registro. O exemplo usa um procedimento armazenado para inserir registros e retorna a chave primária da linha inserida. Se você inserir um registro, o <xref:System.Web.UI.WebControls.DetailsView> preenche automaticamente o <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> coleção com valores das colunas associadas e chama o <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> método. O <xref:System.Web.UI.WebControls.DetailsView> pode deduzir os parâmetros corretos de qualquer <xref:System.Web.UI.WebControls.BoundField> objeto e um parâmetro para o <xref:System.Web.UI.WebControls.TemplateField> objeto quando a sintaxe de associação de dados bidirecional do ASP.NET é usada. Neste exemplo, um parâmetro adicional é adicionado a <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> manipulador de eventos para lidar com a chave primária que é retornada pelo procedimento armazenado.  
  
 Por fim, depois que os dados são inseridos o <xref:System.Web.UI.WebControls.DetailsView> controle no banco de dados, o <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> manipulador de eventos é chamado para manipular a <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> evento, o valor da chave primária da linha inserida é exibido e o <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> método o <xref:System.Web.UI.WebControls.GridView> controle for chamado explicitamente para atualizar os dados.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Inserting" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="Inserting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Inserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Inserting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Inserting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserting As SqlDataSourceCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceCommandEventHandler ^ Inserting;" />
      <MemberSignature Language="F#" Value="member this.Inserting : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " Usage="member this.Inserting : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs before an insert operation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Manipular o <xref:System.Web.UI.WebControls.SqlDataSourceView.Inserting> evento para executar operações de inicialização adicionais que são específicas para seu aplicativo, para validar os valores de parâmetros, ou para alterar os valores de parâmetro antes do <xref:System.Web.UI.WebControls.SqlDataSource> controle executa a operação de inserção.  
  
 A conexão à fonte de dados subjacente não ainda estiver aberto quando o delegado de manipulador de eventos é chamado. Portanto, você não pode cancelar a operação de banco de dados diretamente, chamando o <xref:System.Data.Common.DbCommand.Cancel%2A> método o <xref:System.Data.Common.DbCommand> objeto que é exposto pelo <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> objeto. No entanto, você pode cancelar a operação de banco de dados, definindo o <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propriedade o <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> para `true`.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como recuperar dados do Microsoft SQL Server, exibi-lo em um <xref:System.Web.UI.WebControls.GridView> controle. O exemplo também usa um <xref:System.Web.UI.WebControls.DetailsView> controle para exibir os detalhes da linha selecionada no <xref:System.Web.UI.WebControls.GridView>e como um formulário para inserir novos registros.  
  
 Inicialmente, os dados são exibidos no <xref:System.Web.UI.WebControls.GridView> controle e a linha selecionada do <xref:System.Web.UI.WebControls.GridView> também é exibida no <xref:System.Web.UI.WebControls.DetailsView> controle. O <xref:System.Web.UI.WebControls.GridView> e <xref:System.Web.UI.WebControls.DetailsView> controles usar dados diferentes controles de origem; que está associado a <xref:System.Web.UI.WebControls.DetailsView> tem o <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> e <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> propriedades, certifique-se de que a linha selecionada do <xref:System.Web.UI.WebControls.GridView> é exibido.  
  
 Se você clicar em automaticamente gerado **inserir** botão do <xref:System.Web.UI.WebControls.DetailsView> controle, o <xref:System.Web.UI.WebControls.DetailsView> mostra uma interface de usuário diferente, que é usada para inserir um novo registro. O exemplo usa um procedimento armazenado para inserir registros e retorna a chave primária da linha inserida. Se você inserir um registro, o <xref:System.Web.UI.WebControls.DetailsView> preenche automaticamente o <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> coleção com valores das colunas associadas e chama o <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> método. O <xref:System.Web.UI.WebControls.DetailsView> pode deduzir os parâmetros corretos de qualquer <xref:System.Web.UI.WebControls.BoundField> objeto e um parâmetro para o <xref:System.Web.UI.WebControls.TemplateField> objeto quando a sintaxe de associação de dados bidirecional do ASP.NET é usada. Neste exemplo, um parâmetro adicional é adicionado a <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> manipulador de eventos para lidar com a chave primária que é retornada pelo procedimento armazenado.  
  
 Por fim, depois que os dados são inseridos o <xref:System.Web.UI.WebControls.DetailsView> controle no banco de dados, o <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> manipulador de eventos é chamado para manipular a <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> evento, o valor da chave primária da linha inserida é exibido e o <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> método o <xref:System.Web.UI.WebControls.GridView> controle for chamado explicitamente para atualizar os dados.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Inserted" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="InsertParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection InsertParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InsertParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ InsertParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InsertParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the parameters collection containing the parameters that are used by the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> property.</summary>
        <value>Um <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> que contém os parâmetros usados pela propriedade <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> propriedade contém uma consulta SQL parametrizada, o <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A> coleção contém qualquer <xref:System.Web.UI.WebControls.Parameter> objetos que correspondem aos espaços reservados de parâmetro na cadeia de caracteres SQL.  
  
 Dependendo do provedor ADO.NET, a ordem dos parâmetros de <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A> coleção pode ser importante. O <xref:System.Data.OleDb?displayProperty=nameWithType> e <xref:System.Data.Odbc?displayProperty=nameWithType> provedores associar os parâmetros na coleção de acordo com a ordem na qual os parâmetros aparecem na consulta SQL com parâmetros. O <xref:System.Data.SqlClient?displayProperty=nameWithType> provedor, que é o provedor ADO.NET padrão para o <xref:System.Web.UI.WebControls.SqlDataSource> controlar, associa parâmetros na coleção por correspondente ao nome do parâmetro com um alias de espaço reservado na consulta SQL. Para obter mais informações sobre comandos e consultas SQL parametrizadas, consulte [usando parâmetros com o controle SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como inserir dados em um banco de dados usando o <xref:System.Web.UI.WebControls.SqlDataSource> controle e uma página de Web Forms simple. Os dados atuais da tabela são exibidos no <xref:System.Web.UI.WebControls.DropDownList> controle. Você pode adicionar novos registros inserindo valores no <xref:System.Web.UI.WebControls.TextBox> controles e, em seguida, clicando no **inserir** botão. Quando o **inserir** botão é clicado, os valores especificados são inseridos no banco de dados e o <xref:System.Web.UI.WebControls.DropDownList> é atualizado.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/CS/sql24cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/VB/sql24vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />
      </Docs>
    </Member>
    <Member MemberName="IsTrackingViewState">
      <MemberSignature Language="C#" Value="protected bool IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsTrackingViewState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsTrackingViewState { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsTrackingViewState : bool" Usage="System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> object is saving changes to its view state.</summary>
        <value>
          <see langword="true" />, se o modo de exibição de fonte de dados está marcado para salvar seu estado. Caso contrário, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected virtual void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="abstract member LoadViewState : obj -&gt; unit&#xA;override this.LoadViewState : obj -&gt; unit" Usage="sqlDataSourceView.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">An object that represents the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> state to restore.</param>
        <summary>Restores the previously saved view state for the data source view.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método é usado principalmente pelo [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] infraestrutura e não se destina a ser usado diretamente no seu código.  No entanto, os desenvolvedores de controle podem substituir este método para especificar como um controle de servidor personalizado restaura o estado de exibição. Para obter mais informações, consulte [visão geral do gerenciamento de estado ASP.NET](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce).  
  
 O <xref:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState%2A> método restaura informações de estado de exibição para o <xref:System.Web.UI.WebControls.SqlDataSourceView> objeto a partir de uma solicitação de página anterior que foi salvo pelo <xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A> método.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="OldValuesParameterFormatString">
      <MemberSignature Language="C#" Value="public string OldValuesParameterFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OldValuesParameterFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property OldValuesParameterFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OldValuesParameterFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OldValuesParameterFormatString : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("{0}")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a format string to apply to the names of any parameters that are passed to the <see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Delete" /> or <see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Update" /> method.</summary>
        <value>Uma cadeia de caracteres que representa uma cadeia de caracteres de formato aplicada aos nomes dos parâmetros <paramref name="oldValues" /> passados para os métodos <see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Delete" /> ou <see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Update" />. O padrão é "{0}".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> cadeia de caracteres de formato é aplicada às chaves primárias apenas, como aqueles que são identificados pelo `DataKeyNames` propriedade do controle associado a dados ou em Excluir e cenários de atualização em que o <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> está definida como o <xref:System.Web.UI.ConflictOptions.CompareAllValues> valor e um conjunto de `oldValues` é passado para o método de dados correspondente. Nesse caso, a cadeia de caracteres de formato é aplicada a cada nome de parâmetro no `oldValues` coleção. Para obter mais informações, consulte <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString?displayProperty=nameWithType>.  
  
 O valor de <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> propriedade é armazenada em um estado de exibição.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="OnDeleted">
      <MemberSignature Language="C#" Value="protected virtual void OnDeleted (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDeleted(class System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDeleted (e As SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDeleted(System::Web::UI::WebControls::SqlDataSourceStatusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDeleted : System.Web.UI.WebControls.SqlDataSourceStatusEventArgs -&gt; unit&#xA;override this.OnDeleted : System.Web.UI.WebControls.SqlDataSourceStatusEventArgs -&gt; unit" Usage="sqlDataSourceView.OnDeleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" /> that contains the event data.</param>
        <summary>Raises the <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Deleted" /> event after the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control has completed a delete operation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 O <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A> método também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao substituir o <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> método em uma classe derivada, certifique-se de chamar o <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> método para a classe base para que registrado delegados receber o evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnDeleting">
      <MemberSignature Language="C#" Value="protected virtual void OnDeleting (System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDeleting(class System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDeleting (e As SqlDataSourceCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDeleting(System::Web::UI::WebControls::SqlDataSourceCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDeleting : System.Web.UI.WebControls.SqlDataSourceCommandEventArgs -&gt; unit&#xA;override this.OnDeleting : System.Web.UI.WebControls.SqlDataSourceCommandEventArgs -&gt; unit" Usage="sqlDataSourceView.OnDeleting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" /> that contains the event data.</param>
        <summary>Raises the <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Deleting" /> event before the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control attempts a delete operation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 O <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> método também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como tratar o <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> evento, que é gerado antes de uma <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> operação ocorre. Como este exemplo exclui os dados do banco de dados Northwind, um <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> manipulador é adicionado ao tentar fazer backup do banco de dados no disco antes da exclusão é executada.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/CS/sql10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/VB/sql10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao substituir o <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" /> método em uma classe derivada, certifique-se de chamar o <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" /> método para a classe base para que registrado delegados receber o evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnFiltering">
      <MemberSignature Language="C#" Value="protected virtual void OnFiltering (System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFiltering(class System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFiltering (e As SqlDataSourceFilteringEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFiltering(System::Web::UI::WebControls::SqlDataSourceFilteringEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnFiltering : System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs -&gt; unit&#xA;override this.OnFiltering : System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs -&gt; unit" Usage="sqlDataSourceView.OnFiltering e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs" /> that contains the event data.</param>
        <summary>Raises the <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Filtering" /> event before the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control filters the results of a select operation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 O <xref:System.Web.UI.WebControls.SqlDataSourceView.OnFiltering%2A> método também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao substituir o <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)" /> método em uma classe derivada, certifique-se de chamar o <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)" /> método para a classe base para que registrado delegados receber o evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnInserted">
      <MemberSignature Language="C#" Value="protected virtual void OnInserted (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInserted(class System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInserted (e As SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInserted(System::Web::UI::WebControls::SqlDataSourceStatusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnInserted : System.Web.UI.WebControls.SqlDataSourceStatusEventArgs -&gt; unit&#xA;override this.OnInserted : System.Web.UI.WebControls.SqlDataSourceStatusEventArgs -&gt; unit" Usage="sqlDataSourceView.OnInserted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" /> that contains the event data.</param>
        <summary>Raises the <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Inserted" /> event after the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control has completed an insert operation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 O <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> método também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como recuperar dados do Microsoft SQL Server, exibi-lo em uma <xref:System.Web.UI.WebControls.GridView> controlar e usar um <xref:System.Web.UI.WebControls.DetailsView> controle para ver os detalhes de uma linha selecionada no <xref:System.Web.UI.WebControls.GridView> e como um formulário para inserir novos registros.  
  
 Inicialmente, os dados são exibidos no <xref:System.Web.UI.WebControls.GridView> controle e a linha selecionada do <xref:System.Web.UI.WebControls.GridView> também é exibida no <xref:System.Web.UI.WebControls.DetailsView> controle. O <xref:System.Web.UI.WebControls.GridView> e <xref:System.Web.UI.WebControls.DetailsView> controles usar dados diferentes controles de origem; que está associado a <xref:System.Web.UI.WebControls.DetailsView> tem o <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> e <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> propriedades, certifique-se de que a linha selecionada do <xref:System.Web.UI.WebControls.GridView> é exibido.  
  
 Se você clicar em automaticamente gerado **inserir** botão do <xref:System.Web.UI.WebControls.DetailsView> controle, o <xref:System.Web.UI.WebControls.DetailsView> mostra uma interface de usuário diferente, que é usada para inserir um novo registro. O exemplo usa um procedimento armazenado para inserir registros e retorna a chave primária da linha inserida. Se você inserir um registro, o <xref:System.Web.UI.WebControls.DetailsView> preenche automaticamente o <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> coleção com valores das colunas associadas e chama o <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> método. O <xref:System.Web.UI.WebControls.DetailsView> pode deduzir os parâmetros corretos de qualquer <xref:System.Web.UI.WebControls.BoundField> objeto e um parâmetro para o <xref:System.Web.UI.WebControls.TemplateField> objeto quando a sintaxe de associação de dados bidirecional do ASP.NET é usada. Neste exemplo, um parâmetro adicional é adicionado a <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> manipulador de eventos para lidar com a chave primária que é retornada pelo procedimento armazenado.  
  
 Por fim, depois que os dados são inseridos o <xref:System.Web.UI.WebControls.DetailsView> controle no banco de dados, o <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> manipulador de eventos é chamado para manipular a <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> evento, o valor da chave primária da linha inserida é exibido e o <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> método o <xref:System.Web.UI.WebControls.GridView> controle for chamado explicitamente para atualizar os dados.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao substituir o <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> método em uma classe derivada, certifique-se de chamar o <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> método para a classe base para que registrado delegados receber o evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnInserting">
      <MemberSignature Language="C#" Value="protected virtual void OnInserting (System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInserting(class System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInserting (e As SqlDataSourceCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInserting(System::Web::UI::WebControls::SqlDataSourceCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnInserting : System.Web.UI.WebControls.SqlDataSourceCommandEventArgs -&gt; unit&#xA;override this.OnInserting : System.Web.UI.WebControls.SqlDataSourceCommandEventArgs -&gt; unit" Usage="sqlDataSourceView.OnInserting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" /> that contains the event data.</param>
        <summary>Raises the <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Inserting" /> event before the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control attempts an insert operation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 O <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> método também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como recuperar dados do Microsoft SQL Server, exibi-lo em uma <xref:System.Web.UI.WebControls.GridView> controlar e usar um <xref:System.Web.UI.WebControls.DetailsView> controle para ver os detalhes de uma linha selecionada no <xref:System.Web.UI.WebControls.GridView> e como um formulário para inserir novos registros.  
  
 Inicialmente, os dados são exibidos no <xref:System.Web.UI.WebControls.GridView> controle e a linha selecionada do <xref:System.Web.UI.WebControls.GridView> também é exibida no <xref:System.Web.UI.WebControls.DetailsView> controle. O <xref:System.Web.UI.WebControls.GridView> e <xref:System.Web.UI.WebControls.DetailsView> controles usar dados diferentes controles de origem; que está associado a <xref:System.Web.UI.WebControls.DetailsView> tem o <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> e <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> propriedades, certifique-se de que a linha selecionada do <xref:System.Web.UI.WebControls.GridView> é exibido.  
  
 Se você clicar em automaticamente gerado **inserir** botão do <xref:System.Web.UI.WebControls.DetailsView> controle, o <xref:System.Web.UI.WebControls.DetailsView> mostra uma interface de usuário diferente, que é usada para inserir um novo registro. O exemplo usa um procedimento armazenado para inserir registros e retorna a chave primária da linha inserida. Se você inserir um registro, o <xref:System.Web.UI.WebControls.DetailsView> preenche automaticamente o <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> coleção com valores das colunas associadas e chama o <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> método. O <xref:System.Web.UI.WebControls.DetailsView> pode deduzir os parâmetros corretos de qualquer <xref:System.Web.UI.WebControls.BoundField> objeto e um parâmetro para o <xref:System.Web.UI.WebControls.TemplateField> objeto quando a sintaxe de associação de dados bidirecional do ASP.NET é usada. Neste exemplo, um parâmetro adicional é adicionado a <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> manipulador de eventos para lidar com a chave primária que é retornada pelo procedimento armazenado.  
  
 Por fim, depois que os dados são inseridos o <xref:System.Web.UI.WebControls.DetailsView> controle no banco de dados, o <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> manipulador de eventos é chamado para manipular a <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> evento, o valor da chave primária da linha inserida é exibido e o <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> método o <xref:System.Web.UI.WebControls.GridView> controle for chamado explicitamente para atualizar os dados.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao substituir o <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" /> método em uma classe derivada, certifique-se de chamar o <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" /> método para a classe base para que registrado delegados receber o evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSelected">
      <MemberSignature Language="C#" Value="protected virtual void OnSelected (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelected(class System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelected (e As SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelected(System::Web::UI::WebControls::SqlDataSourceStatusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelected : System.Web.UI.WebControls.SqlDataSourceStatusEventArgs -&gt; unit&#xA;override this.OnSelected : System.Web.UI.WebControls.SqlDataSourceStatusEventArgs -&gt; unit" Usage="sqlDataSourceView.OnSelected e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" /> that contains the event data.</param>
        <summary>Raises the <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Selected" /> event after the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control has completed a data retrieval operation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 O <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelected%2A> método também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao substituir o <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> método em uma classe derivada, certifique-se de chamar o <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> método para a classe base para que registrado delegados receber o evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSelecting">
      <MemberSignature Language="C#" Value="protected virtual void OnSelecting (System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelecting(class System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelecting (e As SqlDataSourceSelectingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelecting(System::Web::UI::WebControls::SqlDataSourceSelectingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelecting : System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs -&gt; unit&#xA;override this.OnSelecting : System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs -&gt; unit" Usage="sqlDataSourceView.OnSelecting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs" /> that contains the event data.</param>
        <summary>Raises the <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Selecting" /> event before the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control attempts a data retrieval operation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 O <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting%2A> método também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao substituir o <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" /> método em uma classe derivada, certifique-se de chamar o <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" /> método para a classe base para que registrado delegados receber o evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnUpdated">
      <MemberSignature Language="C#" Value="protected virtual void OnUpdated (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUpdated(class System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUpdated (e As SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUpdated(System::Web::UI::WebControls::SqlDataSourceStatusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUpdated : System.Web.UI.WebControls.SqlDataSourceStatusEventArgs -&gt; unit&#xA;override this.OnUpdated : System.Web.UI.WebControls.SqlDataSourceStatusEventArgs -&gt; unit" Usage="sqlDataSourceView.OnUpdated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" /> that contains the event data.</param>
        <summary>Raises the <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Updated" /> event after the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control has completed an update operation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 O <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated%2A> método também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como exibir e atualizar os dados recuperados de um banco de dados ODBC em um <xref:System.Web.UI.WebControls.GridView> controle. Depois que um registro é atualizado com êxito, o <xref:System.Web.UI.WebControls.SqlDataSource.Updated> evento é manipulado pelo manipulador de eventos para executar uma etapa de pós-processamento onde uma notificação de mensagem de email é enviada.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/CS/odbc7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/VB/odbc7vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao substituir o <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> método em uma classe derivada, certifique-se de chamar o <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> método para a classe base para que registrado delegados receber o evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnUpdating">
      <MemberSignature Language="C#" Value="protected virtual void OnUpdating (System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUpdating(class System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUpdating (e As SqlDataSourceCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUpdating(System::Web::UI::WebControls::SqlDataSourceCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUpdating : System.Web.UI.WebControls.SqlDataSourceCommandEventArgs -&gt; unit&#xA;override this.OnUpdating : System.Web.UI.WebControls.SqlDataSourceCommandEventArgs -&gt; unit" Usage="sqlDataSourceView.OnUpdating e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" /> that contains the event data.</param>
        <summary>Raises the <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Updating" /> event before the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control attempts an update operation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 O <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A> método também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como exibir os dados recuperados de um banco de dados do Microsoft SQL Server em uma <xref:System.Web.UI.WebControls.DropDownList> controlar e atualizar o registro usando um <xref:System.Web.UI.WebControls.TextBox> controle. O exemplo mostra como você pode usar um <xref:System.Data.Common.DbTransaction> objeto para adicionar o contexto de transação ao usar o <xref:System.Web.UI.WebControls.SqlDataSource> controle para atualizar dados.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/CS/sql9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/VB/sql9vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao substituir o <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" /> em uma classe derivada, certifique-se de chamar o <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" /> método para a classe base para que registrado delegados receber o evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ParameterPrefix">
      <MemberSignature Language="C#" Value="protected virtual string ParameterPrefix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParameterPrefix" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property ParameterPrefix As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::String ^ ParameterPrefix { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParameterPrefix : string" Usage="System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the string that is used to prefix a parameter placeholder in a parameterized SQL query.</summary>
        <value>O "@" cadeia de caracteres.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Comandos e consultas SQL podem ser parametrizados, em que eles contêm espaços reservados para valores que são associados à consulta em tempo de execução. Dependendo do provedor ADO.NET que é definido para o <xref:System.Web.UI.WebControls.SqlDataSource> controle, que é identificado pelo <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> propriedade, os parâmetros são avaliados pelo alias ou pela ordem no <xref:System.Web.UI.WebControls.ParameterCollection> objeto.  
  
 Se o <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> não está definido ou está definido como o <xref:System.Data.SqlClient?displayProperty=nameWithType>, parâmetros são avaliados pelo alias e o <xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A> propriedade é usada para adicionar um prefixo de parâmetro para o <xref:System.Web.UI.WebControls.Parameter.Name%2A> propriedade de cada <xref:System.Web.UI.WebControls.Parameter> do objeto em um <xref:System.Web.UI.WebControls.ParameterCollection> durante um tipo de dados operação de manipulação de dados ou de recuperação. Se o <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> está definida como o <xref:System.Data.OleDb?displayProperty=nameWithType> ou <xref:System.Data.Odbc?displayProperty=nameWithType>, os parâmetros são avaliados pela ordem e o <xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A> e <xref:System.Web.UI.WebControls.Parameter.Name%2A> propriedades são ignoradas.  
  
 Se você estender o <xref:System.Web.UI.WebControls.SqlDataSourceView> classe, você pode substituir o <xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A> propriedade para fornecer um prefixo diferente de `"@"` cadeia de caracteres, se necessário.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseUnsupportedCapabilityError">
      <MemberSignature Language="C#" Value="protected internal override void RaiseUnsupportedCapabilityError (System.Web.UI.DataSourceCapabilities capability);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RaiseUnsupportedCapabilityError(valuetype System.Web.UI.DataSourceCapabilities capability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RaiseUnsupportedCapabilityError (capability As DataSourceCapabilities)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RaiseUnsupportedCapabilityError(System::Web::UI::DataSourceCapabilities capability);" />
      <MemberSignature Language="F#" Value="override this.RaiseUnsupportedCapabilityError : System.Web.UI.DataSourceCapabilities -&gt; unit" Usage="sqlDataSourceView.RaiseUnsupportedCapabilityError capability" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="capability" Type="System.Web.UI.DataSourceCapabilities" />
      </Parameters>
      <Docs>
        <param name="capability">One of the <see cref="T:System.Web.UI.DataSourceCapabilities" /> values that is compared against the capabilities that the view supports.</param>
        <summary>Compares the capabilities that are requested for an <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> operation against those that the view supports and is called by the <see cref="M:System.Web.UI.DataSourceSelectArguments.RaiseUnsupportedCapabilitiesError(System.Web.UI.DataSourceView)" /> method.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError%2A> método é usado pela exibição da fonte de dados para examinar cada um dos recursos que são solicitados por um controle associado a dados, que é representado pelo <xref:System.Web.UI.DataSourceSelectArguments> objeto que é passado para o <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> método e comparar esses recursos para os recursos que são suportados pelo modo de exibição de fonte de dados. Os recursos que são representados pelo <xref:System.Web.UI.DataSourceSelectArguments> de objeto e não há suporte para o modo de exibição de fonte de dados, um <xref:System.NotSupportedException> exceção será gerada.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">The data source does not have the selected <paramref name="capability" /> enabled.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanSort" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanPage" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected virtual object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="abstract member SaveViewState : unit -&gt; obj&#xA;override this.SaveViewState : unit -&gt; obj" Usage="sqlDataSourceView.SaveViewState " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Saves the changes to the view state for the  <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> control since the time that the page was posted back to the server.</summary>
        <returns>The object that contains the changes to the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> view state; otherwise, <see langword="null" />, if there is no view state associated with the object.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A> método é usado principalmente por desenvolvedores de controle.  
  
 Estado de exibição é o acúmulo dos valores das propriedades de um controle de servidor. Esses valores são colocados automaticamente no <xref:System.Web.UI.Control.ViewState%2A> propriedade para o controle de servidor, que é uma ocorrência da <xref:System.Web.UI.StateBag> classe. O <xref:System.Web.UI.Control.ViewState%2A> valor para o controle de servidor, em seguida, é mantido em um objeto de cadeia de caracteres depois de salvar o estágio do ciclo de vida de controle do servidor de estado.  
  
 Quando o estado de exibição for salvo, o objeto de cadeia de caracteres que foram mantido após salvar estado estágio do ciclo de vida de controle de servidor é retornado ao cliente como uma variável que é armazenada em um HTML `Hidden` elemento. Quando você criar controles de servidor personalizado, você pode melhorar a eficiência, substituindo o <xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A> método e modificando o `ViewState` propriedade para o controle de servidor. Para obter mais informações, consulte [visão geral do gerenciamento de estado ASP.NET](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable Select (System.Web.UI.DataSourceSelectArguments arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerable Select(class System.Web.UI.DataSourceSelectArguments arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
      <MemberSignature Language="VB.NET" Value="Public Function Select (arguments As DataSourceSelectArguments) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerable ^ Select(System::Web::UI::DataSourceSelectArguments ^ arguments);" />
      <MemberSignature Language="F#" Value="override this.Select : System.Web.UI.DataSourceSelectArguments -&gt; System.Collections.IEnumerable" Usage="sqlDataSourceView.Select arguments" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Web.UI.DataSourceSelectArguments" />
      </Parameters>
      <Docs>
        <param name="arguments">A <see cref="T:System.Web.UI.DataSourceSelectArguments" /> used to request operations on the data beyond basic data retrieval.</param>
        <summary>Retrieves data from the underlying database using the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" /> SQL string and any parameters that are in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" /> collection.</summary>
        <returns>An <see cref="T:System.Collections.IEnumerable" /> list of data rows.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> chamadas de método de <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A> método, passando o `selectArgs` parâmetro.  
  
 O <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A> método retorna um <xref:System.Data.DataView> do objeto, se o <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> está definida como o <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> valor ou retorna um <xref:System.Data.IDataReader> do objeto, se o <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> está definida como o <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> valor. Fechar o <xref:System.Data.IDataReader> quando você terminar de ler os dados do objeto.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">The <paramref name="selectArgs" /> passed to the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" /> method specify that the data source should perform some additional work while retrieving data to enable paging or sorting through the retrieved data, but the data source control does not support the requested capability.</exception>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> cannot establish a connection with the underlying data source.</exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public string SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCommand : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the SQL string that the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> object uses to retrieve data from the underlying database.</summary>
        <value>Uma cadeia de caracteres SQL usada pelo <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> para recuperar dados.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Porque os produtos diferentes de base de dados usam diferentes variedades SQL, a sintaxe da cadeia de caracteres SQL depende do provedor atual do ADO.NET que está sendo usado, que é identificado pela propriedade de <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> . Se a cadeia de caracteres SQL é uma consulta ou comando parametrizado, o espaço reservado de parâmetro também depende do provedor ADO.NET sendo usado. Por exemplo, se o provedor é o <xref:System.Data.SqlClient?displayProperty=nameWithType>, que é o provedor padrão para o <xref:System.Web.UI.WebControls.SqlDataSource> classe, o espaço reservado do parâmetro é `'@parameterName'`. No entanto, se o provedor está definido como o <xref:System.Data.Odbc?displayProperty=nameWithType> ou <xref:System.Data.OleDb?displayProperty=nameWithType>, o espaço reservado do parâmetro é `'?'`. Para obter mais informações sobre comandos e consultas SQL parametrizadas, consulte [usando parâmetros com o controle SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
 O <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> propriedade pode ser uma cadeia de caracteres SQL ou o nome de um procedimento armazenado, se a fonte de dados oferece suporte a procedimentos armazenados.  
  
> [!IMPORTANT]
>  É mais seguro para usar um procedimento armazenado que uma instrução SQL para o <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> propriedade.  
  
 O valor de <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> propriedade é armazenada em um estado de exibição.  
  
   
  
## Examples  
 Esta seção contém dois exemplos de código. O primeiro exemplo de código demonstra como definir a <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> texto para uma consulta SQL básica para recuperar dados de um banco de dados do Microsoft SQL Server e exibi-lo em um <xref:System.Web.UI.WebControls.DropDownList> controle. O segundo exemplo de código demonstra como definir a <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> texto para o nome de um procedimento armazenado para recuperar dados de um banco de dados do SQL Server e exibi-lo em um <xref:System.Web.UI.WebControls.DropDownList>.  
  
 O exemplo de código a seguir demonstra como definir a <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> texto para uma consulta SQL básica para recuperar dados de um banco de dados do SQL Server e exibi-lo em um <xref:System.Web.UI.WebControls.DropDownList> controle. O <xref:System.Web.UI.WebControls.Button> e <xref:System.Web.UI.WebControls.TextBox> controles são fornecidos como uma interface simples para atualizar o endereço para o usuário selecionado a <xref:System.Web.UI.WebControls.DropDownList>.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/CS/sql8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/VB/sql8vb.aspx#1)]  
  
 O exemplo de código a seguir demonstra como definir a <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> texto para o nome de um procedimento armazenado para recuperar dados de um banco de dados do SQL Server e exibi-lo em um <xref:System.Web.UI.WebControls.DropDownList> controle. O <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> propriedade pode ser uma consulta SQL ou o nome de um procedimento armazenado, se a fonte de dados oferece suporte a procedimentos armazenados.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/CS/sql14cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/VB/sql14vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="SelectCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType SelectCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType SelectCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType SelectCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCommandType : System.Web.UI.WebControls.SqlDataSourceCommandType with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether the text in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" /> property is a SQL query or the name of a stored procedure.</summary>
        <value>Um dos valores de <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />. O padrão é o valor <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O valor de <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType%2A> propriedade é armazenada em um estado de exibição.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como definir a <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> texto para o nome de um procedimento armazenado e o <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A> propriedade para o <xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure> valor para recuperar dados de um banco de dados do Microsoft SQL Server e exibi-lo em um <xref:System.Web.UI.WebControls.DropDownList>.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/CS/sql14cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/VB/sql14vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The selected value is not one of the <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> values.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommandType" />
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Selected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Selected" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selected As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Selected;" />
      <MemberSignature Language="F#" Value="member this.Selected : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " Usage="member this.Selected : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when a data retrieval operation has completed.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Manipular o <xref:System.Web.UI.WebControls.SqlDataSourceView.Selected> evento para examinar os valores de parâmetros de saída depois de uma operação de recuperação de dados foi concluída. Os parâmetros de saída estão disponíveis no <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> objeto que está associado com o evento.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Selecting" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="Selecting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler Selecting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler Selecting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Selecting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selecting As SqlDataSourceSelectingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceSelectingEventHandler ^ Selecting;" />
      <MemberSignature Language="F#" Value="member this.Selecting : System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler " Usage="member this.Selecting : System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs before a data retrieval operation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Manipular o <xref:System.Web.UI.WebControls.SqlDataSourceView.Selecting> evento para executar operações de inicialização adicionais que são específicas para seu aplicativo, para validar os valores de parâmetros, ou para alterar os valores de parâmetro antes do <xref:System.Web.UI.WebControls.SqlDataSource> controle executa a recuperação de dados operação.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Selected" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Select" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="SelectParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection SelectParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ SelectParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the parameters collection containing the parameters that are used by the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" /> property.</summary>
        <value>Um <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> que contém os parâmetros usados pela propriedade <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> propriedade contém uma consulta SQL parametrizada, o <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A> coleção contém qualquer <xref:System.Web.UI.WebControls.Parameter> objetos que correspondem aos espaços reservados de parâmetro na cadeia de caracteres SQL.  
  
 Dependendo do provedor ADO.NET, a ordem dos parâmetros de <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A> coleção pode ser importante. O <xref:System.Data.OleDb?displayProperty=nameWithType> e <xref:System.Data.Odbc?displayProperty=nameWithType> provedores associar os parâmetros na coleção de acordo com a ordem na qual os parâmetros aparecem na consulta SQL com parâmetros. O <xref:System.Data.SqlClient?displayProperty=nameWithType> provedor, que é o provedor ADO.NET padrão para o <xref:System.Web.UI.WebControls.SqlDataSource> controlar, associa parâmetros na coleção por correspondente ao nome do parâmetro com um alias de espaço reservado na consulta SQL. Para obter mais informações sobre comandos e consultas SQL parametrizadas, consulte [usando parâmetros com o controle SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como recuperar dados do banco de dados Northwind no Microsoft SQL Server, definindo o <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> propriedade para uma consulta SQL. A consulta SQL é parametrizada e o espaço reservado para o <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> propriedade está de acordo com o <xref:System.Web.UI.WebControls.ControlParameter> objeto que é adicionado ao <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> coleção. Dessa forma, o <xref:System.Web.UI.WebControls.DropDownList> controle, para que o <xref:System.Web.UI.WebControls.ControlParameter> está associado, atua como um filtro para o que é exibido no <xref:System.Web.UI.WebControls.ListBox> controle.  
  
> [!NOTE]
>  Como o parâmetro é usado em uma cláusula WHERE, o uso do <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> propriedade neste exemplo de código é funcionalmente equivalente ao uso de ambos os <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> e <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> propriedades.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_2sql/CS/sql2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_2sql/VB/sql2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />
      </Docs>
    </Member>
    <Member MemberName="SortParameterName">
      <MemberSignature Language="C#" Value="public string SortParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property SortParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SortParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SortParameterName : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.SortParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of a stored procedure parameter that is used to sort retrieved data when data retrieval is performed using a stored procedure.</summary>
        <value>O nome de um parâmetro de procedimento armazenado usado para classificar os dados recuperados quando a recuperação de dados é executada usando um procedimento armazenado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> propriedade é avaliada somente quando o SQL que é de comando contido pelo <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> propriedade é o nome de um procedimento armazenado. Nesse caso, se o <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> estiver definida, ela contém o nome de um parâmetro que é usado para classificar os resultados do procedimento armazenado.  
  
 Se o <xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A> está definida, ele é anexado ao <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> propriedade.  
  
 O valor de <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> propriedade é armazenada em um estado de exibição.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.IsTrackingViewState">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IStateManager.IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsTrackingViewState As Boolean Implements IStateManager.IsTrackingViewState" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Web.UI.IStateManager.IsTrackingViewState { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.SqlDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>For a description of this member, see <see cref="P:System.Web.UI.IStateManager.IsTrackingViewState" />.</summary>
        <value>
          <see langword="true" />, se o modo de exibição de fonte de dados está marcado para salvar seu estado. Caso contrário, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este membro é uma implementação do membro de interface explícita. Ele pode ser usado somente quando o <xref:System.Web.UI.WebControls.SqlDataSourceView> instância é convertida para o <xref:System.Web.UI.IStateManager> interface.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.IStateManager.IsTrackingViewState" />
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.LoadViewState">
      <MemberSignature Language="C#" Value="void IStateManager.LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub LoadViewState (savedState As Object) Implements IStateManager.LoadViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.LoadViewState(System::Object ^ savedState) = System::Web::UI::IStateManager::LoadViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">An object that represents the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> state to restore.</param>
        <summary>For a description of this member, see <see cref="M:System.Web.UI.IStateManager.LoadViewState(System.Object)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este membro é uma implementação do membro de interface explícita. Ele pode ser usado somente quando o <xref:System.Web.UI.WebControls.SqlDataSourceView> instância é convertida para o <xref:System.Web.UI.IStateManager> interface.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.SaveViewState">
      <MemberSignature Language="C#" Value="object IStateManager.SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Web.UI.IStateManager.SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Function SaveViewState () As Object Implements IStateManager.SaveViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Web.UI.IStateManager.SaveViewState() = System::Web::UI::IStateManager::SaveViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>For a description of this member, see <see cref="M:System.Web.UI.IStateManager.SaveViewState" />.</summary>
        <returns>The object that contains the changes to the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> view state; otherwise, <see langword="null" />, if there is no view state associated with the object.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este membro é uma implementação do membro de interface explícita. Ele pode ser usado somente quando o <xref:System.Web.UI.WebControls.SqlDataSourceView> instância é convertida para o <xref:System.Web.UI.IStateManager> interface.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.TrackViewState">
      <MemberSignature Language="C#" Value="void IStateManager.TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Sub TrackViewState () Implements IStateManager.TrackViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.TrackViewState() = System::Web::UI::IStateManager::TrackViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>For a description of this member, see <see cref="M:System.Web.UI.IStateManager.TrackViewState" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este membro é uma implementação do membro de interface explícita. Ele pode ser usado somente quando o <xref:System.Web.UI.WebControls.SqlDataSourceView> instância é convertida para o <xref:System.Web.UI.IStateManager> interface.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected virtual void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void TrackViewState();" />
      <MemberSignature Language="F#" Value="abstract member TrackViewState : unit -&gt; unit&#xA;override this.TrackViewState : unit -&gt; unit" Usage="sqlDataSourceView.TrackViewState " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Causes the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> object to track changes to its view state so that the changes can be stored in the <see cref="T:System.Web.UI.StateBag" /> object for the control and persisted across requests for the same page.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function Update (keys As IDictionary, values As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Collections.IDictionary * System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="sqlDataSourceView.Update (keys, values, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">An <see cref="T:System.Collections.IDictionary" /> of primary keys to use with the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> property to perform the update database operation. If there are no keys associated with the query or if the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> is not a parameterized SQL query, pass <see langword="null" />.</param>
        <param name="values">An <see cref="T:System.Collections.IDictionary" /> of values to use with the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> property to perform the update database operation. If there are no parameters associated with the query or if the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> is not a parameterized SQL query, pass <see langword="null" />.</param>
        <param name="oldValues">An <see cref="T:System.Collections.IDictionary" /> that represents the original values in the database. If there are no parameters associated with the query or if the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> is not a parameterized SQL query, pass <see langword="null" />.</param>
        <summary>Performs an update operation using the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> SQL string, any parameters that are in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" /> collection, and the values that are in the specified <paramref name="keys" />, <paramref name="values" />, and <paramref name="oldValues" /> collections.</summary>
        <returns>A value that represents the number of rows updated in the underlying database.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A> chamadas de método de <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate%2A> método, passando o `keys`, `values`, e `oldValues` parâmetros. Para obter mais informações, consulte <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand?displayProperty=nameWithType>.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar um <xref:System.Web.UI.WebControls.SqlDataSource> controle para exibir dados em um <xref:System.Web.UI.WebControls.DropDownList> controlar e atualizar dados quando o **enviar** botão é clicado. O <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> propriedade é definida com uma instrução SQL parametrizada e dois <xref:System.Web.UI.WebControls.ControlParameter> parâmetros serão adicionados para o <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> coleção. Quando o **enviar** botão é clicado, o <xref:System.Web.UI.WebControls.Button.OnClick%2A> evento é tratado para chamar o <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A> método explicitamente.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/CS/sql8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/VB/sql8vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> cannot establish a connection with the underlying data source.</exception>
        <exception cref="T:System.NotSupportedException">The <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate" /> property is <see langword="false" />.</exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public string UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UpdateCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCommand : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the SQL string that the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> object uses to update data in the underlying database.</summary>
        <value>Um SQL de cadeia de caracteres que o <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> usa para atualizar dados.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Porque os produtos diferentes de base de dados usam diferentes variedades SQL, a sintaxe da cadeia de caracteres SQL depende do provedor atual do ADO.NET que está sendo usado, que é identificado pela propriedade de <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> . Se a cadeia de caracteres SQL é uma consulta ou comando parametrizado, o espaço reservado de parâmetro também depende do provedor ADO.NET sendo usado. Por exemplo, se o provedor é o <xref:System.Data.SqlClient?displayProperty=nameWithType>, que é o provedor padrão para o <xref:System.Web.UI.WebControls.SqlDataSource> classe, o espaço reservado do parâmetro é `'@parameterName'`. No entanto, se o provedor está definido como o <xref:System.Data.Odbc?displayProperty=nameWithType> ou <xref:System.Data.OleDb?displayProperty=nameWithType>, o espaço reservado do parâmetro é `'?'`. Para obter mais informações sobre comandos e consultas SQL parametrizadas, consulte [usando parâmetros com o controle SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
 O <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> propriedade pode ser uma cadeia de caracteres SQL ou o nome de um procedimento armazenado, se a fonte de dados oferece suporte a procedimentos armazenados.  
  
 O valor de <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> propriedade é armazenada em um estado de exibição.  
  
   
  
## Examples  
 Esta seção contém dois exemplos de código. O primeiro exemplo de código demonstra como definir a <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> propriedade o <xref:System.Web.UI.WebControls.SqlDataSource> controlar e atualizar dados em um banco de dados do Microsoft SQL Server usando o <xref:System.Web.UI.WebControls.GridView> controle. O segundo exemplo de código demonstra como atualizar dados em um banco de dados ODBC usando o <xref:System.Web.UI.WebControls.GridView> controle.  
  
 O exemplo de código a seguir demonstra como definir a <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> propriedade o <xref:System.Web.UI.WebControls.SqlDataSource> controlar e atualizar dados em um banco de dados do SQL Server usando o <xref:System.Web.UI.WebControls.GridView> controle. O <xref:System.Web.UI.WebControls.GridView> controle preenche automaticamente o <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> deduzir os parâmetros da coleção a <xref:System.Web.UI.WebControls.BoundField> objetos e chama o <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A> método quando o **atualização** link o editável<xref:System.Web.UI.WebControls.GridView> controle está selecionado. Este exemplo também inclui algum pós-processamento — depois que um registro é atualizado, uma notificação de mensagem de email é enviada.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7sql/CS/sql7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7sql/VB/sql7vb.aspx#1)]  
  
 O exemplo de código a seguir, que é funcionalmente idêntico ao exemplo de código anterior, demonstra como atualizar dados em um banco de dados ODBC usando o <xref:System.Web.UI.WebControls.GridView> controle. O <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> está definida como o provedor ADO.NET para ODBC, o <xref:System.Data.Odbc?displayProperty=nameWithType>e o <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> propriedade é definida como o nome de um nome de fonte de dados ODBC (DSN).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/CS/odbc7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/VB/odbc7vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="UpdateCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType UpdateCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType UpdateCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType UpdateCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCommandType : System.Web.UI.WebControls.SqlDataSourceCommandType with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether the text in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> property is a SQL statement or the name of a stored procedure.</summary>
        <value>Um dos valores de <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />. O padrão é o valor <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O valor de <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType%2A> propriedade é armazenada em um estado de exibição.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The selected value is not one of the <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> values.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommandType" />
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />
      </Docs>
    </Member>
    <Member MemberName="Updated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Updated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Updated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Updated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updated As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Updated;" />
      <MemberSignature Language="F#" Value="member this.Updated : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " Usage="member this.Updated : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when an update operation has completed.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Manipular o <xref:System.Web.UI.WebControls.SqlDataSourceView.Updated> evento para examinar os valores de parâmetros de saída depois de uma operação de atualização foi concluída. Os parâmetros de saída estão disponíveis no <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> objeto que está associado com o evento.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como exibir e atualizar os dados recuperados de um banco de dados ODBC em um <xref:System.Web.UI.WebControls.GridView> controle. Depois que um registro é atualizado com êxito, o <xref:System.Web.UI.WebControls.SqlDataSource.Updated> evento é manipulado pelo manipulador de eventos para executar uma etapa de pós-processamento onde uma notificação de mensagem de email é enviada.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/CS/odbc7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/VB/odbc7vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Updating" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Update" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="UpdateParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection UpdateParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdateParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ UpdateParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdateParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the parameters collection containing the parameters that are used by the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> property.</summary>
        <value>Um <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> que contém os parâmetros usados pela propriedade <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> propriedade contém uma consulta SQL parametrizada, o <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A> coleção contém qualquer <xref:System.Web.UI.WebControls.Parameter> objetos que correspondem aos espaços reservados de parâmetro que estão na cadeia de caracteres SQL.  
  
 Nomes de parâmetro podem ser afetados pelo <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> propriedade; especificamente, se o nome identifica uma chave primária, como uma chave que é especificado usando o `DataKeyNames` propriedade, ou em Excluir e atualizar cenários onde o <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> está definida como o <xref:System.Web.UI.ConflictOptions.CompareAllValues> valor e um conjunto de `oldValues` são passados para o método de dados correspondente. Nesse caso, a cadeia de caracteres de formato é aplicada a cada nome de parâmetro no `oldValues` coleção.  
  
 Dependendo do provedor ADO.NET, a ordem dos parâmetros de <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A> coleção pode ser importante. O <xref:System.Data.OleDb?displayProperty=nameWithType> e <xref:System.Data.Odbc?displayProperty=nameWithType> provedores associar os parâmetros na coleção de acordo com a ordem na qual os parâmetros aparecem na consulta SQL com parâmetros. O <xref:System.Data.SqlClient?displayProperty=nameWithType> provedor, que é o provedor ADO.NET padrão para o <xref:System.Web.UI.WebControls.SqlDataSource> controlar, associa parâmetros na coleção por correspondente ao nome do parâmetro com um alias de espaço reservado na consulta SQL. Para obter mais informações sobre comandos e consultas SQL parametrizadas, consulte [usando parâmetros com o controle SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar um <xref:System.Web.UI.WebControls.SqlDataSource> controle para exibir dados em um <xref:System.Web.UI.WebControls.DropDownList> controlar e atualizar dados quando o **enviar** botão é clicado. O <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> propriedade é definida com uma instrução SQL parametrizada e dois <xref:System.Web.UI.WebControls.ControlParameter> parâmetros serão adicionados para o <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> coleção. Quando o **enviar** botão é clicado, o <xref:System.Web.UI.WebControls.Button.OnClick%2A> evento é tratado para chamar o <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> método explicitamente.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/CS/sql8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/VB/sql8vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />
      </Docs>
    </Member>
    <Member MemberName="Updating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Updating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Updating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Updating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updating As SqlDataSourceCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceCommandEventHandler ^ Updating;" />
      <MemberSignature Language="F#" Value="member this.Updating : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " Usage="member this.Updating : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs before an update operation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Manipular o <xref:System.Web.UI.WebControls.SqlDataSourceView.Updating> evento para executar operações de inicialização adicionais que são específicas para seu aplicativo, para validar os valores de parâmetros, ou para alterar os valores de parâmetro antes do <xref:System.Web.UI.WebControls.SqlDataSource> controle executa a operação de atualização.  
  
 A conexão à fonte de dados subjacente não ainda estiver aberto quando o delegado de manipulador de eventos é chamado. Portanto, você não pode cancelar a operação diretamente, chamando o <xref:System.Data.Common.DbCommand.Cancel%2A> método o <xref:System.Data.Common.DbCommand> objeto que é exposto pelo <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> objeto. No entanto, você pode cancelar a operação de banco de dados, definindo o <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propriedade o <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> para `true`.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como exibir os dados recuperados de um banco de dados do Microsoft SQL Server em uma <xref:System.Web.UI.WebControls.DropDownList> controlar e atualizar o registro usando um <xref:System.Web.UI.WebControls.TextBox> controle. O exemplo mostra como você pode usar um <xref:System.Data.Common.DbTransaction> objeto para adicionar o contexto de transação ao usar o <xref:System.Web.UI.WebControls.SqlDataSource> controle para atualizar dados.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/CS/sql9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/VB/sql9vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Updated" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Update" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />
      </Docs>
    </Member>
  </Members>
</Type>