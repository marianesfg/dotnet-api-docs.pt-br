<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="LinqDataSourceInsertEventArgs.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac554a4b7702eacd60d84d350582ce858f3761d3148.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">54a4b7702eacd60d84d350582ce858f3761d3148</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs">
          <source>Provides data for the <ph id="ph1">&lt;see cref="E:System.Web.UI.WebControls.LinqDataSource.Inserting" /&gt;</ph> event.</source>
          <target state="translated">Fornece dados para o evento de <ph id="ph1">&lt;see cref="E:System.Web.UI.WebControls.LinqDataSource.Inserting" /&gt;</ph> .</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt;</ph> object is passed to any event handler for the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph> event.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt;</ph> objeto é passado para qualquer manipulador de eventos para o <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A&gt;</ph> property contains the data that will be inserted.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A&gt;</ph> propriedade contém os dados que serão inseridos.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs">
          <source>You can use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt;</ph> object to examine the data before the insert operation is executed in the data source.</source>
          <target state="translated">Você pode usar o <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt;</ph> objeto para examinar os dados antes da operação de inserção é executada na fonte de dados.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs">
          <source>You can then validate the data, examine validation errors from the data class, or change a value before the update.</source>
          <target state="translated">Você pode validar os dados, examine os erros de validação da classe de dados ou alterar um valor antes da atualização.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs">
          <source>You can also cancel the insert operation.</source>
          <target state="translated">Você também pode cancelar a operação de inserção.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs">
          <source>If the object that represents the data source throws a validation exception before it inserts the data, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A&gt;</ph> property contains an instance of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException&gt;</ph> class.</source>
          <target state="translated">Se o objeto que representa a fonte de dados gera uma exceção de validação antes de inserir os dados, o <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A&gt;</ph> propriedade contém uma instância do <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs">
          <source>You can retrieve all the validation exceptions through the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A&gt;</ph> property.</source>
          <target state="translated">Você pode recuperar todas as exceções de validação por meio de <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs">
          <source>If no validation exception is thrown, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A&gt;</ph> property contains <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Se nenhuma exceção de validação for lançada, o <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A&gt;</ph> propriedade contém <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs">
          <source>If you handle the validation exceptions and do not want the exception to be re-thrown, set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Se você lidar com as exceções de validação e não quiser que a exceção seja gerada novamente, defina o <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A&gt;</ph> propriedade <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs">
          <source>The following example shows a handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph> event.</source>
          <target state="translated">O exemplo a seguir mostra um manipulador para o <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs">
          <source>The object from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A&gt;</ph> property is cast to a type named <ph id="ph2">`Product`</ph>.</source>
          <target state="translated">O objeto a partir de <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A&gt;</ph> propriedade é convertida em um tipo denominado <ph id="ph2">`Product`</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs">
          <source>The <ph id="ph1">`DateModified`</ph> property of the <ph id="ph2">`Product`</ph> object is set to the current date and time.</source>
          <target state="translated">O <ph id="ph1">`DateModified`</ph> propriedade o <ph id="ph2">`Product`</ph> objeto é definido como a data e hora atuais.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs">
          <source>The following example shows an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph> event.</source>
          <target state="translated">O exemplo a seguir mostra um manipulador de eventos para o <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs">
          <source>It displays any validation exception messages by using a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Label&gt;</ph> control.</source>
          <target state="translated">Exibe qualquer mensagem de exceção de validação usando um <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Label&gt;</ph> controle.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.#ctor(System.Object)">
          <source>An object that contains the data to insert.</source>
          <target state="translated">Um objeto que contém os dados a serem inseridos.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.#ctor(System.Object)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)">
          <source>The exception that occurred when the data to insert was being validated.</source>
          <target state="translated">A exceção que ocorreu quando os dados a serem inseridos estavam sendo validados.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" /&gt;</ph> class and specifies the provided exception.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" /&gt;</ph> e especifica a exceção fornecida.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception">
          <source>Gets the exception that was thrown while the data was being validated before the insert operation.</source>
          <target state="translated">Obtém a exceção gerada enquanto os dados estavam sendo validados antes da operação de inserção.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception">
          <source>The exception, if an error occurred; otherwise, <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">A exceção se ocorreu um erro; Caso contrário, <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception">
          <source>If a validation exception is thrown before the insert operation is performed, the exception is stored in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A&gt;</ph> property.</source>
          <target state="translated">Se uma exceção de validação é lançada antes da operação de inserção é executada, a exceção é armazenada no <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception">
          <source>In a handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph> event, you can retrieve the exception through the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A&gt;</ph> property.</source>
          <target state="translated">Em um manipulador para o <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph> eventos, você pode recuperar a exceção por meio de <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception">
          <source>The following example shows a handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph> event.</source>
          <target state="translated">O exemplo a seguir mostra um manipulador para o <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception">
          <source>It displays any validation exception messages by using a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Label&gt;</ph> control.</source>
          <target state="translated">Exibe qualquer mensagem de exceção de validação usando um <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Label&gt;</ph> controle.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled">
          <source>Gets or sets a value that indicates whether the exception was handled and that it should not be thrown again.</source>
          <target state="translated">Obtém ou define um valor que indica se a exceção foi tratada e que ela não deve ser gerada novamente.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the exception was handled; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se a exceção foi tratada; Caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled">
          <source>You can create event handlers for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph> event to examine validation exceptions that occurred before the insert operation.</source>
          <target state="translated">Você pode criar manipuladores de eventos para o <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph> evento para examinar as exceções de validação que ocorreram antes da operação de inserção.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled">
          <source>If you handle the exception and do not want it to be thrown again, set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Se você lidar com a exceção e não quiser que ele seja gerada novamente, defina o <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A&gt;</ph> propriedade <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled">
          <source>If you do not set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A&gt;</ph> property to <ph id="ph2">`true`</ph>, the exception will be propagated to the next event handler in the call stack.</source>
          <target state="translated">Se você não definir a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A&gt;</ph> propriedade <ph id="ph2">`true`</ph>, a exceção será propagada para o manipulador de eventos Avançar na pilha de chamadas.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled">
          <source>The following example shows an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph> event.</source>
          <target state="translated">O exemplo a seguir mostra um manipulador de eventos para o <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled">
          <source>It displays any validation exception messages by using a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Label&gt;</ph> control.</source>
          <target state="translated">Exibe qualquer mensagem de exceção de validação usando um <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Label&gt;</ph> controle.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject">
          <source>Gets the object that contains the data to insert.</source>
          <target state="translated">Obtém um objeto que contém os dados a serem inseridos.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject">
          <source>An object that contains the data to insert.</source>
          <target state="translated">Um objeto que contém os dados a serem inseridos.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A&gt;</ph> property contains the data that will be inserted into the data source.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A&gt;</ph> propriedade contém os dados que serão inseridos na fonte de dados.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject">
          <source>Create a handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph> event and retrieve the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A&gt;</ph> property in order to validate the data, change the data, or cancel the insert operation before the data operation is executed.</source>
          <target state="translated">Criar um manipulador para o <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph> eventos e recuperar o <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A&gt;</ph> propriedade para validar os dados, alterar os dados ou cancelar a operação de inserção antes que a operação de dados seja executada.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A&gt;</ph> property returns an object of type <ph id="ph2">&lt;xref:System.Object&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A&gt;</ph> propriedade retorna um objeto do tipo <ph id="ph2">&lt;xref:System.Object&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject">
          <source>You can cast this object to the type of the class that represents the data.</source>
          <target state="translated">Você pode converter esse objeto para o tipo da classe que representa os dados.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject">
          <source>The following example shows a handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph> event.</source>
          <target state="translated">O exemplo a seguir mostra um manipulador para o <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject">
          <source>The object from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A&gt;</ph> property is cast to a type named <ph id="ph2">`Product`</ph>.</source>
          <target state="translated">O objeto a partir de <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A&gt;</ph> propriedade é convertida em um tipo denominado <ph id="ph2">`Product`</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject">
          <source>The <ph id="ph1">`DateModified`</ph> property of the <ph id="ph2">`Product`</ph> object is set to the current date and time.</source>
          <target state="translated">O <ph id="ph1">`DateModified`</ph> propriedade o <ph id="ph2">`Product`</ph> objeto é definido como a data e hora atuais.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>