<Type Name="LinqDataSourceInsertEventArgs" FullName="System.Web.UI.WebControls.LinqDataSourceInsertEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="54a4b7702eacd60d84d350582ce858f3761d3148" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class LinqDataSourceInsertEventArgs : System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LinqDataSourceInsertEventArgs extends System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class LinqDataSourceInsertEventArgs&#xA;Inherits CancelEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class LinqDataSourceInsertEventArgs : System::ComponentModel::CancelEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.CancelEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="b1e86-101">Fornece dados para o evento de <see cref="E:System.Web.UI.WebControls.LinqDataSource.Inserting" /> .</span>
      <span class="sxs-lookup">
        <span data-stu-id="b1e86-101">Provides data for the <see cref="E:System.Web.UI.WebControls.LinqDataSource.Inserting" /> event.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1e86-102">O <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> objeto é passado para qualquer manipulador de eventos para o <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> evento.</span><span class="sxs-lookup"><span data-stu-id="b1e86-102">The <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> object is passed to any event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event.</span></span> <span data-ttu-id="b1e86-103">O <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> propriedade contém os dados que serão inseridos.</span><span class="sxs-lookup"><span data-stu-id="b1e86-103">The <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property contains the data that will be inserted.</span></span>  
  
 <span data-ttu-id="b1e86-104">Você pode usar o <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> objeto para examinar os dados antes da operação de inserção é executada na fonte de dados.</span><span class="sxs-lookup"><span data-stu-id="b1e86-104">You can use the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> object to examine the data before the insert operation is executed in the data source.</span></span> <span data-ttu-id="b1e86-105">Você pode validar os dados, examine os erros de validação da classe de dados ou alterar um valor antes da atualização.</span><span class="sxs-lookup"><span data-stu-id="b1e86-105">You can then validate the data, examine validation errors from the data class, or change a value before the update.</span></span> <span data-ttu-id="b1e86-106">Você também pode cancelar a operação de inserção.</span><span class="sxs-lookup"><span data-stu-id="b1e86-106">You can also cancel the insert operation.</span></span>  
  
 <span data-ttu-id="b1e86-107">Se o objeto que representa a fonte de dados gera uma exceção de validação antes de inserir os dados, o <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> propriedade contém uma instância do <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> classe.</span><span class="sxs-lookup"><span data-stu-id="b1e86-107">If the object that represents the data source throws a validation exception before it inserts the data, the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> property contains an instance of the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> class.</span></span> <span data-ttu-id="b1e86-108">Você pode recuperar todas as exceções de validação por meio de <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="b1e86-108">You can retrieve all the validation exceptions through the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> property.</span></span> <span data-ttu-id="b1e86-109">Se nenhuma exceção de validação for lançada, o <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> propriedade contém `null`.</span><span class="sxs-lookup"><span data-stu-id="b1e86-109">If no validation exception is thrown, the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> property contains `null`.</span></span> <span data-ttu-id="b1e86-110">Se você lidar com as exceções de validação e não quiser que a exceção seja gerada novamente, defina o <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A> propriedade `true`.</span><span class="sxs-lookup"><span data-stu-id="b1e86-110">If you handle the validation exceptions and do not want the exception to be re-thrown, set the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A> property to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b1e86-111">O exemplo a seguir mostra um manipulador para o <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> evento.</span><span class="sxs-lookup"><span data-stu-id="b1e86-111">The following example shows a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event.</span></span> <span data-ttu-id="b1e86-112">O objeto a partir de <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> propriedade é convertida em um tipo denominado `Product`.</span><span class="sxs-lookup"><span data-stu-id="b1e86-112">The object from the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property is cast to a type named `Product`.</span></span> <span data-ttu-id="b1e86-113">O `DateModified` propriedade o `Product` objeto é definido como a data e hora atuais.</span><span class="sxs-lookup"><span data-stu-id="b1e86-113">The `DateModified` property of the `Product` object is set to the current date and time.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Inserting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Inserting/cs/Default.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.Inserting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Inserting/vb/Default.aspx.vb#1)]  
  
 <span data-ttu-id="b1e86-114">O exemplo a seguir mostra um manipulador de eventos para o <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> evento.</span><span class="sxs-lookup"><span data-stu-id="b1e86-114">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event.</span></span> <span data-ttu-id="b1e86-115">Exibe qualquer mensagem de exceção de validação usando um <xref:System.Web.UI.WebControls.Label> controle.</span><span class="sxs-lookup"><span data-stu-id="b1e86-115">It displays any validation exception messages by using a <xref:System.Web.UI.WebControls.Label> control.</span></span>  
  
```vb  
Protected Sub LinqDataSource_Inserting(ByVal sender As Object, _  
        ByVal e As LinqDataSourceInsertEventArgs)  
    If (e.Exception IsNot Nothing) Then  
        For Each innerException As KeyValuePair(Of String, Exception) _  
               In e.Exception.InnerExceptions  
            Label1.Text &= innerException.Key & ": " & _  
                innerException.Value.Message + "<br />"  
        Next  
        e.ExceptionHandled = True  
    End If  
End Sub  
```  
  
```csharp  
protected void LinqDataSource_Inserting(object sender,   
        LinqDataSourceInsertEventArgs e)  
{  
    if (e.Exception != null)  
    {  
        foreach (KeyValuePair<string, Exception> innerException in   
             e.Exception.InnerExceptions)  
        {  
        Label1.Text += innerException.Key + ": " +   
            innerException.Value.Message + "<br />";  
        }  
        e.ExceptionHandled = true;  
    }  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b1e86-116">Inicializa uma nova instância da classe <see cref="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1e86-116">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceInsertEventArgs (object newObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object newObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (newObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceInsertEventArgs(System::Object ^ newObject);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="newObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="newObject">
          <span data-ttu-id="b1e86-117">Um objeto que contém os dados a serem inseridos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1e86-117">An object that contains the data to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b1e86-118">Inicializa uma nova instância da classe <see cref="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1e86-118">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceInsertEventArgs (System.Web.UI.WebControls.LinqDataSourceValidationException exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.LinqDataSourceValidationException exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (exception As LinqDataSourceValidationException)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceInsertEventArgs(System::Web::UI::WebControls::LinqDataSourceValidationException ^ exception);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="exception" Type="System.Web.UI.WebControls.LinqDataSourceValidationException" />
      </Parameters>
      <Docs>
        <param name="exception">
          <span data-ttu-id="b1e86-119">A exceção que ocorreu quando os dados a serem inseridos estavam sendo validados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1e86-119">The exception that occurred when the data to insert was being validated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b1e86-120">Inicializa uma nova instância da classe <see cref="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" /> e especifica a exceção fornecida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1e86-120">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" /> class and specifies the provided exception.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.LinqDataSourceValidationException Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.LinqDataSourceValidationException Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As LinqDataSourceValidationException" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::LinqDataSourceValidationException ^ Exception { System::Web::UI::WebControls::LinqDataSourceValidationException ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.LinqDataSourceValidationException</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b1e86-121">Obtém a exceção gerada enquanto os dados estavam sendo validados antes da operação de inserção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1e86-121">Gets the exception that was thrown while the data was being validated before the insert operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b1e86-122">A exceção se ocorreu um erro; Caso contrário, <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1e86-122">The exception, if an error occurred; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1e86-123">Se uma exceção de validação é lançada antes da operação de inserção é executada, a exceção é armazenada no <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="b1e86-123">If a validation exception is thrown before the insert operation is performed, the exception is stored in the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> property.</span></span> <span data-ttu-id="b1e86-124">Em um manipulador para o <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> eventos, você pode recuperar a exceção por meio de <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="b1e86-124">In a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event, you can retrieve the exception through the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b1e86-125">O exemplo a seguir mostra um manipulador para o <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> evento.</span><span class="sxs-lookup"><span data-stu-id="b1e86-125">The following example shows a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event.</span></span> <span data-ttu-id="b1e86-126">Exibe qualquer mensagem de exceção de validação usando um <xref:System.Web.UI.WebControls.Label> controle.</span><span class="sxs-lookup"><span data-stu-id="b1e86-126">It displays any validation exception messages by using a <xref:System.Web.UI.WebControls.Label> control.</span></span>  
  
```vb  
Protected Sub LinqDataSource_Inserting(ByVal sender As Object, _  
        ByVal e As LinqDataSourceInsertEventArgs)  
    If (e.Exception IsNot Nothing) Then  
        For Each innerException As KeyValuePair(Of String, Exception) _  
               In e.Exception.InnerExceptions  
            Label1.Text &= innerException.Key & ": " & _  
                innerException.Value.Message + "<br />"  
        Next  
        e.ExceptionHandled = True  
    End If  
End Sub  
```  
  
```csharp  
protected void LinqDataSource_Inserting(object sender,   
        LinqDataSourceInsertEventArgs e)  
{  
    if (e.Exception != null)  
    {  
        foreach (KeyValuePair<string, Exception> innerException in   
             e.Exception.InnerExceptions)  
        {  
        Label1.Text += innerException.Key + ": " +   
            innerException.Value.Message + "<br />";  
        }  
        e.ExceptionHandled = true;  
    }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b1e86-127">Obtém ou define um valor que indica se a exceção foi tratada e que ela não deve ser gerada novamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1e86-127">Gets or sets a value that indicates whether the exception was handled and that it should not be thrown again.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b1e86-128">
            <see langword="true" /> Se a exceção foi tratada; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1e86-128">
              <see langword="true" /> if the exception was handled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1e86-129">Você pode criar manipuladores de eventos para o <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> evento para examinar as exceções de validação que ocorreram antes da operação de inserção.</span><span class="sxs-lookup"><span data-stu-id="b1e86-129">You can create event handlers for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event to examine validation exceptions that occurred before the insert operation.</span></span> <span data-ttu-id="b1e86-130">Se você lidar com a exceção e não quiser que ele seja gerada novamente, defina o <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A> propriedade `true`.</span><span class="sxs-lookup"><span data-stu-id="b1e86-130">If you handle the exception and do not want it to be thrown again, set the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A> property to `true`.</span></span> <span data-ttu-id="b1e86-131">Se você não definir a <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A> propriedade `true`, a exceção será propagada para o manipulador de eventos Avançar na pilha de chamadas.</span><span class="sxs-lookup"><span data-stu-id="b1e86-131">If you do not set the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A> property to `true`, the exception will be propagated to the next event handler in the call stack.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b1e86-132">O exemplo a seguir mostra um manipulador de eventos para o <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> evento.</span><span class="sxs-lookup"><span data-stu-id="b1e86-132">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event.</span></span> <span data-ttu-id="b1e86-133">Exibe qualquer mensagem de exceção de validação usando um <xref:System.Web.UI.WebControls.Label> controle.</span><span class="sxs-lookup"><span data-stu-id="b1e86-133">It displays any validation exception messages by using a <xref:System.Web.UI.WebControls.Label> control.</span></span>  
  
```vb  
Protected Sub LinqDataSource_Inserting(ByVal sender As Object, _  
        ByVal e As LinqDataSourceInsertEventArgs)  
    If (e.Exception IsNot Nothing) Then  
        For Each innerException As KeyValuePair(Of String, Exception) _  
               In e.Exception.InnerExceptions  
            Label1.Text &= innerException.Key & ": " & _  
                innerException.Value.Message + "<br />"  
        Next  
        e.ExceptionHandled = True  
    End If  
End Sub  
```  
  
```csharp  
protected void LinqDataSource_Inserting(object sender,   
        LinqDataSourceInsertEventArgs e)  
{  
    if (e.Exception != null)  
    {  
        foreach (KeyValuePair<string, Exception> innerException in   
             e.Exception.InnerExceptions)  
        {  
        Label1.Text += innerException.Key + ": " +   
            innerException.Value.Message + "<br />";  
        }  
        e.ExceptionHandled = true;  
    }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewObject">
      <MemberSignature Language="C#" Value="public object NewObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object NewObject" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NewObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ NewObject { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b1e86-134">Obtém um objeto que contém os dados a serem inseridos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1e86-134">Gets the object that contains the data to insert.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b1e86-135">Um objeto que contém os dados a serem inseridos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1e86-135">An object that contains the data to insert.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1e86-136">O <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> propriedade contém os dados que serão inseridos na fonte de dados.</span><span class="sxs-lookup"><span data-stu-id="b1e86-136">The <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property contains the data that will be inserted into the data source.</span></span> <span data-ttu-id="b1e86-137">Criar um manipulador para o <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> eventos e recuperar o <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> propriedade para validar os dados, alterar os dados ou cancelar a operação de inserção antes que a operação de dados seja executada.</span><span class="sxs-lookup"><span data-stu-id="b1e86-137">Create a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event and retrieve the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property in order to validate the data, change the data, or cancel the insert operation before the data operation is executed.</span></span>  
  
 <span data-ttu-id="b1e86-138">O <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> propriedade retorna um objeto do tipo <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="b1e86-138">The <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property returns an object of type <xref:System.Object>.</span></span> <span data-ttu-id="b1e86-139">Você pode converter esse objeto para o tipo da classe que representa os dados.</span><span class="sxs-lookup"><span data-stu-id="b1e86-139">You can cast this object to the type of the class that represents the data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b1e86-140">O exemplo a seguir mostra um manipulador para o <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> evento.</span><span class="sxs-lookup"><span data-stu-id="b1e86-140">The following example shows a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event.</span></span> <span data-ttu-id="b1e86-141">O objeto a partir de <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> propriedade é convertida em um tipo denominado `Product`.</span><span class="sxs-lookup"><span data-stu-id="b1e86-141">The object from the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property is cast to a type named `Product`.</span></span> <span data-ttu-id="b1e86-142">O `DateModified` propriedade o `Product` objeto é definido como a data e hora atuais.</span><span class="sxs-lookup"><span data-stu-id="b1e86-142">The `DateModified` property of the `Product` object is set to the current date and time.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Inserting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Inserting/cs/Default.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.Inserting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Inserting/vb/Default.aspx.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>