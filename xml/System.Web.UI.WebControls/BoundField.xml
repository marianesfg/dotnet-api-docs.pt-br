<Type Name="BoundField" FullName="System.Web.UI.WebControls.BoundField">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4b9e8241ad9a167f538fa07733190119b6dba892" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37743054" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class BoundField : System.Web.UI.WebControls.DataControlField" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BoundField extends System.Web.UI.WebControls.DataControlField" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.BoundField" />
  <TypeSignature Language="VB.NET" Value="Public Class BoundField&#xA;Inherits DataControlField" />
  <TypeSignature Language="C++ CLI" Value="public ref class BoundField : System::Web::UI::WebControls::DataControlField" />
  <TypeSignature Language="F#" Value="type BoundField = class&#xA;    inherit DataControlField" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.DataControlField</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents a field that is displayed as text in a data-bound control.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.BoundField> classe é usada pelos controles ligados a dados (como <xref:System.Web.UI.WebControls.GridView> e <xref:System.Web.UI.WebControls.DetailsView>) para exibir o valor de um campo como texto. O <xref:System.Web.UI.WebControls.BoundField> objeto é exibido de modo diferente, dependendo do controle associado a dados no qual ele é usado. Por exemplo, o <xref:System.Web.UI.WebControls.GridView> controle exibe uma <xref:System.Web.UI.WebControls.BoundField> objeto como uma coluna, enquanto o <xref:System.Web.UI.WebControls.DetailsView> controle exibe como uma linha.  
  
 Para especificar o campo a ser exibido em uma <xref:System.Web.UI.WebControls.BoundField> do objeto, defina o <xref:System.Web.UI.WebControls.BoundField.DataField%2A> propriedade para o nome do campo. O valor do campo pode ser codificada em HTML antes de ser exibido, definindo a <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> propriedade para `true`. Você pode aplicar uma cadeia de caracteres de formatação personalizada para o valor do campo, definindo o <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> propriedade. Quando o <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> é de propriedade `true`, o valor de cadeia de caracteres codificada do campo é usado na cadeia de caracteres de formato personalizado. Por padrão, a cadeia de caracteres de formatação é aplicada aos valores de campo somente quando o controle associado a dados está no modo somente leitura. Para aplicar a cadeia de caracteres de formatação para valores exibidos enquanto o controle associado a dados está no modo de edição, defina a <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> propriedade para `true`. Se um valor de campo é nulo, você pode exibir uma legenda personalizada, definindo o <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> propriedade. O <xref:System.Web.UI.WebControls.BoundField> objeto automaticamente também pode converter a cadeia de caracteres vazia ("") campo valores para valores nulos definindo o <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A> propriedade `true`.  
  
 Você pode ocultar uma <xref:System.Web.UI.WebControls.BoundField> objeto em um controle associado a dados, definindo o <xref:System.Web.UI.WebControls.DataControlField.Visible%2A> propriedade `false`. Para impedir que o valor de um campo que está sendo modificado no modo de edição, defina a <xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> propriedade para `true`. Na associação de dados, controles que dão suporte à inserção de registros (como o <xref:System.Web.UI.WebControls.DetailsView> controle), você pode ocultar uma <xref:System.Web.UI.WebControls.BoundField> objeto definindo o <xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A> propriedade `false`. Normalmente, isso é feito quando você desejar ocultar um campo de chave gerado automaticamente no modo de inserção.  
  
 Você pode personalizar as seções de cabeçalho e rodapé de um <xref:System.Web.UI.WebControls.BoundField> objeto. Para exibir uma legenda nas seções de cabeçalho ou rodapé, defina as <xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A> ou <xref:System.Web.UI.WebControls.DataControlField.FooterText%2A> propriedades, respectivamente. Em vez de exibir texto na seção de cabeçalho, você pode exibir uma imagem, definindo o <xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A> propriedade. A seção de cabeçalho pode ser ocultada na <xref:System.Web.UI.WebControls.BoundField> objeto, definindo o <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A> propriedade `false`.  
  
> [!NOTE]
>  Alguns controles ligados a dados (como o <xref:System.Web.UI.WebControls.GridView> controle) pode mostrar ou ocultar apenas a seção de todo o cabeçalho do controle. Esses controles ligados a dados não dão suporte a <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A> propriedade para um campo associado individual. Para mostrar ou ocultar a seção de todo o cabeçalho de um controle associado a dados (se disponível), use o controle `ShowHeader` propriedade.  
  
 Você também pode personalizar a aparência do <xref:System.Web.UI.WebControls.BoundField> objeto (cor da fonte, cor de plano de fundo e assim por diante), definindo as propriedades de estilo para as diferentes partes do campo. A tabela a seguir lista as propriedades de estilo diferente.  
  
|Propriedade de estilo|Descrição|  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>|As configurações de estilo para controles de servidor Web filho do <xref:System.Web.UI.WebControls.BoundField> objeto.|  
|<xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A>|As configurações de estilo para a seção de rodapé o <xref:System.Web.UI.WebControls.BoundField> objeto.|  
|<xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A>|As configurações de estilo para a seção de cabeçalho a <xref:System.Web.UI.WebControls.BoundField> objeto.|  
|<xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A>|As configurações de estilo para os itens de dados no <xref:System.Web.UI.WebControls.BoundField> objeto.|  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar um <xref:System.Web.UI.WebControls.BoundField> objeto para exibir os valores de um campo em um <xref:System.Web.UI.WebControls.GridView> controle.  
  
 [!code-aspx-csharp[BoundField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundField/CS/boundfieldcs.aspx#1)]
 [!code-aspx-vb[BoundField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundField/VB/boundfieldvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.GridView" />
    <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
    <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
    <altmember cref="P:System.Web.UI.WebControls.DetailsView.Fields" />
    <altmember cref="T:System.Web.UI.WebControls.ButtonField" />
    <altmember cref="T:System.Web.UI.WebControls.CheckBoxField" />
    <altmember cref="T:System.Web.UI.WebControls.CommandField" />
    <altmember cref="T:System.Web.UI.WebControls.DataControlField" />
    <altmember cref="T:System.Web.UI.WebControls.HyperLinkField" />
    <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
    <altmember cref="P:System.Web.UI.WebControls.DataControlField.InsertVisible" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.NullDisplayText" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.ReadOnly" />
    <altmember cref="P:System.Web.UI.WebControls.CheckBoxField.Text" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull" />
    <altmember cref="P:System.Web.UI.WebControls.DataControlField.Visible" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BoundField ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BoundField();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.BoundField" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usar esse construtor para inicializar uma nova instância do <xref:System.Web.UI.WebControls.BoundField> classe. Este construtor é comumente usado ao adicionar campos a um controle de associação de dados criado dinamicamente.  
  
 Adicionar dinamicamente uma <xref:System.Web.UI.WebControls.BoundField> do objeto para um controle associado a dados, crie um novo <xref:System.Web.UI.WebControls.BoundField> do objeto, defina suas propriedades e, em seguida, adicioná-lo à coleção de campos do controle associado a dados. Por exemplo, se você estiver usando o <xref:System.Web.UI.WebControls.GridView> de controle, adicione o <xref:System.Web.UI.WebControls.BoundField> do objeto para o <xref:System.Web.UI.WebControls.GridView.Columns%2A> coleção.  
  
> [!NOTE]
>  Embora dinamicamente, você pode adicionar campos a um controle associado a dados, é altamente recomendável que campos ser estaticamente declarados e, em seguida, mostrados ou ocultados, conforme apropriado. Declarar estaticamente todos os seus campos reduz o tamanho do estado de exibição para o controle de associação de dados pai.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o construtor para adicionar dinamicamente uma <xref:System.Web.UI.WebControls.BoundField> do objeto para um <xref:System.Web.UI.WebControls.GridView> controle.  
  
 [!code-aspx-csharp[BoundFieldCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundFieldCtor/CS/boundfieldctorcs.aspx#1)]
 [!code-aspx-vb[BoundFieldCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundFieldCtor/VB/boundfieldctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
      </Docs>
    </Member>
    <Member MemberName="ApplyFormatInEditMode">
      <MemberSignature Language="C#" Value="public virtual bool ApplyFormatInEditMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ApplyFormatInEditMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ApplyFormatInEditMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ApplyFormatInEditMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ApplyFormatInEditMode : bool with get, set" Usage="System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether the formatting string specified by the <see cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" /> property is applied to field values when the data-bound control that contains the <see cref="T:System.Web.UI.WebControls.BoundField" /> object is in edit mode.</summary>
        <value>
          <see langword="true" /> para aplicar a cadeia de caracteres de formatação aos valores de campo no modo de edição; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Controles ligados a dados (como <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.FormView>, e <xref:System.Web.UI.WebControls.GridView>) têm diferentes modos de exibição que permitem ao usuário ler, editar ou inserir registros. Por padrão, a cadeia de caracteres de formatação especificada pela <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> propriedade é aplicada aos valores de campo somente quando o controle associado a dados está no modo somente leitura. Para aplicar a cadeia de caracteres de formatação para valores exibidos enquanto o controle associado a dados está no modo de edição, defina a <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> propriedade para `true`.  
  
> [!NOTE]
>  Um <xref:System.Web.UI.WebControls.BoundField> objeto não remove automaticamente a formatação quando o campo é atualizado na fonte de dados. Se você não quiser que a formatação como parte do valor armazenado, você precisará remover a formatação de forma programática.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> propriedade para aplicar a formatação da cadeia de caracteres para valores de campo enquanto um <xref:System.Web.UI.WebControls.GridView> controle está no modo de edição. A formatação é, em seguida, por meio de programação removida antes que o valor é atualizado na fonte de dados.  
  
 [!code-aspx-csharp[BoundFieldApplyFormatInEditMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/boundfieldapplyformatineditmode/CS/boundfieldapplyformatineditmodecs.aspx#1)]
 [!code-aspx-vb[BoundFieldApplyFormatInEditMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/boundfieldapplyformatineditmode/VB/boundfieldapplyformatineditmodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdating" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdating" />
      </Docs>
    </Member>
    <Member MemberName="ConvertEmptyStringToNull">
      <MemberSignature Language="C#" Value="public virtual bool ConvertEmptyStringToNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConvertEmptyStringToNull" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ConvertEmptyStringToNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ConvertEmptyStringToNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ConvertEmptyStringToNull : bool with get, set" Usage="System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether empty string values ("") are automatically converted to null values when the data field is updated in the data source.</summary>
        <value>
          <see langword="true" /> para converter automaticamente os valores de cadeia de caracteres vazia em valores nulos; caso contrário, o <see langword="false" />. O padrão é <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Às vezes, o usuário pode inserir uma cadeia de caracteres vazia para um valor de campo ao atualizar ou inserir registros. Use o <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A> propriedade para especificar se um valor de cadeia de caracteres vazia é automaticamente convertido em nulo quando o campo de dados é atualizado na fonte de dados.  
  
> [!NOTE]
>  Por padrão, um <xref:System.Web.UI.WebControls.BoundField> objeto exibe valores nulos como cadeias de caracteres vazias. Para exibir um valor diferente, defina o <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> propriedade.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A> propriedade para especificar que uma cadeia de caracteres vazia ("") o valor de campo automaticamente deve ser convertido em nulo.  
  
 [!code-aspx-csharp[BoundFieldConvertEmptyStringToNull#1](~/samples/snippets/csharp/VS_Snippets_WebNet/boundfieldconvertemptystringtonull/CS/boundfieldconvertemptystingtonullcs.aspx#1)]
 [!code-aspx-vb[BoundFieldConvertEmptyStringToNull#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/boundfieldconvertemptystringtonull/VB/boundfieldconvertemptystingtonullvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.NullDisplayText" />
      </Docs>
    </Member>
    <Member MemberName="CopyProperties">
      <MemberSignature Language="C#" Value="protected override void CopyProperties (System.Web.UI.WebControls.DataControlField newField);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CopyProperties(class System.Web.UI.WebControls.DataControlField newField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CopyProperties (newField As DataControlField)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CopyProperties(System::Web::UI::WebControls::DataControlField ^ newField);" />
      <MemberSignature Language="F#" Value="override this.CopyProperties : System.Web.UI.WebControls.DataControlField -&gt; unit" Usage="boundField.CopyProperties newField" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newField" Type="System.Web.UI.WebControls.DataControlField" />
      </Parameters>
      <Docs>
        <param name="newField">The <see cref="T:System.Web.UI.WebControls.DataControlField" /> to copy the properties of the current <see cref="T:System.Web.UI.WebControls.BoundField" /> to.</param>
        <summary>Copies the properties of the current <see cref="T:System.Web.UI.WebControls.BoundField" /> object to the specified <see cref="T:System.Web.UI.WebControls.DataControlField" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.BoundField.CopyProperties%2A> é um método auxiliar usado pelas <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=nameWithType> método para copiar as propriedades do atual <xref:System.Web.UI.WebControls.BoundField> do objeto para o <xref:System.Web.UI.WebControls.DataControlField> objeto criado pelo método.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.CloneField" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.CreateField" />
      </Docs>
    </Member>
    <Member MemberName="CreateField">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.DataControlField CreateField ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.DataControlField CreateField() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.CreateField" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateField () As DataControlField" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::DataControlField ^ CreateField();" />
      <MemberSignature Language="F#" Value="override this.CreateField : unit -&gt; System.Web.UI.WebControls.DataControlField" Usage="boundField.CreateField " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataControlField</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates an empty <see cref="T:System.Web.UI.WebControls.BoundField" /> object.</summary>
        <returns>An empty <see cref="T:System.Web.UI.WebControls.BoundField" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.BoundField.CreateField%2A> é um método auxiliar usado pelo <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=nameWithType> método para criar vazio <xref:System.Web.UI.WebControls.BoundField> objeto para copiar as propriedades do atual <xref:System.Web.UI.WebControls.BoundField> do objeto para.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.CloneField" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      </Docs>
    </Member>
    <Member MemberName="DataField">
      <MemberSignature Language="C#" Value="public virtual string DataField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.DataField" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataField : string with get, set" Usage="System.Web.UI.WebControls.BoundField.DataField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the data field to bind to the <see cref="T:System.Web.UI.WebControls.BoundField" /> object.</summary>
        <value>O nome do campo de dados a ser associado ao <see cref="T:System.Web.UI.WebControls.BoundField" />. O padrão é uma cadeia de caracteres vazia (""), que indica que essa propriedade não está definida.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.BoundField.DataField%2A> propriedade para especificar o nome do campo de dados para associar ao <xref:System.Web.UI.WebControls.BoundField> objeto. Os valores do campo especificado são exibidos no <xref:System.Web.UI.WebControls.BoundField> objeto como texto. Opcionalmente, você pode formatar o texto exibido, definindo o <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> propriedade.  
  
> [!NOTE]
>  Se um valor de campo é nulo, uma cadeia de caracteres vazia ("") é exibido para o valor por padrão. Para especificar uma legenda alternativa, defina o <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> propriedade.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.BoundField.DataField%2A> propriedade para especificar qual campo a ser exibido em um <xref:System.Web.UI.WebControls.BoundField> coluna de campo de um <xref:System.Web.UI.WebControls.GridView> controle.  
  
 [!code-aspx-csharp[BoundField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundField/CS/boundfieldcs.aspx#1)]
 [!code-aspx-vb[BoundField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundField/VB/boundfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.NullDisplayText" />
      </Docs>
    </Member>
    <Member MemberName="DataFormatString">
      <MemberSignature Language="C#" Value="public virtual string DataFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataFormatString : string with get, set" Usage="System.Web.UI.WebControls.BoundField.DataFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the string that specifies the display format for the value of the field.</summary>
        <value>Uma cadeia de formatação que especifica o formato de exibição para o valor do campo. O padrão é uma cadeia de caracteres vazia (""), o que indica que nenhuma formatação especial é aplicada ao valor do campo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> propriedade para especificar um formato de exibição personalizado para os valores que são exibidos no <xref:System.Web.UI.WebControls.BoundField> objeto. Se o <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> não está definida, o valor do campo é exibido sem qualquer formatação especial.  
  
> [!NOTE]
>  Em versões anteriores à 3.5 do ASP.NET, você deve definir a <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> propriedade para `false` para formatar os campos que são não tipos de dados string. Caso contrário, o valor do campo é convertido em uma cadeia de caracteres, o método de conversão padrão antes da cadeia de caracteres de formato que é armazenado no <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> propriedade é aplicada.  
  
 Por padrão, a cadeia de caracteres de formatação é aplicada ao valor do campo somente quando o controle associado a dados que contém o <xref:System.Web.UI.WebControls.BoundField> objeto está no modo somente leitura. Para aplicar a cadeia de caracteres de formatação para valores de campo no modo de edição, defina a <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> propriedade para `true`.  
  
 A cadeia de caracteres de formatação pode ser qualquer cadeia de caracteres literal e geralmente inclui um espaço reservado para o valor do campo. Por exemplo, na cadeia de formatação `Item Value: {0}`, o valor do campo é substituído para o {0} espaço reservado quando a cadeia de caracteres é exibida no <xref:System.Web.UI.WebControls.BoundField> objeto. O restante da cadeia de caracteres de formatação é exibido como texto literal.  
  
 Se a cadeia de caracteres de formatação não incluir um espaço reservado, somente a cadeia de formatação em si está incluída no texto de exibição final (o valor do campo da fonte de dados não está incluído). Se o espaço reservado é 0 (zero) entre chaves, conforme mostrado no exemplo anterior, o valor do campo é convertido em uma cadeia de caracteres pelo método padrão. Você pode incluir o zero uma cadeia de caracteres que especifica como o valor do campo deve ser formatado. Por exemplo, o espaço reservado `{0:C}` para um campo numérico que especifica que o valor do campo deve ser convertido em um formato de moeda.  
  
 A formatação é aplicada usando o <xref:System.String.Format%2A> método. O número que segue a chave de abertura é parte da sintaxe usada por esse método e indica que uma de uma série de valores que o espaço reservado deve usar. Como há apenas um valor de campo em cada célula, o número que segue a chave de abertura só pode ser definido como 0.  
  
 A tabela a seguir lista os caracteres de formato padrão para campos numéricos. Esses caracteres de formato não diferenciam maiusculas de minúsculas, exceto para `X`, que exibe caracteres hexadecimais no caso em que é especificado. Você pode acrescentar um número para a maioria dos caracteres de formato para especificar o número de dígitos significativos ou casas decimais deseja exibir.  
  
> [!NOTE]
>  Na maioria dos casos, formatação depende de configuração de cultura do servidor. Os exemplos são para uma configuração de cultura `en-US`.  
  
|Caractere de formato|Descrição|Exemplo|  
|----------------------|-----------------|-------------|  
|`C` ou `c`|Exibe valores numéricos em formato de moeda. Você pode especificar o número de casas decimais.|Formato: `{0:C}`.<br /><br /> 123.456 -> $123.46<br /><br /> Formato: `{0:C3}`.<br /><br /> 123.456  -> $123.456|  
|`D` ou `d`|Exibe valores inteiros em formato decimal. Você pode especificar o número de dígitos. (Embora o tipo é conhecido como "decimal", os números são formatados como números inteiros).|Formato: `{0:D}`.<br /><br /> 1234 -> 1234<br /><br /> Formato: `{0:D6}`.<br /><br /> 1234  -> 001234|  
|`E` ou `e`|Exibe valores numéricos em formato científico de (exponencial). Você pode especificar o número de casas decimais.|Formato: `{0:E}`.<br /><br /> 1052.0329112756 -&GT; 1.052033E + 003<br /><br /> Formato: `{0:E2}`.<br /><br /> ->-1052.0329112756-1.05e + 003|  
|`F` ou `f`|Exibe valores numéricos em um formato fixo. Você pode especificar o número de casas decimais.|Formato: `{0:F}`.<br /><br /> 1234.567 -> 1234.57<br /><br /> Formato: `{0:F3}`.<br /><br /> 1234.567 -> 1234.567|  
|`G` ou `g`|Exibe valores numéricos no formato geral (mais compact de notação de ponto fixo ou científica). Você pode especificar o número de dígitos significativos.|Formato: `{0:G}`.<br /><br /> -123.456 -> -123.456<br /><br /> Formato: `{0:G2}`.<br /><br /> -123.456 -> -120|  
|`N` ou `n`|Exibe valores numéricos no formato de número (incluindo o sinal negativo opcional e separadores de grupo). Você pode especificar o número de casas decimais.|Formato: `{0:N}`.<br /><br /> 1234.567 -> 1,234.57<br /><br /> Formato: `{0:N4}`.<br /><br /> 1234.567 -> 1,234.5670|  
|`P` ou `p`|Exibe valores numéricos no formato de porcentagem. Você pode especificar o número de casas decimais.|Formato: `{0:P}`.<br /><br /> 1 -> 100.00%<br /><br /> Formato: `{0:P1}`.<br /><br /> .5 -> 50.0%|  
|`R` ou `r`|Exibe <xref:System.Single>, <xref:System.Double>, ou `BigInteger` valores no formato de ida e volta.|Formato: `{0:R}`.<br /><br /> 123456789.12345678 -> 123456789.12345678|  
|`X` ou `x`|Exibe valores inteiros em formato hexadecimal. Você pode especificar o número de dígitos.|Formato: `{0:X}`.<br /><br /> 255 -> FF<br /><br /> Formato: `{0:x4}`.<br /><br /> 255 -> 00ff|  
  
 Para obter mais informações e exemplos que mostram a formatação para outros valores de cultura, consulte [cadeias de caracteres de formato numérico padrão](~/docs/standard/base-types/standard-numeric-format-strings.md). Você também pode criar cadeias de caracteres de formato numérico personalizado. Para obter mais informações, consulte [Cadeias de caracteres de formato numérico personalizado](~/docs/standard/base-types/custom-numeric-format-strings.md).  
  
 A tabela a seguir lista os caracteres de formato para <xref:System.DateTime> campos. A maioria desses especificações de formatação resulta em uma saída diferente dependendo das configurações de cultura. Os exemplos são para um <xref:System.DateTime> valor de 6/15/2009 1:45:30 PM com uma configuração de cultura `en-US`.  
  
|Caractere de formato|Descrição|Exemplo|  
|----------------------|-----------------|-------------|  
|`d`|Padrão de data abreviada.|Formato: `{0:d}`.<br /><br /> 6/15/2009 1:45:30 PM -&GT; 6/15/2009|  
|`D`|Padrão de data completa.|Formato: `{0:D}`.<br /><br /> 6/15/2009 1:45:30 PM -> segunda-feira, 15 de junho de 2009|  
|`f`|Padrão de data/hora completa (hora abreviada).|Formato: `{0:f}`.<br /><br /> 6/15/2009 1:45:30 PM -> segunda-feira, 15 de junho de 2009 1:45 PM|  
|`F`|Padrão de data/hora completa (hora completa).|Formato: `{0:F}`.<br /><br /> 6/15/2009 1:45:30 PM -> segunda-feira, 15 de junho de 2009 1:45:30 PM|  
|`g`|Padrão geral de data/hora (hora abreviada).|Formato: `{0:g}`.<br /><br /> 6/15/2009 1:45:30 PM -&GT; 6/15/2009 1:45 PM|  
|`G`|Padrão geral de data/hora (hora completa).|Formato: `{0:G}`.<br /><br /> 6/15/2009 1:45:30 PM -&GT; 6/15/2009 1:45:30 PM|  
|`M` ou `m`|Padrão de mês/dia.|Formato: `{0:M}`.<br /><br /> 6/15/2009 1:45:30 PM -> dia 15 de junho|  
|`O` ou `o`|Padrão de data/hora de ida e volta.|Formato: `{0:o}`.<br /><br /> 6/15/2009 1:45:30 PM -> 2009-06-15T13:45:30.0900000|  
|`R` ou `r`|Padrão RFC1123 (para obter informações, consulte <xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A?displayProperty=nameWithType>).|Formato: `{0:R}`.<br /><br /> 6/15/2009 1:45:30 PM -> Mon, 15 Jun 2009 20:45:30 GMT|  
|`s`|Padrão de data/hora classificável.|Formato: `{0:s}`.<br /><br /> 6/15/2009 1:45:30 PM -> 2009-06-15T13:45:30|  
|`t`|Padrão de hora abreviada.|Formato: `{0:t}`.<br /><br /> 6/15/2009 1:45:30 PM -&GT; 1:45 PM|  
|`T`|Padrão de hora completa.|Formato: `{0:T}`.<br /><br /> 6/15/2009 1:45:30 PM -&GT; 1:45:30 PM|  
|`u`|Padrão classificável universal de data/hora.|Formato: `{0:u}`.<br /><br /> 6/15/2009 1:45:30 PM -> 2009-06-15 20:45:30Z|  
|`U`|Padrão universal de data/hora completa.|Formato: `{0:U}`.<br /><br /> 6/15/2009 1:45:30 PM -> segunda-feira, 15 de junho de 2009 8:45:30 PM|  
|`Y` ou `y`|Padrão ano mês.|Formato: `{0:Y}`.<br /><br /> 6/15/2009 1:45:30 PM -> junho de 2009|  
  
 Para obter mais informações e exemplos que mostram a formatação para outros valores de cultura, consulte [padrão de data e cadeias de caracteres de formato de hora](~/docs/standard/base-types/standard-date-and-time-format-strings.md). Você também pode criar data personalizada e cadeias de caracteres de formato de hora. Para obter mais informações, consulte [Data personalizada e cadeias de caracteres de formato de hora](~/docs/standard/base-types/custom-date-and-time-format-strings.md).  
  
   
  
## Examples  
 Um projeto de site da Web do Visual Studio com o código-fonte está disponível para acompanhar este tópico: [baixar](http://go.microsoft.com/fwlink/?LinkId=191889).  
  
 O exemplo a seguir mostra como usar o <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> propriedade para especificar um formato de exibição personalizado para os valores de um campo.  
  
  
  
 O exemplo a seguir mostra uma linha da saída que é produzida por este exemplo.  
  
|ProductID|Nome|ProductNumber|ListPrice|Peso|ModifiedDate|  
|---------------|----------|-------------------|---------------|------------|------------------|  
|`000680`|`HL Road Frame - Black, 58`|`#FR-R92B-58`|`$1,431.50`|`1016.040`|`3/11/2004`|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode" />
      </Docs>
    </Member>
    <Member MemberName="ExtractValuesFromCell">
      <MemberSignature Language="C#" Value="public override void ExtractValuesFromCell (System.Collections.Specialized.IOrderedDictionary dictionary, System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ExtractValuesFromCell(class System.Collections.Specialized.IOrderedDictionary dictionary, class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ExtractValuesFromCell (dictionary As IOrderedDictionary, cell As DataControlFieldCell, rowState As DataControlRowState, includeReadOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ExtractValuesFromCell(System::Collections::Specialized::IOrderedDictionary ^ dictionary, System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlRowState rowState, bool includeReadOnly);" />
      <MemberSignature Language="F#" Value="override this.ExtractValuesFromCell : System.Collections.Specialized.IOrderedDictionary * System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlRowState * bool -&gt; unit" Usage="boundField.ExtractValuesFromCell (dictionary, cell, rowState, includeReadOnly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Specialized.IOrderedDictionary" />
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
        <Parameter Name="includeReadOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dictionary">A <see cref="T:System.Collections.IDictionary" /> used to store the values of the specified cell.</param>
        <param name="cell">The <see cref="T:System.Web.UI.WebControls.TableCell" /> that contains the values to retrieve.</param>
        <param name="rowState">One of the <see cref="T:System.Web.UI.WebControls.DataControlRowState" /> values.</param>
        <param name="includeReadOnly">
          <see langword="true" /> to include the values of read-only fields; otherwise, <see langword="false" />.</param>
        <summary>Fills the specified <see cref="T:System.Collections.IDictionary" /> object with the values from the specified <see cref="T:System.Web.UI.WebControls.TableCell" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.BoundField.ExtractValuesFromCell%2A> método é fornecido como uma maneira conveniente para recuperar os valores dos campos especificado <xref:System.Web.UI.WebControls.TableCell> do objeto em um <xref:System.Web.UI.WebControls.BoundField> objeto.  
  
> [!NOTE]
>  Esse método é usado principalmente por desenvolvedores de controle.  
  
 Esse método não tem um valor de retorno. Em vez disso, os valores de campo são retornados por referência por meio de <xref:System.Collections.IDictionary?displayProperty=nameWithType> objeto passado para o `dictionary` parâmetro. Depois que o método foi chamado, iterar por meio de <xref:System.Collections.IDictionary?displayProperty=nameWithType> objeto para acessar os valores de campo.  
  
> [!NOTE]
>  Se o <xref:System.Web.UI.WebControls.TableCell> objeto contém os valores de campo somente leitura, você deverá passar `true` para o `includeReadOnly` parâmetro para incluir esses valores.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
      </Docs>
    </Member>
    <Member MemberName="FormatDataValue">
      <MemberSignature Language="C#" Value="protected virtual string FormatDataValue (object dataValue, bool encode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string FormatDataValue(object dataValue, bool encode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.FormatDataValue(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function FormatDataValue (dataValue As Object, encode As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ FormatDataValue(System::Object ^ dataValue, bool encode);" />
      <MemberSignature Language="F#" Value="abstract member FormatDataValue : obj * bool -&gt; string&#xA;override this.FormatDataValue : obj * bool -&gt; string" Usage="boundField.FormatDataValue (dataValue, encode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataValue" Type="System.Object" />
        <Parameter Name="encode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dataValue">The field value to format.</param>
        <param name="encode">
          <see langword="true" /> to encode the value; otherwise, <see langword="false" />.</param>
        <summary>Formats the specified field value for a cell in the <see cref="T:System.Web.UI.WebControls.BoundField" /> object.</summary>
        <returns>The field value converted to the format specified by <see cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.BoundField.FormatDataValue%2A> é um método auxiliar usado para transformar um valor de campo para o formato especificado pelo <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> propriedade. Se um valor do campo é null, o valor da <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> propriedade é retornada.  
  
> [!NOTE]
>  Esse método é usado principalmente por desenvolvedores de controle.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao estender o <see cref="T:System.Web.UI.WebControls.BoundField" /> classe, você pode substituir este método para executar uma rotina de formatação personalizada.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetDesignTimeValue">
      <MemberSignature Language="C#" Value="protected virtual object GetDesignTimeValue ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetDesignTimeValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.GetDesignTimeValue" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetDesignTimeValue () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ GetDesignTimeValue();" />
      <MemberSignature Language="F#" Value="abstract member GetDesignTimeValue : unit -&gt; obj&#xA;override this.GetDesignTimeValue : unit -&gt; obj" Usage="boundField.GetDesignTimeValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieves the value used for a field's value when rendering the <see cref="T:System.Web.UI.WebControls.BoundField" /> object in a designer.</summary>
        <returns>The value to display in the designer as the field's value.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.BoundField.GetDesignTimeValue%2A> é um método auxiliar usado para determinar qual valor a ser exibida para um campo ao renderizar o <xref:System.Web.UI.WebControls.BoundField> objeto em um designer. Se os dados reais não podem ser recuperados da fonte de dados em tempo de design, o valor retornado por esse método é exibido em vez disso.  
  
> [!NOTE]
>  Esse método é usado principalmente por desenvolvedores de controle.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao estender o <see cref="T:System.Web.UI.WebControls.BoundField" /> classe, você pode substituir esse método para retornar um valor diferente a ser exibida para o campo em um designer.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.BoundField.GetValue(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="protected virtual object GetValue (System.Web.UI.Control controlContainer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetValue(class System.Web.UI.Control controlContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.GetValue(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetValue (controlContainer As Control) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ GetValue(System::Web::UI::Control ^ controlContainer);" />
      <MemberSignature Language="F#" Value="abstract member GetValue : System.Web.UI.Control -&gt; obj&#xA;override this.GetValue : System.Web.UI.Control -&gt; obj" Usage="boundField.GetValue controlContainer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controlContainer" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="controlContainer">The container for the field value.</param>
        <summary>Retrieves the value of the field bound to the <see cref="T:System.Web.UI.WebControls.BoundField" /> object.</summary>
        <returns>The value of the field bound to the <see cref="T:System.Web.UI.WebControls.BoundField" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.BoundField.GetValue%2A> é um método auxiliar usado para determinar o valor de um campo. Se o <xref:System.Web.UI.WebControls.BoundField> objeto está sendo exibido em um designer e o valor do campo não pode ser determinado em tempo de design, o valor retornado do <xref:System.Web.UI.WebControls.BoundField.GetDesignTimeValue%2A> método é retornado em vez do valor de campo reais.  
  
> [!NOTE]
>  Esse método é usado principalmente por desenvolvedores de controle.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">The container specified by the <paramref name="controlContainer" /> parameter is <see langword="null" />.  \- or -  The container specified by the <paramref name="controlContainer" /> parameter does not have a data item.  \- or -  The data field was not found.</exception>
        <block subset="none" type="overrides">
          <para>Ao estender o <see cref="T:System.Web.UI.WebControls.BoundField" /> classe, você pode substituir esse método para fornecer uma rotina personalizada para determinar o valor de um campo.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.BoundField.GetDesignTimeValue" />
      </Docs>
    </Member>
    <Member MemberName="HeaderText">
      <MemberSignature Language="C#" Value="public override string HeaderText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.HeaderText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property HeaderText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HeaderText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderText : string with get, set" Usage="System.Web.UI.WebControls.BoundField.HeaderText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the text that is displayed in the header of a data control.</summary>
        <value>O texto exibido no cabeçalho de um controle de dados. O valor padrão é uma cadeia de caracteres vazia ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.BoundField.HeaderText%2A> propriedade para identificar um campo em um controle de dados com um nome amigável. A aplicação mais comum dos <xref:System.Web.UI.WebControls.BoundField.HeaderText%2A> é de propriedade fornecer nomes de coluna significativos para os campos de associação de dados em um <xref:System.Web.UI.WebControls.GridView> ou <xref:System.Web.UI.WebControls.DetailsView> controle.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public virtual bool HtmlEncode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HtmlEncode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.HtmlEncode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HtmlEncode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HtmlEncode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HtmlEncode : bool with get, set" Usage="System.Web.UI.WebControls.BoundField.HtmlEncode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether field values are HTML-encoded before they are displayed in a <see cref="T:System.Web.UI.WebControls.BoundField" /> object.</summary>
        <value>
          <see langword="true" /> se os valores de campo forem codificados em HTML antes que sejam exibidos em um objeto <see cref="T:System.Web.UI.WebControls.BoundField" />; caso contrário, <see langword="false" />. O padrão é <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> propriedade para especificar se valores de campo são codificados em HTML para suas representações de cadeia de caracteres respectivos antes que eles sejam exibidos em um <xref:System.Web.UI.WebControls.BoundField> objeto. Por exemplo, se essa propriedade estiver `true`, um valor de cadeia de caracteres de "\<script >" seria processado como "&lt;script&gt;". Se essa propriedade for `false`, a cadeia de caracteres seria processada inalterado.  
  
> [!NOTE]
>  Os valores de campo codificação HTML ajuda a impedir que os ataques de script entre sites e conteúdo mal-intencionado seja exibida. Essa propriedade deve ser habilitada sempre que possível.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> propriedade para impedir que os valores de campo que está sendo codificada em HTML antes de serem exibidos em um <xref:System.Web.UI.WebControls.BoundField> objeto.  
  
 [!code-aspx-csharp[BoundFieldHtmlEncode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundFieldHtmlEncode/CS/BoundFieldHtmlEncodecs.aspx#1)]
 [!code-aspx-vb[BoundFieldHtmlEncode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundFieldHtmlEncode/VB/BoundFieldHtmlEncodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.HttpServerUtility.HtmlEncode" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.SupportsHtmlEncode" />
      </Docs>
    </Member>
    <Member MemberName="HtmlEncodeFormatString">
      <MemberSignature Language="C#" Value="public virtual bool HtmlEncodeFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HtmlEncodeFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HtmlEncodeFormatString As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HtmlEncodeFormatString { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HtmlEncodeFormatString : bool with get, set" Usage="System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether text that is created by applying the <see cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" /> property to the <see cref="T:System.Web.UI.WebControls.BoundField" /> value should be HTML encoded when it is displayed.</summary>
        <value>
          <see langword="true" /> para codificar o texto em HTML; caso contrário, <see langword="false" />. O padrão é <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Valores de codificação HTML podem ajudar a impedir que os ataques de script entre sites e conteúdo mal-intencionado seja exibida. A codificação HTML também é útil quando você deseja exibir o código HTML no navegador, como exibir a cadeia de caracteres "\<br / >" em vez de inserir uma quebra de linha (`<br/>` elemento) na página.  
  
> [!NOTE]
>  Esta propriedade é nova no ASP.NET 3.5. Definir essa propriedade como `false` restaura o comportamento padrão do <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> propriedade nas versões anteriores à 3.5 do ASP.NET. Para obter mais informações, consulte a propriedade <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.HtmlEncode" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override bool Initialize (bool enableSorting, System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Initialize(bool enableSorting, class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Initialize(bool enableSorting, System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="override this.Initialize : bool * System.Web.UI.Control -&gt; bool" Usage="boundField.Initialize (enableSorting, control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enableSorting" Type="System.Boolean" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="enableSorting">
          <see langword="true" /> if sorting is supported; otherwise, <see langword="false" />.</param>
        <param name="control">The data control that owns the <see cref="T:System.Web.UI.WebControls.BoundField" />.</param>
        <summary>Initializes the <see cref="T:System.Web.UI.WebControls.BoundField" /> object.</summary>
        <returns>
          <see langword="false" /> in all cases.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.BoundField.Initialize%2A> método é chamado pelo controle de dados com o qual o <xref:System.Web.UI.WebControls.BoundField> objeto está associado ao executar a inicialização do objeto básico para instâncias do campo, antes que o campo nunca é adicionado a uma coleção de linhas. Controles de dados como <xref:System.Web.UI.WebControls.DetailsView> e <xref:System.Web.UI.WebControls.GridView> chamar a <xref:System.Web.UI.WebControls.DataControlField.Initialize%2A> método na sua `CreateChildControls` métodos antes de outros métodos, como `CreateRow` são chamados para criar linhas específicas com os dados.  
  
 Chamada para esse método quando você estiver escrevendo uma associação de dados personalizada de controle que usa <xref:System.Web.UI.WebControls.TableCell> objetos para executar a inicialização básica para um <xref:System.Web.UI.WebControls.BoundField> objeto. Implementar esse método se sua <xref:System.Web.UI.WebControls.BoundField>-tipo derivado exige qualquer inicialização do objeto antes que ele ocupa <xref:System.Web.UI.WebControls.TableCell> controles na ou objetos com os dados a <xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A> método.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.Initialize(System.Boolean,System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeCell">
      <MemberSignature Language="C#" Value="public override void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InitializeCell(class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlCellType cellType, valuetype System.Web.UI.WebControls.DataControlRowState rowState, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InitializeCell (cell As DataControlFieldCell, cellType As DataControlCellType, rowState As DataControlRowState, rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InitializeCell(System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlCellType cellType, System::Web::UI::WebControls::DataControlRowState rowState, int rowIndex);" />
      <MemberSignature Language="F#" Value="override this.InitializeCell : System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlCellType * System.Web.UI.WebControls.DataControlRowState * int -&gt; unit" Usage="boundField.InitializeCell (cell, cellType, rowState, rowIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="cellType" Type="System.Web.UI.WebControls.DataControlCellType" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cell">The <see cref="T:System.Web.UI.WebControls.TableCell" /> to initialize.</param>
        <param name="cellType">One of the <see cref="T:System.Web.UI.WebControls.DataControlCellType" /> values.</param>
        <param name="rowState">One of the <see cref="T:System.Web.UI.WebControls.DataControlRowState" /> values.</param>
        <param name="rowIndex">The zero-based index of the row.</param>
        <summary>Initializes the specified <see cref="T:System.Web.UI.WebControls.TableCell" /> object to the specified row state.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A> método é implementado por <xref:System.Web.UI.WebControls.BoundField>-tipos derivados para adicionar texto e controles para um <xref:System.Web.UI.WebControls.TableCell> objeto de um controle de dados que usa tabelas para exibir uma interface do usuário (IU). Esses controles de dados criar a tabela completa estrutura linha por linha quando o controle `CreateChildControls` método é chamado. O <xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A> método é chamado pelo `InitializeRow` controla o método de dados, como <xref:System.Web.UI.WebControls.DetailsView> e <xref:System.Web.UI.WebControls.GridView>.  
  
 Chamada para esse método quando você estiver escrevendo uma associação de dados personalizada de controle que usa <xref:System.Web.UI.WebControls.TableCell> objetos para inicializar as células da estrutura de tabela com dados ou controles. Implemente este método quando você estiver escrevendo um <xref:System.Web.UI.WebControls.BoundField>-classe derivada.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeDataCell">
      <MemberSignature Language="C#" Value="protected virtual void InitializeDataCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeDataCell(class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlRowState rowState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeDataCell (cell As DataControlFieldCell, rowState As DataControlRowState)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeDataCell(System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlRowState rowState);" />
      <MemberSignature Language="F#" Value="abstract member InitializeDataCell : System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlRowState -&gt; unit&#xA;override this.InitializeDataCell : System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlRowState -&gt; unit" Usage="boundField.InitializeDataCell (cell, rowState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
      </Parameters>
      <Docs>
        <param name="cell">The <see cref="T:System.Web.UI.WebControls.TableCell" /> to initialize.</param>
        <param name="rowState">One of the <see cref="T:System.Web.UI.WebControls.DataControlRowState" /> values.</param>
        <summary>Initializes the specified <see cref="T:System.Web.UI.WebControls.TableCell" /> object to the specified row state.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.BoundField.InitializeDataCell%2A> é um método auxiliar usado para inicializar em uma célula a <xref:System.Web.UI.WebControls.BoundField> objeto.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao estender o <see cref="T:System.Web.UI.WebControls.BoundField" /> classe, você pode substituir este método para executar uma rotina de inicialização personalizada.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="boundField.LoadViewState state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">Represents the control state to be restored.</param>
        <summary>Restores the previously stored view-state information for this field.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NullDisplayText">
      <MemberSignature Language="C#" Value="public virtual string NullDisplayText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NullDisplayText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.NullDisplayText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property NullDisplayText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NullDisplayText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NullDisplayText : string with get, set" Usage="System.Web.UI.WebControls.BoundField.NullDisplayText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the caption displayed for a field when the field's value is null.</summary>
        <value>A legenda exibida para um campo quando o valor do campo é null. O padrão é uma cadeia de caracteres vazia (""), que indica que essa propriedade não está definida.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Às vezes, um valor de campo é armazenado como nulo na fonte de dados. Você pode especificar uma legenda personalizada a ser exibida para os campos que têm um valor nulo, definindo o <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> propriedade. Se essa propriedade não for definida, os valores de campo nulo são exibidos como cadeias de caracteres vazias (""). Quando um registro está sendo atualizada ou inserida em um controle associado a dados, se o usuário insere o valor especificado por essa propriedade (que não seja uma cadeia de caracteres vazia) para um campo em um controle associado a dados, que valor é convertido automaticamente como nulo na fonte de dados.  
  
> [!NOTE]
>  Para converter um valor de campo de cadeia de caracteres vazia como um valor nulo, defina as <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A> propriedade para `true`.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> propriedade para especificar uma legenda personalizada a ser exibida para valores de campo nulo.  
  
 [!code-aspx-csharp[BoundFieldNullDisplayText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundFieldNullDisplayText/CS/boundfieldnulldisplaytextcs.aspx#1)]
 [!code-aspx-vb[BoundFieldNullDisplayText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundFieldNullDisplayText/VB/boundfieldnulldisplaytextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull" />
      </Docs>
    </Member>
    <Member MemberName="OnDataBindField">
      <MemberSignature Language="C#" Value="protected virtual void OnDataBindField (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataBindField(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.OnDataBindField(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataBindField (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataBindField(System::Object ^ sender, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataBindField : obj * EventArgs -&gt; unit&#xA;override this.OnDataBindField : obj * EventArgs -&gt; unit" Usage="boundField.OnDataBindField (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">The source of the event.</param>
        <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        <summary>Binds the value of a field to the <see cref="T:System.Web.UI.WebControls.BoundField" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.CheckBoxField.OnDataBindField%2A> é um método auxiliar usado para associar o valor de um campo na fonte de dados para uma célula correspondente no <xref:System.Web.UI.WebControls.BoundField> objeto.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">The control to which the field value is bound is not a <see cref="T:System.Web.UI.WebControls.TextBox" /> or a <see cref="T:System.Web.UI.WebControls.TableCell" />.</exception>
        <block subset="none" type="overrides">
          <para>Ao estender o <see cref="T:System.Web.UI.WebControls.BoundField" /> classe, você pode substituir este método para executar uma rotina de associação personalizada.</para>
        </block>
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.Web.HttpException" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReadOnly : bool with get, set" Usage="System.Web.UI.WebControls.BoundField.ReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether the value of the field can be modified in edit mode.</summary>
        <value>
          <see langword="true" /> para impedir que o valor do campo seja modificado no modo de edição; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> propriedade para impedir que os valores exibidos em um <xref:System.Web.UI.WebControls.BoundField> objeto que está sendo modificado. Quando um controle associado a dados está no modo de edição, os campos que são somente leitura são exibidos como texto sem formatação, sem quaisquer controles de edição.  
  
> [!NOTE]
>  O <xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> propriedade aplica-se somente para o modo de edição. Para impedir a aparecendo no modo de inserção de campos, use o <xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A> propriedade.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> propriedade para impedir que os valores do campo da chave exibida em um <xref:System.Web.UI.WebControls.BoundField> objeto seja modificado no modo de edição.  
  
 [!code-aspx-csharp[BoundField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundField/CS/boundfieldcs.aspx#1)]
 [!code-aspx-vb[BoundField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundField/VB/boundfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateEditButton" />
      </Docs>
    </Member>
    <Member MemberName="SupportsHtmlEncode">
      <MemberSignature Language="C#" Value="protected virtual bool SupportsHtmlEncode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsHtmlEncode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.SupportsHtmlEncode" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property SupportsHtmlEncode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool SupportsHtmlEncode { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsHtmlEncode : bool" Usage="System.Web.UI.WebControls.BoundField.SupportsHtmlEncode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether HTML encoding is supported by a <see cref="T:System.Web.UI.WebControls.BoundField" /> object.</summary>
        <value>Sempre retorna <see langword="true" /> para indicar que a codificação HTML tiver suporte por um <see cref="T:System.Web.UI.WebControls.BoundField" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.BoundField.SupportsHtmlEncode%2A> propriedade é uma propriedade auxiliar usada pelo <xref:System.Web.UI.WebControls.BoundField> classe e classes derivadas para determinar se a codificação HTML tiver suporte pela classe.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao derivar do <see cref="T:System.Web.UI.WebControls.BoundField" /> classe, você pode substituir essa propriedade para indicar se a codificação HTML tiver suporte pela classe.</para>
        </block>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.HtmlEncode" />
        <altmember cref="Overload:System.Web.HttpServerUtility.HtmlEncode" />
      </Docs>
    </Member>
    <Member MemberName="ThisExpression">
      <MemberSignature Language="C#" Value="public static readonly string ThisExpression;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string ThisExpression" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.BoundField.ThisExpression" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ThisExpression As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ ThisExpression;" />
      <MemberSignature Language="F#" Value=" staticval mutable ThisExpression : string" Usage="System.Web.UI.WebControls.BoundField.ThisExpression" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents the "this" expression.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse campo é usado para indicar que o <xref:System.Web.UI.WebControls.BoundField> objeto deve ser associado na fonte de dados em si, em vez de um campo da fonte de dados. Nesse caso, o objeto `ToString` valor será exibido no campo.  
  
 Esse campo é usado principalmente por desenvolvedores de controle.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ValidateRequestMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.ValidateRequestMode ValidateRequestMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ValidateRequestMode ValidateRequestMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.ValidateRequestMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateRequestMode As ValidateRequestMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ValidateRequestMode ValidateRequestMode { System::Web::UI::ValidateRequestMode get(); void set(System::Web::UI::ValidateRequestMode value); };" />
      <MemberSignature Language="F#" Value="member this.ValidateRequestMode : System.Web.UI.ValidateRequestMode with get, set" Usage="System.Web.UI.WebControls.BoundField.ValidateRequestMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ValidateRequestMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that determines whether the control validates client input or not.</summary>
        <value>Um valor que determina se o controle valida a entrada do cliente ou não. O padrão é <see cref="F:System.Web.UI.ValidateRequestMode.Inherit" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateSupportsCallback">
      <MemberSignature Language="C#" Value="public override void ValidateSupportsCallback ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ValidateSupportsCallback() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.ValidateSupportsCallback" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ValidateSupportsCallback ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ValidateSupportsCallback();" />
      <MemberSignature Language="F#" Value="override this.ValidateSupportsCallback : unit -&gt; unit" Usage="boundField.ValidateSupportsCallback " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Determines whether the controls contained in a <see cref="T:System.Web.UI.WebControls.BoundField" /> object support callbacks.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.BoundField.ValidateSupportsCallback%2A> é um método auxiliar usado para determinar se os controles contidos em um <xref:System.Web.UI.WebControls.BoundField> retornos de chamada de suporte do objeto. Esse método tiver sido implementado como um método vazio (um método que não contém nenhum código) para indicar que os retornos de chamada são suportados.  
  
> [!NOTE]
>  Esse método é usado principalmente por desenvolvedores de controle.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Classes que derivam de <see cref="T:System.Web.UI.WebControls.BoundField" /> classe pode substituir esse método para indicar se os controles contidos pelos retornos de chamada de suporte ao campo. Para indicar que os retornos de chamada têm suporte, implementam este método como um método vazio que não gera uma exceção; Caso contrário, lance uma exceção com uma mensagem útil que descreve por que não há suporte para retornos de chamada.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.ValidateSupportsCallback" />
      </Docs>
    </Member>
  </Members>
</Type>