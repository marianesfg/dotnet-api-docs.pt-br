<Type Name="Menu" FullName="System.Web.UI.WebControls.Menu">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e2b2596101cfac0ff1e1899d14e1669f8426dc8f" />
    <Meta Name="ms.sourcegitcommit" Value="4b4804968da1dfdf71c501075a5b66957b54f2e8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/27/2018" />
    <Meta Name="ms.locfileid" Value="32040196" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Menu : System.Web.UI.WebControls.HierarchicalDataBoundControl, System.Web.UI.INamingContainer, System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Menu extends System.Web.UI.WebControls.HierarchicalDataBoundControl implements class System.Web.UI.INamingContainer, class System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Menu" />
  <TypeSignature Language="VB.NET" Value="Public Class Menu&#xA;Inherits HierarchicalDataBoundControl&#xA;Implements INamingContainer, IPostBackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class Menu : System::Web::UI::WebControls::HierarchicalDataBoundControl, System::Web::UI::INamingContainer, System::Web::UI::IPostBackEventHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.HierarchicalDataBoundControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.INamingContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("MenuItemClick")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.MenuDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlValueProperty("SelectedValue")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Exibe um menu em uma página da Web ASP.NET.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Neste tópico:  
  
-   [Introdução](#introduction)  
  
-   [Itens de menu](#menu_items)  
  
-   [Dados estáticos](#static_data)  
  
-   [Associando a dados](#binding_to_data)  
  
-   [Personalizando a Interface do usuário](#customizing_the_user_interface)  
  
-   [Eventos](#events)  
  
-   [Acessibilidade](#accessibility)  
  
-   [Sintaxe declarativa](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Introdução  
 O <xref:System.Web.UI.WebControls.Menu> controle é usado para exibir um menu em uma página da Web do ASP.NET e geralmente é usado em combinação com um <xref:System.Web.UI.WebControls.SiteMapDataSource> controle de navegação de um site da Web. O <xref:System.Web.UI.WebControls.Menu> controle suporta os seguintes recursos:  
  
-   Associação de dados que permite que os itens de menu do controle a ser associado a fontes de dados hierárquicos.  
  
-   Site de navegação por meio da integração com o <xref:System.Web.UI.WebControls.SiteMapDataSource> controle.  
  
-   Acesso programático para o <xref:System.Web.UI.WebControls.Menu> modelo de objeto para criar menus, preencher os itens de menu dinamicamente, definir propriedades e assim por diante.  
  
-   Aparência personalizável através de temas, imagens definidas pelo usuário, estilos e modelos definidos pelo usuário.  
  
 Quando o usuário clica em um item de menu, o <xref:System.Web.UI.WebControls.Menu> controle pode navegar para uma página da Web vinculada ou simplesmente postagem para o servidor. Se o <xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A> propriedade de um item de menu for definida, o <xref:System.Web.UI.WebControls.Menu> controle navega para a página vinculada; caso contrário, ele envia a página de volta para o servidor para processamento. Por padrão, uma página vinculada é exibida na mesma janela ou quadro como o <xref:System.Web.UI.WebControls.Menu> controle. Para exibir o conteúdo vinculado em uma janela ou quadro diferente, use o <xref:System.Web.UI.WebControls.Menu.Target%2A> propriedade o <xref:System.Web.UI.WebControls.Menu> controle.  
  
> [!NOTE]
>  O <xref:System.Web.UI.WebControls.Menu.Target%2A> propriedade afeta todos os itens de menu no controle. Para especificar uma janela ou quadro de um item de menu individuais, defina o <xref:System.Web.UI.WebControls.MenuItem.Target%2A> propriedade o <xref:System.Web.UI.WebControls.MenuItem> diretamente do objeto.  
  
 O <xref:System.Web.UI.WebControls.Menu> controle exibe dois tipos de menus: um menu estático e um menu dinâmico. O menu estático será sempre exibido em um <xref:System.Web.UI.WebControls.Menu> controle. Por padrão, os itens de menu no nível raiz (nível 0) são exibidos no menu estático. Você pode exibir níveis de menu adicionais (estáticos submenus) dentro do menu estático, definindo o <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> propriedade. Itens de menu (se houver) com um nível mais alto que o valor especificado pelo <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> propriedade são exibidos em um menu dinâmico. Um menu dinâmico é exibida somente quando o usuário posiciona o ponteiro do mouse sobre o item de menu pai que contém um submenu dinâmico. Menus dinâmicos desaparecem automaticamente após um determinado tempo. Use o <xref:System.Web.UI.WebControls.Menu.DisappearAfter%2A> propriedade para especificar a duração.  
  
> [!NOTE]
>  Um menu dinâmico também desaparece quando o usuário clica fora do menu.  
  
 Você também pode limitar o número de níveis exibidos em um menu dinâmico definindo o <xref:System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels%2A> propriedade. Níveis de menu superiores ao valor especificado serão descartados.  
  
> [!NOTE]
>  O <xref:System.Web.UI.WebControls.Menu> controle não foi projetado para ser usado dentro de um <xref:System.Web.UI.UpdatePanel> controle. Você pode adicionar o <xref:System.Web.UI.WebControls.Menu> controle somente para uma página fora de um <xref:System.Web.UI.UpdatePanel> controle. <xref:System.Web.UI.UpdatePanel> controles são usados para atualizar regiões selecionadas de uma página em vez de atualizar a página inteira com um postback. Para obter mais informações, consulte [visão geral do controle UpdatePanel](http://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a) e [visão geral de renderização de página parcial](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49).  
  
<a name="menu_items"></a>   
## <a name="menu-items"></a>Itens de menu  
 Um <xref:System.Web.UI.WebControls.Menu> controle é composto de uma árvore de itens de menu representado por <xref:System.Web.UI.WebControls.MenuItem> objetos. Itens de menu no nível superior (nível 0) são chamados de itens de menu de raiz. Um item de menu que tem um item de menu pai é chamado de um item de menu filho. Todos os itens de menu raiz são armazenados no <xref:System.Web.UI.WebControls.Menu.Items%2A> coleção. Itens de menu filho são armazenados em um item de menu pai <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> coleção.  
  
 Cada item de menu tem uma <xref:System.Web.UI.WebControls.MenuItem.Text%2A> e um <xref:System.Web.UI.WebControls.MenuItem.Value%2A> propriedade. O valor da <xref:System.Web.UI.WebControls.MenuItem.Text%2A> propriedade é exibida no <xref:System.Web.UI.WebControls.Menu> controle, enquanto o <xref:System.Web.UI.WebControls.MenuItem.Value%2A> propriedade é usada para armazenar quaisquer dados adicionais sobre o item de menu, como dados passados para o evento de postback associado ao item de menu. Quando clicado, um item de menu pode navegar para outra página da Web indicada pelo <xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A> propriedade.  
  
> [!NOTE]
>  Se o <xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A> propriedade não está definida para um item de menu, o <xref:System.Web.UI.WebControls.Menu> controle simplesmente envia a página para o servidor para processamento quando o item de menu é clicado.  
  
 Você também pode exibir uma imagem em um item de menu, definindo o <xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A> propriedade.  
  
 Para obter mais informações sobre itens de menu, consulte <xref:System.Web.UI.WebControls.MenuItem>.  
  
<a name="static_data"></a>   
## <a name="static-data"></a>Dados estáticos  
 O modelo de dados mais simples do <xref:System.Web.UI.WebControls.Menu> controle é os itens de menu estático. Para exibir itens de menu estático usando a sintaxe declarativa, primeiro aninhar abrindo e fechando `<Items>` marcas entre as marcas de abertura e fechamento do <xref:System.Web.UI.WebControls.Menu> controle. Em seguida, crie a estrutura de menu aninhando `<asp:MenuItem>` elementos entre a abertura e fechamento `<Items>` marcas. Cada `<asp:MenuItem>` elemento representa um item de menu no controle e é mapeado para um <xref:System.Web.UI.WebControls.MenuItem> objeto. Você pode definir as propriedades de cada item de menu, definindo os atributos de seu `<asp:MenuItem>` elemento. Para criar itens de submenu, aninhar adicionais `<asp:MenuItem>` elementos entre a abertura e fechamento `<asp:MenuItem>` marcas do item de menu pai.  
  
<a name="binding_to_data"></a>   
## <a name="binding-to-data"></a>Associando a dados  
 O <xref:System.Web.UI.WebControls.Menu> controle pode usar qualquer controle de fonte de dados hierárquicos, como um <xref:System.Web.UI.WebControls.XmlDataSource> controle ou um <xref:System.Web.UI.WebControls.SiteMapDataSource> controle. Para vincular a um controle de fonte de dados hierárquicos, defina o <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> propriedade do <xref:System.Web.UI.WebControls.Menu> o controle para o <xref:System.Web.UI.Control.ID%2A> valor do controle de fonte de dados. O <xref:System.Web.UI.WebControls.Menu> controle associa automaticamente para o controle de fonte de dados especificado. Esse é o método preferencial para associar aos dados.  
  
 Quando um item de menu de associação a uma fonte de dados onde cada item de dados contém várias propriedades (como um elemento XML com vários atributos), exibe o valor retornado pelo `ToString` método do item de dados por padrão. No caso de um elemento XML, o item de menu exibe o nome do elemento, que mostra a estrutura subjacente da árvore de menu, mas não é muito útil, caso contrário. Você pode associar um item de menu a uma propriedade de item de dados específico usando o <xref:System.Web.UI.WebControls.Menu.DataBindings%2A> coleção para especificar associações de item de menu. O <xref:System.Web.UI.WebControls.Menu.DataBindings%2A> coleção contém <xref:System.Web.UI.WebControls.MenuItemBinding> objetos que definem a relação entre um item de dados e o item de menu que está associado. Você pode especificar os critérios de associação e a propriedade de item de dados exibir no nó. Para obter mais informações sobre associações de item de menu, consulte <xref:System.Web.UI.WebControls.MenuItemBinding>.  
  
 Não é possível criar nós vazios em um <xref:System.Web.UI.WebControls.Menu> controle definindo o <xref:System.Web.UI.WebControls.MenuItemBinding.Text%2A> ou <xref:System.Web.UI.WebControls.MenuItemBinding.TextField%2A> propriedades de cadeia de caracteres vazia (""). Definir essas propriedades para a cadeia de caracteres vazia tem o mesmo efeito que não definindo as propriedades. Nesse caso, o <xref:System.Web.UI.WebControls.Menu> controle cria uma associação padrão usando o <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> propriedade. Para obter mais informações, consulte [para bancos de dados de associação](http://msdn.microsoft.com/library/ab7b2846-975b-4057-a948-45527497c742).  
  
<a name="customizing_the_user_interface"></a>   
## <a name="customizing-the-user-interface"></a>Personalizando a interface do usuário  
 Há várias maneiras de personalizar a aparência do <xref:System.Web.UI.WebControls.Menu> controle. Primeiro, você pode especificar se o <xref:System.Web.UI.WebControls.Menu> controle é processado horizontal ou verticalmente, definindo o <xref:System.Web.UI.WebControls.Menu.Orientation%2A> propriedade. Você também pode especificar um estilo diferente (como o tamanho da fonte e cor) para cada um dos tipos de item de menu.  
  
 Se você usar folhas de estilo em cascata (CSS) para personalizar a aparência do controle, use os estilos internos ou um arquivo separado CSS, mas não ambos. Usando estilos internos e um arquivo separado CSS pode causar resultados inesperados. Para obter mais informações sobre o uso de folhas de estilo com controles, consulte [controles de servidor Web e estilos CSS](http://msdn.microsoft.com/library/782c2db6-fc9b-4243-8df9-a8ffe2f4cc42).  
  
 A tabela a seguir lista os estilos de item de menu disponíveis.  
  
|Propriedade de estilo do item de menu|Descrição|  
|------------------------------|-----------------|  
|<xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A>|As configurações de estilo para um item de menu dinâmico quando o ponteiro do mouse está posicionado sobre ele.|  
|<xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A>|As configurações de estilo para um item de menu dinâmico individuais.|  
|<xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A>|As configurações de estilo para um menu dinâmico.|  
|<xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A>|As configurações de estilo para o item de menu dinâmico selecionada no momento.|  
|<xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A>|As configurações de estilo para um item de menu estático quando o ponteiro do mouse está posicionado sobre ele.|  
|<xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A>|As configurações de estilo para um item de menu estático individuais.|  
|<xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A>|As configurações de estilo para um menu estático.|  
|<xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A>|As configurações de estilo para o item de menu estático selecionado no momento.|  
  
 Em vez de configurar as propriedades de estilo individuais, você pode especificar os estilos que são aplicados aos itens de menu com base em seu nível usando as seguintes coleções de estilo.  
  
|Coleções de nível de estilo|Descrição|  
|-----------------------------|-----------------|  
|<xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A>|Uma coleção de <xref:System.Web.UI.WebControls.MenuItemStyle> objetos que controlam o estilo dos itens de menu em cada nível.|  
|<xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A>|Uma coleção de <xref:System.Web.UI.WebControls.MenuItemStyle> que controlam o estilo de objetos selecionados itens de menu em cada nível.|  
|<xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A>|Uma coleção de <xref:System.Web.UI.WebControls.MenuItemStyle> objetos que controlam o estilo dos itens de submenu em cada nível.|  
  
 O primeiro estilo na coleção corresponde ao estilo dos itens de menu no primeiro nível de profundidade na árvore de menu. O segundo estilo na coleção corresponde ao estilo dos itens de menu no segundo nível de profundidade na árvore de menu e assim por diante. Isso geralmente é usado para gerar tabela de menus de navegação de conteúdo-estilo onde os itens de menu em uma profundidade de determinados devem ter a mesma aparência, independentemente de terem submenus.  
  
> [!NOTE]
>  Se você usar qualquer uma das coleções de estilo listadas na tabela anterior para definir o estilo para o <xref:System.Web.UI.WebControls.Menu> controle, essas configurações de estilo substituem as propriedades de estilo do item de menu individuais.  
  
 Outra maneira de alterar a aparência do controle é personalizar as imagens exibidas no <xref:System.Web.UI.WebControls.Menu> controle. Você pode especificar sua própria imagem personalizada para as diferentes partes do controle, definindo as propriedades mostradas na tabela a seguir.  
  
|Propriedade de imagem|Descrição|  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl%2A>|Uma imagem opcional exibida na parte inferior de um item de menu dinâmico para separá-lo de outros itens de menu.|  
|<xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A>|Uma imagem opcional exibida em um item de menu dinâmico para indicar que ele tem um submenu.|  
|<xref:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl%2A>|Uma imagem opcional exibida na parte superior de um item de menu dinâmico para separá-lo de outros itens de menu.|  
|<xref:System.Web.UI.WebControls.Menu.ScrollDownImageUrl%2A>|A imagem exibida na parte inferior de um item de menu para indicar que o usuário pode rolar para baixo para exibir itens de menu adicionais.|  
|<xref:System.Web.UI.WebControls.Menu.ScrollUpImageUrl%2A>|A imagem exibida na parte superior de um item de menu para indicar que o usuário pode rolar até exibir itens de menu adicionais.|  
|<xref:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl%2A>|Uma imagem opcional exibida na parte inferior de um item de menu estático para separá-lo de outros itens de menu.|  
|<xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A>|Uma imagem opcional exibida em um item de menu estático para indicar que ele tem um submenu.|  
|<xref:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl%2A>|Uma imagem opcional exibida na parte superior de um item de menu estático para separá-lo de outros itens de menu.|  
  
 Para obter controle total da interface do usuário (IU), você pode definir seus próprios modelos personalizados para o <xref:System.Web.UI.WebControls.Menu> usando as seguintes propriedades de modelo de controle.  
  
|Propriedade de modelo|Descrição|  
|-----------------------|-----------------|  
|<xref:System.Web.UI.WebControls.Menu.DynamicItemTemplate%2A>|O modelo que contém o conteúdo personalizado para processar um item de menu dinâmico.|  
|<xref:System.Web.UI.WebControls.Menu.StaticItemTemplate%2A>|O modelo que contém o conteúdo personalizado para processar um item de menu estático.|  
  
 Você pode controlar a posição vertical e horizontal de um menu dinâmico em relação a seu item de menu pai, definindo a <xref:System.Web.UI.WebControls.Menu.DynamicVerticalOffset%2A> e <xref:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset%2A> propriedades, respectivamente. Para controlar o recuo dos itens de submenu estático dentro de um menu estático, use o <xref:System.Web.UI.WebControls.Menu.StaticSubMenuIndent%2A> propriedade.  
  
<a name="events"></a>   
## <a name="events"></a>Eventos  
 O <xref:System.Web.UI.WebControls.Menu> controle fornece vários eventos que você pode programar. Isso permite que você execute uma rotina personalizada sempre que um evento ocorre. A tabela a seguir lista os eventos com suporte.  
  
|evento|Descrição|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.Menu.MenuItemClick>|Ocorre quando um item de menu é clicado. Esse evento é geralmente usado para sincronizar um <xref:System.Web.UI.WebControls.Menu> controle com outro controle na página.|  
|<xref:System.Web.UI.WebControls.Menu.MenuItemDataBound>|Ocorre quando um item de menu está associado aos dados. Esse evento geralmente é usado para modificar um item de menu antes que ele é renderizado em um <xref:System.Web.UI.WebControls.Menu> controle.|  
  
<a name="accessibility"></a>   
## <a name="accessibility"></a>Acessibilidade  
 Para obter informações sobre como configurar este controle para que ele gera marcação que está de acordo com os padrões de acessibilidade, consulte [acessibilidade no Visual Studio e ASP.NET](http://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13) e [controles ASP.NET e acessibilidade](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Sintaxe declarativa  
  
```  
<asp:Menu  
    AccessKey="string"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    CssClass="string"  
    DataSource="string"  
    DataSourceID="string"  
    DisappearAfter="integer"  
    DynamicBottomSeparatorImageUrl="uri"  
    DynamicEnableDefaultPopOutImage="True|False"  
    DynamicHorizontalOffset="integer"  
    DynamicItemFormatString="string"  
    DynamicPopOutImageTextFormatString="string"  
    DynamicPopOutImageUrl="uri"  
    DynamicTopSeparatorImageUrl="uri"  
    DynamicVerticalOffset="integer"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    Height="size"  
    ID="string"  
    ItemWrap="True|False"  
    MaximumDynamicDisplayLevels="integer"  
    OnDataBinding="DataBinding event handler"  
    OnDataBound="DataBound event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnMenuItemClick="MenuItemClick event handler"  
    OnMenuItemDataBound="MenuItemDataBound event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    Orientation="Horizontal|Vertical"  
    PathSeparator="string"  
    runat="server"  
    ScrollDownImageUrl="uri"  
    ScrollDownText="string"  
    ScrollUpImageUrl="uri"  
    ScrollUpText="string"  
    SkinID="string"  
    SkipLinkText="string"  
    StaticBottomSeparatorImageUrl="uri"  
    StaticDisplayLevels="integer"  
    StaticEnableDefaultPopOutImage="True|False"  
    StaticItemFormatString="string"  
    StaticPopOutImageTextFormatString="string"  
    StaticPopOutImageUrl="uri"  
    StaticSubMenuIndent="size"  
    StaticTopSeparatorImageUrl="uri"  
    Style="string"  
    TabIndex="integer"  
    Target="string"  
    ToolTip="string"  
    Visible="True|False"  
    Width="size"  
>  
        <DataBindings>  
                <asp:MenuItemBinding  
                    DataMember="string"  
                    Depth="integer"  
                    Enabled="True|False"  
                    EnabledField="string"  
                    FormatString="string"  
                    ImageUrl="uri"  
                    ImageUrlField="string"  
                    NavigateUrl="uri"  
                    NavigateUrlField="string"  
                    PopOutImageUrl="uri"  
                    PopOutImageUrlField="string"  
                    Selectable="True|False"  
                    SelectableField="string"  
                    SeparatorImageUrl="uri"  
                    SeparatorImageUrlField="string"  
                    Target="string"  
                    TargetField="string"  
                    Text="string"  
                    TextField="string"  
                    ToolTip="string"  
                    ToolTipField="string"  
                    Value="string"  
                    ValueField="string"  
                />  
        </DataBindings>  
        <DynamicHoverStyle />  
        <DynamicItemTemplate>  
            <!-- child controls -->  
        </DynamicItemTemplate>  
        <DynamicMenuItemStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ItemSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <DynamicMenuStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <DynamicSelectedStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ItemSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <Items />  
        <LevelMenuItemStyles>  
                <asp:MenuItemStyle  
                    BackColor="color name|#dddddd"  
                    BorderColor="color name|#dddddd"  
                    BorderStyle="NotSet|None|Dotted|Dashed|Solid|  
                        Double|Groove|Ridge|Inset|Outset"  
                    BorderWidth="size"  
                    CssClass="string"  
                    Font-Bold="True|False"  
                    Font-Italic="True|False"  
                    Font-Names="string"  
                    Font-Overline="True|False"  
                    Font-Size="string|Smaller|Larger|XX-Small|  
                        X-Small|Small|Medium|Large|X-Large|XX-Large"  
                    Font-Strikeout="True|False"  
                    Font-Underline="True|False"  
                    ForeColor="color name|#dddddd"  
                    Height="size"  
                    HorizontalPadding="size"  
                    ItemSpacing="size"  
                    OnDisposed="Disposed event handler"  
                    VerticalPadding="size"  
                    Width="size"  
                />  
        </LevelMenuItemStyles>  
        <LevelSelectedStyles>  
                <asp:MenuItemStyle  
                    BackColor="color name|#dddddd"  
                    BorderColor="color name|#dddddd"  
                    BorderStyle="NotSet|None|Dotted|Dashed|Solid|  
                        Double|Groove|Ridge|Inset|Outset"  
                    BorderWidth="size"  
                    CssClass="string"  
                    Font-Bold="True|False"  
                    Font-Italic="True|False"  
                    Font-Names="string"  
                    Font-Overline="True|False"  
                    Font-Size="string|Smaller|Larger|XX-Small|  
                        X-Small|Small|Medium|Large|X-Large|XX-Large"  
                    Font-Strikeout="True|False"  
                    Font-Underline="True|False"  
                    ForeColor="color name|#dddddd"  
                    Height="size"  
                    HorizontalPadding="size"  
                    ItemSpacing="size"  
                    OnDisposed="Disposed event handler"  
                    VerticalPadding="size"  
                    Width="size"  
                />  
        </LevelSelectedStyles>  
        <LevelSubMenuStyles>  
                <asp:SubMenuStyle  
                    BackColor="color name|#dddddd"  
                    BorderColor="color name|#dddddd"  
                    BorderStyle="NotSet|None|Dotted|Dashed|Solid|  
                        Double|Groove|Ridge|Inset|Outset"  
                    BorderWidth="size"  
                    CssClass="string"  
                    Font-Bold="True|False"  
                    Font-Italic="True|False"  
                    Font-Names="string"  
                    Font-Overline="True|False"  
                    Font-Size="string|Smaller|Larger|XX-Small|  
                        X-Small|Small|Medium|Large|X-Large|XX-Large"  
                    Font-Strikeout="True|False"  
                    Font-Underline="True|False"  
                    ForeColor="color name|#dddddd"  
                    Height="size"  
                    HorizontalPadding="size"  
                    OnDisposed="Disposed event handler"  
                    VerticalPadding="size"  
                    Width="size"  
                />  
        </LevelSubMenuStyles>  
        <StaticHoverStyle />  
        <StaticItemTemplate>  
            <!-- child controls -->  
        </StaticItemTemplate>  
        <StaticMenuItemStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|  
                X-Small|Small|Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ItemSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <StaticMenuStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <StaticSelectedStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ItemSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
</asp:Menu>  
```  
  
   
  
## Examples  
 Um projeto de site da Web do Visual Studio com o código-fonte está disponível para acompanhar este tópico: [baixar](http://go.microsoft.com/fwlink/?LinkId=192868).  
  
 O exemplo de código a seguir demonstra como criar um <xref:System.Web.UI.WebControls.Menu> controle com itens de menu estático usando a sintaxe declarativa.  
  
 [!code-aspx-csharp[MenuDeclarative#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDeclarative/CS/menudeclarativecs.aspx#1)]
 [!code-aspx-vb[MenuDeclarative#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDeclarative/VB/menudeclarativevb.aspx#1)]  
  
 O exemplo de código a seguir demonstra como associar o <xref:System.Web.UI.WebControls.Menu> o controle para um <xref:System.Web.UI.WebControls.SiteMapDataSource> controle. Para esse exemplo funcione corretamente, você deve copiar os dados de mapa do site de exemplo abaixo em um arquivo chamado SiteMap.  
  
 [!code-aspx-csharp[MenuDataBind#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDataBind/CS/menudatabindcs.aspx#1)]
 [!code-aspx-vb[MenuDataBind#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDataBind/VB/menudatabindvb.aspx#1)]  
  
 O seguinte é dados de mapa de site de exemplo para o exemplo anterior.  
  
```  
<siteMap>  
  <siteMapNode url="~\Home.aspx"   
    title="Home"  
    description="Home">  
    <siteMapNode url="~\Music.aspx"  
      title="Music"  
      description="Music">  
      <siteMapNode url="~\Classical.aspx"   
        title="Classical"  
        description="Classical"/>  
      <siteMapNode url="~\Rock.aspx"  
        title="Rock"  
        description="Rock"/>  
      <siteMapNode url="~\Jazz.aspx"  
        title="Jazz"  
        description="Jazz"/>  
    </siteMapNode>  
    <siteMapNode url="~\Movies.aspx"  
      title="Movies"  
      description="Movies">  
      <siteMapNode url="~\Action.aspx"  
        title="Action"  
        description="Action"/>  
      <siteMapNode url="~\Drama.aspx"  
        title="Drama"  
        description="Drama"/>  
      <siteMapNode url="~\Musical.aspx"  
        title="Musical"  
        description="Musical"/>  
    </siteMapNode>  
  </siteMapNode>  
</siteMap>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.TreeView" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Menu ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Menu();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.UI.WebControls.Menu" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use este construtor para criar e inicializar uma nova instância do <xref:System.Web.UI.WebControls.Menu> classe. Adicionar dinamicamente um <xref:System.Web.UI.WebControls.Menu> controlar para uma página, crie um novo <xref:System.Web.UI.WebControls.Menu> do objeto, defina suas propriedades e, em seguida, adicioná-lo para o <xref:System.Web.UI.Control.Controls%2A> coleção de um contêiner de controle, como <xref:System.Web.UI.WebControls.PlaceHolder>.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o construtor de adicionar dinamicamente um <xref:System.Web.UI.WebControls.Menu> controle a uma página.  
  
 [!code-aspx-csharp[MenuCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuCtor/CS/menuctorcs.aspx#1)]
 [!code-aspx-vb[MenuCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuCtor/VB/menuctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="T:System.Web.UI.WebControls.PlaceHolder" />
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">O fluxo de saída que renderiza o conteúdo HTML para o cliente.</param>
        <summary>Adiciona atributos HTML e estilos que precisam ser renderizadas ao objeto <see cref="T:System.Web.UI.HtmlTextWriter" /> especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Menu> controlar substituições de <xref:System.Web.UI.WebControls.WebControl.AddAttributesToRender%2A> método para redefinir o <xref:System.Web.UI.WebControls.WebControl.AccessKey%2A> propriedade <xref:System.String.Empty>. Esse membro é usado principalmente por desenvolvedores de controle ao derivar um controle personalizado do <xref:System.Web.UI.WebControls.Menu> classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public override System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.Controls" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Controls As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ControlCollection ^ Controls { System::Web::UI::ControlCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o <see cref="T:System.Web.UI.ControlCollection" /> que contém os controles filho do controle <see cref="T:System.Web.UI.WebControls.Menu" />.</summary>
        <value>Um <see cref="T:System.Web.UI.ControlCollection" /> que contém os controles filho</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Menu.Controls%2A> propriedade permite acesso programático à instância do <xref:System.Web.UI.ControlCollection> de classe para o <xref:System.Web.UI.WebControls.Menu> controle. Você pode adicionar controles à coleção, remova os controles da coleção ou percorrer os controles do servidor na coleção.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected internal override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.CreateChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub CreateChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void CreateChildControls();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cria os controles filho de um controle <see cref="T:System.Web.UI.WebControls.Menu" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse membro é usado principalmente por desenvolvedores de controle ao derivar um controle personalizado do <xref:System.Web.UI.WebControls.Menu> classe.  
  
 Este método é chamado pela infraestrutura do ASP.NET para notificar os controles que usam a implementação baseada em composição, incluindo controles que derivam de <xref:System.Web.UI.WebControls.CompositeDataBoundControl> e <xref:System.Web.UI.WebControls.CompositeControl>. para criar controles qualquer filho contiverem na preparação de postback ou de renderização.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public override sealed void DataBind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DataBind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.DataBind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub DataBind ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void DataBind();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Associa a fonte de dados ao controle <see cref="T:System.Web.UI.WebControls.Menu" />. Esse método não pode ser herdado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse membro é usado principalmente por desenvolvedores de controle ao derivar um controle personalizado do <xref:System.Web.UI.WebControls.Menu> classe.  
  
 Use o <xref:System.Web.UI.WebControls.Menu.DataBind%2A> método para associar os dados de uma fonte de dados para o <xref:System.Web.UI.WebControls.Menu> controle. Este método resolve todas as expressões de associação de dados no modelo ativo do controle.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Controles associados a dados devem substituir <see cref="M:System.Web.UI.WebControls.Menu.PerformDataBinding" /> em vez de <see cref="M:System.Web.UI.WebControls.Menu.DataBind" />. Se <see cref="M:System.Web.UI.WebControls.Menu.DataBind" /> for substituído, o <see cref="M:System.Web.UI.WebControls.Menu.OnDataBinding(System.EventArgs)" /> e <see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.OnDataBound(System.EventArgs)" /> os eventos são gerados na ordem errada.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DataBindings">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemBindingCollection DataBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemBindingCollection DataBindings" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DataBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataBindings As MenuItemBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemBindingCollection ^ DataBindings { System::Web::UI::WebControls::MenuItemBindingCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuBindingsEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma coleção de objetos <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> que definem a relação entre um item de dados e o item de menu ao qual ele está se associando.</summary>
        <value>Um <see cref="T:System.Web.UI.WebControls.MenuItemBindingCollection" /> que representa a relação entre um item de dados e o item de menu ao qual ele está se associando.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Menu.DataBindings%2A> coleção contém <xref:System.Web.UI.WebControls.MenuItemBinding> objetos que definem a relação entre um item de dados e o item de menu que está associado. Quando um item de menu de associação a uma fonte de dados onde cada item de dados contém várias propriedades (como um elemento XML com vários atributos), exibe o valor retornado pelo `ToString()` método do item de dados por padrão. No caso de um elemento XML, o item de menu exibe o nome do elemento, que mostra a estrutura subjacente da árvore, mas não é muito útil, caso contrário. Você pode associar um item de menu a uma propriedade de item de dados específico, especificando associações de item de menu.  
  
 Ao definir a relação entre um item de dados e um item de menu, você deve especificar ambos os critérios de associação e a propriedade de um item de dados para associar a. Os critérios indicam quando um item de dados deve ser associado a um item de menu. Os critérios podem ser especificados com uma profundidade, um membro de dados ou ambos. A profundidade Especifica o nível de menu que obtém a associação. Por exemplo, se você especificar uma profundidade de 0, todos os itens na estrutura de árvore no nível 0 são vinculados usando a associação de item de menu. Um membro de dados especifica o tipo de item de dados na fonte de dados subjacente, mas pode representar informações diferentes dependendo da fonte de dados. Por exemplo, o membro de dados para um elemento XML Especifica o nome do elemento.  
  
 Se vários <xref:System.Web.UI.WebControls.MenuItemBinding> objetos são definidos que estão em conflito entre si, o <xref:System.Web.UI.WebControls.Menu> controle aplica-se as associações de item de menu na seguinte ordem de precedência:  
  
1.  O <xref:System.Web.UI.WebControls.MenuItemBinding> objeto que define uma profundidade e um membro de dados.  
  
2.  O <xref:System.Web.UI.WebControls.MenuItemBinding> objeto que define apenas a profundidade.  
  
3.  O <xref:System.Web.UI.WebControls.MenuItemBinding> objeto que define o membro de dados.  
  
4.  O <xref:System.Web.UI.WebControls.MenuItemBinding> objeto que define a profundidade, nem o membro de dados.  
  
 Depois que os critérios de associação são estabelecidos, em seguida, você pode associar uma propriedade de um <xref:System.Web.UI.WebControls.MenuItem> objeto que pode ser associado a um atributo ou o campo de um item de dados. Por exemplo, você pode vincular o <xref:System.Web.UI.WebControls.MenuItem.Text%2A> propriedade de um item de menu para o atributo de texto em um elemento XML definindo o <xref:System.Web.UI.WebControls.MenuItemBinding.TextField%2A> propriedade de um <xref:System.Web.UI.WebControls.MenuItemBinding> objeto. Você também pode associar a um valor estático. Se você definir o <xref:System.Web.UI.WebControls.MenuItemBinding.Text%2A> propriedade de um <xref:System.Web.UI.WebControls.MenuItemBinding> objeto, todos os itens de menu no qual o <xref:System.Web.UI.WebControls.MenuItemBinding> objeto é aplicado compartilham o mesmo valor de texto estático. Para obter mais informações sobre como associar as propriedades de um <xref:System.Web.UI.WebControls.MenuItem> para um valor de objeto, consulte <xref:System.Web.UI.WebControls.MenuItemBinding>.  
  
 Embora o <xref:System.Web.UI.WebControls.Menu.DataBindings%2A> coleção pode ser preenchida por meio de programação, é geralmente definida declarativamente. Para especificar as associações de item de menu, primeiro aninhar abrindo e fechando `<DataBindings>` marcas entre as marcas de abertura e fechamento do <xref:System.Web.UI.WebControls.Menu> controle. Em seguida, coloque `<asp:MenuItemBinding>` elementos entre a abertura e fechamento `<DataBindings>` marcas para cada item de menu que você deseja especificar.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.Menu.DataBindings%2A> coleção para definir a relação entre os campos de um <xref:System.Web.UI.WebControls.XmlDataSource> controle e os itens de menu em um <xref:System.Web.UI.WebControls.Menu> controle. Para esse exemplo funcione corretamente, você deve copiar os dados XML de exemplo abaixo em um arquivo chamado map.  
  
 [!code-aspx-csharp[MenuBindings#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuBindings/CS/menubindingscs.aspx#1)]
 [!code-aspx-vb[MenuBindings#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuBindings/VB/menubindingsvb.aspx#1)]  
  
 O seguinte é dados de mapa de site de exemplo para o exemplo anterior.  
  
```  
<MapHomeNode url="~\Home.aspx"   
  title="Home"  
  description="Home">  
  <MapNode url="~\Music.aspx"  
    title="Music"  
    description="Music">  
    <MapNode url="~\Classical.aspx"   
      title="Classical"  
      description="Classical"/>  
    <MapNode url="~\Rock.aspx"  
      title="Rock"  
      description="Rock"/>  
    <MapNode url="~\Jazz.aspx"  
      title="Jazz"  
      description="Jazz"/>  
  </MapNode>  
  <MapNode url="~\Movies.aspx"  
    title="Movies"  
    description="Movies">  
    <MapNode url="~\Action.aspx"  
      title="Action"  
      description="Action"/>  
    <MapNode url="~\Drama.aspx"  
      title="Drama"  
      description="Drama"/>  
    <MapNode url="~\Musical.aspx"  
      title="Musical"  
      description="Musical"/>  
  </MapNode>  
</MapHomeNode>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.MenuItemBinding" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItemBindingCollection" />
      </Docs>
    </Member>
    <Member MemberName="DisappearAfter">
      <MemberSignature Language="C#" Value="public int DisappearAfter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DisappearAfter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DisappearAfter" />
      <MemberSignature Language="VB.NET" Value="Public Property DisappearAfter As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DisappearAfter { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(500)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a duração para a qual será exibido um menu dinâmico depois que o ponteiro do mouse não estiver mais posicionado sobre o menu.</summary>
        <value>Por quanto tempo (em milissegundos) será exibido um menu dinâmico depois que o ponteiro do mouse não estiver mais posicionado sobre o menu. O padrão é 500.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Por padrão, um menu dinâmico desaparecerá automaticamente após um determinado tempo quando o ponteiro do mouse não está posicionado sobre o menu. Use o <xref:System.Web.UI.WebControls.Menu.DisappearAfter%2A> propriedade para especificar a duração.  
  
> [!NOTE]
>  Um menu dinâmico desaparece imediatamente se o usuário clica fora do menu.  
  
 Você também pode especificar que um menu dinâmico deve desaparecer nunca automaticamente definindo essa propriedade como -1. Nesse caso, o item de menu dinâmico desaparecerá apenas quando o usuário clica fora do menu.  
  
 Essa propriedade não pode ser definida por temas ou temas de folha de estilo. Para obter mais informações, consulte <xref:System.Web.UI.ThemeableAttribute> e [capas e temas do ASP.NET](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.Menu.DisappearAfter%2A> propriedade para especificar que um menu dinâmico deve desaparecer depois que o usuário move o ponteiro do mouse do menu por mais de dois segundos.  
  
 [!code-aspx-csharp[MenuDisappearAfter#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDisappearAfter/CS/menudisappearaftercs.aspx#1)]
 [!code-aspx-vb[MenuDisappearAfter#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDisappearAfter/VB/menudisappearaftervb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">O valor selecionado é menor que -1.</exception>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
      </Docs>
    </Member>
    <Member MemberName="DynamicBottomSeparatorImageUrl">
      <MemberSignature Language="C#" Value="public string DynamicBottomSeparatorImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DynamicBottomSeparatorImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicBottomSeparatorImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DynamicBottomSeparatorImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a URL para uma imagem a ser exibida na parte inferior de cada item de menu dinâmico para separá-la de outros itens de menu.</summary>
        <value>A URL para uma imagem de separador exibida na parte inferior de cada item de menu dinâmico. O valor padrão é uma cadeia de caracteres vazia (""), que indica que essa propriedade não está definida.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl%2A> propriedade para especificar uma imagem personalizada opcional para exibir na parte inferior de cada item de menu dinâmico. Esta imagem age como um separador entre itens de menu e geralmente é uma imagem de uma linha.  
  
> [!NOTE]
>  Você também pode exibir uma imagem de separador na parte superior de cada item de menu dinâmico, definindo o <xref:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl%2A> propriedade.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl%2A> propriedade para exibir uma imagem de separador na parte inferior de cada item de menu dinâmico.  
  
 [!code-aspx-csharp[MenuDynamicBottomSeparatorImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicBottomSeparatorImageUrl/CS/menudynamicbottomseparatorimageurlcs.aspx#1)]
 [!code-aspx-vb[MenuDynamicBottomSeparatorImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicBottomSeparatorImageUrl/VB/menudynamicbottomseparatorimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="DynamicEnableDefaultPopOutImage">
      <MemberSignature Language="C#" Value="public bool DynamicEnableDefaultPopOutImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DynamicEnableDefaultPopOutImage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicEnableDefaultPopOutImage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DynamicEnableDefaultPopOutImage { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se a imagem interna que indica que um item de menu estático tem um submenu é exibida.</summary>
        <value>
          <see langword="true" /> Para exibir a imagem interna para itens de menu dinâmico com submenus; Caso contrário, <see langword="false" />. O padrão é <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando um item de menu dinâmico contém um submenu, uma imagem pode ser exibida para indicar que o usuário pode expandir o menu posicionando o ponteiro do mouse sobre o item de menu. Há duas maneiras de exibir essa imagem:  
  
-   Definir o <xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A> propriedade `true` para usar a imagem interna (padrão).  
  
-   Definir o <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> propriedade para especificar uma imagem personalizada.  
  
 Se o <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> estiver definida, essa imagem substituirá a imagem interna.  
  
> [!NOTE]
>  Se o <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> propriedade não está definida e o <xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A> está definida como `false`, nenhuma imagem é exibida.  
  
 Você pode especificar o texto alternativo para a imagem, definindo o <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString%2A> propriedade. Esse texto é exibido como uma dica de ferramenta quando o usuário posiciona o ponteiro do mouse sobre a imagem. Esse texto também fornece dispositivos de tecnologia assistencial com uma descrição da imagem que pode ser usada para tornar o controle mais acessíveis.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A> propriedade para ocultar a imagem que indica que um item de menu dinâmico tem um submenu. O <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> propriedade também deve ser definida como uma cadeia de caracteres vazia ("") para a imagem a ser ocultada.  
  
 [!code-aspx-csharp[MenuDynamicEnableDefaultPopOutImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicEnableDefaultPopOutImage/CS/menudynamicenabledefaultpopoutimagecs.aspx#1)]
 [!code-aspx-vb[MenuDynamicEnableDefaultPopOutImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicEnableDefaultPopOutImage/VB/menudynamicenabledefaultpopoutimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="DynamicHorizontalOffset">
      <MemberSignature Language="C#" Value="public int DynamicHorizontalOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DynamicHorizontalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicHorizontalOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DynamicHorizontalOffset { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o número de pixels para deslocar um menu dinâmico horizontalmente em relação ao seu item de menu pai.</summary>
        <value>O número de pixels para deslocar um menu dinâmico horizontalmente em relação ao seu item de menu pai. O padrão é 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset%2A> propriedade para ajustar a posição horizontal de um menu dinâmico em relação a seu item de menu pai. Essa propriedade afeta a posição de um menu dinâmico de maneira diferente dependendo se o <xref:System.Web.UI.WebControls.Menu> controle é exibido verticalmente ou horizontalmente (conforme especificado pelo <xref:System.Web.UI.WebControls.Menu.Orientation%2A> propriedade). A tabela a seguir descreve as diferenças.  
  
|{1&gt;Orientação&lt;1}|Descrição|  
|-----------------|-----------------|  
|Horizontal|Por padrão, um menu dinâmico é exibido abaixo de seu item de menu pai. Definir esta propriedade altera a posição do menu dinâmico horizontalmente desta posição de base.|  
|Vertical|Por padrão, um item de menu dinâmico é exibido ao lado de seu item de menu pai sem qualquer espaçamento entre. Definir essa propriedade controla o espaçamento horizontal entre o menu dinâmico e seu item de menu pai.|  
  
> [!NOTE]
>  Você pode definir essa propriedade como um valor negativo para deslocar um menu dinâmico em uma direção negativa. Se você estiver exibindo um menu vertical, um valor negativo faz com que um menu dinâmico e seu item de menu pai se sobreponham.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset%2A> propriedade para especificar um intervalo de 5 pixels entre um menu dinâmico e seu item de menu pai.  
  
 [!code-aspx-csharp[MenuDynamicHorizontalOffset#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicHorizontalOffset/CS/menudynamichorizontaloffsetcs.aspx#1)]
 [!code-aspx-vb[MenuDynamicHorizontalOffset#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicHorizontalOffset/VB/menudynamichorizontaloffsetvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicVerticalOffset" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSubMenuIndent" />
      </Docs>
    </Member>
    <Member MemberName="DynamicHoverStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style DynamicHoverStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style DynamicHoverStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DynamicHoverStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ DynamicHoverStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma referência ao objeto <see cref="T:System.Web.UI.WebControls.Style" /> que permite que você defina a aparência de um item de menu dinâmico quando o ponteiro do mouse está posicionado sobre ele.</summary>
        <value>Uma referência ao <see cref="T:System.Web.UI.WebControls.Style" /> que representa o estilo de um item de menu dinâmico quando o ponteiro do mouse está posicionado sobre ele.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A> propriedade para controlar a aparência de um item de menu dinâmico quando o ponteiro do mouse está posicionado sobre ele. Essa propriedade é somente leitura; No entanto, você pode definir as propriedades do <xref:System.Web.UI.WebControls.Style> retorna do objeto. As propriedades podem ser definidas declarativamente na forma `Property-Subproperty`, onde `Subproperty` é uma propriedade do <xref:System.Web.UI.WebControls.Style> objeto (por exemplo, `DynamicHoverStyle-ForeColor`). As propriedades podem também ser definidas programaticamente no formulário `Property.Subproperty` (por exemplo, `DynamicHoverStyle.ForeColor`).  
  
 Propriedades de estilo para um item de menu dinâmico são aplicadas na seguinte ordem:  
  
1.  <xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A>. Se o <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> coleção ou <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> coleção é definida, ela é aplicada neste momento, substituindo as outras propriedades de estilo do menu item.  
  
3.  <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A>. Se o <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> coleção é definida, ela é aplicada neste momento, substituindo as outras propriedades de estilo do menu item.  
  
4.  <xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A>.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A> propriedade para alterar a cor de plano de fundo de um item de menu dinâmico a azul-claro sky quando o usuário posiciona o ponteiro do mouse sobre ele.  
  
 [!code-aspx-csharp[MenuDynamicHoverStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicHoverStyle/CS/menudynamichoverstylecs.aspx#1)]
 [!code-aspx-vb[MenuDynamicHoverStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicHoverStyle/VB/menudynamichoverstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="DynamicItemFormatString">
      <MemberSignature Language="C#" Value="public string DynamicItemFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DynamicItemFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicItemFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicItemFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DynamicItemFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o texto adicional mostrado com todos os itens de menu que são exibidos dinamicamente.</summary>
        <value>O texto adicional ou caracteres que aparecem com todos os itens de menu. O valor padrão desta propriedade é "{0}."</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa propriedade pode ser usada para inserir texto para formatar itens de menu dinâmico em um menu de atalho exibido em dispositivos móveis. O <xref:System.Web.UI.WebControls.Menu> controle oferece suporte a modelos para a exibição de itens de menu estático e dinâmico. Para dispositivos móveis, modelos são ignorados, para que essa propriedade permite que você adicione caracteres ou texto para aplicar formatação a itens de menu sem usar um modelo.  
  
> [!NOTE]
>  Para obter uma formatação consistente quando você usar essa propriedade, você também deve definir o <xref:System.Web.UI.WebControls.Menu.StaticItemFormatString%2A> propriedade se você quiser que a formatação para que fiquem idênticas entre os itens de menu estático e dinâmico.  
  
 Se a formatação do modelo e essa propriedade são aplicadas, a formatação do modelo é ignorada para dispositivos móveis.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.Menu.StaticItemFormatString%2A> e <xref:System.Web.UI.WebControls.Menu.DynamicItemFormatString%2A> propriedades para adicionar texto para cada item de menu.  
  
 [!code-aspx-csharp[MenuItemFormatString#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemFormatString/CS/menuitemformatstringcs.aspx#1)]
 [!code-aspx-vb[MenuItemFormatString#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemFormatString/VB/menuitemformatstringvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticItemFormatString" />
      </Docs>
    </Member>
    <Member MemberName="DynamicItemTemplate">
      <MemberSignature Language="C#" Value="public System.Web.UI.ITemplate DynamicItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate DynamicItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ITemplate ^ DynamicItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.MenuItemTemplateContainer))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o modelo que contém o conteúdo personalizado a ser renderizado para um menu dinâmico.</summary>
        <value>Um <see cref="T:System.Web.UI.ITemplate" /> que contém o conteúdo personalizado para um menu dinâmico. O valor padrão é null, que indica que essa propriedade não está definida.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Em vez de usar o processamento interno para um menu dinâmico, você pode definir sua aparência para um item de menu dinâmico usando o <xref:System.Web.UI.WebControls.Menu.DynamicItemTemplate%2A> propriedade. Para especificar um modelo personalizado para um item de menu dinâmico, primeiro coloque `<DynamicItemTemplate>` marcas entre as marcas de abertura e fechamento do <xref:System.Web.UI.WebControls.Menu> controle. Em seguida, você pode listar o conteúdo do modelo entre a abertura e fechamento `<DynamicItemTemplate>` marcas. Você pode controlar ainda mais o estilo de um menu dinâmico usando o <xref:System.Web.UI.WebControls.Menu.DynamicItemFormatString%2A> propriedade.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicItemFormatString" />
      </Docs>
    </Member>
    <Member MemberName="DynamicMenuItemStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemStyle DynamicMenuItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemStyle DynamicMenuItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DynamicMenuItemStyle As MenuItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemStyle ^ DynamicMenuItemStyle { System::Web::UI::WebControls::MenuItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma referência ao objeto <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> que permite definir a aparência dos itens de menu em um menu dinâmico.</summary>
        <value>Uma referência ao <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> que representa o estilo dos itens de menu em um menu dinâmico.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A> propriedade para controlar a aparência dos itens de menu em um menu dinâmico. Essa propriedade é somente leitura; No entanto, você pode definir as propriedades do <xref:System.Web.UI.WebControls.MenuItemStyle> retorna do objeto. As propriedades podem ser definidas declarativamente na forma `Property-Subproperty`, onde `Subproperty` é uma propriedade do <xref:System.Web.UI.WebControls.MenuItemStyle> objeto (por exemplo, `DynamicMenuItemStyle-ForeColor`). As propriedades podem também ser definidas programaticamente no formulário `Property.Subproperty` (por exemplo, `DynamicMenuItemStyle.ForeColor`).  
  
 Propriedades de estilo para um item de menu dinâmico são aplicadas na seguinte ordem:  
  
1.  <xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A>. Se o <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> coleção ou <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> coleção é definida, ela é aplicada neste momento, substituindo as outras propriedades de estilo do menu item.  
  
3.  <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A>. Se o <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> coleção é definida, ela é aplicada neste momento, substituindo as outras propriedades de estilo do menu item.  
  
4.  <xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A>.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A> propriedade para especificar uma cor de plano de fundo sky azul claro para os itens de menu em um menu dinâmico.  
  
 [!code-aspx-csharp[MenuDynamicMenuItemStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/menudynamicmenuitemstyle/CS/MenuDynamicMenuItemStylecs.aspx#1)]
 [!code-aspx-vb[MenuDynamicMenuItemStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/menudynamicmenuitemstyle/VB/MenuDynamicMenuItemStylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="DynamicMenuStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SubMenuStyle DynamicMenuStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.SubMenuStyle DynamicMenuStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DynamicMenuStyle As SubMenuStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SubMenuStyle ^ DynamicMenuStyle { System::Web::UI::WebControls::SubMenuStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SubMenuStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma referência ao objeto <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> que permite definir a aparência de um menu dinâmico.</summary>
        <value>Uma referência ao <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> que representa o estilo de um menu dinâmico.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A> propriedade para controlar a aparência de um menu dinâmico. Essa propriedade é somente leitura; No entanto, você pode definir as propriedades do <xref:System.Web.UI.WebControls.MenuItemStyle> retorna do objeto. As propriedades podem ser definidas declarativamente na forma `Property-Subproperty`, onde `Subproperty` é uma propriedade do <xref:System.Web.UI.WebControls.MenuItemStyle> objeto (por exemplo, `DynamicMenuStyle-ForeColor`). As propriedades podem também ser definidas programaticamente no formulário `Property.Subproperty` (por exemplo, `DynamicMenuStyle.ForeColor`).  
  
 Propriedades de estilo para um item de menu dinâmico são aplicadas na seguinte ordem:  
  
1.  <xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A>. Se o <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> coleção ou <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> coleção é definida, ela é aplicada neste momento, substituindo as outras propriedades de estilo do menu item.  
  
3.  <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A>. Se o <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> coleção é definida, ela é aplicada neste momento, substituindo as outras propriedades de estilo do menu item.  
  
4.  <xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A>.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A> propriedade para especificar uma cor de plano de fundo sky azul claro para um menu dinâmico.  
  
 [!code-aspx-csharp[MenuDynamicMenuStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicMenuStyle/CS/menudynamicmenustylecs.aspx#1)]
 [!code-aspx-vb[MenuDynamicMenuStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicMenuStyle/VB/menudynamicmenustylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="DynamicPopOutImageTextFormatString">
      <MemberSignature Language="C#" Value="public string DynamicPopOutImageTextFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DynamicPopOutImageTextFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicPopOutImageTextFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DynamicPopOutImageTextFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o texto alternativo para a imagem usada para indicar que um item de menu dinâmico tem um submenu.</summary>
        <value>O texto alternativo para a imagem usada para indicar que um item de menu dinâmico tem um submenu. O padrão é uma cadeia de caracteres vazia (""), que indica que essa propriedade não está definida.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando um item de menu dinâmico contém um submenu, uma imagem pode ser exibida para indicar que o usuário pode expandir o menu. Use o <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString%2A> propriedade para especificar o texto alternativo para esta imagem. O texto que você especificar fornece dispositivos de tecnologia assistencial com uma descrição da imagem que pode ser usada para tornar o controle mais acessíveis.  
  
 Há duas maneiras de exibir a imagem:  
  
-   Definir o <xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A> propriedade `true` para usar a imagem interna (padrão).  
  
-   Definir o <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> propriedade para especificar uma imagem personalizada.  
  
> [!NOTE]
>  Essa propriedade se aplica a imagem interna e a imagem personalizada.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString%2A> propriedade para especificar o texto alternativo para a imagem usada para indicar que um item de menu dinâmico tem um submenu. Esse texto é exibido como uma dica de ferramenta quando o usuário posiciona o ponteiro do mouse sobre a imagem.  
  
 [!code-aspx-csharp[MenuDynamicPopoutImageText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicPopoutImageText/CS/menudynamicpopoutimagetextcs.aspx#1)]
 [!code-aspx-vb[MenuDynamicPopoutImageText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicPopoutImageText/VB/menudynamicpopoutimagetextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="DynamicPopOutImageUrl">
      <MemberSignature Language="C#" Value="public string DynamicPopOutImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DynamicPopOutImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicPopOutImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DynamicPopOutImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a URL para uma imagem personalizada que é exibida em um item de menu dinâmico quando o item de menu dinâmico tem um submenu.</summary>
        <value>A URL para uma imagem usada para indicar que um item de menu dinâmico tem um submenu. O valor padrão é uma cadeia de caracteres vazia (""), que indica que essa propriedade não está definida.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando um item de menu dinâmico contém um submenu, uma imagem pode ser exibida para indicar que o usuário pode expandir o menu posicionando o ponteiro do mouse sobre o item de menu. Há duas maneiras de exibir essa imagem:  
  
-   Definir o <xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A> propriedade `true` para usar a imagem interna (padrão).  
  
-   Definir o <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> propriedade para especificar uma imagem personalizada.  
  
 Se o <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> estiver definida, essa imagem substituirá a imagem interna.  
  
 Se o <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> propriedade não está definida e o <xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A> está definida como `false`, nenhuma imagem é exibida.  
  
> [!NOTE]
>  Quando você definir essa propriedade, use uma barra (/) em vez de uma barra invertida (\\). Se você usar barras invertidas no caminho, a imagem especificada não será exibida.  
  
 Você pode especificar o texto alternativo para a imagem, definindo o <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString%2A> propriedade.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> propriedade para especificar uma imagem personalizada para exibir em um item de menu dinâmico para indicar que o item de menu tem um submenu.  
  
 [!code-aspx-csharp[MenuDynamicPopoutImageText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicPopoutImageText/CS/menudynamicpopoutimagetextcs.aspx#1)]
 [!code-aspx-vb[MenuDynamicPopoutImageText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicPopoutImageText/VB/menudynamicpopoutimagetextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="DynamicSelectedStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemStyle DynamicSelectedStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemStyle DynamicSelectedStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DynamicSelectedStyle As MenuItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemStyle ^ DynamicSelectedStyle { System::Web::UI::WebControls::MenuItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma referência ao objeto <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> que permite definir a aparência do item de menu dinâmico selecionado pelo usuário.</summary>
        <value>Uma referência ao <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> que representa o estilo do item de menu dinâmico selecionado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A> propriedade para controlar a aparência de um item de menu dinâmico quando o usuário seleciona-lo no menu. Essa propriedade é somente leitura; No entanto, você pode definir as propriedades do <xref:System.Web.UI.WebControls.MenuItemStyle> retorna do objeto. As propriedades podem ser definidas declarativamente na forma `Property-Subproperty`, onde `Subproperty` é uma propriedade do <xref:System.Web.UI.WebControls.MenuItemStyle> objeto (por exemplo, `DynamicSelectedStyle-ForeColor`). As propriedades podem também ser definidas programaticamente no formulário `Property.Subproperty` (por exemplo, `DynamicSelectedStyle.ForeColor`).  
  
 Propriedades de estilo para um item de menu dinâmico são aplicadas na seguinte ordem:  
  
1.  <xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A>. Se o <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> coleção ou <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> coleção é definida, ela é aplicada neste momento, substituindo as outras propriedades de estilo do menu item.  
  
3.  <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A>. Se o <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> coleção é definida, ela é aplicada neste momento, substituindo as outras propriedades de estilo do menu item.  
  
4.  <xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A>.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A> propriedade para especificar uma cor de plano de fundo azul claro para o item de menu dinâmico selecionado.  
  
 [!code-aspx-csharp[MenuDynamicSelectedStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicSelectedStyle/CS/menudynamicselectedstylecs.aspx#1)]
 [!code-aspx-vb[MenuDynamicSelectedStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicSelectedStyle/VB/menudynamicselectedstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="DynamicTopSeparatorImageUrl">
      <MemberSignature Language="C#" Value="public string DynamicTopSeparatorImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DynamicTopSeparatorImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicTopSeparatorImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DynamicTopSeparatorImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a URL para uma imagem a ser exibida na parte superior de cada item de menu dinâmico para separá-la de outros itens de menu.</summary>
        <value>A URL para uma imagem de separador exibida na parte superior de cada item de menu dinâmico. O valor padrão é uma cadeia de caracteres vazia (""), que indica que essa propriedade não está definida.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl%2A> propriedade para especificar uma imagem personalizada opcional para exibir na parte superior de cada item de menu dinâmico. Esta imagem age como um separador entre itens de menu e geralmente é uma imagem de uma linha.  
  
> [!NOTE]
>  Você também pode exibir uma imagem de separador na parte inferior de cada item de menu dinâmico, definindo o <xref:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl%2A> propriedade.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl%2A> propriedade para exibir uma imagem de separador na parte superior de cada item de menu dinâmico.  
  
 [!code-aspx-csharp[MenuDynamicTopSeparatorImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicTopSeparatorImageUrl/CS/menudynamictopseparatorimageurlcs.aspx#1)]
 [!code-aspx-vb[MenuDynamicTopSeparatorImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicTopSeparatorImageUrl/VB/menudynamictopseparatorimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="DynamicVerticalOffset">
      <MemberSignature Language="C#" Value="public int DynamicVerticalOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DynamicVerticalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicVerticalOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicVerticalOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DynamicVerticalOffset { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o número de pixels para deslocar um menu dinâmico verticalmente em relação ao seu item de menu pai.</summary>
        <value>O número de pixels para deslocar um menu dinâmico verticalmente em relação ao seu item de menu pai. O padrão é 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.Menu.DynamicVerticalOffset%2A> propriedade para ajustar a posição vertical de um menu dinâmico em relação a seu item de menu pai. Essa propriedade afeta a posição de um menu dinâmico de maneira diferente dependendo se o <xref:System.Web.UI.WebControls.Menu> controle é exibido verticalmente ou horizontalmente (conforme especificado pelo <xref:System.Web.UI.WebControls.Menu.Orientation%2A> propriedade). A tabela a seguir descreve as diferenças.  
  
|{1&gt;Orientação&lt;1}|Descrição|  
|-----------------|-----------------|  
|Horizontal|Por padrão, um menu dinâmico é exibido abaixo de seu item de menu pai sem qualquer espaçamento entre. Definir essa propriedade controla o espaçamento vertical entre o menu dinâmico e seu item de menu pai.|  
|Vertical|Por padrão, um item de menu dinâmico é exibido ao lado de seu item de menu pai com as margens superiores alinhadas. Definir esta propriedade altera a posição do menu dinâmico verticalmente sua posição de base.|  
  
> [!NOTE]
>  Você pode definir essa propriedade como um valor negativo para deslocar um menu dinâmico em uma direção negativa. Se você estiver exibindo um menu horizontal, um valor negativo faz com que um menu dinâmico e seu item de menu pai se sobreponham.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.Menu.DynamicVerticalOffset%2A> propriedade para deslocar um menu dinâmico para baixo 10 pixels da parte superior do seu item de menu pai.  
  
 [!code-aspx-csharp[MenuDynamicHorizontalOffset#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicHorizontalOffset/CS/menudynamichorizontaloffsetcs.aspx#1)]
 [!code-aspx-vb[MenuDynamicHorizontalOffset#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicHorizontalOffset/VB/menudynamichorizontaloffsetvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Orientation" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSubMenuIndent" />
      </Docs>
    </Member>
    <Member MemberName="EnsureDataBound">
      <MemberSignature Language="C#" Value="protected override void EnsureDataBound ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void EnsureDataBound() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.EnsureDataBound" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub EnsureDataBound ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void EnsureDataBound();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Verifica se o controle de menu exige a associação de dados e se um controle de fonte de dados válido é especificado antes da chamada ao método <see cref="M:System.Web.UI.WebControls.Menu.DataBind" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Esse método é usado principalmente por desenvolvedores de controle para estender o <xref:System.Web.UI.WebControls.Menu> controle.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindItem">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItem FindItem (string valuePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.WebControls.MenuItem FindItem(string valuePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.FindItem(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindItem (valuePath As String) As MenuItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::WebControls::MenuItem ^ FindItem(System::String ^ valuePath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valuePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="valuePath">O caminho de valor para o item de menu a ser recuperado.</param>
        <summary>Recupera o item de menu no caminho de valor especificado.</summary>
        <returns>Um <see cref="T:System.Web.UI.WebControls.MenuItem" /> que representa o item de menu no caminho de valor especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.Menu.FindItem%2A> método para recuperar um <xref:System.Web.UI.WebControls.MenuItem> de objeto o <xref:System.Web.UI.WebControls.Menu> controle. Para recuperar o <xref:System.Web.UI.WebControls.MenuItem> do objeto, você deve especificar um caminho de menu para o item de menu. O caminho de menu é uma cadeia de caracteres de valores delimitadas que formam o caminho de um item de menu raiz para o item de menu atual. Para determinar o caractere delimitador, use o <xref:System.Web.UI.WebControls.Menu.PathSeparator%2A> propriedade.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.Menu.FindItem%2A> método para recuperar um item de menu de um <xref:System.Web.UI.WebControls.Menu> controle em um caminho de valor especificado.  
  
 [!code-aspx-csharp[MenuPathSeparator#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuPathSeparator/CS/menupathseparatorcs.aspx#1)]
 [!code-aspx-vb[MenuPathSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuPathSeparator/VB/menupathseparatorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.PathSeparator" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ValuePath" />
      </Docs>
    </Member>
    <Member MemberName="GetDesignModeState">
      <MemberSignature Language="C#" Value="protected override System.Collections.IDictionary GetDesignModeState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.IDictionary GetDesignModeState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.GetDesignModeState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetDesignModeState () As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::IDictionary ^ GetDesignModeState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera o estado em tempo de design do controle <see cref="T:System.Web.UI.WebControls.Menu" />.</summary>
        <returns>Um <see cref="T:System.Collections.IDictionary" /> que contém os dados em tempo de design do controle <see cref="T:System.Web.UI.WebControls.Menu" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Menu.GetDesignModeState%2A> é um método auxiliar usado para obter o estado atual de tempo de design do <xref:System.Web.UI.WebControls.Menu> controle.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="IncludeStyleBlock">
      <MemberSignature Language="C#" Value="public bool IncludeStyleBlock { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeStyleBlock" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.IncludeStyleBlock" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeStyleBlock As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeStyleBlock { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se o ASP.NET deve renderizar um bloco de definições CSS (folha de estilos em cascata) para os estilos que são usados no menu.</summary>
        <value>Um valor que indica se o ASP.NET deve renderizar um bloco de definições CSS para os estilos que são usados no menu. O valor padrão é <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Menu> controle usa estilos CSS para controlar sua aparência em um navegador. Por padrão, ele processa uma `style` elemento que contém as definições de CSS para classes de CSS que ele usa. Você geralmente defina essa propriedade como `false` nas seguintes situações:  
  
-   Você deseja fornecer suas próprias definições de CSS para personalizar a aparência do menu. Você deve fornecer seu próprio bloco de definições de CSS na página, ou incluir um link para um arquivo CSS externo que contém as definições.  
  
-   Você deseja manter a aparência padrão mas preferir manter as definições de CSS geradas em um arquivo separado. Em seguida, você deve fornecer o arquivo e um link para ele.  
  
 Em qualquer uma destas situações, você pode obter uma cópia do bloco de CSS padrão que o <xref:System.Web.UI.WebControls.Menu> controle gera definindo a propriedade como `true`, a execução da página e exibindo a página em um navegador. Em seguida, você pode exibir a origem da página no navegador e copiar e colar o bloco CSS em marcação da página ou em um arquivo separado.  
  
 Se você definir essa propriedade como `false`, você não pode definir propriedades de estilo. Por exemplo, você não pode adicionar uma `DynamicHoverStyle-ForeColor` atributo na marcação ou conjunto de `DynamicHoverStyle.ForeColor` propriedade no código.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemCollection Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemCollection Items" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As MenuItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemCollection ^ Items { System::Web::UI::WebControls::MenuItemCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuItemCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um objeto <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> que contém todos os itens de menu no controle <see cref="T:System.Web.UI.WebControls.Menu" />.</summary>
        <value>Um objeto <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> que contém todos os itens de menu no controle <see cref="T:System.Web.UI.WebControls.Menu" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.Menu.Items%2A> propriedade (coleção) para obter um <xref:System.Web.UI.WebControls.MenuItemCollection> objeto que contém o menu de todos os itens em uma <xref:System.Web.UI.WebControls.Menu> controle. Esta coleção normalmente é usada para iterar rapidamente todos os itens de menu, ou para acessar um item de menu específico.  
  
 O <xref:System.Web.UI.WebControls.Menu.Items%2A> coleção também pode ser usada para gerenciar programaticamente os itens de menu. Você pode adicionar, inserir, remover e recuperar <xref:System.Web.UI.WebControls.MenuItem> objetos da coleção. Todas as atualizações para a coleção serão refletidas automaticamente no <xref:System.Web.UI.WebControls.Menu> controle depois do próximo ida e volta ao servidor.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.Menu.Items%2A> itens de coleção para atravessar o menu no <xref:System.Web.UI.WebControls.Menu> controle.  
  
 [!code-aspx-csharp[MenuItems#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItems/CS/menuitemscs.aspx#1)]
 [!code-aspx-vb[MenuItems#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItems/VB/menuitemsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItemCollection" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
      </Docs>
    </Member>
    <Member MemberName="ItemWrap">
      <MemberSignature Language="C#" Value="public bool ItemWrap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ItemWrap" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.ItemWrap" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemWrap As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ItemWrap { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se o texto para os itens de menu deve quebrar.</summary>
        <value>
          <see langword="true" /> para quebrar o texto do item de menu; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.Menu.ItemWrap%2A> propriedade para especificar se o texto exibido em cada item de menu é quebrado. Quando o texto fica sem espaço, automaticamente é dividir e continua na linha seguinte.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.Menu.ItemWrap%2A> para ativar a quebra de texto no <xref:System.Web.UI.WebControls.Menu> controle.  
  
 [!code-aspx-csharp[MenuItemWrap#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemWrap/CS/menuitemwrapcs.aspx#1)]
 [!code-aspx-vb[MenuItemWrap#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemWrap/VB/menuitemwrapvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Font" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.ForeColor" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicVerticalOffset" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSubMenuIndent" />
      </Docs>
    </Member>
    <Member MemberName="LevelMenuItemStyles">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemStyleCollection LevelMenuItemStyles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemStyleCollection LevelMenuItemStyles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LevelMenuItemStyles As MenuItemStyleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemStyleCollection ^ LevelMenuItemStyles { System::Web::UI::WebControls::MenuItemStyleCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemStyleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um objeto <see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" /> que contém as configurações de estilo aplicadas a itens de menu com base em seu nível em um controle <see cref="T:System.Web.UI.WebControls.Menu" />.</summary>
        <value>Um <see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" /> que contém as configurações de estilo aplicadas a itens de menu com base em seu nível em um controle <see cref="T:System.Web.UI.WebControls.Menu" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> coleção como uma alternativa para as propriedades de estilo individuais (como <xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A>) para controlar o estilo dos itens de menu nos níveis individuais do menu. Os estilos contidos na coleção são aplicados aos itens de menu baseados em seu nível de menu. O primeiro estilo na coleção corresponde ao estilo dos itens de menu no primeiro nível do menu. O segundo estilo na coleção corresponde ao estilo de itens de menu no segundo nível do menu e assim por diante. Essa coleção é geralmente usada para gerar tabela de menus de navegação de conteúdo-estilo onde os itens de menu em um determinado nível devem ter a mesma aparência, independentemente de terem submenus.  
  
> [!NOTE]
>  Se um estilo for definido para um determinado nível usando a <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> coleção, essa substitui qualquer item de menu Estilo configurações para os itens de menu neste nível.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> coleção para aplicar configurações de estilo para os itens de menu em um <xref:System.Web.UI.WebControls.Menu> controle com base em seu nível.  
  
 [!code-aspx-csharp[MenuLevelMenuItemStyles#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuLevelMenuItemStyles/CS/menulevelmenuitemstylecs.aspx#1)]
 [!code-aspx-vb[MenuLevelMenuItemStyles#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuLevelMenuItemStyles/VB/menulevelmenuitemstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="LevelSelectedStyles">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemStyleCollection LevelSelectedStyles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemStyleCollection LevelSelectedStyles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LevelSelectedStyles As MenuItemStyleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemStyleCollection ^ LevelSelectedStyles { System::Web::UI::WebControls::MenuItemStyleCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemStyleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um objeto <see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" /> que contém as configurações de estilo aplicadas ao item de menu selecionado com base em seu nível em um controle <see cref="T:System.Web.UI.WebControls.Menu" />.</summary>
        <value>Um <see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" /> que contém as configurações de estilo aplicadas ao item de menu selecionado com base em seu nível em um controle <see cref="T:System.Web.UI.WebControls.Menu" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> coleção como uma alternativa para o <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A> e <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A> propriedades para controlar o estilo de um item de menu selecionado nos níveis individuais do menu. Os estilos contidos na coleção são aplicados a um item de menu selecionado com base em seu nível de menu. O primeiro estilo na coleção corresponde ao estilo de um item de menu selecionado no primeiro nível do menu. O segundo estilo na coleção corresponde ao estilo de um item de menu selecionado no segundo nível do menu e assim por diante. Essa coleção é geralmente usada para gerar tabela de menus de navegação de conteúdo-estilo onde os itens de menu em um determinado nível devem ter a mesma aparência, independentemente de terem submenus.  
  
> [!NOTE]
>  Se um estilo for definido para um determinado nível usando a <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> coleção, isso substitui o <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A> e <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A> propriedades nesse nível.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> coleção para aplicar uma configuração de estilo para o item de menu selecionado em um <xref:System.Web.UI.WebControls.Menu> controle com base em seu nível.  
  
 [!code-aspx-csharp[MenuLevelMenuItemStyles#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuLevelMenuItemStyles/CS/menulevelmenuitemstylecs.aspx#1)]
 [!code-aspx-vb[MenuLevelMenuItemStyles#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuLevelMenuItemStyles/VB/menulevelmenuitemstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="LevelSubMenuStyles">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SubMenuStyleCollection LevelSubMenuStyles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.SubMenuStyleCollection LevelSubMenuStyles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LevelSubMenuStyles As SubMenuStyleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SubMenuStyleCollection ^ LevelSubMenuStyles { System::Web::UI::WebControls::SubMenuStyleCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SubMenuStyleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um objeto <see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" /> que contém as configurações de estilo aplicadas aos itens de submenu no menu estático com base em seu nível em um controle <see cref="T:System.Web.UI.WebControls.Menu" />.</summary>
        <value>Um <see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" /> que contém as configurações de estilo aplicadas aos itens de submenu no menu estático com base em seu nível em um controle <see cref="T:System.Web.UI.WebControls.Menu" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> coleção como uma alternativa para as propriedades de estilo individuais (como <xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A>) para controlar o estilo dos itens de submenu estático exibidas no menu estático nos níveis individuais. Os estilos contidos na coleção são aplicados para os itens de submenu estático com base em seu nível de menu. O primeiro estilo na coleção corresponde ao estilo de primeiro nível submenu estático exibido no menu estático. O segundo estilo na coleção corresponde ao estilo de submenu de segundo nível são exibido no menu estático e assim por diante. Essa coleção é geralmente usada para gerar tabela de menus de navegação de conteúdo-estilo onde os itens de menu em um determinado nível devem ter a mesma aparência, independentemente de terem submenus.  
  
> [!NOTE]
>  Se um estilo for definido para um determinado nível usando a <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> coleção, essa substitui qualquer item de submenu estático estilo configurações nesse nível.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> coleção para aplicar configurações de estilo para os itens de submenu exibidos no menu estático de uma <xref:System.Web.UI.WebControls.Menu> controle com base em seu nível.  
  
 [!code-aspx-csharp[MenuLevelSubMenuStyles#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuLevelSubMenuStyles/CS/menulevelsubmenustylescs.aspx#1)]
 [!code-aspx-vb[MenuLevelSubMenuStyles#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuLevelSubMenuStyles/VB/menulevelsubmenustylesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected internal override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub LoadControlState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void LoadControlState(System::Object ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Um <see cref="T:System.Object" /> que representa o estado de controle a ser restaurado.</param>
        <summary>Carrega os estados das propriedades no controle <see cref="T:System.Web.UI.WebControls.Menu" /> que devem ser persistentes.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Esse método é usado principalmente por desenvolvedores de controle para estender o <xref:System.Web.UI.WebControls.Menu> controle.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">Um <see cref="T:System.Object" /> que contém os valores de estado da exibição salvos para o controle.</param>
        <summary>Carrega o estado de exibição salvo anteriormente do controle <see cref="T:System.Web.UI.WebControls.Menu" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumDynamicDisplayLevels">
      <MemberSignature Language="C#" Value="public int MaximumDynamicDisplayLevels { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumDynamicDisplayLevels" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumDynamicDisplayLevels As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaximumDynamicDisplayLevels { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(3)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o número de níveis de menu para renderizar um menu dinâmico.</summary>
        <value>O número de níveis de menu para renderizar um menu dinâmico. O padrão é 3.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode exibir vários níveis de menu no menu estático, definindo o <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> propriedade para um valor maior que 1. Você também pode exibir níveis adicionais nos menus dinâmicos definindo essa propriedade como um valor maior que 0. Por exemplo, se você exibir dois níveis de menu no menu estático (definindo o <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> propriedade 2) e, em seguida, defina essa propriedade como 3, o menu de adicionais três níveis são exibidos nos menus dinâmicos. Todos os demais níveis mais altos menu (se houver) são descartados.  
  
> [!NOTE]
>  A definição dessa propriedade como 0 exibe um menu simples até o nível especificado o <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> propriedade, sem qualquer menus dinâmicos.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels%2A> propriedade para limitar o número de níveis de menu a ser exibido em um menu dinâmico como 1. Somente o nível raiz é exibido.  
  
 [!code-aspx-csharp[MenuMaximumDynamicDisplayLevels#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuMaximumDynamicDisplayLevels/CS/menumaximumdynamicdisplaylevelscs.aspx#1)]
 [!code-aspx-vb[MenuMaximumDynamicDisplayLevels#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuMaximumDynamicDisplayLevels/VB/menumaximumdynamicdisplaylevelsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">A propriedade <see cref="P:System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels" /> é definida com um valor menor que 0.</exception>
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticDisplayLevels" />
      </Docs>
    </Member>
    <Member MemberName="MenuItemClick">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.MenuEventHandler MenuItemClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.MenuEventHandler MenuItemClick" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Menu.MenuItemClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MenuItemClick As MenuEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::MenuEventHandler ^ MenuItemClick;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando um usuário clica em um item de menu em um controle <see cref="T:System.Web.UI.WebControls.Menu" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Menu.MenuItemClick> é gerado quando um item de menu é clicado em uma <xref:System.Web.UI.WebControls.Menu> controle. Isso permite que você forneça um manipulador de eventos que executa uma rotina personalizada, como a sincronização com outro controle na página, sempre que esse evento ocorre.  
  
 Um <xref:System.Web.UI.WebControls.MenuEventArgs> objeto é passado para o manipulador de eventos, que permite acessar as propriedades do item de menu que gerou o evento.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como criar um manipulador de eventos para o <xref:System.Web.UI.WebControls.Menu.MenuItemClick> eventos que exibe o texto do item de menu selecionado pelo usuário.  
  
 [!code-aspx-csharp[MenuMenuItemClick#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuMenuItemClick/CS/menumenuitemclickcs.aspx#1)]
 [!code-aspx-vb[MenuMenuItemClick#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuMenuItemClick/VB/menumenuitemclickvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.MenuEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.MenuEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.Menu.MenuItemDataBound" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.OnMenuItemClick(System.Web.UI.WebControls.MenuEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="MenuItemClickCommandName">
      <MemberSignature Language="C#" Value="public static readonly string MenuItemClickCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string MenuItemClickCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Menu.MenuItemClickCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MenuItemClickCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ MenuItemClickCommandName;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Contém o nome do comando.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este campo somente leitura contém o nome do comando usado para acessar itens de menu. O valor padrão é "Clique".  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuItemDataBound">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.MenuEventHandler MenuItemDataBound;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.MenuEventHandler MenuItemDataBound" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Menu.MenuItemDataBound" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MenuItemDataBound As MenuEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::MenuEventHandler ^ MenuItemDataBound;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando um item de menu em um controle <see cref="T:System.Web.UI.WebControls.Menu" /> é associado a dados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Menu.MenuItemDataBound> evento é gerado quando um item de menu está associado a dados em um <xref:System.Web.UI.WebControls.Menu> controle. Isso permite que você forneça um manipulador de eventos que executa uma rotina personalizada, como adicionar conteúdo personalizado ou modificar um item de menu antes que ele for renderizado, sempre que esse evento ocorre.  
  
 Um <xref:System.Web.UI.WebControls.MenuEventArgs> objeto é passado para o manipulador de eventos, que permite acessar as propriedades do item de menu que gerou o evento.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como criar um manipulador de eventos para o <xref:System.Web.UI.WebControls.Menu.MenuItemDataBound> que modifica o texto do evento a `Home` item de menu antes de ser exibido em um <xref:System.Web.UI.WebControls.Menu> controle.  
  
 [!code-aspx-csharp[MenuItemDataBound#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemDataBound/CS/menumenuitemdataboundcs.aspx#1)]
 [!code-aspx-vb[MenuItemDataBound#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemDataBound/VB/menumenuitemdataboundvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.MenuEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.MenuEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.Menu.MenuItemClick" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.OnMenuItemDataBound(System.Web.UI.WebControls.MenuEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnBubbleEvent(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBubbleEvent (source As Object, e As EventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnBubbleEvent(System::Object ^ source, EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">A fonte do evento.</param>
        <param name="e">Um <see cref="T:System.EventArgs" /> que contém dados do evento.</param>
        <summary>Determina se o evento para o controle <see cref="T:System.Web.UI.WebControls.Menu" /> é passado para um nível acima na hierarquia de controle de servidor da interface do usuário da página.</summary>
        <returns>
          <see langword="true" /> se o evento tiver sido cancelado; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este membro substitui <xref:System.Web.UI.Control.OnBubbleEvent%2A>.  
  
> [!NOTE]
>  Esse método é usado principalmente por desenvolvedores de controle para estender o <xref:System.Web.UI.WebControls.Menu> controle.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDataBinding">
      <MemberSignature Language="C#" Value="protected override void OnDataBinding (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDataBinding(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.OnDataBinding(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDataBinding (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDataBinding(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Web.UI.WebControls.MenuEventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Web.UI.Control.DataBinding" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.Control.DataBinding> evento é gerado quando os dados serão associados ao <xref:System.Web.UI.WebControls.Menu> controle. Este método notifica o controle para executar qualquer lógica de associação de dados que está associada ele.  
  
 O <xref:System.Web.UI.WebControls.Menu.OnDataBinding%2A> método permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada.  
  
 Esse método é geralmente usado por desenvolvedores de controle ao estender o <xref:System.Web.UI.WebControls.Menu> classe.  
  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao substituir <see cref="M:System.Web.UI.WebControls.Menu.OnDataBinding(System.EventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Web.UI.WebControls.Menu.OnDataBinding(System.EventArgs)" /> método para que registrado delegados receber o evento.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.MenuEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.MenuEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.Menu.MenuItemDataBound" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Web.UI.WebControls.MenuEventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Web.UI.Control.Init" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando notificado por esse método, os controles de servidor Web devem executar as etapas de inicialização que são necessárias para criar e configurar uma instância. Neste estágio do ciclo de vida do controle de servidor, o estado de exibição do controle ainda precisa ser preenchida. Além disso, você não pode acessar outro controle de servidor quando este método é chamado, independentemente de ser um filho ou pai para este controle. Não há garantia de que outros controles de servidor ser criado e está pronto para acesso.  
  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).  
  
 O <xref:System.Web.UI.WebControls.Menu.OnInit%2A> método também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao substituir <see cref="M:System.Web.UI.WebControls.Menu.OnInit(System.EventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Web.UI.WebControls.Menu.OnInit(System.EventArgs)" /> método para que registrado delegados receber o evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMenuItemClick">
      <MemberSignature Language="C#" Value="protected virtual void OnMenuItemClick (System.Web.UI.WebControls.MenuEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMenuItemClick(class System.Web.UI.WebControls.MenuEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.OnMenuItemClick(System.Web.UI.WebControls.MenuEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMenuItemClick (e As MenuEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMenuItemClick(System::Web::UI::WebControls::MenuEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.MenuEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Web.UI.WebControls.MenuEventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Web.UI.WebControls.Menu.MenuItemClick" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Menu.OnMenuItemClick%2A> método é chamado pelo <xref:System.Web.UI.WebControls.Menu> controle para gerar o <xref:System.Web.UI.WebControls.Menu.MenuItemClick> evento. Ele é normalmente usado por desenvolvedores de controle ao estender o <xref:System.Web.UI.WebControls.Menu> classe.  
  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).  
  
 O <xref:System.Web.UI.WebControls.Menu.OnMenuItemClick%2A> método também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao substituir <see cref="M:System.Web.UI.WebControls.Menu.OnMenuItemClick(System.Web.UI.WebControls.MenuEventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Web.UI.WebControls.Menu.OnMenuItemClick(System.Web.UI.WebControls.MenuEventArgs)" /> método para que registrado delegados receber o evento.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.MenuEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.MenuEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.Menu.MenuItemClick" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.OnMenuItemDataBound(System.Web.UI.WebControls.MenuEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMenuItemDataBound">
      <MemberSignature Language="C#" Value="protected virtual void OnMenuItemDataBound (System.Web.UI.WebControls.MenuEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMenuItemDataBound(class System.Web.UI.WebControls.MenuEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.OnMenuItemDataBound(System.Web.UI.WebControls.MenuEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMenuItemDataBound (e As MenuEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMenuItemDataBound(System::Web::UI::WebControls::MenuEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.MenuEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Web.UI.WebControls.MenuEventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Web.UI.WebControls.Menu.MenuItemDataBound" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Menu.OnMenuItemDataBound%2A> método é chamado pelo <xref:System.Web.UI.WebControls.Menu> controle para gerar o <xref:System.Web.UI.WebControls.Menu.MenuItemDataBound> evento. Ele é normalmente usado por desenvolvedores de controle ao estender o <xref:System.Web.UI.WebControls.Menu> classe.  
  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).  
  
 O <xref:System.Web.UI.WebControls.Menu.OnMenuItemDataBound%2A> método também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao substituir <see cref="M:System.Web.UI.WebControls.Menu.OnMenuItemDataBound(System.Web.UI.WebControls.MenuEventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Web.UI.WebControls.Menu.OnMenuItemDataBound(System.Web.UI.WebControls.MenuEventArgs)" /> método para que registrado delegados receber o evento.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.MenuEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.MenuEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.Menu.MenuItemDataBound" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.OnMenuItemClick(System.Web.UI.WebControls.MenuEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.EventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Web.UI.Control.PreRender" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Menu.OnPreRender%2A> método é chamado pelo <xref:System.Web.UI.WebControls.Menu> controle para gerar o <xref:System.Web.UI.Control.PreRender> evento. Ele é normalmente usado por desenvolvedores de controle ao estender o <xref:System.Web.UI.WebControls.Menu> classe.  
  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).  
  
 O <xref:System.Web.UI.WebControls.Menu.OnPreRender%2A> método também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao substituir <see cref="M:System.Web.UI.WebControls.Menu.OnPreRender(System.EventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Web.UI.WebControls.Menu.OnPreRender(System.EventArgs)" /> método para que registrado delegados receber o evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Orientation Orientation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Orientation Orientation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.Orientation" />
      <MemberSignature Language="VB.NET" Value="Public Property Orientation As Orientation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Orientation Orientation { System::Web::UI::WebControls::Orientation get(); void set(System::Web::UI::WebControls::Orientation value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Orientation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a direção na qual renderizar o controle <see cref="T:System.Web.UI.WebControls.Menu" />.</summary>
        <value>Um dos valores de enumeração <see cref="T:System.Web.UI.WebControls.Orientation" />. O padrão é <see langword="Orientation.Vertical" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.Menu.Orientation%2A> propriedade para especificar a direção na qual renderizar o <xref:System.Web.UI.WebControls.Menu> controle. A tabela a seguir lista as instruções disponíveis.  
  
|{1&gt;Orientação&lt;1}|Descrição|  
|-----------------|-----------------|  
|`Orientation.Horizontal`|O <xref:System.Web.UI.WebControls.Menu> controle é disposto horizontalmente.|  
|`Orientation.Vertical`|O <xref:System.Web.UI.WebControls.Menu> controle é processado verticalmente.|  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.Menu.Orientation%2A> propriedade para exibir um menu horizontal.  
  
 [!code-aspx-csharp[MenuOrientation#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuOrientation/CS/menuorientationcs.aspx#1)]
 [!code-aspx-vb[MenuOrientation#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuOrientation/VB/menuorientationvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Orientation" />
      </Docs>
    </Member>
    <Member MemberName="PathSeparator">
      <MemberSignature Language="C#" Value="public char PathSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char PathSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.PathSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property PathSeparator As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char PathSeparator { char get(); void set(char value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue('/')</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o caractere usado para delimitar o caminho de um item de menu em um controle <see cref="T:System.Web.UI.WebControls.Menu" />.</summary>
        <value>O caractere usado para delimitar o caminho de um item de menu. O valor padrão é uma barra (/).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cada item de menu (representado por um <xref:System.Web.UI.WebControls.MenuItem> objeto) no <xref:System.Web.UI.WebControls.Menu> controle tem um <xref:System.Web.UI.WebControls.MenuItem.ValuePath%2A> propriedade que especifica a posição do item de menu. O caminho de valor é uma cadeia de caracteres de valores delimitadas que formam o caminho de um item de menu raiz para o item de menu atual. Use o <xref:System.Web.UI.WebControls.Menu.PathSeparator%2A> propriedade para especificar o caractere delimitador usado para separar os valores no caminho do menu. Esse valor normalmente é usado ao analisar a lista de valores individuais.  
  
 Dependendo do texto exibido no <xref:System.Web.UI.WebControls.Menu> controle, o caractere delimitador talvez precise ser alterada para evitar qualquer conflito. Por exemplo, se você definir o caractere delimitador de vírgula, o texto exibido não deve conter qualquer vírgulas. Caso contrário, o <xref:System.Web.UI.WebControls.MenuItem.ValuePath%2A> propriedade não pode ser analisada com precisão.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.Menu.PathSeparator%2A> propriedade para alterar o caractere delimitador de caminho do valor de um item de menu para uma vírgula.  
  
 [!code-aspx-csharp[MenuPathSeparator#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuPathSeparator/CS/menupathseparatorcs.aspx#1)]
 [!code-aspx-vb[MenuPathSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuPathSeparator/VB/menupathseparatorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ValuePath" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.FindItem(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="PerformDataBinding">
      <MemberSignature Language="C#" Value="protected internal override void PerformDataBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void PerformDataBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.PerformDataBinding" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub PerformDataBinding ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void PerformDataBinding();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Associa os itens da fonte de dados aos itens de menu no controle <see cref="T:System.Web.UI.WebControls.Menu" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Menu.PerformDataBinding%2A> é um método auxiliar chamado pelo <xref:System.Web.UI.WebControls.Menu> controle para associar os itens na fonte de dados para o <xref:System.Web.UI.WebControls.Menu> controle.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.HierarchicalDataBoundControl.PerformDataBinding" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected internal virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Um <see cref="T:System.String" /> que representa o argumento de eventos passado para o manipulador de eventos.</param>
        <summary>Processa um evento acionado quando um formulário é postado no servidor.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">O <see cref="T:System.Web.UI.HtmlTextWriter" /> que representa o fluxo de saída usado para gravar o conteúdo em uma página da Web.</param>
        <summary>Renderiza o controle de menu no navegador do cliente.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="public override void RenderBeginTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderBeginTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RenderBeginTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RenderBeginTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">O <see cref="T:System.Web.UI.HtmlTextWriter" /> que contém métodos para criar e renderizar a saída específica ao dispositivo.</param>
        <summary>Adiciona atributos de marcação e grava a marcação para a marcação de abertura do controle no fluxo de saída emitido para o navegador ou dispositivo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Menu.RenderBeginTag%2A> método adiciona atributos da marca e grava a marcação para a marca de abertura do controle de fluxo de saída emitido para o fluxo de resposta para o navegador do cliente.  
  
 Substituir <xref:System.Web.UI.WebControls.Menu.RenderBeginTag%2A> quando desejar implementar o comportamento personalizado, por exemplo, para gravar no fluxo de resposta antes de qualquer várias marcas controlar o conteúdo, como `<table><tr><td>`. Esse método substitui o <xref:System.Web.UI.WebControls.Menu.RenderBeginTag%2A> método para adicionar o <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A> propriedade.  
  
> [!NOTE]
>  Esse método é usado principalmente por desenvolvedores de controle para estender o <xref:System.Web.UI.WebControls.Menu> controle.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected internal override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">O <see cref="T:System.Web.UI.HtmlTextWriter" /> que contém métodos para compilar e renderizar a saída específica ao dispositivo.</param>
        <summary>Este membro substitui <see cref="M:System.Web.UI.WebControls.WebControl.RenderContents(System.Web.UI.HtmlTextWriter)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Substituir o <xref:System.Web.UI.WebControls.WebControl.RenderContents%2A> método para renderizar o conteúdo do controle entre as marcas de início e de término. A implementação padrão desse método processa qualquer filho controles.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderEndTag">
      <MemberSignature Language="C#" Value="public override void RenderEndTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderEndTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RenderEndTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RenderEndTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">O <see cref="T:System.Web.UI.HtmlTextWriter" /> que contém métodos para compilar e renderizar a saída específica ao dispositivo.</param>
        <summary>Executa a marcação final e grava a marcação de fechamento HTML do controle no fluxo de saída emitido para o navegador ou dispositivo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método substitui <xref:System.Web.UI.WebControls.WebControl.RenderEndTag%2A?displayProperty=nameWithType> para renderizar <xref:System.Web.UI.WebControls.Menu> submenus e <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A> propriedade.  
  
> [!NOTE]
>  Esse método é usado principalmente por desenvolvedores de controle para estender o <xref:System.Web.UI.WebControls.Menu> controle.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderingMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuRenderingMode RenderingMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.MenuRenderingMode RenderingMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.RenderingMode" />
      <MemberSignature Language="VB.NET" Value="Public Property RenderingMode As MenuRenderingMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuRenderingMode RenderingMode { System::Web::UI::WebControls::MenuRenderingMode get(); void set(System::Web::UI::WebControls::MenuRenderingMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuRenderingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que especifica se o controle <see cref="T:System.Web.UI.WebControls.Menu" /> renderiza elementos <see langword="table" /> HTML e estilos embutidos ou elementos <see langword="listitem" /> e estilos CSS (da folha de estilos em cascata).</summary>
        <value>Um valor que especifica se o controle <see cref="T:System.Web.UI.WebControls.Menu" /> renderiza elementos <see langword="table" /> HTML e estilos embutidos ou elementos <see langword="listitem" /> e estilos CSS (da folha de estilos em cascata). O valor padrão é <see cref="F:System.Web.UI.WebControls.MenuRenderingMode.Default" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O valor de <xref:System.Web.UI.WebControls.Menu.RenderingMode%2A> propriedade determina como o controle de menu renderiza marcações para o <xref:System.Web.UI.WebControls.Menu> controle.  
  
 No ASP.NET 3.5 e versões anteriores, o <xref:System.Web.UI.WebControls.Menu> usa o controle HTML `table` elementos e estilos embutidos para especificar a aparência do menu em um navegador. No ASP.NET 4 e versões posteriores, por padrão o <xref:System.Web.UI.WebControls.Menu> usa o controle HTML `listitem` elementos e estilo em cascata da folha de estilos (CSS).  
  
 Se você não definir essa propriedade, o <xref:System.Web.UI.WebControls.Menu> controle processa a marcação que é apropriada para a versão do ASP.NET que é indicada pelo <xref:System.Web.UI.Control.RenderingCompatibility%2A?displayProperty=nameWithType> propriedade. O <xref:System.Web.UI.WebControls.Menu> controle usa as seguintes regras:  
  
-   Se o valor da <xref:System.Web.UI.Control.RenderingCompatibility%2A> é de propriedade `3.5`, o <xref:System.Web.UI.WebControls.Menu> usa o controle HTML `table` elementos e estilos embutidos.  
  
-   Se o valor da <xref:System.Web.UI.Control.RenderingCompatibility%2A> é de propriedade `4.0` ou superior, o <xref:System.Web.UI.WebControls.Menu> usa o controle HTML `listitem` elementos e estilos CSS.  
  
 Esta propriedade é fornecida para compatibilidade com versões anteriores. Se o <xref:System.Web.UI.Control.RenderingCompatibility%2A> propriedade indica que você deseja que os controles para gerar o HTML que é compatível com o ASP.NET 4 ou posterior, mas você deseja o <xref:System.Web.UI.WebControls.Menu> controlar para uma exceção que usa o comportamento anterior, você pode definir essa propriedade <xref:System.Web.UI.WebControls.MenuRenderingMode.Table>. Por exemplo, se você tiver uma página da Web que exibe o texto da direita para a esquerda convém definir essa propriedade como <xref:System.Web.UI.WebControls.MenuRenderingMode.Table> porque alguns navegadores não exibem o <xref:System.Web.UI.WebControls.MenuRenderingMode.List> marcação de modo corretamente para o texto da direita para esquerda.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.RenderingCompatibility" />
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected internal override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ SaveControlState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Salva os estados das propriedades no controle <see cref="T:System.Web.UI.WebControls.Menu" /> que devem ser persistentes.</summary>
        <returns>Um objeto que contém os dados de estado para o controle. Se não houve nenhuma alteração no estado, este método retornará <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método é usado para salvar o estado das propriedades de <xref:System.Web.UI.WebControls.Menu> controle que precisam ser mantidos, mesmo quando o <xref:System.Web.UI.Control.EnableViewState%2A> está definida como `false`. O <xref:System.Web.UI.WebControls.Menu.SaveControlState%2A> método está preocupado com os dados de estado que são essencial para a operação do controle (por exemplo, um índice ou a palavra-chave) e está separado dos dados de estado de exibição do controle.  
  
> [!NOTE]
>  Esse método é usado principalmente por desenvolvedores de controle para estender o <xref:System.Web.UI.WebControls.Menu> controle.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Salva o estado do controle <see cref="T:System.Web.UI.WebControls.Menu" />.</summary>
        <returns>Um <see cref="T:System.Object" /> que contém o estado do controle <see cref="T:System.Web.UI.WebControls.Menu" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollDownImageUrl">
      <MemberSignature Language="C#" Value="public string ScrollDownImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScrollDownImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollDownImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ScrollDownImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a URL para uma imagem exibida em um menu dinâmico para indicar que o usuário pode rolar para baixo para obter itens de menu adicionais.</summary>
        <value>A URL para uma imagem exibida em um menu dinâmico para indicar que o usuário pode rolar para baixo para itens de menu adicionais. O valor padrão é uma cadeia de caracteres vazia (""), que indica que essa propriedade não está definida.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Não há suporte para essa propriedade no modo de renderização do .NET 4.0. Se essa propriedade for necessária, você pode definir o menu para o modo de renderização do .NET 3.5, adicionando o seguinte no código da página:  
  
```  
menuInstance.RenderingCompatibility = new Version(3, 5);  
```  
  
 Use o <xref:System.Web.UI.WebControls.Menu.ScrollDownImageUrl%2A> propriedade para especificar uma imagem personalizada para exibir na parte inferior de cada menu dinâmico para indicar que o usuário pode rolar para baixo para itens de menu adicionais.  
  
> [!NOTE]
>  Se essa propriedade não está definida, interno, a imagem padrão é usada.  
  
 Você pode especificar o texto alternativo para a imagem, definindo o <xref:System.Web.UI.WebControls.Menu.ScrollDownText%2A> propriedade.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.Menu.ScrollDownImageUrl%2A> propriedade para exibir uma imagem personalizada, indicando que o usuário pode rolar para baixo em um menu dinâmico para itens de menu adicionais.  
  
 [!code-aspx-csharp[MenuScrollDownImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuScrollDownImage/CS/menuscrolldownimagecs.aspx#1)]
 [!code-aspx-vb[MenuScrollDownImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuScrollDownImage/VB/menuscrolldownimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
      </Docs>
    </Member>
    <Member MemberName="ScrollDownText">
      <MemberSignature Language="C#" Value="public string ScrollDownText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScrollDownText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollDownText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ScrollDownText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o texto alternativo para a imagem especificada na propriedade <see cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />.</summary>
        <value>O texto alternativo para a imagem especificada a <see cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" /> propriedade. O padrão é uma cadeia de caracteres vazia (""), que indica que essa propriedade não está definida.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Não há suporte para essa propriedade no modo de renderização do .NET 4.0. Se essa propriedade for necessária, você pode definir o menu para o modo de renderização do .NET 3.5, adicionando o seguinte no código da página:  
  
```  
menuInstance.RenderingCompatibility = new Version(3, 5);  
```  
  
 Quando um item de menu dinâmico contém itens adicionais na parte inferior do menu, uma imagem é exibida para indicar que o usuário pode rolar para baixo para exibir itens de menu adicionais. Use o <xref:System.Web.UI.WebControls.Menu.ScrollDownText%2A> propriedade para especificar o texto alternativo para esta imagem. O texto que você especificar fornece dispositivos de tecnologia assistencial com uma descrição da imagem que pode ser usada para tornar o controle mais acessíveis.  
  
 O valor dessa propriedade, quando definido, podem ser salvos automaticamente em um arquivo de recurso usando uma ferramenta de designer. Para obter mais informações, consulte <xref:System.ComponentModel.LocalizableAttribute> e [globalização e localização](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.Menu.ScrollDownText%2A> propriedade para especificar o texto alternativo para a imagem usada para indicar que o usuário pode rolar para baixo em um menu dinâmico para itens de menu adicionais.  
  
 [!code-aspx-csharp[MenuScrollDownImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuScrollDownImage/CS/menuscrolldownimagecs.aspx#1)]
 [!code-aspx-vb[MenuScrollDownImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuScrollDownImage/VB/menuscrolldownimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
      </Docs>
    </Member>
    <Member MemberName="ScrollUpImageUrl">
      <MemberSignature Language="C#" Value="public string ScrollUpImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScrollUpImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollUpImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ScrollUpImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a URL para uma imagem exibida em um menu dinâmico para indicar que o usuário pode rolar para cima para obter itens de menu adicionais.</summary>
        <value>A URL para uma imagem exibida em um menu dinâmico para indicar que o usuário pode rolar para itens de menu adicionais. O valor padrão é uma cadeia de caracteres vazia (""), que indica que essa propriedade não está definida.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Não há suporte para essa propriedade no modo de renderização do .NET 4.0. Se essa propriedade for necessária, você pode definir o menu para o modo de renderização do .NET 3.5, adicionando o seguinte no código da página:  
  
```  
menuInstance.RenderingCompatibility = new Version(3, 5);  
```  
  
 Use o <xref:System.Web.UI.WebControls.Menu.ScrollUpImageUrl%2A> propriedade para especificar uma imagem personalizada para exibir na parte superior de cada menu dinâmico para indicar que o usuário pode rolar para itens de menu adicionais.  
  
> [!NOTE]
>  Se essa propriedade não está definida, interno, a imagem padrão é usada.  
  
 Você pode especificar o texto alternativo para a imagem, definindo o <xref:System.Web.UI.WebControls.Menu.ScrollUpText%2A> propriedade.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.Menu.ScrollUpImageUrl%2A> propriedade para exibir uma imagem personalizada, indicando que o usuário pode rolar para cima em um menu dinâmico para itens de menu adicionais.  
  
 [!code-aspx-csharp[MenuScrollDownImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuScrollDownImage/CS/menuscrolldownimagecs.aspx#1)]
 [!code-aspx-vb[MenuScrollDownImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuScrollDownImage/VB/menuscrolldownimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
      </Docs>
    </Member>
    <Member MemberName="ScrollUpText">
      <MemberSignature Language="C#" Value="public string ScrollUpText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScrollUpText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollUpText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ScrollUpText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o texto alternativo para a imagem especificada na propriedade <see cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />.</summary>
        <value>O texto alternativo para a imagem especificada a <see cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" /> propriedade. O padrão é uma cadeia de caracteres vazia (""), que indica que essa propriedade não está definida.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Não há suporte para essa propriedade no modo de renderização do .NET 4.0. Se essa propriedade for necessária, você pode definir o menu para o modo de renderização do .NET 3.5, adicionando o seguinte no código da página:  
  
```  
menuInstance.RenderingCompatibility = new Version(3, 5);  
```  
  
 Quando um item de menu dinâmico contém itens adicionais na parte superior do menu, uma imagem é exibida para indicar que o usuário pode rolar até exibir itens de menu adicionais. Use o <xref:System.Web.UI.WebControls.Menu.ScrollUpText%2A> propriedade para especificar o texto alternativo para esta imagem. O texto que você especificar fornece dispositivos de tecnologia assistencial com uma descrição da imagem que pode ser usada para tornar o controle mais acessíveis.  
  
 O valor dessa propriedade, quando definido, podem ser salvos automaticamente em um arquivo de recurso usando uma ferramenta de designer. Para obter mais informações, consulte <xref:System.ComponentModel.LocalizableAttribute> e [globalização e localização](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.Menu.ScrollUpText%2A> propriedade para especificar o texto alternativo para a imagem usada para indicar que o usuário pode rolar para cima em um menu dinâmico para itens de menu adicionais.  
  
 [!code-aspx-csharp[MenuScrollDownImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuScrollDownImage/CS/menuscrolldownimagecs.aspx#1)]
 [!code-aspx-vb[MenuScrollDownImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuScrollDownImage/VB/menuscrolldownimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="SelectedItem">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItem SelectedItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItem SelectedItem" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.SelectedItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedItem As MenuItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItem ^ SelectedItem { System::Web::UI::WebControls::MenuItem ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o item de menu selecionado.</summary>
        <value>Um <see cref="T:System.Web.UI.WebControls.MenuItem" /> que representa o item de menu selecionado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.Menu.SelectedItem%2A> para determinar o item de menu selecionado pelo usuário.  
  
> [!NOTE]
>  Como um atalho, você também pode determinar o texto do item de menu selecionado diretamente usando o <xref:System.Web.UI.WebControls.Menu.SelectedValue%2A> propriedade.  
  
 Quando o usuário seleciona um item de menu de um <xref:System.Web.UI.WebControls.Menu> controle, o <xref:System.Web.UI.WebControls.Menu.MenuItemClick> é gerado, que permite que você execute uma rotina personalizada, fornecendo um manipulador de eventos.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.Menu.SelectedItem%2A> propriedade para determinar o item de menu selecionado em um <xref:System.Web.UI.WebControls.Menu> controle.  
  
 [!code-aspx-csharp[MenuSelectedItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuSelectedItem/CS/menuselecteditemcs.aspx#1)]
 [!code-aspx-vb[MenuSelectedItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuSelectedItem/VB/menuselecteditemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.SelectedValue" />
        <altmember cref="E:System.Web.UI.WebControls.Menu.MenuItemClick" />
      </Docs>
    </Member>
    <Member MemberName="SelectedValue">
      <MemberSignature Language="C#" Value="public string SelectedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.SelectedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectedValue { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o valor do item de menu selecionado.</summary>
        <value>O valor do item de menu selecionado. O padrão é <see cref="F:System.String.Empty" />, que indica que nenhum item de menu está selecionado no momento.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.Menu.SelectedValue%2A> a propriedade como um atalho para determinar o texto do item de menu selecionado. Para acessar as outras propriedades do item de menu selecionado, use o <xref:System.Web.UI.WebControls.Menu.SelectedItem%2A> propriedade.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.Menu.SelectedValue%2A> propriedade para determinar o texto do item de menu selecionado em um <xref:System.Web.UI.WebControls.Menu> controle.  
  
 [!code-aspx-csharp[MenuSelectedItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuSelectedItem/CS/menuselecteditemcs.aspx#1)]
 [!code-aspx-vb[MenuSelectedItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuSelectedItem/VB/menuselecteditemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.SelectedItem" />
        <altmember cref="E:System.Web.UI.WebControls.Menu.MenuItemClick" />
      </Docs>
    </Member>
    <Member MemberName="SetDesignModeState">
      <MemberSignature Language="C#" Value="protected override void SetDesignModeState (System.Collections.IDictionary data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetDesignModeState(class System.Collections.IDictionary data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.SetDesignModeState(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetDesignModeState (data As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetDesignModeState(System::Collections::IDictionary ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="data">Um <see cref="T:System.Collections.IDictionary" /> que contém os dados de estado para exibir o controle.</param>
        <summary>Define os dados em tempo de design para o controle <see cref="T:System.Web.UI.WebControls.Menu" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método substitui <xref:System.Web.UI.Control.SetDesignModeState%2A>.  
  
> [!NOTE]
>  Esse método é usado principalmente por desenvolvedores de controle para estender o <xref:System.Web.UI.WebControls.Menu> controle.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetItemDataBound">
      <MemberSignature Language="C#" Value="protected void SetItemDataBound (System.Web.UI.WebControls.MenuItem node, bool dataBound);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetItemDataBound(class System.Web.UI.WebControls.MenuItem node, bool dataBound) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.SetItemDataBound(System.Web.UI.WebControls.MenuItem,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetItemDataBound (node As MenuItem, dataBound As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetItemDataBound(System::Web::UI::WebControls::MenuItem ^ node, bool dataBound);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.UI.WebControls.MenuItem" />
        <Parameter Name="dataBound" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="node">
          <see cref="T:System.Web.UI.WebControls.MenuItem" /> ao dataset.</param>
        <param name="dataBound">
          <see langword="true" /> para definir o nó como associado a dados; caso contrário, <see langword="false" />.</param>
        <summary>Define a propriedade <see cref="P:System.Web.UI.WebControls.MenuItem.DataBound" /> do objeto <see cref="T:System.Web.UI.WebControls.MenuItem" /> especificado com o valor especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Menu.SetItemDataBound%2A> é um método auxiliar usado por classes derivadas para definir o <xref:System.Web.UI.WebControls.MenuItem.DataBound%2A> propriedade especificada <xref:System.Web.UI.WebControls.MenuItem> objeto.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Menu.SetItemDataItem(System.Web.UI.WebControls.MenuItem,System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.SetItemDataPath(System.Web.UI.WebControls.MenuItem,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetItemDataItem">
      <MemberSignature Language="C#" Value="protected void SetItemDataItem (System.Web.UI.WebControls.MenuItem node, object dataItem);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetItemDataItem(class System.Web.UI.WebControls.MenuItem node, object dataItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.SetItemDataItem(System.Web.UI.WebControls.MenuItem,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetItemDataItem (node As MenuItem, dataItem As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetItemDataItem(System::Web::UI::WebControls::MenuItem ^ node, System::Object ^ dataItem);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.UI.WebControls.MenuItem" />
        <Parameter Name="dataItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="node">
          <see cref="T:System.Web.UI.WebControls.MenuItem" /> ao dataset.</param>
        <param name="dataItem">O item de dados para o <see cref="T:System.Web.UI.WebControls.MenuItem" />.</param>
        <summary>Define a propriedade <see cref="P:System.Web.UI.WebControls.MenuItem.DataItem" /> do objeto <see cref="T:System.Web.UI.WebControls.MenuItem" /> especificado com o valor especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Menu.SetItemDataItem%2A> é um método auxiliar usado por classes derivadas para definir o <xref:System.Web.UI.WebControls.MenuItem.DataItem%2A> propriedade especificada <xref:System.Web.UI.WebControls.MenuItem> objeto.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Menu.SetItemDataBound(System.Web.UI.WebControls.MenuItem,System.Boolean)" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.SetItemDataPath(System.Web.UI.WebControls.MenuItem,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetItemDataPath">
      <MemberSignature Language="C#" Value="protected void SetItemDataPath (System.Web.UI.WebControls.MenuItem node, string dataPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetItemDataPath(class System.Web.UI.WebControls.MenuItem node, string dataPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.SetItemDataPath(System.Web.UI.WebControls.MenuItem,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetItemDataPath (node As MenuItem, dataPath As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetItemDataPath(System::Web::UI::WebControls::MenuItem ^ node, System::String ^ dataPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.UI.WebControls.MenuItem" />
        <Parameter Name="dataPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="node">
          <see cref="T:System.Web.UI.WebControls.MenuItem" /> ao dataset.</param>
        <param name="dataPath">O caminho de dados para o <see cref="T:System.Web.UI.WebControls.MenuItem" />.</param>
        <summary>Define a propriedade <see cref="P:System.Web.UI.WebControls.MenuItem.DataPath" /> do objeto <see cref="T:System.Web.UI.WebControls.MenuItem" /> especificado com o valor especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Menu.SetItemDataPath%2A> é um método auxiliar usado por classes derivadas para definir o <xref:System.Web.UI.WebControls.MenuItem.DataPath%2A> propriedade especificada <xref:System.Web.UI.WebControls.MenuItem> objeto.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Menu.SetItemDataItem(System.Web.UI.WebControls.MenuItem,System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.SetItemDataPath(System.Web.UI.WebControls.MenuItem,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SkipLinkText">
      <MemberSignature Language="C#" Value="public string SkipLinkText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkipLinkText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.SkipLinkText" />
      <MemberSignature Language="VB.NET" Value="Public Property SkipLinkText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SkipLinkText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o texto alternativo para uma imagem oculta lida por leitores de tela para fornecer a capacidade de ignorar a lista de links.</summary>
        <value>O texto alternativo de uma imagem oculta lida por leitores de tela para fornecer a capacidade de ignorar a lista de links. O padrão é uma cadeia de caracteres vazia (""), que indica que essa propriedade não está definida.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A> propriedade para especificar o texto alternativo para uma imagem oculta lido por leitores de tela para fornecer a capacidade de ignorar a lista de links. O texto que você especificar fornece dispositivos de tecnologia assistencial com uma descrição do oculto ignorem a imagem de link que pode ser usada para tornar o controle mais acessíveis.  
  
 O valor dessa propriedade, quando definido, podem ser salvos automaticamente em um arquivo de recurso usando uma ferramenta de designer. Para obter mais informações, consulte <xref:System.ComponentModel.LocalizableAttribute> e [globalização e localização](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
 O <xref:System.Web.UI.WebControls.Menu> fornece controle de <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A> a propriedade como uma maneira de todo o controle deve ser ignorada por leitores de tela. Se o <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A> estiver definida, uma imagem invisível com texto alternativo é renderizada, dar ao usuário a opção para ir até o final do controle. Leitores de tela de leitura em voz alta o texto alternativo, e a imagem ocupa espaço em apenas um pixel. Para um controle preciso de pixel sobre o processamento da página, defina o <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A> propriedade como uma cadeia de caracteres vazia ("") e fornecer seu próprio mecanismo para ignorar o menu. O <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A> a cadeia de caracteres vazia, a propriedade é definida por padrão.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A> propriedade para especificar o texto alternativo para uma imagem oculta lido por leitores de tela para fornecer a capacidade de ignorar a lista de links.  
  
 [!code-aspx-csharp[MenuSkipLinkText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuSkipLinkText/CS/menuskiplinktextcs.aspx#1)]
 [!code-aspx-vb[MenuSkipLinkText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuSkipLinkText/VB/menuskiplinktextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="StaticBottomSeparatorImageUrl">
      <MemberSignature Language="C#" Value="public string StaticBottomSeparatorImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StaticBottomSeparatorImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticBottomSeparatorImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StaticBottomSeparatorImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a URL para uma imagem exibida como o separador na parte inferior de cada item de menu estático.</summary>
        <value>A URL para uma imagem a ser exibida como o separador de na parte inferior de cada item de menu estático. O valor padrão é uma cadeia de caracteres vazia (""), que indica que essa propriedade não está definida.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl%2A> propriedade para especificar os itens de uma imagem personalizada para exibir na parte inferior de cada menu estático que atua como um separador entre itens de menu.  
  
> [!NOTE]
>  Como alternativa, você também pode exibir uma imagem de separador na parte superior de cada item de menu estático, definindo o <xref:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl%2A> propriedade.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl%2A> propriedade para especificar uma imagem de separador a ser exibida na parte inferior de cada item de menu estático.  
  
 [!code-aspx-csharp[MenuStaticBottomSeparatorImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticBottomSeparatorImageUrl/CS/menustaticbottomseparatorimageurlcs.aspx#1)]
 [!code-aspx-vb[MenuStaticBottomSeparatorImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticBottomSeparatorImageUrl/VB/menustaticbottomseparatorimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="StaticDisplayLevels">
      <MemberSignature Language="C#" Value="public int StaticDisplayLevels { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StaticDisplayLevels" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticDisplayLevels" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticDisplayLevels As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int StaticDisplayLevels { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o número de níveis de menu a serem exibidos em um menu estático.</summary>
        <value>O número de níveis de menu a serem exibidos em um menu estático. O padrão é 1.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> propriedade para especificar o número de níveis de menu a ser exibido em um menu estático. Todos os níveis de menu abaixo do valor especificado são exibidos em um menu dinâmico. Você também pode limitar o número de níveis de menu a ser exibido em um menu dinâmico, definindo o <xref:System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels%2A> propriedade.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> propriedade para exibir os níveis de dois menus primeiro no menu estático.  
  
 [!code-aspx-csharp[MenuStaticDisplayLevels#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticDisplayLevels/CS/menustaticdisplaylevelscs.aspx#1)]
 [!code-aspx-vb[MenuStaticDisplayLevels#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticDisplayLevels/VB/menustaticdisplaylevelsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">O valor especificado é menor que 1.</exception>
        <altmember cref="P:System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels" />
      </Docs>
    </Member>
    <Member MemberName="StaticEnableDefaultPopOutImage">
      <MemberSignature Language="C#" Value="public bool StaticEnableDefaultPopOutImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StaticEnableDefaultPopOutImage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticEnableDefaultPopOutImage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StaticEnableDefaultPopOutImage { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se a imagem interna é exibida para indicar que um item de menu estático tiver um submenu.</summary>
        <value>
          <see langword="true" /> para exibir a imagem interna para itens de menu estático com submenus; caso contrário, <see langword="false" />. O padrão é <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando um item de menu estático contém um submenu, uma imagem pode ser exibida para indicar que o usuário pode expandir o menu. Há duas maneiras de exibir essa imagem:  
  
-   Definir o <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> propriedade `true` para usar a imagem interna (padrão).  
  
-   Definir o <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> propriedade para especificar uma imagem personalizada.  
  
 Se o <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> estiver definida, essa imagem substituirá a imagem interna, independentemente do valor de <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> propriedade.  
  
> [!NOTE]
>  Se o <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> propriedade não está definida e o <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> está definida como `false`, nenhuma imagem é exibida.  
  
 Você pode especificar o texto alternativo para a imagem, definindo o <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString%2A> propriedade.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> propriedade para ocultar a imagem que indica que um item de menu estático possui um submenu. O <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> propriedade também deve ser definida como uma cadeia de caracteres vazia ("") para a imagem a ser ocultada.  
  
 [!code-aspx-csharp[MenuStaticEnableDefaultPopOutImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticEnableDefaultPopOutImage/CS/menustaticenabledefaultpopoutimagecs.aspx#1)]
 [!code-aspx-vb[MenuStaticEnableDefaultPopOutImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticEnableDefaultPopOutImage/VB/menustaticenabledefaultpopoutimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="StaticHoverStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style StaticHoverStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style StaticHoverStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StaticHoverStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ StaticHoverStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma referência para o objeto <see cref="T:System.Web.UI.WebControls.Style" /> que permite que você defina a aparência de um item de menu estático quando o ponteiro do mouse é posicionado sobre ele.</summary>
        <value>Uma referência ao <see cref="T:System.Web.UI.WebControls.Style" /> que representa o estilo de um item de menu estático quando o ponteiro do mouse é posicionado sobre ele.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A> propriedade para controlar a aparência de um item de menu estático quando o ponteiro do mouse está posicionado sobre ele. Essa propriedade é somente leitura; No entanto, você pode definir as propriedades do <xref:System.Web.UI.WebControls.Style> retorna do objeto. As propriedades podem ser definidas declarativamente na forma `Property-Subproperty`, onde `Subproperty` é uma propriedade do <xref:System.Web.UI.WebControls.Style> objeto (por exemplo, `StaticHoverStyle-ForeColor`). As propriedades podem também ser definidas programaticamente no formulário `Property.Subproperty` (por exemplo, `StaticHoverStyle.ForeColor`).  
  
 Propriedades de estilo para um item de menu estático são aplicadas na seguinte ordem:  
  
1.  <xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A>. Se o <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> coleção ou <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> coleção é definida, ela é aplicada neste momento, substituindo as outras propriedades de estilo do menu item.  
  
3.  <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A>. Se o <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> coleção é definida, ela é aplicada neste momento, substituindo as outras propriedades de estilo do menu item.  
  
4.  <xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A>.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A> propriedade para alterar a cor de plano de fundo de um item de menu estático a azul-claro sky quando o usuário posiciona o ponteiro do mouse sobre ele.  
  
 [!code-aspx-csharp[MenuStaticHoverStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticHoverStyle/CS/menustatichoverstylecs.aspx#1)]
 [!code-aspx-vb[MenuStaticHoverStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticHoverStyle/VB/menustatichoverstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="StaticItemFormatString">
      <MemberSignature Language="C#" Value="public string StaticItemFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StaticItemFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticItemFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticItemFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StaticItemFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o texto adicional mostrado com todos os itens de menu que são exibidos estaticamente.</summary>
        <value>O texto adicional ou caracteres que aparecem com todos os itens de menu. O valor padrão desta propriedade é "{0}."</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa propriedade pode ser usada para inserir texto para formatar itens de menu estático em um menu. Isso é particularmente útil para dispositivos móveis. O <xref:System.Web.UI.WebControls.Menu> controle oferece suporte a modelos para a exibição de itens de menu estático e dinâmico, mas modelos são ignorados em dispositivos móveis. Essa propriedade permite que você adicionar caracteres ou o texto e aplicar formatação a itens de menu para dispositivos móveis e desktop sem usar um modelo.  
  
> [!NOTE]
>  Para obter uma formatação consistente quando você usar essa propriedade, você também deve definir o <xref:System.Web.UI.WebControls.Menu.DynamicItemFormatString%2A> propriedade se você quiser que a formatação para que fiquem idênticas entre os itens de menu estático e dinâmico.  
  
 Se a formatação do modelo e essa propriedade são aplicadas, a formatação do modelo é ignorada para dispositivos móveis.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.Menu.StaticItemFormatString%2A> e <xref:System.Web.UI.WebControls.Menu.DynamicItemFormatString%2A> propriedades para adicionar texto para cada item de menu.  
  
 [!code-aspx-csharp[MenuItemFormatString#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemFormatString/CS/menuitemformatstringcs.aspx#1)]
 [!code-aspx-vb[MenuItemFormatString#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemFormatString/VB/menuitemformatstringvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicItemFormatString" />
      </Docs>
    </Member>
    <Member MemberName="StaticItemTemplate">
      <MemberSignature Language="C#" Value="public System.Web.UI.ITemplate StaticItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate StaticItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ITemplate ^ StaticItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.MenuItemTemplateContainer))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o modelo que contém o conteúdo personalizado a ser renderizado para um menu estático.</summary>
        <value>Um <see cref="T:System.Web.UI.ITemplate" /> que contém o conteúdo personalizado de um menu estático. O valor padrão é null, que indica que essa propriedade não está definida.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Em vez de usar o processamento interno de um menu estático, você pode definir sua própria interface de usuário (UI) para um item de menu estático usando o <xref:System.Web.UI.WebControls.Menu.StaticItemTemplate%2A> propriedade. Para especificar um modelo personalizado para um item de menu estático, primeiro coloque `<StaticTemplate>` marcas entre as marcas de abertura e fechamento do <xref:System.Web.UI.WebControls.Menu> controle. Em seguida, você pode listar o conteúdo do modelo entre a abertura e fechamento `<StaticTemplate>` marcas. Você pode controlar ainda mais o estilo de um menu estático usando o <xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A> propriedade.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StaticMenuItemStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemStyle StaticMenuItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemStyle StaticMenuItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StaticMenuItemStyle As MenuItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemStyle ^ StaticMenuItemStyle { System::Web::UI::WebControls::MenuItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma referência ao objeto <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> que permite definir a aparência dos itens de menu em um menu estático.</summary>
        <value>Uma referência ao <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> que representa o estilo dos itens de menu em um menu estático.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A> propriedade para controlar a aparência dos itens de menu em um menu estático. Essa propriedade é somente leitura; No entanto, você pode definir as propriedades do <xref:System.Web.UI.WebControls.MenuItemStyle> retorna do objeto. As propriedades podem ser definidas declarativamente na forma `Property-Subproperty`, onde `Subproperty` é uma propriedade do <xref:System.Web.UI.WebControls.MenuItemStyle> objeto (por exemplo, `StaticMenuItemStyle-ForeColor`). As propriedades podem também ser definidas programaticamente no formulário `Property.Subproperty` (por exemplo, `StaticMenuItemStyle.ForeColor`).  
  
 Propriedades de estilo para um item de menu estático são aplicadas na seguinte ordem:  
  
1.  <xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A>. Se o <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> coleção ou <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> coleção é definida, ela é aplicada neste momento, substituindo as outras propriedades de estilo do menu item.  
  
3.  <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A>. Se o <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> coleção é definida, ela é aplicada neste momento, substituindo as outras propriedades de estilo do menu item.  
  
4.  <xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A>.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A> propriedade para especificar uma cor de plano de fundo sky azul claro para os itens de menu em um menu estático.  
  
 [!code-aspx-csharp[MenuStaticMenuItemStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticMenuItemStyle/CS/menustaticmenuitemstylecs.aspx#1)]
 [!code-aspx-vb[MenuStaticMenuItemStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticMenuItemStyle/VB/menustaticmenuitemstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="StaticMenuStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SubMenuStyle StaticMenuStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.SubMenuStyle StaticMenuStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StaticMenuStyle As SubMenuStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SubMenuStyle ^ StaticMenuStyle { System::Web::UI::WebControls::SubMenuStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SubMenuStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma referência ao objeto <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> que permite definir a aparência de um menu estático.</summary>
        <value>Uma referência ao <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> que representa o estilo de um menu estático.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A> propriedade para controlar a aparência de um menu estático. Essa propriedade é somente leitura; No entanto, você pode definir as propriedades do <xref:System.Web.UI.WebControls.MenuItemStyle> retorna do objeto. As propriedades podem ser definidas declarativamente na forma `Property-Subproperty`, onde `Subproperty` é uma propriedade do <xref:System.Web.UI.WebControls.MenuItemStyle> objeto (por exemplo, `StaticMenuStyle-ForeColor`). As propriedades podem também ser definidas programaticamente no formulário `Property.Subproperty` (por exemplo, `StaticMenuStyle.ForeColor`).  
  
 Propriedades de estilo para um item de menu estático são aplicadas na seguinte ordem:  
  
1.  <xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A>. Se o <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> coleção ou <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> coleção é definida, ela é aplicada neste momento, substituindo as outras propriedades de estilo do menu item.  
  
3.  <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A>. Se o <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> coleção é definida, ela é aplicada neste momento, substituindo as outras propriedades de estilo do menu item.  
  
4.  <xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A>.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A> propriedade para especificar uma cor de plano de fundo sky azul claro para o menu estático inteiro.  
  
 [!code-aspx-csharp[MenuStaticMenuStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticMenuStyle/CS/menustaticmenustylecs.aspx#1)]
 [!code-aspx-vb[MenuStaticMenuStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticMenuStyle/VB/menustaticmenustylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="StaticPopOutImageTextFormatString">
      <MemberSignature Language="C#" Value="public string StaticPopOutImageTextFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StaticPopOutImageTextFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticPopOutImageTextFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StaticPopOutImageTextFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o texto alternativo para a imagem pop-out para indicar que um item de menu estático tem um submenu.</summary>
        <value>O texto alternativo da imagem pop-out. O padrão é uma cadeia de caracteres vazia (""), que indica que essa propriedade não está definida.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando um item de menu estático contém um submenu, uma imagem pode ser exibida para indicar que o usuário pode expandir o menu. Use o <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString%2A> propriedade para especificar o texto alternativo para esta imagem.  
  
 Há duas maneiras de exibir a imagem:  
  
-   Definir o <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> propriedade `true` para usar a imagem interna (padrão).  
  
-   Definir o <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> propriedade para especificar uma imagem personalizada.  
  
> [!NOTE]
>  Essa propriedade se aplica a imagem interna e a imagem personalizada.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString%2A> propriedade para especificar o texto alternativo para a imagem usada para indicar que um item de menu estático possui um submenu. Esse texto é exibido como uma dica de ferramenta quando o usuário posiciona o ponteiro do mouse sobre a imagem.  
  
 [!code-aspx-csharp[MenuStaticPopoutImageText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticPopoutImageText/CS/menustaticpopoutimagetextcs.aspx#1)]
 [!code-aspx-vb[MenuStaticPopoutImageText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticPopoutImageText/VB/menustaticpopoutimagetextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="StaticPopOutImageUrl">
      <MemberSignature Language="C#" Value="public string StaticPopOutImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StaticPopOutImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticPopOutImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StaticPopOutImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a URL para uma imagem exibida para indicar que um item de menu estático tem um submenu.</summary>
        <value>A URL para uma imagem exibida para indicar que um item de menu estático tem um submenu. O valor padrão é uma cadeia de caracteres vazia (""), que indica que essa propriedade não está definida.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando um item de menu estático contém um submenu, uma imagem pode ser exibida para indicar que o usuário pode expandir o menu. Há duas maneiras de exibir essa imagem:  
  
-   Definir o <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> propriedade `true` para usar a imagem interna (padrão).  
  
-   Definir o <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> propriedade para especificar uma imagem personalizada.  
  
 Se o <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> estiver definida, essa imagem substituirá a imagem interna, independentemente do valor de <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> propriedade.  
  
 Se o <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> propriedade não está definida e o <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> está definida como `false`, nenhuma imagem é exibida.  
  
> [!NOTE]
>  Quando você definir essa propriedade, use uma barra (/) em vez de uma barra invertida (\\). Se você usar barras invertidas no caminho, a imagem especificada não será exibida.  
  
 Você pode especificar o texto alternativo para a imagem, definindo o <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString%2A> propriedade.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> propriedade para especificar uma imagem personalizada a ser exibido em um item de menu estático quando o item de menu tem um submenu.  
  
 [!code-aspx-csharp[MenuStaticPopoutImageText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticPopoutImageText/CS/menustaticpopoutimagetextcs.aspx#1)]
 [!code-aspx-vb[MenuStaticPopoutImageText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticPopoutImageText/VB/menustaticpopoutimagetextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="StaticSelectedStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemStyle StaticSelectedStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemStyle StaticSelectedStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StaticSelectedStyle As MenuItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemStyle ^ StaticSelectedStyle { System::Web::UI::WebControls::MenuItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma referência ao objeto <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> que permite definir a aparência do item de menu selecionado pelo usuário em um menu estático.</summary>
        <value>Uma referência ao <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> que representa o estilo do item de menu selecionado em um menu estático.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A> propriedade para controlar a aparência do item de menu selecionado pelo usuário em um menu estático. Essa propriedade é somente leitura; No entanto, você pode definir as propriedades do <xref:System.Web.UI.WebControls.MenuItemStyle> retorna do objeto. As propriedades podem ser definidas declarativamente na forma `Property-Subproperty`, onde `Subproperty` é uma propriedade do <xref:System.Web.UI.WebControls.MenuItemStyle> objeto (por exemplo, `StaticSelectedStyle-ForeColor`). As propriedades podem também ser definidas programaticamente no formulário `Property.Subproperty` (por exemplo, `StaticSelectedStyle.ForeColor`).  
  
 Propriedades de estilo para um item de menu estático são aplicadas na seguinte ordem:  
  
1.  <xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A>. Se o <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> coleção ou <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> coleção é definida, ela é aplicada neste momento, substituindo as outras propriedades de estilo do menu item.  
  
3.  <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A>. Se o <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> coleção é definida, ela é aplicada neste momento, substituindo as outras propriedades de estilo do menu item.  
  
4.  <xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A>.  
  
> [!IMPORTANT]
>  Alteração interruptiva abaixo.  
  
 Antes do .NET Framework 4.0, ao definir um `<asp:Menu>` controle no arquivo. aspx, os usuários podem definir o `StaticSelectedStyle-CssClass` propriedade para definir a classe CSS do item selecionado do controle. Por exemplo, o usuário pode ter um controle de menu como abaixo:  
  
```  
<asp:Menu ID="Menu1" runat="server" Orientation="Horizontal"   
    StaticMenuItemStyle-CssClass="MenuItem"  
    StaticSelectedStyle-CssClass="MenuItem_selected"  
    OnMenuItemClick="Menu1_MenuItemClick" Style="margin-bottom: 0px" EnableTheming="True" ClientIDMode="Static">  
    <Items>  
        <asp:MenuItem Text="item_0" Value="0" Selected="True"></asp:MenuItem>  
        <asp:MenuItem Text="itme_1" Value="1"></asp:MenuItem>  
    </Items>  
</asp:Menu>  
```  
  
 E o controle de menu é renderizado como:  
  
```  
<div id="Menu1" style="margin-bottom: 0px">  
    <ul class="level1">  
        <li><a class="level1 MenuItem MenuItem_selected " href="#" onclick="__doPostBack(&#39;Menu1&#39;,&#39;0&#39;)">item_0</a></li>  
        <li><a class="level1 MenuItem" href="#" onclick="__doPostBack(&#39;Menu1&#39;,&#39;1&#39;)">itme_1</a></li>  
    </ul>  
</div>  
```  
  
 No entanto, no .NET Framework 4.0 e posterior, o item de menu selecionado é definido como o `selected` classe CSS sempre em vez da classe especificada pelo `StaticSelectedStyle-CssClass`. Portanto, o código ASP.NET é renderizado em vez disso, como:  
  
```  
<div id="Menu1" style="margin-bottom: 0px">  
    <ul class="level1">  
        <li><a class="level1 MenuItem selected " href="#" onclick="__doPostBack(&#39;Menu1&#39;,&#39;0&#39;)">item_0</a></li>  
        <li><a class="level1 MenuItem" href="#" onclick="__doPostBack(&#39;Menu1&#39;,&#39;1&#39;)">itme_1</a></li>  
    </ul>  
</div>  
  
```  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A> propriedade para especificar uma cor de plano de fundo azul claro para o item de menu estático selecionado.  
  
 [!code-aspx-csharp[MenuStaticSelectedStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticSelectedStyle/CS/menustaticselectedstylecs.aspx#1)]
 [!code-aspx-vb[MenuStaticSelectedStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticSelectedStyle/VB/menustaticselectedstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
      </Docs>
    </Member>
    <Member MemberName="StaticSubMenuIndent">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Unit StaticSubMenuIndent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit StaticSubMenuIndent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticSubMenuIndent" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticSubMenuIndent As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Unit StaticSubMenuIndent { System::Web::UI::WebControls::Unit get(); void set(System::Web::UI::WebControls::Unit value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.WebControls.Unit), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a quantidade de espaço em pixels para recuar submenus em um menu estático.</summary>
        <value>Um <see cref="T:System.Web.UI.WebControls.Unit" /> que representa a quantidade de espaço em pixels para recuar submenus em um menu estático. O padrão é 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando o menu estático exibe mais de um nível de menu (se o <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> propriedade é definida como um valor maior que 1), use o <xref:System.Web.UI.WebControls.Menu.StaticSubMenuIndent%2A> propriedade para especificar o número de pixels que recuar os itens de submenu dentro do menu estático.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.Menu.StaticSubMenuIndent%2A> propriedade para recuar os itens de submenu em um menu estático 10 pixels.  
  
 [!code-aspx-csharp[MenuStaticSubMenuIndent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticSubMenuIndent/CS/menustaticsubmenuindentcs.aspx#1)]
 [!code-aspx-vb[MenuStaticSubMenuIndent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticSubMenuIndent/VB/menustaticsubmenuindentvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">O valor do <see cref="T:System.Web.UI.WebControls.Unit" /> selecionado é menor que 0.</exception>
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticDisplayLevels" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicVerticalOffset" />
      </Docs>
    </Member>
    <Member MemberName="StaticTopSeparatorImageUrl">
      <MemberSignature Language="C#" Value="public string StaticTopSeparatorImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StaticTopSeparatorImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticTopSeparatorImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StaticTopSeparatorImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a URL para uma imagem exibida como o separador na parte superior de cada item de menu estático.</summary>
        <value>A URL para uma imagem exibida como o separador na parte superior de cada item de menu estático. O valor padrão é uma cadeia de caracteres vazia (""), que indica que essa propriedade não está definida.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl%2A> propriedade para especificar os itens de uma imagem personalizada para exibir na parte superior de cada menu estático que atua como um separador entre itens de menu.  
  
> [!NOTE]
>  Como alternativa, você também pode exibir uma imagem de separador na parte inferior de cada item de menu estático, definindo o <xref:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl%2A> propriedade.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl%2A> propriedade para especificar uma imagem de separador a ser exibido na parte superior de cada item de menu estático.  
  
 [!code-aspx-csharp[MenuStaticTopSeparatorImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticTopSeparatorImageUrl/CS/menustatictopseparatorimageurlcs.aspx#1)]
 [!code-aspx-vb[MenuStaticTopSeparatorImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticTopSeparatorImageUrl/VB/menustatictopseparatorimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Um <see cref="T:System.String" /> que representa o argumento de eventos passado para o manipulador de eventos.</param>
        <summary>Processa um evento acionado quando um formulário é postado no servidor.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o valor de <see cref="T:System.Web.UI.HtmlTextWriterTag" /> que corresponde a um controle <see cref="T:System.Web.UI.WebControls.Menu" />. Essa propriedade é usada principalmente por desenvolvedores de controle.</summary>
        <value>Sempre retorna <see langword="HtmlTextWriterTag.Table" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.Menu.TagKey%2A> propriedade para determinar a <xref:System.Web.UI.HtmlTextWriterTag> valor que está associado com um <xref:System.Web.UI.WebControls.Menu> controle. Essa propriedade é usada principalmente por desenvolvedores de controle.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public string Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Target" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.Target" />
      <MemberSignature Language="VB.NET" Value="Public Property Target As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Target { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a janela ou o quadro de destino no qual deverá ser exibido o conteúdo da página da Web associado a um item de menu.</summary>
        <value>A janela de destino ou quadro no qual exibir o conteúdo da página da Web vinculada. O valor padrão é uma cadeia de caracteres vazia (""), que atualiza a janela ou quadro com o foco.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.Menu.Target%2A> propriedade para especificar a janela ou quadro no qual exibir o conteúdo da Web vinculada a um item de menu quando esse item de menu é clicado. Os valores devem começar com uma letra no intervalo À Z (maiusculas de minúsculas), com exceção de determinados valores especiais que começam com um sublinhado, conforme mostrado na tabela a seguir.  
  
|Valor de destino|Descrição|  
|------------------|-----------------|  
|`_blank`|Renderiza o conteúdo em uma nova janela sem quadros.|  
|`_parent`|Renderiza o conteúdo no conjunto de quadros pai.|  
|`_search`|Renderiza o conteúdo no painel de pesquisa.|  
|`_self`|Renderiza o conteúdo do quadro com foco.|  
|`_top`|Renderiza o conteúdo na janela inteira sem quadros.|  
  
> [!NOTE]
>  Verifique a documentação do navegador para determinar se o `_search` valor tem suporte.  Por exemplo, Internet Explorer versões 5.0 e acima de `_search` valor de destino  
  
 Essa propriedade se aplica a todos os itens de menu em um <xref:System.Web.UI.WebControls.Menu> controle. Você pode substituir essa propriedade seletivamente definindo o <xref:System.Web.UI.WebControls.MenuItem.Target%2A> propriedade de cada <xref:System.Web.UI.WebControls.MenuItem> diretamente do objeto.  
  
> [!NOTE]
>  O <xref:System.Web.UI.WebControls.MenuItem.Target%2A> propriedade renderiza como um atributo de destino. O atributo de destino em elementos de âncora não é permitido na definição do tipo de documento estrito XHTML 1.1. Se a saída renderizada deve estar de acordo com os padrões XHTML ou acessibilidade, não defina o <xref:System.Web.UI.WebControls.MenuItem.Target%2A> propriedade. Para obter mais informações, consulte [padrões XHTML no Visual Studio e ASP.NET](http://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97) e [acessibilidade no Visual Studio e ASP.NET](http://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.Menu.Target%2A> propriedade para especificar que o conteúdo vinculado a cada item de menu deve ser exibida em uma nova janela quando o usuário clica nesse item de menu.  
  
 [!code-aspx-csharp[MenuTarget#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuTarget/CS/menutargetcs.aspx#1)]
 [!code-aspx-vb[MenuTarget#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuTarget/VB/menutargetvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Target" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rastreia alterações de estado de exibição no controle <see cref="T:System.Web.UI.WebControls.Menu" /> de modo que elas podem ser armazenadas no objeto <see cref="T:System.Web.UI.StateBag" /> do controle. Esse objeto é acessível por meio da propriedade <see cref="P:System.Web.UI.Control.ViewState" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
      </Docs>
    </Member>
  </Members>
</Type>