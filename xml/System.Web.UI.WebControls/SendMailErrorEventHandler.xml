<Type Name="SendMailErrorEventHandler" FullName="System.Web.UI.WebControls.SendMailErrorEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="db67fe646746e8ddbc98aa2e7ddc2a04dc281e74" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51867382" /></Metadata><TypeSignature Language="C#" Value="public delegate void SendMailErrorEventHandler(object sender, SendMailErrorEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SendMailErrorEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.SendMailErrorEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub SendMailErrorEventHandler(sender As Object, e As SendMailErrorEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void SendMailErrorEventHandler(System::Object ^ sender, SendMailErrorEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type SendMailErrorEventHandler = delegate of obj * SendMailErrorEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Web.UI.WebControls.SendMailErrorEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">A fonte do evento.</param>
    <param name="e">Um objeto de <see cref="T:System.Web.UI.WebControls.SendMailErrorEventArgs" /> que contém os dados do evento.</param>
    <summary>Representa o método que manipula o evento <see langword="SendMailError" /> de controles como o controle <see cref="T:System.Web.UI.WebControls.ChangePassword" />, o controle <see cref="T:System.Web.UI.WebControls.CreateUserWizard" /> e o controle <see cref="T:System.Web.UI.WebControls.PasswordRecovery" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando você cria um <xref:System.Web.UI.WebControls.SendMailErrorEventHandler> delegado, você identificar o método que manipulará o evento. Para associar o evento com o manipulador de eventos, adicione uma instância do delegado ao evento. O manipulador de eventos é chamado sempre que o evento ocorre, a menos que você remove o delegado do evento. Para obter mais informações sobre delegados de manipulador de eventos, consulte [manipulação de eventos do servidor em páginas de Web Forms do ASP.NET](https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9).  
  
 Manipulando o `SendMailError` evento permite que seu aplicativo Web para continuar em execução, mesmo se ocorrer uma exceção ao tentar enviar uma mensagem de email. Por exemplo, isso é útil se a exceção ocorre quando um usuário está trabalhando por meio de um Assistente de várias etapa. É preferível para registrar o erro, exibir uma mensagem informativa para o usuário e permitir que o usuário concluir o assistente em vez de encerrar o aplicativo.  
  
 Se você não criar um manipulador de eventos para o <xref:System.Web.UI.WebControls.ChangePassword.SendMailError> evento, ou se você criar um manipulador de eventos, mas deixe o <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> propriedade definida como `false`, seu aplicativo da Web vai parar de funcionar se ocorrer um erro ao enviar uma mensagem de email e o ASP.NET irá Exiba uma mensagem de erro.  
  
 O <xref:System.Web.UI.WebControls.ChangePassword.OnSendMailError%2A> método também permite que classes derivadas manipular o evento em vez do <xref:System.Web.UI.WebControls.SendMailErrorEventHandler>. Essa é a técnica preferencial para manipular o evento em uma classe derivada de <xref:System.Web.UI.WebControls.ChangePassword> ou <xref:System.Web.UI.WebControls.CreateUserWizard>.  
  
 Para obter mais informações sobre como manipular eventos, consulte [manipulação de eventos do servidor em páginas de Web Forms do ASP.NET](https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra uma página ASP.NET que usa um <xref:System.Web.UI.WebControls.ChangePassword> controle de Web e inclui um manipulador de eventos para o <xref:System.Web.UI.WebControls.ChangePassword.SendMailError> evento chamado `SendMailError`. O exemplo de código pressupõe que o site da Web do ASP.NET foi configurado para usar a associação do ASP.NET e autenticação de formulários e que um usuário foi criado, cujo nome e senha são conhecidos por você. Para obter mais informações, consulte [como: implementar a autenticação de formulários simples](https://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e).  
  
 Se a alteração da senha for bem-sucedida, o código tenta usar o SMTP para enviar uma mensagem de email para o usuário confirme a alteração. Isso é feito no `SendingMail` manipulador de eventos. Para obter informações sobre como configurar um servidor SMTP, consulte [NIB: como: instalar e configurar os servidores virtuais SMTP no IIS 6.0](https://msdn.microsoft.com/library/ed204b58-24af-47d0-9687-60e5df5f17f8). Para os fins deste exemplo, não é necessário configurar um servidor SMTP; o exemplo é construído para testar se há uma falha ao enviar uma mensagem de email.  
  
 Se um servidor de email não está configurado corretamente ou algum outro erro ocorre e não pode ser enviada a mensagem de email, o `SendMailError` função é chamada. Uma mensagem é exibida ao usuário. Além disso, um evento é registrado no log de eventos do aplicativo do Windows com a suposição de que uma fonte de evento chamada MySamplesSite já existe. Consulte o exemplo de código abaixo para criar a origem do evento especificado. Para obter mais informações sobre como criar uma fonte de evento, consulte [manipulação de eventos do servidor em páginas de Web Forms do ASP.NET](https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9). O <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> propriedade do <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> objeto é definido como `true` para indicar que o erro foi tratado.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 Use o exemplo de código a seguir se você precisar adicionar programaticamente a origem do evento chamada MySamplesSite seu log de aplicativo. Essa origem do evento deve existir para que o primeiro exemplo de código funcione corretamente. O exemplo de código a seguir requer privilégios de administrador.  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="E:System.Web.UI.WebControls.CreateUserWizard.SendMailError" />
    <altmember cref="E:System.Web.UI.WebControls.ChangePassword.SendMailError" />
    <altmember cref="E:System.Web.UI.WebControls.PasswordRecovery.SendMailError" />
    <altmember cref="T:System.Net.Mail.MailMessage" />
    <altmember cref="T:System.Web.Mail.SmtpMail" />
    <related type="Article" href="https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9">Servidor tratamento de eventos em páginas da Web ASP.NET</related>
    <related type="Article" href="https://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f">Manipulando e acionando eventos</related>
    <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md">Elemento SMTP (configurações de rede)</related>
    <related type="Article" href="https://msdn.microsoft.com/library/448f7802-0aa8-4304-abf7-82e138877dc8">Guia do aplicativo de ferramenta de administração de Site da Web</related>
    <related type="Article" href="https://msdn.microsoft.com/library/d85075bc-9c1a-4453-8a0c-539b10853c9c">Protegendo os controles de logon</related>
    <related type="Article" href="https://msdn.microsoft.com/library/3eeeee9e-b09f-4c7f-8ce5-d9ca1f9322ad">Práticas recomendadas de segurança básica para aplicativos Web</related>
  </Docs>
</Type>