<Type Name="WizardStepBase" FullName="System.Web.UI.WebControls.WizardStepBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5981e7c18390097f7357c75fda929484a656009d" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36378228" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class WizardStepBase : System.Web.UI.WebControls.View" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WizardStepBase extends System.Web.UI.WebControls.View" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WizardStepBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WizardStepBase&#xA;Inherits View" />
  <TypeSignature Language="C++ CLI" Value="public ref class WizardStepBase abstract : System::Web::UI::WebControls::View" />
  <TypeSignature Language="F#" Value="type WizardStepBase = class&#xA;    inherit View" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.View</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlBuilder(typeof(System.Web.UI.WebControls.WizardStepControlBuilder))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Implements the basic functionality required by a step in a <see cref="T:System.Web.UI.WebControls.Wizard" /> control.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você não pode criar uma instância do diretamente a <xref:System.Web.UI.WebControls.WizardStepBase> classe. Em vez disso, essa classe é herdada pelo <xref:System.Web.UI.WebControls.WizardStep> classe e o <xref:System.Web.UI.WebControls.TemplatedWizardStep> classe para fornecer a funcionalidade básica de uma etapa em um controle que atua como um assistente.  
  
 Você pode derivar o <xref:System.Web.UI.WebControls.WizardStepBase> classe para criar uma classe personalizada que representa uma etapa exclusiva em um controle wizard.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WizardStep" />
    <altmember cref="T:System.Web.UI.WebControls.Wizard" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WizardStepBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WizardStepBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowReturn">
      <MemberSignature Language="C#" Value="public virtual bool AllowReturn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowReturn" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.AllowReturn" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowReturn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowReturn { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowReturn : bool with get, set" Usage="System.Web.UI.WebControls.WizardStepBase.AllowReturn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Filterable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether the user is allowed to return to the current step from a subsequent step in a <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> collection.</summary>
        <value>
          <see langword="true" /> Se o usuário tem permissão para retornar para a etapa atual. Caso contrário, <see langword="false" />. O valor padrão é <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> propriedade pode ser usada para impor a navegação linear em um <xref:System.Web.UI.WebControls.Wizard> controle. Se cada etapa tem seu <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> propriedade definida como `false`, o usuário não poderá retornar a uma etapa após foi acessado. Um cenário onde você pode usar essa funcionalidade é impedir que um usuário para retornar a uma etapa depois que ela foi concluída porque a persistência de dados para um banco de dados como cada etapa é concluída. Se você salvar os dados depois de cada etapa e permitir que o usuário retornar a uma etapa e alterar as informações depois que ele tiver sido salvo, os dados salvos podem ficar corrompidos. Definindo o <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> propriedade `false`, quando o usuário deixar uma etapa, ele ou ela não poderá retornar a ele e alterar os valores.  
  
 O <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> propriedade determina como e quando o **anterior** botão não é processado. A tabela a seguir descreve o **anterior** botão comportamento de renderização.  
  
|Cenário|Comportamento|  
|--------------|--------------|  
|Linear: Etapa 1 tem <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> definido como `false` e a ação do usuário vai para a etapa 2.|Etapa 2 não mostra o **anterior** botão.|  
|Não-Linear: Tem etapa 1 <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> definido como `false` e a ação do usuário vai para a etapa 3.|Etapa 3 não exibe o **anterior** botão.|  
|Botões de barra lateral: Etapa 2 tem <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> definida como `false` , <xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A> é definido como `true`, e um usuário clica no botão de barra lateral.|Botões não será desabilitado automaticamente na barra lateral quando <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> é definido como `false`. Se um usuário clica no botão, a ação será ignorada.|  
|Linear e não-Linear com modelo personalizado: A etapa que tenha um modelo de navegação personalizada.|Não automático exibindo ou ocultando ocorre se <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> é definido como `false` quando você usa um modelo de navegação. O **anterior** botão deve ser opcional no modelo.|  
|Usando o Designer Visual Studio e <xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A> : O controle tem 5 etapas, você está trabalhando na etapa 4 e execute a página.|Quando a etapa 4 é a <xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A>, em seguida, o **anterior** botão é processado. O **anterior** botão somente está oculto para <xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> definida como <xref:System.Web.UI.WebControls.WizardStepType.Step> quando a etapa anterior no histórico de tem <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> definido como `false`. Como etapa 4 é processada primeiro e não há nenhuma etapa no histórico, o **anterior** botão não estiver oculto.|  
|Iniciar etapa e navegação não Linear: um usuário acessa a etapa 3 e a etapa 4 e, em seguida, etapa 1, que tem <xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> definido como <xref:System.Web.UI.WebControls.WizardStepType.Start>.|O assistente não adicionará um **anterior** quando o <xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> é definido como <xref:System.Web.UI.WebControls.WizardStepType.Start> , independentemente de como o usuário navega para essa etapa.|  
|Mesma etapa no histórico: Um usuário acessa a etapa 3 onde <xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> é definido como <xref:System.Web.UI.WebControls.WizardStepType.Step> e o usuário não confirmar suas ações. Eles, em seguida, clicam no botão anterior na etapa 3.|Controle o assistente verifica se o **anterior** etapa no histórico é a etapa "mesma" que o usuário está ativado. Se a etapa for o mesmo, o controle de assistente examina novamente o histórico para determinar a etapa anterior de "outra" e bases a exibição do **anterior** botão e destino com base na "etapa diferente" no histórico.|  
  
> [!NOTE]
>  Quando o <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> está definida como `false`, mas o <xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A> propriedade do controle pai de <xref:System.Web.UI.WebControls.WizardStepBase> é definido como `true`, clicar em um botão na área de barra lateral não tem nenhum efeito. Geralmente, a área de barra lateral é exibida para fornecer uma navegação não linear, portanto, se você não estiver usando a funcionalidade de navegação não linear, talvez você queira definir o <xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A> propriedade `false`.  
  
 Essa propriedade não pode ser definida por temas ou temas de folha de estilo. Para obter mais informações, consulte <xref:System.Web.UI.ThemeableAttribute> e [capas e temas do ASP.NET](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> propriedade para interromper o usuário retorne a uma etapa no <xref:System.Web.UI.WebControls.Wizard> controlar depois que foi acessado. No exemplo, o `Step1` etapa tem seu <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> propriedade definida como `false`. Depois que o usuário deixa o `Step1` etapa, nenhum botão anterior é exibida no `Step2` etapa.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardStepBaseAllowReturn#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepBaseAllowReturn/CS/wizardstepbaseallowreturncs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardStepBaseAllowReturn#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepBaseAllowReturn/VB/wizardstepbaseallowreturnvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Wizard" />
      </Docs>
    </Member>
    <Member MemberName="EnableTheming">
      <MemberSignature Language="C#" Value="public override bool EnableTheming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTheming" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.EnableTheming" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EnableTheming As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableTheming { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableTheming : bool with get, set" Usage="System.Web.UI.WebControls.WizardStepBase.EnableTheming" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether themes apply to this control.</summary>
        <value>
          <see langword="true" /> para usar temas; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A> propriedade indica se os temas estão habilitados para o <xref:System.Web.UI.WebControls.WizardStepBase> controle. O <xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A> propriedade também afeta a capacidade de temas são habilitados para os controles contidos em sua coleção de controles. Quando o <xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A> é de propriedade `true`, diretório de tema do aplicativo é pesquisado capas de controle aplicar. Se nenhuma capa de controle específico existe no diretório do tema, não é aplicada uma capa. Quando o <xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A> é de propriedade `false`, o diretório de tema não é pesquisado e o valor da <xref:System.Web.UI.Control.SkinID%2A> propriedade não é usada.  
  
 Um controle pode substituir o <xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A> valor conjunto por seu controle pai ou o conteúdo da página. Por exemplo, se um <xref:System.Web.UI.WebControls.WizardStepBase> tem controle <xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A> definida como `false`, você pode aplicar seletivamente os temas para controles filho dentro da etapa do assistente, definindo o <xref:System.Web.UI.Control.EnableTheming%2A> propriedade `true` nos controles filho individuais.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.EnableTheming" />
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public override string ID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.ID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ID : string with get, set" Usage="System.Web.UI.WebControls.WizardStepBase.ID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the programmatic identifier assigned to the server control.</summary>
        <value>O identificador programático atribuído ao controle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.WizardStepBase.ID%2A> propriedade para identificar e fazer referência a um controle de etapa do assistente específico em uma página Web Forms. O <xref:System.Web.UI.WebControls.WizardStepBase.ID%2A> valor se torna o nome da instância do controle na página; Isso permite que você acesse facilmente uma etapa específica no código para a página. Por exemplo, se você definir o <xref:System.Web.UI.WebControls.WizardStepBase.ID%2A> propriedade de um <xref:System.Web.UI.WebControls.WizardStepBase> controle a "Etapa 1", você pode referenciar os controles filho da etapa do assistente no código para a página como `Step1.Controls`.  
  
 O <xref:System.Web.UI.WebControls.WizardStepBase> controle garante que cada etapa em um <xref:System.Web.UI.WebControls.WizardStepBase.Wizard%2A> controle tem um identificador exclusivo válido quando etapas são adicionadas ou modificadas em tempo de design. Por exemplo, quando você define o <xref:System.Web.UI.WebControls.WizardStepBase.ID%2A> para uma etapa em tempo de design, ele não pode coincidir com o identificador de outra etapa contido no <xref:System.Web.UI.WebControls.WizardStepBase.Wizard%2A> controle e ele não podem corresponder a <xref:System.Web.UI.Control.ID%2A> para que o contém <xref:System.Web.UI.WebControls.WizardStepBase.Wizard%2A> controle.  
  
   
  
## Examples  
 O exemplo de código a seguir define três etapas do Assistente para um <xref:System.Web.UI.WebControls.Wizard> controle em uma página de Web Forms. No código da página, as instâncias de etapa do assistente são chamadas por seus valores de ID, e eles podem ser referenciados em código como `WizardStep1`, `WizardStep2`, e `WizardStep3`.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardActiveStep#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardActiveStep/CS/wizardactivestepcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardActiveStep#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardActiveStep/VB/wizardactivestepvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The property was set to an invalid identifier string at design time.  -or-  The property was set to the same identifier as the containing <see cref="P:System.Web.UI.WebControls.WizardStepBase.Wizard" /> control at design time.  -or-  The property was set to the same identifier as another step in the containing <see cref="P:System.Web.UI.WebControls.WizardStepBase.Wizard" /> control at design time.</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepBase.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="wizardStepBase.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">An <see cref="T:System.Object" /> that represents the that represents the control state to be restored.</param>
        <summary>Restores view-state information from a previous page request that was saved by the <see cref="M:System.Web.UI.WebControls.WebControl.SaveViewState" /> method.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Web.UI.WebControls.WizardStepBase.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the name associated with a step in a control that acts as a wizard.</summary>
        <value>O nome associado a uma etapa em um controle que atua como um assistente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.WizardStepBase.Name%2A> propriedade retorna uma cadeia de caracteres que identifica uma etapa em um controle wizard. Se for especificado um valor para o <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> propriedade, o <xref:System.Web.UI.WebControls.WizardStepBase.Name%2A> propriedade retorna esse valor. Se nenhum valor for especificado para o <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> propriedade, o <xref:System.Web.UI.WebControls.WizardStepBase.Name%2A> propriedade retorna o valor da <xref:System.Web.UI.WebControls.WizardStepBase.ID%2A> propriedade. Se não forem especificados valores para cada uma a <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> ou <xref:System.Web.UI.WebControls.WizardStepBase.ID%2A> propriedade, o <xref:System.Web.UI.WebControls.WizardStepBase.Name%2A> propriedade retorna `null`.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WizardStepBase.Title" />
        <altmember cref="P:System.Web.UI.WebControls.WizardStepBase.ID" />
      </Docs>
    </Member>
    <Member MemberName="OnLoad">
      <MemberSignature Language="C#" Value="protected internal override void OnLoad (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnLoad(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepBase.OnLoad(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnLoad (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnLoad(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnLoad : EventArgs -&gt; unit" Usage="wizardStepBase.OnLoad e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">The <see cref="T:System.EventArgs" /> object that contains the event data.</param>
        <summary>Raises the <see cref="M:System.Web.UI.Control.OnLoad(System.EventArgs)" /> event.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderChildren">
      <MemberSignature Language="C#" Value="protected internal override void RenderChildren (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderChildren(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepBase.RenderChildren(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderChildren (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderChildren(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderChildren : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="wizardStepBase.RenderChildren writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">An <see cref="T:System.Web.UI.HtmlTextWriter" /> that represents the output stream to render HTML content on the client.</param>
        <summary>Outputs the content of the <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> control's child controls to the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object, which writes the content to be rendered on the client.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StepType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WizardStepType StepType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.WizardStepType StepType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.StepType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property StepType As WizardStepType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WizardStepType StepType { System::Web::UI::WebControls::WizardStepType get(); void set(System::Web::UI::WebControls::WizardStepType value); };" />
      <MemberSignature Language="F#" Value="member this.StepType : System.Web.UI.WebControls.WizardStepType with get, set" Usage="System.Web.UI.WebControls.WizardStepBase.StepType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WizardStepType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the type of navigation user interface (UI) to display for a step in a <see cref="T:System.Web.UI.WebControls.Wizard" /> control.</summary>
        <value>Um dos valores de enumeração <see cref="T:System.Web.UI.WebControls.WizardStepType" />. O valor padrão é <see langword="WizardStepType.Auto" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> propriedade para especificar o tipo dos botões de navegação para exibir para uma etapa em um <xref:System.Web.UI.WebControls.Wizard> controle. Se você especificar um valor para essa propriedade, todas as etapas marcadas como <xref:System.Web.UI.WebControls.WizardStepType.Complete> exibe em um estado desabilitado na barra lateral.  
  
 Se você não especificar um valor para essa propriedade, o padrão é `WizardStepType.Auto`.  
  
 A tabela a seguir lista as configurações disponíveis para o <xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> propriedade e o comportamento resultante da etapa:  
  
 `WizardStepType.Auto`  
 A interface do usuário que é renderizado para a etapa de navegação é determinada pela ordem na qual a etapa é declarada.  
  
 `WizardStepType.Complete`  
 A etapa é a última a aparecer. Nenhum botão de navegação é renderizado.  
  
 `WizardStepType.Finish`  
 A etapa é a etapa de coleta de dados final. Os botões anterior e término são renderizados para navegação.  
  
 `WizardStepType.Start`  
 A etapa é a primeira a aparecer. Um botão anterior não será renderizado.  
  
 `WizardStepType.Step`  
 A etapa é qualquer etapa entre o início e a etapa de conclusão. Botões anterior e próxima são renderizados para navegação. Esse tipo de etapa é útil para substituir o tipo de etapa <xref:System.Web.UI.WebControls.WizardStepType.Auto>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The selected value is not one of the <see cref="T:System.Web.UI.WebControls.WizardStepType" /> enumeration values.</exception>
        <altmember cref="T:System.Web.UI.WebControls.WizardStepType" />
        <altmember cref="T:System.Web.UI.WebControls.Wizard" />
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public virtual string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.Title" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="System.Web.UI.WebControls.WizardStepBase.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the title to use for a step in a <see cref="T:System.Web.UI.WebControls.Wizard" /> control when the sidebar feature is enabled.</summary>
        <value>O título a ser usado para uma etapa em um <see cref="T:System.Web.UI.WebControls.Wizard" /> controlar quando o recurso de barra lateral é habilitado. O valor padrão é uma cadeia de caracteres vazia ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> propriedade para exibir um título amigável para uma etapa em um <xref:System.Web.UI.WebControls.Wizard> controlar quando o recurso de barra lateral é habilitado. Se o <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> propriedade não está definida e o recurso de barra lateral é habilitado, o valor da <xref:System.Web.UI.WebControls.WizardStepBase.ID%2A> propriedade é exibida para o botão de barra lateral.  
  
 O valor dessa propriedade, quando definido, podem ser salvos automaticamente em um arquivo de recurso usando uma ferramenta de designer. Para obter mais informações, consulte <xref:System.ComponentModel.LocalizableAttribute> e [globalização e localização](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> propriedade para exibir um título amigável para uma etapa de <xref:System.Web.UI.WebControls.Wizard> controle. No exemplo, `Step1` não tem seu <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> propriedade definida, então ele aparece no <xref:System.Web.UI.WebControls.Wizard> controle como "WizardStep1". `Step2` ter sua <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> propriedade definida, então ele aparece como "Etapa 2".  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardStepBaseTitle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepBaseTitle/CS/wizardstepbasetitlecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardStepBaseTitle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepBaseTitle/VB/wizardstepbasetitlevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Wizard" />
        <altmember cref="P:System.Web.UI.WebControls.WizardStepBase.Name" />
      </Docs>
    </Member>
    <Member MemberName="Wizard">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Wizard Wizard { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Wizard Wizard" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.Wizard" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Wizard As Wizard" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Wizard ^ Wizard { System::Web::UI::WebControls::Wizard ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Wizard : System.Web.UI.WebControls.Wizard" Usage="System.Web.UI.WebControls.WizardStepBase.Wizard" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Wizard</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Web.UI.WebControls.Wizard" /> control that is the parent of the object derived from <see cref="T:System.Web.UI.WebControls.WizardStepBase" />.</summary>
        <value>O <see cref="T:System.Web.UI.WebControls.Wizard" /> controle que é o pai do objeto derivado de <see cref="T:System.Web.UI.WebControls.WizardStepBase" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.WebControls.Wizard" />
      </Docs>
    </Member>
  </Members>
</Type>