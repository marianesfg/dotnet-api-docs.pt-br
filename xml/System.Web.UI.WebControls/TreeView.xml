<Type Name="TreeView" FullName="System.Web.UI.WebControls.TreeView">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1055dacc8ab4eab2345032d392b3456d998f3ed1" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53486235" /></Metadata><TypeSignature Language="C#" Value="public class TreeView : System.Web.UI.WebControls.HierarchicalDataBoundControl, System.Web.UI.ICallbackEventHandler, System.Web.UI.IPostBackDataHandler, System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TreeView extends System.Web.UI.WebControls.HierarchicalDataBoundControl implements class System.Web.UI.ICallbackEventHandler, class System.Web.UI.IPostBackDataHandler, class System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.TreeView" />
  <TypeSignature Language="VB.NET" Value="Public Class TreeView&#xA;Inherits HierarchicalDataBoundControl&#xA;Implements ICallbackEventHandler, IPostBackDataHandler, IPostBackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class TreeView : System::Web::UI::WebControls::HierarchicalDataBoundControl, System::Web::UI::ICallbackEventHandler, System::Web::UI::IPostBackDataHandler, System::Web::UI::IPostBackEventHandler" />
  <TypeSignature Language="F#" Value="type TreeView = class&#xA;    inherit HierarchicalDataBoundControl&#xA;    interface IPostBackEventHandler&#xA;    interface IPostBackDataHandler&#xA;    interface ICallbackEventHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.HierarchicalDataBoundControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.ICallbackEventHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackDataHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultEvent("SelectedNodeChanged")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.TreeViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.ControlValueProperty("SelectedValue")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.TreeViewDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Exibe dados hierárquicos, como um sumário, em uma estrutura de árvore.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Neste tópico:  
  
-   [Introdução](#introduction)  
  
-   [Nós](#nodes)  
  
-   [Dados estáticos](#static_data)  
  
-   [Associando a dados](#binding_to_data)  
  
-   [Preenchimento dinâmico de nós](#dynamic_node_population)  
  
-   [Personalizando a Interface do usuário](#customizing_the_user_interface)  
  
-   [Eventos](#events)  
  
-   [Rolagem](#scrolling)  
  
-   [Acessibilidade](#accessibility)  
  
-   [Sintaxe declarativa](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Introdução  
 O <xref:System.Web.UI.WebControls.TreeView> controle é usado para exibir dados hierárquicos, como uma tabela de conteúdo ou o diretório de arquivos, em uma estrutura de árvore e suporta os seguintes recursos:  
  
-   Vinculação de dados que permite que os nós do controle a ser associado a dados relacionais ou tabulares de XML.  
  
-   Site de navegação por meio da integração com o <xref:System.Web.UI.WebControls.SiteMapDataSource> controle.  
  
-   Texto do nó que pode ser exibido como texto sem formatação ou hiperlinks.  
  
-   Acesso programático para o <xref:System.Web.UI.WebControls.TreeView> modelo de objeto para criar árvores, preencher os nós, defina propriedades, e assim por diante dinamicamente.  
  
-   Preenchimento de nós do lado do cliente (em navegadores com suporte).  
  
-   A capacidade de exibir uma caixa de seleção ao lado de cada nó.  
  
-   Aparência personalizável por meio de temas, imagens definidas pelo usuário e estilos.  
  
    > [!NOTE]
    >  O <xref:System.Web.UI.WebControls.TreeView> controle foi projetado para ser usada dentro de uma <xref:System.Web.UI.UpdatePanel> controlar somente quando <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A> é definido como `true`. <xref:System.Web.UI.UpdatePanel> controles são usados para atualizar regiões selecionadas de uma página em vez de atualizar a página inteira com um postback. Para obter mais informações, consulte [visão geral do controle UpdatePanel](https://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a) e [visão geral de renderização parcial da página](https://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49).  
  
<a name="nodes"></a>   
## <a name="nodes"></a>Nós  
 O <xref:System.Web.UI.WebControls.TreeView> controle é composto de nós. Cada entrada de árvore é chamada de nó e é representada por um <xref:System.Web.UI.WebControls.TreeNode> objeto. Tipos de nó são definidos da seguinte maneira:  
  
-   Um nó que contém outros nós é chamado de um *nó pai*.  
  
-   O nó que está contido por outro nó é chamado um *nó filho*.  
  
-   Um nó que não tem filhos é chamado de um *nó folha*.  
  
-   O nó que não está contido em qualquer outro nó, mas é o ancestral para todos os outros nós é o *nó raiz*.  
  
 Um nó pode ser um pai e filho, mas o raiz, pai e os nós folha são mutuamente exclusivos. Várias propriedades de visuais e o comportamentos de nós são determinadas pelo se um nó é um nó folha, raiz ou filho.  
  
 Embora uma estrutura de árvore típico tem apenas um nó raiz, o <xref:System.Web.UI.WebControls.TreeView> controle permite que você adicione vários nós raiz à sua estrutura de árvore. Isso é útil quando você deseja exibir as listagens de item sem exibir um único nó raiz, como em uma lista de categorias de produto.  
  
 Cada nó tem um <xref:System.Web.UI.WebControls.TreeNode.Text%2A> propriedade e um <xref:System.Web.UI.WebControls.TreeNode.Value%2A> propriedade. O valor da <xref:System.Web.UI.WebControls.TreeNode.Text%2A> propriedade é exibida na <xref:System.Web.UI.WebControls.TreeView>, enquanto o <xref:System.Web.UI.WebControls.TreeNode.Value%2A> propriedade é usada para armazenar quaisquer dados adicionais sobre o nó, como os dados que são passados para o evento de postback que está associado com o nó.  
  
 Um nó pode estar em um dos dois modos: modo de seleção e o modo de navegação. Por padrão, um nó é no modo de seleção. Para colocar um nó no modo de navegação, defina o <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> propriedade para o nó para um valor diferente de uma cadeia de caracteres vazia (""). Para colocar um nó no modo de seleção, defina o <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> propriedade para o nó para uma cadeia de caracteres vazia ("").  
  
> [!NOTE]
>  Alguns navegadores da Internet tem uma limitação que pode afetar o desempenho do <xref:System.Web.UI.WebControls.TreeView> controle. Por exemplo, o Microsoft Internet Explorer 6.0 tem um limite de caracteres de URL de caracteres 2067 que ele faz a postagem. Se o número de caracteres em uma URL de um nó é maior do que esse número, expansão desse nó irá falhar e nenhuma exceção é lançada.  
  
<a name="static_data"></a>   
## <a name="static-data"></a>Dados estáticos  
 O modelo de dados mais simples dos <xref:System.Web.UI.WebControls.TreeView> controle é dados estáticos. Para exibir dados estáticos usando sintaxe declarativa, primeiro aninhar abrindo e fechando `<Nodes>` marcas entre as marcas de abertura e fechamento do <xref:System.Web.UI.WebControls.TreeView> controle. Em seguida, crie a estrutura de árvore aninhando `<asp:TreeNode>` elementos entre a abertura e fechamento `<Nodes>` marcas. Cada `<asp:TreeNode>` representa um nó na árvore de elemento e é mapeado para um <xref:System.Web.UI.WebControls.TreeNode> objeto. Você pode definir as propriedades de cada nó, definindo os atributos de seu `<asp:TreeNode>` elemento. Para criar nós filho, aninhar adicionais `<asp:TreeNode>` elementos entre a abertura e fechamento `<asp:TreeNode>` marcas do nó pai.  
  
<a name="binding_to_data"></a>   
## <a name="binding-to-data"></a>Associando a dados  
 O <xref:System.Web.UI.WebControls.TreeView> controle também pode ser associado a dados. Você pode usar qualquer um dos dois métodos para associar o <xref:System.Web.UI.WebControls.TreeView> controle para o tipo de fonte de dados apropriado:  
  
-   O <xref:System.Web.UI.WebControls.TreeView> controle pode usar qualquer controle de fonte de dados que implementa o <xref:System.Web.UI.IHierarchicalDataSource> interface, como um <xref:System.Web.UI.WebControls.XmlDataSource> controle ou um <xref:System.Web.UI.WebControls.SiteMapDataSource> controle. Para associar a um controle de fonte de dados, defina a <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> propriedade do <xref:System.Web.UI.WebControls.TreeView> o controle para o <xref:System.Web.UI.Control.ID%2A> valor do controle de fonte de dados. O <xref:System.Web.UI.WebControls.TreeView> controle associa automaticamente para o controle de fonte de dados especificado. Esse é o método preferencial para associar aos dados.  
  
-   O <xref:System.Web.UI.WebControls.TreeView> controle também pode ser associado a um <xref:System.Xml.XmlDocument> objeto ou um <xref:System.Data.DataSet> objeto com relações. Para associar a uma dessas fontes de dados, defina a <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> propriedade do <xref:System.Web.UI.WebControls.TreeView> o controle para a fonte de dados e, em seguida, chame o <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> método.  
  
 Quando a associação a uma fonte de dados em que cada item de dados contém várias propriedades (como um elemento XML com vários atributos), um nó exibe o valor que é retornado pelo `ToString` método do item de dados, por padrão. No caso de um elemento XML, o nó exibe o nome do elemento, que mostra a estrutura subjacente da árvore, mas não é muito útil caso contrário. Você pode associar um nó a uma propriedade de item de dados específico, especificando as associações de nó de árvore usando o <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> coleção. O <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> coleção contém `TreeNodeBinding` objetos que definem a relação entre um item de dados e o nó que ele está se associando. Você pode especificar os critérios de associação e a propriedade de item de dados para exibir no nó. Para obter mais informações sobre as associações de nó de árvore, consulte <xref:System.Web.UI.WebControls.TreeNodeBinding>.  
  
> [!IMPORTANT]
>  Um usuário mal-intencionado pode criar uma solicitação de retorno de chamada e obter dados para os nós a <xref:System.Web.UI.WebControls.TreeView> controle que o desenvolvedor de página não está exibindo. Portanto, a segurança dos dados deve ser implementada pela fonte de dados. Não use o <xref:System.Web.UI.WebControls.TreeView.MaxDataBindDepth%2A> propriedade para ocultar os dados.  
  
<a name="dynamic_node_population"></a>   
## <a name="dynamic-node-population"></a>Preenchimento dinâmico de nós  
 Às vezes, não é prático definir estaticamente a estrutura de árvore porque a fonte de dados retorna muitos dados ou porque os dados serem exibidos dependem das informações que você obtém em tempo de execução. Por isso, o <xref:System.Web.UI.WebControls.TreeView> controle dá suporte a preenchimento dinâmico de nós. Quando o <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> propriedade para um nó é definida como `true`, esse nó é preenchido no tempo de execução quando o nó é expandido. Para popular um nó dinamicamente, você deve definir um método de manipulação de eventos que contém a lógica para preencher um nó para o <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate> eventos.  
  
 Navegadores que oferecem suporte a scripts de retorno de chamada também podem tirar proveito da população de nó do lado do cliente. (Isso inclui Internet Explorer 5.5 e posteriores e algumas outras navegadores). Preenchimento de nós do lado do cliente permite o <xref:System.Web.UI.WebControls.TreeView> controle para preencher um nó usando o script de cliente quando os usuários expande o nó, sem a necessidade de uma ida e volta ao servidor. Para obter mais informações sobre a população de nó do lado do cliente, consulte <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>.  
  
<a name="customizing_the_user_interface"></a>   
## <a name="customizing-the-user-interface"></a>Personalizando a interface do usuário  
 Há várias maneiras de personalizar a aparência do <xref:System.Web.UI.WebControls.TreeView> controle. Primeiro, você pode especificar um estilo diferente (como tamanho da fonte e cor) para cada um dos tipos de nó.  
  
 Se você usar folhas de estilo em cascata (CSS) para personalizar a aparência do controle, use estilos embutidos ou um arquivo separado do CSS, mas não ambos. Usando estilos embutidos e um arquivo separado CSS pode causar resultados inesperados. Para obter mais informações sobre como usar folhas de estilos com controles, consulte [controles de servidor Web e os estilos CSS](https://msdn.microsoft.com/library/782c2db6-fc9b-4243-8df9-a8ffe2f4cc42).  
  
 A tabela a seguir lista os estilos de nó disponível.  
  
|Propriedade de estilo do nó|Descrição|  
|-------------------------|-----------------|  
|<xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>|As configurações de estilo para um nó quando o ponteiro do mouse está posicionado sobre ele.|  
|<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>|As configurações de estilo para os nós folha.|  
|<xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>|As configurações de estilo padrão para um nó.|  
|<xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>|As configurações de estilo para os nós pai.|  
|<xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>|As configurações de estilo para o nó raiz.|  
|<xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>|As configurações de estilo para um nó selecionado.|  
  
 Você também pode controlar o estilo de nós em intensidades específicos dentro da árvore usando o <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> coleção. O primeiro estilo na coleção corresponde ao estilo de nós no primeiro nível na árvore. O segundo estilo na coleção corresponde ao estilo de nós no segundo nível na árvore e assim por diante. Isso geralmente é usado para gerar tabela de menus de navegação de estilo de conteúdo onde os nós em uma profundidade de determinados devem ter a mesma aparência, independentemente de terem nós filho.  
  
> [!NOTE]
>  Se um estilo é definido para um determinado profundidade nível usando o <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> coleção, que o estilo substitui qualquer raiz, pai ou configurações de estilo de nós de folha para os nós nessa profundidade.  
  
 Outra maneira de alterar a aparência do controle é personalizar as imagens que são exibidas na <xref:System.Web.UI.WebControls.TreeView> controle. Você pode especificar seu próprio conjunto personalizado de imagens para as diferentes partes do controle definindo as propriedades mostradas na tabela a seguir.  
  
|Propriedade de imagem|Descrição|  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>|A URL para uma imagem exibida para o indicador de nó recolhível. Essa imagem geralmente é um sinal de subtração (-).|  
|<xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>|A URL para uma imagem exibida para o indicador de nó expansível. Essa imagem geralmente é um sinal de adição (+).|  
|<xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A>|A URL para a pasta que contém as imagens de linha usadas para se conectar a nós pai nós filho. O <xref:System.Web.UI.WebControls.TreeView.ShowLines%2A> propriedade também deve ser definida como `true` para essa propriedade ter efeito.|  
|<xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>|A URL para uma imagem exibida para o indicador de nó não expansível.|  
  
> [!NOTE]
>  Você não precisa personalizar cada propriedade de imagem. Se uma propriedade de imagem não é explicitamente definida, a imagem interna padrão será usada.  
  
 O <xref:System.Web.UI.WebControls.TreeView> controle também permite que você exiba uma caixa de seleção ao lado de um nó. Quando o <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> propriedade é definida como um valor diferente de `TreeNodeTypes.None`, caixas de seleção são exibidas ao lado dos tipos de nó especificado.  
  
> [!NOTE]
>  O <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> propriedade pode ser definida como uma combinação bit a bit do <xref:System.Web.UI.WebControls.TreeNodeTypes> valores de membro de enumeração.  
  
 Cada vez que a página é postada no servidor, o <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> coleção é preenchida automaticamente com os nós selecionados. Quando as caixas de seleção são exibidas, você pode usar o <xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged> evento para executar uma rotina personalizada sempre que o estado de uma caixa de seleção é alterado entre as postagens no servidor.  
  
<a name="events"></a>   
## <a name="events"></a>Eventos  
 O <xref:System.Web.UI.WebControls.TreeView> controle fornece vários eventos que você pode programar. Isso permite que você execute uma rotina personalizada sempre que um evento ocorre. A tabela a seguir lista os eventos que são compatíveis com o <xref:System.Web.UI.WebControls.TreeView> controle.  
  
|evento|Descrição|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged>|Ocorre quando as caixas de seleção do <xref:System.Web.UI.WebControls.TreeView> controle alterar o estado entre as postagens no servidor.|  
|<xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>|Ocorre quando um nó é selecionado no controle <xref:System.Web.UI.WebControls.TreeView>.|  
|<xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>|Ocorre quando um nó é expandido no controle <xref:System.Web.UI.WebControls.TreeView>.|  
|<xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed>|Ocorre quando um nó é recolhido no controle <xref:System.Web.UI.WebControls.TreeView>.|  
|<xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>|Ocorre quando um nó com a propriedade <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> definida como `true` está expandida no controle <xref:System.Web.UI.WebControls.TreeView>.|  
|<xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound>|Ocorre quando um item de dados é associado a um nó no controle de <xref:System.Web.UI.WebControls.TreeView>.|  
  
<a name="scrolling"></a>   
## <a name="scrolling"></a>Rolagem  
 O <xref:System.Web.UI.WebControls.TreeView> controle não tem de rolagem internas. Para adicionar a rolagem, coloque o <xref:System.Web.UI.WebControls.TreeView> controlar em um <xref:System.Web.UI.WebControls.Panel> controlar e adicionar barras de rolagem para o <xref:System.Web.UI.WebControls.Panel> controle. Para obter mais informações, consulte [Panel Web Server Control Overview](https://msdn.microsoft.com/library/127b61ed-87f2-46f4-92a3-785166e7245b).  
  
<a name="accessibility"></a>   
## <a name="accessibility"></a>Acessibilidade  
 A marcação processada por padrão para esse controle pode não estar em conformidade com padrões de acessibilidade. Para obter detalhes sobre o suporte de acessibilidade para esse controle, consulte [controles ASP.NET e acessibilidade](https://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Sintaxe declarativa  
  
```  
<asp:TreeView  
    AccessKey="string"  
    AutoGenerateDataBindings="True|False"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    CollapseImageToolTip="string"  
    CollapseImageUrl="uri"  
    CssClass="string"  
    DataSource="string"  
    DataSourceID="string"  
    EnableClientScript="True|False"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ExpandDepth="string|FullyExpand|0|1|2|3|4|5|6|7|8|9|10|11|12|13|  
        14|15|16|17|18|19|20|21|22|23|24|25|26|27|28|29|30"  
    ExpandImageToolTip="string"  
    ExpandImageUrl="uri"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
       Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    Height="size"  
    ID="string"  
    ImageSet="Custom|XPFileExplorer|Msdn|WindowsHelp|Simple|Simple2|  
        BulletedList|BulletedList2|BulletedList3|BulletedList4|  
        Arrows|News|Contacts|Inbox|Events|Faq"  
    LineImagesFolder="string"  
    MaxDataBindDepth="integer"  
    NodeIndent="integer"  
    NodeWrap="True|False"  
    NoExpandImageUrl="uri"  
    OnDataBinding="DataBinding event handler"  
    OnDataBound="DataBound event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnSelectedNodeChanged="SelectedNodeChanged event handler"  
    OnTreeNodeCheckChanged="TreeNodeCheckChanged event handler"  
    OnTreeNodeCollapsed="TreeNodeCollapsed event handler"  
    OnTreeNodeDataBound="TreeNodeDataBound event handler"  
    OnTreeNodeExpanded="TreeNodeExpanded event handler"  
    OnTreeNodePopulate="TreeNodePopulate event handler"  
    OnUnload="Unload event handler"  
    PathSeparator="string"  
    PopulateNodesFromClient="True|False"  
    runat="server"  
    ShowCheckBoxes="None|Root|Parent|Leaf|All"  
    ShowExpandCollapse="True|False"  
    ShowLines="True|False"  
    SkinID="string"  
    SkipLinkText="string"  
    Style="string"  
    TabIndex="integer"  
    Target="string"  
    ToolTip="string"  
    Visible="True|False"  
    Width="size"  
>  
        <DataBindings>  
                <asp:TreeNodeBinding  
                    DataMember="string"  
                    Depth="integer"  
                    FormatString="string"  
                    ImageToolTip="string"  
                    ImageToolTipField="string"  
                    ImageUrl="uri"  
                    ImageUrlField="string"  
                    NavigateUrl="uri"  
                    NavigateUrlField="string"  
                    PopulateOnDemand="True|False"  
                    SelectAction="Select|Expand|SelectExpand|None"  
                    ShowCheckBox="string"  
                    Target="string"  
                    TargetField="string"  
                    Text="string"  
                    TextField="string"  
                    ToolTip="string"  
                    ToolTipField="string"  
                    Value="string"  
                    ValueField="string"  
                />  
        </DataBindings>  
        <HoverNodeStyle />  
        <LeafNodeStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            ChildNodesPadding="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ImageUrl="uri"  
            NodeSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <LevelStyles>  
                <asp:TreeNodeStyle  
                    BackColor="color name|#dddddd"  
                    BorderColor="color name|#dddddd"  
                    BorderStyle="NotSet|None|Dotted|Dashed|Solid|  
                        Double|Groove|Ridge|Inset|Outset"  
                    BorderWidth="size"  
                    ChildNodesPadding="size"  
                    CssClass="string"  
                    Font-Bold="True|False"  
                    Font-Italic="True|False"  
                    Font-Names="string"  
                    Font-Overline="True|False"  
                    Font-Size="string|Smaller|Larger|XX-Small|  
                        X-Small|Small|Medium|Large|X-Large|XX-Large"  
                    Font-Strikeout="True|False"  
                    Font-Underline="True|False"  
                    ForeColor="color name|#dddddd"  
                    Height="size"  
                    HorizontalPadding="size"  
                    ImageUrl="uri"  
                    NodeSpacing="size"  
                    OnDisposed="Disposed event handler"  
                    VerticalPadding="size"  
                    Width="size"  
                />  
        </LevelStyles>  
        <Nodes>  
                <asp:TreeNode  
                    Checked="True|False"  
                    Expanded="string"  
                    ImageToolTip="string"  
                    ImageUrl="uri"  
                    NavigateUrl="uri"  
                    PopulateOnDemand="True|False"  
                    SelectAction="Select|Expand|SelectExpand|None"  
                    Selected="True|False"  
                    ShowCheckBox="string"  
                    Target="string"  
                    Text="string"  
                    ToolTip="string"  
                    Value="string"  
>  
                </asp:TreeNode>  
        </Nodes>  
        <NodeStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            ChildNodesPadding="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ImageUrl="uri"  
            NodeSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <ParentNodeStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            ChildNodesPadding="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ImageUrl="uri"  
            NodeSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <RootNodeStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            ChildNodesPadding="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ImageUrl="uri"  
            NodeSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <SelectedNodeStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            ChildNodesPadding="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ImageUrl="uri"  
            NodeSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
</asp:TreeView>  
```  
  
   
  
## Examples  
 Esta seção contém sete exemplos de código:  
  
-   O primeiro exemplo de código demonstra como configurar os quadros no segundo exemplo de código.  
  
-   O segundo exemplo de código demonstra como usar a sintaxe declarativa para exibir dados estáticos no <xref:System.Web.UI.WebControls.TreeView> controle.  
  
-   O terceiro exemplo de código demonstra como associar o <xref:System.Web.UI.WebControls.TreeView> controle a uma fonte de dados XML.  
  
-   O quarto exemplo de código fornece dados XML de exemplo para o terceiro exemplo de código.  
  
-   O quinto exemplo de código demonstra como usar o <xref:System.Web.UI.WebControls.TreeView> controle de navegação do site, associando-o para um <xref:System.Web.UI.WebControls.SiteMapDataSource> controle.  
  
-   O sexto exemplo de código fornece dados de mapa de site de exemplo para o quinto exemplo de código.  
  
-   O sétimo código de exemplo demonstra como preencher os nós no <xref:System.Web.UI.WebControls.TreeView> controle do cliente.  
  
 O exemplo de código a seguir demonstra como configurar os quadros para o exemplo de código a seguir.  
  
 [!code-aspx-csharp[TreeViewFrameSet#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameSet/CS/framecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameSet#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameSet/VB/framevb.aspx#1)]  
  
 O exemplo de código a seguir demonstra como usar a sintaxe declarativa para exibir dados estáticos no <xref:System.Web.UI.WebControls.TreeView> controle. Este exemplo é usado dentro do conjunto de quadros do exemplo anterior para exibir um sumário.  
  
 [!code-aspx-csharp[TreeViewFrameExample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameExample/CS/treeviewframecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameExample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameExample/VB/treeviewframevb.aspx#1)]  
  
 O exemplo de código a seguir demonstra como associar o <xref:System.Web.UI.WebControls.TreeView> controle a uma fonte de dados XML. Para esse exemplo funcione corretamente, você deve copiar os dados XML de exemplo, fornecidos após este exemplo de código em um arquivo denominado Book. XML.  
  
 [!code-aspx-csharp[TreeViewXml#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewXml/CS/treeviewxmlcs.aspx#1)]
 [!code-aspx-vb[TreeViewXml#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewXml/VB/treeviewxmlvb.aspx#1)]  
  
 O exemplo de código a seguir fornece os dados XML de exemplo para o exemplo anterior.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.TreeView> controle de navegação do site, associando-o para um <xref:System.Web.UI.WebControls.SiteMapDataSource> controle. Para esse exemplo funcione corretamente, você deve copiar os dados de mapa de site de exemplo, fornecidos após este exemplo de código em um arquivo denominado Web. sitemap.  
  
 [!code-aspx-csharp[TreeViewAutoGenerateBindings#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewAutoGenerateBindings/CS/treeviewautogeneratebindingscs.aspx#1)]
 [!code-aspx-vb[TreeViewAutoGenerateBindings#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewAutoGenerateBindings/VB/treeviewautogeneratebindingsvb.aspx#1)]  
  
 O exemplo de código a seguir fornece os dados de mapa de site de exemplo para o exemplo de código anterior.  
  
```  
<siteMap>  
    <siteMapNode title="Home" description="Home" url="default.aspx">  
        <siteMapNode title="Products" description="Products" url="Products.aspx">  
            <siteMapNode title="Computers" url="Computers.aspx"/>  
            <siteMapNode title="Accessories" url="Accessories.aspx"/>       
        </siteMapNode>  
    </siteMapNode>  
</siteMap>  
```  
  
 O exemplo de código a seguir demonstra como preencher os nós a <xref:System.Web.UI.WebControls.TreeView> controle do cliente. Quando o preenchimento de nós do lado do cliente estiver habilitado, nós são preenchidos dinamicamente no cliente, sem a necessidade de volta para o servidor.  
  
 [!code-aspx-csharp[TreeViewPopulateNodesFromClient#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/CS/treeviewpopulatenodesfromclientcs.aspx#1)]
 [!code-aspx-vb[TreeViewPopulateNodesFromClient#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/VB/treeviewpopulatenodesfromclientvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" />
    <altmember cref="P:System.Web.UI.WebControls.TreeView.DataBindings" />
    <altmember cref="P:System.Web.UI.WebControls.TreeView.EnableClientScript" />
    <altmember cref="T:System.Web.UI.IHierarchicalDataSource" />
    <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
    <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowCheckBoxes" />
    <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
    <altmember cref="T:System.Web.UI.WebControls.TreeNodeBinding" />
    <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
    <altmember cref="T:System.Web.UI.WebControls.TreeNodeCollection" />
    <altmember cref="T:System.Web.UI.WebControls.SiteMapDataSource" />
    <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged" />
    <altmember cref="E:System.Web.UI.WebControls.TreeView.SelectedNodeChanged" />
    <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeExpanded" />
    <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed" />
    <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" />
    <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeDataBound" />
    <related type="Article" href="https://msdn.microsoft.com/library/6b85a558-1df8-44cf-bea6-62e61bcc8d20">Mapas de Site do ASP.NET</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeView();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.UI.WebControls.TreeView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.TreeView.%23ctor%2A> construtor para criar e inicializar uma nova instância do <xref:System.Web.UI.WebControls.TreeView> classe. Para adicionar um <xref:System.Web.UI.WebControls.TreeView> dinamicamente o controle para uma página, crie um novo <xref:System.Web.UI.WebControls.TreeView> do objeto, defina suas propriedades e, em seguida, adicioná-lo para o <xref:System.Web.UI.Control.Controls%2A?displayProperty=nameWithType> controlar a coleção de um contêiner, como o <xref:System.Web.UI.WebControls.PlaceHolder> controle.  
  
   
  
## Examples  
 Esta seção contém dois exemplos de código. O primeiro exemplo de código demonstra como usar o <xref:System.Web.UI.WebControls.TreeView.%23ctor%2A> construtor para adicionar um <xref:System.Web.UI.WebControls.TreeView> dinamicamente o controle para uma página. O segundo exemplo de código fornece dados XML de exemplo para o primeiro exemplo de código.  
  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.TreeView.%23ctor%2A> construtor para adicionar um <xref:System.Web.UI.WebControls.TreeView> dinamicamente o controle para uma página. Para esse exemplo funcione corretamente, você deve copiar os dados XML de exemplo fornecidos após este exemplo de código em um arquivo denominado Book. XML.  
  
 [!code-aspx-csharp[TreeViewCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCtor/CS/treeviewctorcs.aspx#1)]
 [!code-aspx-vb[TreeViewCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCtor/VB/treeviewctorvb.aspx#1)]  
  
 O exemplo de código a seguir fornece os dados XML de exemplo para o exemplo anterior.  
  
```  
<Book Title="Book Title">  
  <Chapter Heading="Chapter 1">  
    <Section Heading="Section 1">  
    </Section>  
    <Section Heading="Section 2">  
    </Section>  
  </Chapter>  
  <Chapter Heading="Chapter 2">  
    <Section Heading="Section 1">  
    </Section>  
  </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="T:System.Web.UI.WebControls.PlaceHolder" />
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.AddAttributesToRender : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="treeView.AddAttributesToRender writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Um <see cref="T:System.Web.UI.HtmlTextWriter" /> que representa o fluxo de saída para renderizar o conteúdo HTML no cliente.</param>
        <summary>Adiciona atributos HTML e estilos que precisam ser renderizadas ao controle <see cref="T:System.Web.UI.HtmlTextWriter" /> especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.TreeView.AddAttributesToRender%2A> método é usado principalmente por desenvolvedores de controle.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateDataBindings">
      <MemberSignature Language="C#" Value="public bool AutoGenerateDataBindings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGenerateDataBindings" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoGenerateDataBindings As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoGenerateDataBindings { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoGenerateDataBindings : bool with get, set" Usage="System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se o controle <see cref="T:System.Web.UI.WebControls.TreeView" /> gera automaticamente as associações de nó de árvore.</summary>
        <value><see langword="true" /> para ter o <see cref="T:System.Web.UI.WebControls.TreeView" /> controle gerar automaticamente as associações de nó de árvore; caso contrário, <see langword="false" />. O padrão é <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 As associações de nó de árvore definem a relação entre um item de dados e o nó que ele está se associando. Ao associar a uma fonte de dados em que cada item de dados contém várias propriedades (como um elemento XML com vários atributos), o <xref:System.Web.UI.WebControls.TreeView> controle precisa saber qual propriedade de item de dados para associar ao qual <xref:System.Web.UI.WebControls.TreeNode> propriedade. Se o <xref:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings%2A> estiver definida como `true`, o <xref:System.Web.UI.WebControls.TreeView> controle gera automaticamente associações de nó de árvore padrão que definirem as <xref:System.Web.UI.WebControls.TreeNode.Text%2A> propriedade do <xref:System.Web.UI.WebControls.TreeNode> objeto que está associado com a associação para o valor que é retornado pelo `ToString` método do item de dados.  
  
> [!NOTE]
>  As associações de nó de árvore gerada automaticamente não são adicionadas ao <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> coleção.  
  
 No caso de um elemento XML, o valor retornado pelo `ToString` método é o nome do elemento, que mostra a estrutura subjacente do arquivo XML, mas não é muito útil caso contrário. Para criar uma árvore mais útil, você deve definir suas próprias ligações de nó de árvore, preenchendo o <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> coleção.  
  
> [!NOTE]
>  Se você definir um <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> coleta, o <xref:System.Web.UI.WebControls.TreeView> controle usa esses valores, em vez de associações de nó de árvore gerado automaticamente.  
  
 O valor dessa propriedade é armazenado no estado de exibição.  
  
   
  
## Examples  
 Esta seção contém dois exemplos de código. O primeiro exemplo de código demonstra como desabilitar a geração de associação do nó de árvore automático definindo a <xref:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings%2A> propriedade para `false`. O segundo exemplo de código fornece dados de mapa de site de exemplo para o primeiro exemplo de código.  
  
 O exemplo de código a seguir demonstra como desabilitar a geração de associação do nó de árvore automático definindo a <xref:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings%2A> propriedade para `false`. Um <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> coleção é definida para estabelecer a relação entre os itens de dados em um <xref:System.Web.UI.WebControls.SiteMapDataSource> controle e os nós do <xref:System.Web.UI.WebControls.TreeView> controle. Para esse exemplo funcione corretamente, você deve copiar os dados de mapa de site de exemplo, fornecidos após este exemplo de código em um arquivo denominado Web. sitemap.  
  
 [!code-aspx-csharp[TreeViewAutoGenerateBindings#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewAutoGenerateBindings/CS/treeviewautogeneratebindingscs.aspx#1)]
 [!code-aspx-vb[TreeViewAutoGenerateBindings#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewAutoGenerateBindings/VB/treeviewautogeneratebindingsvb.aspx#1)]  
  
 O exemplo de código a seguir fornece os dados de mapa de site de exemplo para o exemplo anterior.  
  
```  
<siteMap>  
    <siteMapNode title="Home" description="Home" url="default.aspx">  
        <siteMapNode title="Products" description="Products" url="Products.aspx">  
            <siteMapNode title="Computers" url="Computers.aspx"/>  
            <siteMapNode title="Accessories" url="Accessories.aspx"/>       
        </siteMapNode>  
    </siteMapNode>  
</siteMap>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.DataBindings" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeBinding" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" />
      </Docs>
    </Member>
    <Member MemberName="CheckedNodes">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeCollection CheckedNodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeCollection CheckedNodes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.CheckedNodes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CheckedNodes As TreeNodeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeCollection ^ CheckedNodes { System::Web::UI::WebControls::TreeNodeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CheckedNodes : System.Web.UI.WebControls.TreeNodeCollection" Usage="System.Web.UI.WebControls.TreeView.CheckedNodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma coleção de objetos <see cref="T:System.Web.UI.WebControls.TreeNode" /> que representam os nós no controle <see cref="T:System.Web.UI.WebControls.TreeView" /> que exibe uma caixa de seleção selecionada.</summary>
        <value>Um <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> que contém os nós em <see cref="T:System.Web.UI.WebControls.TreeView" /> que exibem uma caixa de seleção.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando as caixas de seleção são exibidas na <xref:System.Web.UI.WebControls.TreeView> controle (definindo o <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> propriedade com um valor diferente de `TreeNodeType.None`), use o <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> propriedade para determinar quais nós exibem uma caixa de seleção. Essa coleção é comumente usada para iterar em todos os nós que têm uma caixa de seleção na árvore.  
  
 O <xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged> é gerado quando as caixas de seleção do <xref:System.Web.UI.WebControls.TreeView> controle alterar o estado entre as postagens no servidor. Isso permite que você forneça um método de manipulação de eventos que executa uma rotina personalizada, como atualizar um banco de dados ou o conteúdo exibido, sempre que esse evento ocorre.  
  
> [!NOTE]
>  O <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> coleção é preenchida usando uma passagem de profundidade da estrutura de árvore: cada nó pai é processado para baixo até seus nós filho antes do próximo nó pai é preenchido.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> propriedade para determinar quais nós têm uma caixa de seleção <xref:System.Web.UI.WebControls.TreeView> controle.  
  
 [!code-aspx-csharp[TreeViewShowCheckBoxes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewShowCheckBoxes/CS/treeviewshowcheckboxescs.aspx#1)]
 [!code-aspx-vb[TreeViewShowCheckBoxes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewShowCheckBoxes/VB/treeviewshowcheckboxesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowCheckBoxes" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeCollection" />
      </Docs>
    </Member>
    <Member MemberName="CollapseAll">
      <MemberSignature Language="C#" Value="public void CollapseAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CollapseAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.CollapseAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub CollapseAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CollapseAll();" />
      <MemberSignature Language="F#" Value="member this.CollapseAll : unit -&gt; unit" Usage="treeView.CollapseAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Fecha todos os nós da árvore.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.TreeView.CollapseAll%2A> método fornece uma maneira conveniente para fechar todos os nós na árvore.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.TreeView.CollapseAll%2A> método para recolher todos os nós a <xref:System.Web.UI.WebControls.TreeView> controle ao mesmo tempo.  
  
 [!code-aspx-csharp[TreeViewExpandAll#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewExpandAll/CS/treeviewexpandallcs.aspx#1)]
 [!code-aspx-vb[TreeViewExpandAll#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewExpandAll/VB/treeviewexpandallvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.ExpandAll" />
      </Docs>
    </Member>
    <Member MemberName="CollapseImageToolTip">
      <MemberSignature Language="C#" Value="public string CollapseImageToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CollapseImageToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.CollapseImageToolTip" />
      <MemberSignature Language="VB.NET" Value="Public Property CollapseImageToolTip As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CollapseImageToolTip { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CollapseImageToolTip : string with get, set" Usage="System.Web.UI.WebControls.TreeView.CollapseImageToolTip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a dica de ferramenta para a imagem exibida para o indicador de nó recolhível.</summary>
        <value>A dica de ferramenta para a imagem exibida para o indicador de nó recolhível.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.TreeView.CollapseImageToolTip%2A> propriedade para especificar uma dica de ferramenta para a imagem recolhível. O texto que você especificar fornece dispositivos de tecnologia assistencial com uma descrição da imagem que pode ser usada para tornar o controle mais acessível.  
  
 O valor dessa propriedade é armazenado no estado de exibição.  
  
 O valor dessa propriedade, quando definido, podem ser salvos automaticamente em um arquivo de recurso usando uma ferramenta de designer. Para obter mais informações, consulte <xref:System.ComponentModel.LocalizableAttribute> e [globalização e localização](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.TreeView.CollapseImageToolTip%2A> propriedade para especificar uma dica de ferramenta para uma imagem que é exibida para o indicador de nó recolhível.  
  
 [!code-aspx-csharp[TreeViewCustomImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCustomImage/CS/treeviewcustomimagecs.aspx#1)]
 [!code-aspx-vb[TreeViewCustomImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCustomImage/VB/treeviewcustomimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ImageSet" />
      </Docs>
    </Member>
    <Member MemberName="CollapseImageUrl">
      <MemberSignature Language="C#" Value="public string CollapseImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CollapseImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property CollapseImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CollapseImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CollapseImageUrl : string with get, set" Usage="System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a URL para uma imagem personalizada para o indicador de nó recolhível.</summary>
        <value>A URL para uma imagem personalizada a ser exibida para nós recolhíveis. O padrão é uma cadeia de caracteres vazia (""), que exibe a imagem do sinal de subtração (-) padrão.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> propriedade para especificar uma imagem personalizada para o indicador de nó recolhível. Essa imagem é exibida ao lado de um nó recolhível e geralmente é um sinal de subtração (-).  
  
 Quando o <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> estiver definida como `true`, o <xref:System.Web.UI.WebControls.TreeView> controle exibe um sinal de adição (+) ou um sinal de subtração sign(-) ou uma imagem de espaço reservado ao lado de um nó para indicar se o nó é expansível, não expansível ou recolhível, respectivamente. Você pode especificar imagens personalizadas pelo primeiro parâmetro de <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> propriedade para `TreeViewImageSet.Custom`e, em seguida, definindo o <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>, <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>, e <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> propriedades para as URLs para as imagens personalizadas. Se nenhuma imagem for especificada, as imagens padrão são usadas. Para ocultar os indicadores de nó de expansão, defina as <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> propriedade para `false`.  
  
> [!NOTE]
>  Para garantir que nós alinham corretamente na <xref:System.Web.UI.WebControls.TreeView> controlar ao usar imagens personalizadas, certifique-se de que todas as imagens que são especificadas pelo <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>, <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>, e <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> propriedades têm as mesmas dimensões.  
  
 Ao usar uma imagem personalizada para o indicador de nó recolhível, você também deve considerar a configuração de <xref:System.Web.UI.WebControls.TreeView.CollapseImageToolTip%2A> propriedade para especificar uma dica de ferramenta para a imagem.  
  
 O valor dessa propriedade é armazenado no estado de exibição.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> propriedade para especificar uma imagem personalizada para o indicador de nó recolhível. Para o exemplo de código a serem exibidas e a imagem seja exibida no controle, você deve fornecer sua própria imagem e o <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> propriedade deve ser definida como `TreeNodeImageSet.Custom`.  
  
 [!code-aspx-csharp[TreeViewCustomImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCustomImage/CS/treeviewcustomimagecs.aspx#1)]
 [!code-aspx-vb[TreeViewCustomImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCustomImage/VB/treeviewcustomimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowExpandCollapse" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ImageSet" />
        <altmember cref="T:System.Web.UI.WebControls.TreeViewImageSet" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageToolTip" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberSignature Language="F#" Value="override this.CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection" Usage="treeView.CreateControlCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cria uma coleção para armazenar controles filho.</summary>
        <returns>Sempre retorna um <see cref="T:System.Web.UI.EmptyControlCollection" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.TreeView> controle não dá suporte a inserção de controles filho. Esse método foi substituído para impedir a adição de controles filho e sempre retorna um <xref:System.Web.UI.EmptyControlCollection?displayProperty=nameWithType> objeto.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.EmptyControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="CreateNode">
      <MemberSignature Language="C#" Value="protected internal virtual System.Web.UI.WebControls.TreeNode CreateNode ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Web.UI.WebControls.TreeNode CreateNode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.CreateNode" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateNode () As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Web::UI::WebControls::TreeNode ^ CreateNode();" />
      <MemberSignature Language="F#" Value="abstract member CreateNode : unit -&gt; System.Web.UI.WebControls.TreeNode&#xA;override this.CreateNode : unit -&gt; System.Web.UI.WebControls.TreeNode" Usage="treeView.CreateNode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna uma nova instância da classe <see cref="T:System.Web.UI.WebControls.TreeNode" />. O <see cref="M:System.Web.UI.WebControls.TreeView.CreateNode" /> é um método auxiliar.</summary>
        <returns>Uma nova instância do <see cref="T:System.Web.UI.WebControls.TreeNode" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.TreeView.CreateNode%2A> é um método auxiliar que retorna uma nova instância do <xref:System.Web.UI.WebControls.TreeNode> classe.  
  
 O <xref:System.Web.UI.WebControls.TreeView.CreateNode%2A> método é usado principalmente por desenvolvedores de controle. Controlar os desenvolvedores que desejam estender a <xref:System.Web.UI.WebControls.TreeView> classe estendendo o <xref:System.Web.UI.WebControls.TreeNode> classe deve substituir esse método para retornar um objeto que deriva de <xref:System.Web.UI.WebControls.TreeNode>. Uma razão comum para estender a <xref:System.Web.UI.WebControls.TreeNode> classe é substituir o <xref:System.Web.UI.WebControls.TreeNode.RenderPreText%2A> e <xref:System.Web.UI.WebControls.TreeNode.RenderPostText%2A> métodos.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public override sealed void DataBind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DataBind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.DataBind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub DataBind ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void DataBind();" />
      <MemberSignature Language="F#" Value="override this.DataBind : unit -&gt; unit" Usage="treeView.DataBind " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Chama o método <see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" /> da classe base.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Controles ligados a dados deve substituir a <xref:System.Web.UI.WebControls.TreeView.PerformDataBinding%2A> método em vez do <xref:System.Web.UI.WebControls.TreeView.DataBind%2A> método.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.PerformDataBinding" />
      </Docs>
    </Member>
    <Member MemberName="DataBindings">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeBindingCollection DataBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeBindingCollection DataBindings" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.DataBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataBindings As TreeNodeBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeBindingCollection ^ DataBindings { System::Web::UI::WebControls::TreeNodeBindingCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataBindings : System.Web.UI.WebControls.TreeNodeBindingCollection" Usage="System.Web.UI.WebControls.TreeView.DataBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.TreeViewBindingsEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.TreeViewBindingsEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma coleção de <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> objetos que definem a relação entre um item de dados e o nó ao qual ele está se associando.</summary>
        <value>Um <see cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" /> que representa a relação entre um item de dados e o nó ao qual ele está se associando.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> coleção contém <xref:System.Web.UI.WebControls.TreeNodeBinding> objetos que definem a relação entre um item de dados e o nó que ele está se associando. Quando a associação a uma fonte de dados em que cada item de dados contém várias propriedades (como um elemento XML com vários atributos), um nó exibe o valor que é retornado pelo `ToString` método do item de dados, por padrão. No caso de um elemento XML, o nó exibe o nome do elemento, que mostra a estrutura subjacente da árvore, mas não é muito útil caso contrário. Você pode associar um nó a uma propriedade de item de dados específico, especificando as associações de nó de árvore.  
  
 Ao definir a relação entre um item de dados e um nó, você deve especificar ambos os critérios para associação e os valores associar a propriedades de <xref:System.Web.UI.WebControls.TreeNode> objeto. Os critérios indicam quando um item de dados deve ser associado a um nó. Os critérios podem ser especificados com uma profundidade de nó, um membro de dados ou ambos. Uma profundidade de nó Especifica o nível de nó que obtém a associação. Por exemplo, se você especificar uma profundidade do nó de 0, todos os nós na estrutura de árvore no nível 0 são associados usando a associação do nó de árvore. Um membro de dados especifica o tipo do item de dados na fonte de dados subjacente, mas pode representar informações diferentes dependendo da fonte de dados. Por exemplo, o membro de dados para um elemento XML Especifica o nome do elemento.  
  
 Se vários <xref:System.Web.UI.WebControls.TreeNodeBinding> objetos são definidos que estão em conflito entre si, o <xref:System.Web.UI.WebControls.TreeView> controle aplica-se as associações de nó de árvore na seguinte ordem de precedência:  
  
1.  O <xref:System.Web.UI.WebControls.TreeNodeBinding> objeto que define uma profundidade e um membro de dados.  
  
2.  O <xref:System.Web.UI.WebControls.TreeNodeBinding> objeto que define apenas a profundidade.  
  
3.  O <xref:System.Web.UI.WebControls.TreeNodeBinding> objeto que define apenas o membro de dados.  
  
4.  O <xref:System.Web.UI.WebControls.TreeNodeBinding> objeto que define a profundidade nem o membro de dados.  
  
 Se várias associações forem especificadas, que atendem os mesmos critérios de precedência, a primeira associação da coleção é aplicada.  
  
 Quando os critérios de vinculação é estabelecida, você pode, em seguida, associe uma propriedade de um <xref:System.Web.UI.WebControls.TreeNode> objeto que pode ser associado a um valor. Você pode associar a um atributo ou um campo de um item de dados ou exibir um valor estático. Para obter mais informações sobre como associar as propriedades de um <xref:System.Web.UI.WebControls.TreeNode> como um valor de objeto, consulte <xref:System.Web.UI.WebControls.TreeNodeBinding>.  
  
 Embora o <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> coleção pode ser preenchida por meio de programação, geralmente é definido de forma declarativa. Para especificar as associações de nó de árvore, primeiro aninhar abrindo e fechando `<DataBindings>` marcas entre as marcas de abertura e fechamento do <xref:System.Web.UI.WebControls.TreeView> controle. Em seguida, coloque `<asp:TreeNodeBinding>` elementos entre a abertura e fechamento `<DataBindings>` marcas para cada nó de árvore que você deseja especificar.  
  
 Quando as associações de dados são criadas definindo a <xref:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings%2A> propriedade do <xref:System.Web.UI.WebControls.TreeView> o controle para `true`, têm as associações que são criadas os <xref:System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand%2A> propriedade definida como `true`. Associações de dados que são criadas declaradamente têm o <xref:System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand%2A> propriedade definida como `false`. Usando a sintaxe declarativa permite que você controle o comportamento das associações de dados individuais.  
  
   
  
## Examples  
 Esta seção contém dois exemplos de código. O primeiro exemplo de código demonstra como usar o <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> coleção para definir a relação entre um item de dados e o nó que ele está se associando. O segundo exemplo de código fornece dados XML de exemplo para o primeiro exemplo de código.  
  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> coleção para definir a relação entre um item de dados e o nó que ele está se associando. Para esse exemplo funcione corretamente, você deve copiar os dados XML de exemplo, fornecidos após este exemplo de código em um arquivo denominado Book. XML. Este exemplo especifica somente o <xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A> propriedade da associação. Um ganho de desempenho pequeno pôde ser adicionado ao especificar também o <xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A> propriedade.  
  
 [!code-aspx-csharp[TreeViewXml#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewXml/CS/treeviewxmlcs.aspx#1)]
 [!code-aspx-vb[TreeViewXml#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewXml/VB/treeviewxmlvb.aspx#1)]  
  
 O exemplo de código a seguir fornece os dados XML de exemplo para o exemplo anterior.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeBinding" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" />
      </Docs>
    </Member>
    <Member MemberName="EnableClientScript">
      <MemberSignature Language="C#" Value="public bool EnableClientScript { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableClientScript" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.EnableClientScript" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableClientScript As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableClientScript { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableClientScript : bool with get, set" Usage="System.Web.UI.WebControls.TreeView.EnableClientScript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se o controle <see cref="T:System.Web.UI.WebControls.TreeView" /> renderiza o script do lado do cliente para manipular a expansão e o recolhimento de eventos.</summary>
        <value><see langword="true" /> para renderizar o script do lado do cliente em navegadores compatíveis; caso contrário, <see langword="false" />. O padrão é <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A> propriedade para especificar se o <xref:System.Web.UI.WebControls.TreeView> controle renderiza o script do lado do cliente em navegadores compatíveis para manipular a expansão e recolhimento de eventos. Quando essa propriedade é definida como `true`, navegadores compatíveis execute o código para expandir e recolher nós no cliente. Os dados do nó de árvore devem ser conhecidos com antecedência para o script do lado do cliente para trabalhar. Usar o script de cliente impede que uma postagem de volta para o servidor sempre que um nó é expandido ou recolhido.  
  
 Quando os dados do nó de árvore não são conhecidos de antemão, nós podem ser populados do cliente, se o `PopulateNodesFromClient` propriedade também é definida como `true`. Nesse cenário, você também deve fornecer um método de manipulação de eventos para o <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate> evento para preencher os nós. Para obter mais informações sobre a população de nó do lado do cliente, consulte <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>.  
  
> [!NOTE]
>  Se o <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A> estiver definida como `false`, o <xref:System.Web.UI.WebControls.TreeView> controle faz postback para o servidor sempre que um nó é expandido ou recolhido.  
  
 O valor dessa propriedade é armazenado no estado de exibição.  
  
 Essa propriedade não pode ser definida por temas ou temas de folha de estilo. Para obter mais informações, consulte <xref:System.Web.UI.ThemeableAttribute> e [capas e temas do ASP.NET](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 Esta seção contém dois exemplos de código. O primeiro exemplo de código demonstra como usar o <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A> propriedade para renderizar o script do lado do cliente que é usado para expandir e recolher nós em navegadores compatíveis. O segundo exemplo de código fornece dados XML de exemplo para o primeiro exemplo de código.  
  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A> propriedade para renderizar o script do lado do cliente que é usado para expandir e recolher nós em navegadores compatíveis. Observe que uma postagem para o servidor é necessária para expandir e recolher um nó quando o <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A> estiver definida como `false`. Para esse exemplo funcione corretamente, você deve copiar os dados XML de exemplo, fornecidos após este exemplo de código em um arquivo denominado Book. XML.  
  
 [!code-aspx-csharp[TreeViewEnableClientScript#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewEnableClientScript/CS/treeviewenableclientscriptcs.aspx#1)]
 [!code-aspx-vb[TreeViewEnableClientScript#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewEnableClientScript/VB/treeviewenableclientscriptvb.aspx#1)]  
  
 O exemplo de código a seguir fornece os dados XML de exemplo para o exemplo de código anterior.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient" />
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" />
      </Docs>
    </Member>
    <Member MemberName="ExpandAll">
      <MemberSignature Language="C#" Value="public void ExpandAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExpandAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.ExpandAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExpandAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExpandAll();" />
      <MemberSignature Language="F#" Value="member this.ExpandAll : unit -&gt; unit" Usage="treeView.ExpandAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Abre todos os nós da árvore.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.TreeView.ExpandAll%2A> método fornece uma maneira conveniente para abrir todos os nós na árvore.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.TreeView.ExpandAll%2A> método para expandir todos os nós a <xref:System.Web.UI.WebControls.TreeView> controle ao mesmo tempo.  
  
 [!code-aspx-csharp[TreeViewExpandAll#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewExpandAll/CS/treeviewexpandallcs.aspx#1)]
 [!code-aspx-vb[TreeViewExpandAll#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewExpandAll/VB/treeviewexpandallvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.CollapseAll" />
      </Docs>
    </Member>
    <Member MemberName="ExpandDepth">
      <MemberSignature Language="C#" Value="public int ExpandDepth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ExpandDepth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ExpandDepth" />
      <MemberSignature Language="VB.NET" Value="Public Property ExpandDepth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ExpandDepth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ExpandDepth : int with get, set" Usage="System.Web.UI.WebControls.TreeView.ExpandDepth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.TreeView/TreeViewExpandDepthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o número de níveis que são expandidos quando um controle <see cref="T:System.Web.UI.WebControls.TreeView" /> é exibido pela primeira vez.</summary>
        <value>A profundidade para exibir quando o <see cref="T:System.Web.UI.WebControls.TreeView" /> é exibido inicialmente. O padrão é 1, que exibe todos os nós.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.TreeView.ExpandDepth%2A> propriedade para controlar a renderização do <xref:System.Web.UI.WebControls.TreeView> controlar na primeira vez que ele é exibido. Em postbacks subsequentes, os nós reter estado expandido atual.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LevelStyles" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.ExpandAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.CollapseAll" />
      </Docs>
    </Member>
    <Member MemberName="ExpandImageToolTip">
      <MemberSignature Language="C#" Value="public string ExpandImageToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExpandImageToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ExpandImageToolTip" />
      <MemberSignature Language="VB.NET" Value="Public Property ExpandImageToolTip As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ExpandImageToolTip { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ExpandImageToolTip : string with get, set" Usage="System.Web.UI.WebControls.TreeView.ExpandImageToolTip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a dica de ferramenta para a imagem exibida para o indicador de nó expansível.</summary>
        <value>A dica de ferramenta para a imagem exibida para o indicador de nó expansível.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.TreeView.ExpandImageToolTip%2A> propriedade para especificar uma dica de ferramenta para a imagem. O texto que você especificar fornece dispositivos de tecnologia assistencial com uma descrição da imagem que pode ser usada para tornar o controle mais acessível.  
  
 O valor dessa propriedade é armazenado no estado de exibição.  
  
 O valor dessa propriedade, quando definido, podem ser salvos automaticamente em um arquivo de recurso usando uma ferramenta de designer. Para obter mais informações, consulte <xref:System.ComponentModel.LocalizableAttribute> e [globalização e localização](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.TreeView.ExpandImageToolTip%2A> propriedade para especificar uma dica de ferramenta para uma imagem que é exibida para o indicador de nó expansível.  
  
 [!code-aspx-csharp[TreeViewCustomImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCustomImage/CS/treeviewcustomimagecs.aspx#1)]
 [!code-aspx-vb[TreeViewCustomImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCustomImage/VB/treeviewcustomimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ImageSet" />
      </Docs>
    </Member>
    <Member MemberName="ExpandImageUrl">
      <MemberSignature Language="C#" Value="public string ExpandImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExpandImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property ExpandImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ExpandImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ExpandImageUrl : string with get, set" Usage="System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a URL para uma imagem personalizada para o indicador de nó expansível.</summary>
        <value>A URL para uma imagem personalizada a ser exibida para nós expansíveis. O padrão é uma cadeia de caracteres vazia (""), que exibe a imagem do sinal de adição (+) padrão.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A> propriedade para especificar uma imagem personalizada para o indicador de nó expansível. Essa imagem é exibida ao lado de um nó expansível e geralmente é um sinal de adição (+).  
  
 Quando o <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> estiver definida como `true`, o <xref:System.Web.UI.WebControls.TreeView> controle exibe um sinal de adição (+) ou sinal de subtração (-) ou uma imagem de espaço reservado ao lado de um nó para indicar se o nó é expansível, não expansível ou recolhível, respectivamente. Você pode especificar imagens personalizadas pelo primeiro parâmetro de <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> propriedade para `TreeViewImageSet.Custom`e, em seguida, definindo o <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>, <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>, e <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> propriedades para as URLs para as imagens personalizadas. Se nenhuma imagem for especificada, as imagens padrão são usadas. Para ocultar os indicadores de nó de expansão, defina as <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> propriedade para `false`.  
  
> [!NOTE]
>  Para garantir que nós alinham corretamente na <xref:System.Web.UI.WebControls.TreeView> controlar ao usar imagens personalizadas, certifique-se de que todas as imagens que são especificadas pelo <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>, <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>, e <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> propriedades têm as mesmas dimensões.  
  
 Para exibir uma imagem personalizada corretamente, você talvez precise definir <xref:System.Web.UI.WebControls.TreeView.ShowLines%2A> para `false`.  
  
 Ao usar uma imagem personalizada para o indicador de nó expansível, você também deve considerar a configuração de <xref:System.Web.UI.WebControls.TreeView.ExpandImageToolTip%2A> propriedade para especificar uma dica de ferramenta para a imagem.  
  
 O valor dessa propriedade é armazenado no estado de exibição.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A> propriedade para especificar uma imagem personalizada para o indicador de nó expansível. Para o exemplo de código a serem exibidas e a imagem seja exibida no controle, você deve fornecer sua própria imagem e o <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> propriedade deve ser definida como `TreeNodeImageSet.Custom`.  
  
 [!code-aspx-csharp[TreeViewCustomImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCustomImage/CS/treeviewcustomimagecs.aspx#1)]
 [!code-aspx-vb[TreeViewCustomImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCustomImage/VB/treeviewcustomimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowExpandCollapse" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ImageSet" />
        <altmember cref="T:System.Web.UI.WebControls.TreeViewImageSet" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageToolTip" />
      </Docs>
    </Member>
    <Member MemberName="FindNode">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNode FindNode (string valuePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.WebControls.TreeNode FindNode(string valuePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.FindNode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindNode (valuePath As String) As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::WebControls::TreeNode ^ FindNode(System::String ^ valuePath);" />
      <MemberSignature Language="F#" Value="member this.FindNode : string -&gt; System.Web.UI.WebControls.TreeNode" Usage="treeView.FindNode valuePath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valuePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="valuePath">O caminho de valor de um nó.</param>
        <summary>Recupera o objeto <see cref="T:System.Web.UI.WebControls.TreeNode" /> no controle <see cref="T:System.Web.UI.WebControls.TreeView" /> no caminho de valor especificado.</summary>
        <returns>O <see cref="T:System.Web.UI.WebControls.TreeNode" /> no caminho de valor especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.TreeView.FindNode%2A> método para obter um nó do <xref:System.Web.UI.WebControls.TreeView> controle no caminho de valor especificado. O caminho de valor contém uma lista separada por delimitador de valores de nó que formam um caminho do nó raiz para o nó atual. Cada nó armazena o caminho de valor no <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> propriedade. O <xref:System.Web.UI.WebControls.TreeView.PathSeparator%2A> propriedade especifica o caractere delimitador que é usado para separar os valores de nó.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.TreeView.FindNode%2A> método para recuperar um nó a <xref:System.Web.UI.WebControls.TreeView> controle.  
  
> [!IMPORTANT]
>  Este exemplo tem uma caixa de texto que aceita entrada do usuário, que é uma potencial ameaça de segurança. Por padrão, as páginas da Web do ASP.NET validam que a entrada do usuário não inclui elementos HTML ou script. Para obter mais informações, consulte [Visão geral de explorações de script](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[TreeViewFindNode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFindNode/CS/treeviewfindnodecs.aspx#1)]
 [!code-aspx-vb[TreeViewFindNode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFindNode/VB/treeviewfindnodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ValuePath" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.PathSeparator" />
      </Docs>
    </Member>
    <Member MemberName="GetCallbackResult">
      <MemberSignature Language="C#" Value="protected virtual string GetCallbackResult ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetCallbackResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.GetCallbackResult" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetCallbackResult () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetCallbackResult();" />
      <MemberSignature Language="F#" Value="abstract member GetCallbackResult : unit -&gt; string&#xA;override this.GetCallbackResult : unit -&gt; string" Usage="treeView.GetCallbackResult " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.ICallbackEventHandler.GetCallbackResult</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna o resultado de um evento de retorno de chamada direcionado a um controle.</summary>
        <returns>Os resultados do retorno de chamada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.TreeView> controlar implementa o <xref:System.Web.UI.ICallbackEventHandler> interface e usa o <xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A> para recuperar dados e o <xref:System.Web.UI.WebControls.TreeView.GetCallbackResult%2A> método para retornar os dados recuperados para o controle.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HoverNodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style HoverNodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style HoverNodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HoverNodeStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ HoverNodeStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HoverNodeStyle : System.Web.UI.WebControls.Style" Usage="System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma referência ao objeto <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> que permite definir a aparência de um nó quando o ponteiro do mouse está posicionado sobre ele.</summary>
        <value>Uma referência ao <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> que representa o estilo de um nó quando o ponteiro do mouse está posicionado sobre ele.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> propriedade para controlar a aparência de um nó quando o ponteiro do mouse é posicionado sobre ele. Essa propriedade é somente leitura; No entanto, você pode definir as propriedades do <xref:System.Web.UI.WebControls.TreeNodeStyle> objeto que ele retorna. As propriedades podem ser definidas declarativamente na forma `Property-Subproperty`, onde `Subproperty` é uma propriedade da <xref:System.Web.UI.WebControls.TreeNodeStyle> objeto (por exemplo, `HoverNodeStyle-ForeColor`). As propriedades também podem ser definidas programaticamente no formulário `Property.Subproperty` (por exemplo, `HoverNodeStyle.ForeColor`). Esse recurso tem suporte apenas em clientes compatíveis com o script.  
  
> [!NOTE]
>  Para usar o <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> propriedade, você deve incluir uma `<head>` elemento com um `runat="server"` atributo.  
  
 Configurações comuns geralmente incluem uma cor de plano de fundo personalizado, cor de primeiro plano, as propriedades de fonte e espaçamento de nó. Propriedades de estilo são aplicadas na seguinte ordem:  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>, ou <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>, dependendo do tipo de nó. Se o <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> coleção é definida, ela é aplicada no momento, substituindo as outras propriedades de estilo do nó.  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>.  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>.  
  
> [!NOTE]
>  As configurações de estilo para o <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> quaisquer configurações de estilo de nó correspondente que estão na substituição de propriedade de <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>, ou <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A> propriedade.  
  
 O <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> propriedade não é renderizada para um nó com seus <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> propriedade definida como `TreeNodeSelectAction.None`.  
  
 Ao contrário o <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A> e o <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A> propriedades, que são <xref:System.Web.UI.WebControls.TreeNodeStyle> objetos, o <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> propriedade é um <xref:System.Web.UI.WebControls.Style> objeto.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> propriedade para controlar a aparência de um nó quando o ponteiro do mouse é posicionado sobre ele. Para esse exemplo funcione, você deve incluir um `<head>` elemento com um `runat="server"` atributo.  
  
 [!code-aspx-csharp[TreeViewHoverNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewHoverNodeStyle/CS/treeviewhovernodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewHoverNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewHoverNodeStyle/VB/treeviewhovernodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LevelStyles" />
      </Docs>
    </Member>
    <Member MemberName="ImageSet">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeViewImageSet ImageSet { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.TreeViewImageSet ImageSet" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ImageSet" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageSet As TreeViewImageSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeViewImageSet ImageSet { System::Web::UI::WebControls::TreeViewImageSet get(); void set(System::Web::UI::WebControls::TreeViewImageSet value); };" />
      <MemberSignature Language="F#" Value="member this.ImageSet : System.Web.UI.WebControls.TreeViewImageSet with get, set" Usage="System.Web.UI.WebControls.TreeView.ImageSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeViewImageSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o grupo de imagens a serem usadas para o controle <see cref="T:System.Web.UI.WebControls.TreeView" />.</summary>
        <value>Um dos valores de <see cref="T:System.Web.UI.WebControls.TreeViewImageSet" />. O padrão é <see langword="TreeViewImageSet.Custom" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> propriedade para especificar o grupo de imagens a ser usado para o <xref:System.Web.UI.WebControls.TreeView> controle. Você pode selecionar um conjunto predefinido de imagens para dar ao controle uma aparência padrão ou definir seu próprio conjunto personalizado.  
  
> [!NOTE]
>  O <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> propriedade não afeta as configurações de estilo para um nó. Defina a propriedade de estilo apropriado, como o <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A> propriedade, se você quiser adicionar cores personalizadas e espaçamento.  
  
 A tabela a seguir lista os valores válidos para o <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> propriedade.  
  
|Conjunto de imagens|Descrição|  
|---------------|-----------------|  
|`TreeViewImageSet.Arrows`|Um conjunto de imagem predefinida que usa as imagens de seta.|  
|`TreeViewImageSet.BulletedList`|Um conjunto predefinido de imagens que usa imagens do marcador em forma de losango.|  
|`TreeViewImageSet.BulletedList2`|Um conjunto predefinido de imagens que usa imagens do marcador em forma de quadrado.|  
|`TreeViewImageSet.BulletedList3`|Um conjunto predefinido de imagens divididas em seções do marcador em forma de losango.|  
|`TreeViewImageSet.BulletedList4`|Um conjunto predefinido de imagens alternativas e divididas em seções do marcador em forma de losango, em tamanhos que variam de acordo com o nível.|  
|`TreeViewImageSet.Contacts`|Um conjunto predefinido de imagens que usa imagens do MSN Messenger.|  
|`TreeViewImageSet.Custom`|Um conjunto de imagens definidas pelo usuário.|  
|`TreeViewImageSet.Events`|Um conjunto de imagem predefinida que usa imagens com estilo de log de eventos.|  
|`TreeViewImageSet.Faq`|Um conjunto de imagem predefinida que usa imagens com estilo de perguntas Frequentes.|  
|`TreeViewImageSet.Inbox`|Um conjunto predefinido de imagens que usa imagens com estilo de email.|  
|`TreeViewImageSet.News`|Um conjunto de imagem predefinida que usa imagens com estilo de grupo de notícias.|  
|`TreeViewImageSet.Simple`|Descreve um conjunto predefinido de imagens que usa de forma simple.|  
|`TreeViewImageSet.Simple2`|Um conjunto de imagem predefinida que usa formas preenchidas simples.|  
|`TreeViewImageSet.Msdn`|Um conjunto predefinido de imagens que usa imagens MSDN.|  
|`TreeViewImageSet.WindowsHelp`|Um conjunto de imagem predefinidos que usa imagens de Ajuda do Microsoft Windows.|  
|`TreeViewImageSet.XPFileExplorer`|Um conjunto predefinido de imagens que usa imagens do Windows Explorer disponíveis no Microsoft Windows XP.|  
  
 Ao definir um conjunto personalizado de imagens, você deve especificar uma imagem para cada uma das propriedades na tabela a seguir. Caso contrário, a imagem padrão para essa propriedade é usada.  
  
|Propriedade|Descrição|  
|--------------|-----------------|  
|<xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>|A URL para uma imagem personalizada para o indicador de nó recolhível.|  
|<xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>|A URL para uma imagem personalizada para o indicador de nó expansível.|  
|<xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A>|A URL para uma pasta que contém imagens personalizadas para as linhas que conectam os nós.|  
|<xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>|A URL para uma imagem personalizada para o indicador de nó não expansível.|  
  
 O valor dessa propriedade é armazenado no estado de exibição.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> propriedade para exibir um conjunto de imagens no Windows Explorer o <xref:System.Web.UI.WebControls.TreeView> controle.  
  
 [!code-aspx-csharp[TreeViewImageSet#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewImageSet/CS/treeviewimagesetcs.aspx#1)]
 [!code-aspx-vb[TreeViewImageSet#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewImageSet/VB/treeviewimagesetvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">O conjunto de imagens especificado não é um dos valores <see cref="T:System.Web.UI.WebControls.TreeViewImageSet" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.TreeViewImageSet" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LineImagesFolder" />
      </Docs>
    </Member>
    <Member MemberName="LeafNodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyle LeafNodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyle LeafNodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LeafNodeStyle As TreeNodeStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeStyle ^ LeafNodeStyle { System::Web::UI::WebControls::TreeNodeStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LeafNodeStyle : System.Web.UI.WebControls.TreeNodeStyle" Usage="System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma referência ao objeto <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> que permite definir a aparência de nós folha.</summary>
        <value>Uma referência ao <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> que representa o estilo dos nós folha no <see cref="T:System.Web.UI.WebControls.TreeView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A> propriedade para controlar a aparência de nós folha no <xref:System.Web.UI.WebControls.TreeView> controle. Essa propriedade é somente leitura; No entanto, você pode definir as propriedades do <xref:System.Web.UI.WebControls.TreeNodeStyle> retornará do objeto. As propriedades podem ser definidas declarativamente na forma `Property-Subproperty`, onde `Subproperty` é uma propriedade da <xref:System.Web.UI.WebControls.TreeNodeStyle> objeto (por exemplo, `LeafNodeStyle-ForeColor`). As propriedades também podem ser definidas programaticamente no formulário `Property.Subproperty` (por exemplo, `LeafNodeStyle.ForeColor`). Configurações comuns geralmente incluem uma cor de plano de fundo personalizado, cor de primeiro plano, as propriedades de fonte e espaçamento de nó. Propriedades de estilo são aplicadas na seguinte ordem de precedência:  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>, ou <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>, dependendo do tipo de nó. Se o <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> coleção é definida, ela é aplicada no momento, substituindo as outras propriedades de estilo do nó.  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>.  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>.  
  
 Se você precisar gerar tabela de menus de navegação de estilo de conteúdo onde os nós em um determinado nível devem ter a mesma aparência, independentemente de terem nós filho, você pode considerar o uso de <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> propriedade em vez de definir o indivíduo Propriedades de estilo.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A> propriedade para controlar a aparência de nós folha no <xref:System.Web.UI.WebControls.TreeView> controle.  
  
 [!code-aspx-csharp[TreeViewLeafNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewLeafNodeStyle/CS/treeviewleafnodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewLeafNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewLeafNodeStyle/VB/treeviewleafnodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="LevelStyles">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyleCollection LevelStyles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyleCollection LevelStyles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.LevelStyles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LevelStyles As TreeNodeStyleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeStyleCollection ^ LevelStyles { System::Web::UI::WebControls::TreeNodeStyleCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LevelStyles : System.Web.UI.WebControls.TreeNodeStyleCollection" Usage="System.Web.UI.WebControls.TreeView.LevelStyles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.TreeNodeStyleCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.TreeNodeStyleCollectionEditor,System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma coleção de objetos <see cref="T:System.Web.UI.WebControls.Style" /> que representam os estilos de nó nos níveis individuais da árvore.</summary>
        <value>Um <see cref="T:System.Web.UI.WebControls.StyleCollection" /> que representa os estilos de nó nos níveis individuais da árvore.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> coleção como uma alternativa para as propriedades de estilo individuais (como o <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A> propriedade) para controlar o estilo de nós nos níveis individuais da árvore. O primeiro estilo na coleção corresponde ao estilo de nós no primeiro nível da árvore. O segundo estilo na coleção corresponde ao estilo de nós no segundo nível de árvore e assim por diante. Essa propriedade é geralmente usada para gerar tabela de menus de navegação de estilo de conteúdo onde os nós em um determinado nível devem ter a mesma aparência, independentemente de terem nós filho.  
  
 Propriedades de estilo são aplicadas na seguinte ordem:  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>, ou <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>, dependendo do tipo de nó. Se o <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> coleção é definida, ela é aplicada no momento, substituindo as outras propriedades de estilo do nó.  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>.  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> propriedade para criar um menu de navegação. O controle é sempre totalmente expandido, com os indicadores de nó de expansão e as imagens ocultadas. Além disso, o <xref:System.Web.UI.WebControls.TreeNodeStyle.ChildNodesPadding%2A> propriedade é usada para controlar o espaçamento entre os níveis de nó.  
  
 [!code-aspx-csharp[TreeViewLevelStyles#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewLevelStyles/CS/treeviewlevelstylescs.aspx#1)]
 [!code-aspx-vb[TreeViewLevelStyles#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewLevelStyles/VB/treeviewlevelstylesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Web.UI.WebControls.StyleCollection" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="LineImagesFolder">
      <MemberSignature Language="C#" Value="public string LineImagesFolder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LineImagesFolder" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.LineImagesFolder" />
      <MemberSignature Language="VB.NET" Value="Public Property LineImagesFolder As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LineImagesFolder { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LineImagesFolder : string with get, set" Usage="System.Web.UI.WebControls.TreeView.LineImagesFolder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o caminho para uma pasta que contém as imagens de linha usadas para conectar nós filho a nós pai.</summary>
        <value>O caminho para uma pasta que contém as imagens de linha usadas para conectar nós. O padrão é uma cadeia de caracteres vazia (""), que indica que a propriedade <see cref="P:System.Web.UI.WebControls.TreeView.LineImagesFolder" /> não está definida.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.TreeView> controle pode exibir linhas que conectam nós filho a nós pai quando o <xref:System.Web.UI.WebControls.TreeView.ShowLines%2A> estiver definida como `true`. Quando as linhas são exibidas, use o <xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A> propriedade para especificar uma pasta acessível pela Web que contém o conjunto de imagens pré-renderizado a ser usado para as linhas. A tabela a seguir descreve as imagens que são usadas pelo <xref:System.Web.UI.WebControls.TreeView> controle.  
  
|Image|Descrição|  
|-----------|-----------------|  
|Dash.gif|Uma imagem de linha exibida ao lado do nó raiz quando há somente um nó raiz na estrutura de árvore e o nó raiz é uma folha.|  
|Dashminus.gif|Um sinal de subtração (-) imagem exibida ao lado do nó raiz quando há apenas um nó raiz na estrutura de árvore para indicar que o nó raiz é expandido.|  
|Dashplus.gif|Uma imagem de sinal de adição (+) exibida ao lado do nó raiz quando há apenas um nó raiz na estrutura de árvore para indicar que o nó raiz é recolhido.|  
|I.gif|Uma imagem de linha exibida para conectar nós adjacentes.|  
|L.gif|Uma imagem de linha exibida próximo ao último nó em uma ramificação quando o nó é uma folha.|  
|Lminus.gif|Uma imagem de linha exibida próximo ao último nó em um branch para indicar que o nó é expandido.|  
|Lplus.gif|Uma imagem de linha exibida próximo ao último nó em uma ramificação para indicar que o nó é recolhido.|  
|Minus|Um sinal de subtração (-) imagem exibida ao lado do primeiro nó de raiz em uma estrutura de árvore que contém vários nós de raiz para indicar que o nó é expandido. Esta imagem não contém uma linha extra e é exibida somente depois que o nó raiz ter sido recolhido uma vez. Quando a página é carregada pela primeira vez, a imagem de Rminus é exibida.|  
|Noexpand.gif|Uma imagem de espaço em branco exibida ao lado de um nó folha. Essa imagem permite que o texto seja alinhado verticalmente.|  
|Plus.gif|Uma imagem do sinal de adição (+) exibida ao lado do primeiro nó de raiz em uma estrutura de árvore que contém vários nós de raiz para indicar que o nó é recolhida. Esta imagem não contém uma linha extra e é exibida somente depois que o nó raiz foi expandido de uma vez. Quando a página é carregada pela primeira vez, a imagem de Rplus é exibida.|  
|R.gif|Uma imagem de linha exibida ao lado do primeiro nó de raiz em uma estrutura de árvore que contém vários nós de raiz para indicar que o nó é um nó folha.|  
|Rminus|Um sinal de subtração (-) imagem exibida ao lado do primeiro nó de raiz em uma estrutura de árvore que contém vários nós de raiz para indicar que o nó é expandido. Esta imagem contém uma linha extra e é exibida somente quando a página é carregada pela primeira vez. Após a raiz do nó ter sido recolhido uma vez, Minus a imagem é exibida.|  
|Rplus|Uma imagem do sinal de adição (+) exibida ao lado do primeiro nó de raiz em uma estrutura de árvore que contém vários nós de raiz para indicar que o nó é recolhida. Esta imagem contém uma linha extra e é exibida somente quando a página é carregada pela primeira vez. Após a raiz do nó foi expandido uma vez, a imagem Plus.gif é exibida.|  
|T.gif|Uma imagem de linha exibida ao lado de um nó no meio da estrutura de árvore (em uma interseção de t) para indicar que o nó é uma folha.|  
|Tminus.gif|Um sinal de subtração (-) imagem exibida ao lado de um nó no meio da estrutura de árvore (em uma interseção de t) para indicar que o nó é expandido.|  
|Tplus.gif|Uma imagem do sinal de adição (+) exibida ao lado de um nó no meio da estrutura de árvore (em uma interseção de t) para indicar que o nó é recolhido.|  
  
> [!NOTE]
>  Se o <xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A> não está definida, o <xref:System.Web.UI.WebControls.TreeView> controle usará imagens internas, padrão (20 x 20 pixels).  
  
 Alguns designers visuais, como o Microsoft Visual Studio fornecem ferramentas para gerar as imagens de linha.  
  
 O tempo de execução não Inverter imagens personalizadas para a direita para esquerda exibe. Para dar suporte a páginas da Web à esquerda para a direita e à direita para a esquerda, você deve criar conjuntos de imagem para ambas as direções.  
  
 O valor dessa propriedade é armazenado no estado de exibição.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A> propriedade para especificar a pasta que contém as imagens de linha para exibir o <xref:System.Web.UI.WebControls.TreeView> controle. Para trabalhar com este exemplo, use a ferramenta de Designer de linha com antecedência para criar um conjunto de imagens de linha. Colocá-los em uma pasta chamada LineImages dentro do diretório para o aplicativo de exemplo.  
  
 [!code-aspx-csharp[TreeViewLineImagesFolderUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewLineImagesFolderUrl/CS/treeviewlineimagesfolderurlcs.aspx#1)]
 [!code-aspx-vb[TreeViewLineImagesFolderUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewLineImagesFolderUrl/VB/treeviewlineimagesfolderurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowLines" />
        <altmember cref="T:System.Web.UI.WebControls.TreeViewImageSet" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="LoadPostData">
      <MemberSignature Language="C#" Value="protected virtual bool LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection);" />
      <MemberSignature Language="F#" Value="abstract member LoadPostData : string * System.Collections.Specialized.NameValueCollection -&gt; bool&#xA;override this.LoadPostData : string * System.Collections.Specialized.NameValueCollection -&gt; bool" Usage="treeView.LoadPostData (postDataKey, postCollection)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">O identificador da chave do controle.</param>
        <param name="postCollection">A coleção de todos os valores de nome de entrada.</param>
        <summary>Processa dados de postback para o controle <see cref="T:System.Web.UI.WebControls.TreeView" />.</summary>
        <returns><see langword="true" /> se o estado do controle <see cref="T:System.Web.UI.WebControls.TreeView" /> mudar como resultado do evento de postback; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A estrutura da página ASP.NET controla todos os controles de servidor que retornam `true` do <xref:System.Web.UI.WebControls.TreeView.LoadPostData%2A> chamada de método e, em seguida, invoca o <xref:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent%2A> método nesses controles.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="treeView.LoadViewState state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">Um objeto que contém os valores de estado de exibição salvos para o controle.</param>
        <summary>Carrega o estado de exibição salvo anteriormente do controle <see cref="T:System.Web.UI.WebControls.TreeView" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxDataBindDepth">
      <MemberSignature Language="C#" Value="public int MaxDataBindDepth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxDataBindDepth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.MaxDataBindDepth" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxDataBindDepth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxDataBindDepth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxDataBindDepth : int with get, set" Usage="System.Web.UI.WebControls.TreeView.MaxDataBindDepth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o número máximo de níveis de árvore a associar ao controle <see cref="T:System.Web.UI.WebControls.TreeView" />.</summary>
        <value>O número máximo de níveis de árvore para associar ao <see cref="T:System.Web.UI.WebControls.TreeView" /> controle. O padrão é -1, que associa a todos os níveis de árvore na fonte de dados ao controle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ao associar o <xref:System.Web.UI.WebControls.TreeView> controle a uma fonte de dados, use o <xref:System.Web.UI.WebControls.TreeView.MaxDataBindDepth%2A> propriedade para limitar o número de níveis de árvore para associar ao controle. Por exemplo, definir essa propriedade como `2` vincula somente o nó raiz e todos os nós que estão imediatamente sob o nó raiz para o <xref:System.Web.UI.WebControls.TreeView> controle. Todos os nós restantes na fonte de dados são ignorados.  
  
> [!IMPORTANT]
>  Um usuário mal-intencionado pode criar uma solicitação de retorno de chamada e obter dados para os nós a <xref:System.Web.UI.WebControls.TreeView> controle que o desenvolvedor de página não está exibindo. Portanto, a segurança dos dados deve ser implementada pela fonte de dados. Não use o <xref:System.Web.UI.WebControls.TreeView.MaxDataBindDepth%2A> propriedade para ocultar os dados.  
  
 O valor dessa propriedade é armazenado no estado de exibição.  
  
   
  
## Examples  
 Esta seção contém dois exemplos de código. O primeiro exemplo de código demonstra como usar o <xref:System.Web.UI.WebControls.TreeView.MaxDataBindDepth%2A> propriedade para associar apenas os primeiro níveis de dois nós (intensidades de 0 e 1) para o <xref:System.Web.UI.WebControls.TreeView> controle. O segundo exemplo de código fornece dados XML de exemplo para o primeiro exemplo de código.  
  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.TreeView.MaxDataBindDepth%2A> propriedade para associar apenas os primeiro níveis de dois nós (intensidades de 0 e 1) para o <xref:System.Web.UI.WebControls.TreeView> controle. Todos os níveis de nó na fonte de dados são ignorados. Para esse exemplo funcione corretamente, você deve copiar os dados XML de exemplo, fornecidos após este exemplo de código em um arquivo denominado Book. XML.  
  
 [!code-aspx-csharp[TreeViewMaxDataBindDepth#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewMaxDataBindDepth/CS/treeviewmaxdatabinddepthcs.aspx#1)]
 [!code-aspx-vb[TreeViewMaxDataBindDepth#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewMaxDataBindDepth/VB/treeviewmaxdatabinddepthvb.aspx#1)]  
  
 O exemplo de código a seguir fornece os dados XML de exemplo para o exemplo de código anterior.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">O valor selecionado é menor que <see langword="-1" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandDepth" />
      </Docs>
    </Member>
    <Member MemberName="NodeIndent">
      <MemberSignature Language="C#" Value="public int NodeIndent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NodeIndent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.NodeIndent" />
      <MemberSignature Language="VB.NET" Value="Public Property NodeIndent As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NodeIndent { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.NodeIndent : int with get, set" Usage="System.Web.UI.WebControls.TreeView.NodeIndent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(20)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a quantidade de recuo (em pixels) para os nós filho do controle <see cref="T:System.Web.UI.WebControls.TreeView" />.</summary>
        <value>A quantidade de espaço (em pixels) entre a borda esquerda do nó filho e a borda esquerda do nó pai. O padrão é 20.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.TreeView.NodeIndent%2A> propriedade para controlar a quantidade de espaçamento entre a borda esquerda de um nó filho e a borda esquerda do nó pai.  
  
> [!NOTE]
>  O <xref:System.Web.UI.WebControls.TreeView.NodeIndent%2A> propriedade afeta todos os nós filho no <xref:System.Web.UI.WebControls.TreeView> controle. Não é possível controlar a quantidade de recuo de cada nó individualmente.  
  
 O valor dessa propriedade é armazenado no estado de exibição.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.TreeView.NodeIndent%2A> propriedade para controlar o recuo de nós filho.  
  
 [!code-aspx-csharp[TreeViewNodeIndent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewNodeIndent/CS/treeviewnodeindentcs.aspx#1)]
 [!code-aspx-vb[TreeViewNodeIndent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewNodeIndent/VB/treeviewnodeindentvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeStyle.ChildNodesPadding" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeStyle.HorizontalPadding" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeStyle.NodeSpacing" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeStyle.VerticalPadding" />
      </Docs>
    </Member>
    <Member MemberName="Nodes">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeCollection Nodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeCollection Nodes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.Nodes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Nodes As TreeNodeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeCollection ^ Nodes { System::Web::UI::WebControls::TreeNodeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Nodes : System.Web.UI.WebControls.TreeNodeCollection" Usage="System.Web.UI.WebControls.TreeView.Nodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.TreeNodeCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.TreeNodeCollectionEditor,System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma coleção de objetos <see cref="T:System.Web.UI.WebControls.TreeNode" /> que representa os nós raiz no controle <see cref="T:System.Web.UI.WebControls.TreeView" />.</summary>
        <value>Um <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> que contém os nós raiz do <see cref="T:System.Web.UI.WebControls.TreeView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> propriedade para obter um <xref:System.Web.UI.WebControls.TreeNodeCollection> objeto que contém todos os nós na árvore de raiz. Esta coleção normalmente é usada para iterar rapidamente todos os nós de raiz, ou para acessar um nó de raiz específico na árvore.  
  
> [!NOTE]
>  Uma estrutura de árvore típico tem apenas um nó raiz; No entanto, você pode adicionar vários nós de raiz para o <xref:System.Web.UI.WebControls.TreeView> controle.  
  
 O <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> propriedade também pode ser usada para gerenciar os nós raiz na árvore de forma programática. Você pode adicionar, inserir, remover e recuperar <xref:System.Web.UI.WebControls.TreeNode> objetos da coleção. Todas as atualizações para a coleção são refletidas automaticamente no <xref:System.Web.UI.WebControls.TreeView> controle após o próximo ida e volta ao servidor.  
  
 Para acessar os nós filho de um nó raiz, use o <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> propriedade do nó. Use o <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> propriedade de cada nó de nível pai subsequente para navegar para baixo os níveis de nó.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> propriedade atravessar a árvore.  
  
 [!code-aspx-csharp[TreeNodeCollectionCount#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionCount/CS/treenodecollectioncountcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionCount#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionCount/VB/treenodecollectioncountvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeCollection" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName="NodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyle NodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyle NodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NodeStyle As TreeNodeStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeStyle ^ NodeStyle { System::Web::UI::WebControls::TreeNodeStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NodeStyle : System.Web.UI.WebControls.TreeNodeStyle" Usage="System.Web.UI.WebControls.TreeView.NodeStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma referência ao objeto <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> que permite definir a aparência padrão dos nós no controle <see cref="T:System.Web.UI.WebControls.TreeView" />.</summary>
        <value>Uma referência ao <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> que representa o estilo padrão de um nó.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A> propriedade para controlar a aparência padrão de um nó no <xref:System.Web.UI.WebControls.TreeView> controle. Essa propriedade é somente leitura; No entanto, você pode definir as propriedades do <xref:System.Web.UI.WebControls.TreeNodeStyle> retornará do objeto. As propriedades podem ser definidas declarativamente na forma `Property-Subproperty`, onde `Subproperty` é uma propriedade da <xref:System.Web.UI.WebControls.TreeNodeStyle> objeto (por exemplo, `NodeStyle-ForeColor`). As propriedades também podem ser definidas programaticamente no formulário `Property.Subproperty` (por exemplo, `NodeStyle.ForeColor`). Configurações comuns geralmente incluem uma cor de plano de fundo personalizado, cor de primeiro plano, as propriedades de fonte e espaçamento de nó. Propriedades de estilo são aplicadas na seguinte ordem de precedência:  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>, ou <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>, dependendo do tipo de nó. Se o <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> coleção é definida, ela é aplicada no momento, substituindo as outras propriedades de estilo do nó.  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>.  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>.  
  
> [!NOTE]
>  As configurações de estilo de nó correspondente na <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>, ou <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A> propriedades substituem as configurações de estilo do <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A> propriedade.  
  
 Se você precisar gerar tabela de menus de navegação de estilo de conteúdo onde os nós em um determinado nível devem ter a mesma aparência, independentemente de terem nós filho, você pode considerar o uso de <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> propriedade em vez de definir o indivíduo Propriedades de estilo.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A> propriedade para controlar a aparência de nós no <xref:System.Web.UI.WebControls.TreeView> controle.  
  
 [!code-aspx-csharp[TreeViewNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewNodeStyle/CS/treeviewnodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewNodeStyle/VB/treeviewnodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="NodeWrap">
      <MemberSignature Language="C#" Value="public bool NodeWrap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NodeWrap" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.NodeWrap" />
      <MemberSignature Language="VB.NET" Value="Public Property NodeWrap As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NodeWrap { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NodeWrap : bool with get, set" Usage="System.Web.UI.WebControls.TreeView.NodeWrap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se o texto é quebrado em um nó quando o nó fica sem espaço.</summary>
        <value><see langword="true" /> para encapsular o texto; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.TreeView.NodeWrap%2A> propriedade para especificar se o texto que é exibido em cada nó será quebrado quando ele ficar sem espaço.  
  
 O valor dessa propriedade é armazenado no estado de exibição.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.TreeView.NodeWrap%2A> propriedade quebrar o texto do <xref:System.Web.UI.WebControls.TreeView> controle.  
  
 [!code-aspx-csharp[TreeViewNodeWrap#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewNodeWrap/CS/treeviewnodewrapcs.aspx#1)]
 [!code-aspx-vb[TreeViewNodeWrap#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewNodeWrap/VB/treeviewnodewrapvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Font" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeIndent" />
      </Docs>
    </Member>
    <Member MemberName="NoExpandImageUrl">
      <MemberSignature Language="C#" Value="public string NoExpandImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NoExpandImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property NoExpandImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NoExpandImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NoExpandImageUrl : string with get, set" Usage="System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a URL para uma imagem personalizada do indicador de nó não expansível.</summary>
        <value>A URL para uma imagem personalizada a ser exibida para nós não expansíveis. O padrão é uma cadeia de caracteres vazia (""), que exibe a imagem em branco padrão.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A> propriedade para especificar uma imagem personalizada para o indicador de nó não expansível. A imagem do indicador de nó não expansível (ou espaçador) é exibido ao lado de nós folha (em vez dos indicadores de nó expansível e recolhível) para alinhar os nós folha conosco pai ou raiz.  
  
 Quando o <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> estiver definida como `true`, o <xref:System.Web.UI.WebControls.TreeView> controle exibe um sinal de adição (+) ou sinal de subtração (-) ou uma imagem de espaço reservado ao lado de um nó para indicar se o nó é expansível, não expansível ou recolhível, respectivamente. Você pode especificar imagens personalizadas pelo primeiro parâmetro de <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> propriedade para `TreeViewImageSet.Custom`e, em seguida, definindo o <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>, <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>, e <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> propriedades para as URLs das imagens personalizadas. Se nenhuma imagem for especificada, as imagens padrão são usadas. Para ocultar os indicadores de nó de expansão, defina as <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> propriedade para `false`.  
  
> [!NOTE]
>  Para garantir que nós alinham corretamente na <xref:System.Web.UI.WebControls.TreeView> controlar ao usar imagens personalizadas, certifique-se de que todas as imagens que são especificadas pelo <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>, <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>, e <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> propriedades têm as mesmas dimensões.  
  
 O valor dessa propriedade é armazenado no estado de exibição.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A> propriedade para especificar uma imagem personalizada para o indicador de nó não expansível. Para o exemplo de código a serem exibidas e a imagem seja exibida no controle, você deve fornecer sua própria imagem e o <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> propriedade deve ser definida como `TreeNodeImageSet.Custom`.  
  
 [!code-aspx-csharp[TreeViewCustomImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCustomImage/CS/treeviewcustomimagecs.aspx#1)]
 [!code-aspx-vb[TreeViewCustomImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCustomImage/VB/treeviewcustomimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowExpandCollapse" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ImageSet" />
        <altmember cref="T:System.Web.UI.WebControls.TreeViewImageSet" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="treeView.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.EventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Web.UI.Control.Init" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.TreeView.OnInit%2A> método é chamado pelo <xref:System.Web.UI.WebControls.TreeView> controle para gerar o <xref:System.Web.UI.Control.Init> eventos. Geralmente é usado por desenvolvedores de controle ao estender o <xref:System.Web.UI.WebControls.TreeView> classe.  
  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
 O <xref:System.Web.UI.WebControls.TreeView.OnInit%2A> método também permite que classes derivadas manipular o evento sem anexar um delegado. Essa é a técnica preferencial para manipular o evento em uma classe derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Ao substituir a <see cref="M:System.Web.UI.WebControls.TreeView.OnInit(System.EventArgs)" /> método em uma classe derivada, certifique-se de chamar o <see cref="M:System.Web.UI.WebControls.TreeView.OnInit(System.EventArgs)" /> método para a classe base, de modo que delegados registrados recebam o evento.</para></block>
        <altmember cref="E:System.Web.UI.Control.Init" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="treeView.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.EventArgs" /> que contém dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Web.UI.Control.PreRender" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.TreeView.OnPreRender%2A> método é substituído para se registrar para postbacks. Se o script de cliente estiver habilitado, ele também processa o script necessário e campos ocultos.  
  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações sobre como manipular eventos, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
 O <xref:System.Web.UI.WebControls.TreeView.OnPreRender%2A> método também permite que classes derivadas manipular o evento sem anexar um delegado. Essa é a técnica preferencial para manipular o evento em uma classe derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Ao substituir a <see cref="M:System.Web.UI.WebControls.TreeView.OnPreRender(System.EventArgs)" /> método em uma classe derivada, certifique-se de chamar o <see cref="M:System.Web.UI.WebControls.TreeView.OnPreRender(System.EventArgs)" /> método para a classe base, de modo que delegados registrados recebam o evento.</para></block>
        <altmember cref="E:System.Web.UI.Control.PreRender" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectedNodeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedNodeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedNodeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectedNodeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectedNodeChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectedNodeChanged : EventArgs -&gt; unit&#xA;override this.OnSelectedNodeChanged : EventArgs -&gt; unit" Usage="treeView.OnSelectedNodeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.EventArgs" /> que contém dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Web.UI.WebControls.TreeView.SelectedNodeChanged" /> do controle <see cref="T:System.Web.UI.WebControls.TreeView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> evento é gerado quando um nó é selecionado no <xref:System.Web.UI.WebControls.TreeView> controle. Isso permite que você forneça um método de manipulação de eventos que executa uma rotina personalizada, como atualizar o conteúdo exibido, sempre que esse evento ocorre.  
  
 Você pode definir opcionalmente o <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> propriedade de um nó para especificar qual o evento é gerado quando este nó é selecionado.  
  
> [!NOTE]
>  O <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> não é renderizado para um nó com seus <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> propriedade definida como `TreeNodeSelectAction.None`.  
  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações sobre como manipular eventos, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
 O <xref:System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged%2A> método também permite que classes derivadas manipular o evento sem anexar um delegado. Essa é a técnica preferencial para manipular o evento em uma classe derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Ao substituir a <see cref="M:System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged(System.EventArgs)" /> método em uma classe derivada, certifique-se de chamar o <see cref="M:System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged(System.EventArgs)" /> método para a classe base, de modo que delegados registrados recebam o evento.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.TreeView.SelectedNodeChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnTreeNodeCheckChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnTreeNodeCheckChanged (System.Web.UI.WebControls.TreeNodeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTreeNodeCheckChanged(class System.Web.UI.WebControls.TreeNodeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTreeNodeCheckChanged (e As TreeNodeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTreeNodeCheckChanged(System::Web::UI::WebControls::TreeNodeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTreeNodeCheckChanged : System.Web.UI.WebControls.TreeNodeEventArgs -&gt; unit&#xA;override this.OnTreeNodeCheckChanged : System.Web.UI.WebControls.TreeNodeEventArgs -&gt; unit" Usage="treeView.OnTreeNodeCheckChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.TreeNodeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Web.UI.WebControls.TreeNodeEventArgs" /> que contém dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged" /> do controle <see cref="T:System.Web.UI.WebControls.TreeView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged> evento é gerado quando uma caixa de seleção no <xref:System.Web.UI.WebControls.TreeView> controle altera o estado entre as postagens no servidor. Isso permite que você forneça um método de manipulação de eventos que executa uma rotina personalizada, como atualizar um banco de dados ou o conteúdo exibido, sempre que esse evento ocorre.  
  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações sobre como manipular eventos, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
 O <xref:System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged%2A> método também permite que classes derivadas manipular o evento sem anexar um delegado. Essa é a técnica preferencial para manipular o evento em uma classe derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Ao substituir a <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged(System.Web.UI.WebControls.TreeNodeEventArgs)" /> em uma classe derivada, certifique-se de chamar o <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged(System.Web.UI.WebControls.TreeNodeEventArgs)" /> método para a classe base, de modo que delegados registrados recebam o evento.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnTreeNodeCollapsed">
      <MemberSignature Language="C#" Value="protected virtual void OnTreeNodeCollapsed (System.Web.UI.WebControls.TreeNodeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTreeNodeCollapsed(class System.Web.UI.WebControls.TreeNodeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTreeNodeCollapsed (e As TreeNodeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTreeNodeCollapsed(System::Web::UI::WebControls::TreeNodeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTreeNodeCollapsed : System.Web.UI.WebControls.TreeNodeEventArgs -&gt; unit&#xA;override this.OnTreeNodeCollapsed : System.Web.UI.WebControls.TreeNodeEventArgs -&gt; unit" Usage="treeView.OnTreeNodeCollapsed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.TreeNodeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Web.UI.WebControls.TreeNodeEventArgs" /> que contém dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed" /> do controle <see cref="T:System.Web.UI.WebControls.TreeView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed> evento é gerado quando um nó é recolhido no <xref:System.Web.UI.WebControls.TreeView> controle. Isso permite que você fornecer um método de manipulação de eventos que executa uma rotina personalizada sempre que esse evento ocorre.  
  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações sobre como manipular eventos, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
 O <xref:System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed%2A> método também permite que classes derivadas manipular o evento sem anexar um delegado. Essa é a técnica preferencial para manipular o evento em uma classe derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Ao substituir a <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed(System.Web.UI.WebControls.TreeNodeEventArgs)" /> método em uma classe derivada, certifique-se de chamar o <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed(System.Web.UI.WebControls.TreeNodeEventArgs)" /> método para a classe base, de modo que delegados registrados recebam o evento.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed" />
      </Docs>
    </Member>
    <Member MemberName="OnTreeNodeDataBound">
      <MemberSignature Language="C#" Value="protected virtual void OnTreeNodeDataBound (System.Web.UI.WebControls.TreeNodeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTreeNodeDataBound(class System.Web.UI.WebControls.TreeNodeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTreeNodeDataBound (e As TreeNodeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTreeNodeDataBound(System::Web::UI::WebControls::TreeNodeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTreeNodeDataBound : System.Web.UI.WebControls.TreeNodeEventArgs -&gt; unit&#xA;override this.OnTreeNodeDataBound : System.Web.UI.WebControls.TreeNodeEventArgs -&gt; unit" Usage="treeView.OnTreeNodeDataBound e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.TreeNodeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Web.UI.WebControls.TreeNodeEventArgs" /> que contém dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Web.UI.WebControls.TreeView.TreeNodeDataBound" /> do controle <see cref="T:System.Web.UI.WebControls.TreeView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound> é gerado quando um item de dados é associado a um nó no <xref:System.Web.UI.WebControls.TreeView> controle. Isso permite que você fornecer um método de manipulação de eventos que executa uma rotina personalizada sempre que esse evento ocorre.  
  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações sobre como manipular eventos, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
 O <xref:System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound%2A> método também permite que classes derivadas manipular o evento sem anexar um delegado. Essa é a técnica preferencial para manipular o evento em uma classe derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Ao substituir a <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound(System.Web.UI.WebControls.TreeNodeEventArgs)" /> método em uma classe derivada, certifique-se de chamar o <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound(System.Web.UI.WebControls.TreeNodeEventArgs)" /> método para a classe base, de modo que delegados registrados recebam o evento.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeDataBound" />
      </Docs>
    </Member>
    <Member MemberName="OnTreeNodeExpanded">
      <MemberSignature Language="C#" Value="protected virtual void OnTreeNodeExpanded (System.Web.UI.WebControls.TreeNodeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTreeNodeExpanded(class System.Web.UI.WebControls.TreeNodeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTreeNodeExpanded (e As TreeNodeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTreeNodeExpanded(System::Web::UI::WebControls::TreeNodeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTreeNodeExpanded : System.Web.UI.WebControls.TreeNodeEventArgs -&gt; unit&#xA;override this.OnTreeNodeExpanded : System.Web.UI.WebControls.TreeNodeEventArgs -&gt; unit" Usage="treeView.OnTreeNodeExpanded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.TreeNodeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Web.UI.WebControls.TreeNodeEventArgs" /> que contém dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Web.UI.WebControls.TreeView.TreeNodeExpanded" /> do controle <see cref="T:System.Web.UI.WebControls.TreeView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> evento é gerado quando um nó é expandido no <xref:System.Web.UI.WebControls.TreeView> controle. Isso permite que você fornecer um método de manipulação de eventos que executa uma rotina personalizada sempre que esse evento ocorre.  
  
> [!NOTE]
>  Se o <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> propriedade para um nó é definida como <xref:System.Web.UI.WebControls.TreeNodeSelectAction.Expand> ou <xref:System.Web.UI.WebControls.TreeNodeSelectAction.SelectExpand>, o <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> evento também é acionado quando esse nó é clicado no <xref:System.Web.UI.WebControls.TreeView> controle.  
  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações sobre como manipular eventos, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
 O <xref:System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded%2A> método também permite que classes derivadas manipular o evento sem anexar um delegado. Essa é a técnica preferencial para manipular o evento em uma classe derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Ao substituir a <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded(System.Web.UI.WebControls.TreeNodeEventArgs)" /> método em uma classe derivada, certifique-se de chamar o <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded(System.Web.UI.WebControls.TreeNodeEventArgs)" /> método para a classe base, de modo que delegados registrados recebam o evento.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeExpanded" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.SelectAction" />
      </Docs>
    </Member>
    <Member MemberName="OnTreeNodePopulate">
      <MemberSignature Language="C#" Value="protected virtual void OnTreeNodePopulate (System.Web.UI.WebControls.TreeNodeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTreeNodePopulate(class System.Web.UI.WebControls.TreeNodeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnTreeNodePopulate(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTreeNodePopulate (e As TreeNodeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTreeNodePopulate(System::Web::UI::WebControls::TreeNodeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTreeNodePopulate : System.Web.UI.WebControls.TreeNodeEventArgs -&gt; unit&#xA;override this.OnTreeNodePopulate : System.Web.UI.WebControls.TreeNodeEventArgs -&gt; unit" Usage="treeView.OnTreeNodePopulate e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.TreeNodeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Web.UI.WebControls.TreeNodeEventArgs" /> que contém dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" /> do controle <see cref="T:System.Web.UI.WebControls.TreeView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Às vezes, não é prático estaticamente predefinir a estrutura de árvore devido ao tamanho dos dados ou conteúdo personalizado que depende de entrada do usuário. Por isso, o <xref:System.Web.UI.WebControls.TreeView> controle dá suporte a preenchimento dinâmico de nós. Quando o <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> propriedade para um nó é definida como `true`, esse nó é preenchido no tempo de execução quando o nó é expandido.  
  
 Para popular um nó dinamicamente, primeiro defina a <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> propriedade para o nó `true`. Em seguida, defina um método de manipulação de eventos para o <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate> evento que preenche programaticamente o nó. Um típico método de manipulação de eventos recupera dados do nó de uma fonte de dados, coloca os dados em uma estrutura de nó e, em seguida, adiciona a estrutura de nó para o <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> coleção do nó que está sendo populado. Uma estrutura de nó é criada adicionando <xref:System.Web.UI.WebControls.TreeNode> objetos para o <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> coleção de um nó pai.  
  
> [!NOTE]
>  Quando o <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> propriedade para um nó é definida como `true`, o nó deve ser populado dinamicamente. Declarativamente, você não pode aninhar outro nó abaixo dele; Caso contrário, ocorrerá um erro na página.  
  
 Navegadores com suporte (navegadores do Microsoft Internet Explorer compatível com o 4.0 e posterior) também pode tirar proveito da população de nó do lado do cliente. Quando habilitado, isso permite que o <xref:System.Web.UI.WebControls.TreeView> controle para preencher um nó no cliente dinamicamente quando o nó é expandido, o que evita a necessidade de volta para o servidor. Para obter mais informações sobre a população de nó do lado do cliente, consulte <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>.  
  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações sobre como manipular eventos, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
 O <xref:System.Web.UI.WebControls.TreeView.OnTreeNodePopulate%2A> método também permite que classes derivadas manipular o evento sem anexar um delegado. Essa é a técnica preferencial para manipular o evento em uma classe derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Ao substituir a <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodePopulate(System.Web.UI.WebControls.TreeNodeEventArgs)" /> método em uma classe derivada, certifique-se de chamar o <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodePopulate(System.Web.UI.WebControls.TreeNodeEventArgs)" /> método para a classe base, de modo que delegados registrados recebam o evento.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.PopulateOnDemand" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.EnableClientScript" />
      </Docs>
    </Member>
    <Member MemberName="ParentNodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyle ParentNodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyle ParentNodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParentNodeStyle As TreeNodeStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeStyle ^ ParentNodeStyle { System::Web::UI::WebControls::TreeNodeStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParentNodeStyle : System.Web.UI.WebControls.TreeNodeStyle" Usage="System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma referência ao objeto <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> que permite definir a aparência de nós pai no controle <see cref="T:System.Web.UI.WebControls.TreeView" />.</summary>
        <value>Uma referência ao <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> que representa o estilo dos nós pai no <see cref="T:System.Web.UI.WebControls.TreeView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A> propriedade para controlar a aparência de nós pai no <xref:System.Web.UI.WebControls.TreeView> controle. Essa propriedade é somente leitura; No entanto, você pode definir as propriedades do <xref:System.Web.UI.WebControls.TreeNodeStyle> retornará do objeto. As propriedades podem ser definidas declarativamente na forma `Property-Subproperty`, onde `Subproperty` é uma propriedade da <xref:System.Web.UI.WebControls.TreeNodeStyle> objeto (por exemplo, `ParentNodeStyle-ForeColor`). As propriedades também podem ser definidas programaticamente no formulário `Property.Subproperty` (por exemplo, `ParentNodeStyle.ForeColor`). Configurações comuns geralmente incluem uma cor de plano de fundo personalizado, cor de primeiro plano, as propriedades de fonte e espaçamento de nó. Propriedades de estilo são aplicadas na seguinte ordem de precedência:  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>, ou <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>, dependendo do tipo de nó. Se o <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> coleção é definida, ela é aplicada no momento, substituindo as outras propriedades de estilo do nó.  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>.  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>.  
  
 Se você precisar gerar tabela de menus de navegação de estilo de conteúdo onde os nós em um determinado nível devem ter a mesma aparência, independentemente de terem nós filho, você pode considerar o uso de <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> propriedade em vez de definir o indivíduo Propriedades de estilo.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A> propriedade para controlar a aparência de nós pai no <xref:System.Web.UI.WebControls.TreeView> controle.  
  
 [!code-aspx-csharp[TreeViewParentNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewParentNodeStyle/CS/treeviewparentnodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewParentNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewParentNodeStyle/VB/treeviewparentnodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="PathSeparator">
      <MemberSignature Language="C#" Value="public char PathSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char PathSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.PathSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property PathSeparator As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char PathSeparator { char get(); void set(char value); };" />
      <MemberSignature Language="F#" Value="member this.PathSeparator : char with get, set" Usage="System.Web.UI.WebControls.TreeView.PathSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue('/')</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o caractere usado para delimitar os valores de nó especificados pela propriedade <see cref="P:System.Web.UI.WebControls.TreeNode.ValuePath" />.</summary>
        <value>O caractere usado para delimitar os valores de nó especificados na propriedade <see cref="P:System.Web.UI.WebControls.TreeNode.ValuePath" />. O padrão é uma barra “/”.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> propriedade contém uma lista separada por delimitador de valores de nó que formam um caminho do nó raiz para o nó atual. Use o <xref:System.Web.UI.WebControls.TreeView.PathSeparator%2A> propriedade para especificar o delimitador de caractere que é usada para separar os valores de nó. Esse valor normalmente é usado ao analisar a lista para os valores individuais.  
  
 Dependendo do que é exibido no texto de <xref:System.Web.UI.WebControls.TreeView> controle, o caractere delimitador talvez precise ser alterado para evitar quaisquer conflitos. Por exemplo, se você definir o caractere delimitador como uma vírgula, o texto exibido não deve conter vírgula; Caso contrário, o <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> propriedade não pode ser analisada com precisão.  
  
 O valor dessa propriedade é armazenado no estado de exibição.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.TreeView.PathSeparator%2A> propriedade para especificar o caractere delimitador para o <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> propriedade de um nó. Esse valor é usado para analisar o <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> propriedade para os valores individuais.  
  
 [!code-aspx-csharp[TreeViewPathSeparator2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewPathSeparator2/CS/treeviewpathseparatorcs.aspx#1)]
 [!code-aspx-vb[TreeViewPathSeparator2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewPathSeparator2/VB/treeviewpathseparatorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ValuePath" />
      </Docs>
    </Member>
    <Member MemberName="PerformDataBinding">
      <MemberSignature Language="C#" Value="protected internal override void PerformDataBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void PerformDataBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.PerformDataBinding" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub PerformDataBinding ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void PerformDataBinding();" />
      <MemberSignature Language="F#" Value="override this.PerformDataBinding : unit -&gt; unit" Usage="treeView.PerformDataBinding " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cria todos os nós com base na fonte de dados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.TreeView.PerformDataBinding%2A> é um método auxiliar que é chamado pelo <xref:System.Web.UI.WebControls.TreeView> controle para associar a fonte de dados especificado para o controle.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Porque o <see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" /> o método está selada, você deve substituir o <see cref="M:System.Web.UI.WebControls.TreeView.PerformDataBinding" /> método, se você precisar executar tarefas adicionais ao associar dados.</para></block>
      </Docs>
    </Member>
    <Member MemberName="PopulateNodesFromClient">
      <MemberSignature Language="C#" Value="public bool PopulateNodesFromClient { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PopulateNodesFromClient" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient" />
      <MemberSignature Language="VB.NET" Value="Public Property PopulateNodesFromClient As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PopulateNodesFromClient { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PopulateNodesFromClient : bool with get, set" Usage="System.Web.UI.WebControls.TreeView.PopulateNodesFromClient" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se os dados do nó são populados sob demanda do cliente.</summary>
        <value><see langword="true" /> para popular os dados do nó de árvore sob demanda do cliente; caso contrário, <see langword="false" />. O padrão é <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Às vezes, não é prático estaticamente predefinir a estrutura de árvore devido ao tamanho dos dados ou conteúdo personalizado que depende de entrada do usuário. Por isso, o <xref:System.Web.UI.WebControls.TreeView> controle dá suporte a preenchimento dinâmico de nós. Quando o <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> propriedade para um nó é definida como `true`, esse nó é preenchido no tempo de execução quando o nó é expandido.  
  
 Além de preencher nós sob demanda, é possível preencher os nós diretamente em um navegador cliente com suporte. Quando o <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A> estiver definida como `true`, um serviço é chamado do cliente para preencher os nós de árvore, que elimina a necessidade de volta para o servidor. Caso contrário, o <xref:System.Web.UI.WebControls.TreeView> controle envia de volta para o servidor para preencher os nós.  
  
> [!NOTE]
>  O <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A> propriedade também deve ser definida como `true` para que o <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A> propriedade ser definida como `true`.  
  
 Para popular um nó no cliente, primeiro defina a <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A> propriedade para `true` e, em seguida, defina as <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> propriedade para o nó `true`. Em seguida, defina um método de manipulação de eventos para o <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate> evento que preenche programaticamente o nó. Um típico método de manipulação de eventos recupera dados do nó de uma fonte de dados, coloca os dados em uma estrutura de nó e, em seguida, adiciona a estrutura de nó para o <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> coleção do nó que está sendo populado. Criar uma estrutura de nó, adicionando <xref:System.Web.UI.WebControls.TreeNode> objetos para o <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> coleção de um nó pai.  
  
> [!NOTE]
>  Quando o <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> propriedade para um nó é definida como `true`, o nó deve ser populado dinamicamente. Declarativamente, você não pode aninhar outro nó abaixo dele; Caso contrário, ocorrerá um erro na página.  
  
> [!NOTE]
>  O recurso de população de nó do lado do cliente é suportado em navegadores que oferecem suporte a scripts de retorno de chamada. Para verificar se um navegador dá suporte a acesso de scripts de retorno de chamada, use o <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> propriedade do <xref:System.Web.HttpBrowserCapabilities> classe. Você pode acessar a instância da <xref:System.Web.HttpBrowserCapabilities> classe para a solicitação atual por meio de <xref:System.Web.HttpRequest.Browser%2A> propriedade do <xref:System.Web.HttpRequest> classe.  
  
 O valor dessa propriedade é armazenado no estado de exibição.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A> propriedade para habilitar a população do lado do cliente de nós no <xref:System.Web.UI.WebControls.TreeView> controle. Observe que quando o preenchimento de nós do lado do cliente estiver habilitado, nós estão preenchidos dinamicamente no cliente, sem a necessidade de volta para o servidor.  
  
 [!code-aspx-csharp[TreeViewPopulateNodesFromClient#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/CS/treeviewpopulatenodesfromclientcs.aspx#1)]
 [!code-aspx-vb[TreeViewPopulateNodesFromClient#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/VB/treeviewpopulatenodesfromclientvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.EnableClientScript" />
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.PopulateOnDemand" />
      </Docs>
    </Member>
    <Member MemberName="RaiseCallbackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaiseCallbackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaiseCallbackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RaiseCallbackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaiseCallbackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaiseCallbackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaiseCallbackEvent : string -&gt; unit&#xA;override this.RaiseCallbackEvent : string -&gt; unit" Usage="treeView.RaiseCallbackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Uma cadeia de caracteres que representa um argumento do evento opcional a ser passado para o manipulador de eventos.</param>
        <summary>Aciona o evento de retorno de chamada usando os argumentos especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.TreeView.RaiseCallbackEvent%2A> é um método auxiliar para o método <xref:System.Web.UI.WebControls.TreeView.System%23Web%23UI%23ICallbackEventHandler%23RaiseCallbackEvent%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaisePostBackEvent : string -&gt; unit&#xA;override this.RaisePostBackEvent : string -&gt; unit" Usage="treeView.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Uma cadeia de caracteres que representa um argumento do evento opcional a ser passado para o manipulador de eventos.</param>
        <summary>Permite que o controle <see cref="T:System.Web.UI.WebControls.TreeView" /> processe um evento gerado quando um formulário é enviado ao servidor. O <see cref="M:System.Web.UI.WebControls.TreeView.RaisePostBackEvent(System.String)" /> é um método auxiliar para o método <see cref="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A página passa o valor da `eventArgument` parâmetro para o <xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A> método do controle que implementa o <xref:System.Web.UI.IPostBackEventHandler?displayProperty=nameWithType> interface. Isso <xref:System.Web.UI.WebControls.TreeView> controle também processa o elemento HTML que faz com que o evento de postback ocorra. Se o controle renderiza o script do lado do cliente para postback ao servidor, o argumento do script é passado a `eventArgument` parâmetro. Se o evento de postback é causado por um simples de enviar para o servidor, o `eventArgument` parâmetro é `null`.  
  
 O <xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A> método fornece a funcionalidade para muitos eventos que são implementados por controles de servidor HTML e Web.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostDataChangedEvent ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostDataChangedEvent();" />
      <MemberSignature Language="F#" Value="abstract member RaisePostDataChangedEvent : unit -&gt; unit&#xA;override this.RaisePostDataChangedEvent : unit -&gt; unit" Usage="treeView.RaisePostDataChangedEvent " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sinaliza o controle <see cref="T:System.Web.UI.WebControls.TreeView" /> para notificar o aplicativo ASP.NET de que o estado do controle mudou.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Alterar os eventos para o <xref:System.Web.UI.WebControls.TreeView> controle são gerados a partir de <xref:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent%2A> método.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="public override void RenderBeginTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderBeginTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RenderBeginTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RenderBeginTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderBeginTag : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="treeView.RenderBeginTag writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Um <see cref="T:System.Web.UI.HtmlTextWriter" /> que representa o fluxo de saída para renderizar o conteúdo HTML no cliente.</param>
        <summary>Renderiza a marca de abertura HTML do controle para o gravador especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.TreeView.RenderBeginTag%2A> método é usado principalmente por desenvolvedores de controle.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected internal override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderContents : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="treeView.RenderContents writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">O <see cref="T:System.Web.UI.HtmlTextWriter" /> que representa o fluxo de saída usado para gravar o conteúdo em uma página da Web.</param>
        <summary>Renderiza os nós no controle <see cref="T:System.Web.UI.WebControls.TreeView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.TreeView.RenderContents%2A> método para renderizar os nós a <xref:System.Web.UI.WebControls.TreeView> controle ao cliente.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderEndTag">
      <MemberSignature Language="C#" Value="public override void RenderEndTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderEndTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RenderEndTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RenderEndTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderEndTag : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="treeView.RenderEndTag writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Um <see cref="T:System.Web.UI.HtmlTextWriter" /> que representa o fluxo de saída para renderizar o conteúdo HTML no cliente.</param>
        <summary>Renderiza a marca de fechamento HTML do controle para o gravador especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.TreeView.RenderEndTag%2A> método é usado principalmente por desenvolvedores de controle.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RootNodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyle RootNodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyle RootNodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootNodeStyle As TreeNodeStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeStyle ^ RootNodeStyle { System::Web::UI::WebControls::TreeNodeStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RootNodeStyle : System.Web.UI.WebControls.TreeNodeStyle" Usage="System.Web.UI.WebControls.TreeView.RootNodeStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma referência ao objeto <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> que permite definir a aparência de um nó raiz no controle <see cref="T:System.Web.UI.WebControls.TreeView" />.</summary>
        <value>Uma referência ao <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> que representa o estilo do nó raiz no <see cref="T:System.Web.UI.WebControls.TreeView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A> propriedade para controlar a aparência do nó raiz no <xref:System.Web.UI.WebControls.TreeView> controle. Essa propriedade é somente leitura; No entanto, você pode definir as propriedades do <xref:System.Web.UI.WebControls.TreeNodeStyle> retornará do objeto. As propriedades podem ser definidas declarativamente na forma `Property-Subproperty`, onde `Subproperty` é uma propriedade da <xref:System.Web.UI.WebControls.TreeNodeStyle> objeto (por exemplo, `RootNodeStyle-ForeColor`). As propriedades também podem ser definidas programaticamente no formulário `Property.Subproperty` (por exemplo, `RootNodeStyle.ForeColor`). Configurações comuns geralmente incluem uma cor de plano de fundo personalizado, cor de primeiro plano, as propriedades de fonte e espaçamento de nó. Propriedades de estilo são aplicadas na seguinte ordem de precedência:  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>, ou <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>, dependendo do tipo de nó. Se o <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> coleção é definida, ela é aplicada no momento, substituindo as outras propriedades de estilo do nó.  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>.  
  
 Se você precisar gerar tabela de menus de navegação de estilo de conteúdo onde os nós em um determinado nível devem ter a mesma aparência, independentemente de terem nós filho, você pode considerar o uso de <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> propriedade em vez de definir o indivíduo Propriedades de estilo.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A> propriedade para controlar a aparência do nó raiz no <xref:System.Web.UI.WebControls.TreeView> controle.  
  
 [!code-aspx-csharp[TreeViewRootNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewRootNodeStyle/CS/treeviewrootnodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewRootNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewRootNodeStyle/VB/treeviewrootnodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="treeView.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Salva o estado do controle <see cref="T:System.Web.UI.WebControls.TreeView" />.</summary>
        <returns>O estado de exibição atual do controle de servidor, caso contrário, <see langword="null" />, se não houver estado de exibição associado ao controle.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedNode">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNode SelectedNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNode SelectedNode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.SelectedNode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedNode As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNode ^ SelectedNode { System::Web::UI::WebControls::TreeNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedNode : System.Web.UI.WebControls.TreeNode" Usage="System.Web.UI.WebControls.TreeView.SelectedNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um objeto <see cref="T:System.Web.UI.WebControls.TreeNode" /> que representa o nó selecionado no controle <see cref="T:System.Web.UI.WebControls.TreeView" />.</summary>
        <value>Um <see cref="T:System.Web.UI.WebControls.TreeNode" /> que representa o nó selecionado no <see cref="T:System.Web.UI.WebControls.TreeView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O texto de um nó no <xref:System.Web.UI.WebControls.TreeView> controle pode estar em um dos dois modos: modo de seleção e o modo de navegação. Por padrão, um nó é no modo de seleção. Para colocar um nó no modo de navegação, defina o <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> propriedade para o nó para um valor diferente de uma cadeia de caracteres vazia (""). Para colocar um nó no modo de seleção, defina o <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> propriedade para o nó para a cadeia de caracteres vazia ("").  
  
 Quando um nó está no modo de seleção, o usuário pode selecionar um nó, clicando no texto do nó. Use o <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A> propriedade para determinar qual nó está selecionado no <xref:System.Web.UI.WebControls.TreeView> controle.  
  
> [!NOTE]
>  Um nó não pode ser selecionado quando o <xref:System.Web.UI.WebControls.TreeView> controle exibe hiperlinks. Quando os hiperlinks são exibidos, o <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A> propriedade sempre retorna `null`.  
  
 Quando o usuário seleciona um nó diferente na <xref:System.Web.UI.WebControls.TreeView> controle clicando no texto no novo nó, o <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> é gerado, por padrão. Você pode especificar um evento diferente, definindo o <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> propriedade para a propriedade. A tabela a seguir lista as opções disponíveis.  
  
|Ação de seleção|Descrição|  
|----------------------|-----------------|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.Expand>|Alterna o nó entre expandido e recolhido. Gera o <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> ou <xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed> evento, conforme apropriado.|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.None>|Não aciona nenhum evento quando um nó é selecionado.|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.Select>|Aciona o evento <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> quando um nó é selecionado.|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.SelectExpand>|Aciona os eventos <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> e <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> quando um nó é selecionado. Nós só são expandidos, nunca é recolhido.|  
  
> [!NOTE]
>  O <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> não é renderizado para um nó com seus <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> propriedade definida como `TreeNodeSelectAction.None`.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A> propriedade para determinar o valor do nó selecionado no <xref:System.Web.UI.WebControls.TreeView> controle.  
  
 [!code-aspx-csharp[TreeViewSelectedNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/CS/treeviewselectednodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewSelectedNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/VB/treeviewselectednodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowCheckBoxes" />
        <altmember cref="E:System.Web.UI.WebControls.TreeView.SelectedNodeChanged" />
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeExpanded" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.SelectAction" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.SelectAction" />
      </Docs>
    </Member>
    <Member MemberName="SelectedNodeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SelectedNodeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectedNodeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.SelectedNodeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectedNodeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SelectedNodeChanged;" />
      <MemberSignature Language="F#" Value="member this.SelectedNodeChanged : EventHandler " Usage="member this.SelectedNodeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando um nó é selecionado no controle <see cref="T:System.Web.UI.WebControls.TreeView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> evento é gerado quando um nó é selecionado no <xref:System.Web.UI.WebControls.TreeView> controle. Isso permite que você forneça um método de manipulação de eventos que executa uma rotina personalizada, como atualizar o conteúdo exibido, sempre que esse evento ocorre.  
  
 Você pode definir opcionalmente o <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> propriedade para um nó especificar qual o evento é gerado quando este nó é selecionado. A tabela a seguir lista as opções disponíveis.  
  
|Ação de seleção|Descrição|  
|----------------------|-----------------|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.Expand>|Alterna o nó entre expandido e recolhido. Gera o <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> ou <xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed> evento, conforme apropriado.|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.None>|Não aciona nenhum evento quando um nó é selecionado.|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.Select>|Aciona o evento <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> quando um nó é selecionado.|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.SelectExpand>|Aciona os eventos <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> e <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> quando um nó é selecionado. Nós só são expandidos, nunca é recolhido.|  
  
> [!NOTE]
>  O <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> não é renderizado para um nó com seus <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> propriedade definida como `TreeNodeSelectAction.None`.  
  
 O <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> evento é disparado somente na postagem quando um usuário clica em um nó. O evento não é disparado se o <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A> propriedade é alterada por meio de programação.  
  
 Para obter mais informações sobre como manipular eventos, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> eventos para atualizar uma <xref:System.Web.UI.WebControls.Label> controlar quando um nó é selecionado no <xref:System.Web.UI.WebControls.TreeView> controle.  
  
 [!code-aspx-csharp[TreeViewSelectedNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/CS/treeviewselectednodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewSelectedNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/VB/treeviewselectednodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="SelectedNodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyle SelectedNodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyle SelectedNodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedNodeStyle As TreeNodeStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeStyle ^ SelectedNodeStyle { System::Web::UI::WebControls::TreeNodeStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedNodeStyle : System.Web.UI.WebControls.TreeNodeStyle" Usage="System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o objeto <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> que controla a aparência do nó selecionado no objeto de controle <see cref="T:System.Web.UI.WebControls.TreeView" />.</summary>
        <value>Um <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> que representa o nó do estilo selecionado no controle <see cref="T:System.Web.UI.WebControls.TreeView" />. O padrão é <see langword="null" />, que indica que a propriedade <see cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" /> não está definida.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A> propriedade para controlar a aparência do nó selecionado no <xref:System.Web.UI.WebControls.TreeView> controle. Essa propriedade é somente leitura; No entanto, você pode definir as propriedades do <xref:System.Web.UI.WebControls.TreeNodeStyle> retornará do objeto. As propriedades podem ser definidas declarativamente na forma `Property-Subproperty`, onde `Subproperty` é uma propriedade da <xref:System.Web.UI.WebControls.TreeNodeStyle> objeto (por exemplo, `SelectedNodeStyle-ForeColor`). As propriedades também podem ser definidas programaticamente no formulário `Property.Subproperty` (por exemplo, `SelectedNodeStyle.ForeColor`). Configurações comuns geralmente incluem uma cor de plano de fundo personalizado, cor de primeiro plano, as propriedades de fonte e espaçamento de nó. Propriedades de estilo são aplicadas na seguinte ordem de precedência:  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>, ou <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>, dependendo do tipo de nó. Se o <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> coleção é definida, ela é aplicada no momento, substituindo as outras propriedades de estilo do nó.  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>.  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A> propriedade para controlar a aparência do nó selecionado no <xref:System.Web.UI.WebControls.TreeView> controle.  
  
 [!code-aspx-csharp[TreeViewSelectedNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/CS/treeviewselectednodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewSelectedNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/VB/treeviewselectednodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="SelectedValue">
      <MemberSignature Language="C#" Value="public string SelectedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.SelectedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectedValue { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedValue : string" Usage="System.Web.UI.WebControls.TreeView.SelectedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o valor do nó selecionado.</summary>
        <value>O valor do nó selecionado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.TreeView.SelectedValue%2A> propriedade fornece uma maneira conveniente para determinar o valor do nó selecionado. Essa propriedade simplesmente retorna o valor da <xref:System.Web.UI.WebControls.TreeNode.Value%2A> propriedade do <xref:System.Web.UI.WebControls.TreeNode> objeto é referenciado pelo <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A> propriedade. Se nenhum nó selecionado no momento o <xref:System.Web.UI.WebControls.TreeView> controlar, uma cadeia de caracteres vazia ("") será retornado.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNode" />
      </Docs>
    </Member>
    <Member MemberName="SetNodeDataBound">
      <MemberSignature Language="C#" Value="protected void SetNodeDataBound (System.Web.UI.WebControls.TreeNode node, bool dataBound);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetNodeDataBound(class System.Web.UI.WebControls.TreeNode node, bool dataBound) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.SetNodeDataBound(System.Web.UI.WebControls.TreeNode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetNodeDataBound (node As TreeNode, dataBound As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetNodeDataBound(System::Web::UI::WebControls::TreeNode ^ node, bool dataBound);" />
      <MemberSignature Language="F#" Value="member this.SetNodeDataBound : System.Web.UI.WebControls.TreeNode * bool -&gt; unit" Usage="treeView.SetNodeDataBound (node, dataBound)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.UI.WebControls.TreeNode" />
        <Parameter Name="dataBound" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="node"><see cref="T:System.Web.UI.WebControls.TreeNode" /> ao dataset.</param>
        <param name="dataBound"><see langword="true" /> para definir o nó como associado a dados; caso contrário, <see langword="false" />.</param>
        <summary>Permite que uma classe derivada defina se o controle <see cref="T:System.Web.UI.WebControls.TreeNode" /> especificado é associado a dados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.TreeView.SetNodeDataBound%2A> método para indicar se especificado <xref:System.Web.UI.WebControls.TreeNode> está associada a dados.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>O <see cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataBound(System.Web.UI.WebControls.TreeNode,System.Boolean)" /> método é fornecido para permitir que um controle que é derivado de <see cref="T:System.Web.UI.WebControls.TreeView" /> controle para definir o <see cref="P:System.Web.UI.WebControls.TreeNode.DataBound" /> propriedade em um nó.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataItem(System.Web.UI.WebControls.TreeNode,System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataPath(System.Web.UI.WebControls.TreeNode,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetNodeDataItem">
      <MemberSignature Language="C#" Value="protected void SetNodeDataItem (System.Web.UI.WebControls.TreeNode node, object dataItem);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetNodeDataItem(class System.Web.UI.WebControls.TreeNode node, object dataItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.SetNodeDataItem(System.Web.UI.WebControls.TreeNode,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetNodeDataItem (node As TreeNode, dataItem As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetNodeDataItem(System::Web::UI::WebControls::TreeNode ^ node, System::Object ^ dataItem);" />
      <MemberSignature Language="F#" Value="member this.SetNodeDataItem : System.Web.UI.WebControls.TreeNode * obj -&gt; unit" Usage="treeView.SetNodeDataItem (node, dataItem)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.UI.WebControls.TreeNode" />
        <Parameter Name="dataItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="node"><see cref="T:System.Web.UI.WebControls.TreeNode" /> ao dataset.</param>
        <param name="dataItem">O item de dados para o <see cref="T:System.Web.UI.WebControls.TreeNode" />.</param>
        <summary>Permite que uma classe derivada defina o item de dados para o controle <see cref="T:System.Web.UI.WebControls.TreeNode" /> especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.TreeView.SetNodeDataItem%2A> método para especificar o item de dados especificado <xref:System.Web.UI.WebControls.TreeNode> controle.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataBound(System.Web.UI.WebControls.TreeNode,System.Boolean)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataPath(System.Web.UI.WebControls.TreeNode,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetNodeDataPath">
      <MemberSignature Language="C#" Value="protected void SetNodeDataPath (System.Web.UI.WebControls.TreeNode node, string dataPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetNodeDataPath(class System.Web.UI.WebControls.TreeNode node, string dataPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.SetNodeDataPath(System.Web.UI.WebControls.TreeNode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetNodeDataPath (node As TreeNode, dataPath As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetNodeDataPath(System::Web::UI::WebControls::TreeNode ^ node, System::String ^ dataPath);" />
      <MemberSignature Language="F#" Value="member this.SetNodeDataPath : System.Web.UI.WebControls.TreeNode * string -&gt; unit" Usage="treeView.SetNodeDataPath (node, dataPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.UI.WebControls.TreeNode" />
        <Parameter Name="dataPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="node"><see cref="T:System.Web.UI.WebControls.TreeNode" /> ao dataset.</param>
        <param name="dataPath">O caminho de dados para o <see cref="T:System.Web.UI.WebControls.TreeNode" />.</param>
        <summary>Permite que uma classe derivada defina o caminho de dados para o controle <see cref="T:System.Web.UI.WebControls.TreeNode" /> especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.TreeView.SetNodeDataPath%2A> método para definir o caminho de dados especificado <xref:System.Web.UI.WebControls.TreeNode> controle.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataBound(System.Web.UI.WebControls.TreeNode,System.Boolean)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataItem(System.Web.UI.WebControls.TreeNode,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ShowCheckBoxes">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeTypes ShowCheckBoxes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.TreeNodeTypes ShowCheckBoxes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ShowCheckBoxes" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowCheckBoxes As TreeNodeTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeTypes ShowCheckBoxes { System::Web::UI::WebControls::TreeNodeTypes get(); void set(System::Web::UI::WebControls::TreeNodeTypes value); };" />
      <MemberSignature Language="F#" Value="member this.ShowCheckBoxes : System.Web.UI.WebControls.TreeNodeTypes with get, set" Usage="System.Web.UI.WebControls.TreeView.ShowCheckBoxes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica quais tipos de nós exibirão uma caixa de seleção no controle <see cref="T:System.Web.UI.WebControls.TreeView" />.</summary>
        <value>Uma combinação bit a bit dos valores <see cref="T:System.Web.UI.WebControls.TreeNodeTypes" />. O padrão é <see langword="TreeNodeType.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para fornecer suporte a seleção de vários nós no <xref:System.Web.UI.WebControls.TreeView> controle, você pode exibir caixas de seleção ao lado da imagem para um nó. Use o <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> propriedade para especificar quais tipos de nós serão exibida uma caixa de seleção. Por exemplo, se essa propriedade é definida como `TreeNodeType.Parent`, caixas de seleção são exibidas para cada nó pai na árvore. A tabela a seguir lista os valores válidos para essa propriedade.  
  
|Tipo de nó|Descrição|  
|---------------|-----------------|  
|`TreeNodeType.All`|Caixas de seleção são exibidas para todos os nós.|  
|`TreeNodeType.Leaf`|Caixas de seleção são exibidas para todos os nós de folha.|  
|`TreeNodeType.None`|Caixas de seleção não são exibidas.|  
|`TreeNodeType.Parent`|Caixas de seleção são exibidas para todos os nós pai.|  
|`TreeNodeType.Root`|Caixas de seleção são exibidas para todos os nós de raiz.|  
  
 O tipo de enumeração que é usado para o <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> propriedade é uma enumeração de sinalizador, o que permite que você combine os valores por meio de operações bit a bit. Por exemplo, para exibir caixas de seleção para os nós pai e a folha, use o operador OR bit a bit para combinar os `TreeNodeType.Parent` e `TreeNodeType.Leaf` valores.  
  
 Para determinar quais nós têm sua caixa de seleção marcada, iterar em nós do <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> coleção.  
  
> [!NOTE]
>  Você pode substituir a <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> configuração definindo o <xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A> propriedade para cada nó.  
  
 Se você precisar fornecer suporte apenas a única seleção, considere o uso de <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A> propriedade.  
  
 O valor dessa propriedade é armazenado no estado de exibição.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> propriedade para mostrar e ocultar as caixas de seleção para os tipos de nó diferente.  
  
 [!code-aspx-csharp[TreeViewShowCheckBoxes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewShowCheckBoxes/CS/treeviewshowcheckboxescs.aspx#1)]
 [!code-aspx-vb[TreeViewShowCheckBoxes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewShowCheckBoxes/VB/treeviewshowcheckboxesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">O valor de combinação bit a bit está fora do intervalo da enumeração <see cref="T:System.Web.UI.WebControls.TreeNodeTypes" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeTypes" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNode" />
      </Docs>
    </Member>
    <Member MemberName="ShowExpandCollapse">
      <MemberSignature Language="C#" Value="public bool ShowExpandCollapse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowExpandCollapse" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ShowExpandCollapse" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowExpandCollapse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowExpandCollapse { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowExpandCollapse : bool with get, set" Usage="System.Web.UI.WebControls.TreeView.ShowExpandCollapse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se os indicadores de nó de expansão são exibidos.</summary>
        <value><see langword="true" /> para mostrar os indicadores de nó de expansão; caso contrário, <see langword="false" />. O padrão é <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Indicadores de nó de expansão são usados para mostrar se um nó é expandido, recolhido ou não expansível. Use o <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> propriedade para especificar se os indicadores de nó de expansão são exibidos no <xref:System.Web.UI.WebControls.TreeView> controle.  
  
 Quando o <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> estiver definida como `true`, o <xref:System.Web.UI.WebControls.TreeView> controle exibe um sinal de adição (+) ou sinal de subtração (-) ou uma imagem de espaço reservado ao lado de um nó para indicar se o nó é expansível, não expansível ou recolhível, respectivamente. Você pode especificar imagens personalizadas pelo primeiro parâmetro de <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> propriedade para `TreeViewImageSet.Custom`e, em seguida, definindo o <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>, <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>, e <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> propriedades para as URLs das imagens personalizadas. Se nenhuma imagem for especificada, as imagens padrão são usadas.  
  
 O valor dessa propriedade é armazenado no estado de exibição.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> propriedade para mostrar e ocultar os ícones de nó de expansão.  
  
 [!code-aspx-csharp[TreeViewShowExpandCollapse#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewShowExpandCollapse/CS/treeviewshowexpandcollapsecs.aspx#1)]
 [!code-aspx-vb[TreeViewShowExpandCollapse#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewShowExpandCollapse/VB/treeviewshowexpandcollapsevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="ShowLines">
      <MemberSignature Language="C#" Value="public bool ShowLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowLines" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ShowLines" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowLines As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowLines { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowLines : bool with get, set" Usage="System.Web.UI.WebControls.TreeView.ShowLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se as linhas conectando nós filho a nós pai são exibidas.</summary>
        <value><see langword="true" /> para exibir as linhas que conectam os nós, caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.TreeView.ShowLines%2A> propriedade para especificar se as linhas que estão se conectando nós filho a nós pai são exibidas. Quando essa propriedade é definida como `true`, o <xref:System.Web.UI.WebControls.TreeView> controle de pesquisa na pasta acessível pela Web especificado pelo <xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A> propriedade para as imagens de linha.  
  
> [!NOTE]
>  Se o <xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A> não está definida, o <xref:System.Web.UI.WebControls.TreeView> controle usará imagens internas, padrão (20 x 20 pixels).  
  
 O valor dessa propriedade é armazenado no estado de exibição.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.TreeView.ShowLines%2A> propriedade para exibir linhas que conectam nós no <xref:System.Web.UI.WebControls.TreeView> controle. Certifique-se de usar a ferramenta de linha de Designer para criar um conjunto de imagens de linha e colocá-los em uma pasta chamada LineImages dentro do diretório para o aplicativo de exemplo.  
  
 [!code-aspx-csharp[TreeViewLineImagesFolderUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewLineImagesFolderUrl/CS/treeviewlineimagesfolderurlcs.aspx#1)]
 [!code-aspx-vb[TreeViewLineImagesFolderUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewLineImagesFolderUrl/VB/treeviewlineimagesfolderurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LineImagesFolder" />
      </Docs>
    </Member>
    <Member MemberName="SkipLinkText">
      <MemberSignature Language="C#" Value="public string SkipLinkText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkipLinkText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.SkipLinkText" />
      <MemberSignature Language="VB.NET" Value="Public Property SkipLinkText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SkipLinkText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SkipLinkText : string with get, set" Usage="System.Web.UI.WebControls.TreeView.SkipLinkText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor usado para renderizar o texto alternativo para leitores de tela para ignorar o conteúdo para o controle.</summary>
        <value>Uma cadeia de caracteres que o <see cref="T:System.Web.UI.WebControls.TreeView" /> renderiza como texto alternativo com uma imagem invisível como uma dica aos leitores de tela. O padrão é "Ignorar Links de navegação".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.TreeView.SkipLinkText%2A> propriedade é uma propriedade que você pode definir para disponibilizar mais ou menos uma página da Web. Páginas da Web que contêm o conteúdo que se repete pode fornecer um mecanismo para que os usuários de leitores de tela para ignorar o conteúdo seja lido em voz alta.  
  
 O <xref:System.Web.UI.WebControls.TreeView> fornece controle o <xref:System.Web.UI.WebControls.TreeView.SkipLinkText%2A> a propriedade como uma maneira para todo o controle deve ser ignorada pelos leitores de tela. Se o <xref:System.Web.UI.WebControls.TreeView.SkipLinkText%2A> propriedade for definida, uma imagem invisível com texto alternativo é renderizada, dando ao usuário a opção para ir até o final do controle. Leitores de tela lido em voz alta, o texto alternativo enquanto a imagem ocupa espaço apenas um pixel. Para obter controle pixel precisos sobre o processamento da página, defina o <xref:System.Web.UI.WebControls.TreeView.SkipLinkText%2A> propriedade como uma cadeia de caracteres vazia ("") e forneça seu próprio mecanismo para ignorar a árvore.  
  
 O <xref:System.Web.UI.WebControls.TreeView.SkipLinkText%2A> na cadeia de caracteres vazia, a propriedade é definida por padrão, o que faz com que os leitores de tela não ignorar o controle.  
  
 O valor dessa propriedade é armazenado no estado de exibição.  
  
 O valor dessa propriedade, quando definido, podem ser salvos automaticamente em um arquivo de recurso usando uma ferramenta de designer. Para obter mais informações, consulte <xref:System.ComponentModel.LocalizableAttribute> e [globalização e localização](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.ICallbackEventHandler.GetCallbackResult">
      <MemberSignature Language="C#" Value="string ICallbackEventHandler.GetCallbackResult ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Web.UI.ICallbackEventHandler.GetCallbackResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#GetCallbackResult" />
      <MemberSignature Language="VB.NET" Value="Function GetCallbackResult () As String Implements ICallbackEventHandler.GetCallbackResult" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Web.UI.ICallbackEventHandler.GetCallbackResult() = System::Web::UI::ICallbackEventHandler::GetCallbackResult;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.ICallbackEventHandler.GetCallbackResult</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna o resultado de um evento de retorno de chamada direcionado a um controle.</summary>
        <returns>Os resultados do retorno de chamada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.TreeView> controlar implementa o <xref:System.Web.UI.ICallbackEventHandler> interface e usa o <xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A> para recuperar dados e o <xref:System.Web.UI.WebControls.TreeView.GetCallbackResult%2A> método para retornar os dados recuperados para o controle.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent">
      <MemberSignature Language="C#" Value="void ICallbackEventHandler.RaiseCallbackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaiseCallbackEvent (eventArgument As String) Implements ICallbackEventHandler.RaiseCallbackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System::String ^ eventArgument) = System::Web::UI::ICallbackEventHandler::RaiseCallbackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Uma cadeia de caracteres que representa um argumento do evento opcional a ser passado para o manipulador de eventos.</param>
        <summary>Aciona o evento de retorno de chamada usando os argumentos especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Os desenvolvedores de controle devem substituir o <xref:System.Web.UI.WebControls.TreeView.RaiseCallbackEvent%2A> método.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.LoadPostData">
      <MemberSignature Language="C#" Value="bool IPostBackDataHandler.LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Web.UI.IPostBackDataHandler.LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean Implements IPostBackDataHandler.LoadPostData" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Web.UI.IPostBackDataHandler.LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection) = System::Web::UI::IPostBackDataHandler::LoadPostData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">O identificador da chave do controle.</param>
        <param name="postCollection">A coleção de todos os valores de nome de entrada.</param>
        <summary>Processa dados de postback para o controle <see cref="T:System.Web.UI.WebControls.TreeView" />.</summary>
        <returns><see langword="true" /> se o estado do controle <see cref="T:System.Web.UI.WebControls.TreeView" /> mudar como resultado do evento de postback; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Os desenvolvedores de controle devem substituir o <xref:System.Web.UI.WebControls.TreeView.LoadPostData%2A> método.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="void IPostBackDataHandler.RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostDataChangedEvent () Implements IPostBackDataHandler.RaisePostDataChangedEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() = System::Web::UI::IPostBackDataHandler::RaisePostDataChangedEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sinaliza o controle <see cref="T:System.Web.UI.WebControls.TreeView" /> para notificar o aplicativo ASP.NET de que o estado do controle mudou.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Os desenvolvedores de controle devem substituir o <xref:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent%2A> método.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Uma cadeia de caracteres que representa um argumento do evento opcional a ser passado para o manipulador de eventos.</param>
        <summary>Permite que o controle <see cref="T:System.Web.UI.WebControls.TreeView" /> processe um evento gerado quando um formulário é enviado ao servidor.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Os desenvolvedores de controle devem substituir o <xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A> método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); };" />
      <MemberSignature Language="F#" Value="member this.TagKey : System.Web.UI.HtmlTextWriterTag" Usage="System.Web.UI.WebControls.TreeView.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o valor <see cref="T:System.Web.UI.HtmlTextWriterTag" /> do controle <see cref="T:System.Web.UI.WebControls.TreeView" />.</summary>
        <value>Sempre retorna um <see cref="F:System.Web.UI.HtmlTextWriterTag.Div" /> valor.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.TreeView.TagKey%2A> propriedade permite que o fluxo de saída para gravação a apropriado HTML marcação para o <xref:System.Web.UI.WebControls.TreeView> controle.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Você pode substituir a <see cref="P:System.Web.UI.WebControls.TreeView.TagKey" /> propriedade para especificar quais <see cref="T:System.Web.UI.HtmlTextWriterTag" /> valor a ser usado para o seu controle derivado.</para></block>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public string Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Target" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.Target" />
      <MemberSignature Language="VB.NET" Value="Public Property Target As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Target { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Target : string with get, set" Usage="System.Web.UI.WebControls.TreeView.Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a janela ou o quadro de destino no qual deverá ser exibido o conteúdo da página da Web associado a um nó.</summary>
        <value>A janela de destino ou quadro no qual exibir o conteúdo da página da Web vinculada. Os valores devem começar com uma letra no intervalo de À Z (diferencia maiusculas de minúsculas), exceto para determinados valores especiais que começam com um sublinhado, conforme mostrado na tabela a seguir.  
  
 <list type="table"><listheader><term> Valor de destino 
 </term><description> Renderiza o conteúdo em 
 </description></listheader><item><term><see langword="_blank" /></term><description> Uma nova janela sem quadros.  
  
 </description></item><item><term><see langword="_parent" /></term><description> O pai do conjunto de quadros imediato.  
  
 </description></item><item><term><see langword="_search" /></term><description> O painel de pesquisa.  
  
 </description></item><item><term><see langword="_self" /></term><description> O quadro com foco.  
  
 </description></item><item><term><see langword="_top" /></term><description> A janela inteira sem quadros.  
  
 </description></item></list><block subset="none" type="note"><para>  
 Verifique a documentação do navegador para determinar se o <see langword="_search" /> valor é suportado.  Por exemplo, Microsoft Internet Explorer 5.0 e posterior oferece suporte a <see langword="_search" /> valor de destino.  
  
</para></block>  
  
 O padrão é uma cadeia de caracteres vazia (""), que atualiza a janela ou quadro com o foco.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.TreeView.Target%2A> propriedade para especificar a janela ou quadro no qual exibir conteúdo na Web que esteja vinculada a um nó quando esse nó é clicado.  
  
> [!NOTE]
>  O <xref:System.Web.UI.WebControls.TreeView.Target%2A> propriedade renderiza como um `target` atributo. O `target` atributo `anchor` elementos não é permitida na definição de tipo de documento XHTML 1.1. Não defina a <xref:System.Web.UI.WebControls.TreeView.Target%2A> propriedade, se a saída renderizada para o <xref:System.Web.UI.WebControls.TreeView> devem ser compatíveis com XHTML 1.1. Para obter mais informações, consulte [padrões XHTML no Visual Studio e o ASP.NET](https://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97).  
>   
>  Ao criar páginas da Web acessíveis, você deve evitar usar o <xref:System.Web.UI.WebControls.TreeView.Target%2A> propriedade para outra janela de destino. Para obter mais informações, consulte [controles ASP.NET e acessibilidade](https://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
 O valor dessa propriedade é armazenado no estado de exibição.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.TreeView.Target%2A> propriedade para exibir o conteúdo da Web que esteja vinculado a um nó em uma nova janela quando esse nó é clicado.  
  
 [!code-aspx-csharp[TreeViewTarget#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewTarget/CS/treeviewtargetcs.aspx#1)]
 [!code-aspx-vb[TreeViewTarget#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewTarget/VB/treeviewtargetvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Target" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="treeView.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Controla as alterações de estado de exibição no controle <see cref="T:System.Web.UI.WebControls.TreeView" />, de modo que possam ser armazenadas no objeto <see cref="T:System.Web.UI.StateBag" /> para o controle. Esse <see cref="P:System.Web.UI.Control.ViewState" /> está acessível por meio da propriedade <see cref="T:System.Web.UI.StateBag" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.TreeView.TrackViewState%2A> método é substituído para marcar o ponto de partida para começar a acompanhar e salvar as alterações no controle como parte do estado de exibição para o controle.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="TreeNodeCheckChanged">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeCheckChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeCheckChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TreeNodeCheckChanged As TreeNodeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::TreeNodeEventHandler ^ TreeNodeCheckChanged;" />
      <MemberSignature Language="F#" Value="member this.TreeNodeCheckChanged : System.Web.UI.WebControls.TreeNodeEventHandler " Usage="member this.TreeNodeCheckChanged : System.Web.UI.WebControls.TreeNodeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando uma caixa de seleção no controle <see cref="T:System.Web.UI.WebControls.TreeView" /> muda de estado entre as postagens para o servidor.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged> evento é gerado quando uma caixa de seleção no <xref:System.Web.UI.WebControls.TreeView> controle altera o estado entre as postagens no servidor. Isso permite que você forneça um método de manipulação de eventos que executa uma rotina personalizada, como atualizar um banco de dados ou o conteúdo exibido, sempre que esse evento ocorre.  
  
 Embora o <xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged> evento é disparado no postback, a alteração de uma caixa de seleção não causa um postback.  
  
 Para obter mais informações sobre como manipular eventos, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged> eventos para atualizar uma <xref:System.Web.UI.WebControls.Label> controlar quando as caixas de seleção do <xref:System.Web.UI.WebControls.TreeView> controle alterar o estado entre as postagens no servidor.  
  
 [!code-aspx-csharp[TreeViewCheckChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCheckChanged/CS/treeviewcheckchangedcs.aspx#1)]
 [!code-aspx-vb[TreeViewCheckChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCheckChanged/VB/treeviewcheckchangedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="TreeNodeCollapsed">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeCollapsed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeCollapsed" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TreeNodeCollapsed As TreeNodeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::TreeNodeEventHandler ^ TreeNodeCollapsed;" />
      <MemberSignature Language="F#" Value="member this.TreeNodeCollapsed : System.Web.UI.WebControls.TreeNodeEventHandler " Usage="member this.TreeNodeCollapsed : System.Web.UI.WebControls.TreeNodeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando um nó é recolhido no controle <see cref="T:System.Web.UI.WebControls.TreeView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed> evento é gerado quando um nó é recolhido no <xref:System.Web.UI.WebControls.TreeView> controle. Isso permite que você fornecer um método de manipulação de eventos que executa uma rotina personalizada sempre que esse evento ocorre.  
  
 Para obter mais informações sobre como manipular eventos, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed> evento para atualizar o conteúdo de um <xref:System.Web.UI.WebControls.Label> controlar quando o usuário recolhe um nó no <xref:System.Web.UI.WebControls.TreeView> controle.  
  
 [!code-aspx-csharp[TreeViewTreeNodeExpand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewTreeNodeExpand/CS/treeviewtreenodeexpandcs.aspx#1)]
 [!code-aspx-vb[TreeViewTreeNodeExpand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewTreeNodeExpand/VB/treeviewtreenodeexpandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="TreeNodeDataBound">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeDataBound;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeDataBound" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.TreeNodeDataBound" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TreeNodeDataBound As TreeNodeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::TreeNodeEventHandler ^ TreeNodeDataBound;" />
      <MemberSignature Language="F#" Value="member this.TreeNodeDataBound : System.Web.UI.WebControls.TreeNodeEventHandler " Usage="member this.TreeNodeDataBound : System.Web.UI.WebControls.TreeNodeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando um item de dados é associado a um nó no controle de <see cref="T:System.Web.UI.WebControls.TreeView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound> é gerado quando um item de dados é associado a um nó no <xref:System.Web.UI.WebControls.TreeView> controle. Isso permite que você fornecer um método de manipulação de eventos que executa uma rotina personalizada sempre que esse evento ocorre.  
  
 Para obter mais informações sobre como manipular eventos, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Esta seção contém dois exemplos de código. O primeiro exemplo de código demonstra como usar o <xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound> evento para alterar a imagem de um nó quando alguma condição for atendida. O segundo exemplo de código fornece dados XML de exemplo para o primeiro exemplo de código.  
  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound> evento para alterar a imagem de um nó quando alguma condição for atendida. Para esse exemplo funcione corretamente, você deve copiar os dados XML de exemplo, fornecidos após este exemplo de código em um arquivo denominado Book. XML. Também Certifique-se de fornecer suas próprias imagens para este exemplo exibir.  
  
 [!code-aspx-csharp[TreeViewTreeNodeDataBound#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewTreeNodeDataBound/CS/treeviewtreenodedataboundcs.aspx#1)]
 [!code-aspx-vb[TreeViewTreeNodeDataBound#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewTreeNodeDataBound/VB/treeviewtreenodedataboundvb.aspx#1)]  
  
 O exemplo de código a seguir fornece os dados XML de exemplo para o exemplo de código anterior.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="TreeNodeExpanded">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeExpanded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeExpanded" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.TreeNodeExpanded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TreeNodeExpanded As TreeNodeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::TreeNodeEventHandler ^ TreeNodeExpanded;" />
      <MemberSignature Language="F#" Value="member this.TreeNodeExpanded : System.Web.UI.WebControls.TreeNodeEventHandler " Usage="member this.TreeNodeExpanded : System.Web.UI.WebControls.TreeNodeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando um nó é expandido no controle <see cref="T:System.Web.UI.WebControls.TreeView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> evento é gerado quando um nó é expandido no <xref:System.Web.UI.WebControls.TreeView> controle. Isso permite que você fornecer um método de manipulação de eventos que executa uma rotina personalizada sempre que esse evento ocorre.  
  
> [!NOTE]
>  Se o <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> propriedade para um nó é definida como `TreeNodeSelectAction.Expand` ou `TreeNodeSelectAction.SelectExpand`, o <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> evento também é acionado quando esse nó é clicado no <xref:System.Web.UI.WebControls.TreeView> controle.  
  
 Para obter mais informações sobre como manipular eventos, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> evento para atualizar o conteúdo de um <xref:System.Web.UI.WebControls.Label> controlar quando o usuário expande um nó no <xref:System.Web.UI.WebControls.TreeView> controle.  
  
 [!code-aspx-csharp[TreeViewTreeNodeExpand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewTreeNodeExpand/CS/treeviewtreenodeexpandcs.aspx#1)]
 [!code-aspx-vb[TreeViewTreeNodeExpand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewTreeNodeExpand/VB/treeviewtreenodeexpandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded(System.Web.UI.WebControls.TreeNodeEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.SelectAction" />
      </Docs>
    </Member>
    <Member MemberName="TreeNodePopulate">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodePopulate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.TreeNodeEventHandler TreeNodePopulate" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TreeNodePopulate As TreeNodeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::TreeNodeEventHandler ^ TreeNodePopulate;" />
      <MemberSignature Language="F#" Value="member this.TreeNodePopulate : System.Web.UI.WebControls.TreeNodeEventHandler " Usage="member this.TreeNodePopulate : System.Web.UI.WebControls.TreeNodeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando um nó com a propriedade <see cref="P:System.Web.UI.WebControls.TreeNode.PopulateOnDemand" /> definida como <see langword="true" /> está expandida no controle <see cref="T:System.Web.UI.WebControls.TreeView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Às vezes, não é prático estaticamente predefinir a estrutura de árvore devido ao tamanho dos dados ou conteúdo personalizado que depende de entrada do usuário. Por isso, o <xref:System.Web.UI.WebControls.TreeView> controle dá suporte a preenchimento dinâmico de nós. Quando o <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> propriedade para um nó é definida como `true`, esse nó é preenchido no tempo de execução quando o nó é expandido.  
  
 Para popular um nó dinamicamente, primeiro defina a <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> propriedade para o nó `true`. Em seguida, defina um método de manipulação de eventos para o <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate> evento que preenche o nó de forma programática. Um típico método de manipulação de eventos recupera dados do nó de uma fonte de dados, coloca os dados em uma estrutura de nó e, em seguida, adiciona a estrutura de nó para o <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> coleção do nó que está sendo populado. Uma estrutura de nó é criada adicionando <xref:System.Web.UI.WebControls.TreeNode> objetos para o <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> coleção de um nó pai.  
  
> [!NOTE]
>  Quando o <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> propriedade para um nó é definida como `true`, o nó deve ser populado dinamicamente. Declarativamente, você não pode aninhar outro nó abaixo dele; Caso contrário, ocorrerá um erro na página.  
  
 Navegadores com suporte (navegadores do Microsoft Internet Explorer compatível com o 4.0 e posterior) também pode tirar proveito da população de nó do lado do cliente. Quando habilitado, isso permite que o <xref:System.Web.UI.WebControls.TreeView> controle para preencher um nó dinamicamente no cliente quando o nó é expandido, o que evita a necessidade de volta para o servidor. Para obter mais informações sobre a população de nó do lado do cliente, consulte <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>.  
  
 Para obter mais informações sobre como manipular eventos, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate> evento para preencher os nós a <xref:System.Web.UI.WebControls.TreeView> controle dinamicamente no servidor. Observe que o <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A> estiver definida como `false` para impedir que os eventos de nó de expansão que está sendo manipulado no cliente.  
  
 [!code-aspx-csharp[TreeViewTreeNodePopulate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewTreeNodePopulate/CS/treeviewtreenodepopulatecs.aspx#1)]
 [!code-aspx-vb[TreeViewTreeNodePopulate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewTreeNodePopulate/VB/treeviewtreenodepopulatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodePopulate(System.Web.UI.WebControls.TreeNodeEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.PopulateOnDemand" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient" />
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public override bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Visible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Visible : bool with get, set" Usage="System.Web.UI.WebControls.TreeView.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se o controle é renderizado como a interface do usuário na página.</summary>
        <value><see langword="true" />, se o controle está visível na página; Caso contrário, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o <xref:System.Web.UI.WebControls.TreeView.Visible%2A> estiver definida como `false`, o controle não é processado.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
      </Docs>
    </Member>
  </Members>
</Type>