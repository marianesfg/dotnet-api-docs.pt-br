<Type Name="FontUnitConverter" FullName="System.Web.UI.WebControls.FontUnitConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="653e1d9e8da644f8decacc68fb0babfdfa1f1039" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37593341" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FontUnitConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FontUnitConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FontUnitConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class FontUnitConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class FontUnitConverter : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type FontUnitConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Converts a <see cref="T:System.Web.UI.WebControls.FontUnit" /> to a string. It also converts a string to a <see cref="T:System.Web.UI.WebControls.FontUnit" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.FontUnitConverter> classe é usada para converter dados de e para <xref:System.Web.UI.WebControls.FontUnit> e tipos de cadeia de caracteres.  
  
> [!CAUTION]
>  Você nunca deve acessar diretamente um conversor de tipo. Em vez disso, chamar o conversor apropriado usando <xref:System.ComponentModel.TypeDescriptor?displayProperty=nameWithType>. Para obter mais informações, consulte os exemplos a <xref:System.ComponentModel.TypeConverter?displayProperty=nameWithType> classe base.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.Unit" />
    <altmember cref="T:System.ComponentModel.TypeDescriptor" />
    <altmember cref="T:System.ComponentModel.TypeConverter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FontUnitConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FontUnitConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FontUnitConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.FontUnitConverter" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Você nunca deve acessar diretamente um conversor de tipo. Em vez disso, chame o conversor apropriado, usando um <xref:System.ComponentModel.TypeDescriptor> objeto. Para obter mais informações, consulte os exemplos em <xref:System.ComponentModel.TypeConverter>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FontUnitConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="fontUnitConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> implemented object that provides information about the context of a type converter.</param>
        <param name="sourceType">A <see cref="T:System.Type" /> that represents the data type to check.</param>
        <summary>Determines whether a data type can be converted to a <see cref="T:System.Web.UI.WebControls.FontUnit" />.</summary>
        <returns>
          <see langword="true" /> if the data type specified by the <paramref name="sourceType" /> parameter can be converted to a <see cref="T:System.Web.UI.WebControls.FontUnit" />; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.FontUnitConverter.CanConvertFrom%2A> método para determinar se o tipo de dados especificada pela `sourceType` parâmetro pode ser convertido em um <xref:System.Web.UI.WebControls.FontUnit>.  
  
> [!NOTE]
>  Esse método retornará verdadeiro somente se o `sourceType` for <xref:System.String>. O único tipo que esse conversor pode converter em <xref:System.Web.UI.WebControls.FontUnit> é <xref:System.String>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
        <altmember cref="T:System.Web.UI.WebControls.FontUnit" />
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Type" />
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FontUnitConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="fontUnitConverter.CanConvertTo (context, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that indicates the context of the object to convert.</param>
        <param name="destinationType">A <see cref="T:System.Type" /> that represents the data type to convert to.</param>
        <summary>Returns a value indicating whether the converter can convert a <see cref="T:System.Web.UI.WebControls.FontUnit" /> object to the specified type.</summary>
        <returns>
          <see langword="true" /> if the converter supports converting a <see cref="T:System.Web.UI.WebControls.FontUnit" /> object to the destination type; otherwise, <see langword="false" />.  
  
 <block subset="none" type="note"><para> This method will return true only if the <paramref name="destinationType" /> is <see cref="T:System.String" />. The only type this converter can convert <see cref="T:System.Web.UI.WebControls.FontUnit" /> into is <see cref="T:System.String" />.  </para></block></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FontUnitConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj&#xA;override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="fontUnitConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> implemented object that provides information about the context of a type converter.</param>
        <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> that specifies the culture to represent the <see cref="T:System.Web.UI.WebControls.FontUnit" />, when it is expressed in points.</param>
        <param name="value">The object to convert to a <see cref="T:System.Web.UI.WebControls.FontUnit" />.</param>
        <summary>Converts an object to a <see cref="T:System.Web.UI.WebControls.FontUnit" /> in a specific culture.</summary>
        <returns>A <see cref="T:System.Object" /> that represents the converted value.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.FontUnitConverter.ConvertFrom%2A> método para converter o objeto especificado pelo `value` parâmetro para um <xref:System.Web.UI.WebControls.FontUnit> na cultura especificada pelo `culture` parâmetro.  
  
> [!NOTE]
>  Se o objeto especificado é `null`, o valor retornado também é `null`. Da mesma forma, se o objeto especificado é <xref:System.String.Empty?displayProperty=nameWithType>, <xref:System.Web.UI.WebControls.FontUnit.Empty> será retornado.  
  
> [!NOTE]
>  Esse método só pode converter uma cadeia de caracteres para um <xref:System.Web.UI.WebControls.FontUnit>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
        <altmember cref="T:System.Web.UI.WebControls.FontUnit" />
        <altmember cref="F:System.String.Empty" />
        <altmember cref="F:System.Web.UI.WebControls.FontUnit.Empty" />
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FontUnitConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj&#xA;override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="fontUnitConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> implemented object that provides information about the context of a type converter.</param>
        <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> that specifies the culture to represent the <see cref="T:System.Web.UI.WebControls.FontUnit" />, when it is expressed in points.</param>
        <param name="value">A <see cref="T:System.Object" /> that represents the <see cref="T:System.Web.UI.WebControls.FontUnit" /> to convert.</param>
        <param name="destinationType">A <see cref="T:System.Type" /> that represents the data type to convert to.</param>
        <summary>Converts a <see cref="T:System.Web.UI.WebControls.FontUnit" /> to an object with a different data type.</summary>
        <returns>A <see cref="T:System.Object" /> that represents the converted value.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.FontUnitConverter.ConvertTo%2A> método para converter o <xref:System.Web.UI.WebControls.FontUnit> especificado pelo `value` parâmetro a um objeto com o tipo de dados especificado pelo `destinationType` parâmetro.  
  
> [!NOTE]
>  <xref:System.String.Empty?displayProperty=nameWithType> é retornado deste método se o `value` parâmetro contém `null`. <xref:System.String.Empty?displayProperty=nameWithType> também é retornado se a <xref:System.Web.UI.WebControls.FontUnit.Type%2A> propriedade do <xref:System.Web.UI.WebControls.FontUnit> especificado pelo `value` parâmetro contém o valor `FontSize.NotSet`.  
  
> [!NOTE]
>  Esse método só pode converter um <xref:System.Web.UI.WebControls.FontUnit> para uma cadeia de caracteres.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
        <altmember cref="T:System.Web.UI.WebControls.FontUnit" />
        <altmember cref="P:System.Web.UI.WebControls.FontUnit.Type" />
        <altmember cref="F:System.String.Empty" />
        <altmember cref="T:System.Web.UI.WebControls.FontSize" />
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Type" />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FontUnitConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValues (context As ITypeDescriptorContext) As TypeConverter.StandardValuesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::TypeConverter::StandardValuesCollection ^ GetStandardValues(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetStandardValues : System.ComponentModel.ITypeDescriptorContext -&gt; System.ComponentModel.TypeConverter.StandardValuesCollection&#xA;override this.GetStandardValues : System.ComponentModel.ITypeDescriptorContext -&gt; System.ComponentModel.TypeConverter.StandardValuesCollection" Usage="fontUnitConverter.GetStandardValues context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter+StandardValuesCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides information about the context of a type converter.</param>
        <summary>Returns a <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> containing the standard values for a <see cref="T:System.Web.UI.WebControls.FontUnit" />, using the specified format context.</summary>
        <returns>A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> containing the standard values for a <see cref="T:System.Web.UI.WebControls.FontUnit" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.FontUnitConverter.GetStandardValues%2A> método para recuperar uma <xref:System.ComponentModel.TypeConverter.StandardValuesCollection?displayProperty=nameWithType> que contém os valores padrão para um <xref:System.Web.UI.WebControls.FontUnit>. Esta coleção contém todos os campos no <xref:System.Web.UI.WebControls.FontUnit> classe.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.TypeConverter.GetStandardValues" />
        <altmember cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesExclusive(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FontUnitConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValuesExclusive (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetStandardValuesExclusive(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetStandardValuesExclusive : System.ComponentModel.ITypeDescriptorContext -&gt; bool&#xA;override this.GetStandardValuesExclusive : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="fontUnitConverter.GetStandardValuesExclusive context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides information about the context of a type converter.</param>
        <summary>Returns whether the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> returned by the <see cref="M:System.Web.UI.WebControls.FontUnitConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> method is an exclusive list of values, using the specified format context.</summary>
        <returns>
          <see langword="false" /> for all cases.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.FontUnitConverter.GetStandardValuesExclusive%2A> método para determinar se o <xref:System.ComponentModel.TypeConverter.StandardValuesCollection?displayProperty=nameWithType> retornado pelo <xref:System.Web.UI.WebControls.FontUnitConverter.GetStandardValues%2A> método é uma lista exclusiva de valores. Esse método é substituído para retornar sempre `false` para indicar que a lista de valores não é uma lista exclusiva.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FontUnitConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValuesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetStandardValuesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetStandardValuesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool&#xA;override this.GetStandardValuesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="fontUnitConverter.GetStandardValuesSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides information about the context of a type converter.</param>
        <summary>Returns whether the instance of the <see cref="T:System.Web.UI.WebControls.FontUnitConverter" /> class that this method is called from supports a standard set of values that can be picked from a list, using the specified format context.</summary>
        <returns>
          <see langword="true" /> for all cases.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.FontUnitConverter.GetStandardValuesSupported%2A> método para determinar se a instância da <xref:System.Web.UI.WebControls.FontUnitConverter> que esse método é chamado de classe dá suporte a um conjunto padrão de valores que podem ser escolhidos em uma lista, usando o contexto de formato especificado. Esse método é substituído para retornar sempre `true` para indicar que esta classe dá suporte a um conjunto padrão de valores que podem ser escolhidos em uma lista.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
  </Members>
</Type>