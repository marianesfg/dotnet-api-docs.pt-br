<Type Name="BaseCompareValidator" FullName="System.Web.UI.WebControls.BaseCompareValidator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0421d617ac9ea112b7b76d16d190e2d9ea0e4a11" /><Meta Name="ms.sourcegitcommit" Value="c5fd6b431a16f0412349201a0e93a9eacddf4b35" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="12/14/2018" /><Meta Name="ms.locfileid" Value="53391893" /></Metadata><TypeSignature Language="C#" Value="public abstract class BaseCompareValidator : System.Web.UI.WebControls.BaseValidator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BaseCompareValidator extends System.Web.UI.WebControls.BaseValidator" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.BaseCompareValidator" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BaseCompareValidator&#xA;Inherits BaseValidator" />
  <TypeSignature Language="C++ CLI" Value="public ref class BaseCompareValidator abstract : System::Web::UI::WebControls::BaseValidator" />
  <TypeSignature Language="F#" Value="type BaseCompareValidator = class&#xA;    inherit BaseValidator" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.BaseValidator</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Serve como a classe base abstrata para os controles de validação que executam comparações tipadas.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.BaseCompareValidator> classe é herdada por todos os controles de validação que comparam valores, como o <xref:System.Web.UI.WebControls.CompareValidator> e <xref:System.Web.UI.WebControls.RangeValidator> controles, para fornecer a funcionalidade básica comum.  
  
 Use o <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A> propriedade para especificar o tipo de dados que os valores são convertidos em antes de serem comparadas.  
  
> [!NOTE]
>  Se o valor do controle de entrada que está sendo validado não pode ser convertido no tipo de dados especificado, a validação falhará. O <xref:System.Web.UI.WebControls.BaseValidator.IsValid%2A> propriedade do controle de validação é definida como `false`.  
  
 O <xref:System.Web.UI.WebControls.BaseCompareValidator> classe também contém várias propriedades e métodos estáticos que são úteis ao realizar validações de comparação. Você pode determinar se uma cadeia de caracteres pode ser convertida em um tipo de dados específico usando o <xref:System.Web.UI.WebControls.BaseCompareValidator.CanConvert%2A> método. O ano máximo que pode ser representado por um ano de dois dígitos está contido no <xref:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear%2A> propriedade. O <xref:System.Web.UI.WebControls.BaseCompareValidator.GetFullYear%2A> método permite que você converta um ano de dois dígitos em um ano de quatro dígitos.  
  
> [!NOTE]
>  Quando você usa os controles de validação que derivam do <xref:System.Web.UI.WebControls.BaseCompareValidator> controlar dentro de um <xref:System.Web.UI.UpdatePanel> de controle, verifique se o controle de validador e o controle é associado estão no mesmo panel. Para obter mais informações sobre como usar o <xref:System.Web.UI.UpdatePanel> de controle para atualizações parciais de página, consulte [visão geral de renderização parcial da página](https://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49).  
  
 Para obter mais informações sobre controles de validação, consulte <xref:System.Web.UI.WebControls.BaseValidator>.  
  
## <a name="accessibility"></a>Acessibilidade  
 A marcação processada por padrão para esse controle pode não estar em conformidade com padrões de acessibilidade, como as diretrizes de prioridade 1 conteúdo WCAG Web Accessibility Guidelines 1.0 (). Para obter detalhes sobre o suporte de acessibilidade para esse controle, consulte [controles ASP.NET e acessibilidade](https://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.CompareValidator" />
    <altmember cref="T:System.Web.UI.WebControls.RangeValidator" />
    <altmember cref="T:System.Web.UI.WebControls.BaseValidator" />
    <altmember cref="P:System.Web.UI.WebControls.BaseCompareValidator.Type" />
    <altmember cref="M:System.Web.UI.WebControls.BaseCompareValidator.CanConvert(System.String,System.Web.UI.WebControls.ValidationDataType)" />
    <altmember cref="P:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear" />
    <altmember cref="M:System.Web.UI.WebControls.BaseCompareValidator.GetFullYear(System.Int32)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BaseCompareValidator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BaseCompareValidator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.UI.WebControls.BaseCompareValidator" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Porque o <xref:System.Web.UI.WebControls.BaseCompareValidator> classe é abstrata, você não pode criar um <xref:System.Web.UI.WebControls.BaseCompareValidator> diretamente do objeto. Normalmente, esse construtor é chamado pelo construtor de uma classe derivada para inicializar as propriedades definidas no <xref:System.Web.UI.WebControls.BaseCompareValidator> classe.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.CompareValidator" />
        <altmember cref="T:System.Web.UI.WebControls.RangeValidator" />
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.AddAttributesToRender : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="baseCompareValidator.AddAttributesToRender writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Um <see cref="T:System.Web.UI.HtmlTextWriter" /> que representa o fluxo de saída para renderizar o conteúdo HTML no cliente.</param>
        <summary>Adiciona os estilos e atributos HTML que precisam ser renderizados para o controle para o objeto <see cref="T:System.Web.UI.HtmlTextWriter" /> especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.BaseCompareValidator.AddAttributesToRender%2A> método é usado para renderizar os atributos do controle na marca HTML para o controle. Esse método é normalmente substituído por desenvolvedores de controle em classes derivadas para inserir os atributos apropriados e estilos para o <xref:System.Web.UI.HtmlTextWriter> fluxo de saída para um controle.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Ao substituir o <see cref="M:System.Web.UI.WebControls.BaseCompareValidator.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" /> método, certifique-se de chamar o método correspondente na classe base. Caso contrário, os atributos contidos na classe base não serão renderizados.</para></block>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CanConvert">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Determina se a cadeia de caracteres especificada pode ser convertida no tipo de dados especificado.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanConvert">
      <MemberSignature Language="C#" Value="public static bool CanConvert (string text, System.Web.UI.WebControls.ValidationDataType type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanConvert(string text, valuetype System.Web.UI.WebControls.ValidationDataType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.CanConvert(System.String,System.Web.UI.WebControls.ValidationDataType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CanConvert (text As String, type As ValidationDataType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool CanConvert(System::String ^ text, System::Web::UI::WebControls::ValidationDataType type);" />
      <MemberSignature Language="F#" Value="static member CanConvert : string * System.Web.UI.WebControls.ValidationDataType -&gt; bool" Usage="System.Web.UI.WebControls.BaseCompareValidator.CanConvert (text, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="type" Type="System.Web.UI.WebControls.ValidationDataType" />
      </Parameters>
      <Docs>
        <param name="text">A cadeia de caracteres a ser testada.</param>
        <param name="type">Um dos valores de <see cref="T:System.Web.UI.WebControls.ValidationDataType" />.</param>
        <summary>Determina se a cadeia de caracteres especificada pode ser convertida no tipo de dados especificado. Esta versão do método sobrecarregado testa os valores de moeda, de duplo e de data usando o formato usado pela cultura atual.</summary>
        <returns><see langword="true" /> se a cadeia de caracteres de dados especificada puder ser convertida no tipo de dados especificado; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.BaseCompareValidator.CanConvert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%29> método para determinar se a cadeia de caracteres especificada pode ser convertida no tipo de dados especificado. Esse método é normalmente usado para testar se uma cadeia de caracteres pode ser convertida em um tipo de dados compatíveis antes de executar uma operação que depende do tipo de dados.  
  
 Esta versão do método testa o valor usando o formato usado pela cultura atual. Para testar o valor usando um formato de cultura neutra, use o <xref:System.Web.UI.WebControls.BaseCompareValidator.CanConvert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%2CSystem.Boolean%29?displayProperty=nameWithType> sobrecarregado versão desse método.  
  
   
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.Web.UI.WebControls.BaseCompareValidator.CanConvert%2A> método para comparar dois valores inteiros e determinar se o segundo inteiro pode ser convertido.  
  
 [!code-aspx-csharp[BaseCompareValidatorCanConvert#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BaseCompareValidatorCanConvert/CS/basecomparevalidatorcanconvertcs.aspx#1)]
 [!code-aspx-vb[BaseCompareValidatorCanConvert#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BaseCompareValidatorCanConvert/VB/basecomparevalidatorcanconvertvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ValidationDataType" />
        <altmember cref="P:System.Web.UI.WebControls.BaseCompareValidator.CultureInvariantValues" />
        <altmember cref="Overload:System.Web.UI.WebControls.BaseCompareValidator.Convert" />
      </Docs>
    </Member>
    <Member MemberName="CanConvert">
      <MemberSignature Language="C#" Value="public static bool CanConvert (string text, System.Web.UI.WebControls.ValidationDataType type, bool cultureInvariant);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanConvert(string text, valuetype System.Web.UI.WebControls.ValidationDataType type, bool cultureInvariant) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.CanConvert(System.String,System.Web.UI.WebControls.ValidationDataType,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CanConvert (text As String, type As ValidationDataType, cultureInvariant As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool CanConvert(System::String ^ text, System::Web::UI::WebControls::ValidationDataType type, bool cultureInvariant);" />
      <MemberSignature Language="F#" Value="static member CanConvert : string * System.Web.UI.WebControls.ValidationDataType * bool -&gt; bool" Usage="System.Web.UI.WebControls.BaseCompareValidator.CanConvert (text, type, cultureInvariant)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="type" Type="System.Web.UI.WebControls.ValidationDataType" />
        <Parameter Name="cultureInvariant" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="text">A cadeia de caracteres a ser testada.</param>
        <param name="type">Um dos valores de enumeração <see cref="T:System.Web.UI.WebControls.ValidationDataType" />.</param>
        <param name="cultureInvariant"><see langword="true" /> para testar valores usando um formato de cultura neutra; caso contrário, <see langword="false" />.</param>
        <summary>Determina se a cadeia de caracteres especificada pode ser convertida no tipo de dados especificado. Esta versão do método sobrecarregado permite que você especifique se os valores são testados usando um formato de cultura neutra.</summary>
        <returns><see langword="true" /> se a cadeia de caracteres de dados especificada puder ser convertida no tipo de dados especificado; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.BaseCompareValidator.CanConvert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%2CSystem.Boolean%29> método para determinar se a cadeia de caracteres especificada pode ser convertida no tipo de dados especificado. Esse método é normalmente usado para testar se uma cadeia de caracteres pode ser convertida em um tipo de dados compatíveis antes de executar uma operação que depende do tipo de dados. Para indicar que os valores devem ser testados usando um formato de cultura neutra, passe `true` para o `cultureInvariant` parâmetro; caso contrário, os valores são testados usando o formato usado pela cultura atual. Ao testar um valor usando o formato usado pela cultura atual, considere usar o <xref:System.Web.UI.WebControls.BaseCompareValidator.CanConvert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%29?displayProperty=nameWithType> sobrecarregado versão desse método.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ValidationDataType" />
        <altmember cref="P:System.Web.UI.WebControls.BaseCompareValidator.CultureInvariantValues" />
        <altmember cref="Overload:System.Web.UI.WebControls.BaseCompareValidator.Convert" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Compare">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Compara duas cadeias de caracteres usando o operador e o tipo de dados de validação especificados.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="protected static bool Compare (string leftText, string rightText, System.Web.UI.WebControls.ValidationCompareOperator op, System.Web.UI.WebControls.ValidationDataType type);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig bool Compare(string leftText, string rightText, valuetype System.Web.UI.WebControls.ValidationCompareOperator op, valuetype System.Web.UI.WebControls.ValidationDataType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.Compare(System.String,System.String,System.Web.UI.WebControls.ValidationCompareOperator,System.Web.UI.WebControls.ValidationDataType)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function Compare (leftText As String, rightText As String, op As ValidationCompareOperator, type As ValidationDataType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static bool Compare(System::String ^ leftText, System::String ^ rightText, System::Web::UI::WebControls::ValidationCompareOperator op, System::Web::UI::WebControls::ValidationDataType type);" />
      <MemberSignature Language="F#" Value="static member Compare : string * string * System.Web.UI.WebControls.ValidationCompareOperator * System.Web.UI.WebControls.ValidationDataType -&gt; bool" Usage="System.Web.UI.WebControls.BaseCompareValidator.Compare (leftText, rightText, op, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="leftText" Type="System.String" />
        <Parameter Name="rightText" Type="System.String" />
        <Parameter Name="op" Type="System.Web.UI.WebControls.ValidationCompareOperator" />
        <Parameter Name="type" Type="System.Web.UI.WebControls.ValidationDataType" />
      </Parameters>
      <Docs>
        <param name="leftText">O valor no lado esquerdo do operador.</param>
        <param name="rightText">O valor no lado direito do operador.</param>
        <param name="op">Um dos valores de <see cref="T:System.Web.UI.WebControls.ValidationCompareOperator" />.</param>
        <param name="type">Um dos valores de <see cref="T:System.Web.UI.WebControls.ValidationDataType" />.</param>
        <summary>Compara duas cadeias de caracteres usando o operador e o tipo de dados especificados. A versão do método sobrecarregado compara os valores de moeda, de duplo e de data usando o formato usado pela cultura atual.</summary>
        <returns><see langword="true" /> se o parâmetro <paramref name="leftValue" /> se relacionar ao parâmetro <paramref name="rightValue" /> da maneira especificada pelo parâmetro <paramref name="op" />; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.BaseCompareValidator.Compare%28System.String%2CSystem.String%2CSystem.Web.UI.WebControls.ValidationCompareOperator%2CSystem.Web.UI.WebControls.ValidationDataType%29> método é usado para testar se o valor da `leftText` parâmetro está relacionado ao valor da `rightText` parâmetro da maneira especificada pelo `op` parâmetro. O `type` parâmetro especifica o tipo de dados dos valores que estão sendo comparados.  
  
> [!NOTE]
>  Se o `op` parâmetro é definido como `ValidationCompareOperator.DataTypeCheck`, este método testa apenas o valor da `leftText` parâmetro para o tipo de dados especificado pelo `type` parâmetro. O `rightText` parâmetro será ignorado.  
  
 Esta versão do método compara os valores usando o formato usado pela cultura atual. Para comparar os valores usando um formato de cultura neutra, use o <xref:System.Web.UI.WebControls.BaseCompareValidator.Compare%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Boolean%2CSystem.Web.UI.WebControls.ValidationCompareOperator%2CSystem.Web.UI.WebControls.ValidationDataType%29?displayProperty=nameWithType> sobrecarregado versão desse método.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ValidationCompareOperator" />
        <altmember cref="T:System.Web.UI.WebControls.ValidationDataType" />
        <altmember cref="M:System.Web.UI.WebControls.BaseCompareValidator.Convert(System.String,System.Web.UI.WebControls.ValidationDataType,System.Object@)" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="protected static bool Compare (string leftText, bool cultureInvariantLeftText, string rightText, bool cultureInvariantRightText, System.Web.UI.WebControls.ValidationCompareOperator op, System.Web.UI.WebControls.ValidationDataType type);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig bool Compare(string leftText, bool cultureInvariantLeftText, string rightText, bool cultureInvariantRightText, valuetype System.Web.UI.WebControls.ValidationCompareOperator op, valuetype System.Web.UI.WebControls.ValidationDataType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.Compare(System.String,System.Boolean,System.String,System.Boolean,System.Web.UI.WebControls.ValidationCompareOperator,System.Web.UI.WebControls.ValidationDataType)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function Compare (leftText As String, cultureInvariantLeftText As Boolean, rightText As String, cultureInvariantRightText As Boolean, op As ValidationCompareOperator, type As ValidationDataType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static bool Compare(System::String ^ leftText, bool cultureInvariantLeftText, System::String ^ rightText, bool cultureInvariantRightText, System::Web::UI::WebControls::ValidationCompareOperator op, System::Web::UI::WebControls::ValidationDataType type);" />
      <MemberSignature Language="F#" Value="static member Compare : string * bool * string * bool * System.Web.UI.WebControls.ValidationCompareOperator * System.Web.UI.WebControls.ValidationDataType -&gt; bool" Usage="System.Web.UI.WebControls.BaseCompareValidator.Compare (leftText, cultureInvariantLeftText, rightText, cultureInvariantRightText, op, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="leftText" Type="System.String" />
        <Parameter Name="cultureInvariantLeftText" Type="System.Boolean" />
        <Parameter Name="rightText" Type="System.String" />
        <Parameter Name="cultureInvariantRightText" Type="System.Boolean" />
        <Parameter Name="op" Type="System.Web.UI.WebControls.ValidationCompareOperator" />
        <Parameter Name="type" Type="System.Web.UI.WebControls.ValidationDataType" />
      </Parameters>
      <Docs>
        <param name="leftText">O valor no lado esquerdo do operador.</param>
        <param name="cultureInvariantLeftText"><see langword="true" /> para converter o valor no lado esquerdo em um formato de cultura neutra; caso contrário, <see langword="false" />.</param>
        <param name="rightText">O valor no lado direito do operador.</param>
        <param name="cultureInvariantRightText"><see langword="true" /> para converter o valor no lado direito em um formato de cultura neutra; caso contrário, <see langword="false" />.</param>
        <param name="op">Um dos valores de <see cref="T:System.Web.UI.WebControls.ValidationCompareOperator" />.</param>
        <param name="type">Um dos valores de <see cref="T:System.Web.UI.WebControls.ValidationDataType" />.</param>
        <summary>Compara duas cadeias de caracteres usando o operador e o tipo de dados de validação especificados. Esta versão da sobrecarga permite que você especifique se os valores são comparados usando um formato de cultura neutra.</summary>
        <returns><see langword="true" /> se o parâmetro <paramref name="leftValue" /> se relacionar ao parâmetro <paramref name="rightValue" /> da maneira especificada pelo parâmetro <paramref name="op" />; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.BaseCompareValidator.Compare%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Boolean%2CSystem.Web.UI.WebControls.ValidationCompareOperator%2CSystem.Web.UI.WebControls.ValidationDataType%29> método é usado para testar se o valor da `leftText` parâmetro está relacionado ao valor da `rightText` parâmetro da maneira especificada pelo `op` parâmetro. O `type` parâmetro especifica o tipo de dados dos valores que estão sendo comparados.  
  
> [!NOTE]
>  Se o `op` parâmetro é definido como `ValidationCompareOperator.DataTypeCheck`, este método testa apenas o valor da `leftText` parâmetro para o tipo de dados especificado pelo `type` parâmetro. O `rightText` parâmetro será ignorado.  
  
 Para indicar que os valores devem ser comparados usando um formato de cultura neutra, passe `true` para o `cultureInvariantLeftText` e `cultureInvariantRightText` parâmetros; caso contrário, os valores são comparados usando o formato usado pela cultura atual. Ao comparar valores usando o formato usado pela cultura atual, considere usar o <xref:System.Web.UI.WebControls.BaseCompareValidator.Compare%28System.String%2CSystem.String%2CSystem.Web.UI.WebControls.ValidationCompareOperator%2CSystem.Web.UI.WebControls.ValidationDataType%29?displayProperty=nameWithType> sobrecarregado versão desse método.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ValidationCompareOperator" />
        <altmember cref="T:System.Web.UI.WebControls.ValidationDataType" />
        <altmember cref="M:System.Web.UI.WebControls.BaseCompareValidator.Convert(System.String,System.Web.UI.WebControls.ValidationDataType,System.Object@)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Convert">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Converte o texto especificado em um objeto do tipo de dados especificado.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="protected static bool Convert (string text, System.Web.UI.WebControls.ValidationDataType type, out object value);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig bool Convert(string text, valuetype System.Web.UI.WebControls.ValidationDataType type, [out] object&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.Convert(System.String,System.Web.UI.WebControls.ValidationDataType,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function Convert (text As String, type As ValidationDataType, ByRef value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static bool Convert(System::String ^ text, System::Web::UI::WebControls::ValidationDataType type, [Runtime::InteropServices::Out] System::Object ^ % value);" />
      <MemberSignature Language="F#" Value="static member Convert : string * System.Web.UI.WebControls.ValidationDataType *  -&gt; bool" Usage="System.Web.UI.WebControls.BaseCompareValidator.Convert (text, type, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="type" Type="System.Web.UI.WebControls.ValidationDataType" />
        <Parameter Name="value" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="text">O texto a ser convertido.</param>
        <param name="type">Um dos valores de <see cref="T:System.Web.UI.WebControls.ValidationDataType" />.</param>
        <param name="value">Quando esse método retorna, contém um objeto com o resultado da conversão. Este parâmetro é passado não inicializado.</param>
        <summary>Converte o texto especificado em um objeto do tipo de dados especificado. Essa versão do método sobrecarregado converte os valores de moeda, de duplo e de data usando o formato usado pela cultura atual.</summary>
        <returns><see langword="true" /> se a conversão for bem-sucedida; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.BaseCompareValidator.Convert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%2CSystem.Object%40%29> método é usado para converter texto em um objeto do tipo de dados especificado. Embora o método retornará `true` ou `false` para indicar se a conversão foi bem-sucedida, o valor convertido é armazenado na `value` `out` parâmetro.  
  
> [!NOTE]
>  Se a conversão for bem-sucedida, o `value` parâmetro é definido como `null`.  
  
 Esta versão do método converte os valores usando o formato usado pela cultura atual. Para converter valores usando um formato de cultura neutra, use o <xref:System.Web.UI.WebControls.BaseCompareValidator.Convert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%2CSystem.Boolean%2CSystem.Object%40%29?displayProperty=nameWithType> sobrecarregado versão desse método.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ValidationDataType" />
        <altmember cref="M:System.Web.UI.WebControls.BaseCompareValidator.Compare(System.String,System.String,System.Web.UI.WebControls.ValidationCompareOperator,System.Web.UI.WebControls.ValidationDataType)" />
      </Docs>
    </Member>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="protected static bool Convert (string text, System.Web.UI.WebControls.ValidationDataType type, bool cultureInvariant, out object value);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig bool Convert(string text, valuetype System.Web.UI.WebControls.ValidationDataType type, bool cultureInvariant, [out] object&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.Convert(System.String,System.Web.UI.WebControls.ValidationDataType,System.Boolean,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function Convert (text As String, type As ValidationDataType, cultureInvariant As Boolean, ByRef value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static bool Convert(System::String ^ text, System::Web::UI::WebControls::ValidationDataType type, bool cultureInvariant, [Runtime::InteropServices::Out] System::Object ^ % value);" />
      <MemberSignature Language="F#" Value="static member Convert : string * System.Web.UI.WebControls.ValidationDataType * bool *  -&gt; bool" Usage="System.Web.UI.WebControls.BaseCompareValidator.Convert (text, type, cultureInvariant, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="type" Type="System.Web.UI.WebControls.ValidationDataType" />
        <Parameter Name="cultureInvariant" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="text">O texto a ser convertido.</param>
        <param name="type">Um dos valores de <see cref="T:System.Web.UI.WebControls.ValidationDataType" />.</param>
        <param name="cultureInvariant"><see langword="true" /> para converter valores em um formato de cultura neutra; caso contrário, <see langword="false" />.</param>
        <param name="value">Quando esse método retorna, contém um objeto com o resultado da conversão. Este parâmetro é passado não inicializado.</param>
        <summary>Converte o texto especificado em um objeto do tipo de dados especificado. Esta versão do método sobrecarregado permite que você especifique se os valores são convertidos usando um formato de cultura neutra.</summary>
        <returns><see langword="true" /> se a conversão for bem-sucedida; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.BaseCompareValidator.Convert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%2CSystem.Boolean%2CSystem.Object%40%29> método é usado para converter texto em um objeto do tipo de dados especificado. Embora o método retornará `true` ou `false` para indicar se a conversão foi bem-sucedida, o valor convertido é armazenado na `value` `out` parâmetro.  
  
> [!NOTE]
>  Se a conversão for bem-sucedida, o `value` parâmetro é definido como `null`.  
  
 Para indicar que os valores devem ser convertidos usando um formato de cultura neutra, passe `true` para o `cultureInvariant` parâmetro; caso contrário, valores são convertidos usando o formato usado pela cultura atual. Ao converter um valor usando o formato usado pela cultura atual, considere usar o <xref:System.Web.UI.WebControls.BaseCompareValidator.Convert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%2CSystem.Object%40%29?displayProperty=nameWithType> sobrecarregado versão desse método.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ValidationDataType" />
        <altmember cref="M:System.Web.UI.WebControls.BaseCompareValidator.Compare(System.String,System.String,System.Web.UI.WebControls.ValidationCompareOperator,System.Web.UI.WebControls.ValidationDataType)" />
      </Docs>
    </Member>
    <Member MemberName="CultureInvariantValues">
      <MemberSignature Language="C#" Value="public bool CultureInvariantValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CultureInvariantValues" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseCompareValidator.CultureInvariantValues" />
      <MemberSignature Language="VB.NET" Value="Public Property CultureInvariantValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CultureInvariantValues { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CultureInvariantValues : bool with get, set" Usage="System.Web.UI.WebControls.BaseCompareValidator.CultureInvariantValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se os valores são convertidos em um formato com neutralidade cultural antes que eles sejam comparados.</summary>
        <value><see langword="true" /> para converter valores em um formato com neutralidade cultural antes que eles sejam comparados; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando o <xref:System.Web.UI.WebControls.BaseCompareValidator.CultureInvariantValues%2A> estiver definida como `true`, propriedades do controle que não são fortemente tipadas são convertidas em um formato de cultura neutra antes de serem comparadas. Quando essa propriedade é definida como `false`, valores são convertidos para o formato da cultura atual. O <xref:System.Web.UI.WebControls.BaseCompareValidator.CultureInvariantValues%2A> propriedade não afeta os valores que são inseridos pelos usuários do controle em uma página da Web.  
  
 Essa propriedade não pode ser definida por temas ou por temas de folha de estilo. Para obter mais informações, consulte <xref:System.Web.UI.ThemeableAttribute> e [capas e temas do ASP.NET](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
        <altmember cref="T:System.Globalization.NumberFormatInfo" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrentInfo" />
        <related type="Article" href="https://msdn.microsoft.com/library/e6e2bb94-a95d-44e2-b68c-cfdd1db77784">Operações de cadeia de caracteres que não levam em conta a cultura</related>
      </Docs>
    </Member>
    <Member MemberName="CutoffYear">
      <MemberSignature Language="C#" Value="protected static int CutoffYear { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 CutoffYear" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly Property CutoffYear As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static property int CutoffYear { int get(); };" />
      <MemberSignature Language="F#" Value="member this.CutoffYear : int" Usage="System.Web.UI.WebControls.BaseCompareValidator.CutoffYear" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o ano máximo que pode ser representado por um ano de dois dígitos.</summary>
        <value>O ano máximo que pode ser representado por um ano de dois dígitos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear%2A> propriedade para determinar o ano máximo que pode ser representado por um ano de dois dígitos em um intervalo de 100 anos. Por exemplo, se essa propriedade contém o valor `2029`, você pode representar os anos 1930 a 2029 usando um ano de dois dígitos. O ano de dois dígitos 30 é interpretado como 1930, enquanto 29 é interpretado como 2029. Você não pode alterar o valor dessa propriedade diretamente. No entanto, você pode alterar o ano máximo que pode ser representado por um ano de dois dígitos, definindo o <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType> propriedade.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.Calendar" />
        <altmember cref="P:System.Globalization.Calendar.TwoDigitYearMax" />
      </Docs>
    </Member>
    <Member MemberName="DetermineRenderUplevel">
      <MemberSignature Language="C#" Value="protected override bool DetermineRenderUplevel ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool DetermineRenderUplevel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.DetermineRenderUplevel" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function DetermineRenderUplevel () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool DetermineRenderUplevel();" />
      <MemberSignature Language="F#" Value="override this.DetermineRenderUplevel : unit -&gt; bool" Usage="baseCompareValidator.DetermineRenderUplevel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Determina se o controle de validação pode ser renderizado para um navegador mais recente ("nível superior").</summary>
        <returns><see langword="true" /> se o controle de validação puder ser renderizado para um navegador de "nível superior"; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.BaseCompareValidator.DetermineRenderUplevel%2A> método é uma função auxiliar usada principalmente pelo <xref:System.Web.UI.WebControls.BaseValidator.RenderUplevel%2A> propriedade para determinar se o navegador do cliente dá suporte à renderização de "nível superior" (renderização em um navegador mais recente). O <xref:System.Web.UI.WebControls.BaseCompareValidator> classe substitui esse método para retornar `false` se a cultura atual usa um calendário não gregoriano.  
  
> [!NOTE]
>  Esse método é usado principalmente por desenvolvedores de controle.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Ao substituir o <see cref="M:System.Web.UI.WebControls.BaseCompareValidator.DetermineRenderUplevel" /> método, certifique-se de chamar o método correspondente na classe base. Caso contrário, as condições definidas na classe base serão ignoradas.</para></block>
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.RenderUplevel" />
      </Docs>
    </Member>
    <Member MemberName="GetDateElementOrder">
      <MemberSignature Language="C#" Value="protected static string GetDateElementOrder ();" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig string GetDateElementOrder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.GetDateElementOrder" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetDateElementOrder () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::String ^ GetDateElementOrder();" />
      <MemberSignature Language="F#" Value="static member GetDateElementOrder : unit -&gt; string" Usage="System.Web.UI.WebControls.BaseCompareValidator.GetDateElementOrder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Determina a ordem na qual o mês, o dia e o ano são exibidos em um valor de data para a cultura atual.</summary>
        <returns>Uma cadeia de caracteres que representa a ordem na qual o mês, o dia e o ano são exibidos em um valor de data para a cultura atual.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ano do valor de data, mês e dia podem aparecer em ordens diferentes, dependendo das configurações de cultura atual. O <xref:System.Web.UI.WebControls.BaseCompareValidator.GetDateElementOrder%2A> método é usado para determinar a ordem na qual esses valores são exibidos. A tabela a seguir mostra os diferentes valores retornados por esse método.  
  
|Ordem de elemento de data|Valor retornado|  
|------------------------|------------------|  
|Dia, mês, ano|"dmy."|  
|Dia, mês, ano|"mdy"|  
|Ano, mês, dia|"ymd"|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DateTime" />
        <altmember cref="P:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear" />
        <altmember cref="M:System.Web.UI.WebControls.BaseCompareValidator.GetFullYear(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetFullYear">
      <MemberSignature Language="C#" Value="protected static int GetFullYear (int shortYear);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig int32 GetFullYear(int32 shortYear) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.GetFullYear(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetFullYear (shortYear As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static int GetFullYear(int shortYear);" />
      <MemberSignature Language="F#" Value="static member GetFullYear : int -&gt; int" Usage="System.Web.UI.WebControls.BaseCompareValidator.GetFullYear shortYear" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shortYear" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="shortYear">Um ano com dois dígitos.</param>
        <summary>Gera a representação do ano com quatro dígitos do ano com dois dígitos especificado.</summary>
        <returns>A representação do ano com quatro dígitos do ano com dois dígitos especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.BaseCompareValidator.GetFullYear%2A> método para gerar a representação de ano de quatro dígitos do ano de dois dígitos especificado. A representação de ano de quatro dígitos depende do valor da <xref:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear%2A> propriedade, que contém o ano máximo que pode ser representado por um ano de dois dígitos em um intervalo de 100 anos. Por exemplo, se o <xref:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear%2A> propriedade contém o valor `2029`, o <xref:System.Web.UI.WebControls.BaseCompareValidator.GetFullYear%2A> método retorna um ano entre 1930 e 2029. O ano de dois dígitos 30 é interpretado como 1930, enquanto 29 é interpretado como 2029. Você pode alterar o ano máximo que pode ser representado por um ano de dois dígitos, definindo o <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType> propriedade.  
  
> [!NOTE]
>  Como esse método é `static`, você pode usá-lo sem criar uma instância da classe qualificando o nome do método junto com o nome de classe – por exemplo, `BaseCompareValidator.GetFullYear`.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear" />
        <altmember cref="T:System.Globalization.Calendar" />
        <altmember cref="P:System.Globalization.Calendar.TwoDigitYearMax" />
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ValidationDataType Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ValidationDataType Type" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseCompareValidator.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As ValidationDataType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ValidationDataType Type { System::Web::UI::WebControls::ValidationDataType get(); void set(System::Web::UI::WebControls::ValidationDataType value); };" />
      <MemberSignature Language="F#" Value="member this.Type : System.Web.UI.WebControls.ValidationDataType with get, set" Usage="System.Web.UI.WebControls.BaseCompareValidator.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ValidationDataType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o tipo de dados para os quais os valores que estão sendo comparados são convertidos, antes de fazer a comparação.</summary>
        <value>Um dos valores de enumeração <see cref="T:System.Web.UI.WebControls.ValidationDataType" />. O valor padrão é <see langword="String" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A> propriedade para especificar o tipo de dados usado para comparação. O <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A> propriedade é usada diferentemente pelos diversos controles de validação de comparação.  
  
> [!IMPORTANT]
>  Quando o <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A> estiver definida como <xref:System.Web.UI.WebControls.ValidationDataType.Date> e o tipo de calendário atual é não gregorianos, o validador executa somente a validação do lado do servidor. O script de cliente de validador dá suporte a somente os calendários gregoriano.  
  
 Por exemplo, no <xref:System.Web.UI.WebControls.RangeValidator> controle, todos os valores que estão sendo comparados (o limite superior, o limite inferior e o valor do controle de entrada) são convertidas em tipo de dados especificado antes que qualquer comparação seja executada. No entanto, se você usar um <xref:System.Web.UI.WebControls.CompareValidator> controle e defina sua <xref:System.Web.UI.WebControls.CompareValidator.Operator%2A> propriedade `ValidationCompareOperator.DataTypeCheck`, apenas o valor do controle de entrada é convertido em tipo de dados especificado.  
  
> [!NOTE]
>  Se o valor do controle de entrada associado ao controle de validação não pode ser convertido no tipo de dados especificado, a validação falhará. O <xref:System.Web.UI.WebControls.BaseValidator.IsValid%2A> propriedade do controle de validação é definida como `false`.  
  
 A tabela a seguir lista os valores que você pode usar para o <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A> propriedade.  
  
|Tipo de dados|Descrição|  
|---------------|-----------------|  
|`String`|Especifica um tipo de dados de cadeia de caracteres.|  
|`Integer`|Especifica um tipo de dados inteiro com sinal de 32 bits.|  
|`Double`|Especifica um tipo numérico ponto flutuante dados de precisão dupla.|  
|`Date`|Especifica um tipo de dados de data.|  
|`Currency`|Especifica um tipo de dados monetários.|  
  
 Essa propriedade não pode ser definida por temas ou temas de folha de estilo. Para obter mais informações, consulte <xref:System.Web.UI.ThemeableAttribute> e [capas e temas do ASP.NET](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A> propriedade para especificar o tipo de dados que os valores que estão sendo comparados são convertidos em antes da comparação é feita.  
  
 [!code-aspx-csharp[Classic CompareValidator Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CompareValidator Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic CompareValidator Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CompareValidator Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">O tipo de dados especificado não é um dos valores <see cref="T:System.Web.UI.WebControls.ValidationDataType" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.ValidationDataType" />
      </Docs>
    </Member>
  </Members>
</Type>