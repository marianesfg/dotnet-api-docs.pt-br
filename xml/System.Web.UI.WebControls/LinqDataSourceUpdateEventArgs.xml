<Type Name="LinqDataSourceUpdateEventArgs" FullName="System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5a1b8bd0b4efda23c6f0ffd2b416b4ead20d2a15" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51862876" /></Metadata><TypeSignature Language="C#" Value="public class LinqDataSourceUpdateEventArgs : System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LinqDataSourceUpdateEventArgs extends System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class LinqDataSourceUpdateEventArgs&#xA;Inherits CancelEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class LinqDataSourceUpdateEventArgs : System::ComponentModel::CancelEventArgs" />
  <TypeSignature Language="F#" Value="type LinqDataSourceUpdateEventArgs = class&#xA;    inherit CancelEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.CancelEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a7c3d-101">Fornece dados para o evento de <see cref="E:System.Web.UI.WebControls.LinqDataSource.Updating" /> .</span><span class="sxs-lookup"><span data-stu-id="a7c3d-101">Provides data for the <see cref="E:System.Web.UI.WebControls.LinqDataSource.Updating" /> event.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c3d-102">O <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs> objeto é passado para qualquer manipulador de eventos para o <xref:System.Web.UI.WebControls.LinqDataSource.Updating> eventos.</span><span class="sxs-lookup"><span data-stu-id="a7c3d-102">The <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs> object is passed to any event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event.</span></span> <span data-ttu-id="a7c3d-103">Você pode usar o <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs> objeto para examinar os dados antes da operação de atualização é executada na fonte de dados.</span><span class="sxs-lookup"><span data-stu-id="a7c3d-103">You can use the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs> object to examine the data before the update operation is executed in the data source.</span></span> <span data-ttu-id="a7c3d-104">Você pode validar os dados, examine as exceções de validação geradas por classe de dados ou alterar um valor antes da atualização.</span><span class="sxs-lookup"><span data-stu-id="a7c3d-104">You can then validate the data, examine validation exceptions thrown by the data class, or change a value before the update.</span></span> <span data-ttu-id="a7c3d-105">Você também pode cancelar a operação de atualização.</span><span class="sxs-lookup"><span data-stu-id="a7c3d-105">You can also cancel the update operation.</span></span>  
  
 <span data-ttu-id="a7c3d-106">O <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> objeto contém os dados que foram originalmente recuperados da fonte de dados.</span><span class="sxs-lookup"><span data-stu-id="a7c3d-106">The <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> object contains the data that was originally retrieved from the data source.</span></span> <span data-ttu-id="a7c3d-107">O <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> objeto contém os dados que serão salvos na fonte de dados durante a operação de atualização.</span><span class="sxs-lookup"><span data-stu-id="a7c3d-107">The <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> object contains the data that will be saved in the data source during the update operation.</span></span>  
  
 <span data-ttu-id="a7c3d-108">Se o objeto que representa a fonte de dados gera uma exceção de validação antes de atualizar os dados, o <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A> propriedade contém uma instância da <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> classe.</span><span class="sxs-lookup"><span data-stu-id="a7c3d-108">If the object that represents the data source throws a validation exception before updating the data, the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A> property contains an instance of the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> class.</span></span> <span data-ttu-id="a7c3d-109">Você pode recuperar todas as exceções de validação por meio de <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="a7c3d-109">You can retrieve all the validation exceptions through the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> property.</span></span> <span data-ttu-id="a7c3d-110">Se nenhuma exceção de validação for lançada, o <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A> propriedade contém `null`.</span><span class="sxs-lookup"><span data-stu-id="a7c3d-110">If no validation exception is thrown, the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A> property contains `null`.</span></span> <span data-ttu-id="a7c3d-111">Se você tratar as exceções de validação e não quiser que a exceção ser gerada novamente, defina as <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled%2A> propriedade para `true`.</span><span class="sxs-lookup"><span data-stu-id="a7c3d-111">If you handle the validation exceptions and do not want the exception to be re-thrown, set the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled%2A> property to `true`.</span></span>  
  
 <span data-ttu-id="a7c3d-112">Por padrão, o <xref:System.Web.UI.WebControls.LinqDataSource> repositórios de controle valores originais da fonte de dados no modo de exibição de estado na página da Web, exceto aqueles cujo <xref:System.Data.Linq.Mapping.ColumnAttribute> atributo está marcado como `UpdateCheck.Never`.</span><span class="sxs-lookup"><span data-stu-id="a7c3d-112">By default, the <xref:System.Web.UI.WebControls.LinqDataSource> control stores the original values from the data source in view state on the Web page, except those whose <xref:System.Data.Linq.Mapping.ColumnAttribute> attribute is marked as `UpdateCheck.Never`.</span></span> <span data-ttu-id="a7c3d-113">O LINQ to SQL verifica automaticamente a integridade dos dados antes de atualizar os dados.</span><span class="sxs-lookup"><span data-stu-id="a7c3d-113">LINQ to SQL automatically checks the integrity of the data before updating the data.</span></span> <span data-ttu-id="a7c3d-114">Ele faz isso comparando os valores atuais na fonte de dados com os valores originais armazenados no estado de exibição.</span><span class="sxs-lookup"><span data-stu-id="a7c3d-114">It does this by comparing the current values in the data source with the original values stored in view state.</span></span> <span data-ttu-id="a7c3d-115">O LINQ to SQL gera uma exceção se os valores na fonte de dados foram alterados.</span><span class="sxs-lookup"><span data-stu-id="a7c3d-115">LINQ to SQL raises an exception if the values in the data source have changed.</span></span> <span data-ttu-id="a7c3d-116">Você pode executar a validação de dados adicionais, criando um manipulador para o <xref:System.Web.UI.WebControls.LinqDataSource.Updating> eventos.</span><span class="sxs-lookup"><span data-stu-id="a7c3d-116">You can perform additional data validation by creating a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7c3d-117">O exemplo a seguir mostra um manipulador de eventos para o <xref:System.Web.UI.WebControls.LinqDataSource.Updating> eventos.</span><span class="sxs-lookup"><span data-stu-id="a7c3d-117">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event.</span></span> <span data-ttu-id="a7c3d-118">O exemplo mostra como comparar as propriedades do <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> propriedade e o <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> propriedade para determinar se o valor no `Category` propriedade foi alterada.</span><span class="sxs-lookup"><span data-stu-id="a7c3d-118">The example shows how to compare properties from the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> property and the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> property to determine whether the value in the `Category` property has changed.</span></span> <span data-ttu-id="a7c3d-119">Nesse caso, o `CategoryChanged` propriedade do objeto na <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> estiver definida como `true`.</span><span class="sxs-lookup"><span data-stu-id="a7c3d-119">If so, the `CategoryChanged` property of the object in the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> property is set to `true`.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Updating#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Updating/cs/Default.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.Updating#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Updating/vb/Default.aspx.vb#1)]  
  
 <span data-ttu-id="a7c3d-120">O exemplo a seguir mostra um manipulador de eventos para o <xref:System.Web.UI.WebControls.LinqDataSource.Updating> eventos.</span><span class="sxs-lookup"><span data-stu-id="a7c3d-120">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event.</span></span> <span data-ttu-id="a7c3d-121">Ele exibe quaisquer mensagens de exceção de validação usando um <xref:System.Web.UI.WebControls.Label> controle.</span><span class="sxs-lookup"><span data-stu-id="a7c3d-121">It displays any validation exception messages by using a <xref:System.Web.UI.WebControls.Label> control.</span></span>  
  
```vb  
Protected Sub LinqDataSource_Updating(ByVal sender As Object, _  
        ByVal e As LinqDataSourceUpdateEventArgs)  
    If (e.Exception IsNot Nothing) Then  
        For Each innerException As KeyValuePair(Of String, Exception) _  
               In e.Exception.InnerExceptions  
            Label1.Text &= innerException.Key & ": " & _  
                innerException.Value.Message & "<br />"  
        Next  
        e.ExceptionHandled = True  
    End If  
End Sub  
```  
  
```csharp  
protected void LinqDataSource_Updating(object sender,   
        LinqDataSourceUpdateEventArgs e)  
{  
    if (e.Exception != null)  
    {  
        foreach (KeyValuePair<string, Exception> innerException in   
             e.Exception.InnerExceptions)  
        {  
        Label1.Text += innerException.Key + ": " +   
            innerException.Value.Message + "<br />";  
        }  
        e.ExceptionHandled = true;  
    }  
}  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/73d13345-eece-471a-af40-4cc7a2f11655"><span data-ttu-id="a7c3d-122">LINQ to SQL</span><span class="sxs-lookup"><span data-stu-id="a7c3d-122">LINQ to SQL</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a7c3d-123">Inicializa uma nova instância da classe <see cref="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs" />.</span><span class="sxs-lookup"><span data-stu-id="a7c3d-123">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceUpdateEventArgs (System.Web.UI.WebControls.LinqDataSourceValidationException exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.LinqDataSourceValidationException exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (exception As LinqDataSourceValidationException)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceUpdateEventArgs(System::Web::UI::WebControls::LinqDataSourceValidationException ^ exception);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs : System.Web.UI.WebControls.LinqDataSourceValidationException -&gt; System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs" Usage="new System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs exception" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="exception" Type="System.Web.UI.WebControls.LinqDataSourceValidationException" />
      </Parameters>
      <Docs>
        <param name="exception"><span data-ttu-id="a7c3d-124">A exceção que ocorreu durante a validação de dados a serem atualizados.</span><span class="sxs-lookup"><span data-stu-id="a7c3d-124">The exception that occurred when validating the data to update.</span></span></param>
        <summary><span data-ttu-id="a7c3d-125">Inicializa uma nova instância da classe <see cref="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs" /> com a exceção especificada.</span><span class="sxs-lookup"><span data-stu-id="a7c3d-125">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs" /> class with the specified exception.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceUpdateEventArgs (object originalObject, object newObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object originalObject, object newObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.#ctor(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (originalObject As Object, newObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceUpdateEventArgs(System::Object ^ originalObject, System::Object ^ newObject);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs : obj * obj -&gt; System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs" Usage="new System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs (originalObject, newObject)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="originalObject" Type="System.Object" />
        <Parameter Name="newObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="originalObject"><span data-ttu-id="a7c3d-126">Um objeto do tipo especificado na propriedade <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> que contém os valores iniciais recuperados da fonte de dados.</span><span class="sxs-lookup"><span data-stu-id="a7c3d-126">An object of the type specified in the <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> property that contains the initial values that were retrieved from the data source.</span></span></param>
        <param name="newObject"><span data-ttu-id="a7c3d-127">Um objeto do tipo especificado na propriedade <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> que contém os valores que serão salvos na fonte de dados.</span><span class="sxs-lookup"><span data-stu-id="a7c3d-127">An object of the type specified in the <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> property that contains the values that will be saved in the data source.</span></span></param>
        <summary><span data-ttu-id="a7c3d-128">Inicializa uma nova instância da classe <see cref="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs" />.</span><span class="sxs-lookup"><span data-stu-id="a7c3d-128">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.LinqDataSourceValidationException Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.LinqDataSourceValidationException Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As LinqDataSourceValidationException" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::LinqDataSourceValidationException ^ Exception { System::Web::UI::WebControls::LinqDataSourceValidationException ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : System.Web.UI.WebControls.LinqDataSourceValidationException" Usage="System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.LinqDataSourceValidationException</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7c3d-129">Obtém a exceção gerada enquanto os dados estavam sendo validados antes da operação de atualização.</span><span class="sxs-lookup"><span data-stu-id="a7c3d-129">Gets the exception that was thrown while the data was being validated before the update operation.</span></span></summary>
        <value><span data-ttu-id="a7c3d-130">A exceção se ocorreu um erro; Caso contrário, <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a7c3d-130">The exception, if an error occurred; otherwise, <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c3d-131">Se uma exceção de validação é gerada antes da operação de atualização é executada, a exceção é armazenada no <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="a7c3d-131">If a validation exception is raised before the update operation is performed, the exception is stored in the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A> property.</span></span> <span data-ttu-id="a7c3d-132">Em um manipulador de eventos para o <xref:System.Web.UI.WebControls.LinqDataSource.Updating> evento, você pode recuperar a exceção por meio de <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="a7c3d-132">In an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event, you can retrieve the exception through the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7c3d-133">O exemplo a seguir mostra um manipulador de eventos para o <xref:System.Web.UI.WebControls.LinqDataSource.Updating> eventos.</span><span class="sxs-lookup"><span data-stu-id="a7c3d-133">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event.</span></span> <span data-ttu-id="a7c3d-134">Ele exibe quaisquer mensagens de exceção de validação usando um <xref:System.Web.UI.WebControls.Label> controle.</span><span class="sxs-lookup"><span data-stu-id="a7c3d-134">It displays any validation exception messages by using a <xref:System.Web.UI.WebControls.Label> control.</span></span>  
  
```vb  
Protected Sub LinqDataSource_Updating(ByVal sender As Object, _  
        ByVal e As LinqDataSourceUpdateEventArgs)  
    If (e.Exception IsNot Nothing) Then  
        For Each innerException As KeyValuePair(Of String, Exception) _  
               In e.Exception.InnerExceptions  
            Label1.Text &= innerException.Key & ": " & _  
                innerException.Value.Message & "<br />"  
        Next  
        e.ExceptionHandled = True  
    End If  
End Sub  
```  
  
```csharp  
protected void LinqDataSource_Updating(object sender,   
        LinqDataSourceUpdateEventArgs e)  
{  
    if (e.Exception != null)  
    {  
        foreach (KeyValuePair<string, Exception> innerException in   
             e.Exception.InnerExceptions)  
        {  
        Label1.Text += innerException.Key + ": " +   
            innerException.Value.Message + "<br />";  
        }  
        e.ExceptionHandled = true;  
    }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionHandled : bool with get, set" Usage="System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7c3d-135">Obtém ou define um valor que indica se a exceção foi tratada e que ela não deve ser gerada novamente.</span><span class="sxs-lookup"><span data-stu-id="a7c3d-135">Gets or sets a value that indicates whether the exception was handled and that it should not be thrown again.</span></span></summary>
        <value><span data-ttu-id="a7c3d-136"><see langword="true" /> Se a exceção foi tratada; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a7c3d-136"><see langword="true" /> if the exception was handled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c3d-137">Você pode criar um manipulador de eventos para o <xref:System.Web.UI.WebControls.LinqDataSource.Updating> eventos para examinar as exceções de validação que ocorreram antes da operação de atualização.</span><span class="sxs-lookup"><span data-stu-id="a7c3d-137">You can create an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event to examine validation exceptions that occurred before the update operation.</span></span> <span data-ttu-id="a7c3d-138">Se você trata a exceção e não quiser que ele seja lançada novamente, defina as <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled%2A> propriedade para `true`.</span><span class="sxs-lookup"><span data-stu-id="a7c3d-138">If you handle the exception and do not want it to be thrown again, set the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled%2A> property to `true`.</span></span> <span data-ttu-id="a7c3d-139">Se você não definir a <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled%2A> propriedade para `true`, a exceção será propagada para o próximo manipulador de eventos na pilha de chamadas.</span><span class="sxs-lookup"><span data-stu-id="a7c3d-139">If you do not set the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled%2A> property to `true`, the exception will be propagated to the next event handler in the call stack.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7c3d-140">O exemplo a seguir mostra um manipulador de eventos para o <xref:System.Web.UI.WebControls.LinqDataSource.Updating> eventos.</span><span class="sxs-lookup"><span data-stu-id="a7c3d-140">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event.</span></span> <span data-ttu-id="a7c3d-141">Ele exibe quaisquer mensagens de exceção de validação usando um <xref:System.Web.UI.WebControls.Label> controle.</span><span class="sxs-lookup"><span data-stu-id="a7c3d-141">It displays any validation exception messages by using a <xref:System.Web.UI.WebControls.Label> control.</span></span>  
  
```vb  
Protected Sub LinqDataSource_Updating(ByVal sender As Object, _  
        ByVal e As LinqDataSourceUpdateEventArgs)  
    If (e.Exception IsNot Nothing) Then  
        For Each innerException As KeyValuePair(Of String, Exception) _  
               In e.Exception.InnerExceptions  
            Label1.Text &= innerException.Key & ": " & _  
                innerException.Value.Message & "<br />"  
        Next  
        e.ExceptionHandled = True  
    End If  
End Sub  
```  
  
```csharp  
protected void LinqDataSource_Updating(object sender,   
        LinqDataSourceUpdateEventArgs e)  
{  
    if (e.Exception != null)  
    {  
        foreach (KeyValuePair<string, Exception> innerException in   
             e.Exception.InnerExceptions)  
        {  
        Label1.Text += innerException.Key + ": " +   
            innerException.Value.Message + "<br />";  
        }  
        e.ExceptionHandled = true;  
    }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewObject">
      <MemberSignature Language="C#" Value="public object NewObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object NewObject" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NewObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ NewObject { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NewObject : obj" Usage="System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7c3d-142">Obtém o objeto que contém os valores que serão salvos na fonte de dados.</span><span class="sxs-lookup"><span data-stu-id="a7c3d-142">Gets the object that contains the values that will be saved in the data source.</span></span></summary>
        <value><span data-ttu-id="a7c3d-143">Um objeto do tipo especificado no <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> propriedade que contém os dados a serem salvos.</span><span class="sxs-lookup"><span data-stu-id="a7c3d-143">An object of the type specified in the <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> property that contains the data to save.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c3d-144">Crie um manipulador de eventos para o <xref:System.Web.UI.WebControls.LinqDataSource.Updating> eventos e como recuperar o <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> propriedade para validar os dados.</span><span class="sxs-lookup"><span data-stu-id="a7c3d-144">Create an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event and retrieve the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> property to validate the data.</span></span> <span data-ttu-id="a7c3d-145">Você também pode alterar os dados ou cancelar a operação de atualização.</span><span class="sxs-lookup"><span data-stu-id="a7c3d-145">You can also change the data or cancel the update operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7c3d-146">O exemplo a seguir mostra um manipulador de eventos para o <xref:System.Web.UI.WebControls.LinqDataSource.Updating> eventos.</span><span class="sxs-lookup"><span data-stu-id="a7c3d-146">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event.</span></span> <span data-ttu-id="a7c3d-147">O exemplo mostra como comparar as propriedades do <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> propriedade e o <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> propriedade para determinar se o valor no `Category` propriedade foi alterada.</span><span class="sxs-lookup"><span data-stu-id="a7c3d-147">The example shows how to compare properties from the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> property and the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> property to determine whether the value in the `Category` property has changed.</span></span> <span data-ttu-id="a7c3d-148">Nesse caso, o `CategoryChanged` propriedade do objeto na <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> estiver definida como `true`.</span><span class="sxs-lookup"><span data-stu-id="a7c3d-148">If so, the `CategoryChanged` property of the object in the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> property is set to `true`.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Updating#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Updating/cs/Default.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.Updating#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Updating/vb/Default.aspx.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginalObject">
      <MemberSignature Language="C#" Value="public object OriginalObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object OriginalObject" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OriginalObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ OriginalObject { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OriginalObject : obj" Usage="System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7c3d-149">Obtém o objeto que contém os valores que foram originalmente recuperados da fonte de dados.</span><span class="sxs-lookup"><span data-stu-id="a7c3d-149">Gets the object that contains the values that were originally retrieved from the data source.</span></span></summary>
        <value><span data-ttu-id="a7c3d-150">Um objeto do tipo especificado no <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> propriedade que contém os dados que foram recuperados da fonte de dados.</span><span class="sxs-lookup"><span data-stu-id="a7c3d-150">An object of the type specified in the <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> property that contains the data that was retrieved from the data source.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c3d-151">Você pode usar o <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> propriedade para verificar os valores originais com os valores atuais na fonte de dados e para cancelar a operação de atualização ou executar outra ação.</span><span class="sxs-lookup"><span data-stu-id="a7c3d-151">You can use the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> property to check the original values against the current values in the data source and to cancel the update operation or take other action.</span></span>  
  
 <span data-ttu-id="a7c3d-152">O <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> propriedade contém valores para apenas as propriedades que são mantidas na exibição de estado na página da Web.</span><span class="sxs-lookup"><span data-stu-id="a7c3d-152">The <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> property contains values for only the properties that are persisted in view state in the Web page.</span></span> <span data-ttu-id="a7c3d-153">Uma propriedade é mantida sob estas circunstâncias:</span><span class="sxs-lookup"><span data-stu-id="a7c3d-153">A property is persisted under these circumstances:</span></span>  
  
-   <span data-ttu-id="a7c3d-154">Quando ele é exibido em um controle associado a dados.</span><span class="sxs-lookup"><span data-stu-id="a7c3d-154">When it is displayed in a data-bound control.</span></span>  
  
-   <span data-ttu-id="a7c3d-155">Quando o <xref:System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck%2A?displayProperty=nameWithType> propriedade do <xref:System.Data.Linq.Mapping.ColumnAttribute?displayProperty=nameWithType> atributo é definido como `Always` ou `WhenChanged`.</span><span class="sxs-lookup"><span data-stu-id="a7c3d-155">When the <xref:System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck%2A?displayProperty=nameWithType> property of the <xref:System.Data.Linq.Mapping.ColumnAttribute?displayProperty=nameWithType> attribute is set to `Always` or `WhenChanged`.</span></span>  
  
 <span data-ttu-id="a7c3d-156">Se o <xref:System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck%2A> estiver definida como `Never` e o valor não é exibido em um controle associado a dados, o valor não é armazenado na página da Web.</span><span class="sxs-lookup"><span data-stu-id="a7c3d-156">If the <xref:System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck%2A> property is set to `Never` and the value is not displayed in a data-bound control, the value is not stored in the Web page.</span></span> <span data-ttu-id="a7c3d-157">Nesse caso, ele não pode ser atribuído a <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="a7c3d-157">In that case, it cannot be assigned to the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7c3d-158">O exemplo a seguir mostra um manipulador de eventos para o <xref:System.Web.UI.WebControls.LinqDataSource.Updating> eventos.</span><span class="sxs-lookup"><span data-stu-id="a7c3d-158">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event.</span></span> <span data-ttu-id="a7c3d-159">O exemplo mostra como comparar as propriedades do <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> propriedade e o <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> propriedade para determinar se o valor no `Category` propriedade foi alterada.</span><span class="sxs-lookup"><span data-stu-id="a7c3d-159">The example shows how to compare properties from the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> property and the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> property to determine whether the value in the `Category` property has changed.</span></span> <span data-ttu-id="a7c3d-160">Nesse caso, o `CategoryChanged` propriedade do objeto na <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> estiver definida como `true`.</span><span class="sxs-lookup"><span data-stu-id="a7c3d-160">If so, the `CategoryChanged` property of the object in the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> property is set to `true`.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Updating#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Updating/cs/Default.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.Updating#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Updating/vb/Default.aspx.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>