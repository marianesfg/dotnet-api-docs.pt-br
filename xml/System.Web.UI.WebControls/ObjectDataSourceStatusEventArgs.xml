<Type Name="ObjectDataSourceStatusEventArgs" FullName="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8ea8ac30f3ce2194992306d36da1c0abb8026fad" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39990906" /></Metadata><TypeSignature Language="C#" Value="public class ObjectDataSourceStatusEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ObjectDataSourceStatusEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ObjectDataSourceStatusEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectDataSourceStatusEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type ObjectDataSourceStatusEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornece dados para os eventos <see cref="E:System.Web.UI.WebControls.ObjectDataSource.Selected" />, <see cref="E:System.Web.UI.WebControls.ObjectDataSource.Inserted" />, <see cref="E:System.Web.UI.WebControls.ObjectDataSource.Updated" /> e <see cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleted" /> e do controle <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> classe é usada em de <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A>, e <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A> métodos para fornecer acesso aos parâmetros de saída, valores de retorno e exceções que são geradas pelo método que é chamado pelo <xref:System.Web.UI.WebControls.ObjectDataSource> controle. Eles são acessados pela <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A>, e <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception%2A> propriedades, respectivamente. Adicionando um delegado para manipular a <xref:System.Web.UI.WebControls.ObjectDataSource.Selected>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updated>, <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>, ou <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> eventos, você pode examinar esses dados e executar qualquer processamento de postagem adicional é necessário.  
  
 O <xref:System.Web.UI.WebControls.ObjectDataSource> controle expõe vários eventos que você pode manipular para trabalhar com o objeto de negócios subjacentes em vários momentos do ciclo de vida. A tabela a seguir lista os eventos e os respectivos <xref:System.EventArgs> classes e delegados de manipulador de eventos.  
  
|evento|EventArgs|EventHandler|  
|-----------|---------------|------------------|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>.<br /><br /> Ocorre imediatamente antes que a instância do objeto comercial é criada.|<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>.<br /><br /> Ocorre imediatamente depois que a instância do objeto comercial é criada.|<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>.<br /><br /> Ocorre antes que os dados são recuperados.|<xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> e <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting>.<br /><br /> Ocorre antes de uma inserção, atualização ou operação de exclusão é executada.|<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Selected>.<br /><br /> Ocorre depois que os dados são recuperados.|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updated> e <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>.<br /><br /> Ocorre após a inserção, atualização ou operação de exclusão for concluída.|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>.<br /><br /> Ocorre antes que um objeto de negócios é destruído.|<xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler>|  
  
   
  
## Examples  
 Esta seção contém dois exemplos de código. O primeiro exemplo de código demonstra como usar um <xref:System.Web.UI.WebControls.ObjectDataSource> controle com um objeto comercial e um <xref:System.Web.UI.WebControls.GridView> controle para excluir dados. O segundo exemplo de código fornece um objeto de negócios de camada intermediária de exemplo que usa o primeiro exemplo de código.  
  
 O exemplo de código a seguir demonstra como usar um <xref:System.Web.UI.WebControls.ObjectDataSource> controle com um objeto comercial e um <xref:System.Web.UI.WebControls.GridView> controle para excluir dados. O <xref:System.Web.UI.WebControls.GridView> inicialmente exibe um conjunto de todos os funcionários, usando o método que é especificado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propriedade para recuperar os dados, o `EmployeeLogic` objeto. Porque o <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> estiver definida como `true`, o <xref:System.Web.UI.WebControls.GridView> controlar automaticamente exibe uma **excluir** botão.  
  
 Se você clicar na **excluir** botão, o <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> ação é executada usando o método que é especificado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> propriedade e quaisquer parâmetros que são especificados no <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> coleção. Neste exemplo de código, um parâmetro é especificado no <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> coleção que corresponde à ID de funcionário. Isso ocorre porque embora o ID é incluída na <xref:System.Windows.Forms.DataGridView.Columns%2A> coleção como uma <xref:System.Web.UI.WebControls.BoundField> do objeto, ele será passado como uma cadeia de caracteres para o <xref:System.Web.UI.WebControls.ObjectDataSource> controle. Adicionando explicitamente para o <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> coleção com uma <xref:System.Web.UI.WebControls.Parameter.Type%2A> propriedade definida como o <xref:System.TypeCode.Int32> valor, ele passará corretamente pelo <xref:System.Web.UI.WebControls.ObjectDataSource> para o método como um número inteiro, em vez de cadeia de caracteres.  
  
 Neste exemplo de código, algumas etapas de pré-processamento e pós-processamento também são executadas. O `NorthwindEmployeeDeleting` delegado é chamado para manipular a <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> evento antes do <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> ação é executada e o `NorthwindEmployeeDeleted` delegado é chamado para manipular a <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> evento após o <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> ação for concluída, para lidar com qualquer exceções que possam ter ocorrido. O `NorthwindEmployeeDeleted` delegado acessa possíveis exceções que são geradas pelo objeto de negócios que está usando o <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> objeto. Neste exemplo, se um `NorthwindDataException` é lançada, ela é tratada por esse delegado.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 O exemplo de código a seguir fornece um objeto de negócios de camada intermediária de exemplo que usa o exemplo de código anterior. A lista a seguir descreve as duas classes principais que são definidas no código de exemplo:  
  
-   O `EmployeeLogic` é uma classe que não mantêm o estado e encapsula a lógica de negócios.  
  
-   O `NorthwindEmployee` é uma classe de modelo que contém apenas a funcionalidade básica que é necessário para carregar e manter os dados da camada de dados.  
  
 Além disso, um `NorthwindDataException` classe é fornecida como uma conveniência.  
  
 Esse conjunto de classes de exemplo usa o banco de dados Northwind Traders, que é um banco de dados de exemplo está disponível com o Microsoft SQL Server e Microsoft Access. Para um exemplo funcional completo, você deve compilar esse código como uma biblioteca e, em seguida, usar essas classes de uma página ASP. A página ASP que é fornecida no exemplo anterior é configurada para funcionar com essa biblioteca de classes.  O `UpdateEmployeeInfo` método não é totalmente implementado, portanto, você não irá inserir dados no banco de dados Northwind Traders quando você testar este exemplo.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/northwindemployee10.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/northwindemployee10.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectDataSourceStatusEventArgs (object returnValue, System.Collections.IDictionary outputParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object returnValue, class System.Collections.IDictionary outputParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.#ctor(System.Object,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (returnValue As Object, outputParameters As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectDataSourceStatusEventArgs(System::Object ^ returnValue, System::Collections::IDictionary ^ outputParameters);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs : obj * System.Collections.IDictionary -&gt; System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" Usage="new System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs (returnValue, outputParameters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="returnValue" Type="System.Object" />
        <Parameter Name="outputParameters" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="returnValue">Um objeto que representa um valor retornado para a operação de banco de dados concluída.</param>
        <param name="outputParameters">Um <see cref="T:System.Collections.IDictionary" /> de pares nome/valor de objetos de parâmetro.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" /> usando os parâmetros de saída e o valor retornado especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O `returnValue` parâmetro pode ser qualquer objeto que é retornado por uma chamada para o método de dados de objeto comercial. O `outputParameters` parâmetro é um <xref:System.Collections.IDictionary> coleção de pares nome/valor que coincide com a assinatura do método e são passados por referência.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectDataSourceStatusEventArgs (object returnValue, System.Collections.IDictionary outputParameters, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object returnValue, class System.Collections.IDictionary outputParameters, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.#ctor(System.Object,System.Collections.IDictionary,System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectDataSourceStatusEventArgs(System::Object ^ returnValue, System::Collections::IDictionary ^ outputParameters, Exception ^ exception);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs : obj * System.Collections.IDictionary * Exception -&gt; System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" Usage="new System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs (returnValue, outputParameters, exception)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="returnValue" Type="System.Object" />
        <Parameter Name="outputParameters" Type="System.Collections.IDictionary" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="returnValue">Um objeto que representa um valor retornado para a operação de banco de dados concluída.</param>
        <param name="outputParameters">Um <see cref="T:System.Collections.IDictionary" /> de pares nome/valor de objetos de parâmetro.</param>
        <param name="exception">Um <see cref="T:System.Exception" /> que encapsula todas as exceções internas geradas durante a chamada do método.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" /> usando os parâmetros de saída, o valor retornado e a exceção especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O `returnValue` parâmetro pode ser qualquer objeto que é retornado por uma chamada para o método de dados de objeto comercial. O `outputParameters` parâmetro é um <xref:System.Collections.IDictionary> coleção de pares nome/valor que coincide com a assinatura do método e são passados por referência. O `exception` parâmetro é um <xref:System.Exception> exceção que encapsula todas as exceções geradas pelo método que é chamado pelo <xref:System.Web.UI.WebControls.ObjectDataSource> controle durante uma operação de dados. Se a exceção não é tratada por um <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A>, ou <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A> método, ela é lançada pelo <xref:System.Web.UI.WebControls.ObjectDataSource> controlar após a operação de dados retorna.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ExceptionHandled" />
      </Docs>
    </Member>
    <Member MemberName="AffectedRows">
      <MemberSignature Language="C#" Value="public int AffectedRows { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AffectedRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows" />
      <MemberSignature Language="VB.NET" Value="Public Property AffectedRows As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AffectedRows { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.AffectedRows : int with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o número de linhas afetadas pela operação de dados.</summary>
        <value>O número de linhas afetadas pela operação de dados.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A> valor para verificar que o número de linhas esperado foi afetado.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Selected" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Inserted" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Updated" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleted" />
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um wrapper para todas as exceções geradas pelo método que é chamado pelo controle <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> durante uma operação de dados.</summary>
        <value>Uma <see cref="T:System.Exception" /> que encapsula todas as exceções geradas pelo objeto de negócios em seus <see cref="P:System.Exception.InnerException" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Exception> exceção não representa a exceção real que é lançada pelo método de dados de objeto comercial. Você pode usar o <xref:System.Exception.InnerException%2A> propriedade para acessar a exceção gerada.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar um <xref:System.Web.UI.WebControls.ObjectDataSource> controle com um objeto comercial e um <xref:System.Web.UI.WebControls.GridView> controle para excluir dados. O <xref:System.Web.UI.WebControls.GridView> inicialmente exibe um conjunto de todos os funcionários, usando o método que é especificado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propriedade para recuperar os dados, o `EmployeeLogic` objeto. Porque o <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> estiver definida como `true`, o <xref:System.Web.UI.WebControls.GridView> controlar automaticamente exibe uma **excluir** botão.  
  
 Se você clicar na **excluir** botão, o <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> ação é executada usando o método que é especificado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> propriedade e quaisquer parâmetros que são especificados no <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> coleção.  
  
 Neste exemplo de código, algumas etapas de pré-processamento e pós-processamento também são executadas. O `NorthwindEmployeeDeleting` delegado é chamado para manipular a <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> evento antes do <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> ação é executada e o `NorthwindEmployeeDeleted` delegado é chamado para manipular a <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> evento após o <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> ação for concluída, para executar qualquer manipulação de exceção. Neste exemplo, se um `NorthwindDataException` é lançada, ela é tratada pelo `NorthwindEmployeeDeleted` delegar.  
  
 Para examinar a implementação de `EmployeeLogic` objeto comercial de camada intermediária que usa este exemplo de código, consulte a visão geral da classe no <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ExceptionHandled" />
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionHandled : bool with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se uma exceção que foi gerada pelo objeto de negócios foi tratada.</summary>
        <value><see langword="true" /> Se uma exceção gerada pelo objeto de negócios foi tratada e não deve ser gerada pelo <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />; caso contrário, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o objeto comercial lança uma exceção, o <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ExceptionHandled%2A> estiver definida como `false` e a exceção é encapsulada pelo <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception%2A> propriedade. Se você usar um <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler> do objeto, você pode verificar o <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception%2A> propriedade e o identificador de exceção. Se você tratar a exceção, defina as <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ExceptionHandled%2A> propriedade para `true` ou o <xref:System.Web.UI.WebControls.ObjectDataSource> controle lançará uma exceção.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar um <xref:System.Web.UI.WebControls.ObjectDataSource> controle com um objeto comercial e um <xref:System.Web.UI.WebControls.GridView> controle para excluir dados. O <xref:System.Web.UI.WebControls.GridView> inicialmente exibe um conjunto de todos os funcionários, usando o método que é especificado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propriedade para recuperar os dados, o `EmployeeLogic` objeto. Porque o <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> estiver definida como `true`, o <xref:System.Web.UI.WebControls.GridView> controlar automaticamente exibe uma **excluir** botão.  
  
 Se você clicar na **excluir** botão, o <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> ação é executada usando o método que é especificado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> propriedade e quaisquer parâmetros que são especificados no <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> coleção. Neste exemplo de código, algumas etapas de pré-processamento e pós-processamento também são executadas. O `NorthwindEmployeeDeleting` delegado é chamado para manipular a <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> evento antes do <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> ação é executada e o `NorthwindEmployeeDeleted` delegado é chamado para manipular a <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> evento após o <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> ação for concluída, para lidar com qualquer exceções que possam ter ocorrido. Neste exemplo, se um `NorthwindDataException` é lançada, ela é tratada pelo `NorthwindEmployeeDeleted` delegar.  
  
 Para examinar a implementação de `EmployeeLogic` objeto comercial de camada intermediária que usa este exemplo de código, consulte a visão geral da classe no <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception" />
      </Docs>
    </Member>
    <Member MemberName="OutputParameters">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionary OutputParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary OutputParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutputParameters As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IDictionary ^ OutputParameters { System::Collections::IDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OutputParameters : System.Collections.IDictionary" Usage="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma coleção que contém parâmetros de método de objeto comercial e seus valores.</summary>
        <value>Um <see cref="T:System.Collections.IDictionary" /> de pares nome/valor que representam os parâmetros de método de objeto comercial e seus valores correspondentes.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Todos os parâmetros que são passados para o método de objeto comercial por referência são retornados no <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters%2A> coleção.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReturnValue">
      <MemberSignature Language="C#" Value="public object ReturnValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ReturnValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReturnValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ReturnValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReturnValue : obj" Usage="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o valor retornado que o método de objeto de negócios retorna, se houver, como um objeto.</summary>
        <value>Um objeto que representa o valor de retorno retornado pelo método objeto comercial; Caso contrário, <see langword="null" />, se o método de objeto comercial não retorna nenhum valor.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A> propriedade é definida no <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> construtor. O valor é definido como o valor retornado da chamada de método de objeto de negócios, que é chamado usando a reflexão. Se o método de negócios não retorna nenhum valor (como quando o método de objeto de negócios retornar `void`), o <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A> propriedade avaliada para `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>