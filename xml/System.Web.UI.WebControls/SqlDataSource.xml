<Type Name="SqlDataSource" FullName="System.Web.UI.WebControls.SqlDataSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="34dff01451d4ba6258731af2ba7a9443d91cb876" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30601080" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SqlDataSource : System.Web.UI.DataSourceControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlDataSource extends System.Web.UI.DataSourceControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.SqlDataSource" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlDataSource&#xA;Inherits DataSourceControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlDataSource : System::Web::UI::DataSourceControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.DataSourceControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Selecting")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("SelectQuery")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.SqlDataSourceDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.SqlDataSource))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa um Banco de Dados SQL para controles associados a dados.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Neste tópico:  
  
-   [Introdução](#introduction)  
  
-   [Conexões de dados](#data_connections)  
  
-   [Executando operações de dados](#performing_data_operations)  
  
-   [Provedor de dados](#data_provider)  
  
-   [Cache](#caching)  
  
-   [Recursos adicionais](#additional_features)  
  
-   [Exibição da fonte de dados](#data_source_view)  
  
-   [Sintaxe declarativa](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Introdução  
 O <xref:System.Web.UI.WebControls.SqlDataSource> controle de fonte de dados representa dados em um banco de dados relacional do SQL para controles associados a dados. Você pode usar o <xref:System.Web.UI.WebControls.SqlDataSource> controle junto com um controle associado a dados para recuperar dados de um banco de dados relacional e para exibir, editar e classificar dados em uma página da Web com pouco ou nenhum código.  
  
<a name="data_connections"></a>   
## <a name="data-connections"></a>Conexões de Dados  
 Para se conectar a um banco de dados, você deve definir o <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> propriedade como uma cadeia de caracteres de conexão válido. O <xref:System.Web.UI.WebControls.SqlDataSource> pode dar suporte a qualquer SQL banco de dados relacional que pode ser conectado usando um provedor ADO.NET, como o `SqlClient`, `OleDb`, `Odbc`, ou `OracleClient` provedor. Para obter informações sobre como proteger as cadeias de caracteres de conexão, consulte [How To: cadeias de caracteres de Conexão segura quando a fonte de dados usando controles](http://msdn.microsoft.com/library/942f6dcb-d278-4bec-8403-60eede9bcd62).  
  
 Para recuperar dados de um banco de dados subjacente, defina o <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> propriedade com uma consulta SQL. Se o banco de dados que o <xref:System.Web.UI.WebControls.SqlDataSource> está associado com os procedimentos armazenado de dá suporte a, você pode definir o <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> propriedade para o nome de um procedimento armazenado. A consulta SQL que você especificar também pode ser uma consulta parametrizada. Você pode adicionar <xref:System.Web.UI.WebControls.Parameter> objetos que estão associados com uma consulta parametrizada para o <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> coleção. Para obter mais informações sobre consultas SQL parametrizadas e sua sintaxe, consulte [usando parâmetros com controles de fonte de dados para a filtragem](http://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f).  
  
 O <xref:System.Web.UI.WebControls.SqlDataSource> controle recupera dados sempre que o <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> método é chamado. Esse método fornece acesso programático para o método especificado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propriedade. O <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> método é chamado automaticamente por todos os controles que estão associados ao <xref:System.Web.UI.WebControls.SqlDataSource> quando seus <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> método é chamado. Se você definir o <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID%2A> propriedade de um controle associado a dados, o controle automaticamente associa aos dados da fonte de dados, conforme necessário. Definindo o `DataSourceID` propriedade é o método recomendado para a associação de um <xref:System.Web.UI.WebControls.ObjectDataSource> controle a um controle associado a dados. Como alternativa, você pode usar o `DataSource` propriedade, mas, em seguida, você deve chamar explicitamente o <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> método do controle associado a dados. Alguns exemplos de controles associados a dados que podem usar <xref:System.Web.UI.WebControls.SqlDataSource> são <xref:System.Web.UI.WebControls.DataGrid>, <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.DataList>, e <xref:System.Web.UI.WebControls.DropDownList>. Você pode chamar o <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> método programaticamente a qualquer momento para recuperar dados do banco de dados subjacente.  
  
 Em cenários ASP.NET programáticos e declarativos, você pode definir o <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> propriedade do controle associado a dados para a identificação do <xref:System.Web.UI.WebControls.SqlDataSource> controle. Você também pode atribuir uma instância do <xref:System.Web.UI.WebControls.SqlDataSource> de classe para o <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> propriedade do controle associado a dados. Para obter mais informações sobre o controle de associação de dados de associação para controles de fonte de dados, consulte [opções acesso a dados ASP.NET](http://msdn.microsoft.com/library/a5ff235e-397f-4bbe-9bfe-2720b6e7ab9d).  
  
<a name="performing_data_operations"></a>   
## <a name="performing-data-operations"></a>Executando operações de dados  
 Dependendo dos recursos do produto do banco de dados subjacente e a configuração da instância do <xref:System.Web.UI.WebControls.SqlDataSource> classe, você pode executar operações de dados, tais como atualizações, inserções e exclusões. Para executar essas operações de dados, defina o texto de comando apropriado e quaisquer parâmetros associados para a operação que você deseja executar. Por exemplo, para uma operação de atualização, defina o <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> propriedade como uma cadeia de caracteres SQL ou o nome de um procedimento armazenado e adicione os parâmetros necessários para o <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> coleção. A atualização é executada quando o <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> método é chamado explicitamente por seu código ou automaticamente por um controle associado a dados. O mesmo padrão geral é seguido para <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> e <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> operações.  
  
 As consultas SQL e os comandos que você use o <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>, <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>, <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A>, e <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> propriedades podem ser parametrizadas. Isso significa que o comando ou consulta pode usar espaços reservados em vez de valores literais e vincular os espaços reservados para o aplicativo ou as variáveis definidas pelo usuário. Você pode associar parâmetros em consultas SQL para variáveis de sessão, os valores que são passados na cadeia de caracteres de consulta para uma página Web Forms, os valores de propriedade de outros controles de servidor e muito mais. Para obter mais informações sobre como usar parâmetros em consultas SQL com o <xref:System.Web.UI.WebControls.SqlDataSource>, consulte [usando parâmetros com controles de fonte de dados para a filtragem](http://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f) e [usando parâmetros com o controle SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
> [!NOTE]
>  Por padrão, se um dos parâmetros é `null` quando você executa um `Select` de comando, nenhum dado será retornado e nenhuma exceção será lançada. Você pode alterar esse comportamento, definindo a <xref:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter%2A> propriedade `false`.  
  
<a name="data_provider"></a>   
## <a name="data-provider"></a>Provedor de dados  
 Por padrão, o <xref:System.Web.UI.WebControls.SqlDataSource> controle funciona com o .NET Framework Data Provider para SQL Server, mas <xref:System.Web.UI.WebControls.SqlDataSource> não é Microsoft SQL Server específico. Você pode se conectar a <xref:System.Web.UI.WebControls.SqlDataSource> controle com qualquer produto de banco de dados para o qual há um provedor gerenciado do ADO.NET. Quando usado com o <xref:System.Data.OleDb?displayProperty=nameWithType> provedor, o <xref:System.Web.UI.WebControls.SqlDataSource> pode trabalhar com qualquer banco de dados compatíveis com OLE DB. Quando usado com o <xref:System.Data.Odbc?displayProperty=nameWithType> provedor, o <xref:System.Web.UI.WebControls.SqlDataSource> pode ser usado com qualquer driver ODBC e o banco de dados, inclusive IBM DB2, MySQL e PostgreSQL. Quando usado com o <xref:System.Data.OracleClient?displayProperty=nameWithType> provedor, o <xref:System.Web.UI.WebControls.SqlDataSource> pode trabalhar com bancos de dados Oracle 8.1.7 e versões posteriores. A lista de provedores permitidos é registrada no `DbProviderFactories` seção do arquivo de configuração, ou no arquivo Machine. config ou Web. config. Para obter mais informações, consulte [selecionando dados usando o controle SqlDataSource](http://msdn.microsoft.com/library/44623286-ff5a-4148-8a3c-85c56ed545eb).  
  
<a name="caching"></a>   
## <a name="caching"></a>Cache  
 Se você exibir dados em sua página usando um <xref:System.Web.UI.WebControls.SqlDataSource> controle, você pode aumentar o desempenho da página, usando os recursos do controle de fonte de dados de cache de dados. O cache reduz a carga de processamento nos servidores de banco de dados, às custas de memória no servidor Web. Na maioria dos casos, isso é uma boa troca. O <xref:System.Web.UI.WebControls.SqlDataSource> automaticamente os dados em cache quando o <xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A> está definida como `true` e <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> propriedade é definida como o número de segundos que o cache armazena os dados antes da entrada de cache é descartada. Você também pode especificar um <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> e opcional <xref:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency%2A> valor.  
  
<a name="additional_features"></a>   
## <a name="additional-features"></a>Recursos adicionais  
 O <xref:System.Web.UI.WebControls.SqlDataSource> fornece recursos adicionais, conforme listado na tabela a seguir.  
  
|Recurso|Requisitos|  
|----------------|------------------|  
|Cache|Definir o <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> propriedade para o <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> valor, o <xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A> propriedade `true`e o <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> e <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> propriedades de acordo com o comportamento de cache desejado para os dados armazenados em cache.|  
|Excluindo|Definir o <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> propriedade para uma instrução SQL usada para excluir dados. Essa instrução normalmente é parametrizada.|  
|Filtragem|Definir o <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> propriedade para o <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> valor. Definir o <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> propriedade para uma expressão de filtragem usada para filtrar os dados quando o <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> método é chamado.|  
|Inserindo|Definir o <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> propriedade para uma instrução SQL usada para inserir dados. Essa instrução normalmente é parametrizada.|  
|Paginação|Não há suportada atualmente pelo <xref:System.Web.UI.WebControls.SqlDataSource>, porém alguns dados associados controles, como <xref:System.Web.UI.WebControls.GridView>, paginação de suporte quando você definir o <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> propriedade para o <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> valor.|  
|Selecionando|Definir o <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> propriedade para uma instrução SQL usada para recuperar dados.|  
|Classificação|Defina a propriedade <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> como <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet>.|  
|Atualizando|Definir o <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> propriedade para uma instrução SQL usada para atualizar dados. Essa instrução normalmente é parametrizada.|  
  
<a name="data_source_view"></a>   
## <a name="data-source-view"></a>Exibição da fonte de dados  
 Assim como acontece com todos os controles de fonte de dados, o <xref:System.Web.UI.WebControls.SqlDataSource> controle está associado uma classe de exibição de fonte de dados. O <xref:System.Web.UI.WebControls.SqlDataSource> controle tem apenas um associado <xref:System.Web.UI.WebControls.SqlDataSourceView>, e sempre é denominada `Table`.  
  
 Não há nenhum processamento visual da <xref:System.Web.UI.WebControls.SqlDataSource> controle; ele é implementado como um controle de forma que você pode criá-lo declarativamente e, opcionalmente, para permitir que ele participe de gerenciamento de estado. Como resultado, o <xref:System.Web.UI.WebControls.SqlDataSource> não oferece suporte a recursos visuais, como aqueles que são fornecidos pelo <xref:System.Web.UI.DataSourceControl.EnableTheming%2A> ou <xref:System.Web.UI.DataSourceControl.SkinID%2A> propriedade.  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Sintaxe declarativa  
  
```  
<asp:SqlDataSource  
    CacheDuration="string|Infinite"  
    CacheExpirationPolicy="Absolute|Sliding"  
    CacheKeyDependency="string"  
    CancelSelectOnNullParameter="True|False"  
    ConflictDetection="OverwriteChanges|CompareAllValues"  
    ConnectionString="string"  
    DataSourceMode="DataReader|DataSet"  
    DeleteCommand="string"  
    DeleteCommandType="Text|StoredProcedure"  
    EnableCaching="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    FilterExpression="string"  
    ID="string"  
    InsertCommand="string"  
    InsertCommandType="Text|StoredProcedure"  
    OldValuesParameterFormatString="string"  
    OnDataBinding="DataBinding event handler"  
    OnDeleted="Deleted event handler"  
    OnDeleting="Deleting event handler"  
    OnDisposed="Disposed event handler"  
    OnFiltering="Filtering event handler"  
    OnInit="Init event handler"  
    OnInserted="Inserted event handler"  
    OnInserting="Inserting event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnSelected="Selected event handler"  
    OnSelecting="Selecting event handler"  
    OnUnload="Unload event handler"  
    OnUpdated="Updated event handler"  
    OnUpdating="Updating event handler"  
    ProviderName="string|System.Data.Odbc|System.Data.OleDb|  
        System.Data.OracleClient|System.Data.SqlClient|  
        Microsoft.SqlServerCe.Client"  
    runat="server"  
    SelectCommand="string"  
    SelectCommandType="Text|StoredProcedure"  
    SkinID="string"  
    SortParameterName="string"  
    SqlCacheDependency="string"  
    UpdateCommand="string"  
    UpdateCommandType="Text|StoredProcedure"  
    Visible="True|False"  
>  
        <DeleteParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </DeleteParameters>  
        <FilterParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </FilterParameters>  
        <InsertParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </InsertParameters>  
        <SelectParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </SelectParameters>  
        <UpdateParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </UpdateParameters>  
</asp:SqlDataSource>  
```  
  
   
  
## Examples  
 Um projeto de site da Web do Visual Studio com o código-fonte está disponível para acompanhar este tópico: [baixar](http://go.microsoft.com/fwlink/?LinkId=192424).  
  
 Esta seção contém quatro exemplos de código:  
  
-   O primeiro exemplo de código demonstra como exibir dados do SQL Server em um <xref:System.Web.UI.WebControls.GridView> usando a sintaxe declarativa de controle.  
  
-   O segundo exemplo de código demonstra como exibir dados de um banco de dados compatível com ODBC em um <xref:System.Web.UI.WebControls.GridView> usando a sintaxe declarativa de controle.  
  
-   O terceiro exemplo de código demonstra como exibir e atualizar dados em um <xref:System.Web.UI.WebControls.GridView> controle.  
  
-   O quarto exemplo de código demonstra como exibir e atualizar dados em um <xref:System.Web.UI.WebControls.DropDownList> controle.  
  
    > [!NOTE]
    >  Estes exemplos mostram como usar a sintaxe declarativa para acesso a dados. Para obter informações sobre como acessar dados por meio de código em vez de marcações, consulte [acesso a dados no Visual Studio](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc).  
  
 O exemplo de código a seguir demonstra como usar um <xref:System.Web.UI.WebControls.SqlDataSource> controle declarativamente para recuperar dados do SQL Server e exibi-lo em um <xref:System.Web.UI.WebControls.GridView> controle.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_3sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_3sql/CS/sql3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_3sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_3sql/VB/sql3vb.aspx#1)]  
  
 O exemplo de código a seguir demonstra como usar um <xref:System.Web.UI.WebControls.SqlDataSource> controle declarativamente para recuperar dados de um banco de dados compatível com ODBC e exibi-lo em um <xref:System.Web.UI.WebControls.GridView> controle. O <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> propriedade é o nome do provedor de dados .NET Framework para ODBC, que é <xref:System.Data.Odbc?displayProperty=nameWithType>.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_3odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_3odbc/CS/odbc3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_3odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_3odbc/VB/odbc3vb.aspx#1)]  
  
 O exemplo de código a seguir demonstra uma exibição comuns e o cenário de atualização com o <xref:System.Web.UI.WebControls.GridView> controle. Como com os exemplos anteriores, os dados do banco de dados Northwind são exibidos no <xref:System.Web.UI.WebControls.GridView> controle. Além disso, porque um <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> propriedade for especificada e o <xref:System.Web.UI.WebControls.GridView.AutoGenerateEditButton%2A> está definida como `true`, você pode editar e atualizar os registros sem nenhum código adicional. O <xref:System.Web.UI.WebControls.GridView> controle manipula automaticamente adicionando parâmetros para o <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> coleta e chamadas a <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> método quando o **atualização** no botão o <xref:System.Web.UI.WebControls.GridView> controle é clicado.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_5sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_5sql/CS/sql5cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_5sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_5sql/VB/sql5vb.aspx#1)]  
  
 O exemplo de código a seguir demonstra uma exibição comuns e o cenário de atualização com o <xref:System.Web.UI.WebControls.DropDownList> e <xref:System.Web.UI.WebControls.TextBox> controles. O <xref:System.Web.UI.WebControls.DropDownList> controle não adiciona automaticamente os parâmetros de atualização para o <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> coleta nem chamada a <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> método, portanto você deve fazer isso. Os parâmetros de atualização são especificados de forma declarativa e você pode adicionar um manipulador de eventos para executar o <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> operação quando um evento é gerado.  
  
> [!IMPORTANT]
>  Este exemplo inclui uma caixa de texto que aceita a entrada do usuário, que é uma possível ameaça à segurança. Por padrão, a páginas da Web ASP.NET validam a entrada do usuário não inclui elementos HTML ou script. Para obter mais informações, consulte [Visão geral de explorações de script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/CS/sql8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/VB/sql8vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceView" />
    <altmember cref="T:System.Web.UI.WebControls.AccessDataSource" />
    <altmember cref="T:System.Web.UI.DataSourceControl" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</summary>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceView" />
        <altmember cref="T:System.Web.UI.WebControls.AccessDataSource" />
        <altmember cref="T:System.Web.UI.DataSourceControl" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceView" />
        <altmember cref="T:System.Web.UI.WebControls.AccessDataSource" />
        <altmember cref="T:System.Web.UI.DataSourceControl" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataSource (string connectionString, string selectCommand);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, string selectCommand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, selectCommand As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataSource(System::String ^ connectionString, System::String ^ selectCommand);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="selectCommand" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">A cadeia de conexão usada para se conectar ao banco de dados subjacente.</param>
        <param name="selectCommand">A consulta SQL usada para recuperar dados do banco de dados subjacente. Se a consulta SQL for uma cadeia de caracteres SQL parametrizada, talvez seja necessário adicionar objetos <see cref="T:System.Web.UI.WebControls.Parameter" /> à coleção <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> com a cadeia de conexão especificada e o comando Select.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Como produtos de banco de dados diferente usam tipos diferentes de SQL, a sintaxe para `selectCommand` depende do provedor ADO.NET atual que está sendo usado, que é identificado pelo <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> propriedade. Se a cadeia de caracteres SQL é uma consulta ou comando parametrizado, o espaço reservado de parâmetro também depende do provedor ADO.NET sendo usado. Por exemplo, se o provedor é o <xref:System.Data.SqlClient?displayProperty=nameWithType>, que é o provedor padrão para o <xref:System.Web.UI.WebControls.SqlDataSource> classe, o espaço reservado do parâmetro é `'@parameterName'`. No entanto, se o provedor está definido como o <xref:System.Data.Odbc?displayProperty=nameWithType> ou <xref:System.Data.OleDb?displayProperty=nameWithType>, o espaço reservado do parâmetro é `'?'`. Para obter mais informações sobre comandos e consultas SQL parametrizadas, consulte [usando parâmetros com o controle SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
 O <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> valor pode ser uma cadeia de caracteres SQL ou o nome de um procedimento armazenado, se a fonte de dados oferece suporte a procedimentos armazenados.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como criar um <xref:System.Web.UI.WebControls.SqlDataSource> controlar usando o <xref:System.Web.UI.WebControls.SqlDataSource.%23ctor%2A> construtor. O exemplo é incomum em que o <xref:System.Web.UI.WebControls.SqlDataSource> controle está sendo usado não em uma página de Web Forms, mas a implementação de um objeto de camada intermediária como uma maneira simple de um objeto comercial para interagir com um banco de dados. O exemplo usa uma cadeia de caracteres de conexão que é armazenada no arquivo Web. config.  
  
 Este exemplo de código é parte de um exemplo maior fornecido para a <xref:System.Web.UI.WebControls.ObjectDataSource> classe.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/northwindemployee1.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/northwindemployee1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.ConnectionString" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataSource (string providerName, string connectionString, string selectCommand);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string providerName, string connectionString, string selectCommand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (providerName As String, connectionString As String, selectCommand As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataSource(System::String ^ providerName, System::String ^ connectionString, System::String ^ selectCommand);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerName" Type="System.String" />
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="selectCommand" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="providerName">O nome do provedor de dados usado pelo <see cref="T:System.Web.UI.WebControls.SqlDataSource" />. Se nenhum provedor é definido, o <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> usa o provedor ADO.NET para o Microsoft SQL Server, por padrão.</param>
        <param name="connectionString">A cadeia de conexão usada para se conectar ao banco de dados subjacente.</param>
        <param name="selectCommand">A consulta SQL usada para recuperar dados do banco de dados subjacente. Se a consulta SQL for uma cadeia de caracteres SQL parametrizada, talvez seja necessário adicionar objetos <see cref="T:System.Web.UI.WebControls.Parameter" /> à coleção <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> com a cadeia de conexão especificada e o comando Select.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Como produtos de banco de dados diferente usam tipos diferentes de SQL, a sintaxe de `selectCommand` depende do provedor ADO.NET atual que está sendo usado, que é identificado pelo `providerName` parâmetro. Se a cadeia de caracteres SQL é uma consulta ou comando parametrizado, o espaço reservado de parâmetro também depende do provedor ADO.NET sendo usado. Por exemplo, se o provedor é <xref:System.Data.SqlClient?displayProperty=nameWithType>, que é o provedor padrão para o <xref:System.Web.UI.WebControls.SqlDataSource> classe, o espaço reservado do parâmetro é `'@parameterName'`. No entanto, se o provedor está definido como o <xref:System.Data.Odbc?displayProperty=nameWithType> ou <xref:System.Data.OleDb?displayProperty=nameWithType>, o espaço reservado do parâmetro é `'?'`. Para obter mais informações sobre comandos e consultas SQL parametrizadas, consulte [usando parâmetros com o controle SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
 O <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> propriedade pode ser uma cadeia de caracteres SQL ou o nome de um procedimento armazenado, se a fonte de dados oferece suporte a procedimentos armazenados.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.ProviderName" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.ConnectionString" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="CacheDuration">
      <MemberSignature Language="C#" Value="public virtual int CacheDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CacheDuration" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.CacheDuration" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheDuration As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CacheDuration { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataSourceCacheDurationConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a duração, em segundos, em que o controle de fonte de dados armazena em cache os dados recuperados pelo método <see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />.</summary>
        <value>O número de segundos que o <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> armazena em cache os resultados de uma operação <see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />. O padrão é 0. O valor não pode ser negativo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.SqlDataSource> controle oferece suporte ao cache de dados. Enquanto os dados em cache, o <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> método recupera dados do cache em vez de banco de dados subjacente. Quando o cache expira, o <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> método recupera dados do banco de dados subjacente e os armazena em cache os dados novamente.  
  
 O <xref:System.Web.UI.WebControls.SqlDataSource> controle automaticamente os dados em cache quando o <xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A> está definida como `true` e <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> propriedade é definida como um valor maior que 0, que indica o número de segundos que o cache armazena os dados antes da entrada de cache é descartada. Um valor de 0 indica um cache infinitamente longo.  
  
 O comportamento do cache é determinado por uma combinação da duração e o <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> propriedade. Se o <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> está definida como o <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> valor, o <xref:System.Web.UI.WebControls.SqlDataSource> armazena em cache dados a primeira operação de recuperação de dados, ele mantém na memória para, no máximo, a quantidade de tempo que é especificado pelo <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> propriedade. Os dados podem ser liberados antes da hora de duração, se a memória é necessária. Em seguida, o cache é atualizado durante a próxima operação. Se o <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> está definida como o <xref:System.Web.UI.DataSourceCacheExpiry.Sliding> valor, o controle de fonte de dados armazena em cache dados a primeira operação de recuperação de dados, mas redefine a janela de tempo que mantém o cache para cada operação subsequente. O cache expira, se não houver nenhuma atividade por um período que seja igual de <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> valor desde a última <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> operação.  
  
 O <xref:System.Web.UI.WebControls.SqlDataSource> controle pode armazenar em cache dados somente quando ele está em <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> modo. Um <xref:System.NotSupportedException> exceção é lançada pelo <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> método, se o <xref:System.Web.UI.WebControls.SqlDataSource> controle está definido o <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> valor e o cache também está habilitado.  
  
> [!IMPORTANT]
>  Quando você estiver usando representação de cliente com a autenticação do Microsoft Windows, os dados são armazenadas em cache quando o primeiro usuário que acessa os dados. Se outro usuário solicita os mesmos dados, os dados são recuperados do cache. Os dados não serão recuperados fazendo outra chamada para o banco de dados para verificar o acesso do usuário aos dados. Se você espera que mais de um usuário para acessar os dados, e você desejar cada recuperação para os dados a ser verificada pelas configurações de segurança para o banco de dados, não use o cache.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como recuperar dados do banco de dados Northwind no Microsoft SQL Server e exibi-lo em um <xref:System.Web.UI.WebControls.GridView> controle com dados em cache habilitada. O <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> é definido como 20 segundos e, como o <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> está definida como o <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> valor por padrão, os usuários desta página verá dados atualizados a cada 20 segundos.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_18sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_18sql/CS/sql18cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_18sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_18sql/VB/sql18vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.EnableCaching" />
      </Docs>
    </Member>
    <Member MemberName="CacheExpirationPolicy">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.DataSourceCacheExpiry CacheExpirationPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataSourceCacheExpiry CacheExpirationPolicy" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheExpirationPolicy As DataSourceCacheExpiry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::DataSourceCacheExpiry CacheExpirationPolicy { System::Web::UI::DataSourceCacheExpiry get(); void set(System::Web::UI::DataSourceCacheExpiry value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceCacheExpiry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o comportamento de expiração de cache que, quando combinado com a duração, descreve o comportamento do cache usado pelo controle de fonte de dados.</summary>
        <value>Um dos valores de <see cref="T:System.Web.UI.DataSourceCacheExpiry" />. O padrão é o valor <see cref="F:System.Web.UI.DataSourceCacheExpiry.Absolute" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.SqlDataSource> controle oferece suporte ao cache de dados. Enquanto os dados em cache, o <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> método recupera dados do cache em vez de banco de dados subjacente. Quando o cache expira, o <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> método recupera dados do banco de dados subjacente e os armazena em cache os dados novamente.  
  
 O comportamento do cache é determinado por uma combinação da <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> e <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> configurações. Se o <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> está definida como o <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> valor, o <xref:System.Web.UI.WebControls.SqlDataSource> armazena em cache dados a primeira operação de recuperação de dados, mantém na memória pelo período de tempo especificado pelo <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> propriedade e, em seguida, descarta-lo depois que o tempo expirou. Em seguida, o cache é atualizado durante a próxima operação. Se o <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> está definida como o <xref:System.Web.UI.DataSourceCacheExpiry.Sliding> valor, o controle de fonte de dados armazena em cache dados a primeira operação de recuperação de dados, mas redefine a janela de tempo que mantém o cache para cada operação subsequente. O cache expira, se não houver nenhuma atividade por um período que seja igual de <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> valor desde a última <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> operação.  
  
 O <xref:System.Web.UI.WebControls.SqlDataSource> controle pode armazenar em cache dados somente quando estiver no <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> modo. Um <xref:System.NotSupportedException> exceção é lançada pelo <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> método, se o <xref:System.Web.UI.WebControls.SqlDataSource> controle está definido o <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> valor e o cache também está habilitado.  
  
> [!IMPORTANT]
>  Quando você estiver usando representação de cliente com a autenticação do Microsoft Windows, os dados são armazenadas em cache quando o primeiro usuário que acessa os dados. Se outro usuário solicita os mesmos dados, os dados são recuperados do cache. Os dados não serão recuperados fazendo outra chamada para o banco de dados para verificar o acesso do usuário aos dados. Se você espera que mais de um usuário para acessar os dados, e você desejar cada recuperação para os dados a ser verificada pelas configurações de segurança para o banco de dados, não use o cache.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como recuperar dados do banco de dados Northwind no Microsoft SQL Server e exibi-lo em um <xref:System.Web.UI.WebControls.GridView> controle com dados em cache habilitada. Porque o <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> está definida como o <xref:System.Web.UI.DataSourceCacheExpiry.Sliding> valor, os usuários não verão dados atualizados, embora o <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> valor é de 20 segundos. Os dados armazenados em cache são atualizados somente se não houver nenhuma atividade na página para mais de 20 segundos desde o último carregamento da página.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_19sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_19sql/CS/sql19cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_19sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_19sql/VB/sql19vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.CacheDuration" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.EnableCaching" />
      </Docs>
    </Member>
    <Member MemberName="CacheKeyDependency">
      <MemberSignature Language="C#" Value="public virtual string CacheKeyDependency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CacheKeyDependency" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.CacheKeyDependency" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheKeyDependency As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CacheKeyDependency { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define uma dependência de chave definida pelo usuário que é vinculada a todos os objetos de cache de dados que são criados pelo controle de fonte de dados. Todos os objetos de cache expiram explicitamente quando a chave expira.</summary>
        <value>Uma chave que identifica todos os objetos de cache criados pelo <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.SqlDataSource> controle oferece suporte ao cache de dados. Enquanto os dados em cache, o <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> método recupera dados do cache em vez de banco de dados subjacente. Quando o cache expira, o <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> método recupera dados do banco de dados subjacente e os armazena em cache os dados novamente.  
  
 Você pode definir o <xref:System.Web.UI.WebControls.SqlDataSource.CacheKeyDependency%2A> propriedade para criar uma dependência entre todas as entradas de cache que são criados pelo <xref:System.Web.UI.WebControls.SqlDataSource> controle e a chave. Você programaticamente pode expirar todas as entradas de cache a qualquer momento por meio da expiração da chave.  
  
 O <xref:System.Web.UI.WebControls.SqlDataSource> controle pode armazenar em cache dados somente quando estiver no <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> modo. Um <xref:System.NotSupportedException> exceção é lançada pelo <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> método, se o <xref:System.Web.UI.WebControls.SqlDataSource> controle está definido o <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> valor e o cache também está habilitado.  
  
 Uma entrada de cache exclusivo é criada para cada combinação da <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>, <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A>, e <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> propriedades. Vários <xref:System.Web.UI.WebControls.SqlDataSource> controles podem usar as mesmas entradas de cache em cenários onde os controles de carregar os mesmos dados do mesmo banco de dados subjacente.  
  
> [!IMPORTANT]
>  Quando você estiver usando representação de cliente com a autenticação do Microsoft Windows, os dados são armazenadas em cache quando o primeiro usuário que acessa os dados. Se outro usuário solicita os mesmos dados, os dados são recuperados do cache. Os dados não serão recuperados fazendo outra chamada para o banco de dados para verificar o acesso do usuário aos dados. Se você espera que mais de um usuário para acessar os dados, e você desejar cada recuperação para os dados a ser verificada pelas configurações de segurança para o banco de dados, não use o cache.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.CacheDuration" />
      </Docs>
    </Member>
    <Member MemberName="CancelSelectOnNullParameter">
      <MemberSignature Language="C#" Value="public virtual bool CancelSelectOnNullParameter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CancelSelectOnNullParameter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CancelSelectOnNullParameter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CancelSelectOnNullParameter { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se uma operação de recuperação de dados é cancelada quando qualquer parâmetro contido na coleção <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" /> é avaliado como <see langword="null" />.</summary>
        <value>
          <see langword="true" /> se uma operação de recuperação de dados for cancelada quando um parâmetro contido na coleção <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" /> for avaliado como <see langword="null" />, caso contrário, <see langword="false" />. O padrão é <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O valor de <xref:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter%2A> propriedade é armazenada em um estado de exibição.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConflictDetection">
      <MemberSignature Language="C#" Value="public System.Web.UI.ConflictOptions ConflictDetection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ConflictOptions ConflictDetection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.ConflictDetection" />
      <MemberSignature Language="VB.NET" Value="Public Property ConflictDetection As ConflictOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ConflictOptions ConflictDetection { System::Web::UI::ConflictOptions get(); void set(System::Web::UI::ConflictOptions value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ConflictOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o valor que indica como o controle <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> executa atualizações e exclusões quando os dados em uma linha do banco de dados subjacente são alterados durante o período da operação.</summary>
        <value>Um dos valores de <see cref="T:System.Web.UI.ConflictOptions" />. O padrão é o valor <see cref="F:System.Web.UI.ConflictOptions.OverwriteChanges" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> propriedade determina se os parâmetros para os valores novos e antigos são aplicados para o `Update` método. Por exemplo, se o comando que é especificado pelo <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> propriedade retorna um <xref:System.Data.DataTable> objeto com as colunas `Name` e `Number` e <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> está definida como o <xref:System.Web.UI.ConflictOptions.OverwriteChanges> valor, os parâmetros são criados para `Name` e `Number` para o `Update` método. Se o <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> está definida como o <xref:System.Web.UI.ConflictOptions.CompareAllValues> valor, os parâmetros são criados para `Name`, `Number`, `original_Name`, e `original_Number`. (O nome exato dos parâmetros para os valores originais depende do <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> propriedade.) O <xref:System.Web.UI.WebControls.SqlDataSource> controle, em seguida, determina se o `Update` método especificado no <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> propriedade tem parâmetros que correspondam.  
  
 Controle de simultaneidade é uma técnica de repositórios de dados usam para controlar como os dados é lida e alterados no repositório quando vários clientes estão acessando e manipulando os mesmos dados. Por exemplo, um cliente lê os dados e apresenta-as para um usuário, enquanto outro cliente lê os mesmos dados e apresenta-as para um usuário diferente. Se ambos os usuários atualizam os dados e enviá-lo para o armazenamento de dados, alguns resultados inesperados poderão ocorrer, pois ambos os clientes podem atualizar valores diferentes para os mesmos dados. Isso é considerado um conflito. Definindo o <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> propriedade para o <xref:System.Web.UI.ConflictOptions.CompareAllValues> valor, o `Update` método pode comparar os valores antigos e novos para a fonte de dados original para detectar conflitos e tratá-los, conforme necessário.  
  
 O <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> propriedade delega para o <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> propriedade o <xref:System.Web.UI.WebControls.SqlDataSourceView> objeto que está associado com o <xref:System.Web.UI.WebControls.SqlDataSource> controle.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ConflictOptions" />
      </Docs>
    </Member>
    <Member MemberName="ConnectionString">
      <MemberSignature Language="C#" Value="public virtual string ConnectionString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.ConnectionString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ConnectionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectionString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.SqlDataSourceConnectionStringEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a cadeia de conexão específica do provedor ADO.NET usada pelo controle <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> para se conectar a um banco de dados subjacente.</summary>
        <value>Uma cadeia de caracteres específica do provedor de dados .NET Framework usada pelo <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> para se conectar ao banco de dados SQL que ele representa. O padrão é uma cadeia de caracteres vazia ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.SqlDataSource> controle pode ser usado com uma variedade de provedores ADO.NET e a sintaxe da cadeia de conexão que é usada para se conectar a uma fonte de dados subjacente é específica ao provedor.  
  
 Quando você configura um <xref:System.Web.UI.WebControls.SqlDataSource> controle, defina a <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> propriedade para o tipo de banco de dados (o padrão é <xref:System.Data.SqlClient?displayProperty=nameWithType>), e você definir o <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> propriedade como uma cadeia de caracteres de conexão que inclui as informações necessárias para conectar-se ao banco de dados. O conteúdo de uma cadeia de caracteres de conexão são diferentes dependendo do tipo de banco de dados que está acessando o controle de fonte de dados. Por exemplo, o <xref:System.Web.UI.WebControls.SqlDataSource> controle requer um nome de servidor, nome do banco de dados (catálogo) e obter informações sobre como autenticar o usuário ao se conectar a um SQL Server. Para obter informações sobre o conteúdo de cadeias de caracteres de conexão, consulte o <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> propriedade para o <xref:System.Data.SqlClient.SqlConnection> classe, <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A> propriedade para o <xref:System.Data.OracleClient.OracleConnection> classe <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> propriedade para o <xref:System.Data.OleDb.OleDbConnection> classe, ou o <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> propriedade para o <xref:System.Data.Odbc.OdbcConnection> classe.  
  
 Se você alterar o <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> propriedade, o <xref:System.Web.UI.IDataSource.DataSourceChanged> é gerado, fazendo com que todos os controles que estão associados ao <xref:System.Web.UI.WebControls.SqlDataSource> controle associar novamente.  
  
> [!IMPORTANT]
>  Para obter informações sobre como armazenar uma cadeia de caracteres de conexão, consulte [How To: cadeias de Conexão segura quando a fonte de dados usando controles](http://msdn.microsoft.com/library/942f6dcb-d278-4bec-8403-60eede9bcd62).  
  
   
  
## Examples  
 Esta seção contém dois exemplos de código. O primeiro exemplo de código demonstra como definir a <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> propriedade para se conectar a um banco de dados do Microsoft SQL Server e exibir os resultados do <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> propriedade em um <xref:System.Web.UI.WebControls.GridView> controle. O segundo exemplo de código demonstra um cenário mais complexo, onde um <xref:System.Web.UI.WebControls.SqlDataSource> controle é usado para exibir e atualizar dados em um banco de dados do Microsoft Access protegido por senha. Em cada caso, o `connectionStrings` elemento do arquivo Web. config é mostrado primeiro, seguida pela página ASP.NET que contém o <xref:System.Web.UI.WebControls.SqlDataSource> controle.  
  
 O exemplo de código a seguir demonstra como definir a <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> propriedade para se conectar a um banco de dados do SQL Server e exibir os resultados do <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> propriedade em um <xref:System.Web.UI.WebControls.GridView> controle.  
  
  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_3sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_3sql/CS/sql3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_3sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_3sql/VB/sql3vb.aspx#1)]  
  
 O exemplo de código a seguir demonstra um cenário mais complexo do que o exemplo de código anterior, onde um <xref:System.Web.UI.WebControls.SqlDataSource> controle é usado para exibir e atualizar dados em um banco de dados do Access protegido por senha. Porque o <xref:System.Web.UI.WebControls.SqlDataSource> é usado com o acesso, o <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> está definida como o <xref:System.Data.OleDb> provedor e o <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> estiver definida como uma cadeia de caracteres de conexão apropriado para um banco de dados de acesso compartilhado UNC. Um <xref:System.Web.UI.WebControls.GridView> controle exibe os pedidos com datas de remessa. Você pode atualizar um pedido marcando a caixa de seleção apropriada e, em seguida, clicando no **atualizar** botão.  
  
> [!IMPORTANT]
>  Este exemplo inclui uma senha em texto sem formatação somente para fins de ilustração. Em um aplicativo de produção, cadeias de caracteres de conexão que incluem as senhas devem ser criptografadas. Para obter mais informações, consulte [Protegendo informações de conexão](~/docs/framework/data/adonet/protecting-connection-information.md).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_22sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_22sql/CS/sql22cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_22sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_22sql/VB/sql22vb.aspx#1)]  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_22sql#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_22sql/CS/sql22cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_22sql#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_22sql/VB/sql22vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.ProviderName" />
      </Docs>
    </Member>
    <Member MemberName="CreateDataSourceView">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.SqlDataSourceView CreateDataSourceView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.SqlDataSourceView CreateDataSourceView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.CreateDataSourceView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateDataSourceView (viewName As String) As SqlDataSourceView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::SqlDataSourceView ^ CreateDataSourceView(System::String ^ viewName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">O nome da exibição da fonte de dados.</param>
        <summary>Cria um objeto de exibição de fonte de dados associado ao controle de fonte de dados.</summary>
        <returns>Um <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> associado ao <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Classes que derivam de <xref:System.Web.UI.WebControls.SqlDataSource> classe pode substituir o <xref:System.Web.UI.WebControls.SqlDataSource.CreateDataSourceView%2A> método para retornar fortemente tipado objetos de exibição de fonte de dados.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.GetView(System.String)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.GetViewNames" />
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceView" />
        <altmember cref="T:System.Web.UI.DataSourceView" />
      </Docs>
    </Member>
    <Member MemberName="DataSourceMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceMode DataSourceMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceMode DataSourceMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" />
      <MemberSignature Language="VB.NET" Value="Public Property DataSourceMode As SqlDataSourceMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceMode DataSourceMode { System::Web::UI::WebControls::SqlDataSourceMode get(); void set(System::Web::UI::WebControls::SqlDataSourceMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o modo de recuperação de dados que o controle <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> usa para buscar dados.</summary>
        <value>Um dos valores de <see cref="T:System.Web.UI.WebControls.SqlDataSourceMode" />. O padrão é o <see cref="F:System.Web.UI.WebControls.SqlDataSourceMode.DataSet" /> valor.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identifica o modo de recuperação de dados como um <xref:System.Web.UI.WebControls.SqlDataSource> controle recupera dados do banco de dados subjacente.  
  
 Quando o <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> está definida como o <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> valor, os dados são carregados em um <xref:System.Data.DataSet> objeto e armazenado na memória no servidor. Isso possibilita cenários em que a interface do usuário controles, como <xref:System.Web.UI.WebControls.GridView>, oferecem recursos de paginação, filtragem e classificação.  
  
 Quando o <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> está definida como o <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> valor, os dados são recuperados por um <xref:System.Data.IDataReader> objeto, que é um cursor de somente avanço, somente leitura. O tipo específico do <xref:System.Data.IDataReader> objeto depende do provedor de dados na rede que o <xref:System.Web.UI.WebControls.SqlDataSource> usa, que é identificado pelo <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> propriedade. Por padrão, o <xref:System.Web.UI.WebControls.SqlDataSource> controle usa o provedor do Microsoft SQL Server, o <xref:System.Data.SqlClient?displayProperty=nameWithType>, e o leitor de dados é um <xref:System.Data.SqlClient.SqlDataReader> objeto.  
  
 Se você alterar o <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> propriedade, o <xref:System.Web.UI.IDataSource.DataSourceChanged> é gerado, fazendo com que todos os controles que estão associados ao <xref:System.Web.UI.WebControls.SqlDataSource> associar novamente.  
  
 O valor de <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> propriedade é armazenada em um estado de exibição.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como definir a <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> propriedade do <xref:System.Web.UI.WebControls.SqlDataSource> o controle para o <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> valor para um cenário com um <xref:System.Web.UI.WebControls.ListBox> controle que não requer nenhuma classificação, paginação, nem filtragem.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_1sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_1sql/CS/sql1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_1sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_1sql/VB/sql1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">A propriedade <see cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" /> não é um dos valores definidos no <see cref="T:System.Web.UI.WebControls.SqlDataSourceMode" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceMode" />
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public int Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Executa uma operação de exclusão usando a cadeia de caracteres SQL <see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" /> e os parâmetros que estão na coleção <see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />.</summary>
        <returns>Um valor que representa o número de linhas excluídas no banco de dados subjacente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Antes da operação de exclusão é executada, o <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> método é chamado para gerar o <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> evento. Você pode manipular esse evento para examinar os valores dos parâmetros e executar qualquer pré-processamento antes de uma operação de exclusão.  
  
 Após a conclusão da operação, o <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A> método é chamado para gerar o <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> evento. Você pode manipular esse evento para examinar quaisquer valores de retorno e os códigos de erro e executar qualquer pós-processamento.  
  
 O <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> método é fornecido para o acesso programático para o `Delete` método. Se o <xref:System.Web.UI.WebControls.SqlDataSource> controle está associado um controle associado a dados, o controle de associação de dados chama automaticamente o **excluir** método.  
  
 O <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> método delega para o <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> método o <xref:System.Web.UI.WebControls.SqlDataSourceView> objeto que está associado com o <xref:System.Web.UI.WebControls.SqlDataSource> controle. Para executar a operação, o <xref:System.Web.UI.WebControls.SqlDataSourceView> cria um <xref:System.Data.Common.DbCommand> objeto usando o <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> texto e associados <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> valores e, em seguida, executa o <xref:System.Data.Common.DbCommand> no banco de dados subjacente.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como definir a <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> texto para excluir uma ordem de banco de dados Northwind. Inicialmente, os dados são recuperados da tabela de pedidos e exibidos em um <xref:System.Web.UI.WebControls.DropDownList> controle. Você deve declarar explicitamente o <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> propriedade e chame o <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> método ao usar controles de associação de dados, como o <xref:System.Web.UI.WebControls.DropDownList> (ao contrário de outros controles, como <xref:System.Web.UI.WebControls.GridView> e <xref:System.Web.UI.WebControls.DetailsView>, que preencher automaticamente o parâmetros e chamar o <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> método em um controle de fonte de dados). Neste exemplo, o <xref:System.Web.UI.WebControls.Button.OnClick%2A> evento é delegado ao particular `OnDelete` manipulador de eventos, chame explicitamente o <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> método o <xref:System.Web.UI.WebControls.SqlDataSource> controle.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_11sql/CS/sql11cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_11sql/VB/sql11vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> não pode estabelecer uma conexão com a fonte de dados subjacente.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public string DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DeleteCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a cadeia de caracteres SQL que o controle <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> usa para excluir dados do banco de dados subjacente.</summary>
        <value>Uma cadeia de caracteres SQL usada pelo <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> para excluir dados.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> representa uma consulta SQL ou o nome de um procedimento armazenado e é usado pelo <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> método.  
  
 Porque os produtos diferentes de base de dados usam diferentes variedades SQL, a sintaxe da cadeia de caracteres SQL depende do provedor atual do ADO.NET que está sendo usado, que é identificado pela propriedade de <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> . Se a cadeia de caracteres SQL é uma consulta parametrizada ou um comando, a sintaxe do parâmetro também depende do provedor ADO.NET que está sendo usado. Por exemplo, se o provedor é o <xref:System.Data.SqlClient?displayProperty=nameWithType>, que é o provedor padrão para o <xref:System.Web.UI.WebControls.SqlDataSource> classe, a sintaxe do parâmetro é `'@parameterName'`. No entanto, se o provedor está definido como o <xref:System.Data.Odbc?displayProperty=nameWithType> ou <xref:System.Data.OleDb?displayProperty=nameWithType>, o espaço reservado do parâmetro é `'?'`. Para obter mais informações sobre comandos e consultas SQL parametrizadas, consulte [usando parâmetros com o controle SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
 O <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> propriedade pode ser uma cadeia de caracteres SQL ou o nome de um procedimento armazenado, se o banco de dados oferece suporte a procedimentos armazenados.  
  
 O <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> propriedade delega para o <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> propriedade o <xref:System.Web.UI.WebControls.SqlDataSourceView> objeto que está associado com o <xref:System.Web.UI.WebControls.SqlDataSource> controle.  
  
> [!IMPORTANT]
>  Para fins de segurança, o <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> propriedade não é armazenada em um estado de exibição. Como é possível decodificar o conteúdo do estado de exibição no cliente, armazenando informações confidenciais sobre a estrutura de banco de dados no modo de exibição estado pode resultar em uma vulnerabilidade de divulgação de informações.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como definir a <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> texto para excluir uma ordem da tabela de pedidos de banco de dados Northwind. Dados são recuperados da tabela de pedidos e exibidos em um <xref:System.Web.UI.WebControls.GridView> controle. O <xref:System.Web.UI.WebControls.GridView> renderiza um **excluir** botão automaticamente quando o <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> está definida como `true`. Além disso, quando o **excluir** botão é clicado, o <xref:System.Web.UI.WebControls.GridView> controle preenche automaticamente o <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> coleta e chama o <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> método. Por fim, como neste exemplo de código exclui dados, um manipulador de eventos é adicionado ao tentar fazer backup do banco de dados em disco antes do <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> operação é executada.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/CS/sql10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/VB/sql10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
      </Docs>
    </Member>
    <Member MemberName="DeleteCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType DeleteCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType DeleteCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType DeleteCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se o texto da propriedade <see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" /> é uma instrução SQL ou o nome de um procedimento armazenado.</summary>
        <value>Um dos valores de <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />. O padrão é o valor <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommandType%2A> propriedade delega para o <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType%2A> propriedade o <xref:System.Web.UI.WebControls.SqlDataSourceView> objeto que está associado com o <xref:System.Web.UI.WebControls.SqlDataSource> controle.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="Deleted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Deleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Deleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Deleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleted As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Deleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre após a conclusão de uma operação de exclusão.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Manipular o <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> evento para examinar os valores de parâmetros de saída após uma operação de exclusão. Os parâmetros de saída estão disponíveis no <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> objeto que está associado com o evento.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Deleting" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="DeleteParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection DeleteParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeleteParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ DeleteParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a coleção de parâmetros que contém os parâmetros usados pela propriedade <see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" /> do objeto <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> associado ao controle <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</summary>
        <value>Um <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> que contém os parâmetros usados pela propriedade <see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> propriedade contém uma consulta SQL parametrizada, o <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> coleção contém qualquer <xref:System.Web.UI.WebControls.Parameter> objetos que correspondem aos espaços reservados de parâmetro na cadeia de caracteres SQL.  
  
> [!NOTE]
>  Certifique-se de que nenhum <xref:System.Web.UI.WebControls.BoundField> controles no controle associado a dados que você associar ao <xref:System.Web.UI.WebControls.SqlDataSource> controle têm nomes que correspondem a qualquer nome de parâmetro no <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> coleção. Parâmetros que têm o mesmo nome como campos associados são excluídos do comando SQL e um erro "não foi fornecido pelo parâmetro" poderão ser obtidos.  
  
 Se o <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> está definida como o <xref:System.Web.UI.ConflictOptions.CompareAllValues> valor, os parâmetros são criados para os valores novos e antigos dos dados. Os parâmetros para os valores antigos são nomeados de acordo com o <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> propriedade.  
  
 Dependendo do provedor ADO.NET, a ordem dos parâmetros de <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> coleção pode ser importante. O <xref:System.Data.OleDb?displayProperty=nameWithType> e <xref:System.Data.Odbc?displayProperty=nameWithType> provedores associar os parâmetros na coleção de acordo com a ordem na qual os parâmetros aparecem na consulta SQL com parâmetros. O <xref:System.Data.SqlClient?displayProperty=nameWithType> provedor, que é o provedor ADO.NET padrão para o <xref:System.Web.UI.WebControls.SqlDataSource> controlar, associa parâmetros na coleção por correspondente ao nome do parâmetro com o espaço reservado na consulta SQL. Para obter mais informações sobre comandos e consultas SQL parametrizadas, consulte [usando parâmetros com o controle SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
 O <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> propriedade recupera o <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> propriedade contido pelo <xref:System.Web.UI.WebControls.SqlDataSourceView> objeto que está associado com o <xref:System.Web.UI.WebControls.SqlDataSource> controle.  
  
> [!IMPORTANT]
>  Valores são inseridos em parâmetros sem validação, que é uma possível ameaça à segurança. Use o <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> evento para validar valores de parâmetro antes de executar a consulta. Para obter mais informações, consulte [Visão geral de explorações de script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como definir a <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> texto para excluir uma ordem de banco de dados Northwind. Inicialmente, os dados são recuperados da tabela de pedidos e exibidos em um <xref:System.Web.UI.WebControls.DropDownList> controle. Você deve declarar explicitamente <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> propriedade e chame o <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> método ao usar controles de associação de dados, como <xref:System.Web.UI.WebControls.DropDownList> (ao contrário de outros controles, como <xref:System.Web.UI.WebControls.GridView> e <xref:System.Web.UI.WebControls.DetailsView>, que automaticamente preencher os parâmetros e chamar <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> em um controle de fonte de dados). Neste exemplo, o <xref:System.Web.UI.WebControls.Button.OnClick%2A> evento é delegado ao particular `OnDelete` manipulador de eventos, chame explicitamente o <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> método o <xref:System.Web.UI.WebControls.SqlDataSource> controle.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_11sql/CS/sql11cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_11sql/VB/sql11vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
      </Docs>
    </Member>
    <Member MemberName="Deleting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Deleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Deleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Deleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleting As SqlDataSourceCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceCommandEventHandler ^ Deleting;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre antes de uma operação de exclusão.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Manipular o <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> evento para executar operações de inicialização adicionais que são específicas para seu aplicativo, para validar os valores de parâmetros, ou para alterar os valores de parâmetro antes do <xref:System.Web.UI.WebControls.SqlDataSource> controle executa a operação de exclusão.  
  
 A conexão à fonte de dados subjacente não ainda estiver aberto quando o delegado de manipulador de eventos é chamado. Portanto, você não pode cancelar a operação diretamente, chamando o <xref:System.Data.Common.DbCommand.Cancel%2A> método o <xref:System.Data.Common.DbCommand> objeto que é exposto pelo <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> objeto. No entanto, você pode cancelar a operação de banco de dados, definindo o <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propriedade o <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> do objeto para `true`.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como tratar o <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> evento que é gerado antes de uma <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> operação ocorre. Como este exemplo exclui os dados do banco de dados Northwind, uma <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> manipulador é adicionado ao tentar fazer backup do banco de dados em disco antes do <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> operação é executada.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/CS/sql10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/VB/sql10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Deleted" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="EnableCaching">
      <MemberSignature Language="C#" Value="public virtual bool EnableCaching { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableCaching" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.EnableCaching" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnableCaching As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableCaching { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se o controle <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> tem o cache de dados habilitado.</summary>
        <value>
          <see langword="true" /> se o cache de dados estiver habilitado para o controle de fonte de dados; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.SqlDataSource> controle oferece suporte ao cache de dados. Enquanto os dados em cache, o <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> método recupera dados do cache em vez de banco de dados subjacente. Quando o cache expira, o <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> método recupera dados do banco de dados subjacente e os armazena em cache os dados novamente.  
  
 O <xref:System.Web.UI.WebControls.SqlDataSource> controle automaticamente os dados em cache quando o <xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A> está definida como `true` e <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> propriedade é definida como um valor maior que 0, que indica o número de segundos que o cache armazena os dados antes de recuperar um novo conjunto.  
  
> [!IMPORTANT]
>  Quando você estiver usando representação de cliente com a autenticação do Microsoft Windows, os dados são armazenadas em cache quando o primeiro usuário que acessa os dados. Se outro usuário solicita os mesmos dados, os dados são recuperados do cache. Os dados não serão recuperados fazendo outra chamada para o banco de dados para verificar o acesso do usuário aos dados. Se você espera que mais de um usuário para acessar os dados, e você desejar cada recuperação para os dados a ser verificada pelas configurações de segurança para o banco de dados, não use o cache.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como recuperar dados do banco de dados Northwind no Microsoft SQL Server e exibi-lo em um <xref:System.Web.UI.WebControls.GridView> controle com dados em cache habilitada. O <xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A> está definida como `true` e o <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> é definido como 20 segundos. Porque o <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> está definida como o <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> campo por padrão, os usuários desta página verá dados atualizados a cada 20 segundos.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_18sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_18sql/CS/sql18cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_18sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_18sql/VB/sql18vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">A propriedade <see cref="P:System.Web.UI.WebControls.SqlDataSource.EnableCaching" /> está definida como <see langword="true" /> quando o <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> não dá suporte ao cache.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.CacheDuration" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy" />
      </Docs>
    </Member>
    <Member MemberName="FilterExpression">
      <MemberSignature Language="C#" Value="public string FilterExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilterExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilterExpression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define uma expressão de filtragem que é aplicada quando o método <see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" /> é chamado.</summary>
        <value>Uma cadeia de caracteres que representa uma expressão de filtragem aplicada quando os dados são recuperados usando o método <see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> valor da propriedade é uma expressão de cadeia de caracteres de formato (uma cadeia de caracteres que é processada pelo <xref:System.String.Format%2A?displayProperty=nameWithType> método) que usa os valores no <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> coleção de parâmetros de substituição incluído na cadeia de caracteres. A sintaxe de expressão de filtro é a mesma sintaxe que é aceito pelo <xref:System.Data.DataView.RowFilter%2A> propriedade, porque a expressão de filtro é aplicada para o <xref:System.Data.DataView.RowFilter%2A> propriedade do <xref:System.Data.DataView> objeto que é retornado de execução a <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> método. Para obter mais informações, consulte <xref:System.Data.DataColumn.Expression%2A>.  
  
 Se você adicionar parâmetros para o <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> coleção, você também pode incluir espaços reservados de cadeia de caracteres de formato (por exemplo, `"{0}")` na expressão para substituir valores de parâmetro. Os espaços reservados são substituídos de acordo com o índice do parâmetro no <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> coleção. Se um objeto de <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> coleção é `null`, o objeto será substituído por uma cadeia de caracteres vazia.  
  
 Você pode incluir parâmetros de <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> propriedade. Se o parâmetro é um tipo de cadeia de caracteres ou caractere, coloque o parâmetro entre aspas. Aspas não são necessárias, se o parâmetro é um tipo numérico. O <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> coleção contém os parâmetros que são avaliados para os espaços reservados que se encontram no <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> propriedade.  
  
 O <xref:System.Web.UI.WebControls.SqlDataSource> controle oferece suporte à filtragem de dados somente quando estiver no <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> modo.  
  
 O <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> propriedade delega para o <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> propriedade o <xref:System.Web.UI.WebControls.SqlDataSourceView> objeto que está associado com o <xref:System.Web.UI.WebControls.SqlDataSource> controle.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como recuperar dados do banco de dados Northwind e filtrá-los usando um <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> cadeia de caracteres e o <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> coleção. O <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> propriedade é aplicada a qualquer momento o <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> o método é executado para recuperar dados. Neste exemplo, o <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> contém um espaço reservado para um parâmetro de filtro, que está contido no <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> coleção. Além disso, o parâmetro de filtro é um <xref:System.Web.UI.WebControls.ControlParameter> objeto que está associado ao <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> propriedade o <xref:System.Web.UI.WebControls.DropDownList> controle. Porque o <xref:System.Web.UI.WebControls.DropDownList> controle tem seu <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A> propriedade definida como `true`, qualquer alteração na seleção do <xref:System.Web.UI.WebControls.DropDownList> controle faz com que a página postar informações de volta para o servidor e o <xref:System.Web.UI.WebControls.GridView> controle associar novamente para a fonte de dados controle com o novo filtro.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/CS/sql17cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/VB/sql17vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">A propriedade <see cref="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression" /> foi definida e o <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> está no modo <see cref="F:System.Web.UI.WebControls.SqlDataSourceMode.DataReader" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.FilterParameters" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" />
      </Docs>
    </Member>
    <Member MemberName="Filtering">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler Filtering;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler Filtering" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Filtering" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Filtering As SqlDataSourceFilteringEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceFilteringEventHandler ^ Filtering;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre antes de uma operação de filtragem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Manipular o <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> evento para executar operações de validação em valores de parâmetro de filtro antes do <xref:System.Web.UI.WebControls.SqlDataSource> controle executa uma operação de filtro. Você pode cancelar o <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> método definindo o <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propriedade o <xref:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs> do objeto para `true`. O evento é gerado apenas se o <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> está definida.  
  
 O <xref:System.Web.UI.WebControls.SqlDataSource.Filtering?displayProperty=nameWithType> evento delega para o <xref:System.Web.UI.WebControls.SqlDataSourceView.Filtering?displayProperty=nameWithType> eventos do <xref:System.Web.UI.WebControls.SqlDataSourceView> objeto que está associado com o <xref:System.Web.UI.WebControls.SqlDataSource> controle.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection FilterParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection FilterParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.FilterParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilterParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ FilterParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma coleção de parâmetros associados a quaisquer espaços reservados para parâmetro na cadeia de caracteres <see cref="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression" />.</summary>
        <value>Um <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> que contém um conjunto de parâmetros associados a quaisquer espaços reservados para parâmetro encontrados na propriedade <see cref="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Os parâmetros a <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> coleção estão associados com os parâmetros que são especificados no <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> propriedade. Os espaços reservados de parâmetro que são especificados no <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> propriedade correspondem a ordem para objetos de parâmetro no <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> coleção quando o <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> método é chamado.  
  
 O <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> propriedade recupera o <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> propriedade contido pelo <xref:System.Web.UI.WebControls.SqlDataSourceView> objeto que está associado com o <xref:System.Web.UI.WebControls.SqlDataSource> controle.  
  
> [!IMPORTANT]
>  Valores são inseridos em parâmetros sem validação, que é uma possível ameaça à segurança. Use o <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> evento para validar valores de parâmetro antes de executar a consulta. Para obter mais informações, consulte [Visão geral de explorações de script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como recuperar dados do banco de dados Northwind e filtrá-los usando o <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> e <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> propriedades. O <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> propriedade o <xref:System.Web.UI.WebControls.SqlDataSource> controle é aplicado a qualquer momento o <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> o método é executado para recuperar dados. Neste exemplo, o <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> propriedade contém um espaço reservado para um parâmetro de filtro, que está contido no <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> coleção. Além disso, o parâmetro de filtro é um <xref:System.Web.UI.WebControls.ControlParameter> objeto que está associado ao <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> propriedade o <xref:System.Web.UI.WebControls.DropDownList> controle. Porque o <xref:System.Web.UI.WebControls.DropDownList> controle tem seu <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A> propriedade definida como `true`, qualquer alteração no <xref:System.Web.UI.WebControls.DropDownList> seleção faz com que a página postar informações de volta para o servidor e o <xref:System.Web.UI.WebControls.GridView> controle associar novamente para o controle de fonte de dados com o novo filtro.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/CS/sql17cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/VB/sql17vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" />
      </Docs>
    </Member>
    <Member MemberName="GetDbProviderFactory">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.DbProviderFactory GetDbProviderFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.DbProviderFactory GetDbProviderFactory() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.GetDbProviderFactory" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetDbProviderFactory () As DbProviderFactory" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::DbProviderFactory ^ GetDbProviderFactory();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbProviderFactory</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna o objeto <see cref="T:System.Data.Common.DbProviderFactory" /> que está associado ao provedor ADO.NET que é identificado pela propriedade <see cref="P:System.Web.UI.WebControls.SqlDataSource.ProviderName" />.</summary>
        <returns>Um <see cref="T:System.Data.Common.DbProviderFactory" /> que representa o provedor ADO.NET identificado; caso contrário, uma instância do <see cref="N:System.Data.SqlClient" />, se nenhum provedor é definido.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Data.Common.DbProviderFactory> propriedade é usada pelo <xref:System.Web.UI.WebControls.SqlDataSource> controle para criar os objetos de conexão, o comando e o parâmetro ADO.NET corretos ao interagir com um banco de dados.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.Common.DbProviderFactory" />
      </Docs>
    </Member>
    <Member MemberName="GetView">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.DataSourceView GetView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.DataSourceView GetView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.GetView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetView (viewName As String) As DataSourceView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::DataSourceView ^ GetView(System::String ^ viewName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">O nome da exibição a ser recuperada. Como o <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> dá suporte a apenas uma exibição, <c>viewName</c> é ignorado.</param>
        <summary>Obtém a exibição de fonte de dados nomeada associada ao controle de fonte de dados.</summary>
        <returns>O <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> chamado "Table" que está associado à <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.SqlDataSource> controle oferece suporte à exibição da fonte de dados de apenas um. Assim como acontece com todos os objetos de exibição de fonte de dados, o <xref:System.Web.UI.WebControls.SqlDataSourceView> objeto que está associado com o controle de fonte de dados define seus recursos, executa todo o trabalho que é necessário para recuperar dados do banco de dados subjacente e executa operações, como classificação, inserção, exclusão e atualização.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          O <paramref name="viewName" /> é <see langword="null" /> ou algo diferente de <c>Table</c>.</exception>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceView" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.GetViewNames" />
      </Docs>
    </Member>
    <Member MemberName="GetViewNames">
      <MemberSignature Language="C#" Value="protected override System.Collections.ICollection GetViewNames ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.ICollection GetViewNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.GetViewNames" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetViewNames () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::ICollection ^ GetViewNames();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtém uma coleção de nomes que representa a lista de objetos de exibição associados ao controle <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</summary>
        <returns>Uma <see cref="T:System.Collections.ICollection" /> que contém os nomes das exibições associadas à <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.SqlDataSource> controle oferece suporte a apenas uma exibição em seus dados subjacentes, denominados `"Table"`. O <xref:System.Web.UI.WebControls.SqlDataSource.GetViewNames%2A> método retorna uma coleção de elemento único desse nome de um modo de exibição.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.GetView(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public int Insert ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Insert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Insert();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Executa uma operação de inserção usando a cadeia de caracteres SQL <see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" /> e os parâmetros que estão na coleção <see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />.</summary>
        <returns>Um valor que representa o número de linhas inseridas no banco de dados subjacente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Antes da operação de inserção é executada, o <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> método é chamado para gerar o <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> evento. Você pode manipular esse evento para examinar os valores dos parâmetros e executar qualquer pré-processamento antes do <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> operação. Para executar uma operação de inserção, o <xref:System.Web.UI.WebControls.SqlDataSourceView> objeto compilações um <xref:System.Data.Common.DbCommand> objeto usando o <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> texto e associados <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> propriedades e, em seguida, executa o <xref:System.Data.Common.DbCommand> objeto no banco de dados subjacente.  
  
 Após a conclusão da operação, o <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> método é chamado para gerar o <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> evento. Você pode manipular esse evento para examinar quaisquer valores de retorno e os códigos de erro e executar qualquer pós-processamento.  
  
 O <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> método é fornecido para o acesso programático para o `Insert` método. Se o <xref:System.Web.UI.WebControls.SqlDataSource> controle está associado um controle associado a dados, o controle de associação de dados chama automaticamente o `Insert` método.  
  
 O <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> método delega para o <xref:System.Web.UI.WebControls.SqlDataSourceView.Insert%2A> método o <xref:System.Web.UI.WebControls.SqlDataSourceView> objeto que está associado com o <xref:System.Web.UI.WebControls.SqlDataSource> controle.  
  
> [!IMPORTANT]
>  Valores são inseridos em parâmetros sem validação, que é uma possível ameaça à segurança. Use o <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> evento para validar valores de parâmetro antes de executar a consulta. Para obter mais informações, consulte [Visão geral de explorações de script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como inserir dados em um banco de dados usando o <xref:System.Web.UI.WebControls.SqlDataSource> controle e uma página de Web Forms simple. Os dados atuais na tabela de dados são exibidos no <xref:System.Web.UI.WebControls.DropDownList> controle. Você pode adicionar novos registros inserindo valores no <xref:System.Web.UI.WebControls.TextBox> controles e, em seguida, clicando no **inserir** botão. Quando o **inserir** botão é clicado, os valores especificados são inseridos no banco de dados e, em seguida, o <xref:System.Web.UI.WebControls.DropDownList> é atualizado.  
  
> [!IMPORTANT]
>  Este exemplo inclui uma caixa de texto que aceita a entrada do usuário, que é uma possível ameaça à segurança e os valores são inseridos em parâmetros sem validação, que também é uma possível ameaça à segurança. Use o <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> evento para validar valores de parâmetro antes de executar a consulta. Para obter mais informações, consulte [Visão geral de explorações de script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
> [!NOTE]
>  Este exemplo mostra como usar a sintaxe declarativa para acesso a dados. Para obter informações sobre como acessar dados por meio de código em vez de marcações, consulte [acesso a dados no Visual Studio](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/CS/sql24cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/VB/sql24vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> não pode estabelecer uma conexão com a fonte de dados subjacente.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public string InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InsertCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a cadeia de caracteres SQL que o controle <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> usa para inserir dados do banco de dados subjacente.</summary>
        <value>Uma cadeia de caracteres SQL usada pelo <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> para inserir dados.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> representa uma consulta SQL ou o nome de um procedimento armazenado e é usado pelo <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> método.  
  
 Porque os produtos diferentes de base de dados usam diferentes variedades SQL, a sintaxe da cadeia de caracteres SQL depende do provedor atual do ADO.NET que está sendo usado, que é identificado pela propriedade de <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> . Se a cadeia de caracteres SQL é uma consulta ou comando parametrizado, o espaço reservado de parâmetro também depende do provedor ADO.NET sendo usado. Por exemplo, se o provedor é o <xref:System.Data.SqlClient?displayProperty=nameWithType>, que é o provedor padrão para o <xref:System.Web.UI.WebControls.SqlDataSource> classe, o espaço reservado do parâmetro é `'@parameterName'`. No entanto, se o provedor está definido como o <xref:System.Data.Odbc?displayProperty=nameWithType> ou <xref:System.Data.OleDb?displayProperty=nameWithType>, o espaço reservado do parâmetro é `'?'`. Para obter mais informações sobre comandos e consultas SQL parametrizadas, consulte [usando parâmetros com o controle SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
 O <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> pode ser uma cadeia de caracteres SQL ou o nome de um procedimento armazenado, se a fonte de dados oferece suporte a procedimentos armazenados.  
  
 Essa propriedade delega para o <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> propriedade o <xref:System.Web.UI.WebControls.SqlDataSourceView> que está associado a <xref:System.Web.UI.WebControls.SqlDataSource> controle.  
  
> [!IMPORTANT]
>  Para fins de segurança, o <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> propriedade é armazenada não é o estado de exibição. Como é possível decodificar o conteúdo do estado de exibição no cliente, armazenando informações confidenciais sobre a estrutura de banco de dados no modo de exibição estado pode resultar em uma vulnerabilidade de divulgação de informações.  
  
> [!IMPORTANT]
>  Valores são inseridos em parâmetros sem validação, que é uma possível ameaça à segurança. Use o <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> evento para validar valores de parâmetro antes de executar a consulta. Para obter mais informações, consulte [Visão geral de explorações de script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 Esta seção contém dois exemplos de código. O primeiro exemplo de código demonstra como inserir dados em um banco de dados usando o <xref:System.Web.UI.WebControls.SqlDataSource> controle e uma página de Web Forms simple. O segundo exemplo de código demonstra como recuperar dados do Microsoft SQL Server e exibi-lo em uma <xref:System.Web.UI.WebControls.GridView> controle e como usar um <xref:System.Web.UI.WebControls.DetailsView> controle para ver os detalhes de uma linha selecionada no <xref:System.Web.UI.WebControls.GridView> controle e como um formulário para inserir novos registros.  
  
> [!NOTE]
>  Estes exemplos mostram como usar a sintaxe declarativa para acesso a dados. Para obter informações sobre como acessar dados por meio de código em vez de marcações, consulte [acesso a dados no Visual Studio](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc).  
  
 O exemplo de código a seguir demonstra como inserir dados em um banco de dados usando o <xref:System.Web.UI.WebControls.SqlDataSource> controle e uma página de Web Forms simple. Os dados atuais na tabela de dados são exibidos no <xref:System.Web.UI.WebControls.DropDownList> controle. Você pode adicionar novos registros inserindo valores para o <xref:System.Web.UI.WebControls.TextBox> controles e, em seguida, clicando no **inserir** botão. Quando o **inserir** botão é clicado, os valores especificados são inseridos no banco de dados e o <xref:System.Web.UI.WebControls.DropDownList> controle é atualizado.  
  
> [!IMPORTANT]
>  Este exemplo inclui uma caixa de texto que aceita a entrada do usuário, que é uma possível ameaça à segurança, e os valores são inseridos em parâmetros sem validação, que também é uma possível ameaça à segurança. Use o <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> evento para validar valores de parâmetro antes de executar a consulta. Para obter mais informações, consulte [Visão geral de explorações de script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/CS/sql24cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/VB/sql24vb.aspx#1)]  
  
 O exemplo de código a seguir demonstra como recuperar dados do SQL Server e exibi-lo em uma <xref:System.Web.UI.WebControls.GridView> controle e como usar um <xref:System.Web.UI.WebControls.DetailsView> controle para ver os detalhes de uma linha selecionada no <xref:System.Web.UI.WebControls.GridView> controle e como um formulário para inserir novos registros.  
  
 Inicialmente, os dados são exibidos no <xref:System.Web.UI.WebControls.GridView> controle e a linha selecionada do <xref:System.Web.UI.WebControls.GridView> também é exibida no <xref:System.Web.UI.WebControls.DetailsView> controle. O <xref:System.Web.UI.WebControls.GridView> e <xref:System.Web.UI.WebControls.DetailsView> controles usar dados diferentes controles de origem; que está associado a <xref:System.Web.UI.WebControls.DetailsView> tem o <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> e <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> propriedades, o que garante que a linha selecionada do <xref:System.Web.UI.WebControls.GridView> é exibido.  
  
 Se você clicar em automaticamente gerado **inserir** botão do <xref:System.Web.UI.WebControls.DetailsView> controle, o <xref:System.Web.UI.WebControls.DetailsView> mostra uma interface de usuário diferente, que é usada para inserir um novo registro. O exemplo usa um procedimento armazenado para inserir registros e retorna a chave primária da linha inserida. Se você inserir um registro, o <xref:System.Web.UI.WebControls.DetailsView> preenche automaticamente o <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> coleção com valores das colunas associadas e chama o <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> método. O <xref:System.Web.UI.WebControls.DetailsView> pode deduzir os parâmetros corretos de qualquer <xref:System.Web.UI.WebControls.BoundField> objeto e um parâmetro para o <xref:System.Web.UI.WebControls.TemplateField> objeto quando a sintaxe de associação de dados bidirecional do ASP.NET é usada. Neste exemplo, um parâmetro adicional é adicionado a <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> manipulador de eventos para lidar com a chave primária que é retornada pelo procedimento armazenado.  
  
 Por fim, depois que dados são inseridos no banco de dados, o <xref:System.Web.UI.WebControls.DetailsView> controle, o <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> manipulador de eventos é chamado para manipular a <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> evento, o valor da chave primária da linha inserida é exibido e o <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> método o <xref:System.Web.UI.WebControls.GridView> controle for chamado explicitamente para atualizar os dados.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
      </Docs>
    </Member>
    <Member MemberName="InsertCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType InsertCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType InsertCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.InsertCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType InsertCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se o texto da propriedade <see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" /> é uma instrução SQL ou o nome de um procedimento armazenado.</summary>
        <value>Um dos valores de <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />. O padrão é o valor <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommandType%2A> propriedade delega para o <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType%2A> propriedade o <xref:System.Web.UI.WebControls.SqlDataSourceView> objeto que está associado com o <xref:System.Web.UI.WebControls.SqlDataSource> controle.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como recuperar dados de um banco de dados do Microsoft SQL Server e exibi-lo em um <xref:System.Web.UI.WebControls.GridView> controle. Ele também demonstra como usar um <xref:System.Web.UI.WebControls.DetailsView> controle para ver os detalhes de uma linha selecionada no <xref:System.Web.UI.WebControls.GridView> e como um formulário para inserir novos registros.  
  
 O <xref:System.Web.UI.WebControls.GridView> controle exibe um conjunto de dados e o <xref:System.Web.UI.WebControls.DetailsView> exibe os detalhes de uma linha específica. Se você clicar em automaticamente gerado **inserir** botão do <xref:System.Web.UI.WebControls.DetailsView> controle, o <xref:System.Web.UI.WebControls.DetailsView> mostra uma interface de usuário diferente, que é usada para inserir um novo registro. O exemplo usa um procedimento armazenado para inserir registros e retorna a chave primária da linha inserida. O nome do procedimento armazenado é definido <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> propriedade e identificado como um procedimento armazenado, definindo o <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommandType%2A> propriedade para o <xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure> valor.  
  
 Depois que dados são inseridos no banco de dados, o <xref:System.Web.UI.WebControls.DetailsView> controle, o <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> manipulador de eventos é chamado para manipular a <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> evento, o valor da chave primária da linha inserida é exibido e o <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> método o <xref:System.Web.UI.WebControls.GridView> controle é chamado explicitamente para atualizar os dados.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="Inserted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Inserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Inserted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Inserted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserted As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Inserted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando uma operação de inserção foi concluída.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Manipular o <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> evento para examinar os valores de parâmetros de saída após uma operação de inserção. Os parâmetros de saída estão disponíveis no <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> objeto que está associado com o evento.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como recuperar dados do Microsoft SQL Server e exibi-lo em uma <xref:System.Web.UI.WebControls.GridView> controle e como usar um <xref:System.Web.UI.WebControls.DetailsView> controle para ver os detalhes de uma linha selecionada no <xref:System.Web.UI.WebControls.GridView> e como um formulário para inserir novos registros.  
  
> [!NOTE]
>  Este exemplo mostra como usar a sintaxe declarativa para acesso a dados. Para obter informações sobre como acessar dados por meio de código em vez de marcações, consulte [acesso a dados no Visual Studio](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc).  
  
 Inicialmente, os dados são exibidos no <xref:System.Web.UI.WebControls.GridView> controle e a linha selecionada do <xref:System.Web.UI.WebControls.GridView> também é exibida no <xref:System.Web.UI.WebControls.DetailsView> controle. O <xref:System.Web.UI.WebControls.GridView> e <xref:System.Web.UI.WebControls.DetailsView> controles usar dados diferentes controles de origem; que está associado a <xref:System.Web.UI.WebControls.DetailsView> tem o <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> e <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> propriedades, o que garante que a linha selecionada do <xref:System.Web.UI.WebControls.GridView> é exibido.  
  
 Se você clicar em automaticamente gerado **inserir** botão do <xref:System.Web.UI.WebControls.DetailsView> controle, o <xref:System.Web.UI.WebControls.DetailsView> mostra uma interface de usuário diferente, que é usada para inserir um novo registro. O exemplo usa um procedimento armazenado para inserir registros e retorna a chave primária da linha inserida. Se você inserir um registro, o <xref:System.Web.UI.WebControls.DetailsView> preenche automaticamente o <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> coleção com valores das colunas associadas e chama o <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> método. O <xref:System.Web.UI.WebControls.DetailsView> pode deduzir os parâmetros corretos de qualquer <xref:System.Web.UI.WebControls.BoundField> objeto e um parâmetro para o <xref:System.Web.UI.WebControls.TemplateField> objeto quando a sintaxe de associação de dados bidirecional do ASP.NET é usada. Neste exemplo, um parâmetro adicional é adicionado a <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> manipulador de eventos para lidar com a chave primária que é retornada pelo procedimento armazenado.  
  
 Por fim, depois que dados são inseridos no banco de dados, o <xref:System.Web.UI.WebControls.DetailsView> controle, o <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> manipulador de eventos é chamado para manipular a <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> evento, o valor da chave primária da linha inserida é exibido e o <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> método o <xref:System.Web.UI.WebControls.GridView> controle for chamado explicitamente para atualizar os dados.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Inserting" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="Inserting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Inserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Inserting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Inserting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserting As SqlDataSourceCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceCommandEventHandler ^ Inserting;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre antes de uma operação de inserção.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Manipular o <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> evento para executar operações de inicialização adicionais que são específicas para seu aplicativo, para validar os valores de parâmetros, ou para alterar os valores de parâmetro antes do <xref:System.Web.UI.WebControls.SqlDataSource> controle executa a operação de inserção. A conexão à fonte de dados subjacente não ainda estiver aberto quando o delegado de manipulador de eventos é chamado. Portanto, você não pode cancelar a operação diretamente, chamando o <xref:System.Data.Common.DbCommand.Cancel%2A> método o <xref:System.Data.Common.DbCommand> objeto que é exposto pelo <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> propriedade. No entanto, você pode cancelar a operação de banco de dados, definindo o <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propriedade o <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> do objeto para `true`.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como recuperar dados do Microsoft SQL Server e exibi-lo em uma <xref:System.Web.UI.WebControls.GridView> controle e como usar um <xref:System.Web.UI.WebControls.DetailsView> controle para ver os detalhes de uma linha selecionada no <xref:System.Web.UI.WebControls.GridView> e como um formulário para inserir novos registros.  
  
> [!NOTE]
>  Este exemplo mostra como usar a sintaxe declarativa para acesso a dados. Para obter informações sobre como acessar dados por meio de código em vez de marcações, consulte [acesso a dados no Visual Studio](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc).  
  
 Inicialmente, os dados são exibidos no <xref:System.Web.UI.WebControls.GridView> controle e a linha selecionada do <xref:System.Web.UI.WebControls.GridView> também é exibida no <xref:System.Web.UI.WebControls.DetailsView> controle. O <xref:System.Web.UI.WebControls.GridView> e <xref:System.Web.UI.WebControls.DetailsView> controles usar dados diferentes controles de origem; que está associado a <xref:System.Web.UI.WebControls.DetailsView> tem o <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> e <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> propriedades, o que garante que a linha selecionada do <xref:System.Web.UI.WebControls.GridView> é exibido.  
  
 Se você clicar em automaticamente gerado **inserir** botão do <xref:System.Web.UI.WebControls.DetailsView> controle, o <xref:System.Web.UI.WebControls.DetailsView> mostra uma interface de usuário diferente, que é usada para inserir um novo registro. O exemplo usa um procedimento armazenado para inserir registros e retorna a chave primária da linha inserida. Se você inserir um registro, o <xref:System.Web.UI.WebControls.DetailsView> preenche automaticamente o <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> coleção com valores das colunas associadas e chama o <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> método. O <xref:System.Web.UI.WebControls.DetailsView> pode deduzir os parâmetros corretos de qualquer <xref:System.Web.UI.WebControls.BoundField> objeto e um parâmetro para o <xref:System.Web.UI.WebControls.TemplateField> quando a sintaxe de associação de dados bidirecional do ASP.NET é usada. Neste exemplo, um parâmetro adicional é adicionado a <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> manipulador de eventos para lidar com a chave primária que é retornada pelo procedimento armazenado.  
  
 Por fim, depois que dados são inseridos no banco de dados, o <xref:System.Web.UI.WebControls.DetailsView> controle, o <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> manipulador de eventos é chamado para manipular a <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> evento, o valor da chave primária da linha inserida é exibido e o `DataBind` método o <xref:System.Web.UI.WebControls.GridView> controle for chamado explicitamente para atualizar os dados.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Inserted" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="InsertParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection InsertParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InsertParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ InsertParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a coleção de parâmetros que contém os parâmetros usados pela propriedade <see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" /> do objeto <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> associado ao controle <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</summary>
        <value>Um <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> que contém os parâmetros usados pela propriedade <see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> propriedade recupera o <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A> propriedade contido pelo <xref:System.Web.UI.WebControls.SqlDataSourceView> objeto que está associado com o <xref:System.Web.UI.WebControls.SqlDataSource> controle.  
  
 Se o <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> propriedade contém uma consulta SQL parametrizada, o <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> coleção contém qualquer <xref:System.Web.UI.WebControls.Parameter> objetos que correspondem aos espaços reservados de parâmetro na cadeia de caracteres SQL.  
  
 Dependendo do provedor ADO.NET, a ordem dos parâmetros de <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> coleção pode ser importante. O <xref:System.Data.OleDb?displayProperty=nameWithType> e <xref:System.Data.Odbc?displayProperty=nameWithType> provedores associar os parâmetros na coleção de acordo com a ordem em que os parâmetros aparecem na consulta SQL com parâmetros. O <xref:System.Data.SqlClient?displayProperty=nameWithType> provedor, que é o provedor ADO.NET padrão para o <xref:System.Web.UI.WebControls.SqlDataSource> controlar, associa parâmetros na coleção por correspondente ao nome do parâmetro com um alias de espaço reservado na consulta SQL. Para obter mais informações sobre comandos e consultas SQL parametrizadas, consulte [usando parâmetros com o controle SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
> [!IMPORTANT]
>  Valores são inseridos em parâmetros sem validação, que é uma possível ameaça à segurança. Use o <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> evento para validar valores de parâmetro antes de executar a consulta. Para obter mais informações, consulte [Visão geral de explorações de script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como inserir dados em um banco de dados usando o <xref:System.Web.UI.WebControls.SqlDataSource> controle e uma página de Web Forms simple. Os dados atuais na tabela de dados são exibidos no <xref:System.Web.UI.WebControls.DropDownList> controle. Você pode adicionar novos registros inserindo valores no <xref:System.Web.UI.WebControls.TextBox> controles e, em seguida, clicando no **inserir** botão. Quando o **inserir** botão é clicado, os valores especificados são inseridos no banco de dados e o <xref:System.Web.UI.WebControls.DropDownList> controle é atualizado.  
  
> [!IMPORTANT]
>  Este exemplo inclui uma caixa de texto que aceita a entrada do usuário, que é uma possível ameaça à segurança, e os valores são inseridos em parâmetros sem validação, que também é uma possível ameaça à segurança. Use o <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> evento para validar valores de parâmetro antes de executar a consulta. Para obter mais informações, consulte [Visão geral de explorações de script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
> [!NOTE]
>  Este exemplo mostra como usar a sintaxe declarativa para acesso a dados. Para obter informações sobre como acessar dados por meio de código em vez de marcações, consulte [acesso a dados no Visual Studio](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/CS/sql24cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/VB/sql24vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Um objeto que representa o estado da <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</param>
        <summary>Carrega os estados das propriedades no controle <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> que devem ser persistentes.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.SqlDataSource.LoadViewState%2A> método é usado para carregar o estado de exibição salvo anteriormente do <xref:System.Web.UI.WebControls.SqlDataSource> controle.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OldValuesParameterFormatString">
      <MemberSignature Language="C#" Value="public string OldValuesParameterFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OldValuesParameterFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property OldValuesParameterFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OldValuesParameterFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("{0}")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define uma cadeia de caracteres de formato para ser aplicada aos nomes dos parâmetros que são passados para o método <see cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" /> ou <see cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />.</summary>
        <value>Uma cadeia de caracteres que representa uma cadeia de caracteres de formato aplicada aos nomes dos parâmetros <paramref name="oldValues" /> passados para os métodos <see cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" /> ou <see cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />. O padrão é "{0}".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> cadeia de caracteres de formato é aplicada somente a chaves primárias, como aqueles que são identificados pelo `DataKeyNames` propriedade do controle de associação de dados associado ou em Excluir e cenários de atualização em que o <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> está definida como o <xref:System.Web.UI.ConflictOptions.CompareAllValues> valor e um conjunto de `oldValues` são passados para o método de dados correspondente. Nesse caso, a cadeia de caracteres de formato é aplicada a cada nome de parâmetro no `oldValues` coleção.  
  
 Dois cenários comuns em que você pode alterar o <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> são de propriedade da seguinte maneira:  
  
-   Para diferenciar entre os valores novos e antigos em atualizações. Quando o <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> está definida como o <xref:System.Web.UI.ConflictOptions.CompareAllValues> valor parâmetros para os valores originais e novos são adicionados para o <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> coleção. Sem a cadeia de caracteres de formatação, dois parâmetros com o mesmo nome seriam criados para cada campo de dados. Alterando o nome do parâmetro de valor original, você pode comparar os dados para a fonte de dados original para detectar conflitos e comparar valores de chave.  
  
-   Alguns designers visuais implementam um esquema de nomenclatura específico para as chaves e valores originais.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.EventArgs" /> que contém os dados do evento.</param>
        <summary>Adiciona um manipulador de eventos <see cref="E:System.Web.UI.Page.LoadComplete" /> ao elemento <see cref="T:System.Web.UI.Page" /> que contém o controle <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O manipulador de eventos é adicionado, o <xref:System.Web.UI.WebControls.SqlDataSource> atualizações do objeto de <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> e <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> valores. Se os valores são atualizados, o <xref:System.Web.UI.IDataSource.DataSourceChanged> é gerado, fazendo com que todos os controles que estão associados ao <xref:System.Web.UI.WebControls.SqlDataSource> controle associar novamente.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderName">
      <MemberSignature Language="C#" Value="public virtual string ProviderName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProviderName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.ProviderName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ProviderName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ProviderName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.WebControls.DataProviderNameConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o nome do provedor de dados .NET Framework que o controle <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> usa para se conectar a uma fonte de dados subjacente.</summary>
        <value>O nome do provedor de dados que o <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> usa; caso contrário, o provedor ADO.NET para Microsoft SQL Server, se nenhum provedor foi definido. O padrão é o provedor ADO.NET para o Microsoft SQL Server.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O .NET Framework inclui os seguintes provedores de dados:  
  
-   O <xref:System.Data.SqlClient?displayProperty=nameWithType> provedor é o padrão do .NET Framework Data Provider para SQL Server.  
  
-   O <xref:System.Data.OleDb?displayProperty=nameWithType> provedor é o provedor de dados .NET Framework para OLE DB.  
  
-   O <xref:System.Data.Odbc?displayProperty=nameWithType> provedor é o provedor de dados .NET Framework para ODBC.  
  
-   O <xref:System.Data.OracleClient?displayProperty=nameWithType> provedor é o provedor de dados .NET Framework para Oracle.  
  
 O <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> propriedade nunca é definida como o nome de um provedor gerenciado do ADO.NET, como `MSDAORA`. Para obter mais informações, consulte [selecionando dados usando o controle SqlDataSource](http://msdn.microsoft.com/library/44623286-ff5a-4148-8a3c-85c56ed545eb).  
  
 Se você alterar o <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> propriedade, o <xref:System.Web.UI.IDataSource.DataSourceChanged> é gerado, fazendo com que todos os controles que estão associados ao <xref:System.Web.UI.WebControls.SqlDataSource> associar novamente.  
  
 Uma lista de provedores disponíveis é especificada no `DbProviderFactories` subseção do `system.data` seção do arquivo Machine. config.  
  
   
  
## Examples  
 Esta seção contém dois exemplos de código. O primeiro código demonstra como se conectar a um banco de dados do SQL Server usando o padrão do .NET Framework Data Provider para SQL Server para o <xref:System.Web.UI.WebControls.SqlDataSource> controle, o <xref:System.Data.SqlClient?displayProperty=nameWithType>. O segundo exemplo de código demonstra como se conectar a um banco de dados ODBC usando o .NET Framework Data Provider para ODBC, o <xref:System.Data.Odbc?displayProperty=nameWithType>.  
  
 O exemplo de código a seguir demonstra como se conectar a um banco de dados do SQL Server usando o provedor de dados padrão para o <xref:System.Web.UI.WebControls.SqlDataSource> controle, o <xref:System.Data.SqlClient?displayProperty=nameWithType>. Sempre que o <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> propriedade não é definida explicitamente, o provedor padrão é usado. O <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> é de propriedade específica do provedor.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_1sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_1sql/CS/sql1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_1sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_1sql/VB/sql1vb.aspx#1)]  
  
 O exemplo de código a seguir, que é funcionalmente o mesmo exemplo de código anterior, demonstra como se conectar a um banco de dados ODBC usando o .NET Framework Data Provider para ODBC, o <xref:System.Data.Odbc?displayProperty=nameWithType>. O <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> propriedade é definida como o nome de um nome de origem do dados ODBC (DSN) é usado para se conectar ao banco de dados ODBC.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_1odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_1odbc/CS/odbc1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_1odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_1odbc/VB/odbc1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.ConnectionString" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Salva o estado de exibição atual do controle <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</summary>
        <returns>Um objeto que contém o estado salvo do <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.IStateManager.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable Select (System.Web.UI.DataSourceSelectArguments arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerable Select(class System.Web.UI.DataSourceSelectArguments arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />
      <MemberSignature Language="VB.NET" Value="Public Function Select (arguments As DataSourceSelectArguments) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerable ^ Select(System::Web::UI::DataSourceSelectArguments ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Web.UI.DataSourceSelectArguments" />
      </Parameters>
      <Docs>
        <param name="arguments">Um objeto <see cref="T:System.Web.UI.DataSourceSelectArguments" /> usado para solicitar operações nos dados além da recuperação de dados básica.</param>
        <summary>Recupera dados do banco de dados subjacente usando a cadeia de caracteres SQL <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" /> e os parâmetros na coleção <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />.</summary>
        <returns>Uma lista <see cref="T:System.Collections.IEnumerable" /> de linhas de dados.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> método é chamado automaticamente durante o <xref:System.Web.UI.Control.PreRender> fase do ciclo de vida da página. Ele é chamado por controles de associação de dados que foi anexados a um <xref:System.Web.UI.WebControls.SqlDataSource> controlar por meio de seus <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> propriedade.  
  
 O <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> método retorna um <xref:System.Data.DataView> objeto se a <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> está definida como o <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> valor. O <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> método retorna um <xref:System.Data.IDataReader> objeto se a <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> está definida como o <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> valor. Fechar o <xref:System.Data.IDataReader> quando você terminar de ler os dados do objeto.  
  
 Antes do <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> operação é executada, o <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting%2A> método é chamado para gerar o <xref:System.Web.UI.WebControls.SqlDataSource.Selecting> evento. Você pode manipular esse evento para examinar os valores dos parâmetros e executar qualquer processamento antes do <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> operação.  
  
 Após o <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> operação for concluída, o <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelected%2A> método é chamado para gerar o <xref:System.Web.UI.WebControls.SqlDataSource.Selected> evento. Você pode manipular esse evento para examinar quaisquer valores de retorno e os códigos de erro e executar qualquer pós-processamento.  
  
 Se o <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> está definida como <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet?displayProperty=nameWithType> e o cache está habilitado, o <xref:System.Web.UI.WebControls.SqlDataSource> objeto recupera e salva dados em cache durante o <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> operação. O cache é criado, descartado ou atualizada com base no comportamento de cache que é especificado pela combinação da <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> e <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> propriedades.  
  
> [!IMPORTANT]
>  Quando você estiver usando representação de cliente com a autenticação do Microsoft Windows, os dados são armazenadas em cache quando o primeiro usuário que acessa os dados. Se outro usuário solicita os mesmos dados, os dados são recuperados do cache. Os dados não serão recuperados fazendo outra chamada para o banco de dados para verificar o acesso do usuário aos dados. Se você espera que mais de um usuário para acessar os dados e você deseja que cada recuperação de dados a ser verificada pelas configurações de segurança para o banco de dados, não use o cache.  
  
 Se o <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> está definida como <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet?displayProperty=nameWithType> e um <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> propriedade foi especificada, a expressão de filtro é avaliada com qualquer fornecido <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> propriedades e o filtro resultante é aplicada à lista de dados durante o <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> operação.  
  
 O <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> método delega para o <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> método o <xref:System.Web.UI.WebControls.SqlDataSourceView> objeto que está associado com o <xref:System.Web.UI.WebControls.SqlDataSource> controle. Para executar uma operação de recuperação de dados, o <xref:System.Web.UI.WebControls.SqlDataSourceView> cria um <xref:System.Data.Common.DbCommand> objeto usando o <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> texto e associados <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> valores e, em seguida, executa o <xref:System.Data.Common.DbCommand> no banco de dados subjacente.  
  
> [!IMPORTANT]
>  Valores são inseridos em parâmetros sem validação, que é uma possível ameaça à segurança. Use o <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> evento para validar valores de parâmetro antes de executar a consulta. Para obter mais informações, consulte [Visão geral de explorações de script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 Os exemplos a seguir mostram como chamar programaticamente o <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> método e definir valores com base no resultado da consulta. O exemplo a seguir mostra o código declarativo para os controles da Web.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource.Select#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource.Select/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource.Select#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource.Select/VB/Default.aspx#1)]  
  
 O exemplo a seguir mostra como chamar programaticamente o <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> método. O <xref:System.Web.UI.WebControls.SqlDataSource> controle retorna um inteiro. O valor do inteiro é usado para definir o texto de um <xref:System.Web.UI.WebControls.Label> controle e determinar se deseja exibir um <xref:System.Web.UI.WebControls.HyperLink> controle.  
  
 [!code-csharp[System.Web.UI.WebControls.SqlDataSource.Select#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource.Select/CS/Default.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.SqlDataSource.Select#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource.Select/VB/Default.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">O objeto <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> não pode estabelecer uma conexão com a fonte de dados subjacente.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public string SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a cadeia de caracteres SQL que o controle <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> usa para recuperar dados do banco de dados subjacente.</summary>
        <value>Uma cadeia de caracteres SQL ou o nome de um procedimento armazenado que o <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> usa para recuperar dados.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> propriedade representa uma consulta SQL ou o nome de um procedimento armazenado e é usada pelo <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> método para recuperar dados de um banco de dados do SQL Server. Se você usar um asterisco (*) no comando Select para selecionar todas as colunas e se você usar a geração automática de código para executar a atualização ou exclusão de operações, verifique se nenhuma coluna tiver espaços em seus nomes.  
  
 Porque os produtos diferentes de base de dados usam diferentes variedades SQL, a sintaxe da cadeia de caracteres SQL depende do provedor atual do ADO.NET que está sendo usado, que é identificado pela propriedade de <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> . Se a cadeia de caracteres SQL é uma consulta ou comando parametrizado, o espaço reservado de parâmetro também depende do provedor ADO.NET sendo usado. Por exemplo, se o provedor é o <xref:System.Data.SqlClient?displayProperty=nameWithType>, que é o provedor padrão para o <xref:System.Web.UI.WebControls.SqlDataSource> classe, o espaço reservado do parâmetro é `'@parameterName'`. No entanto, se o provedor está definido como o <xref:System.Data.Odbc?displayProperty=nameWithType> ou <xref:System.Data.OleDb?displayProperty=nameWithType>, o espaço reservado do parâmetro é `'?'`. Para obter mais informações sobre comandos e consultas SQL parametrizadas, consulte [usando parâmetros com o controle SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
 O <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> propriedade pode ser uma cadeia de caracteres SQL ou o nome de um procedimento armazenado, se a fonte de dados oferece suporte a procedimentos armazenados.  
  
 O <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> propriedade delega para o <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> propriedade o <xref:System.Web.UI.WebControls.SqlDataSourceView> objeto que está associado com o <xref:System.Web.UI.WebControls.SqlDataSource> controle.  
  
> [!IMPORTANT]
>  Para fins de segurança, o <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> propriedade é armazenada não é o estado de exibição. Como é possível decodificar o conteúdo do estado de exibição no cliente, armazenando informações confidenciais sobre a estrutura de banco de dados no modo de exibição estado pode resultar em uma vulnerabilidade de divulgação de informações.  
  
> [!IMPORTANT]
>  Valores são inseridos em parâmetros sem validação, que é uma possível ameaça à segurança. Use o <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> evento para validar valores de parâmetro antes de executar a consulta. Para obter mais informações, consulte [Visão geral de explorações de script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 Esta seção contém dois exemplos de código. O primeiro exemplo de código demonstra como definir a <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> texto para uma consulta SQL básica para recuperar dados de um banco de dados compatível com ODBC e exibi-lo em um <xref:System.Web.UI.WebControls.GridView> controle. O segundo exemplo de código demonstra como definir a <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> texto para o nome de um procedimento armazenado e o <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A> propriedade para o <xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure> valor para recuperar dados de um banco de dados do Microsoft SQL Server e exibi-lo em um <xref:System.Web.UI.WebControls.DropDownList> controle.  
  
 Nos dois exemplos, não é necessário chamar explicitamente o <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> método porque os controles de associação de dados que estão anexados à fonte de dados de controle por meio de <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> propriedade automaticamente chamará o <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> método durante o <xref:System.Web.UI.Control.PreRender> fase.  
  
 O exemplo de código a seguir demonstra como definir a <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> texto para uma consulta SQL básica para recuperar dados de um banco de dados compatível com ODBC e exibi-lo em um <xref:System.Web.UI.WebControls.GridView> controle.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_4odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_4odbc/CS/odbc4cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_4odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_4odbc/VB/odbc4vb.aspx#1)]  
  
 O exemplo de código a seguir demonstra como definir a <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> texto para o nome de um procedimento armazenado e o <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A> propriedade para o <xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure> valor para recuperar dados de um banco de dados do SQL Server e exibi-lo em um <xref:System.Web.UI.WebControls.DropDownList> controle. O <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> propriedade pode ser uma consulta SQL ou o nome de um procedimento armazenado, se a fonte de dados oferece suporte a procedimentos armazenados.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/CS/sql14cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/VB/sql14vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />
      </Docs>
    </Member>
    <Member MemberName="SelectCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType SelectCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType SelectCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.SelectCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType SelectCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se o texto da propriedade <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" /> é uma consulta SQL ou o nome de um procedimento armazenado.</summary>
        <value>Um dos valores de <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />. O padrão é o valor <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A> propriedade delega para o <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType%2A> propriedade o <xref:System.Web.UI.WebControls.SqlDataSourceView> objeto que está associado com o <xref:System.Web.UI.WebControls.SqlDataSource> controle.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como definir a <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> texto para o nome de um procedimento armazenado e o <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A> propriedade para o <xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure> valor, para recuperar dados de um banco de dados do Microsoft SQL Server e exibi-lo em um <xref:System.Web.UI.WebControls.DropDownList> controle.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/CS/sql14cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/VB/sql14vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Selected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Selected" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selected As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Selected;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando uma operação de recuperação de dados for concluída.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Manipular o <xref:System.Web.UI.WebControls.SqlDataSource.Selected> evento para examinar os valores de parâmetros de saída depois de uma operação de recuperação de dados foi concluída. Os parâmetros de saída estão disponíveis no <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> objeto que está associado com o evento.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Selecting" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="Selecting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler Selecting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler Selecting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Selecting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selecting As SqlDataSourceSelectingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceSelectingEventHandler ^ Selecting;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre antes de uma operação de recuperação de dados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Manipular o <xref:System.Web.UI.WebControls.SqlDataSource.Selecting> evento para executar operações de inicialização adicionais que são específicas para seu aplicativo, para validar os valores de parâmetros, ou para alterar os valores de parâmetro antes do <xref:System.Web.UI.WebControls.SqlDataSource> controle executa a operação select. Os argumentos selecionados estão disponíveis a <xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs> objeto que está associado com o evento.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Selected" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="SelectParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection SelectParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ SelectParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a coleção de parâmetros que contém os parâmetros usados pela propriedade <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" /> do objeto <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> associado ao controle <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</summary>
        <value>Um <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> que contém os parâmetros usados pela propriedade <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> propriedade contém uma consulta SQL parametrizada, o <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> coleção contém qualquer <xref:System.Web.UI.WebControls.Parameter> objetos que correspondem aos espaços reservados de parâmetro na cadeia de caracteres SQL.  
  
 Dependendo do provedor ADO.NET, a ordem dos parâmetros de <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> coleção pode ser importante. O <xref:System.Data.OleDb?displayProperty=nameWithType> e <xref:System.Data.Odbc?displayProperty=nameWithType> provedores associar os parâmetros na coleção de acordo com a ordem em que os parâmetros aparecem na consulta SQL com parâmetros. O <xref:System.Data.SqlClient?displayProperty=nameWithType> provedor, que é o provedor ADO.NET padrão para o <xref:System.Web.UI.WebControls.SqlDataSource> controlar, associa parâmetros na coleção por correspondente ao nome do parâmetro com um alias de espaço reservado na consulta SQL. Para obter mais informações sobre comandos e consultas SQL parametrizadas, consulte [usando parâmetros com o controle SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
 O <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> propriedade recupera o <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A> propriedade contido pelo <xref:System.Web.UI.WebControls.SqlDataSourceView> objeto que está associado com o <xref:System.Web.UI.WebControls.SqlDataSource> controle.  
  
> [!IMPORTANT]
>  Valores são inseridos em parâmetros sem validação, que é uma possível ameaça à segurança. Use o <xref:System.Web.UI.WebControls.SqlDataSource.Selecting> evento para validar valores de parâmetro antes de executar a consulta. Para obter mais informações, consulte [Visão geral de explorações de script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como recuperar dados do banco de dados Northwind no Microsoft SQL Server, definindo o <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> propriedade para uma consulta SQL. A consulta SQL é parametrizada e o espaço reservado para o <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> propriedade está de acordo com o <xref:System.Web.UI.WebControls.ControlParameter> objeto que é adicionado ao <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> coleção. O <xref:System.Web.UI.WebControls.DropDownList> controlar quais o <xref:System.Web.UI.WebControls.ControlParameter> está associado ao, atua como um filtro para o que é exibido no <xref:System.Web.UI.WebControls.ListBox> controle.  
  
 Para obter informações sobre outros tipos de parâmetros que você pode usar, consulte o <xref:System.Web.UI.WebControls.Parameter> visão geral da classe.  
  
> [!NOTE]
>  Como o parâmetro é usado em uma cláusula WHERE, o uso do <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> propriedade no exemplo de código é funcionalmente equivalente a usar o <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> e <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> propriedades.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_2sql/CS/sql2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_2sql/VB/sql2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />
      </Docs>
    </Member>
    <Member MemberName="SortParameterName">
      <MemberSignature Language="C#" Value="public string SortParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.SortParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property SortParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SortParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o nome de um parâmetro de procedimento armazenado que é usado para classificar os dados recuperados quando a recuperação de dados é executada usando um procedimento armazenado.</summary>
        <value>O nome de um parâmetro de procedimento armazenado usado para classificar os dados recuperados quando a recuperação de dados é executada usando um procedimento armazenado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> propriedade é avaliada somente quando o SQL que é de comando contido pelo <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> propriedade é o nome de um procedimento armazenado. Nesse caso, se o <xref:System.Web.UI.WebControls.SqlDataSource.SortParameterName%2A> estiver definida, ela contém o nome de um parâmetro que é usado para classificar os resultados do procedimento armazenado.  
  
 Se o <xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A> está definida, ele é anexado ao <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> propriedade.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />
      </Docs>
    </Member>
    <Member MemberName="SqlCacheDependency">
      <MemberSignature Language="C#" Value="public virtual string SqlCacheDependency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SqlCacheDependency" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SqlCacheDependency As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SqlCacheDependency { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define uma cadeia de caracteres separada por ponto-e-vírgula que indica quais bancos de dados e tabelas usar para a dependência de cache do Microsoft SQL Server.</summary>
        <value>Uma cadeia de caracteres que indica quais bancos de dados e tabelas usar para a dependência de cache do SQL Server.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.SqlDataSource> controle oferece suporte a uma política de expiração opcional com base no <xref:System.Web.Caching.SqlCacheDependency> objeto para o cache de dados (o serviço deve ser configurado para o servidor de banco de dados).  
  
 O <xref:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency%2A> cadeia de caracteres identifica os bancos de dados e tabelas de acordo com o mesmo formato que é usado pelo `@ Page` diretiva, onde a primeira parte da cadeia de caracteres é uma cadeia de caracteres de conexão para um banco de dados do Microsoft SQL Server, seguido por um delimitador de vírgula e, finalmente, o nome da tabela de banco de dados (por exemplo, `"connectionstring1:table1"`). Se o <xref:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency%2A> propriedade depende de mais de uma tabela, os pares de nome de tabela e de cadeia de caracteres de conexão são separados por ponto e vírgula (por exemplo, `"connectionstring1:table1";connectionstring2:table2"`).  
  
> [!IMPORTANT]
>  Quando você estiver usando representação de cliente com a autenticação do Microsoft Windows, os dados são armazenadas em cache quando o primeiro usuário que acessa os dados. Se outro usuário solicita os mesmos dados, os dados são recuperados do cache. Os dados não serão recuperados fazendo outra chamada para o banco de dados para verificar o acesso do usuário aos dados. Se você espera que mais de um usuário para acessar os dados, e você desejar cada recuperação para os dados a ser verificada pelas configurações de segurança para o banco de dados, não use o cache.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como criar uma dependência de cache do SQL Server e definir o <xref:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency%2A> propriedade de um <xref:System.Web.UI.WebControls.SqlDataSource> controle. Neste exemplo, o banco de dados é sondado a cada 120 segundos. Se os dados da Northwind Traders funcionários tabela alterações durante tempo, todos os dados armazenados em cache pelo <xref:System.Web.UI.WebControls.SqlDataSource> controlar e exibidos pelo <xref:System.Web.UI.WebControls.GridView> controle é atualizado pelo <xref:System.Web.UI.WebControls.SqlDataSource> controlar na próxima vez que o banco de dados é monitorado.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_23sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_23sql/CS/sql23cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_23sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_23sql/VB/sql23vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.SqlCacheDependency" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Acompanha as alterações de estado de exibição feitas ao controle <see cref="T:System.Web.UI.WebControls.SqlDataSource" />, de modo que as alterações possam ser armazenadas no objeto <see cref="T:System.Web.UI.StateBag" /> para o controle.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.SqlDataSource.TrackViewState%2A> método é substituído para marcar o ponto de partida para iniciar o rastreamento e salvar alterações para o controle como parte do estado de exibição para o controle.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IStateManager.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.Update" />
      <MemberSignature Language="VB.NET" Value="Public Function Update () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Executa uma operação de atualização usando a cadeia de caracteres SQL <see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" /> e os parâmetros que estão na coleção <see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />.</summary>
        <returns>Um valor que representa o número de linhas atualizadas no banco de dados subjacente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> método é chamado automaticamente pelo <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, e <xref:System.Web.UI.WebControls.FormView> controla durante um postback, se os dados foram alterados. Para os dados que foram alterados em outros controles, o <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> método pode ser chamado explicitamente no postback durante o <xref:System.Windows.Forms.Form.Load> evento.  
  
 Antes do <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> operação é executada, o <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A> método é chamado para gerar o <xref:System.Web.UI.WebControls.SqlDataSource.Updating> evento. Você pode manipular esse evento para examinar os valores dos parâmetros e executar qualquer pré-processamento antes de um <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> operação.  
  
 Após o <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> operação for concluída, o <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated%2A> método é chamado para gerar o <xref:System.Web.UI.WebControls.SqlDataSource.Updated> evento. Você pode manipular esse evento para examinar quaisquer valores de retorno e os códigos de erro e executar qualquer pós-processamento.  
  
 O <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> método delega para o <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A> método o <xref:System.Web.UI.WebControls.SqlDataSourceView> objeto que está associado com o <xref:System.Web.UI.WebControls.SqlDataSource> controle. Para executar uma operação de atualização, o <xref:System.Web.UI.WebControls.SqlDataSourceView> cria um <xref:System.Data.Common.DbCommand> objeto usando o <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> texto e associados <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> propriedades e, em seguida, executa o <xref:System.Data.Common.DbCommand> objeto no banco de dados subjacente.  
  
> [!IMPORTANT]
>  Valores são inseridos em parâmetros sem validação, que é uma possível ameaça à segurança. Use o <xref:System.Web.UI.WebControls.SqlDataSource.Updating> evento para validar valores de parâmetro antes de executar a consulta. Para obter mais informações, consulte [Visão geral de explorações de script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 Esta seção contém dois exemplos de código. O primeiro exemplo de código demonstra como usar um <xref:System.Web.UI.WebControls.SqlDataSource> controle para exibir dados em um <xref:System.Web.UI.WebControls.DropDownList> controlar e atualizar dados quando o **enviar** botão é clicado. O segundo exemplo de código demonstra como exibir os dados recuperados de um banco de dados do Microsoft SQL Server em uma <xref:System.Web.UI.WebControls.DropDownList> controlar e atualizar o registro usando um <xref:System.Web.UI.WebControls.TextBox> controle.  
  
 O exemplo de código a seguir demonstra como usar um <xref:System.Web.UI.WebControls.SqlDataSource> controle para exibir dados em um <xref:System.Web.UI.WebControls.DropDownList> controlar e atualizar dados quando o **enviar** botão é clicado. O <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> propriedade é definida com uma instrução SQL parametrizada e dois <xref:System.Web.UI.WebControls.ControlParameter> parâmetros serão adicionados para o <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> coleção. Quando o **enviar** botão é clicado, o <xref:System.Web.UI.WebControls.Button.OnClick%2A> evento é tratado para chamar o <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> método explicitamente.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/CS/sql8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/VB/sql8vb.aspx#1)]  
  
 O exemplo de código a seguir demonstra como exibir os dados recuperados de um banco de dados do SQL Server em uma <xref:System.Web.UI.WebControls.DropDownList> controlar e atualizar o registro usando um <xref:System.Web.UI.WebControls.TextBox> controle. O exemplo mostra como você pode usar um <xref:System.Data.Common.DbTransaction> objeto para adicionar o contexto de transação ao usar o <xref:System.Web.UI.WebControls.SqlDataSource> controle para atualizar dados.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/CS/sql9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/VB/sql9vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> não pode estabelecer uma conexão com a fonte de dados subjacente.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public string UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UpdateCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a cadeia de caracteres SQL que o controle <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> usa para atualizar dados do banco de dados subjacente.</summary>
        <value>Uma cadeia de caracteres SQL usada pelo <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> para atualizar dados.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> representa uma consulta SQL ou o nome de um procedimento armazenado e é usado pelo <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> método.  
  
 Porque os produtos diferentes de base de dados usam diferentes variedades SQL, a sintaxe da cadeia de caracteres SQL depende do provedor atual do ADO.NET que está sendo usado, que é identificado pela propriedade de <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> . Se a cadeia de caracteres SQL é uma consulta ou comando parametrizado, o espaço reservado de parâmetro também depende do provedor ADO.NET sendo usado. Por exemplo, se o provedor é o <xref:System.Data.SqlClient?displayProperty=nameWithType>, que é o provedor padrão para o <xref:System.Web.UI.WebControls.SqlDataSource> classe, o espaço reservado do parâmetro é `'@parameterName'`. No entanto, se o provedor está definido como o <xref:System.Data.Odbc?displayProperty=nameWithType> ou <xref:System.Data.OleDb?displayProperty=nameWithType>, o espaço reservado do parâmetro é `'?'`. Para obter mais informações sobre comandos e consultas SQL parametrizadas, consulte [usando parâmetros com o controle SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
 O <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> propriedade pode ser uma cadeia de caracteres SQL ou o nome de um procedimento armazenado, se a fonte de dados oferece suporte a procedimentos armazenados.  
  
 O <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> propriedade delega para o <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> propriedade o <xref:System.Web.UI.WebControls.SqlDataSourceView> objeto que está associado com o <xref:System.Web.UI.WebControls.SqlDataSource> controle.  
  
> [!IMPORTANT]
>  Para fins de segurança, o <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> propriedade é armazenada não é o estado de exibição. Como é possível decodificar o conteúdo do estado de exibição no cliente, armazenando informações confidenciais sobre a estrutura de banco de dados no modo de exibição estado pode resultar em uma vulnerabilidade de divulgação de informações.  
  
> [!IMPORTANT]
>  Valores são inseridos em parâmetros sem validação, que é uma possível ameaça à segurança. Use o <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> evento para validar valores de parâmetro antes de executar a consulta. Para obter mais informações, consulte [Visão geral de explorações de script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 Esta seção contém dois exemplos de código. O primeiro exemplo de código demonstra como definir a <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> propriedade o <xref:System.Web.UI.WebControls.SqlDataSource> controlar e atualizar dados em um banco de dados do Microsoft SQL Server usando o <xref:System.Web.UI.WebControls.GridView> controle. O segundo exemplo de código demonstra como atualizar dados em um banco de dados ODBC usando o <xref:System.Web.UI.WebControls.GridView> controle.  
  
 O exemplo de código a seguir demonstra como definir a <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> propriedade o <xref:System.Web.UI.WebControls.SqlDataSource> controlar e atualizar dados em um banco de dados do SQL Server usando o <xref:System.Web.UI.WebControls.GridView> controle. O <xref:System.Web.UI.WebControls.GridView> preenche automaticamente o <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> deduzir os parâmetros da coleção a <xref:System.Web.UI.WebControls.BoundField> objetos e chama o <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> método quando o **atualização** link o editável<xref:System.Web.UI.WebControls.GridView>está selecionado. Este exemplo também inclui um pós-processamento: depois que um registro é atualizado, uma mensagem de email de notificação é enviada.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7sql/CS/sql7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7sql/VB/sql7vb.aspx#1)]  
  
 O exemplo de código a seguir, que é funcionalmente idêntico ao exemplo de código anterior, demonstra como atualizar dados em um banco de dados ODBC usando o <xref:System.Web.UI.WebControls.GridView> controle. O <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> é definido como o provedor ADO.NET para ODBC, o <xref:System.Data.Odbc?displayProperty=nameWithType>e o <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> propriedade é definida como o nome de um nome de fonte de dados ODBC (DSN).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/CS/odbc7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/VB/odbc7vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />
      </Docs>
    </Member>
    <Member MemberName="UpdateCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType UpdateCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType UpdateCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType UpdateCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se o texto da propriedade <see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" /> é uma instrução SQL ou o nome de um procedimento armazenado.</summary>
        <value>Um dos valores de <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />. O padrão é o valor <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommandType%2A> propriedade delega para o <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType%2A> propriedade o <xref:System.Web.UI.WebControls.SqlDataSourceView> objeto que está associado com o <xref:System.Web.UI.WebControls.SqlDataSource> controle.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="Updated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Updated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Updated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Updated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updated As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Updated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando uma operação de atualização foi concluída.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Manipular o <xref:System.Web.UI.WebControls.SqlDataSource.Updated> evento para examinar os valores de parâmetros de saída depois de uma operação de atualização foi concluída. Os parâmetros de saída estão disponíveis no <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> objeto que está associado com o evento.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como exibir e atualizar os dados recuperados de um banco de dados ODBC em um <xref:System.Web.UI.WebControls.GridView> controle. Depois que um registro é atualizado com êxito, o <xref:System.Web.UI.WebControls.SqlDataSource.Updated> evento é manipulado pelo manipulador de eventos para executar uma etapa de pós-processamento onde uma notificação por email é enviada.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/CS/odbc7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/VB/odbc7vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Updating" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="UpdateParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection UpdateParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdateParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ UpdateParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a coleção de parâmetros que contém os parâmetros usados pela propriedade de <see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" /> do controle <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> que é associado ao controle <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</summary>
        <value>Um <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> que contém os parâmetros usados pela propriedade <see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> propriedade contém uma consulta SQL parametrizada, o <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> coleção contém qualquer <xref:System.Web.UI.WebControls.Parameter> objetos que correspondem aos espaços reservados de parâmetro na cadeia de caracteres SQL.  
  
 Nomes de parâmetro podem ser afetados pelo <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> propriedade, especificamente se o nome identifica uma chave primária, como uma chave especificada usando o `DataKeyNames` propriedade do controle associado a dados, ou em Excluir e cenários de atualização onde o <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> está definida como o <xref:System.Web.UI.ConflictOptions.CompareAllValues> valor e um conjunto de `oldValues` são passados para o método de dados correspondente. Nesse caso, a cadeia de caracteres de formato é aplicada a cada nome de parâmetro no `oldValues` coleção.  
  
 A ordem dos parâmetros de <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> coleção pode ser importante, dependendo do provedor ADO.NET. O <xref:System.Data.OleDb?displayProperty=nameWithType> e <xref:System.Data.Odbc?displayProperty=nameWithType> provedores associar os parâmetros na coleção de acordo com a ordem em que os parâmetros aparecem na consulta SQL com parâmetros. O <xref:System.Data.SqlClient?displayProperty=nameWithType> provedor, que é o provedor ADO.NET padrão para o <xref:System.Web.UI.WebControls.SqlDataSource> controlar, associa parâmetros na coleção por correspondente ao nome do parâmetro com um alias de espaço reservado na consulta SQL. Para obter mais informações sobre comandos e consultas SQL parametrizadas, consulte [usando parâmetros com o controle SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
 O <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> propriedade recupera o <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A> propriedade contido pelo <xref:System.Web.UI.WebControls.SqlDataSourceView> objeto que está associado com o <xref:System.Web.UI.WebControls.SqlDataSource> controle.  
  
> [!IMPORTANT]
>  Valores são inseridos em parâmetros sem validação, que é uma possível ameaça à segurança. Use o <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> evento para validar valores de parâmetro antes de executar a consulta. Para obter mais informações, consulte [Visão geral de explorações de script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar um <xref:System.Web.UI.WebControls.SqlDataSource> controle para exibir dados em um <xref:System.Web.UI.WebControls.DropDownList> controlar e atualizar dados quando o **enviar** botão é clicado. O <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> é definida com uma instrução SQL parametrizada e dois <xref:System.Web.UI.WebControls.ControlParameter> parâmetros serão adicionados para o <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> coleção. Quando o **enviar** botão é clicado, o <xref:System.Web.UI.WebControls.Button.OnClick%2A> evento é tratado para chamar o <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> método explicitamente.  
  
> [!IMPORTANT]
>  Este exemplo inclui uma caixa de texto que aceita a entrada do usuário, que é uma possível ameaça à segurança, e os valores são inseridos em parâmetros sem validação, que também é uma possível ameaça à segurança. Use o <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> evento para validar valores de parâmetro antes de executar a consulta. Para obter mais informações, consulte [Visão geral de explorações de script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/CS/sql8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/VB/sql8vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />
      </Docs>
    </Member>
    <Member MemberName="Updating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Updating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Updating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Updating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updating As SqlDataSourceCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceCommandEventHandler ^ Updating;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre antes de uma operação de atualização.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Manipular o <xref:System.Web.UI.WebControls.SqlDataSource.Updating> evento para executar operações de inicialização adicionais que são específicas para seu aplicativo, para validar os valores de parâmetros, ou para alterar os valores de parâmetro antes do <xref:System.Web.UI.WebControls.SqlDataSource> controle executa a operação de atualização. A conexão à fonte de dados subjacente não ainda estiver aberto quando o delegado de manipulador de eventos é chamado. Portanto, você não pode cancelar diretamente o <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> operação de banco de dados chamando o <xref:System.Data.Common.DbCommand.Cancel%2A> método o <xref:System.Data.Common.DbCommand> objeto que é exposto pelo <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> objeto. No entanto, você pode cancelar a operação de banco de dados, definindo o <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propriedade o <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> para `true`.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
> [!IMPORTANT]
>  Valores são inseridos em parâmetros sem validação, que é uma possível ameaça à segurança. Use o <xref:System.Web.UI.WebControls.SqlDataSource.Updating> evento para validar valores de parâmetro antes de executar a consulta. Para obter mais informações, consulte [Visão geral de explorações de script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como exibir os dados recuperados de um banco de dados do Microsoft SQL Server em uma <xref:System.Web.UI.WebControls.DropDownList> controlar e atualizar o registro usando um <xref:System.Web.UI.WebControls.TextBox> controle. O exemplo mostra como você pode usar um <xref:System.Data.Common.DbTransaction> objeto para adicionar o contexto de transação ao usar o <xref:System.Web.UI.WebControls.SqlDataSource> controle para atualizar dados.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/CS/sql9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/VB/sql9vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Updated" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
      </Docs>
    </Member>
  </Members>
</Type>