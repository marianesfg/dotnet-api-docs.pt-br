<Type Name="DataList" FullName="System.Web.UI.WebControls.DataList">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="041224a48dd300e1b8e409f1e0e4752a60760caa" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36384338" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataList : System.Web.UI.WebControls.BaseDataList, System.Web.UI.INamingContainer, System.Web.UI.WebControls.IRepeatInfoUser" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataList extends System.Web.UI.WebControls.BaseDataList implements class System.Web.UI.INamingContainer, class System.Web.UI.WebControls.IRepeatInfoUser" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.DataList" />
  <TypeSignature Language="VB.NET" Value="Public Class DataList&#xA;Inherits BaseDataList&#xA;Implements INamingContainer, IRepeatInfoUser" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataList : System::Web::UI::WebControls::BaseDataList, System::Web::UI::INamingContainer, System::Web::UI::WebControls::IRepeatInfoUser" />
  <TypeSignature Language="F#" Value="type DataList = class&#xA;    inherit BaseDataList&#xA;    interface INamingContainer&#xA;    interface IRepeatInfoUser" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.BaseDataList</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.INamingContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IRepeatInfoUser</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.DataListDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataListComponentEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.ComponentEditor))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlValueProperty("SelectedValue")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Um controle de lista com limite de dados que exibe itens usando modelos.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Neste tópico:  
  
-   [Introdução](#introduction)  
  
-   [Modelos](#templates)  
  
-   [Personalizando a aparência do controle DataList](#customizing_the_appearance_of_the_datalist_control)  
  
-   [Direção de exibição e o Layout](#display_direction_and_layout)  
  
-   [Segurança](#security)  
  
-   [Sintaxe declarativa](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Introdução  
 Use o <xref:System.Web.UI.WebControls.DataList> controle para exibir um modelo definido de dados vinculado lista. O <xref:System.Web.UI.WebControls.DataList> controle oferece suporte para selecionar e editar.  
  
<a name="templates"></a>   
## <a name="templates"></a>Modelos  
 O conteúdo do <xref:System.Web.UI.WebControls.DataList> controle pode ser manipulado por meio de modelos. A tabela a seguir lista os modelos com suporte.  
  
|Nome do modelo|Descrição|  
|-------------------|-----------------|  
|<xref:System.Web.UI.WebControls.DataList.AlternatingItemTemplate%2A>|Se definido, fornece o conteúdo e o layout para itens alternados a <xref:System.Web.UI.WebControls.DataList>. Se não estiver definido, `ItemTemplate` é usado.|  
|<xref:System.Web.UI.WebControls.DataList.EditItemTemplate%2A>|Se definido, fornece o conteúdo e o layout para o item que está sendo editado no <xref:System.Web.UI.WebControls.DataList>. Se não estiver definido, `ItemTemplate` é usado.|  
|<xref:System.Web.UI.WebControls.DataList.FooterTemplate%2A>|Se definido, fornece o conteúdo e o layout da seção de rodapé do <xref:System.Web.UI.WebControls.DataList>. Se não estiver definida, uma seção de rodapé de página não será exibida.|  
|<xref:System.Web.UI.WebControls.DataList.HeaderTemplate%2A>|Se definido, fornece o conteúdo e o layout para a seção de cabeçalho de <xref:System.Web.UI.WebControls.DataList>. Se não estiver definida, uma seção de cabeçalho não será exibida.|  
|<xref:System.Web.UI.WebControls.DataList.ItemTemplate%2A>|Modelo que fornece o conteúdo e o layout de itens de <xref:System.Web.UI.WebControls.DataList>.|  
|<xref:System.Web.UI.WebControls.DataList.SelectedItemTemplate%2A>|Se definido, fornece o conteúdo e o layout para o item selecionado atualmente no <xref:System.Web.UI.WebControls.DataList>. Se não estiver definido, <xref:System.Web.UI.WebControls.DataList.ItemTemplate%2A> é usado.|  
|<xref:System.Web.UI.WebControls.DataList.SeparatorTemplate%2A>|Se definido, fornece o conteúdo e o layout para o separador entre os itens a <xref:System.Web.UI.WebControls.DataList>. Se não estiver definido, um separador não será exibido.|  
  
 No mínimo, o <xref:System.Web.UI.WebControls.DataList.ItemTemplate%2A> precisa ser definido para exibir os itens a <xref:System.Web.UI.WebControls.DataList> controle. Modelos adicionais podem ser usados para fornecer uma aparência personalizada para o <xref:System.Web.UI.WebControls.DataList> controle.  
  
<a name="customizing_the_appearance_of_the_datalist_control"></a>   
## <a name="customizing-the-appearance-of-the-datalist-control"></a>Personalizando a aparência do controle DataList  
 A aparência do <xref:System.Web.UI.WebControls.DataList> controle pode ser personalizado, definindo as propriedades de estilo para as diferentes partes do controle. A tabela a seguir lista as propriedades de estilo diferente.  
  
|Propriedade de estilo|Descrição|  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>|Especifica o estilo para itens alternados a <xref:System.Web.UI.WebControls.DataList> controle.|  
|<xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>|Especifica o estilo para o item que está sendo editado no <xref:System.Web.UI.WebControls.DataList> controle.|  
|<xref:System.Web.UI.WebControls.DataList.FooterStyle%2A>|Especifica o estilo do rodapé do <xref:System.Web.UI.WebControls.DataList> controle.|  
|<xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A>|Especifica o estilo no cabeçalho de <xref:System.Web.UI.WebControls.DataList> controle.|  
|<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>|Especifica o estilo dos itens no <xref:System.Web.UI.WebControls.DataList> controle.|  
|<xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>|Especifica o estilo para o item selecionado no <xref:System.Web.UI.WebControls.DataList> controle.|  
|<xref:System.Web.UI.WebControls.DataList.SeparatorStyle%2A>|Especifica o estilo do separador entre os itens a <xref:System.Web.UI.WebControls.DataList> controle.|  
  
 Você também pode mostrar ou ocultar partes diferentes do controle. A tabela a seguir lista as propriedades que controlam quais partes são mostradas ou ocultadas.  
  
|Propriedade|Descrição|  
|--------------|-----------------|  
|<xref:System.Web.UI.WebControls.DataList.ShowFooter%2A>|Mostra ou oculta a seção de rodapé a <xref:System.Web.UI.WebControls.DataList> controle.|  
|<xref:System.Web.UI.WebControls.DataList.ShowHeader%2A>|Mostra ou oculta a seção de cabeçalho de <xref:System.Web.UI.WebControls.DataList> controle.|  
  
<a name="display_direction_and_layout"></a>   
## <a name="display-direction-and-layout"></a>Direção de exibição e o Layout  
 A direção de exibição de um <xref:System.Web.UI.WebControls.DataList> controle pode ser vertical ou horizontal. Definir o <xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A> propriedade para especificar a direção de exibição.  
  
 O layout do <xref:System.Web.UI.WebControls.DataList> controle é controlado com a <xref:System.Web.UI.WebControls.DataList.RepeatLayout%2A> propriedade. Definir essa propriedade como `RepeatLayout.Table` exibirá o <xref:System.Web.UI.WebControls.DataList> em um formato de tabela, enquanto `RepeatLayout.Flow` exibe o <xref:System.Web.UI.WebControls.DataList> sem uma estrutura de tabela.  
  
<a name="security"></a>   
## <a name="security"></a>Segurança  
 O `DataList` controle pode conter controles que permitem que os usuários insiram informações.  
  
> [!CAUTION]
>  Este controle pode ser usado para exibir a entrada do usuário, que pode incluir um script de cliente mal-intencionado. Verifique todas as informações que são enviadas de um cliente para o script executável, instruções SQL ou outro código antes de exibi-lo em seu aplicativo. Você pode usar controles de validação para verificar se a entrada do usuário antes de exibir o texto de entrada em um controle. O ASP.NET fornece um recurso de validação de solicitação de entrada para o bloco de script e HTML na entrada do usuário.  
  
 Para obter mais informações sobre segurança, consulte [protegendo controles padrão](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [como: proteger contra scripts maliciosos em um aplicativo da Web aplicando codificação HTML a cadeias de caracteres](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), e [ Validando a entrada do usuário em páginas da Web ASP.NET](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Sintaxe declarativa  
  
```  
<asp:DataList  
    AccessKey="string"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    Caption="string"  
    CaptionAlign="NotSet|Top|Bottom|Left|Right"  
    CellPadding="integer"  
    CellSpacing="integer"  
    CssClass="string"  
    DataKeyField="string"  
    DataMember="string"  
    DataSource="string"  
    DataSourceID="string"  
    EditItemIndex="integer"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ExtractTemplateRows="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    GridLines="None|Horizontal|Vertical|Both"  
    Height="size"  
    HorizontalAlign="NotSet|Left|Center|Right|Justify"  
    ID="string"  
    OnCancelCommand="CancelCommand event handler"  
    OnDataBinding="DataBinding event handler"  
    OnDeleteCommand="DeleteCommand event handler"  
    OnDisposed="Disposed event handler"  
    OnEditCommand="EditCommand event handler"  
    OnInit="Init event handler"  
    OnItemCommand="ItemCommand event handler"  
    OnItemCreated="ItemCreated event handler"  
    OnItemDataBound="ItemDataBound event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnSelectedIndexChanged="SelectedIndexChanged event handler"  
    OnUnload="Unload event handler"  
    OnUpdateCommand="UpdateCommand event handler"  
    RepeatColumns="integer"  
    RepeatDirection="Horizontal|Vertical"  
    RepeatLayout="Table|Flow"  
    runat="server"  
    SelectedIndex="integer"  
    ShowFooter="True|False"  
    ShowHeader="True|False"  
    SkinID="string"  
    Style="string"  
    TabIndex="integer"  
    ToolTip="string"  
    UseAccessibleHeader="True|False"  
    Visible="True|False"  
    Width="size"  
>  
        <AlternatingItemStyle />  
        <AlternatingItemTemplate>  
            <!-- child controls -->  
        </AlternatingItemTemplate>  
        <EditItemStyle />  
        <EditItemTemplate>  
            <!-- child controls -->  
        </EditItemTemplate>  
        <FooterStyle />  
        <FooterTemplate>  
            <!-- child controls -->  
        </FooterTemplate>  
        <HeaderStyle />  
        <HeaderTemplate>  
            <!-- child controls -->  
        </HeaderTemplate>  
        <ItemStyle />  
        <ItemTemplate>  
            <!-- child controls -->  
        </ItemTemplate>  
        <SelectedItemStyle />  
        <SelectedItemTemplate>  
            <!-- child controls -->  
        </SelectedItemTemplate>  
        <SeparatorStyle />  
        <SeparatorTemplate>  
            <!-- child controls -->  
        </SeparatorTemplate>  
</asp:DataList>  
```  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar um <xref:System.Web.UI.WebControls.DataList> controle para exibir uma lista de itens de uma fonte de dados.  
  
> [!NOTE]
>  O exemplo de código a seguir usa o modelo de código de arquivo único e pode não funcionar corretamente se copiados diretamente para um arquivo code-behind. Este exemplo de código deve ser copiado para um arquivo de texto vazio que tem uma extensão. aspx. Para obter mais informações sobre o modelo de código de Web Forms, consulte [o modelo de código de página do ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataList#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataList/CS/datalistcs.aspx#1)]
 [!code-aspx-vb[DataList#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataList/VB/datalistvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.BaseDataList" />
    <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
    <altmember cref="T:System.Web.UI.WebControls.Repeater" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataList();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use este construtor para criar e inicializar uma nova instância do <xref:System.Web.UI.WebControls.DataList> classe.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como criar e inicializar uma nova instância do <xref:System.Web.UI.WebControls.DataList> classe.  
  
 [!code-csharp[Classic DataList.DataList Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataList.DataList Example/CS/source.cs#1)]
 [!code-vb[Classic DataList.DataList Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataList.DataList Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlternatingItemStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle AlternatingItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle AlternatingItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.AlternatingItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AlternatingItemStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ AlternatingItemStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AlternatingItemStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DataList.AlternatingItemStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém as propriedades de estilo para itens alternados no controle <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>Um objeto <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> que representa as propriedades de estilo de itens alternados no controle <see cref="T:System.Web.UI.WebControls.DataList" />. O valor padrão é um objeto <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> vazio.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> propriedade para fornecer um estilo personalizado para alternância de itens no <xref:System.Web.UI.WebControls.DataList> controle. Atributos de estilo comuns que podem ser ajustados incluem cor de primeiro plano, cor de plano de fundo, fonte e alinhamento do conteúdo dentro da célula. Fornecer um estilo diferente aprimora a aparência do <xref:System.Web.UI.WebControls.DataList> controle.  
  
 Propriedades de estilo do item de <xref:System.Web.UI.WebControls.DataList> controle são herdadas de propriedade de estilo de um item para outro através de uma hierarquia. Propriedades de estilo do item definidas como inferiores na hierarquia são herdadas por propriedades de estilo do item superiores na hierarquia. Por exemplo, se você especificar uma fonte em vermelho para a <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> propriedade, todas as outras propriedades de estilo do item no <xref:System.Web.UI.WebControls.DataList> controle também terá uma fonte vermelha. Isso permite que você forneça uma aparência comum para o controle definindo uma propriedade de estilo do item único. Você pode substituir as configurações de estilo herdado para uma propriedade de estilo do item que é superior na hierarquia, definindo suas propriedades de estilo. Por exemplo, você pode especificar uma fonte azul para o <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> substituindo a fonte vermelha especificada na propriedade de <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> propriedade. A tabela a seguir lista a ordem da hierarquia do mais alto ao mais baixo.  
  
|Precedência|Propriedade de estilo|  
|----------------|--------------------|  
|1|<xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>|  
|2|<xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>|  
|3|<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>|  
|4|<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>|  
|5|<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|  
  
 Para especificar um estilo personalizado para os itens alternados, coloque o `<AlternatingItemStyle>` marcas entre as marcas de abertura e fechamento do <xref:System.Web.UI.WebControls.DataList> controle. Em seguida, você pode listar os atributos de estilo de abertura `<AlternatingItemStyle>` marca.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> propriedade para especificar uma cor de plano de fundo diferente para itens alternados a <xref:System.Web.UI.WebControls.DataList> controle.  
  
> [!NOTE]
>  O exemplo de código a seguir usa o modelo de código de arquivo único e pode não funcionar corretamente se copiados diretamente para um arquivo code-behind. Este exemplo de código deve ser copiado para um arquivo de texto vazio que tem uma extensão. aspx. Para obter mais informações sobre o modelo de código de Web Forms, consulte [o modelo de código de página do ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemStyle/CS/datalistitemstylecs.aspx#1)]
 [!code-aspx-vb[DataListItemStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemStyle/VB/datalistitemstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="AlternatingItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate AlternatingItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate AlternatingItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.AlternatingItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AlternatingItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ AlternatingItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AlternatingItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.DataList.AlternatingItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DataListItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o modelo para alternância de itens na <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>Um <see cref="T:System.Web.UI.ITemplate" /> os itens no objeto que contém o modelo para alternar o <see cref="T:System.Web.UI.WebControls.DataList" /> controle. O valor padrão é <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.DataList.AlternatingItemTemplate%2A> propriedade para controlar o conteúdo de itens alternados a <xref:System.Web.UI.WebControls.DataList> controle. A aparência de itens alternados é controlada pelo <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> propriedade.  
  
 Para especificar um modelo para os itens alternados, coloque o `<AlternatingItemTemplate>` marcas entre as marcas de abertura e fechamento do <xref:System.Web.UI.WebControls.DataList> controle. Em seguida, você pode listar o conteúdo do modelo entre a abertura e fechamento `<AlternatingItemTemplate>` marcas.  
  
> [!CAUTION]
>  Este controle pode ser usado para exibir a entrada do usuário, que pode incluir um script de cliente mal-intencionado. Verifique todas as informações que são enviadas de um cliente para o script executável, instruções SQL ou outro código antes de exibi-lo em seu aplicativo. Você pode usar controles de validação para verificar se a entrada do usuário antes de exibir o texto de entrada em um controle. O ASP.NET fornece um recurso de validação de solicitação de entrada para o bloco de script e HTML na entrada do usuário. Para obter mais informações, consulte [protegendo controles padrão](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [como: proteger contra scripts maliciosos em um aplicativo da Web aplicando codificação HTML a cadeias de caracteres](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), e [Validando a entrada de usuário em Páginas da Web do ASP.NET](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.DataList.AlternatingItemTemplate%2A> propriedade para controlar o conteúdo de itens alternados a <xref:System.Web.UI.WebControls.DataList> controle.  
  
> [!NOTE]
>  O exemplo de código a seguir usa o modelo de código de arquivo único e pode não funcionar corretamente se copiados diretamente para um arquivo code-behind. Este exemplo de código deve ser copiado para um arquivo de texto vazio que tem uma extensão. aspx. Para obter mais informações sobre o modelo de código de Web Forms, consulte [o modelo de código de página do ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListAlternatingItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListAlternatingItemTemplate/CS/datalistaltitemtemplatecs.aspx#1)]
 [!code-aspx-vb[DataListAlternatingItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListAlternatingItemTemplate/VB/datalistaltitemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.AlternatingItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.ItemTemplate" />
        <altmember cref="T:System.Web.UI.ITemplate" />
      </Docs>
    </Member>
    <Member MemberName="CancelCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataListCommandEventHandler CancelCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataListCommandEventHandler CancelCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataList.CancelCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CancelCommand As DataListCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataListCommandEventHandler ^ CancelCommand;" />
      <MemberSignature Language="F#" Value="member this.CancelCommand : System.Web.UI.WebControls.DataListCommandEventHandler " Usage="member this.CancelCommand : System.Web.UI.WebControls.DataListCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando o botão <see langword="Cancel" /> recebe um clique para um item no controle <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.DataList.CancelCommand> é gerado quando o `Cancel` botão é clicado para um item no <xref:System.Web.UI.WebControls.DataList> controle.  
  
 Um manipulador típico para o <xref:System.Web.UI.WebControls.DataList.CancelCommand> conjuntos de eventos a <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> propriedade `-1` (para desmarcar o item) e, em seguida, reconecta os dados para o <xref:System.Web.UI.WebControls.DataList> controle.  
  
> [!CAUTION]
>  O texto não é codificado em antes de ser exibido em HTML a <xref:System.Web.UI.WebControls.DataList> controle. Isso torna possível inserir o script dentro de marcas HTML no texto. Se os valores para o controle são fornecidos pelo usuário, certifique-se de validar os valores para reduzir as vulnerabilidades de segurança.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [como: consumir eventos em um aplicativo Web Forms](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
> [!CAUTION]
>  Este controle pode ser usado para exibir a entrada do usuário, que pode incluir um script de cliente mal-intencionado. Verifique todas as informações que são enviadas de um cliente para o script executável, instruções SQL ou outro código antes de exibi-lo em seu aplicativo. Você pode usar controles de validação para verificar se a entrada do usuário antes de exibir o texto de entrada em um controle. O ASP.NET fornece um recurso de validação de solicitação de entrada para o bloco de script e HTML na entrada do usuário. Para obter mais informações, consulte [protegendo controles padrão](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [como: proteger contra scripts maliciosos em um aplicativo da Web aplicando codificação HTML a cadeias de caracteres](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), e [Validando a entrada de usuário em Páginas da Web do ASP.NET](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como especificar e codificar um manipulador para o <xref:System.Web.UI.WebControls.DataList.CancelCommand> evento. Cancela as edições feitas em um item de <xref:System.Web.UI.WebControls.DataList> controlar quando o `Cancel` botão é clicado.  
  
> [!NOTE]
>  O exemplo de código a seguir usa o modelo de código de arquivo único e pode não funcionar corretamente se copiados diretamente para um arquivo code-behind. Este exemplo de código deve ser copiado para um arquivo de texto vazio que tem uma extensão. aspx. Para obter mais informações sobre o modelo de código de Web Forms, consulte [o modelo de código de página do ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.DeleteCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.EditCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.UpdateCommand" />
      </Docs>
    </Member>
    <Member MemberName="CancelCommandName">
      <MemberSignature Language="C#" Value="public const string CancelCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string CancelCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataList.CancelCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Const CancelCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ CancelCommandName;" />
      <MemberSignature Language="F#" Value="val mutable CancelCommandName : string" Usage="System.Web.UI.WebControls.DataList.CancelCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa o nome do comando <see langword="Cancel" />. Este campo é somente leitura.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.DataList.CancelCommandName> campo para representar o `Cancel` nome do comando.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataList.SelectCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.EditCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.DeleteCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.UpdateCommandName" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlHierarchy">
      <MemberSignature Language="C#" Value="protected override void CreateControlHierarchy (bool useDataSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateControlHierarchy(bool useDataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.CreateControlHierarchy(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CreateControlHierarchy (useDataSource As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CreateControlHierarchy(bool useDataSource);" />
      <MemberSignature Language="F#" Value="override this.CreateControlHierarchy : bool -&gt; unit" Usage="dataList.CreateControlHierarchy useDataSource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useDataSource" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useDataSource">
          <see langword="true" /> para usar a fonte de dados do controle; <see langword="false" /> para indicar que o controle está sendo recriado com base no estado de exibição e não deve ser associado a dados.</param>
        <summary>Cria a hierarquia de controle que é usada para renderizar o controle de lista de dados, com ou sem a fonte de dados especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A> método é usado principalmente por desenvolvedores de controle ao derivar uma implementação personalizada do <xref:System.Web.UI.WebControls.DataList> controle.  
  
 O <xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A> método usa o <xref:System.Web.UI.WebControls.DataList.CreateItem%2A> e <xref:System.Web.UI.WebControls.DataList.InitializeItem%2A> métodos para criar <xref:System.Web.UI.WebControls.DataListItem> controles que representam o cabeçalho, rodapé, separador e itens de associação de dados contidos na lista de dados. Você pode acessar os itens de associação de dados para a lista de dados por meio de <xref:System.Web.UI.WebControls.DataList.Items%2A> coleção. Você pode acessar todos os tipos de item, incluindo o cabeçalho, rodapé e itens separadores, por meio de <xref:System.Web.UI.WebControls.BaseDataList.Controls%2A> coleção.  
  
 Substituir o <xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A> método para personalizar como <xref:System.Web.UI.WebControls.DataListItem> controles são criados ou adicionados para o <xref:System.Web.UI.WebControls.DataList> controle. Substituir o <xref:System.Web.UI.WebControls.DataList.InitializeItem%2A> método personalizar modelos para um <xref:System.Web.UI.WebControls.DataListItem> controle.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateControlStyle">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Style CreateControlStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.Style CreateControlStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.CreateControlStyle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlStyle () As Style" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::Style ^ CreateControlStyle();" />
      <MemberSignature Language="F#" Value="override this.CreateControlStyle : unit -&gt; System.Web.UI.WebControls.Style" Usage="dataList.CreateControlStyle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cria o objeto de estilo padrão que é usado internamente pelo controle <see cref="T:System.Web.UI.WebControls.DataList" /> para implementar todas as propriedades relacionadas ao estilo.</summary>
        <returns>Um <see cref="T:System.Web.UI.WebControls.TableStyle" /> que contém as propriedades de estilo padrão para o controle.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.DataList.CreateControlStyle%2A> método é usado principalmente por desenvolvedores de controle derivar uma implementação personalizada do <xref:System.Web.UI.WebControls.DataList> controle.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como substituir o <xref:System.Web.UI.WebControls.DataList.CreateControlStyle%2A> método em um servidor personalizado de controle para que ele sempre exibe linhas de grade horizontais com nenhum espaçamento da célula no <xref:System.Web.UI.WebControls.DataList> controle.  
  
 [!code-aspx-csharp[CustomDataListCreateControlStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomDataListCreateControlStyle/CS/custom_datalist_createcontrolstylecs.aspx#1)]
 [!code-aspx-vb[CustomDataListCreateControlStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomDataListCreateControlStyle/VB/custom_datalist_createcontrolstylevb.aspx#1)]  
[!code-csharp[CustomDataListCreateControlStyle#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomDataListCreateControlStyle/CS/custom_datalist_createcontrolstyle.cs#2)]
[!code-vb[CustomDataListCreateControlStyle#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomDataListCreateControlStyle/VB/custom_datalist_createcontrolstyle.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateItem">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.DataListItem CreateItem (int itemIndex, System.Web.UI.WebControls.ListItemType itemType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.DataListItem CreateItem(int32 itemIndex, valuetype System.Web.UI.WebControls.ListItemType itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.CreateItem(System.Int32,System.Web.UI.WebControls.ListItemType)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateItem (itemIndex As Integer, itemType As ListItemType) As DataListItem" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::DataListItem ^ CreateItem(int itemIndex, System::Web::UI::WebControls::ListItemType itemType);" />
      <MemberSignature Language="F#" Value="abstract member CreateItem : int * System.Web.UI.WebControls.ListItemType -&gt; System.Web.UI.WebControls.DataListItem&#xA;override this.CreateItem : int * System.Web.UI.WebControls.ListItemType -&gt; System.Web.UI.WebControls.DataListItem" Usage="dataList.CreateItem (itemIndex, itemType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemIndex" Type="System.Int32" />
        <Parameter Name="itemType" Type="System.Web.UI.WebControls.ListItemType" />
      </Parameters>
      <Docs>
        <param name="itemIndex">O local especificado na <see cref="T:System.Web.UI.WebControls.DataList" /> para colocar o item criado.</param>
        <param name="itemType">Um <see cref="T:System.Web.UI.WebControls.ListItemType" /> que representa o tipo especificado do item a ser criado.</param>
        <summary>Cria um objeto <see cref="T:System.Web.UI.WebControls.DataListItem" />.</summary>
        <returns>Um novo <see cref="T:System.Web.UI.WebControls.DataListItem" /> criado com o tipo de item de lista especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.DataList.CreateItem%2A> método é usado principalmente por desenvolvedores de controle na criação de uma implementação personalizada do <xref:System.Web.UI.WebControls.DataList> controle. O <xref:System.Web.UI.WebControls.DataList.CreateItem%2A> método é funcionalmente equivalente a chamar o <xref:System.Web.UI.WebControls.DataListItem.%23ctor%2A> construtor para um <xref:System.Web.UI.WebControls.DataListItem>. O <xref:System.Web.UI.WebControls.DataListItem.ItemIndex%2A> e <xref:System.Web.UI.WebControls.DataListItem.ItemType%2A> propriedades são inicializadas para o novo <xref:System.Web.UI.WebControls.DataListItem> usar os valores especificados, mas o item não é inserida no <xref:System.Web.UI.WebControls.DataList>.  
  
 O <xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A> método usa o <xref:System.Web.UI.WebControls.DataList.CreateItem%2A> e <xref:System.Web.UI.WebControls.DataList.InitializeItem%2A> métodos para criar <xref:System.Web.UI.WebControls.DataListItem> controles que representam o cabeçalho, rodapé, separador e itens de associação de dados contidos na lista de dados. Você pode acessar os itens de associação de dados para a lista de dados por meio de <xref:System.Web.UI.WebControls.DataList.Items%2A> coleção. Você pode acessar todos os tipos de item, incluindo o cabeçalho, rodapé e itens separadores, por meio de <xref:System.Web.UI.WebControls.BaseDataList.Controls%2A> coleção.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Substitua este método para criar seus próprios derivada <see cref="T:System.Web.UI.WebControls.DataListItem" /> tipo, ou para definir as propriedades do membro adicionais quando um <see cref="T:System.Web.UI.WebControls.DataListItem" /> é criado.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.DataList.CreateControlHierarchy(System.Boolean)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.InitializeItem(System.Web.UI.WebControls.DataListItem)" />
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataListCommandEventHandler DeleteCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataListCommandEventHandler DeleteCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataList.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DeleteCommand As DataListCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataListCommandEventHandler ^ DeleteCommand;" />
      <MemberSignature Language="F#" Value="member this.DeleteCommand : System.Web.UI.WebControls.DataListCommandEventHandler " Usage="member this.DeleteCommand : System.Web.UI.WebControls.DataListCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando o botão <see langword="Delete" /> recebe um clique para um item no controle <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.DataList.DeleteCommand> é gerado quando o `Delete` botão é clicado para um item no <xref:System.Web.UI.WebControls.DataList> controle.  
  
 Um manipulador típico para o <xref:System.Web.UI.WebControls.DataList.DeleteCommand> evento remove o item selecionado da fonte de dados e, em seguida, reconecta os dados para o <xref:System.Web.UI.WebControls.DataList> controle.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [como: consumir eventos em um aplicativo Web Forms](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como especificar e codificar um manipulador para o <xref:System.Web.UI.WebControls.DataList.DeleteCommand> evento. Exclui o item selecionado no <xref:System.Web.UI.WebControls.DataList> controlar quando o `Delete` botão é clicado.  
  
> [!NOTE]
>  O exemplo de código a seguir usa o modelo de código de arquivo único e pode não funcionar corretamente se copiados diretamente para um arquivo code-behind. Este exemplo de código deve ser copiado para um arquivo de texto vazio que tem uma extensão. aspx. Para obter mais informações sobre o modelo de código de Web Forms, consulte [o modelo de código de página do ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.CancelCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.EditCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.UpdateCommand" />
      </Docs>
    </Member>
    <Member MemberName="DeleteCommandName">
      <MemberSignature Language="C#" Value="public const string DeleteCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DeleteCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataList.DeleteCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Const DeleteCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DeleteCommandName;" />
      <MemberSignature Language="F#" Value="val mutable DeleteCommandName : string" Usage="System.Web.UI.WebControls.DataList.DeleteCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa o nome do comando <see langword="Delete" />. Este campo é somente leitura.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.DataList.DeleteCommandName> campo para representar o `Delete` nome do comando.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataList.SelectCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.EditCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.UpdateCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.CancelCommandName" />
      </Docs>
    </Member>
    <Member MemberName="EditCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataListCommandEventHandler EditCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataListCommandEventHandler EditCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataList.EditCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EditCommand As DataListCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataListCommandEventHandler ^ EditCommand;" />
      <MemberSignature Language="F#" Value="member this.EditCommand : System.Web.UI.WebControls.DataListCommandEventHandler " Usage="member this.EditCommand : System.Web.UI.WebControls.DataListCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando o botão <see langword="Edit" /> recebe um clique para um item no controle <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.DataList.EditCommand> é gerado quando o `Edit` botão é clicado para um item no <xref:System.Web.UI.WebControls.DataList> controle.  
  
 Um manipulador típico para o <xref:System.Web.UI.WebControls.DataList.EditCommand> evento define o <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> propriedade para a linha selecionada e, em seguida, reconecta os dados para o <xref:System.Web.UI.WebControls.DataList> controle.  
  
> [!CAUTION]
>  O texto não é codificado em antes de ser exibido em HTML a <xref:System.Web.UI.WebControls.DataList> controle. Isso torna possível inserir o script dentro de marcas HTML no texto. Se os valores para o controle são fornecidos pelo usuário, certifique-se de validar os valores para reduzir as vulnerabilidades de segurança.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [como: consumir eventos em um aplicativo Web Forms](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
> [!CAUTION]
>  Este controle pode ser usado para exibir a entrada do usuário, que pode incluir um script de cliente mal-intencionado. Verifique todas as informações que são enviadas de um cliente para o script executável, instruções SQL ou outro código antes de exibi-lo em seu aplicativo. Você pode usar controles de validação para verificar se a entrada do usuário antes de exibir o texto de entrada em um controle. O ASP.NET fornece um recurso de validação de solicitação de entrada para o bloco de script e HTML na entrada do usuário. Para obter mais informações, consulte [protegendo controles padrão](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [como: proteger contra scripts maliciosos em um aplicativo da Web aplicando codificação HTML a cadeias de caracteres](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), e [Validando a entrada de usuário em Páginas da Web do ASP.NET](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como especificar e codificar um manipulador para o <xref:System.Web.UI.WebControls.DataList.EditCommand> evento. Ele permite que você edite o item selecionado no <xref:System.Web.UI.WebControls.DataList> controlar quando o `Edit` botão é clicado.  
  
> [!NOTE]
>  O exemplo de código a seguir usa o modelo de código de arquivo único e pode não funcionar corretamente se copiados diretamente para um arquivo code-behind. Este exemplo de código deve ser copiado para um arquivo de texto vazio que tem uma extensão. aspx. Para obter mais informações sobre o modelo de código de Web Forms, consulte [o modelo de código de página do ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.CancelCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.DeleteCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.UpdateCommand" />
      </Docs>
    </Member>
    <Member MemberName="EditCommandName">
      <MemberSignature Language="C#" Value="public const string EditCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string EditCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataList.EditCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Const EditCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ EditCommandName;" />
      <MemberSignature Language="F#" Value="val mutable EditCommandName : string" Usage="System.Web.UI.WebControls.DataList.EditCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa o nome do comando <see langword="Edit" />. Este campo é somente leitura.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.DataList.EditCommandName> campo para representar o `Edit` nome do comando.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataList.SelectCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.DeleteCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.UpdateCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.CancelCommandName" />
      </Docs>
    </Member>
    <Member MemberName="EditItemIndex">
      <MemberSignature Language="C#" Value="public virtual int EditItemIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EditItemIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.EditItemIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EditItemIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int EditItemIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.EditItemIndex : int with get, set" Usage="System.Web.UI.WebControls.DataList.EditItemIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o número de índice do item selecionado no controle <see cref="T:System.Web.UI.WebControls.DataList" /> a ser editado.</summary>
        <value>O número de índice do item selecionado no <see cref="T:System.Web.UI.WebControls.DataList" /> controle para editar.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> propriedade para especificar de forma programática o item para editar. Você também pode usar essa propriedade para determinar o índice do item selecionado para edição.  
  
> [!NOTE]
>  O <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> propriedade é baseado em zero.  
  
 Para cancelar a seleção de um item, defina o <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> propriedade `-1`.  
  
> [!CAUTION]
>  Este controle pode ser usado para exibir a entrada do usuário, que pode incluir um script de cliente mal-intencionado. Verifique todas as informações que são enviadas de um cliente para o script executável, instruções SQL ou outro código antes de exibi-lo em seu aplicativo. Você pode usar controles de validação para verificar se a entrada do usuário antes de exibir o texto de entrada em um controle. O ASP.NET fornece um recurso de validação de solicitação de entrada para o bloco de script e HTML na entrada do usuário. Para obter mais informações, consulte [protegendo controles padrão](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [como: proteger contra scripts maliciosos em um aplicativo da Web aplicando codificação HTML a cadeias de caracteres](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), e [Validando a entrada de usuário em Páginas da Web do ASP.NET](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
 O <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> propriedade é armazenada no estado do controle.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> propriedade para especificar o item selecionado pelo usuário para edição.  
  
> [!NOTE]
>  O exemplo de código a seguir usa o modelo de código de arquivo único e pode não funcionar corretamente se copiados diretamente para um arquivo code-behind. Este exemplo de código deve ser copiado para um arquivo de texto vazio que tem uma extensão. aspx. Para obter mais informações sobre o modelo de código de Web Forms, consulte [o modelo de código de página do ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">O valor selecionado é menor que <see langword="0" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.DataList.EditItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.EditItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.EditCommand" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="EditItemStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle EditItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle EditItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.EditItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EditItemStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ EditItemStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EditItemStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DataList.EditItemStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém as propriedades de estilo do item selecionado para edição no controle <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>Um <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> objeto que contém as propriedades de estilo para o item selecionado para edição no <see cref="T:System.Web.UI.WebControls.DataList" /> controle. O valor padrão é um objeto <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> vazio.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A> propriedade para fornecer um estilo personalizado para o item selecionado para edição no <xref:System.Web.UI.WebControls.DataList> controle. Atributos de estilo comuns que podem ser ajustados incluem cor de primeiro plano, cor de plano de fundo, fonte e alinhamento do conteúdo dentro da célula. Fornecer um estilo diferente aprimora a aparência do <xref:System.Web.UI.WebControls.DataList> controle.  
  
 Propriedades de estilo do item de <xref:System.Web.UI.WebControls.DataList> controle são herdadas de propriedade de estilo de um item para outro através de uma hierarquia. Propriedades de estilo do item definidas como inferiores na hierarquia são herdadas por propriedades de estilo do item superiores na hierarquia. Por exemplo, se você especificar uma fonte em vermelho para a <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> propriedade, todas as outras propriedades de estilo do item no <xref:System.Web.UI.WebControls.DataList> controle também terá uma fonte vermelha. Isso permite que você forneça uma aparência comum para o controle definindo uma propriedade de estilo do item único. Você pode substituir as configurações de estilo herdado para uma propriedade de estilo do item que é superior na hierarquia, definindo suas propriedades de estilo. Por exemplo, você pode especificar uma fonte azul para o <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> substituindo a fonte vermelha especificada na propriedade de <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> propriedade. A tabela a seguir lista a ordem da hierarquia do mais alto ao mais baixo.  
  
|Precedência|Propriedade de estilo|  
|----------------|--------------------|  
|1|<xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>|  
|2|<xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>|  
|3|<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>|  
|4|<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>|  
|5|<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|  
  
 Para especificar um estilo personalizado para o item selecionado para edição, coloque o `<EditItemStyle>` marcas entre as marcas de abertura e fechamento do <xref:System.Web.UI.WebControls.DataList> controle. Em seguida, você pode listar os atributos de estilo de abertura `<EditItemStyle>` marca.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A> propriedade para especificar uma aparência diferente para o item selecionado pelo usuário para edição.  
  
> [!NOTE]
>  O exemplo de código a seguir usa o modelo de código de arquivo único e pode não funcionar corretamente se copiados diretamente para um arquivo code-behind. Este exemplo de código deve ser copiado para um arquivo de texto vazio que tem uma extensão. aspx. Para obter mais informações sobre o modelo de código de Web Forms, consulte [o modelo de código de página do ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.EditItemIndex" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.EditItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.EditCommand" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="EditItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate EditItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate EditItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.EditItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EditItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ EditItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EditItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.DataList.EditItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DataListItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o modelo para o item selecionado para edição no controle <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>Um objeto <see cref="T:System.Web.UI.ITemplate" /> que contém o modelo para o item selecionado para edição no controle <see cref="T:System.Web.UI.WebControls.DataList" />. O valor padrão é <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.DataList.EditItemTemplate%2A> propriedade para controlar o conteúdo do item selecionado para edição no <xref:System.Web.UI.WebControls.DataList> controle. A aparência do item selecionado para edição é controlado pelo <xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A> propriedade.  
  
 Para especificar um modelo para o item selecionado para edição, coloque o `<EditItemTemplate>` marcas entre as marcas de abertura e fechamento do <xref:System.Web.UI.WebControls.DataList> controle. Em seguida, você pode listar o conteúdo do modelo entre a abertura e fechamento `<EditItemTemplate>` marcas.  
  
> [!CAUTION]
>  Este controle pode ser usado para exibir a entrada do usuário, que pode incluir um script de cliente mal-intencionado. Verifique todas as informações que são enviadas de um cliente para o script executável, instruções SQL ou outro código antes de exibi-lo em seu aplicativo. Você pode usar controles de validação para verificar se a entrada do usuário antes de exibir o texto de entrada em um controle. O ASP.NET fornece um recurso de validação de solicitação de entrada para o bloco de script e HTML na entrada do usuário. Para obter mais informações, consulte [protegendo controles padrão](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [como: proteger contra scripts maliciosos em um aplicativo da Web aplicando codificação HTML a cadeias de caracteres](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), e [Validando a entrada de usuário em Páginas da Web do ASP.NET](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.DataList.EditItemTemplate%2A> propriedade para controlar o conteúdo do item selecionado pelo usuário para edição.  
  
> [!NOTE]
>  O exemplo de código a seguir usa o modelo de código de arquivo único e pode não funcionar corretamente se copiados diretamente para um arquivo code-behind. Este exemplo de código deve ser copiado para um arquivo de texto vazio que tem uma extensão. aspx. Para obter mais informações sobre o modelo de código de Web Forms, consulte [o modelo de código de página do ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.EditItemIndex" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.EditItemStyle" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.EditCommand" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="T:System.Web.UI.ITemplate" />
      </Docs>
    </Member>
    <Member MemberName="ExtractTemplateRows">
      <MemberSignature Language="C#" Value="public virtual bool ExtractTemplateRows { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExtractTemplateRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.ExtractTemplateRows" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ExtractTemplateRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ExtractTemplateRows { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExtractTemplateRows : bool with get, set" Usage="System.Web.UI.WebControls.DataList.ExtractTemplateRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se as linhas de um controle <see cref="T:System.Web.UI.WebControls.Table" />, definidas em cada modelo de um controle <see cref="T:System.Web.UI.WebControls.DataList" />, são extraídas e exibidas.</summary>
        <value>
          <see langword="true" /> Se as linhas de uma <see cref="T:System.Web.UI.WebControls.Table" /> controle, definido em cada modelo de um <see cref="T:System.Web.UI.WebControls.DataList" /> controlar, são extraídos e exibido; caso contrário, <see langword="false" />. O valor padrão é <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O conteúdo do <xref:System.Web.UI.WebControls.DataList> controle são especificadas por meio de modelos. Normalmente, você pode listar controles que você deseja exibir nos modelos. Você também pode colocar um <xref:System.Web.UI.WebControls.Table> de controle em um modelo e exibir as linhas da tabela.  
  
 Use o <xref:System.Web.UI.WebControls.DataList.ExtractTemplateRows%2A> propriedade para especificar se as linhas de uma <xref:System.Web.UI.WebControls.Table> controle definido em cada modelo de um <xref:System.Web.UI.WebControls.DataList> controle são extraídos e exibidos. Todas as linhas extraídas de modelos do <xref:System.Web.UI.WebControls.DataList> controle são exibidos em uma única tabela. Isso permite que você crie uma única tabela de outras tabelas menores e ainda manter os recursos do <xref:System.Web.UI.WebControls.DataList> controle.  
  
> [!NOTE]
>  Quando essa propriedade é definida como `true`, você deve fornecer um bem formado <xref:System.Web.UI.WebControls.Table> controle para cada modelo que você deseja incluir no <xref:System.Web.UI.WebControls.DataList> controle. Somente as linhas das tabelas serão exibidas. Todos os outros conteúdos do modelo serão ignorados. Você deve usar um <xref:System.Web.UI.WebControls.Table> controle para que esse recurso funcione corretamente. O <xref:System.Web.UI.HtmlControls.HtmlTable?displayProperty=nameWithType> controle não é compatível com essa propriedade.  
  
 Quando você cria uma célula para um <xref:System.Web.UI.WebControls.Table> controle em um modelo, você pode usar o <xref:System.Web.UI.WebControls.TableCell.ColumnSpan%2A> propriedade o <xref:System.Web.UI.WebControls.TableCell> objeto para controlar o número de colunas que a célula abrange. Você também pode usar o <xref:System.Web.UI.WebControls.TableCell.RowSpan%2A> propriedade para controlar o número de linhas que a célula abrange.  
  
> [!NOTE]
>  O <xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A>, <xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A>, e <xref:System.Web.UI.WebControls.DataList.RepeatLayout%2A> propriedades não afetam a aparência do <xref:System.Web.UI.WebControls.DataList> controlar quando essa propriedade é definida como `true`.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstram como usar o <xref:System.Web.UI.WebControls.DataList.ExtractTemplateRows%2A> propriedade para extrair e exibir as linhas de <xref:System.Web.UI.WebControls.Table> controles definidos nos modelos do <xref:System.Web.UI.WebControls.DataList> controle.  
  
> [!NOTE]
>  O exemplo de código a seguir usa o modelo de código de arquivo único e pode não funcionar corretamente se copiados diretamente para um arquivo code-behind. Este exemplo de código deve ser copiado para um arquivo de texto vazio que tem uma extensão. aspx. Para obter mais informações sobre o modelo de código de Web Forms, consulte [o modelo de código de página do ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[Classic DataList.ExtractTemplateRows Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataList.ExtractTemplateRows Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataList.ExtractTemplateRows Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataList.ExtractTemplateRows Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Table" />
        <altmember cref="T:System.Web.UI.WebControls.TableRow" />
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SeparatorTemplate" />
      </Docs>
    </Member>
    <Member MemberName="FooterStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle FooterStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle FooterStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.FooterStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FooterStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ FooterStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FooterStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DataList.FooterStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém as propriedades de estilo da seção de rodapé do controle <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>Um <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> objeto que contém as propriedades de estilo para a seção de rodapé a <see cref="T:System.Web.UI.WebControls.DataList" /> controle. O valor padrão é um objeto <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> vazio.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use essa propriedade para fornecer um estilo personalizado na seção de rodapé do <xref:System.Web.UI.WebControls.DataList> controle. Atributos de estilo comuns que podem ser ajustados incluem cor de primeiro plano, cor de plano de fundo, fonte e alinhamento do conteúdo dentro da célula. Fornecer um estilo diferente aprimora a aparência do <xref:System.Web.UI.WebControls.DataList> controle.  
  
 O <xref:System.Web.UI.WebControls.DataList.FooterStyle%2A> propriedade o <xref:System.Web.UI.WebControls.DataList> controle herda as configurações de estilo do <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> propriedade. Por exemplo, se você especificar uma fonte em vermelho para a <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> propriedade, o <xref:System.Web.UI.WebControls.DataList.FooterStyle%2A> propriedade também terá uma fonte vermelha. Isso permite que você forneça uma aparência comum para o controle definindo uma propriedade de estilo único. Você pode substituir as configurações de estilo herdado, definindo o <xref:System.Web.UI.WebControls.DataList.FooterStyle%2A> propriedade. Por exemplo, você pode especificar uma fonte azul para o <xref:System.Web.UI.WebControls.DataList.FooterStyle%2A> substituindo a fonte vermelha especificada na propriedade de <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> propriedade.  
  
 Para especificar um estilo personalizado para a seção de rodapé, coloque o `<FooterStyle>` marcas entre as marcas de abertura e fechamento do <xref:System.Web.UI.WebControls.DataList> controle. Em seguida, você pode listar os atributos de estilo de abertura `<FooterStyle>` marca.  
  
> [!NOTE]
>  O <xref:System.Web.UI.WebControls.DataList.ShowFooter%2A> propriedade deve ser definida como `true` para que ela fique visível.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.DataList.FooterStyle%2A> propriedade para especificar uma cor de plano de fundo personalizada na seção de rodapé do <xref:System.Web.UI.WebControls.DataList> controle.  
  
> [!NOTE]
>  O exemplo de código a seguir usa o modelo de código de arquivo único e pode não funcionar corretamente se copiados diretamente para um arquivo code-behind. Este exemplo de código deve ser copiado para um arquivo de texto vazio que tem uma extensão. aspx. Para obter mais informações sobre o modelo de código de Web Forms, consulte [o modelo de código de página do ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListHeaderStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListHeaderStyle/CS/datalistheaderstylecs.aspx#1)]
 [!code-aspx-vb[DataListHeaderStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListHeaderStyle/VB/datalistheaderstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.ShowFooter" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="FooterTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate FooterTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate FooterTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.FooterTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FooterTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ FooterTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FooterTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.DataList.FooterTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DataListItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o modelo para a seção de rodapé do controle <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>Um objeto <see cref="T:System.Web.UI.ITemplate" /> que contém o modelo da seção de rodapé do controle <see cref="T:System.Web.UI.WebControls.DataList" />. O valor padrão é <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.DataList.FooterTemplate%2A> propriedade para controlar o conteúdo da seção de rodapé. A aparência da seção de rodapé é controlada pelo <xref:System.Web.UI.WebControls.DataList.FooterStyle%2A> propriedade.  
  
> [!NOTE]
>  O <xref:System.Web.UI.WebControls.DataList.ShowFooter%2A> propriedade deve ser definida como `true` para que ela fique visível.  
  
 O <xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> propriedade o <xref:System.Web.UI.WebControls.DataList> controle herda as configurações de estilo do <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> propriedade. Por exemplo, se você especificar uma fonte em vermelho para a <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> propriedade, o <xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> propriedade também terá uma fonte vermelha. Isso permite que você forneça uma aparência comum para o controle definindo uma propriedade de estilo único. Você pode substituir as configurações de estilo herdado, definindo o <xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> propriedade. Por exemplo, você pode especificar uma fonte azul para o <xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> substituindo a fonte vermelha especificada na propriedade de <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> propriedade.  
  
 Para especificar um modelo para a seção de rodapé, coloque o `<FooterTemplate>` marcas entre as marcas de abertura e fechamento do <xref:System.Web.UI.WebControls.DataList> controle. Em seguida, você pode listar o conteúdo do modelo entre a abertura e fechamento `<FooterTemplate>` marcas.  
  
> [!CAUTION]
>  Este controle pode ser usado para exibir a entrada do usuário, que pode incluir um script de cliente mal-intencionado. Verifique todas as informações que são enviadas de um cliente para o script executável, instruções SQL ou outro código antes de exibi-lo em seu aplicativo. Você pode usar controles de validação para verificar se a entrada do usuário antes de exibir o texto de entrada em um controle. O ASP.NET fornece um recurso de validação de solicitação de entrada para o bloco de script e HTML na entrada do usuário. Para obter mais informações, consulte [protegendo controles padrão](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [como: proteger contra scripts maliciosos em um aplicativo da Web aplicando codificação HTML a cadeias de caracteres](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), e [Validando a entrada de usuário em Páginas da Web do ASP.NET](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.DataList.FooterTemplate%2A> propriedade para controlar o conteúdo da seção de rodapé a <xref:System.Web.UI.WebControls.DataList> controle.  
  
> [!NOTE]
>  O exemplo de código a seguir usa o modelo de código de arquivo único e pode não funcionar corretamente se copiados diretamente para um arquivo code-behind. Este exemplo de código deve ser copiado para um arquivo de texto vazio que tem uma extensão. aspx. Para obter mais informações sobre o modelo de código de Web Forms, consulte [o modelo de código de página do ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListHeaderStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListHeaderStyle/CS/datalistheaderstylecs.aspx#1)]
 [!code-aspx-vb[DataListHeaderStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListHeaderStyle/VB/datalistheaderstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.ShowFooter" />
        <altmember cref="T:System.Web.UI.ITemplate" />
      </Docs>
    </Member>
    <Member MemberName="GridLines">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.GridLines GridLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.GridLines GridLines" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.GridLines" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property GridLines As GridLines" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::GridLines GridLines { System::Web::UI::WebControls::GridLines get(); void set(System::Web::UI::WebControls::GridLines value); };" />
      <MemberSignature Language="F#" Value="member this.GridLines : System.Web.UI.WebControls.GridLines with get, set" Usage="System.Web.UI.WebControls.DataList.GridLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridLines</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o estilo de linha de grade para o controle <see cref="T:System.Web.UI.WebControls.DataList" /> quando a propriedade <see cref="P:System.Web.UI.WebControls.DataList.RepeatLayout" /> está definida como <see langword="RepeatLayout.Table" />.</summary>
        <value>Um dos valores de enumeração <see cref="T:System.Web.UI.WebControls.GridLines" />. O valor padrão é <see langword="None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.DataList.GridLines%2A> propriedade para especificar o estilo de linha de grade para o <xref:System.Web.UI.WebControls.DataList> controle. A tabela a seguir lista os estilos possíveis.  
  
|Estilo|Descrição|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.GridLines.None>|Não há linhas de grade.|  
|<xref:System.Web.UI.WebControls.GridLines.Horizontal>|Exibe as linhas de grade horizontal.|  
|<xref:System.Web.UI.WebControls.GridLines.Vertical>|Exibe a linha de grade vertical.|  
|<xref:System.Web.UI.WebControls.GridLines.Both>|Exibe as ambas as linhas de grade horizontais e verticais.|  
  
> [!NOTE]
>  Essa propriedade só se aplica se o <xref:System.Web.UI.WebControls.DataList.RepeatLayout%2A> está definida como `RepeatLayout.Table`.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.DataList.GridLines%2A> propriedade para exibir as linhas de grade vertical e horizontal do <xref:System.Web.UI.WebControls.DataList> controle.  
  
> [!NOTE]
>  O exemplo de código a seguir usa o modelo de código de arquivo único e pode não funcionar corretamente se copiados diretamente para um arquivo code-behind. Este exemplo de código deve ser copiado para um arquivo de texto vazio que tem uma extensão. aspx. Para obter mais informações sobre o modelo de código de Web Forms, consulte [o modelo de código de página do ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListLayout/CS/datalistlayoutcs.aspx#1)]
 [!code-aspx-vb[DataListLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListLayout/VB/datalistlayoutvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridLines" />
      </Docs>
    </Member>
    <Member MemberName="HeaderStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle HeaderStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle HeaderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.HeaderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HeaderStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ HeaderStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HeaderStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DataList.HeaderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém as propriedades de estilo da seção de cabeçalho do controle <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>Um <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> que contém as propriedades de estilo para a seção de cabeçalho do objeto de <see cref="T:System.Web.UI.WebControls.DataList" /> controle. O valor padrão é um objeto <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> vazio.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use essa propriedade para fornecer um estilo personalizado para o título do <xref:System.Web.UI.WebControls.DataList> controle. Atributos de estilo comuns que podem ser ajustados incluem cor de primeiro plano, cor de plano de fundo, fonte e alinhamento do conteúdo dentro da célula. Fornecer um estilo diferente aprimora a aparência do <xref:System.Web.UI.WebControls.DataList> controle.  
  
 Para especificar um estilo personalizado para a seção de cabeçalho, coloque o `<HeaderStyle>` marcas entre as marcas de abertura e fechamento do <xref:System.Web.UI.WebControls.DataList> controle. Em seguida, você pode listar os atributos de estilo de abertura `<HeaderStyle>` marca.  
  
> [!NOTE]
>  O <xref:System.Web.UI.WebControls.DataList.ShowHeader%2A> propriedade deve ser definida como `true` para que ela fique visível.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> propriedade para especificar uma cor de plano de fundo personalizada na seção de cabeçalho do <xref:System.Web.UI.WebControls.DataList> controle.  
  
> [!NOTE]
>  O exemplo de código a seguir usa o modelo de código de arquivo único e pode não funcionar corretamente se copiados diretamente para um arquivo code-behind. Este exemplo de código deve ser copiado para um arquivo de texto vazio que tem uma extensão. aspx. Para obter mais informações sobre o modelo de código de Web Forms, consulte [o modelo de código de página do ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListHeaderStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListHeaderStyle/CS/datalistheaderstylecs.aspx#1)]
 [!code-aspx-vb[DataListHeaderStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListHeaderStyle/VB/datalistheaderstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.ShowHeader" />
      </Docs>
    </Member>
    <Member MemberName="HeaderTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate HeaderTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate HeaderTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.HeaderTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HeaderTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ HeaderTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.DataList.HeaderTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DataListItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o modelo para a seção de cabeçalho do controle <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>Um <see cref="T:System.Web.UI.ITemplate" /> que contém o modelo para a seção de cabeçalho do controle <see cref="T:System.Web.UI.WebControls.DataList" />. O valor padrão é <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.DataList.HeaderTemplate%2A> propriedade para controlar o conteúdo da seção de cabeçalho. A aparência da seção de cabeçalho é controlada pelo <xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> propriedade.  
  
> [!NOTE]
>  O <xref:System.Web.UI.WebControls.DataList.ShowHeader%2A> propriedade deve ser definida como `true` para que ela fique visível.  
  
 Para especificar um modelo para a seção de cabeçalho, coloque o `<HeaderTemplate>` marcas entre as marcas de abertura e fechamento do <xref:System.Web.UI.WebControls.DataList> controle. Em seguida, você pode listar o conteúdo do modelo entre a abertura e fechamento `<HeaderTemplate>` marcas.  
  
> [!CAUTION]
>  Este controle pode ser usado para exibir a entrada do usuário, que pode incluir um script de cliente mal-intencionado. Verifique todas as informações que são enviadas de um cliente para o script executável, instruções SQL ou outro código antes de exibi-lo em seu aplicativo. Você pode usar controles de validação para verificar se a entrada do usuário antes de exibir o texto de entrada em um controle. O ASP.NET fornece um recurso de validação de solicitação de entrada para o bloco de script e HTML na entrada do usuário. Para obter mais informações, consulte [protegendo controles padrão](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [como: proteger contra scripts maliciosos em um aplicativo da Web aplicando codificação HTML a cadeias de caracteres](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), e [Validando a entrada de usuário em Páginas da Web do ASP.NET](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.DataList.HeaderTemplate%2A> propriedade para controlar o conteúdo da seção de cabeçalho de <xref:System.Web.UI.WebControls.DataList> controle.  
  
> [!NOTE]
>  O exemplo de código a seguir usa o modelo de código de arquivo único e pode não funcionar corretamente se copiados diretamente para um arquivo code-behind. Este exemplo de código deve ser copiado para um arquivo de texto vazio que tem uma extensão. aspx. Para obter mais informações sobre o modelo de código de Web Forms, consulte [o modelo de código de página do ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListLayout/CS/datalistlayoutcs.aspx#1)]
 [!code-aspx-vb[DataListLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListLayout/VB/datalistlayoutvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.HeaderStyle" />
        <altmember cref="T:System.Web.UI.ITemplate" />
      </Docs>
    </Member>
    <Member MemberName="InitializeItem">
      <MemberSignature Language="C#" Value="protected virtual void InitializeItem (System.Web.UI.WebControls.DataListItem item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeItem(class System.Web.UI.WebControls.DataListItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.InitializeItem(System.Web.UI.WebControls.DataListItem)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeItem (item As DataListItem)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeItem(System::Web::UI::WebControls::DataListItem ^ item);" />
      <MemberSignature Language="F#" Value="abstract member InitializeItem : System.Web.UI.WebControls.DataListItem -&gt; unit&#xA;override this.InitializeItem : System.Web.UI.WebControls.DataListItem -&gt; unit" Usage="dataList.InitializeItem item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Web.UI.WebControls.DataListItem" />
      </Parameters>
      <Docs>
        <param name="item">O <see cref="T:System.Web.UI.WebControls.DataListItem" /> a ser inicializado.</param>
        <summary>Inicializa um objeto <see cref="T:System.Web.UI.WebControls.DataListItem" /> com base nos modelos e estilos especificados para o tipo de item de lista.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.DataList.InitializeItem%2A> método é usado principalmente por desenvolvedores de controle para estender o <xref:System.Web.UI.WebControls.DataList> controle.  
  
 O <xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A> método usa o <xref:System.Web.UI.WebControls.DataList.CreateItem%2A> e <xref:System.Web.UI.WebControls.DataList.InitializeItem%2A> métodos para criar <xref:System.Web.UI.WebControls.DataListItem> controles que representam o cabeçalho, rodapé, separador e itens de associação de dados contidos na lista de dados. Você pode acessar os itens de associação de dados para a lista de dados por meio de <xref:System.Web.UI.WebControls.DataList.Items%2A> coleção. Você pode acessar todos os tipos de item, incluindo o cabeçalho, rodapé e itens separadores, por meio de <xref:System.Web.UI.WebControls.BaseDataList.Controls%2A> coleção.  
  
 Substituir o <xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A> método para personalizar como <xref:System.Web.UI.WebControls.DataListItem> controles são criados ou adicionados para o <xref:System.Web.UI.WebControls.DataList> controle. Substituir o <xref:System.Web.UI.WebControls.DataList.InitializeItem%2A> método personalizar modelos para um <xref:System.Web.UI.WebControls.DataListItem> controle.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataList.CreateItem(System.Int32,System.Web.UI.WebControls.ListItemType)" />
        <altmember cref="T:System.Web.UI.WebControls.ListItemType" />
      </Docs>
    </Member>
    <Member MemberName="ItemCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataListCommandEventHandler ItemCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataListCommandEventHandler ItemCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataList.ItemCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCommand As DataListCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataListCommandEventHandler ^ ItemCommand;" />
      <MemberSignature Language="F#" Value="member this.ItemCommand : System.Web.UI.WebControls.DataListCommandEventHandler " Usage="member this.ItemCommand : System.Web.UI.WebControls.DataListCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre ao se clicar em qualquer botão no controle <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.DataList.ItemCommand> evento é gerado quando qualquer botão é clicado no <xref:System.Web.UI.WebControls.DataList> controlar e normalmente é usado quando você tem um controle de botão com um personalizado `CommandName` valor.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [como: consumir eventos em um aplicativo Web Forms](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como especificar e codificar um manipulador para o <xref:System.Web.UI.WebControls.DataList.ItemCommand> evento para selecionar um item do <xref:System.Web.UI.WebControls.DataList> controle.  
  
> [!NOTE]
>  O exemplo de código a seguir usa o modelo de código de arquivo único e pode não funcionar corretamente se copiados diretamente para um arquivo code-behind. Este exemplo de código deve ser copiado para um arquivo de texto vazio que tem uma extensão. aspx. Para obter mais informações sobre o modelo de código de Web Forms, consulte [o modelo de código de página do ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCommand/CS/datalistitemcommandcs.aspx#1)]
 [!code-aspx-vb[DataListItemCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCommand/VB/datalistitemcommandvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListItemCommand2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCommand2/CS/datalistitemcommand2cs.aspx#1)]
 [!code-aspx-vb[DataListItemCommand2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCommand2/VB/datalistitemcommand2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnItemCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemCreated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataListItemEventHandler ItemCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataListItemEventHandler ItemCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataList.ItemCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCreated As DataListItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataListItemEventHandler ^ ItemCreated;" />
      <MemberSignature Language="F#" Value="member this.ItemCreated : System.Web.UI.WebControls.DataListItemEventHandler " Usage="member this.ItemCreated : System.Web.UI.WebControls.DataListItemEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre no servidor quando um item no controle de <see cref="T:System.Web.UI.WebControls.DataList" /> é criado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.DataList.ItemCreated> evento é gerado quando um item no <xref:System.Web.UI.WebControls.DataList> controle é criado, durante ida e volta e no momento em que os dados são associados ao controle.  
  
 O <xref:System.Web.UI.WebControls.DataList.ItemCreated> evento normalmente é usado para controlar o conteúdo e a aparência de uma linha no <xref:System.Web.UI.WebControls.DataList> controle.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [como: consumir eventos em um aplicativo Web Forms](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como especificar e codificar um manipulador para o <xref:System.Web.UI.WebControls.DataList.ItemCreated> evento para exibir a ordem em que os itens no <xref:System.Web.UI.WebControls.DataList> controle são criados.  
  
> [!NOTE]
>  O exemplo de código a seguir usa o modelo de código de arquivo único e pode não funcionar corretamente se copiados diretamente para um arquivo code-behind. Este exemplo de código deve ser copiado para um arquivo de texto vazio que tem uma extensão. aspx. Para obter mais informações sobre o modelo de código de Web Forms, consulte [o modelo de código de página do ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemCreated#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCreated/CS/datalistitemcreatedcs.aspx#1)]
 [!code-aspx-vb[DataListItemCreated#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCreated/VB/datalistitemcreatedvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListItemCreated2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCreated2/CS/datalistitemcreated2cs.aspx#1)]
 [!code-aspx-vb[DataListItemCreated2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCreated2/VB/datalistitemcreated2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListItemEventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnItemCreated(System.Web.UI.WebControls.DataListItemEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemDataBound">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataListItemEventHandler ItemDataBound;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataListItemEventHandler ItemDataBound" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataList.ItemDataBound" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemDataBound As DataListItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataListItemEventHandler ^ ItemDataBound;" />
      <MemberSignature Language="F#" Value="member this.ItemDataBound : System.Web.UI.WebControls.DataListItemEventHandler " Usage="member this.ItemDataBound : System.Web.UI.WebControls.DataListItemEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando um item tem limite de dados em relação ao controle <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.DataList.ItemDataBound> evento é gerado após um item de dados associados para o <xref:System.Web.UI.WebControls.DataList> controle. Esse evento é a última oportunidade de acessar o item de dados antes de ser exibido no cliente. Depois que esse evento é gerado, o item de dados não está mais disponível.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [como: consumir eventos em um aplicativo Web Forms](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como especificar e codificar um manipulador para o <xref:System.Web.UI.WebControls.DataList.ItemDataBound> evento para exibir a ordem em que os itens no <xref:System.Web.UI.WebControls.DataList> controle estão associados ao controle.  
  
> [!NOTE]
>  O exemplo de código a seguir usa o modelo de código de arquivo único e pode não funcionar corretamente se copiados diretamente para um arquivo code-behind. Este exemplo de código deve ser copiado para um arquivo de texto vazio que tem uma extensão. aspx. Para obter mais informações sobre o modelo de código de Web Forms, consulte [o modelo de código de página do ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemDataBound#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemDataBound/CS/datalistitemdataboundcs.aspx#1)]
 [!code-aspx-vb[DataListItemDataBound#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemDataBound/VB/datalistitemdataboundvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListItemDataBound2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemDataBound2/CS/datalistitemdatabound2cs.aspx#1)]
 [!code-aspx-vb[DataListItemDataBound2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemDataBound2/VB/datalistitemdatabound2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListItemEventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnItemDataBound(System.Web.UI.WebControls.DataListItemEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataListItemCollection Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataListItemCollection Items" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.Items" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Items As DataListItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::DataListItemCollection ^ Items { System::Web::UI::WebControls::DataListItemCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Web.UI.WebControls.DataListItemCollection" Usage="System.Web.UI.WebControls.DataList.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma coleção de objetos <see cref="T:System.Web.UI.WebControls.DataListItem" /> que representam os itens individuais no controle.</summary>
        <value>Um <see cref="T:System.Web.UI.WebControls.DataListItemCollection" /> que contém uma coleção de objetos <see cref="T:System.Web.UI.WebControls.DataListItem" /> que representam os itens individuais no controle <see cref="T:System.Web.UI.WebControls.DataList" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.DataList.Items%2A> coleção para controlar programaticamente os itens a <xref:System.Web.UI.WebControls.DataList> controle. O <xref:System.Web.UI.WebControls.DataList.Items%2A> coleção fornece os métodos para adicionar ou remover itens na coleção. No entanto, você pode controlar o conteúdo de um item, fornecendo um manipulador para o <xref:System.Web.UI.WebControls.DataList.ItemCreated> evento.  
  
> [!NOTE]
>  Somente os itens associados à fonte de dados estão contidos no <xref:System.Web.UI.WebControls.DataList.Items%2A> coleção. O cabeçalho, rodapé e separador não são incluídos na coleção.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.DataList.Items%2A> coleção para exibir os itens a <xref:System.Web.UI.WebControls.DataList> controle.  
  
> [!NOTE]
>  O exemplo de código a seguir usa o modelo de código de arquivo único e pode não funcionar corretamente se copiados diretamente para um arquivo code-behind. Este exemplo de código deve ser copiado para um arquivo de texto vazio que tem uma extensão. aspx. Para obter mais informações sobre o modelo de código de Web Forms, consulte [o modelo de código de página do ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[Classic DataList.Items Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataList.Items Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataList.Items Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataList.Items Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListItem" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.ItemCreated" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnItemCreated(System.Web.UI.WebControls.DataListItemEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle ItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle ItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.ItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ItemStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ ItemStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DataList.ItemStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém as propriedades de estilo para os itens no controle <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>Um objeto <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> que contém as propriedades de estilo para os itens no controle <see cref="T:System.Web.UI.WebControls.DataList" />. O valor padrão é um objeto <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> vazio.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use essa propriedade para fornecer um estilo personalizado para os itens do <xref:System.Web.UI.WebControls.DataList> controle. Atributos de estilo comuns que podem ser ajustados incluem cor de primeiro plano, cor de plano de fundo, fonte e alinhamento do conteúdo dentro da célula. Fornecer um estilo diferente aprimora a aparência do <xref:System.Web.UI.WebControls.DataList> controle.  
  
 Propriedades de estilo do item de <xref:System.Web.UI.WebControls.DataList> controle são herdadas de propriedade de estilo de um item para outro através de uma hierarquia. Propriedades de estilo do item definidas como inferiores na hierarquia são herdadas por propriedades de estilo do item superiores na hierarquia. Por exemplo, se você especificar uma fonte em vermelho para a <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> propriedade, todas as outras propriedades de estilo do item no <xref:System.Web.UI.WebControls.DataList> controle também terá uma fonte vermelha. Isso permite que você forneça uma aparência comum para o controle definindo uma propriedade de estilo do item único. Você pode substituir as configurações de estilo herdado para uma propriedade de estilo do item que é superior na hierarquia, definindo suas propriedades de estilo. Por exemplo, você pode especificar uma fonte azul para o <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> substituindo a fonte vermelha especificada na propriedade de <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> propriedade. A tabela a seguir lista a ordem da hierarquia do mais alto ao mais baixo.  
  
|Precedência|Propriedade de estilo|  
|----------------|--------------------|  
|1|<xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>|  
|2|<xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>|  
|3|<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>|  
|4|<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>|  
|5|<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|  
  
 Para especificar um estilo personalizado para os itens do <xref:System.Web.UI.WebControls.DataList> controlar, coloque o `<ItemStyle>` marcas entre as marcas de abertura e fechamento do <xref:System.Web.UI.WebControls.DataList> controle. Em seguida, você pode listar os atributos de estilo de abertura `<ItemStyle>` marca.  
  
 Você também pode usar o <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> propriedade para fornecer uma aparência diferente para a alternância de itens de <xref:System.Web.UI.WebControls.DataList> controle.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> propriedade para especificar uma cor de plano de fundo diferente para os itens a <xref:System.Web.UI.WebControls.DataList> controle.  
  
> [!NOTE]
>  O exemplo de código a seguir usa o modelo de código de arquivo único e pode não funcionar corretamente se copiados diretamente para um arquivo code-behind. Este exemplo de código deve ser copiado para um arquivo de texto vazio que tem uma extensão. aspx. Para obter mais informações sobre o modelo de código de Web Forms, consulte [o modelo de código de página do ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemStyle/CS/datalistitemstylecs.aspx#1)]
 [!code-aspx-vb[DataListItemStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemStyle/VB/datalistitemstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.AlternatingItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="ItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate ItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.ItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ ItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.DataList.ItemTemplate" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IWizardSideBarListControl.ItemTemplate</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DataListItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o modelo para os itens no controle <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>Um <see cref="T:System.Web.UI.ITemplate" /> que contém o modelo para os itens no controle <see cref="T:System.Web.UI.WebControls.DataList" />. O valor padrão é <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.DataList.ItemTemplate%2A> propriedade para controlar o conteúdo dos itens a <xref:System.Web.UI.WebControls.DataList> controle. A aparência dos itens do <xref:System.Web.UI.WebControls.DataList> controle é controlado pelo <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> propriedade.  
  
 Para especificar um modelo para os itens do <xref:System.Web.UI.WebControls.DataList> controlar, coloque o `<ItemTemplate>` marcas entre as marcas de abertura e fechamento do <xref:System.Web.UI.WebControls.DataList> controle. Em seguida, você pode listar o conteúdo do modelo entre a abertura e fechamento `<ItemTemplate>` marcas.  
  
 Opcionalmente, você pode usar o <xref:System.Web.UI.WebControls.DataList.AlternatingItemTemplate%2A> propriedade para fornecer uma aparência diferente para a alternância de itens de <xref:System.Web.UI.WebControls.DataList> controle.  
  
> [!CAUTION]
>  Este controle pode ser usado para exibir a entrada do usuário, que pode incluir um script de cliente mal-intencionado. Verifique todas as informações que são enviadas de um cliente para o script executável, instruções SQL ou outro código antes de exibi-lo em seu aplicativo. Você pode usar controles de validação para verificar se a entrada do usuário antes de exibir o texto de entrada em um controle. O ASP.NET fornece um recurso de validação de solicitação de entrada para o bloco de script e HTML na entrada do usuário. Para obter mais informações, consulte [protegendo controles padrão](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [como: proteger contra scripts maliciosos em um aplicativo da Web aplicando codificação HTML a cadeias de caracteres](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), e [Validando a entrada de usuário em Páginas da Web do ASP.NET](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.DataList.ItemTemplate%2A> propriedade para controlar o conteúdo dos itens a <xref:System.Web.UI.WebControls.DataList> controle.  
  
> [!NOTE]
>  O exemplo de código a seguir usa o modelo de código de arquivo único e pode não funcionar corretamente se copiados diretamente para um arquivo code-behind. Este exemplo de código deve ser copiado para um arquivo de texto vazio que tem uma extensão. aspx. Para obter mais informações sobre o modelo de código de Web Forms, consulte [o modelo de código de página do ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListLayout/CS/datalistlayoutcs.aspx#1)]
 [!code-aspx-vb[DataListLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListLayout/VB/datalistlayoutvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.ItemStyle" />
        <altmember cref="T:System.Web.UI.ITemplate" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="dataList.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Um objeto que representa o estado da <see cref="T:System.Web.UI.WebControls.DataList" />.</param>
        <summary>Carrega o estado de exibição salvo anteriormente do controle <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método é usado basicamente pela infraestrutura do .NET Framework e não se destina a ser usado diretamente no seu código.  No entanto, os desenvolvedores de controle podem substituir este método para especificar como um controle de servidor personalizado restaura o estado de exibição. Para obter mais informações, consulte [visão geral do gerenciamento de estado ASP.NET](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce).  
  
 O <xref:System.Web.UI.WebControls.DataList.LoadViewState%2A> método restaura informações de estado de exibição para o <xref:System.Web.UI.WebControls.DataList> controle de uma solicitação de página anterior que foi salvo pelo <xref:System.Web.UI.WebControls.DataList.SaveViewState%2A> método.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataList.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnBubbleEvent(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBubbleEvent (source As Object, e As EventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnBubbleEvent(System::Object ^ source, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnBubbleEvent : obj * EventArgs -&gt; bool" Usage="dataList.OnBubbleEvent (source, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">A fonte do evento.</param>
        <param name="e">Os dados do evento.</param>
        <summary>Determina se o evento do controle de servidor é passado um nível acima da hierarquia de controle de servidor da interface do usuário da página.</summary>
        <returns>
          <see langword="true" /> se o evento tiver sido cancelado; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnCancelCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnCancelCommand (System.Web.UI.WebControls.DataListCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCancelCommand(class System.Web.UI.WebControls.DataListCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCancelCommand (e As DataListCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCancelCommand(System::Web::UI::WebControls::DataListCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCancelCommand : System.Web.UI.WebControls.DataListCommandEventArgs -&gt; unit&#xA;override this.OnCancelCommand : System.Web.UI.WebControls.DataListCommandEventArgs -&gt; unit" Usage="dataList.OnCancelCommand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" /> que contém dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Web.UI.WebControls.DataList.CancelCommand" />. Isso permite que você forneça um manipulador personalizado para o evento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.DataList.OnCancelCommand%2A> método para fornecer um manipulador personalizado para o <xref:System.Web.UI.WebControls.DataList.CancelCommand> evento.  
  
 O <xref:System.Web.UI.WebControls.DataList.CancelCommand> é gerado quando o `Cancel` botão é clicado para um item no <xref:System.Web.UI.WebControls.DataList> controle.  
  
 Um manipulador típico para o <xref:System.Web.UI.WebControls.DataList.CancelCommand> conjuntos de eventos a <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> propriedade `-1` (para desmarcar o item) e, em seguida, reconecta os dados para o <xref:System.Web.UI.WebControls.DataList> controle.  
  
> [!CAUTION]
>  Este controle pode ser usado para exibir a entrada do usuário, que pode incluir um script de cliente mal-intencionado. Verifique todas as informações que são enviadas de um cliente para o script executável, instruções SQL ou outro código antes de exibi-lo em seu aplicativo. Você pode usar controles de validação para verificar se a entrada do usuário antes de exibir o texto de entrada em um controle. O ASP.NET fornece um recurso de validação de solicitação de entrada para o bloco de script e HTML na entrada do usuário. Para obter mais informações, consulte [protegendo controles padrão](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [como: proteger contra scripts maliciosos em um aplicativo da Web aplicando codificação HTML a cadeias de caracteres](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), e [Validando a entrada de usuário em Páginas da Web do ASP.NET](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [como: consumir eventos em um aplicativo Web Forms](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
 O <xref:System.Web.UI.WebControls.DataList.OnCancelCommand%2A> método também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como especificar e codificar um manipulador para o <xref:System.Web.UI.WebControls.DataList.CancelCommand> evento. Cancela as edições feitas em um item de <xref:System.Web.UI.WebControls.DataList> controlar quando o `Cancel` botão é clicado.  
  
> [!NOTE]
>  O exemplo de código a seguir usa o modelo de código de arquivo único e pode não funcionar corretamente se copiados diretamente para um arquivo code-behind. Este exemplo de código deve ser copiado para um arquivo de texto vazio que tem uma extensão. aspx. Para obter mais informações sobre o modelo de código de Web Forms, consulte [o modelo de código de página do ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao substituir <see cref="M:System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> método para que registrado delegados receber o evento.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.DataList.CancelCommand" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnDeleteCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnDeleteCommand (System.Web.UI.WebControls.DataListCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDeleteCommand(class System.Web.UI.WebControls.DataListCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDeleteCommand (e As DataListCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDeleteCommand(System::Web::UI::WebControls::DataListCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDeleteCommand : System.Web.UI.WebControls.DataListCommandEventArgs -&gt; unit&#xA;override this.OnDeleteCommand : System.Web.UI.WebControls.DataListCommandEventArgs -&gt; unit" Usage="dataList.OnDeleteCommand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" /> que contém dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Web.UI.WebControls.DataList.DeleteCommand" />. Isso permite que você forneça um manipulador personalizado para o evento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.DataList.OnDeleteCommand%2A> método para fornecer um manipulador personalizado para o <xref:System.Web.UI.WebControls.DataList.DeleteCommand> evento.  
  
 O <xref:System.Web.UI.WebControls.DataList.DeleteCommand> é gerado quando o `Delete` botão é clicado para um item no <xref:System.Web.UI.WebControls.DataList> controle.  
  
 Um manipulador típico para o <xref:System.Web.UI.WebControls.DataList.DeleteCommand> evento remove o item selecionado da fonte de dados e, em seguida, reconecta os dados para o <xref:System.Web.UI.WebControls.DataList> controle.  
  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [como: consumir eventos em um aplicativo Web Forms](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
 O <xref:System.Web.UI.WebControls.DataList.OnDeleteCommand%2A> método também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como especificar e codificar um manipulador para o <xref:System.Web.UI.WebControls.DataList.DeleteCommand> evento. Exclui o item selecionado no <xref:System.Web.UI.WebControls.DataList> controlar quando o `Delete` botão é clicado.  
  
> [!NOTE]
>  O exemplo de código a seguir usa o modelo de código de arquivo único e pode não funcionar corretamente se copiados diretamente para um arquivo code-behind. Este exemplo de código deve ser copiado para um arquivo de texto vazio que tem uma extensão. aspx. Para obter mais informações sobre o modelo de código de Web Forms, consulte [o modelo de código de página do ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao substituir <see cref="M:System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> método para que registrado delegados receber o evento.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.DataList.DeleteCommand" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnEditCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnEditCommand (System.Web.UI.WebControls.DataListCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEditCommand(class System.Web.UI.WebControls.DataListCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEditCommand (e As DataListCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEditCommand(System::Web::UI::WebControls::DataListCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnEditCommand : System.Web.UI.WebControls.DataListCommandEventArgs -&gt; unit&#xA;override this.OnEditCommand : System.Web.UI.WebControls.DataListCommandEventArgs -&gt; unit" Usage="dataList.OnEditCommand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" /> que contém dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Web.UI.WebControls.DataList.EditCommand" />. Isso permite que você forneça um manipulador personalizado para o evento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.DataList.OnEditCommand%2A> método para fornecer um manipulador personalizado para o <xref:System.Web.UI.WebControls.DataList.EditCommand> evento.  
  
 O <xref:System.Web.UI.WebControls.DataList.EditCommand> é gerado quando o `Edit` botão é clicado para um item no <xref:System.Web.UI.WebControls.DataList> controle.  
  
 Um manipulador típico para o <xref:System.Web.UI.WebControls.DataList.EditCommand> evento define o <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> propriedade para a linha selecionada e, em seguida, reconecta os dados para o <xref:System.Web.UI.WebControls.DataList> controle.  
  
> [!CAUTION]
>  Este controle pode ser usado para exibir a entrada do usuário, que pode incluir um script de cliente mal-intencionado. Verifique todas as informações que são enviadas de um cliente para o script executável, instruções SQL ou outro código antes de exibi-lo em seu aplicativo. Você pode usar controles de validação para verificar se a entrada do usuário antes de exibir o texto de entrada em um controle. O ASP.NET fornece um recurso de validação de solicitação de entrada para o bloco de script e HTML na entrada do usuário. Para obter mais informações, consulte [protegendo controles padrão](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [como: proteger contra scripts maliciosos em um aplicativo da Web aplicando codificação HTML a cadeias de caracteres](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), e [Validando a entrada de usuário em Páginas da Web do ASP.NET](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [como: consumir eventos em um aplicativo Web Forms](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
 O <xref:System.Web.UI.WebControls.DataList.OnEditCommand%2A> método também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como especificar e codificar um manipulador para o <xref:System.Web.UI.WebControls.DataList.EditCommand> evento. Ele permite que você edite o item selecionado no <xref:System.Web.UI.WebControls.DataList> controlar quando o `Edit` botão é clicado.  
  
> [!NOTE]
>  O exemplo de código a seguir usa o modelo de código de arquivo único e pode não funcionar corretamente se copiados diretamente para um arquivo code-behind. Este exemplo de código deve ser copiado para um arquivo de texto vazio que tem uma extensão. aspx. Para obter mais informações sobre o modelo de código de Web Forms, consulte [o modelo de código de página do ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao substituir <see cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> método para que registrado delegados receber o evento.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.DataList.EditCommand" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="dataList.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.EventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Web.UI.Control.Init" /> do controle <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.DataList.OnInit%2A> método notifica o <xref:System.Web.UI.WebControls.DataList> controle para executar as etapas de inicialização que são necessárias para criar e configurar uma instância.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.OnInit(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnItemCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCommand (System.Web.UI.WebControls.DataListCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCommand(class System.Web.UI.WebControls.DataListCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnItemCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCommand (e As DataListCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCommand(System::Web::UI::WebControls::DataListCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemCommand : System.Web.UI.WebControls.DataListCommandEventArgs -&gt; unit&#xA;override this.OnItemCommand : System.Web.UI.WebControls.DataListCommandEventArgs -&gt; unit" Usage="dataList.OnItemCommand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" /> que contém dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Web.UI.WebControls.DataList.ItemCommand" />. Isso permite que você forneça um manipulador personalizado para o evento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.DataList.OnItemCommand%2A> método para fornecer um manipulador personalizado para o <xref:System.Web.UI.WebControls.DataList.ItemCommand> evento.  
  
 O <xref:System.Web.UI.WebControls.DataList.ItemCommand> evento é gerado quando qualquer botão é clicado no <xref:System.Web.UI.WebControls.DataList> controlar e normalmente é usado quando você tem um controle de botão com um personalizado `CommandName` valor, como `Add`, no <xref:System.Web.UI.WebControls.DataList> controle.  
  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [como: consumir eventos em um aplicativo Web Forms](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
 O <xref:System.Web.UI.WebControls.DataList.OnItemCommand%2A> método também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como especificar e codificar um manipulador para o <xref:System.Web.UI.WebControls.DataList.ItemCommand> evento para selecionar um item do <xref:System.Web.UI.WebControls.DataList> controle.  
  
> [!NOTE]
>  O exemplo de código a seguir usa o modelo de código de arquivo único e pode não funcionar corretamente se copiados diretamente para um arquivo code-behind. Este exemplo de código deve ser copiado para um arquivo de texto vazio que tem uma extensão. aspx. Para obter mais informações sobre o modelo de código de Web Forms, consulte [o modelo de código de página do ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCommand/CS/datalistitemcommandcs.aspx#1)]
 [!code-aspx-vb[DataListItemCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCommand/VB/datalistitemcommandvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListItemCommand2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCommand2/CS/datalistitemcommand2cs.aspx#1)]
 [!code-aspx-vb[DataListItemCommand2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCommand2/VB/datalistitemcommand2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao substituir <see cref="M:System.Web.UI.WebControls.DataList.OnItemCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Web.UI.WebControls.DataList.OnItemCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> método para que registrado delegados receber o evento.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.DataList.ItemCommand" />
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCreated (System.Web.UI.WebControls.DataListItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCreated(class System.Web.UI.WebControls.DataListItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnItemCreated(System.Web.UI.WebControls.DataListItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCreated (e As DataListItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCreated(System::Web::UI::WebControls::DataListItemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemCreated : System.Web.UI.WebControls.DataListItemEventArgs -&gt; unit&#xA;override this.OnItemCreated : System.Web.UI.WebControls.DataListItemEventArgs -&gt; unit" Usage="dataList.OnItemCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataListItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Web.UI.WebControls.DataListItemEventArgs" /> que contém dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Web.UI.WebControls.DataList.ItemCreated" />. Isso permite que você forneça um manipulador personalizado para o evento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.DataList.OnItemCreated%2A> método para fornecer um manipulador personalizado para o <xref:System.Web.UI.WebControls.DataList.ItemCreated> evento.  
  
 O <xref:System.Web.UI.WebControls.DataList.ItemCreated> evento é gerado quando um item no <xref:System.Web.UI.WebControls.DataList> controle é criado, durante ida e volta e no momento em que os dados são associados ao controle.  
  
 O <xref:System.Web.UI.WebControls.DataList.ItemCreated> evento normalmente é usado para controlar o conteúdo e a aparência de uma linha no <xref:System.Web.UI.WebControls.DataList> controle.  
  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [como: consumir eventos em um aplicativo Web Forms](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
 O <xref:System.Web.UI.WebControls.DataList.OnItemCreated%2A> método também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como especificar e codificar um manipulador para o <xref:System.Web.UI.WebControls.DataList.ItemCreated> evento para exibir a ordem em que os itens no <xref:System.Web.UI.WebControls.DataList> controle são criados.  
  
> [!NOTE]
>  O exemplo de código a seguir usa o modelo de código de arquivo único e pode não funcionar corretamente se copiados diretamente para um arquivo code-behind. Este exemplo de código deve ser copiado para um arquivo de texto vazio que tem uma extensão. aspx. Para obter mais informações sobre o modelo de código de Web Forms, consulte [o modelo de código de página do ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemCreated#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCreated/CS/datalistitemcreatedcs.aspx#1)]
 [!code-aspx-vb[DataListItemCreated#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCreated/VB/datalistitemcreatedvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListItemCreated2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCreated2/CS/datalistitemcreated2cs.aspx#1)]
 [!code-aspx-vb[DataListItemCreated2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCreated2/VB/datalistitemcreated2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao substituir <see cref="M:System.Web.UI.WebControls.DataList.OnItemCreated(System.Web.UI.WebControls.DataListItemEventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Web.UI.WebControls.DataList.OnItemCreated(System.Web.UI.WebControls.DataListItemEventArgs)" /> método para que registrado delegados receber o evento.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.DataList.ItemCreated" />
        <altmember cref="T:System.Web.UI.WebControls.DataListItemEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemDataBound">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDataBound (System.Web.UI.WebControls.DataListItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDataBound(class System.Web.UI.WebControls.DataListItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnItemDataBound(System.Web.UI.WebControls.DataListItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemDataBound (e As DataListItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemDataBound(System::Web::UI::WebControls::DataListItemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemDataBound : System.Web.UI.WebControls.DataListItemEventArgs -&gt; unit&#xA;override this.OnItemDataBound : System.Web.UI.WebControls.DataListItemEventArgs -&gt; unit" Usage="dataList.OnItemDataBound e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataListItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Web.UI.WebControls.DataListItemEventArgs" /> que contém dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Web.UI.WebControls.DataList.ItemDataBound" />. Isso permite que você forneça um manipulador personalizado para o evento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.DataList.OnItemDataBound%2A> método para fornecer um manipulador personalizado para o <xref:System.Web.UI.WebControls.DataList.ItemDataBound> evento.  
  
 O <xref:System.Web.UI.WebControls.DataList.ItemDataBound> evento é gerado após um item de dados associados para o <xref:System.Web.UI.WebControls.DataList> controle. Esse evento é a última oportunidade de acessar o item de dados antes de ser exibido no cliente. Depois que esse evento é gerado, o item de dados não está mais disponível.  
  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [como: consumir eventos em um aplicativo Web Forms](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
 O <xref:System.Web.UI.WebControls.DataList.OnItemDataBound%2A> método também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como especificar e codificar um manipulador para o <xref:System.Web.UI.WebControls.DataList.ItemDataBound> evento para exibir a ordem em que os itens no <xref:System.Web.UI.WebControls.DataList> controle estão associados ao controle.  
  
> [!NOTE]
>  O exemplo de código a seguir usa o modelo de código de arquivo único e pode não funcionar corretamente se copiados diretamente para um arquivo code-behind. Este exemplo de código deve ser copiado para um arquivo de texto vazio que tem uma extensão. aspx. Para obter mais informações sobre o modelo de código de Web Forms, consulte [o modelo de código de página do ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemDataBound#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemDataBound/CS/datalistitemdataboundcs.aspx#1)]
 [!code-aspx-vb[DataListItemDataBound#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemDataBound/VB/datalistitemdataboundvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListItemDataBound2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemDataBound2/CS/datalistitemdatabound2cs.aspx#1)]
 [!code-aspx-vb[DataListItemDataBound2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemDataBound2/VB/datalistitemdatabound2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao substituir <see cref="M:System.Web.UI.WebControls.DataList.OnItemDataBound(System.Web.UI.WebControls.DataListItemEventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Web.UI.WebControls.DataList.OnItemDataBound(System.Web.UI.WebControls.DataListItemEventArgs)" /> método para que registrado delegados receber o evento.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.DataList.ItemDataBound" />
        <altmember cref="T:System.Web.UI.WebControls.DataListItemEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnUpdateCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnUpdateCommand (System.Web.UI.WebControls.DataListCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUpdateCommand(class System.Web.UI.WebControls.DataListCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUpdateCommand (e As DataListCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUpdateCommand(System::Web::UI::WebControls::DataListCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUpdateCommand : System.Web.UI.WebControls.DataListCommandEventArgs -&gt; unit&#xA;override this.OnUpdateCommand : System.Web.UI.WebControls.DataListCommandEventArgs -&gt; unit" Usage="dataList.OnUpdateCommand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Web.UI.WebControls.DataListItemEventArgs" /> que contém dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Web.UI.WebControls.DataList.UpdateCommand" />. Isso permite que você forneça um manipulador personalizado para o evento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.DataList.OnUpdateCommand%2A> método para fornecer um manipulador personalizado para o <xref:System.Web.UI.WebControls.DataList.UpdateCommand> evento.  
  
 O <xref:System.Web.UI.WebControls.DataList.UpdateCommand> é gerado quando o `Update` botão para um item é clicado.  
  
 Um manipulador típico para o <xref:System.Web.UI.WebControls.DataList.UpdateCommand> evento atualiza os dados, conjuntos do <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> propriedade `-1` (para desmarcar o item) e, em seguida, reconecta os dados para o <xref:System.Web.UI.WebControls.DataList> controle.  
  
> [!CAUTION]
>  Este controle pode ser usado para exibir a entrada do usuário, que pode incluir um script de cliente mal-intencionado. Verifique todas as informações que são enviadas de um cliente para o script executável, instruções SQL ou outro código antes de exibi-lo em seu aplicativo. Você pode usar controles de validação para verificar se a entrada do usuário antes de exibir o texto de entrada em um controle. O ASP.NET fornece um recurso de validação de solicitação de entrada para o bloco de script e HTML na entrada do usuário. Para obter mais informações, consulte [protegendo controles padrão](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [como: proteger contra scripts maliciosos em um aplicativo da Web aplicando codificação HTML a cadeias de caracteres](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), e [Validando a entrada de usuário em Páginas da Web do ASP.NET](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [como: consumir eventos em um aplicativo Web Forms](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
 O <xref:System.Web.UI.WebControls.DataList.OnUpdateCommand%2A> método também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como especificar e codificar um manipulador para o <xref:System.Web.UI.WebControls.DataList.UpdateCommand> evento. Ele permite que você atualize o item selecionado no <xref:System.Web.UI.WebControls.DataList> controle com os novos valores inseridos pelo usuário quando o `Update` botão é clicado.  
  
> [!NOTE]
>  O exemplo de código a seguir usa o modelo de código de arquivo único e pode não funcionar corretamente se copiados diretamente para um arquivo code-behind. Este exemplo de código deve ser copiado para um arquivo de texto vazio que tem uma extensão. aspx. Para obter mais informações sobre o modelo de código de Web Forms, consulte [o modelo de código de página do ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao substituir <see cref="M:System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> método para que registrado delegados receber o evento.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.DataList.UpdateCommand" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="PrepareControlHierarchy">
      <MemberSignature Language="C#" Value="protected internal override void PrepareControlHierarchy ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void PrepareControlHierarchy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.PrepareControlHierarchy" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub PrepareControlHierarchy ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void PrepareControlHierarchy();" />
      <MemberSignature Language="F#" Value="override this.PrepareControlHierarchy : unit -&gt; unit" Usage="dataList.PrepareControlHierarchy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Prepara a hierarquia de controle para renderização no controle <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.DataList.PrepareControlHierarchy%2A> método é usado principalmente por desenvolvedores de controle ao derivar um controle personalizado do <xref:System.Web.UI.WebControls.DataList> controle.  
  
 O <xref:System.Web.UI.WebControls.DataList.PrepareControlHierarchy%2A> prepara a hierarquia de controle e define estilos para contidos <xref:System.Web.UI.WebControls.DataListItem> controla antes que os controles filho são processadas.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Substituir o <see cref="M:System.Web.UI.WebControls.DataList.PrepareControlHierarchy" /> método para personalizar os estilos de controles contidos no <see cref="T:System.Web.UI.WebControls.DataList" /> antes de serem processadas.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.DataList.RenderContents(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected internal override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderContents : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="dataList.RenderContents writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Um <see cref="T:System.Web.UI.HtmlTextWriter" /> que representa o fluxo de saída para renderizar o conteúdo HTML no cliente.</param>
        <summary>Renderiza os itens de lista no controle <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.DataList.RenderContents%2A> método é usado principalmente por desenvolvedores de controle, ao derivar um controle personalizado do <xref:System.Web.UI.WebControls.DataList> controle.  
  
 O <xref:System.Web.UI.WebControls.DataList.RenderContents%2A> método renderiza conteúdo de interna a <xref:System.Web.UI.WebControls.DataList> controle, incluindo o independente <xref:System.Web.UI.WebControls.DataListItem> controles.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como substituir o <xref:System.Web.UI.WebControls.DataList.RenderContents%2A> controlar o método em um servidor personalizado para que algum texto precede o <xref:System.Web.UI.WebControls.DataList> objeto.  
  
 [!code-aspx-csharp[CustomDataListRenderContents#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomDataListRenderContents/CS/custom_datalist_rendercontentscs.aspx#1)]
 [!code-aspx-vb[CustomDataListRenderContents#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomDataListRenderContents/VB/custom_datalist_rendercontentsvb.aspx#1)]  
[!code-csharp[CustomDataListRenderContents#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomDataListRenderContents/CS/custom_datalist_rendercontents.cs#2)]
[!code-vb[CustomDataListRenderContents#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomDataListRenderContents/VB/custom_datalist_rendercontents.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RepeatColumns">
      <MemberSignature Language="C#" Value="public virtual int RepeatColumns { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RepeatColumns" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.RepeatColumns" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RepeatColumns As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int RepeatColumns { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.RepeatColumns : int with get, set" Usage="System.Web.UI.WebControls.DataList.RepeatColumns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o número de colunas a serem exibidas no controle <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>O número de colunas a serem exibidas no controle <see cref="T:System.Web.UI.WebControls.DataList" />. O valor padrão é <see langword="0" />, que indica que os itens no controle <see cref="T:System.Web.UI.WebControls.DataList" /> são exibidos em uma única linha ou coluna, com base no valor da propriedade <see cref="P:System.Web.UI.WebControls.DataList.RepeatDirection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use esta propriedade para especificar o número de colunas que exibem itens de <xref:System.Web.UI.WebControls.DataList> controle. Por exemplo, se você definir essa propriedade como `5`, o <xref:System.Web.UI.WebControls.DataList> controle exibe seus itens em cinco colunas.  
  
> [!NOTE]
>  Se essa propriedade é definida como `0`, o <xref:System.Web.UI.WebControls.DataList> controle exibe seus itens em uma única linha ou coluna, com base no valor da <xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A> propriedade. Se o <xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A> está definida como `RepeatDirection.Horizontal`, os itens são exibidos em uma única linha. Se o <xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A> está definida como `RepeatDirection.Vertical`, os itens são exibidos em uma única coluna.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A> propriedade para especificar o número de colunas para exibir o <xref:System.Web.UI.WebControls.DataList> controle.  
  
> [!NOTE]
>  O exemplo de código a seguir usa o modelo de código de arquivo único e pode não funcionar corretamente se copiados diretamente para um arquivo code-behind. Este exemplo de código deve ser copiado para um arquivo de texto vazio que tem uma extensão. aspx. Para obter mais informações sobre o modelo de código de Web Forms, consulte [o modelo de código de página do ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListLayout/CS/datalistlayoutcs.aspx#1)]
 [!code-aspx-vb[DataListLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListLayout/VB/datalistlayoutvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">O número de colunas especificado é um valor negativo.</exception>
        <altmember cref="P:System.Web.UI.WebControls.DataList.RepeatDirection" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.RepeatLayout" />
      </Docs>
    </Member>
    <Member MemberName="RepeatDirection">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.RepeatDirection RepeatDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.RepeatDirection RepeatDirection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.RepeatDirection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RepeatDirection As RepeatDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::RepeatDirection RepeatDirection { System::Web::UI::WebControls::RepeatDirection get(); void set(System::Web::UI::WebControls::RepeatDirection value); };" />
      <MemberSignature Language="F#" Value="member this.RepeatDirection : System.Web.UI.WebControls.RepeatDirection with get, set" Usage="System.Web.UI.WebControls.DataList.RepeatDirection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.RepeatDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define se o controle <see cref="T:System.Web.UI.WebControls.DataList" /> é exibido horizontal ou verticalmente.</summary>
        <value>Um dos valores de <see cref="T:System.Web.UI.WebControls.RepeatDirection" />. O padrão é <see langword="Vertical" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A> propriedade para especificar a direção de exibição do <xref:System.Web.UI.WebControls.DataList> controle.  
  
> [!NOTE]
>  O número de colunas exibidas sempre é determinado pelo <xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A> propriedade.  
  
 Se essa propriedade é definida como `RepeatDirection.Vertical`, os itens na lista são exibidos nas colunas carregadas de cima para baixo, da esquerda para a direita, até que todos os itens são renderizados. Por exemplo, se o <xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A> está definida como `3`, os itens a <xref:System.Web.UI.WebControls.DataList> controle são exibidas em três colunas, como a tabela a seguir.  
  
||||  
|-|-|-|  
|1|4|7|  
|2|5|8|  
|3|6|9|  
  
 Se essa propriedade é definida como `RepeatDirection.Horizontal`, os itens na lista são exibidos em linhas carregadas da esquerda para a direita, em seguida, de cima para baixo, até que todos os itens são renderizados. Por exemplo, se o <xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A> está definida como `3`, os itens do <xref:System.Web.UI.WebControls.DataList> controle são exibidos em linhas de três itens cada, como na tabela a seguir.  
  
||||  
|-|-|-|  
|1|2|3|  
|4|5|6|  
|7|8|9|  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A> propriedade para especificar a direção na qual o <xref:System.Web.UI.WebControls.DataList> controle é exibido.  
  
> [!NOTE]
>  O exemplo de código a seguir usa o modelo de código de arquivo único e pode não funcionar corretamente se copiados diretamente para um arquivo code-behind. Este exemplo de código deve ser copiado para um arquivo de texto vazio que tem uma extensão. aspx. Para obter mais informações sobre o modelo de código de Web Forms, consulte [o modelo de código de página do ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListLayout/CS/datalistlayoutcs.aspx#1)]
 [!code-aspx-vb[DataListLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListLayout/VB/datalistlayoutvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">O valor especificado não é um dos valores <see cref="T:System.Web.UI.WebControls.RepeatDirection" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.RepeatDirection" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.RepeatColumns" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.RepeatLayout" />
      </Docs>
    </Member>
    <Member MemberName="RepeatLayout">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.RepeatLayout RepeatLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.RepeatLayout RepeatLayout" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.RepeatLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RepeatLayout As RepeatLayout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::RepeatLayout RepeatLayout { System::Web::UI::WebControls::RepeatLayout get(); void set(System::Web::UI::WebControls::RepeatLayout value); };" />
      <MemberSignature Language="F#" Value="member this.RepeatLayout : System.Web.UI.WebControls.RepeatLayout with get, set" Usage="System.Web.UI.WebControls.DataList.RepeatLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.RepeatLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define se o controle é exibido em um layout de fluxo ou tabela.</summary>
        <value>Um valor que especifica se o controle é exibido em um layout de fluxo ou tabela.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.DataList.RepeatLayout%2A> propriedade para especificar se os itens a <xref:System.Web.UI.WebControls.DataList> controle são exibidos em uma tabela. A única <xref:System.Web.UI.WebControls.RepeatLayout> valores com suporte a <xref:System.Web.UI.WebControls.DataList> controle são <xref:System.Web.UI.WebControls.RepeatLayout.Table> e <xref:System.Web.UI.WebControls.RepeatLayout.Flow>.  
  
 Se essa propriedade é definida como `RepeatLayout.Table`, os itens na lista são exibidos em uma tabela. Se essa propriedade é definida como `RepeatLayout.Flow`, os itens na lista são exibidos sem uma estrutura de tabela.  
  
 Quando o <xref:System.Web.UI.WebControls.DataList> controle é exibido em uma tabela, você pode usar o <xref:System.Web.UI.WebControls.DataList.GridLines%2A> propriedade para especificar um estilo de linha de grade.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.DataList.RepeatLayout%2A> propriedade para especificar o estilo de layout do <xref:System.Web.UI.WebControls.DataList> controle.  
  
> [!NOTE]
>  O exemplo de código a seguir usa o modelo de código de arquivo único e pode não funcionar corretamente se copiados diretamente para um arquivo code-behind. Este exemplo de código deve ser copiado para um arquivo de texto vazio que tem uma extensão. aspx. Para obter mais informações sobre o modelo de código de Web Forms, consulte [o modelo de código de página do ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListLayout/CS/datalistlayoutcs.aspx#1)]
 [!code-aspx-vb[DataListLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListLayout/VB/datalistlayoutvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">O valor especificado não é um dos valores <see cref="T:System.Web.UI.WebControls.RepeatLayout" /> com suporte.</exception>
        <altmember cref="T:System.Web.UI.WebControls.RepeatLayout" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.RepeatColumns" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.RepeatDirection" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.GridLines" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="dataList.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Salva as alterações no estado de exibição do controle desde a hora em que a página foi postada de volta no servidor.</summary>
        <returns>O objeto que contém as alterações ao estado de exibição do <see cref="T:System.Web.UI.WebControls.DataList" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.DataList.SaveViewState%2A> método é usado principalmente por desenvolvedores de controle.  
  
 Estado de exibição é o acúmulo dos valores de propriedades de um controle de servidor. Esses valores são colocados automaticamente no controle do servidor <xref:System.Web.UI.Control.ViewState%2A> propriedade, que é uma ocorrência da <xref:System.Web.UI.StateBag> classe. O <xref:System.Web.UI.Control.ViewState%2A> valor da propriedade é mantido em um objeto de cadeia de caracteres depois da fase de salvar estado do ciclo de vida do controle de servidor. Para obter mais informações, consulte [visão geral do ciclo de vida de página ASP.NET](http://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991).  
  
 Quando o estado de exibição for salvo, esse objeto de cadeia de caracteres é retornado ao cliente como uma variável que é armazenada em um elemento de entrada HTML oculto. Quando você criar controles de servidor personalizado, você pode melhorar a eficiência, substituindo o <xref:System.Web.UI.WebControls.DataList.SaveViewState%2A> método e modificando o <xref:System.Web.UI.Control.ViewState%2A> propriedade para o controle de servidor. Para obter mais informações, consulte [Developing Custom ASP.NET Server Controls](http://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef) e [visão geral do gerenciamento de estado ASP.NET](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataList.TrackViewState" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.LoadViewState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="SelectCommandName">
      <MemberSignature Language="C#" Value="public const string SelectCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SelectCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataList.SelectCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Const SelectCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ SelectCommandName;" />
      <MemberSignature Language="F#" Value="val mutable SelectCommandName : string" Usage="System.Web.UI.WebControls.DataList.SelectCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa o nome do comando <see langword="Select" />. Este campo é somente leitura.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.DataList.SelectCommandName> campo para representar o `Select` nome do comando.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataList.EditCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.DeleteCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.UpdateCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.CancelCommandName" />
      </Docs>
    </Member>
    <Member MemberName="SelectedIndex">
      <MemberSignature Language="C#" Value="public virtual int SelectedIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectedIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.SelectedIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SelectedIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int SelectedIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedIndex : int with get, set" Usage="System.Web.UI.WebControls.DataList.SelectedIndex" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IWizardSideBarListControl.SelectedIndex</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o índice do item selecionado no controle <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>O índice do item selecionado no controle <see cref="T:System.Web.UI.WebControls.DataList" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.DataList.SelectedIndex%2A> propriedade para especificar de forma programática o item selecionado no <xref:System.Web.UI.WebControls.DataList> controle. Você também pode usar essa propriedade para determinar o índice do item selecionado.  
  
> [!NOTE]
>  O <xref:System.Web.UI.WebControls.DataList.SelectedIndex%2A> propriedade é baseado em zero.  
  
 Para desmarcar um item, defina o <xref:System.Web.UI.WebControls.DataList.SelectedIndex%2A> propriedade `-1`.  
  
 O <xref:System.Web.UI.WebControls.DataList.SelectedIndex%2A> propriedade é armazenada no estado do controle.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.DataList.SelectedIndex%2A> propriedade para especificar o item selecionado no <xref:System.Web.UI.WebControls.DataList> controle.  
  
> [!NOTE]
>  O exemplo de código a seguir usa o modelo de código de arquivo único e pode não funcionar corretamente se copiados diretamente para um arquivo code-behind. Este exemplo de código deve ser copiado para um arquivo de texto vazio que tem uma extensão. aspx. Para obter mais informações sobre o modelo de código de Web Forms, consulte [o modelo de código de página do ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCommand/CS/datalistitemcommandcs.aspx#1)]
 [!code-aspx-vb[DataListItemCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCommand/VB/datalistitemcommandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">O valor especificado é menor que <see langword="-1" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItem" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItemTemplate" />
      </Docs>
    </Member>
    <Member MemberName="SelectedItem">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataListItem SelectedItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataListItem SelectedItem" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.SelectedItem" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SelectedItem As DataListItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::DataListItem ^ SelectedItem { System::Web::UI::WebControls::DataListItem ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedItem : System.Web.UI.WebControls.DataListItem" Usage="System.Web.UI.WebControls.DataList.SelectedItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o item selecionado no controle <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>Um <see cref="T:System.Web.UI.WebControls.DataListItem" /> que representa o item selecionado no controle <see cref="T:System.Web.UI.WebControls.DataList" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.DataList.SelectedItem%2A> propriedade para obter um <xref:System.Web.UI.WebControls.DataListItem> objeto que representa o item selecionado no <xref:System.Web.UI.WebControls.DataList> controle. Esse objeto, em seguida, pode ser usado para acessar as propriedades do item selecionado.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.DataList.SelectedItem%2A> propriedade para exibir o conteúdo do item selecionado no <xref:System.Web.UI.WebControls.DataList> controle.  
  
> [!NOTE]
>  O exemplo de código a seguir usa o modelo de código de arquivo único e pode não funcionar corretamente se copiados diretamente para um arquivo code-behind. Este exemplo de código deve ser copiado para um arquivo de texto vazio que tem uma extensão. aspx. Para obter mais informações sobre o modelo de código de Web Forms, consulte [o modelo de código de página do ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[Classic DataList.SelectedItem Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataList.SelectedItem Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataList.SelectedItem Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataList.SelectedItem Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListItem" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedIndex" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItemTemplate" />
      </Docs>
    </Member>
    <Member MemberName="SelectedItemStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle SelectedItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle SelectedItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.SelectedItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SelectedItemStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ SelectedItemStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedItemStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DataList.SelectedItemStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém as propriedades de estilo do item selecionado no controle <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>Um <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> que contém as propriedades de estilo para o item selecionado no objeto de <see cref="T:System.Web.UI.WebControls.DataList" /> controle. O valor padrão é um objeto <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> vazio.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use essa propriedade para fornecer um estilo personalizado para o item selecionado no <xref:System.Web.UI.WebControls.DataList> controle. Atributos de estilo comuns que podem ser ajustados incluem cor de primeiro plano, cor de plano de fundo, fonte e alinhamento do conteúdo dentro da célula. Fornecer um estilo diferente aprimora a aparência do <xref:System.Web.UI.WebControls.DataList> controle.  
  
 Propriedades de estilo do item de <xref:System.Web.UI.WebControls.DataList> controle são herdadas de propriedade de estilo de um item para outro através de uma hierarquia. Propriedades de estilo do item definidas como inferiores na hierarquia são herdadas por propriedades de estilo do item superiores na hierarquia. Por exemplo, se você especificar uma fonte em vermelho para a <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> propriedade, todas as outras propriedades de estilo do item no <xref:System.Web.UI.WebControls.DataList> controle também terá uma fonte vermelha. Isso permite que você forneça uma aparência comum para o controle definindo uma propriedade de estilo do item único. Você pode substituir as configurações de estilo herdado para uma propriedade de estilo do item que é superior na hierarquia, definindo suas propriedades de estilo. Por exemplo, você pode especificar uma fonte azul para o <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> substituindo a fonte vermelha especificada na propriedade de <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> propriedade. A tabela a seguir lista a ordem da hierarquia do mais alto ao mais baixo.  
  
|Precedência|Propriedade de estilo|  
|----------------|--------------------|  
|1|<xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>|  
|2|<xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>|  
|3|<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>|  
|4|<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>|  
|5|<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|  
  
 Para especificar um estilo personalizado para o item selecionado, coloque o `<SelectedItemStyle>` marcas entre as marcas de abertura e fechamento do <xref:System.Web.UI.WebControls.DataList> controle. Em seguida, você pode listar os atributos de estilo de abertura `<SelectedItemStyle>` marca.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A> propriedade para especificar uma cor de plano de fundo personalizado para o item selecionado no <xref:System.Web.UI.WebControls.DataList> controle.  
  
> [!NOTE]
>  O exemplo de código a seguir usa o modelo de código de arquivo único e pode não funcionar corretamente se copiados diretamente para um arquivo code-behind. Este exemplo de código deve ser copiado para um arquivo de texto vazio que tem uma extensão. aspx. Para obter mais informações sobre o modelo de código de Web Forms, consulte [o modelo de código de página do ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCommand/CS/datalistitemcommandcs.aspx#1)]
 [!code-aspx-vb[DataListItemCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCommand/VB/datalistitemcommandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedIndex" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItem" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItemTemplate" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="SelectedItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate SelectedItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate SelectedItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.SelectedItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SelectedItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ SelectedItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.DataList.SelectedItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DataListItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o modelo para o item selecionado no controle <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>Um <see cref="T:System.Web.UI.ITemplate" /> que contém o modelo para o item selecionado no controle <see cref="T:System.Web.UI.WebControls.DataList" />. O valor padrão é <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.DataList.SelectedItemTemplate%2A> propriedade para controlar o conteúdo do item selecionado. A aparência do item selecionado é controlada pelo <xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A> propriedade.  
  
 Para especificar um modelo para o item selecionado, coloque o `<SelectedItemTemplate>` marcas entre as marcas de abertura e fechamento do <xref:System.Web.UI.WebControls.DataList> controle. Em seguida, você pode listar o conteúdo do modelo entre a abertura e fechamento `<SelectedItemTemplate>` marcas.  
  
> [!CAUTION]
>  Este controle pode ser usado para exibir a entrada do usuário, que pode incluir um script de cliente mal-intencionado. Verifique todas as informações que são enviadas de um cliente para o script executável, instruções SQL ou outro código antes de exibi-lo em seu aplicativo. Você pode usar controles de validação para verificar se a entrada do usuário antes de exibir o texto de entrada em um controle. O ASP.NET fornece um recurso de validação de solicitação de entrada para o bloco de script e HTML na entrada do usuário. Para obter mais informações, consulte [protegendo controles padrão](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [como: proteger contra scripts maliciosos em um aplicativo da Web aplicando codificação HTML a cadeias de caracteres](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), e [Validando a entrada de usuário em Páginas da Web do ASP.NET](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.DataList.SelectedItemTemplate%2A> propriedade para controlar o conteúdo do item selecionado no <xref:System.Web.UI.WebControls.DataList> controle.  
  
> [!NOTE]
>  O exemplo de código a seguir usa o modelo de código de arquivo único e pode não funcionar corretamente se copiados diretamente para um arquivo code-behind. Este exemplo de código deve ser copiado para um arquivo de texto vazio que tem uma extensão. aspx. Para obter mais informações sobre o modelo de código de Web Forms, consulte [o modelo de código de página do ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCommand/CS/datalistitemcommandcs.aspx#1)]
 [!code-aspx-vb[DataListItemCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCommand/VB/datalistitemcommandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedIndex" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItem" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItemStyle" />
      </Docs>
    </Member>
    <Member MemberName="SelectedValue">
      <MemberSignature Language="C#" Value="public object SelectedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SelectedValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.SelectedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SelectedValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedValue : obj" Usage="System.Web.UI.WebControls.DataList.SelectedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o valor do campo de chave do item de lista de dados selecionado.</summary>
        <value>O valor do campo de chave para o item de lista de dados selecionada. O padrão é <see langword="null" />, que indica que nenhum item de lista de dados está selecionado no momento.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">A propriedade <see cref="P:System.Web.UI.WebControls.BaseDataList.DataKeyField" /> não foi definida.</exception>
        <altmember cref="P:System.Web.UI.WebControls.BaseDataList.DataKeyField" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedIndex" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItem" />
      </Docs>
    </Member>
    <Member MemberName="SeparatorStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle SeparatorStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle SeparatorStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.SeparatorStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SeparatorStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ SeparatorStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SeparatorStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DataList.SeparatorStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém as propriedades de estilo do separador entre cada item no controle <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>Um <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> que contém as propriedades de estilo do separador entre cada item no objeto de <see cref="T:System.Web.UI.WebControls.DataList" /> controle. O valor padrão é um objeto <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> vazio.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.DataList.SeparatorStyle%2A> propriedade para fornecer um estilo personalizado para o separador entre cada item de <xref:System.Web.UI.WebControls.DataList> controle. O separador permite que você coloque um elemento com conteúdo personalizado entre os itens a <xref:System.Web.UI.WebControls.DataList> controle. Atributos de estilo comuns que podem ser ajustados incluem cor de primeiro plano, cor de plano de fundo, fonte e alinhamento do conteúdo dentro da célula. Fornecer um estilo diferente aprimora a aparência do <xref:System.Web.UI.WebControls.DataList> controle.  
  
 Para especificar um estilo personalizado para o separador, coloque o `<SeparatorStyle>` marcas entre as marcas de abertura e fechamento do <xref:System.Web.UI.WebControls.DataList> controle. Em seguida, você pode listar os atributos de estilo de abertura `<SeparatorStyle>` marca.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.DataList.SeparatorStyle%2A> propriedade para especificar uma cor de plano de fundo personalizado para o separador entre cada item de <xref:System.Web.UI.WebControls.DataList> controle.  
  
> [!NOTE]
>  O exemplo de código a seguir usa o modelo de código de arquivo único e pode não funcionar corretamente se copiados diretamente para um arquivo code-behind. Este exemplo de código deve ser copiado para um arquivo de texto vazio que tem uma extensão. aspx. Para obter mais informações sobre o modelo de código de Web Forms, consulte [o modelo de código de página do ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListSeparatorStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListSeparatorStyle/CS/datalistseparatorstylecs.aspx#1)]
 [!code-aspx-vb[DataListSeparatorStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListSeparatorStyle/VB/datalistseparatorstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.SeparatorTemplate" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="SeparatorTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate SeparatorTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate SeparatorTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.SeparatorTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SeparatorTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ SeparatorTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SeparatorTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.DataList.SeparatorTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DataListItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o modelo para o separador entre os itens do controle <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>Um <see cref="T:System.Web.UI.WebControls.DataList" /> que contém o modelo para o separador entre os itens do controle <see cref="T:System.Web.UI.ITemplate" />. O valor padrão é <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.DataList.SeparatorTemplate%2A> propriedade para controlar o conteúdo do separador entre os itens do <xref:System.Web.UI.WebControls.DataList> controle. O separador permite que você coloque um elemento com conteúdo personalizado entre os itens a <xref:System.Web.UI.WebControls.DataList> controle. A aparência do separador entre os itens do <xref:System.Web.UI.WebControls.DataList> controle é controlado pelo <xref:System.Web.UI.WebControls.DataList.SeparatorStyle%2A> propriedade.  
  
 Para especificar um modelo para o separador, coloque o `<SeparatorTemplate>` marcas entre as marcas de abertura e fechamento do <xref:System.Web.UI.WebControls.DataList> controle. Em seguida, você pode listar o conteúdo do modelo entre a abertura e fechamento `<SeparatorTemplate>` marcas.  
  
> [!CAUTION]
>  Este controle pode ser usado para exibir a entrada do usuário, que pode incluir um script de cliente mal-intencionado. Verifique todas as informações que são enviadas de um cliente para o script executável, instruções SQL ou outro código antes de exibi-lo em seu aplicativo. Você pode usar controles de validação para verificar se a entrada do usuário antes de exibir o texto de entrada em um controle. O ASP.NET fornece um recurso de validação de solicitação de entrada para o bloco de script e HTML na entrada do usuário. Para obter mais informações, consulte [protegendo controles padrão](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [como: proteger contra scripts maliciosos em um aplicativo da Web aplicando codificação HTML a cadeias de caracteres](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), e [Validando a entrada de usuário em Páginas da Web do ASP.NET](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.DataList.SeparatorTemplate%2A> propriedade para controlar o conteúdo do separador entre cada item de <xref:System.Web.UI.WebControls.DataList> controle.  
  
> [!NOTE]
>  O exemplo de código a seguir usa o modelo de código de arquivo único e pode não funcionar corretamente se copiados diretamente para um arquivo code-behind. Este exemplo de código deve ser copiado para um arquivo de texto vazio que tem uma extensão. aspx. Para obter mais informações sobre o modelo de código de Web Forms, consulte [o modelo de código de página do ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListSeparatorStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListSeparatorStyle/CS/datalistseparatorstylecs.aspx#1)]
 [!code-aspx-vb[DataListSeparatorStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListSeparatorStyle/VB/datalistseparatorstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SeparatorStyle" />
      </Docs>
    </Member>
    <Member MemberName="ShowFooter">
      <MemberSignature Language="C#" Value="public virtual bool ShowFooter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowFooter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.ShowFooter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ShowFooter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ShowFooter { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowFooter : bool with get, set" Usage="System.Web.UI.WebControls.DataList.ShowFooter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se a seção de rodapé é exibida no controle <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>
          <see langword="true" /> se a seção de rodapé for exibida; caso contrário, <see langword="false" />. O valor padrão é <see langword="true" />, no entanto, essa propriedade é examinada apenas quando a propriedade <see cref="P:System.Web.UI.WebControls.DataList.FooterTemplate" /> não é <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.DataList.ShowFooter%2A> propriedade para especificar se a seção de rodapé é exibida no <xref:System.Web.UI.WebControls.DataList> controle.  
  
 Você pode controlar a aparência da seção de rodapé definindo o <xref:System.Web.UI.WebControls.DataList.FooterStyle%2A> propriedade. O conteúdo da seção de rodapé é controlado pelo <xref:System.Web.UI.WebControls.DataList.FooterTemplate%2A> propriedade.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.DataList.ShowFooter%2A> propriedade para exibir a seção rodapé o <xref:System.Web.UI.WebControls.DataList> controle.  
  
> [!NOTE]
>  O exemplo de código a seguir usa o modelo de código de arquivo único e pode não funcionar corretamente se copiados diretamente para um arquivo code-behind. Este exemplo de código deve ser copiado para um arquivo de texto vazio que tem uma extensão. aspx. Para obter mais informações sobre o modelo de código de Web Forms, consulte [o modelo de código de página do ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListShowHeader#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListShowHeader/CS/datalistshowheadercs.aspx#1)]
 [!code-aspx-vb[DataListShowHeader#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListShowHeader/VB/datalistshowheadervb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.FooterTemplate" />
      </Docs>
    </Member>
    <Member MemberName="ShowHeader">
      <MemberSignature Language="C#" Value="public virtual bool ShowHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowHeader" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.ShowHeader" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ShowHeader As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ShowHeader { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowHeader : bool with get, set" Usage="System.Web.UI.WebControls.DataList.ShowHeader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se a seção de cabeçalho é exibida no controle <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>
          <see langword="true" /> se o cabeçalho for exibido; caso contrário, <see langword="false" />. O valor padrão é <see langword="true" />, no entanto, essa propriedade é examinada apenas quando a propriedade <see cref="P:System.Web.UI.WebControls.DataList.HeaderTemplate" /> não é <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.DataList.ShowHeader%2A> propriedade para especificar se a seção de cabeçalho é exibida no <xref:System.Web.UI.WebControls.DataList> controle.  
  
 Você pode controlar a aparência da seção de cabeçalho, definindo o <xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> propriedade. O conteúdo da seção de cabeçalho é controlado pelo <xref:System.Web.UI.WebControls.DataList.HeaderTemplate%2A> propriedade.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.WebControls.DataList.ShowHeader%2A> propriedade para exibir a seção de cabeçalho de <xref:System.Web.UI.WebControls.DataList> controle.  
  
> [!NOTE]
>  O exemplo de código a seguir usa o modelo de código de arquivo único e pode não funcionar corretamente se copiados diretamente para um arquivo code-behind. Este exemplo de código deve ser copiado para um arquivo de texto vazio que tem uma extensão. aspx. Para obter mais informações sobre o modelo de código de Web Forms, consulte [o modelo de código de página do ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListShowHeader#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListShowHeader/CS/datalistshowheadercs.aspx#1)]
 [!code-aspx-vb[DataListShowHeader#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListShowHeader/VB/datalistshowheadervb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.HeaderTemplate" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.Style IRepeatInfoUser.GetItemStyle (System.Web.UI.WebControls.ListItemType itemType, int repeatIndex);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Web.UI.WebControls.Style System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle(valuetype System.Web.UI.WebControls.ListItemType itemType, int32 repeatIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#GetItemStyle(System.Web.UI.WebControls.ListItemType,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Function GetItemStyle (itemType As ListItemType, repeatIndex As Integer) As Style Implements IRepeatInfoUser.GetItemStyle" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Web::UI::WebControls::Style ^ System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle(System::Web::UI::WebControls::ListItemType itemType, int repeatIndex) = System::Web::UI::WebControls::IRepeatInfoUser::GetItemStyle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle(System.Web.UI.WebControls.ListItemType,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.Web.UI.WebControls.ListItemType" />
        <Parameter Name="repeatIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="itemType">Um dos valores de enumeração <see cref="T:System.Web.UI.WebControls.ListItemType" />.</param>
        <param name="repeatIndex">O índice do item no controle de lista.</param>
        <summary>Para obter uma descrição desse membro, consulte <see cref="M:System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle(System.Web.UI.WebControls.ListItemType,System.Int32)" />.</summary>
        <returns>Um <see cref="T:System.Web.UI.WebControls.Style" /> que representa o estilo do tipo de item especificado no índice especificado do controle de lista.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este membro é uma implementação do membro de interface explícita. Ele só pode ser usado quando a instância de <xref:System.Web.UI.WebControls.DataList> é convertida em uma interface de <xref:System.Web.UI.WebControls.IRepeatInfoUser>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IRepeatInfoUser.HasFooter">
      <MemberSignature Language="C#" Value="bool System.Web.UI.WebControls.IRepeatInfoUser.HasFooter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.WebControls.IRepeatInfoUser.HasFooter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasFooter" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property HasFooter As Boolean Implements IRepeatInfoUser.HasFooter" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Web.UI.WebControls.IRepeatInfoUser.HasFooter { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.DataList.System.Web.UI.WebControls.IRepeatInfoUser.HasFooter" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IRepeatInfoUser.HasFooter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Para obter uma descrição desse membro, consulte <see cref="P:System.Web.UI.WebControls.IRepeatInfoUser.HasFooter" />.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este membro é uma implementação do membro de interface explícita. Ele só pode ser usado quando a instância de <xref:System.Web.UI.WebControls.DataList> é convertida em uma interface de <xref:System.Web.UI.WebControls.IRepeatInfoUser>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IRepeatInfoUser.HasHeader">
      <MemberSignature Language="C#" Value="bool System.Web.UI.WebControls.IRepeatInfoUser.HasHeader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.WebControls.IRepeatInfoUser.HasHeader" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasHeader" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property HasHeader As Boolean Implements IRepeatInfoUser.HasHeader" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Web.UI.WebControls.IRepeatInfoUser.HasHeader { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.DataList.System.Web.UI.WebControls.IRepeatInfoUser.HasHeader" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IRepeatInfoUser.HasHeader</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Para obter uma descrição desse membro, consulte <see cref="P:System.Web.UI.WebControls.IRepeatInfoUser.HasHeader" />.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este membro é uma implementação do membro de interface explícita. Ele pode ser usado somente quando o <xref:System.Web.UI.WebControls.DataList> instância é converter um <xref:System.Web.UI.WebControls.IRepeatInfoUser> interface.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators">
      <MemberSignature Language="C#" Value="bool System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasSeparators" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property HasSeparators As Boolean Implements IRepeatInfoUser.HasSeparators" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.DataList.System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Para obter uma descrição desse membro, consulte <see cref="P:System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators" />.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este membro é uma implementação do membro de interface explícita. Ele só pode ser usado quando a instância de <xref:System.Web.UI.WebControls.DataList> é convertida em uma interface de <xref:System.Web.UI.WebControls.IRepeatInfoUser>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IRepeatInfoUser.RenderItem">
      <MemberSignature Language="C#" Value="void IRepeatInfoUser.RenderItem (System.Web.UI.WebControls.ListItemType itemType, int repeatIndex, System.Web.UI.WebControls.RepeatInfo repeatInfo, System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.WebControls.IRepeatInfoUser.RenderItem(valuetype System.Web.UI.WebControls.ListItemType itemType, int32 repeatIndex, class System.Web.UI.WebControls.RepeatInfo repeatInfo, class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#RenderItem(System.Web.UI.WebControls.ListItemType,System.Int32,System.Web.UI.WebControls.RepeatInfo,System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.WebControls.IRepeatInfoUser.RenderItem(System::Web::UI::WebControls::ListItemType itemType, int repeatIndex, System::Web::UI::WebControls::RepeatInfo ^ repeatInfo, System::Web::UI::HtmlTextWriter ^ writer) = System::Web::UI::WebControls::IRepeatInfoUser::RenderItem;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.WebControls.IRepeatInfoUser.RenderItem(System.Web.UI.WebControls.ListItemType,System.Int32,System.Web.UI.WebControls.RepeatInfo,System.Web.UI.HtmlTextWriter)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.Web.UI.WebControls.ListItemType" />
        <Parameter Name="repeatIndex" Type="System.Int32" />
        <Parameter Name="repeatInfo" Type="System.Web.UI.WebControls.RepeatInfo" />
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="itemType">O tipo do item.</param>
        <param name="repeatIndex">O índice do item.</param>
        <param name="repeatInfo">Informações que são usadas para renderizar o item.</param>
        <param name="writer">O objeto <see cref="T:System.Web.UI.HtmlTextWriter" /> a ser usado para renderizar o item.</param>
        <summary>Para obter uma descrição desse membro, consulte <see cref="M:System.Web.UI.WebControls.IRepeatInfoUser.RenderItem(System.Web.UI.WebControls.ListItemType,System.Int32,System.Web.UI.WebControls.RepeatInfo,System.Web.UI.HtmlTextWriter)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este membro é uma implementação do membro de interface explícita. Ele só pode ser usado quando a instância de <xref:System.Web.UI.WebControls.DataList> é convertida em uma interface de <xref:System.Web.UI.WebControls.IRepeatInfoUser>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount">
      <MemberSignature Language="C#" Value="int System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#RepeatedItemCount" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property RepeatedItemCount As Integer Implements IRepeatInfoUser.RepeatedItemCount" />
      <MemberSignature Language="C++ CLI" Value="property int System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.DataList.System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Para obter uma descrição desse membro, consulte <see cref="P:System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount" />.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este membro é uma implementação do membro de interface explícita. Ele só pode ser usado quando a instância de <xref:System.Web.UI.WebControls.DataList> é convertida em uma interface de <xref:System.Web.UI.WebControls.IRepeatInfoUser>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); };" />
      <MemberSignature Language="F#" Value="member this.TagKey : System.Web.UI.HtmlTextWriterTag" Usage="System.Web.UI.WebControls.DataList.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a marca HTML usada para renderizar o controle <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>Retorna o <see cref="F:System.Web.UI.HtmlTextWriterTag.Table" /> marca se a <see cref="P:System.Web.UI.WebControls.DataList.RepeatLayout" /> é definido como <see cref="F:System.Web.UI.WebControls.RepeatLayout.Table" />; caso contrário, retorna o <see cref="F:System.Web.UI.HtmlTextWriterTag.Span" /> marca. O padrão é <see cref="F:System.Web.UI.WebControls.RepeatLayout.Table" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.DataList.TagKey%2A> propriedade para determinar a <xref:System.Web.UI.HtmlTextWriterTag> valor que está associado com um <xref:System.Web.UI.WebControls.DataList> controle. O <xref:System.Web.UI.WebControls.DataList.TagKey%2A> propriedade é usada principalmente por desenvolvedores de controle.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="dataList.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Controla as alterações de estado de exibição no controle <see cref="T:System.Web.UI.WebControls.DataList" />, de modo que elas possam ser armazenadas na propriedade <see cref="P:System.Web.UI.Control.ViewState" /> do controle.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.DataList.TrackViewState%2A> método é substituído para marcar o ponto de partida no qual começar a rastreamento e salvar alterações para o controle como parte do estado de exibição do controle.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataListCommandEventHandler UpdateCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataListCommandEventHandler UpdateCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataList.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UpdateCommand As DataListCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataListCommandEventHandler ^ UpdateCommand;" />
      <MemberSignature Language="F#" Value="member this.UpdateCommand : System.Web.UI.WebControls.DataListCommandEventHandler " Usage="member this.UpdateCommand : System.Web.UI.WebControls.DataListCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando o botão <see langword="Update" /> recebe um clique para um item no controle <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.DataList.UpdateCommand> é gerado quando o `Update` botão para um item é clicado.  
  
 Um manipulador típico para o <xref:System.Web.UI.WebControls.DataList.UpdateCommand> evento atualiza os dados, conjuntos do <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> propriedade `-1` (para desmarcar o item) e, em seguida, reconecta os dados para o <xref:System.Web.UI.WebControls.DataList> controle.  
  
> [!CAUTION]
>  Este controle pode ser usado para exibir a entrada do usuário, que pode incluir um script de cliente mal-intencionado. Verifique todas as informações que são enviadas de um cliente para o script executável, instruções SQL ou outro código antes de exibi-lo em seu aplicativo. Você pode usar controles de validação para verificar se a entrada do usuário antes de exibir o texto de entrada em um controle. O ASP.NET fornece um recurso de validação de solicitação de entrada para o bloco de script e HTML na entrada do usuário. Para obter mais informações, consulte [protegendo controles padrão](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [como: proteger contra scripts maliciosos em um aplicativo da Web aplicando codificação HTML a cadeias de caracteres](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), e [Validando a entrada de usuário em Páginas da Web do ASP.NET](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [como: consumir eventos em um aplicativo Web Forms](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como especificar e codificar um manipulador para o <xref:System.Web.UI.WebControls.DataList.UpdateCommand> evento. Ele permite que você atualize o item selecionado no <xref:System.Web.UI.WebControls.DataList> controle com os novos valores inseridos pelo usuário quando o `Update` botão é clicado.  
  
> [!NOTE]
>  O exemplo de código a seguir usa o modelo de código de arquivo único e pode não funcionar corretamente se copiados diretamente para um arquivo code-behind. Este exemplo de código deve ser copiado para um arquivo de texto vazio que tem uma extensão. aspx. Para obter mais informações sobre o modelo de código de Web Forms, consulte [o modelo de código de página do ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.CancelCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.DeleteCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.EditCommand" />
      </Docs>
    </Member>
    <Member MemberName="UpdateCommandName">
      <MemberSignature Language="C#" Value="public const string UpdateCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string UpdateCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataList.UpdateCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Const UpdateCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ UpdateCommandName;" />
      <MemberSignature Language="F#" Value="val mutable UpdateCommandName : string" Usage="System.Web.UI.WebControls.DataList.UpdateCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa o nome do comando <see langword="Update" />. Este campo é somente leitura.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.WebControls.DataList.UpdateCommandName> campo para representar o `Update` nome do comando.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataList.SelectCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.EditCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.DeleteCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.CancelCommandName" />
      </Docs>
    </Member>
  </Members>
</Type>