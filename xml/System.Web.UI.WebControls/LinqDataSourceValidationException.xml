<Type Name="LinqDataSourceValidationException" FullName="System.Web.UI.WebControls.LinqDataSourceValidationException">
  <TypeSignature Language="C#" Value="public class LinqDataSourceValidationException : Exception, System.Web.DynamicData.IDynamicValidatorException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit LinqDataSourceValidationException extends System.Exception implements class System.Runtime.Serialization.ISerializable, class System.Web.DynamicData.IDynamicValidatorException" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.LinqDataSourceValidationException" />
  <TypeSignature Language="VB.NET" Value="Public Class LinqDataSourceValidationException&#xA;Inherits Exception&#xA;Implements IDynamicValidatorException" />
  <TypeSignature Language="C++ CLI" Value="public ref class LinqDataSourceValidationException : Exception, System::Web::DynamicData::IDynamicValidatorException" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.DynamicData.IDynamicValidatorException</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="7a262-101">Descreve uma exceção que ocorreu durante a validação de valores novos ou modificados antes de os valores serem inseridos, atualizados ou excluídos por um controle <see cref="T:System.Web.UI.WebControls.LinqDataSource" />.</span><span class="sxs-lookup"><span data-stu-id="7a262-101">Describes an exception that occurred during validation of new or modified values before values are inserted, updated, or deleted by a <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a262-102">O <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> classe contém exceções de setter de conversão e a propriedade de tipo.</span><span class="sxs-lookup"><span data-stu-id="7a262-102">The <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> class contains type conversion and property setter exceptions.</span></span> <span data-ttu-id="7a262-103">Todas as exceções geradas durante a validação estão contidas no <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> coleção.</span><span class="sxs-lookup"><span data-stu-id="7a262-103">All of the exceptions that are thrown during validation are contained in the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> collection.</span></span> <span data-ttu-id="7a262-104">Você pode recuperar cada exceção de validação pela iteração a <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> coleção.</span><span class="sxs-lookup"><span data-stu-id="7a262-104">You can retrieve each validation exception by iterating through the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> collection.</span></span>  
  
 <span data-ttu-id="7a262-105">Você normalmente manipula exceções a <xref:System.Web.UI.WebControls.LinqDataSource.Updating>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleting>, e <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> eventos.</span><span class="sxs-lookup"><span data-stu-id="7a262-105">You typically handle exceptions in the <xref:System.Web.UI.WebControls.LinqDataSource.Updating>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleting>, and <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> events.</span></span> <span data-ttu-id="7a262-106">Se uma exceção de validação for lançada, o `Exception` propriedade o <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs>, <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs>, ou <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> objeto contém um <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> objeto.</span><span class="sxs-lookup"><span data-stu-id="7a262-106">If a validation exception is thrown, the `Exception` property of the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs>, <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs>, or <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> object contains a <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> object.</span></span> <span data-ttu-id="7a262-107">Se nenhuma exceção for lançada, o `Exception` propriedade contém `null`.</span><span class="sxs-lookup"><span data-stu-id="7a262-107">If no exception is thrown, the `Exception` property contains `null`.</span></span>  
  
 <span data-ttu-id="7a262-108">Para lidar com exceções de validação, criar um manipulador para o <xref:System.Web.UI.WebControls.LinqDataSource.Updating>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleting>, ou <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> eventos.</span><span class="sxs-lookup"><span data-stu-id="7a262-108">To handle validation exceptions, create a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleting>, or <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event.</span></span> <span data-ttu-id="7a262-109">No manipulador de eventos, verifique se o `Exception` propriedade da classe de argumento de evento contém um valor diferente de `null`.</span><span class="sxs-lookup"><span data-stu-id="7a262-109">In the event handler, check whether the `Exception` property of the event argument class contains a value other than `null`.</span></span> <span data-ttu-id="7a262-110">Se o `Exception` propriedade não for nula, uma ou mais exceções de validação foram lançadas e você pode recuperar cada exceção de validação no <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="7a262-110">If the `Exception` property is not null, one or more validation exceptions were thrown and you can retrieve each validation exception in the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> property.</span></span>  
  
 <span data-ttu-id="7a262-111">Uma exceção de validação pode ocorrer se um valor não corresponde ao tipo da propriedade.</span><span class="sxs-lookup"><span data-stu-id="7a262-111">A validation exception can occur if a value does not match the type of the property.</span></span> <span data-ttu-id="7a262-112">Por exemplo, a tentativa de atualizar uma propriedade de inteiro usando caracteres não numéricos faz com que uma exceção de validação.</span><span class="sxs-lookup"><span data-stu-id="7a262-112">For example, trying to update an integer property by using non-numeric characters causes a validation exception.</span></span> <span data-ttu-id="7a262-113">Uma classe LINQ to SQL também pode conter critérios de validação personalizado que certifique-se de que a propriedade contém um valor que está dentro de um padrão ou intervalo esperado.</span><span class="sxs-lookup"><span data-stu-id="7a262-113">A LINQ to SQL class can also contain customized validation criteria that make sure that the property contains a value that is within an expected range or pattern.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a262-114">O exemplo a seguir mostra um manipulador de eventos para o <xref:System.Web.UI.WebControls.LinqDataSource.Updating> evento.</span><span class="sxs-lookup"><span data-stu-id="7a262-114">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event.</span></span> <span data-ttu-id="7a262-115">Exibe qualquer mensagem de exceção de validação usando um <xref:System.Web.UI.WebControls.Label> controle.</span><span class="sxs-lookup"><span data-stu-id="7a262-115">It displays any validation exception messages by using a <xref:System.Web.UI.WebControls.Label> control.</span></span>  
  
```vb  
Protected Sub LinqDataSource_Updating(ByVal sender As Object, _  
        ByVal e As LinqDataSourceUpdateEventArgs)  
    If (e.Exception IsNot Nothing) Then  
        For Each innerException As KeyValuePair(Of String, Exception) _  
               In e.Exception.InnerExceptions  
            Label1.Text &= innerException.Key & ": " & _  
                innerException.Value.Message & "<br />"  
        Next  
        e.ExceptionHandled = True  
    End If  
End Sub  
```  
  
```csharp  
protected void LinqDataSource_Updating(object sender,   
        LinqDataSourceUpdateEventArgs e)  
{  
    if (e.Exception != null)  
    {  
        foreach (KeyValuePair<string, Exception> innerException in   
             e.Exception.InnerExceptions)  
        {  
        Label1.Text += innerException.Key + ": " +   
            innerException.Value.Message + "<br />";  
        }  
        e.ExceptionHandled = true;  
    }  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7a262-116">Inicializa uma nova instância da classe <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" />.</span><span class="sxs-lookup"><span data-stu-id="7a262-116">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceValidationException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceValidationException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7a262-117">Inicializa uma nova instância da classe <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> com uma mensagem fornecida pelo sistema que descreve o erro.</span><span class="sxs-lookup"><span data-stu-id="7a262-117">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> class with a system-supplied message that describes the error.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a262-118">A mensagem fornecida pelo sistema que descreve o erro leva em conta a cultura atual do sistema.</span><span class="sxs-lookup"><span data-stu-id="7a262-118">The system-supplied message that describes the error takes into account the current system culture.</span></span>  
  
 <span data-ttu-id="7a262-119">A tabela a seguir mostra os valores de propriedade inicial para uma instância de <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> classe.</span><span class="sxs-lookup"><span data-stu-id="7a262-119">The following table shows the initial property values for an instance of the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> class.</span></span>  
  
|<span data-ttu-id="7a262-120">Propriedade</span><span class="sxs-lookup"><span data-stu-id="7a262-120">Property</span></span>|<span data-ttu-id="7a262-121">Valor</span><span class="sxs-lookup"><span data-stu-id="7a262-121">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="7a262-122">`null`.</span><span class="sxs-lookup"><span data-stu-id="7a262-122">`null`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="7a262-123">Uma descrição localizada fornecida pelo sistema.</span><span class="sxs-lookup"><span data-stu-id="7a262-123">A system-supplied localized description.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceValidationException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceValidationException(System::String ^ message);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="7a262-124">A mensagem que descreve o erro.</span><span class="sxs-lookup"><span data-stu-id="7a262-124">The message that describes the error.</span></span></param>
        <summary><span data-ttu-id="7a262-125">Inicializa uma nova instância da classe <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> com uma mensagem especificada que descreve o erro.</span><span class="sxs-lookup"><span data-stu-id="7a262-125">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> class with a specified message that describes the error.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a262-126">A tabela a seguir mostra os valores de propriedade inicial para uma instância de <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> classe.</span><span class="sxs-lookup"><span data-stu-id="7a262-126">The following table shows the initial property values for an instance of the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> class.</span></span>  
  
|<span data-ttu-id="7a262-127">Propriedade</span><span class="sxs-lookup"><span data-stu-id="7a262-127">Property</span></span>|<span data-ttu-id="7a262-128">Valor</span><span class="sxs-lookup"><span data-stu-id="7a262-128">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="7a262-129">`null`.</span><span class="sxs-lookup"><span data-stu-id="7a262-129">`null`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="7a262-130">A cadeia de caracteres da mensagem de erro especificada em `message`.</span><span class="sxs-lookup"><span data-stu-id="7a262-130">The error message string specified in `message`.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected LinqDataSourceValidationException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; LinqDataSourceValidationException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="7a262-131">O objeto que mantém os dados de objeto serializados.</span><span class="sxs-lookup"><span data-stu-id="7a262-131">The object that holds the serialized object data.</span></span></param>
        <param name="context"><span data-ttu-id="7a262-132">Informações de contexto sobre a origem ou o destino.</span><span class="sxs-lookup"><span data-stu-id="7a262-132">Context information about the source or destination.</span></span></param>
        <summary><span data-ttu-id="7a262-133">Inicializa uma nova instância da classe <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> com dados serializados.</span><span class="sxs-lookup"><span data-stu-id="7a262-133">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> class with serialized data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a262-134">Este construtor é chamado durante a desserialização para reconstituir o objeto de exceção que é transmitido em um fluxo.</span><span class="sxs-lookup"><span data-stu-id="7a262-134">This constructor is called during deserialization to reconstitute the exception object that is transmitted over a stream.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceValidationException (string message, System.Collections.Generic.IDictionary&lt;string,Exception&gt; innerExceptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Collections.Generic.IDictionary`2&lt;string, class System.Exception&gt; innerExceptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Exception})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerExceptions As IDictionary(Of String, Exception))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceValidationException(System::String ^ message, System::Collections::Generic::IDictionary&lt;System::String ^, Exception ^&gt; ^ innerExceptions);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerExceptions" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Exception&gt;" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="7a262-135">A mensagem que descreve o erro.</span><span class="sxs-lookup"><span data-stu-id="7a262-135">The message that describes the error.</span></span></param>
        <param name="innerExceptions"><span data-ttu-id="7a262-136">A coleção de exceções de validação.</span><span class="sxs-lookup"><span data-stu-id="7a262-136">The collection of validation exceptions.</span></span></param>
        <summary><span data-ttu-id="7a262-137">Inicializa uma nova instância da classe <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> com uma mensagem especificada que descreve o erro e uma coleção de referências às exceções internas.</span><span class="sxs-lookup"><span data-stu-id="7a262-137">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> class with a specified message that describes the error, and a collection of references to inner exceptions.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceValidationException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceValidationException(System::String ^ message, Exception ^ innerException);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="7a262-138">A mensagem que descreve o erro.</span><span class="sxs-lookup"><span data-stu-id="7a262-138">The message that describes the error.</span></span></param>
        <param name="innerException"><span data-ttu-id="7a262-139">A exceção que é a causa da exceção atual.</span><span class="sxs-lookup"><span data-stu-id="7a262-139">The exception that is the cause of the current exception.</span></span></param>
        <summary><span data-ttu-id="7a262-140">Inicializa uma nova instância da classe <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> com uma mensagem de erro especificada e uma referência à exceção interna.</span><span class="sxs-lookup"><span data-stu-id="7a262-140">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> class with a specified error message and a reference to the inner exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a262-141">Você normalmente não usará este construtor como exceções de validação são armazenadas no <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> propriedade, não o <xref:System.Exception.InnerException%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="7a262-141">You typically will not use this constructor because validation exceptions are stored in the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> property, not the <xref:System.Exception.InnerException%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceValidationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="7a262-142">O objeto que contém os dados de objeto serializados para a exceção que está sendo gerada.</span><span class="sxs-lookup"><span data-stu-id="7a262-142">The object that holds the serialized object data for the exception that is being thrown.</span></span></param>
        <param name="context"><span data-ttu-id="7a262-143">Informações de contexto sobre a origem ou o destino.</span><span class="sxs-lookup"><span data-stu-id="7a262-143">Context information about the source or destination.</span></span></param>
        <summary><span data-ttu-id="7a262-144">Obtém informações sobre a exceção e adiciona-as ao objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</span><span class="sxs-lookup"><span data-stu-id="7a262-144">Gets information about the exception and adds it to the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a262-145">O <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.GetObjectData%2A> método adiciona informações sobre a exceção para o <xref:System.Runtime.Serialization.SerializationInfo> objeto que é direcionado para serialização.</span><span class="sxs-lookup"><span data-stu-id="7a262-145">The <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.GetObjectData%2A> method adds information about the exception to the <xref:System.Runtime.Serialization.SerializationInfo> object that is targeted for serialization.</span></span> <span data-ttu-id="7a262-146">Durante a desserialização, a exceção é reconstituída do <xref:System.Runtime.Serialization.SerializationInfo> que é transmitido no fluxo.</span><span class="sxs-lookup"><span data-stu-id="7a262-146">During deserialization, the exception is reconstituted from the <xref:System.Runtime.Serialization.SerializationInfo> that is transmitted over the stream.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InnerExceptions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Exception&gt; InnerExceptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class System.Exception&gt; InnerExceptions" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InnerExceptions As IDictionary(Of String, Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, Exception ^&gt; ^ InnerExceptions { System::Collections::Generic::IDictionary&lt;System::String ^, Exception ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IDynamicValidatorException.InnerExceptions</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Exception&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7a262-147">Obtém uma ou mais exceções que ocorreram ao validar dados novos ou modificados.</span><span class="sxs-lookup"><span data-stu-id="7a262-147">Gets one or more exceptions that occurred when new or modified data was being validated.</span></span></summary>
        <value><span data-ttu-id="7a262-148">Uma coleção que contém as exceções.</span><span class="sxs-lookup"><span data-stu-id="7a262-148">A collection that contains the exceptions.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a262-149">O <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> coleção contém todas as exceções de validação que foram geradas durante a validação de dados antes de uma atualização, inserção ou operação de exclusão.</span><span class="sxs-lookup"><span data-stu-id="7a262-149">The <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> collection contains all the validation exceptions that were thrown during data validation before an update, insert, or delete operation.</span></span> <span data-ttu-id="7a262-150">Uma exceção de validação pode ocorrer se um valor não corresponde ao tipo da propriedade.</span><span class="sxs-lookup"><span data-stu-id="7a262-150">A validation exception can occur if a value does not match the type of the property.</span></span> <span data-ttu-id="7a262-151">Por exemplo, se você tentar atualizar uma propriedade de inteiro usando caracteres não numéricos, é gerada uma exceção de validação.</span><span class="sxs-lookup"><span data-stu-id="7a262-151">For example, if you try to update an integer property by using non-numeric characters, a validation exception is thrown.</span></span> <span data-ttu-id="7a262-152">Uma classe LINQ to SQL também pode conter critérios de validação personalizado que certifique-se de que a propriedade contém um valor que está dentro de um padrão ou intervalo esperado.</span><span class="sxs-lookup"><span data-stu-id="7a262-152">A LINQ to SQL class can also contain customized validation criteria that make sure that the property contains a value that is within an expected range or pattern.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a262-153">O exemplo a seguir mostra um manipulador de eventos para o <xref:System.Web.UI.WebControls.LinqDataSource.Updating> evento.</span><span class="sxs-lookup"><span data-stu-id="7a262-153">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event.</span></span> <span data-ttu-id="7a262-154">Exibe qualquer mensagem de exceção de validação usando um <xref:System.Web.UI.WebControls.Label> controle.</span><span class="sxs-lookup"><span data-stu-id="7a262-154">It displays any validation exception messages by using a <xref:System.Web.UI.WebControls.Label> control.</span></span>  
  
```vb  
Protected Sub LinqDataSource_Updating(ByVal sender As Object, _  
        ByVal e As LinqDataSourceUpdateEventArgs)  
    If (e.Exception IsNot Nothing) Then  
        For Each innerException As KeyValuePair(Of String, Exception) _  
                In e.Exception.InnerExceptions  
          Label1.Text &= innerException.Key & ": " & _   
                  innerException.Value.Message & "<br />"  
        Next  
        e.ExceptionHandled = True  
    End If  
End Sub  
```  
  
```csharp  
protected void LinqDataSource_Updating(object sender,   
        LinqDataSourceUpdateEventArgs e)   
{  
    if (e.Exception != null)  
    {  
        foreach (KeyValuePair<string, Exception> innerException in   
            e.Exception.InnerExceptions)  
        {  
            Label1.Text += innerException.Key + ": " +   
                innerException.Message + "<br />";  
        }  
        e.ExceptionHandled = true;  
    }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>