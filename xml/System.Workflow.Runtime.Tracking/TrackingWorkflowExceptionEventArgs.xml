<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TrackingWorkflowExceptionEventArgs.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac507e533d202a4b266d49202c8122334812de6db87.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">07e533d202a4b266d49202c8122334812de6db87</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs">
          <source>Contains data associated with an exception that occurs during the execution of a workflow instance.</source>
          <target state="translated">Contém os dados associados a uma exceção que ocorre durante a execução de uma instância de fluxo de trabalho.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs">
          <source>When an exception occurs during the execution of a workflow instance and a <ph id="ph1">&lt;xref:System.Workflow.Runtime.Tracking.TrackingProfile&gt;</ph> that is associated with the workflow instance includes a <ph id="ph2">&lt;xref:System.Workflow.Runtime.Tracking.WorkflowTrackPoint&gt;</ph> configured for a <ph id="ph3">&lt;xref:System.Workflow.Runtime.Tracking.TrackingWorkflowEvent.Exception?displayProperty=nameWithType&gt;</ph>, the workflow tracking infrastructure sets <ph id="ph4">&lt;xref:System.Workflow.Runtime.Tracking.WorkflowTrackingRecord.EventArgs%2A&gt;</ph> to an <ph id="ph5">&lt;xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs&gt;</ph> in the <ph id="ph6">&lt;xref:System.Workflow.Runtime.Tracking.WorkflowTrackingRecord&gt;</ph> that it sends to the tracking service.</source>
          <target state="translated">Quando ocorre uma exceção durante a execução de uma instância de fluxo de trabalho e uma <ph id="ph1">&lt;xref:System.Workflow.Runtime.Tracking.TrackingProfile&gt;</ph> que está associado com o fluxo de trabalho instância inclui um <ph id="ph2">&lt;xref:System.Workflow.Runtime.Tracking.WorkflowTrackPoint&gt;</ph> configurado para um <ph id="ph3">&lt;xref:System.Workflow.Runtime.Tracking.TrackingWorkflowEvent.Exception?displayProperty=nameWithType&gt;</ph>, conjuntos de infraestrutura de controle de fluxo de trabalho <ph id="ph4">&lt;xref:System.Workflow.Runtime.Tracking.WorkflowTrackingRecord.EventArgs%2A&gt;</ph> para um <ph id="ph5">&lt;xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs&gt;</ph> no <ph id="ph6">&lt;xref:System.Workflow.Runtime.Tracking.WorkflowTrackingRecord&gt;</ph> que ele envia para o serviço de acompanhamento.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs&gt;</ph> is used only by the runtime tracking service to pass information in a <ph id="ph2">&lt;xref:System.Workflow.Runtime.Tracking.WorkflowTrackingRecord&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs&gt;</ph> é usado somente pelo tempo de execução do serviço de rastreamento para transmitir informações em um <ph id="ph2">&lt;xref:System.Workflow.Runtime.Tracking.WorkflowTrackingRecord&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs">
          <source>The following code example demonstrates a method, named <ph id="ph1">`WriteExceptionEventArgs`</ph>, which captures a <ph id="ph2">&lt;xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs&gt;</ph>.</source>
          <target state="translated">O exemplo de código a seguir demonstra um método chamado <ph id="ph1">`WriteExceptionEventArgs`</ph>, que captura um <ph id="ph2">&lt;xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs">
          <source>The code checks whether the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception%2A&gt;</ph> property is <ph id="ph2">`null`</ph> (<ph id="ph3">`Nothing`</ph> in Visual Basic).</source>
          <target state="translated">O código verifica se o <ph id="ph1">&lt;xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception%2A&gt;</ph> é de propriedade <ph id="ph2">`null`</ph> (<ph id="ph3">`Nothing`</ph> no Visual Basic).</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs">
          <source>If it is not, the code writes the message associated with the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception%2A&gt;</ph> property to the console.</source>
          <target state="translated">Se não for, o código grava a mensagem associada a <ph id="ph1">&lt;xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception%2A&gt;</ph> propriedade para o console.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs">
          <source>In addition, the code converts the value of the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath%2A&gt;</ph> property to a string and writes it to the console.</source>
          <target state="translated">Além disso, o código converte o valor da <ph id="ph1">&lt;xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath%2A&gt;</ph> propriedade como uma cadeia de caracteres e grava-o para o console.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs">
          <source>This code example is part of the EventArgs Tracking SDK sample from the Program.cs file.</source>
          <target state="translated">Este exemplo de código é parte do exemplo EventArgs SDK de controle do arquivo Program.cs.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs">
          <source>For more information, see <bpt id="p1">[</bpt>EventArgs Tracking Sample<ept id="p1">](http://msdn.microsoft.com/library/94818da2-c3c4-4a13-b47a-a0fb30dbbf1c)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>EventArgs controle exemplo<ept id="p1">](http://msdn.microsoft.com/library/94818da2-c3c4-4a13-b47a-a0fb30dbbf1c)</ept>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="P:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.ContextGuid">
          <source>Gets the context ID of the associated activity.</source>
          <target state="translated">Obtém a ID de contexto da atividade associada.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.ContextGuid">
          <source>A <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> that contains the context ID of the <ph id="ph2">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> que contém a ID do contexto da <ph id="ph2">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="P:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.CurrentActivityPath">
          <source>Gets the <ph id="ph1">&lt;see cref="P:System.Workflow.ComponentModel.Activity.QualifiedName" /&gt;</ph> of the activity currently throwing the exception.</source>
          <target state="translated">Obtém o <ph id="ph1">&lt;see cref="P:System.Workflow.ComponentModel.Activity.QualifiedName" /&gt;</ph> da atividade que está lançando a exceção.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.CurrentActivityPath">
          <source>The <ph id="ph1">&lt;see cref="P:System.Workflow.ComponentModel.Activity.QualifiedName" /&gt;</ph> of the activity currently throwing the exception.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="P:System.Workflow.ComponentModel.Activity.QualifiedName" /&gt;</ph> da atividade que está lançando a exceção.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.CurrentActivityPath">
          <source>Exceptions are passed up the chain of exception handler activities.</source>
          <target state="translated">Exceções são passadas a cadeia de atividades do manipulador de exceção.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.CurrentActivityPath">
          <source>An exception handler may choose to throw an exception again.</source>
          <target state="translated">Um manipulador de exceção poderá lançar uma exceção novamente.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.CurrentActivityPath">
          <source>When an exception handler throws the exception again, a new exception tracking event containing a new <ph id="ph1">&lt;xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs&gt;</ph> is raised to the runtime tracking infrastructure.</source>
          <target state="translated">Quando um manipulador de exceção gera a exceção novamente, um novo evento de rastreamento de exceção que contém um novo <ph id="ph1">&lt;xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs&gt;</ph> é gerado para o infra-estrutura de controle de tempo de execução.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.CurrentActivityPath">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.CurrentActivityPath%2A&gt;</ph> refers to the activity that is currently throwing the exception.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.CurrentActivityPath%2A&gt;</ph> refere-se para a atividade que atualmente está lançando a exceção.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="P:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> that is being thrown by the workflow instance.</source>
          <target state="translated">Obtém o <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> que está sendo gerada pela instância de fluxo de trabalho.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception">
          <source>The exception that is being thrown by the workflow instance.</source>
          <target state="translated">A exceção que está sendo gerada pela instância de fluxo de trabalho.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception">
          <source>The following code example demonstrates a method, named <ph id="ph1">`WriteExceptionEventArgs`</ph>, which captures a <ph id="ph2">&lt;xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs&gt;</ph>.</source>
          <target state="translated">O exemplo de código a seguir demonstra um método chamado <ph id="ph1">`WriteExceptionEventArgs`</ph>, que captura um <ph id="ph2">&lt;xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception">
          <source>The code checks whether the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception%2A&gt;</ph> property is <ph id="ph2">`null`</ph> (<ph id="ph3">`Nothing`</ph> in Visual Basic).</source>
          <target state="translated">O código verifica se o <ph id="ph1">&lt;xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception%2A&gt;</ph> é de propriedade <ph id="ph2">`null`</ph> (<ph id="ph3">`Nothing`</ph> no Visual Basic).</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception">
          <source>If it is not, the code writes the message associated with the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception%2A&gt;</ph> property to the console.</source>
          <target state="translated">Se não for, o código grava a mensagem associada a <ph id="ph1">&lt;xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception%2A&gt;</ph> propriedade para o console.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception">
          <source>If Exception is <ph id="ph1">`null`</ph> (<ph id="ph2">`Nothing`</ph>), the code converts the value of the <ph id="ph3">&lt;xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath%2A&gt;</ph> property to a string and writes it to the console.</source>
          <target state="translated">Se a exceção é <ph id="ph1">`null`</ph> (<ph id="ph2">`Nothing`</ph>), o código converte o valor da <ph id="ph3">&lt;xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath%2A&gt;</ph> propriedade como uma cadeia de caracteres e grava-o para o console.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception">
          <source>This code example is part of the EventArgs Tracking SDK Sample from the Program.cs file.</source>
          <target state="translated">Este exemplo de código é parte do EventArgs controle SDK exemplo do arquivo Program.cs.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception">
          <source>For more information, see <bpt id="p1">[</bpt>EventArgs Tracking Sample<ept id="p1">](http://msdn.microsoft.com/library/94818da2-c3c4-4a13-b47a-a0fb30dbbf1c)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>EventArgs controle exemplo<ept id="p1">](http://msdn.microsoft.com/library/94818da2-c3c4-4a13-b47a-a0fb30dbbf1c)</ept>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="P:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath">
          <source>Gets the <ph id="ph1">&lt;see cref="P:System.Workflow.ComponentModel.Activity.QualifiedName" /&gt;</ph> of the activity that originally threw the exception.</source>
          <target state="translated">Obtém o <ph id="ph1">&lt;see cref="P:System.Workflow.ComponentModel.Activity.QualifiedName" /&gt;</ph> da atividade que originalmente gerou a exceção.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath">
          <source>The <ph id="ph1">&lt;see cref="P:System.Workflow.ComponentModel.Activity.QualifiedName" /&gt;</ph> of the activity that originally threw the exception.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="P:System.Workflow.ComponentModel.Activity.QualifiedName" /&gt;</ph> da atividade que originalmente gerou a exceção.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath">
          <source>Exceptions are passed up the chain of exception handler activities.</source>
          <target state="translated">Exceções são passadas a cadeia de atividades do manipulador de exceção.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath">
          <source>An exception handler may choose to throw an exception again.</source>
          <target state="translated">Um manipulador de exceção poderá lançar uma exceção novamente.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath">
          <source>When an exception handler throws an exception again, a new exception tracking event containing a new <ph id="ph1">&lt;xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs&gt;</ph> is raised to the runtime tracking infrastructure.</source>
          <target state="translated">Quando um manipulador de exceção gera uma exceção novamente, um novo evento de rastreamento de exceção que contém um novo <ph id="ph1">&lt;xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs&gt;</ph> é gerado para o infra-estrutura de controle de tempo de execução.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath%2A&gt;</ph> refers to the activity that originally threw the exception.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath%2A&gt;</ph> refere-se para a atividade que originalmente gerou a exceção.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath">
          <source>The following code example demonstrates a method, named <ph id="ph1">`WriteExceptionEventArgs`</ph>, which captures a <ph id="ph2">&lt;xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs&gt;</ph>.</source>
          <target state="translated">O exemplo de código a seguir demonstra um método chamado <ph id="ph1">`WriteExceptionEventArgs`</ph>, que captura um <ph id="ph2">&lt;xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath">
          <source>The code checks whether the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception%2A&gt;</ph> property is <ph id="ph2">`null`</ph> (<ph id="ph3">`Nothing`</ph> in Visual Basic).</source>
          <target state="translated">O código verifica se o <ph id="ph1">&lt;xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception%2A&gt;</ph> é de propriedade <ph id="ph2">`null`</ph> (<ph id="ph3">`Nothing`</ph> no Visual Basic).</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath">
          <source>If it is not, the code writes the message associated with the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception%2A&gt;</ph> property to the console.</source>
          <target state="translated">Se não for, o código grava a mensagem associada a <ph id="ph1">&lt;xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception%2A&gt;</ph> propriedade para o console.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath">
          <source>If <ph id="ph1">&lt;xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception%2A&gt;</ph> is <ph id="ph2">`null`</ph> (<ph id="ph3">`Nothing`</ph>), the code converts the value of the <ph id="ph4">&lt;xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath%2A&gt;</ph> property to a string and writes it to the console.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception%2A&gt;</ph> é <ph id="ph2">`null`</ph> (<ph id="ph3">`Nothing`</ph>), o código converte o valor da <ph id="ph4">&lt;xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath%2A&gt;</ph> propriedade como uma cadeia de caracteres e grava-o para o console.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath">
          <source>This code example is part of the EventArgs Tracking SDK Sample from the Program.cs file.</source>
          <target state="translated">Este exemplo de código é parte do EventArgs controle SDK exemplo do arquivo Program.cs.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath">
          <source>For more information, see <bpt id="p1">[</bpt>EventArgs Tracking Sample<ept id="p1">](http://msdn.microsoft.com/library/94818da2-c3c4-4a13-b47a-a0fb30dbbf1c)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>EventArgs controle exemplo<ept id="p1">](http://msdn.microsoft.com/library/94818da2-c3c4-4a13-b47a-a0fb30dbbf1c)</ept>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.ParentContextGuid">
          <source>Gets the context ID of the parent activity.</source>
          <target state="translated">Obtém a ID do contexto da atividade pai.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.ParentContextGuid">
          <source>A <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> that contains the context ID of the parent <ph id="ph2">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> que contém a ID do contexto do pai <ph id="ph2">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>