<Type Name="_PropertyInfo" FullName="System.Runtime.InteropServices._PropertyInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b185ba7e52cfa32e5ec6a7191b681601f2858be9" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52254837" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface _PropertyInfo" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _PropertyInfo" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices._PropertyInfo" />
  <TypeSignature Language="VB.NET" Value="Public Interface _PropertyInfo" />
  <TypeSignature Language="C++ CLI" Value="public interface class _PropertyInfo" />
  <TypeSignature Language="F#" Value="type _PropertyInfo = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.CLSCompliant(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.Guid("F59ED4E4-E68F-3218-BD77-061AA82824BF")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.TypeLibImportClass(typeof(System.Reflection.PropertyInfo))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="bd6b4-101">Expõe os membros públicos da classe <see cref="T:System.Reflection.PropertyInfo" /> a código não gerenciado.</span>
      <span class="sxs-lookup">
        <span data-stu-id="bd6b4-101">Exposes the public members of the <see cref="T:System.Reflection.PropertyInfo" /> class to unmanaged code.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd6b4-102">Essa interface é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamado a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-102">This interface is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="bd6b4-103">Essa interface preserva a ordem de vtable do <xref:System.Reflection.PropertyInfo?displayProperty=nameWithType> membros que podem ser acessados por objetos COM não gerenciados de classe.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-103">This interface preserves the vtable order of the <xref:System.Reflection.PropertyInfo?displayProperty=nameWithType> class members that can be accessed by unmanaged COM objects.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyAttributes Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.PropertyAttributes Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._PropertyInfo.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As PropertyAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::PropertyAttributes Attributes { System::Reflection::PropertyAttributes get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Reflection.PropertyAttributes" Usage="System.Runtime.InteropServices._PropertyInfo.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd6b4-104">Fornece acesso independente da versão para objetos COM à propriedade <see cref="P:System.Reflection.PropertyInfo.Attributes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-104">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.PropertyInfo.Attributes" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bd6b4-105">Os atributos desta propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-105">The attributes of this property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd6b4-106">Essa propriedade é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamada a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-106">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="bd6b4-107">O <xref:System.Reflection.PropertyInfo.Attributes%2A> propriedade obtém os atributos desta propriedade.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-107">The <xref:System.Reflection.PropertyInfo.Attributes%2A> property gets the attributes of this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._PropertyInfo.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanRead { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRead : bool" Usage="System.Runtime.InteropServices._PropertyInfo.CanRead" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd6b4-108">Fornece acesso independente da versão para objetos COM à propriedade <see cref="P:System.Reflection.PropertyInfo.CanRead" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-108">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.PropertyInfo.CanRead" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bd6b4-109">
            <see langword="true" /> se essa propriedade puder ser lida; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-109">
              <see langword="true" /> if this property can be read; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd6b4-110">Essa propriedade é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamada a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-110">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="bd6b4-111">O <xref:System.Reflection.PropertyInfo.CanRead%2A> propriedade obtém um valor que indica se a propriedade pode ser lido.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-111">The <xref:System.Reflection.PropertyInfo.CanRead%2A> property gets a value indicating whether the property can be read.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._PropertyInfo.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanWrite { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWrite : bool" Usage="System.Runtime.InteropServices._PropertyInfo.CanWrite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd6b4-112">Fornece acesso independente da versão para objetos COM à propriedade <see cref="P:System.Reflection.PropertyInfo.CanWrite" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-112">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.PropertyInfo.CanWrite" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bd6b4-113">
            <see langword="true" /> se essa propriedade puder ser usada para gravação; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-113">
              <see langword="true" /> if this property can be written to; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd6b4-114">Essa propriedade é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamada a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-114">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="bd6b4-115">O <xref:System.Reflection.PropertyInfo.CanWrite%2A> propriedade obtém um valor que indica se a propriedade pode ser gravada.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-115">The <xref:System.Reflection.PropertyInfo.CanWrite%2A> property gets a value indicating whether the property can be written to.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaringType">
      <MemberSignature Language="C#" Value="public Type DeclaringType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DeclaringType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._PropertyInfo.DeclaringType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeclaringType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ DeclaringType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeclaringType : Type" Usage="System.Runtime.InteropServices._PropertyInfo.DeclaringType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd6b4-116">Fornece acesso independente da versão para objetos COM à propriedade <see cref="P:System.Reflection.MemberInfo.DeclaringType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-116">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MemberInfo.DeclaringType" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bd6b4-117">O objeto <see langword="Type" /> para a classe que declara esse membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-117">The <see langword="Type" /> object for the class that declares this member.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd6b4-118">Essa propriedade é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamada a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-118">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="bd6b4-119">O <xref:System.Reflection.MemberInfo.DeclaringType%2A> propriedade obtém a classe que declara esse membro.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-119">The <xref:System.Reflection.MemberInfo.DeclaringType%2A> property gets the class that declares this member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (object other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(object other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Object ^ other);" />
      <MemberSignature Language="F#" Value="abstract member Equals : obj -&gt; bool" Usage="_PropertyInfo.Equals other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="bd6b4-120">O <see cref="T:System.Object" /> a ser comparado com o <see cref="T:System.Object" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-120">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd6b4-121">Fornece objetos COM com acesso independente de versão para o método <see cref="M:System.Object.Equals(System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-121">Provides COM objects with version-independent access to the <see cref="M:System.Object.Equals(System.Object)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bd6b4-122">
            <see langword="true" /> se o <see cref="T:System.Object" /> especificado for igual ao <see cref="T:System.Object" /> atual; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-122">
              <see langword="true" /> if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd6b4-123">Esse método é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamado a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-123">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="bd6b4-124">O <xref:System.Object.Equals%2A> método determina se o especificado <xref:System.Object> é igual à atual <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-124">The <xref:System.Object.Equals%2A> method determines whether the specified <xref:System.Object> is equal to the current <xref:System.Object>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAccessors">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bd6b4-125">Fornece objetos COM com acesso independente de versão para os métodos <see cref="Overload:System.Reflection.PropertyInfo.GetAccessors" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-125">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.PropertyInfo.GetAccessors" /> methods.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd6b4-126">Esse método é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamado a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-126">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="bd6b4-127">O <xref:System.Reflection.PropertyInfo.GetAccessors%2A> métodos retornam uma matriz do `get` e `set` acessadores nessa propriedade.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-127">The <xref:System.Reflection.PropertyInfo.GetAccessors%2A> methods return an array of the `get` and `set` accessors on this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAccessors">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo[] GetAccessors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo[] GetAccessors() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetAccessors" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessors () As MethodInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ GetAccessors();" />
      <MemberSignature Language="F#" Value="abstract member GetAccessors : unit -&gt; System.Reflection.MethodInfo[]" Usage="_PropertyInfo.GetAccessors " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bd6b4-128">Fornece objetos COM com acesso independente de versão para o método <see cref="M:System.Reflection.PropertyInfo.GetAccessors" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-128">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.PropertyInfo.GetAccessors" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bd6b4-129">Uma matriz de objetos <see cref="T:System.Reflection.MethodInfo" /> que refletem o <see langword="get" />, <see langword="set" /> e outros acessadores públicos da propriedade refletida pela instância atual, se os acessadores forem encontrados, caso contrário, esse método retorna uma matriz com zero (0) elementos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-129">An array of <see cref="T:System.Reflection.MethodInfo" /> objects that reflect the public <see langword="get" />, <see langword="set" />, and other accessors of the property reflected by the current instance, if accessors are found; otherwise, this method returns an array with zero (0) elements.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd6b4-130">Esse método é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamado a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-130">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="bd6b4-131">O <xref:System.Reflection.PropertyInfo.GetAccessors%2A> método retorna uma matriz cujos elementos refletem o público `get`, `set`e outros acessadores da propriedade refletida pela instância atual.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-131">The <xref:System.Reflection.PropertyInfo.GetAccessors%2A> method returns an array whose elements reflect the public `get`, `set`, and other accessors of the property reflected by the current instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAccessors">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo[] GetAccessors (bool nonPublic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo[] GetAccessors(bool nonPublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetAccessors(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessors (nonPublic As Boolean) As MethodInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ GetAccessors(bool nonPublic);" />
      <MemberSignature Language="F#" Value="abstract member GetAccessors : bool -&gt; System.Reflection.MethodInfo[]" Usage="_PropertyInfo.GetAccessors nonPublic" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonPublic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="nonPublic">
          <span data-ttu-id="bd6b4-132">
            <see langword="true" /> para incluir métodos não públicos em matriz <see langword="MethodInfo" /> retornada; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-132">
              <see langword="true" /> to include non-public methods in the returned <see langword="MethodInfo" /> array; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd6b4-133">Fornece objetos COM com acesso independente de versão para o método <see cref="M:System.Reflection.PropertyInfo.GetAccessors(System.Boolean)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-133">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.PropertyInfo.GetAccessors(System.Boolean)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bd6b4-134">Uma matriz de objetos <see cref="T:System.Reflection.MethodInfo" /> cujos elementos refletem o <see langword="get" />, <see langword="set" /> e outros acessadores da propriedade refletida pela instância atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-134">An array of <see cref="T:System.Reflection.MethodInfo" /> objects whose elements reflect the <see langword="get" />, <see langword="set" />, and other accessors of the property reflected by the current instance.</span>
          </span>
          <span data-ttu-id="bd6b4-135">Se o parâmetro <paramref name="nonPublic" /> é <see langword="true" />, essa matriz contém <see langword="get" />, <see langword="set" /> públicos e não públicos, bem como outros acessadores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-135">If the <paramref name="nonPublic" /> parameter is <see langword="true" />, this array contains public and non-public <see langword="get" />, <see langword="set" />, and other accessors.</span>
          </span>
          <span data-ttu-id="bd6b4-136">Se <paramref name="nonPublic" /> for <see langword="false" />, essa matriz conterá apenas <see langword="get" />, <see langword="set" /> e outros acessadores públicos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-136">If <paramref name="nonPublic" /> is <see langword="false" />, this array contains only public <see langword="get" />, <see langword="set" />, and other accessors.</span>
          </span>
          <span data-ttu-id="bd6b4-137">Se nenhum acessador com a visibilidade especificada for encontrado, esse método retornará uma matriz com zero (0) elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-137">If no accessors with the specified visibility are found, this method returns an array with zero (0) elements.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd6b4-138">Esse método é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamado a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-138">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="bd6b4-139">O <xref:System.Reflection.PropertyInfo.GetAccessors%2A> método retorna uma matriz cujos elementos refletem o público e, se especificado, e não públicos `get`, `set`e outros acessadores da propriedade refletida pela instância atual.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-139">The <xref:System.Reflection.PropertyInfo.GetAccessors%2A> method returns an array whose elements reflect the public and, if specified, non-public `get`, `set`, and other accessors of the property reflected by the current instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bd6b4-140">Fornece objetos COM com acesso independente de versão para os métodos <see cref="Overload:System.Reflection.MemberInfo.GetCustomAttributes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-140">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.MemberInfo.GetCustomAttributes" /> methods.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd6b4-141">Esse método é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamado a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-141">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="bd6b4-142">O <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> métodos retornam todos os atributos aplicados a esse membro.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-142">The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> methods return all attributes applied to this member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public object[] GetCustomAttributes (bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetCustomAttributes(bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCustomAttributes (inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(bool inherit);" />
      <MemberSignature Language="F#" Value="abstract member GetCustomAttributes : bool -&gt; obj[]" Usage="_PropertyInfo.GetCustomAttributes inherit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inherit">
          <span data-ttu-id="bd6b4-143">true para pesquisar a cadeia de herança desse membro para encontrar os atributos; caso contrário, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-143">true to search this member's inheritance chain to find the attributes; otherwise false.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd6b4-144">Fornece objetos COM com acesso independente de versão para o método <see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-144">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bd6b4-145">Uma matriz que contém todos os atributos personalizados ou uma matriz com zero elementos se nenhum atributo for definido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-145">An array that contains all the custom attributes, or an array with zero elements if no attributes are defined.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd6b4-146">Esse método é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamado a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-146">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="bd6b4-147">O <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> método retorna uma matriz que contém todos os atributos personalizados.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-147">The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method returns an array containing all the custom attributes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public object[] GetCustomAttributes (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCustomAttributes (attributeType As Type, inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="abstract member GetCustomAttributes : Type * bool -&gt; obj[]" Usage="_PropertyInfo.GetCustomAttributes (attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType">
          <span data-ttu-id="bd6b4-148">O tipo de atributo a ser pesquisado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-148">The type of attribute to search for.</span>
          </span>
          <span data-ttu-id="bd6b4-149">Somente os atributos que podem ser atribuídos a esse tipo são retornados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-149">Only attributes that are assignable to this type are returned.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="bd6b4-150">true para pesquisar a cadeia de herança desse membro para encontrar os atributos; caso contrário, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-150">true to search this member's inheritance chain to find the attributes; otherwise false.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd6b4-151">Fornece objetos COM com acesso independente de versão para o método <see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-151">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bd6b4-152">Uma matriz de atributos personalizados aplicados a este membro ou uma matriz com zero (0) elementos se nenhum atributo tiver sido aplicado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-152">An array of custom attributes applied to this member, or an array with zero (0) elements if no attributes have been applied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd6b4-153">Esse método é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamado a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-153">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="bd6b4-154">O <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> método retorna uma matriz de atributos personalizados identificados por <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-154">The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method returns an array of custom attributes identified by <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetGetMethod">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bd6b4-155">Fornece objetos COM com acesso independente de versão para os métodos <see cref="Overload:System.Reflection.PropertyInfo.GetGetMethod" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-155">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.PropertyInfo.GetGetMethod" /> methods.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd6b4-156">Esse método é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamado a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-156">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="bd6b4-157">O <xref:System.Reflection.PropertyInfo.GetGetMethod%2A> métodos retornam uma <xref:System.Reflection.MethodInfo> objeto que representa o `get` acessador para esta propriedade.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-157">The <xref:System.Reflection.PropertyInfo.GetGetMethod%2A> methods return a <xref:System.Reflection.MethodInfo> object representing the `get` accessor for this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetGetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetGetMethod ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetGetMethod() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetGetMethod" />
      <MemberSignature Language="VB.NET" Value="Public Function GetGetMethod () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodInfo ^ GetGetMethod();" />
      <MemberSignature Language="F#" Value="abstract member GetGetMethod : unit -&gt; System.Reflection.MethodInfo" Usage="_PropertyInfo.GetGetMethod " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bd6b4-158">Fornece objetos COM com acesso independente de versão para o método <see cref="M:System.Reflection.PropertyInfo.GetGetMethod" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-158">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.PropertyInfo.GetGetMethod" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bd6b4-159">Um objeto <see cref="T:System.Reflection.MethodInfo" /> que representará o acessador <see langword="get" /> público para essa propriedade ou <see langword="null" />, se o acessador <see langword="get" /> for não público ou não existir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-159">A <see cref="T:System.Reflection.MethodInfo" /> object representing the public <see langword="get" /> accessor for this property, or <see langword="null" /> if the <see langword="get" /> accessor is non-public or does not exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd6b4-160">Esse método é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamado a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-160">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="bd6b4-161">O <xref:System.Reflection.PropertyInfo.GetGetMethod%2A> método retorna o público `get` acessador para esta propriedade.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-161">The <xref:System.Reflection.PropertyInfo.GetGetMethod%2A> method returns the public `get` accessor for this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetGetMethod (bool nonPublic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetGetMethod(bool nonPublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetGetMethod(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetGetMethod (nonPublic As Boolean) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodInfo ^ GetGetMethod(bool nonPublic);" />
      <MemberSignature Language="F#" Value="abstract member GetGetMethod : bool -&gt; System.Reflection.MethodInfo" Usage="_PropertyInfo.GetGetMethod nonPublic" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonPublic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="nonPublic">
          <span data-ttu-id="bd6b4-162">
            <see langword="true" /> para retornar um acessador <see langword="get" /> não público; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-162">
              <see langword="true" /> to return a non-public <see langword="get" /> accessor; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd6b4-163">Fornece objetos COM com acesso independente de versão para o método <see cref="M:System.Reflection.PropertyInfo.GetGetMethod(System.Boolean)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-163">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.PropertyInfo.GetGetMethod(System.Boolean)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bd6b4-164">Um objeto <see cref="T:System.Reflection.MethodInfo" /> representando o acessador <see langword="get" /> para essa propriedade, se o parâmetro <paramref name="nonPublic" /> for <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-164">A <see cref="T:System.Reflection.MethodInfo" /> object representing the <see langword="get" /> accessor for this property, if the <paramref name="nonPublic" /> parameter is <see langword="true" />.</span>
          </span>
          <span data-ttu-id="bd6b4-165">Ou <see langword="null" /> se <paramref name="nonPublic" /> for <see langword="false" /> e o acessador <see langword="get" /> for não público ou então se <paramref name="nonPublic" /> for <see langword="true" /> mas não existir nenhum acessador <see langword="get" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-165">Or <see langword="null" /> if <paramref name="nonPublic" /> is <see langword="false" /> and the <see langword="get" /> accessor is non-public, or if <paramref name="nonPublic" /> is <see langword="true" /> but no <see langword="get" /> accessors exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd6b4-166">Esse método é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamado a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-166">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="bd6b4-167">O <xref:System.Reflection.PropertyInfo.GetGetMethod%2A> método retorna o público ou não público `get` acessador para esta propriedade.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-167">The <xref:System.Reflection.PropertyInfo.GetGetMethod%2A> method returns the public or non-public `get` accessor for this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetHashCode();" />
      <MemberSignature Language="F#" Value="abstract member GetHashCode : unit -&gt; int" Usage="_PropertyInfo.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bd6b4-168">Fornece objetos COM com acesso independente de versão para o método <see cref="M:System.Object.GetHashCode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-168">Provides COM objects with version-independent access to the <see cref="M:System.Object.GetHashCode" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bd6b4-169">O código hash da instância atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-169">The hash code for the current instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd6b4-170">Esse método é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamado a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-170">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="bd6b4-171">O <xref:System.Object.GetHashCode%2A> método serve como uma função de hash para um tipo específico.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-171">The <xref:System.Object.GetHashCode%2A> method serves as a hash function for a particular type.</span></span> <span data-ttu-id="bd6b4-172"><xref:System.Object.GetHashCode%2A> é adequado para uso em algoritmos e estruturas de dados, como uma tabela de hash de hash.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-172"><xref:System.Object.GetHashCode%2A> is suitable for use in hashing algorithms and data structures such as a hash table.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIDsOfNames">
      <MemberSignature Language="C#" Value="public void GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId);" />
      <MemberSignature Language="F#" Value="abstract member GetIDsOfNames :  * nativeint * uint32 * uint32 * nativeint -&gt; unit" Usage="_PropertyInfo.GetIDsOfNames (riid, rgszNames, cNames, lcid, rgDispId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid">
          <span data-ttu-id="bd6b4-173">Reservado para uso futuro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-173">Reserved for future use.</span>
          </span>
          <span data-ttu-id="bd6b4-174">Deve ser IID_NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-174">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="rgszNames">
          <span data-ttu-id="bd6b4-175">Uma matriz de nomes a serem mapeados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-175">An array of names to be mapped.</span>
          </span>
        </param>
        <param name="cNames">
          <span data-ttu-id="bd6b4-176">A contagem dos nomes a serem mapeados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-176">The count of the names to be mapped.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="bd6b4-177">O contexto de localidade no qual interpretar os nomes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-177">The locale context in which to interpret the names.</span>
          </span>
        </param>
        <param name="rgDispId">
          <span data-ttu-id="bd6b4-178">Uma matriz alocada pelo chamador que recebe os identificadores correspondentes aos nomes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-178">An array allocated by the caller that receives the identifiers corresponding to the names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd6b4-179">Mapeia um conjunto de nomes para um conjunto correspondente de identificadores de expedição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-179">Maps a set of names to a corresponding set of dispatch identifiers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd6b4-180">Esse método é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamado a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-180">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span> <span data-ttu-id="bd6b4-181">Para obter mais informações sobre `IDispatch::GetIDsOfNames`, consulte a Biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-181">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIndexParameters">
      <MemberSignature Language="C#" Value="public System.Reflection.ParameterInfo[] GetIndexParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.ParameterInfo[] GetIndexParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetIndexParameters" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIndexParameters () As ParameterInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::ParameterInfo ^&gt; ^ GetIndexParameters();" />
      <MemberSignature Language="F#" Value="abstract member GetIndexParameters : unit -&gt; System.Reflection.ParameterInfo[]" Usage="_PropertyInfo.GetIndexParameters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ParameterInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bd6b4-182">Fornece objetos COM com acesso independente de versão para o método <see cref="M:System.Reflection.PropertyInfo.GetIndexParameters" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-182">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.PropertyInfo.GetIndexParameters" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bd6b4-183">Uma matriz do tipo <see cref="T:System.Reflection.ParameterInfo" /> que contém os parâmetros dos índices.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-183">An array of type <see cref="T:System.Reflection.ParameterInfo" /> containing the parameters for the indexes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd6b4-184">Esse método é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamado a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-184">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="bd6b4-185">O <xref:System.Reflection.PropertyInfo.GetIndexParameters%2A> método retorna uma matriz de todos os parâmetros de índice para a propriedade</span><span class="sxs-lookup"><span data-stu-id="bd6b4-185">The <xref:System.Reflection.PropertyInfo.GetIndexParameters%2A> method returns an array of all the index parameters for the property</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSetMethod">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bd6b4-186">Fornece objetos COM com acesso independente de versão para os métodos <see cref="Overload:System.Reflection.PropertyInfo.GetSetMethod" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-186">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.PropertyInfo.GetSetMethod" /> methods.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd6b4-187">Esse método é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamado a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-187">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="bd6b4-188">O <xref:System.Reflection.PropertyInfo.GetSetMethod%2A> métodos retornam uma <xref:System.Reflection.MethodInfo> objeto que representa o `set` acessador para esta propriedade.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-188">The <xref:System.Reflection.PropertyInfo.GetSetMethod%2A> methods return a <xref:System.Reflection.MethodInfo> object representing the `set` accessor for this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetSetMethod ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetSetMethod() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetSetMethod" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSetMethod () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodInfo ^ GetSetMethod();" />
      <MemberSignature Language="F#" Value="abstract member GetSetMethod : unit -&gt; System.Reflection.MethodInfo" Usage="_PropertyInfo.GetSetMethod " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bd6b4-189">Fornece objetos COM com acesso independente de versão para o método <see cref="M:System.Reflection.PropertyInfo.GetSetMethod" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-189">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.PropertyInfo.GetSetMethod" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bd6b4-190">O objeto <see cref="T:System.Reflection.MethodInfo" /> representando o método <see langword="Set" /> para essa propriedade se o acessador <see langword="set" /> for público ou <see langword="null" />, se o acessador <see langword="set" /> não for público.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-190">The <see cref="T:System.Reflection.MethodInfo" /> object representing the <see langword="Set" /> method for this property if the <see langword="set" /> accessor is public, or <see langword="null" /> if the <see langword="set" /> accessor is not public.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd6b4-191">Esse método é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamado a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-191">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="bd6b4-192">O <xref:System.Reflection.PropertyInfo.GetSetMethod%2A> método retorna o público `set` acessador para esta propriedade.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-192">The <xref:System.Reflection.PropertyInfo.GetSetMethod%2A> method returns the public `set` accessor for this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetSetMethod (bool nonPublic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetSetMethod(bool nonPublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetSetMethod(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSetMethod (nonPublic As Boolean) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodInfo ^ GetSetMethod(bool nonPublic);" />
      <MemberSignature Language="F#" Value="abstract member GetSetMethod : bool -&gt; System.Reflection.MethodInfo" Usage="_PropertyInfo.GetSetMethod nonPublic" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonPublic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="nonPublic">
          <span data-ttu-id="bd6b4-193">
            <see langword="true" /> para retornar um acessador não público; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-193">
              <see langword="true" /> to return a non-public accessor; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd6b4-194">Fornece objetos COM com acesso independente de versão para o método <see cref="M:System.Reflection.PropertyInfo.GetSetMethod(System.Boolean)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-194">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.PropertyInfo.GetSetMethod(System.Boolean)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bd6b4-195">Um dos valores na tabela a seguir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-195">One of the values in the following table.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="bd6b4-196">Valor</span>
                <span class="sxs-lookup">
                  <span data-stu-id="bd6b4-196">Value</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="bd6b4-197">Significado</span>
                <span class="sxs-lookup">
                  <span data-stu-id="bd6b4-197">Meaning</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="bd6b4-198">Um objeto <see cref="T:System.Reflection.MethodInfo" /> representando o método <see langword="Set" /> para essa propriedade.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="bd6b4-198">A <see cref="T:System.Reflection.MethodInfo" /> object representing the <see langword="Set" /> method for this property.</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="bd6b4-199">O acessador <see langword="set" /> é público.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="bd6b4-199">The <see langword="set" /> accessor is public.</span>
                </span>
                <span data-ttu-id="bd6b4-200">- ou -</span>
                <span class="sxs-lookup">
                  <span data-stu-id="bd6b4-200">-or-</span>
                </span>
                <span data-ttu-id="bd6b4-201">O parâmetro <paramref name="nonPublic" /> é <see langword="true" /> e o acessador <see langword="set" /> é não público.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="bd6b4-201">The <paramref name="nonPublic" /> parameter is <see langword="true" /> and the <see langword="set" /> accessor is non-public.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <see langword="null" />
              </term>
              <description>
                <span data-ttu-id="bd6b4-202">O parâmetro <paramref name="nonPublic" /> é <see langword="true" />, mas a propriedade é somente leitura.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="bd6b4-202">The <paramref name="nonPublic" /> parameter is <see langword="true" />, but the property is read-only.</span>
                </span>
                <span data-ttu-id="bd6b4-203">- ou -</span>
                <span class="sxs-lookup">
                  <span data-stu-id="bd6b4-203">-or-</span>
                </span>
                <span data-ttu-id="bd6b4-204">O parâmetro <paramref name="nonPublic" /> é <see langword="false" /> e o acessador <see langword="set" /> é não público.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="bd6b4-204">The <paramref name="nonPublic" /> parameter is <see langword="false" /> and the <see langword="set" /> accessor is non-public.</span>
                </span>
                <span data-ttu-id="bd6b4-205">- ou -</span>
                <span class="sxs-lookup">
                  <span data-stu-id="bd6b4-205">-or-</span>
                </span>
                <span data-ttu-id="bd6b4-206">Não há nenhum acessador <see langword="set" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="bd6b4-206">There is no <see langword="set" /> accessor.</span>
                </span>
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd6b4-207">Esse método é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamado a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-207">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="bd6b4-208">O <xref:System.Reflection.PropertyInfo.GetSetMethod%2A> método retorna o `set` acessador para esta propriedade.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-208">The <xref:System.Reflection.PropertyInfo.GetSetMethod%2A> method returns the `set` accessor for this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType();" />
      <MemberSignature Language="F#" Value="abstract member GetType : unit -&gt; Type" Usage="_PropertyInfo.GetType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bd6b4-209">Fornece objetos COM com acesso independente de versão para o método <see cref="M:System.Object.GetType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-209">Provides COM objects with version-independent access to the <see cref="M:System.Object.GetType" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bd6b4-210">Um objeto <see cref="T:System.Type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-210">A <see cref="T:System.Type" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd6b4-211">Esse método é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamado a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-211">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="bd6b4-212">O <xref:System.Object.GetType%2A> método obtém o tipo da instância atual.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-212">The <xref:System.Object.GetType%2A> method gets the type of the current instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeInfo">
      <MemberSignature Language="C#" Value="public void GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="F#" Value="abstract member GetTypeInfo : uint32 * uint32 * nativeint -&gt; unit" Usage="_PropertyInfo.GetTypeInfo (iTInfo, lcid, ppTInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo">
          <span data-ttu-id="bd6b4-213">As informações de tipo a serem retornadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-213">The type information to return.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="bd6b4-214">O identificador de localidade das informações do tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-214">The locale identifier for the type information.</span>
          </span>
        </param>
        <param name="ppTInfo">
          <span data-ttu-id="bd6b4-215">Um ponteiro para o objeto de informações de tipo solicitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-215">A pointer to the requested type information object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd6b4-216">Recupera as informações de tipo para um objeto, que pode ser usado para obter as informações de tipo para uma interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-216">Retrieves the type information for an object, which can be used to get the type information for an interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd6b4-217">Esse método é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamado a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-217">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span> <span data-ttu-id="bd6b4-218">Para obter mais informações sobre `IDispatch::GetTypeInfo`, consulte a Biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-218">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeInfoCount">
      <MemberSignature Language="C#" Value="public void GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetTypeInfoCount (ByRef pcTInfo As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo);" />
      <MemberSignature Language="F#" Value="abstract member GetTypeInfoCount :  -&gt; unit" Usage="_PropertyInfo.GetTypeInfoCount pcTInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo">
          <span data-ttu-id="bd6b4-219">Quando este método retorna, contém um ponteiro para um local que recebe o número de interfaces de informações de tipo fornecidas pelo objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-219">When this method returns, contains a pointer to a location that receives the number of type information interfaces provided by the object.</span>
          </span>
          <span data-ttu-id="bd6b4-220">Este parâmetro é passado não inicializado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-220">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd6b4-221">Retorna o número de interfaces de informações do tipo que um objeto fornece (0 ou 1).</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-221">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd6b4-222">Esse método é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamado a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-222">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span> <span data-ttu-id="bd6b4-223">Para obter mais informações sobre `IDispatch::GetTypeInfoCount`, consulte a Biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-223">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetValue">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bd6b4-224">Fornece objetos COM com acesso independente de versão para os métodos <see cref="Overload:System.Reflection.PropertyInfo.GetValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-224">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.PropertyInfo.GetValue" /> methods.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd6b4-225">Esse método é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamado a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-225">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="bd6b4-226">O <xref:System.Reflection.PropertyInfo.GetValue%2A> métodos retornam o valor da propriedade.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-226">The <xref:System.Reflection.PropertyInfo.GetValue%2A> methods return the value of the property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (object obj, object[] index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetValue(object obj, object[] index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetValue(System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (obj As Object, index As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::Object ^ obj, cli::array &lt;System::Object ^&gt; ^ index);" />
      <MemberSignature Language="F#" Value="abstract member GetValue : obj * obj[] -&gt; obj" Usage="_PropertyInfo.GetValue (obj, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="index" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="bd6b4-227">O objeto cujo valor da propriedade será retornado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-227">The object whose property value will be returned.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="bd6b4-228">Valores de índice opcionais para propriedades indexadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-228">Optional index values for indexed properties.</span>
          </span>
          <span data-ttu-id="bd6b4-229">Esse valor deve ser <see langword="null" /> para propriedades não indexadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-229">This value should be <see langword="null" /> for non-indexed properties.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd6b4-230">Fornece objetos COM com acesso independente de versão para o método <see cref="M:System.Reflection.PropertyInfo.GetValue(System.Object,System.Object[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-230">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.PropertyInfo.GetValue(System.Object,System.Object[])" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bd6b4-231">O valor da propriedade para o parâmetro <paramref name="obj" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-231">The property value for the <paramref name="obj" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd6b4-232">Esse método é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamado a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-232">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="bd6b4-233">O <xref:System.Reflection.PropertyInfo.GetValue%2A> método retorna um valor literal associado à propriedade por um compilador.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-233">The <xref:System.Reflection.PropertyInfo.GetValue%2A> method returns a literal value associated with the property by a compiler.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] index, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetValue(object obj, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object[] index, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::Object ^ obj, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ index, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member GetValue : obj * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo -&gt; obj" Usage="_PropertyInfo.GetValue (obj, invokeAttr, binder, index, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="index" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="bd6b4-234">O objeto cujo valor da propriedade será retornado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-234">The object whose property value will be returned.</span>
          </span>
        </param>
        <param name="invokeAttr">
          <span data-ttu-id="bd6b4-235">O atributo de invocação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-235">The invocation attribute.</span>
          </span>
          <span data-ttu-id="bd6b4-236">Deve ser um sinalizador de bit de <see langword="BindingFlags" />: <see langword="InvokeMethod" />, <see langword="CreateInstance" />, <see langword="Static" />, <see langword="GetField" />, <see langword="SetField" />, <see langword="GetProperty" /> ou <see langword="SetProperty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-236">This must be a bit flag from <see langword="BindingFlags" />: <see langword="InvokeMethod" />, <see langword="CreateInstance" />, <see langword="Static" />, <see langword="GetField" />, <see langword="SetField" />, <see langword="GetProperty" />, or <see langword="SetProperty" />.</span>
          </span>
          <span data-ttu-id="bd6b4-237">É necessário especificar um atributo de invocação adequado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-237">A suitable invocation attribute must be specified.</span>
          </span>
          <span data-ttu-id="bd6b4-238">Se um membro estático for invocado, o sinalizador <see langword="Static" /> de <see langword="BindingFlags" /> deverá ser definido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-238">If a static member will be invoked, the <see langword="Static" /> flag of <see langword="BindingFlags" /> must be set.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="bd6b4-239">Um objeto que permite a associação, a coerção de tipos de argumento, a invocação de membros e a recuperação de objetos <see langword="MemberInfo" /> por meio da reflexão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-239">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see langword="MemberInfo" /> objects through reflection.</span>
          </span>
          <span data-ttu-id="bd6b4-240">Caso <paramref name="binder" /> seja <see langword="null" />, o associador padrão é usado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-240">If <paramref name="binder" /> is <see langword="null" />, the default binder is used.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="bd6b4-241">Valores de índice opcionais para propriedades indexadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-241">Optional index values for indexed properties.</span>
          </span>
          <span data-ttu-id="bd6b4-242">Esse valor deve ser <see langword="null" /> para propriedades não indexadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-242">This value should be <see langword="null" /> for non-indexed properties.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="bd6b4-243">O objeto <see langword="CultureInfo" /> que representa a cultura para a qual o recurso será localizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-243">The <see langword="CultureInfo" /> object that represents the culture for which the resource will be localized.</span>
          </span>
          <span data-ttu-id="bd6b4-244">Observe que se o recurso não estiver localizado para essa cultura, o método <see langword="CultureInfo.Parent" /> será chamado sucessivamente pesquisando uma correspondência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-244">Note that if the resource is not localized for this culture, the <see langword="CultureInfo.Parent" /> method will be called successively in search of a match.</span>
          </span>
          <span data-ttu-id="bd6b4-245">Se esse valor for <see langword="null" />, o <see langword="CultureInfo" /> será obtido da propriedade <see langword="CultureInfo.CurrentUICulture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-245">If this value is <see langword="null" />, the <see langword="CultureInfo" /> is obtained from the <see langword="CultureInfo.CurrentUICulture" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd6b4-246">Fornece objetos COM com acesso independente de versão para o método <see cref="M:System.Reflection.PropertyInfo.GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-246">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.PropertyInfo.GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bd6b4-247">O valor da propriedade para o parâmetro <paramref name="obj" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-247">The property value for the <paramref name="obj" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd6b4-248">Esse método é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamado a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-248">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="bd6b4-249">O <xref:System.Reflection.PropertyInfo.GetValue%2A> método retorna o valor de uma propriedade com o especificado associação, o índice e <xref:System.Globalization.CultureInfo>.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-249">The <xref:System.Reflection.PropertyInfo.GetValue%2A> method returns the value of a property having the specified binding, index, and <xref:System.Globalization.CultureInfo>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public void Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="F#" Value="abstract member Invoke : uint32 *  * uint32 * int16 * nativeint * nativeint * nativeint * nativeint -&gt; unit" Usage="_PropertyInfo.Invoke (dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember">
          <span data-ttu-id="bd6b4-250">Um identificador de um membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-250">An identifier of a member.</span>
          </span>
        </param>
        <param name="riid">
          <span data-ttu-id="bd6b4-251">Reservado para uso futuro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-251">Reserved for future use.</span>
          </span>
          <span data-ttu-id="bd6b4-252">Deve ser IID_NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-252">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="bd6b4-253">O contexto de localidade no qual interpretar argumentos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-253">The locale context in which to interpret arguments.</span>
          </span>
        </param>
        <param name="wFlags">
          <span data-ttu-id="bd6b4-254">Sinalizadores que descrevem o contexto da chamada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-254">Flags describing the context of the call.</span>
          </span>
        </param>
        <param name="pDispParams">
          <span data-ttu-id="bd6b4-255">Um ponteiro para uma estrutura contendo uma matriz de argumentos, uma matriz de DISPIDs de argumento para argumentos nomeados e contagens para o número de elementos nas matrizes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-255">A pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span>
          </span>
        </param>
        <param name="pVarResult">
          <span data-ttu-id="bd6b4-256">Um ponteiro para o local em que o resultado será armazenado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-256">A pointer to the location where the result will be stored.</span>
          </span>
        </param>
        <param name="pExcepInfo">
          <span data-ttu-id="bd6b4-257">Um ponteiro para uma estrutura que contém informações de exceção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-257">A pointer to a structure that contains exception information.</span>
          </span>
        </param>
        <param name="puArgErr">
          <span data-ttu-id="bd6b4-258">O índice do primeiro argumento que tem um erro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-258">The index of the first argument that has an error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd6b4-259">Fornece acesso a propriedades e métodos expostos por um objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-259">Provides access to properties and methods exposed by an object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd6b4-260">Esse método é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamado a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-260">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span> <span data-ttu-id="bd6b4-261">Para obter mais informações sobre `IDispatch::Invoke`, consulte a Biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-261">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public bool IsDefined (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDefined(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.IsDefined(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsDefined (attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsDefined(Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="abstract member IsDefined : Type * bool -&gt; bool" Usage="_PropertyInfo.IsDefined (attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType">
          <span data-ttu-id="bd6b4-262">O objeto <see cref="T:System.Type" /> ao qual os atributos personalizados são aplicados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-262">The <see cref="T:System.Type" /> object to which the custom attributes are applied.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="bd6b4-263">true para pesquisar a cadeia de herança desse membro para encontrar os atributos; caso contrário, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-263">true to search this member's inheritance chain to find the attributes; otherwise false.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd6b4-264">Fornece objetos COM com acesso independente de versão para o método <see cref="M:System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-264">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bd6b4-265">
            <see langword="true" /> se uma ou mais instâncias do parâmetro <paramref name="attributeType" /> for aplicada a este membro; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-265">
              <see langword="true" /> if one or more instances of the <paramref name="attributeType" /> parameter are applied to this member; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd6b4-266">Esse método é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamado a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-266">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="bd6b4-267">O <xref:System.Reflection.MemberInfo.IsDefined%2A> método indica se um ou mais instâncias da `attributeType` parâmetro estiver aplicado a esse membro.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-267">The <xref:System.Reflection.MemberInfo.IsDefined%2A> method indicates whether one or more instance of the `attributeType` parameter is applied to this member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSpecialName">
      <MemberSignature Language="C#" Value="public bool IsSpecialName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSpecialName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._PropertyInfo.IsSpecialName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSpecialName As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSpecialName { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSpecialName : bool" Usage="System.Runtime.InteropServices._PropertyInfo.IsSpecialName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd6b4-268">Fornece acesso independente da versão para objetos COM à propriedade <see cref="P:System.Reflection.PropertyInfo.IsSpecialName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-268">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.PropertyInfo.IsSpecialName" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bd6b4-269">
            <see langword="true" /> se a propriedade for o nome especial; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-269">
              <see langword="true" /> if this property is the special name; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd6b4-270">Essa propriedade é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamada a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-270">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="bd6b4-271">O <xref:System.Reflection.PropertyInfo.IsSpecialName%2A> propriedade define um valor que indica se a propriedade é o nome especial.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-271">The <xref:System.Reflection.PropertyInfo.IsSpecialName%2A> property sets a value indicating whether the property is the special name.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberType">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberTypes MemberType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.MemberTypes MemberType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._PropertyInfo.MemberType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemberType As MemberTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MemberTypes MemberType { System::Reflection::MemberTypes get(); };" />
      <MemberSignature Language="F#" Value="member this.MemberType : System.Reflection.MemberTypes" Usage="System.Runtime.InteropServices._PropertyInfo.MemberType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd6b4-272">Fornece acesso independente da versão para objetos COM à propriedade <see cref="P:System.Reflection.PropertyInfo.MemberType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-272">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.PropertyInfo.MemberType" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bd6b4-273">Um do <see cref="T:System.Reflection.MemberTypes" /> valores que indicam que esse membro é uma propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-273">One of the <see cref="T:System.Reflection.MemberTypes" /> values indicating that this member is a property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd6b4-274">Essa propriedade é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamada a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-274">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="bd6b4-275">O <xref:System.Reflection.PropertyInfo.MemberType%2A> propriedade obtém um <xref:System.Reflection.MemberTypes> valor que indica que esse membro é uma propriedade.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-275">The <xref:System.Reflection.PropertyInfo.MemberType%2A> property gets a <xref:System.Reflection.MemberTypes> value indicating that this member is a property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._PropertyInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Runtime.InteropServices._PropertyInfo.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd6b4-276">Fornece acesso independente da versão para objetos COM à propriedade <see cref="P:System.Reflection.MemberInfo.Name" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-276">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MemberInfo.Name" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bd6b4-277">Um <see cref="T:System.String" /> objeto que contém o nome desse membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-277">A <see cref="T:System.String" /> object containing the name of this member.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd6b4-278">Essa propriedade é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamada a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-278">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="bd6b4-279">O <xref:System.Reflection.MemberInfo.Name%2A> propriedade obtém o nome do membro atual.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-279">The <xref:System.Reflection.MemberInfo.Name%2A> property gets the name of the current member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyType">
      <MemberSignature Language="C#" Value="public Type PropertyType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type PropertyType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._PropertyInfo.PropertyType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertyType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ PropertyType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PropertyType : Type" Usage="System.Runtime.InteropServices._PropertyInfo.PropertyType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd6b4-280">Fornece acesso independente da versão para objetos COM à propriedade <see cref="P:System.Reflection.PropertyInfo.PropertyType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-280">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.PropertyInfo.PropertyType" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bd6b4-281">O tipo dessa propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-281">The type of this property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd6b4-282">Essa propriedade é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamada a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-282">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="bd6b4-283">O <xref:System.Reflection.PropertyInfo.PropertyType%2A> propriedade obtém o tipo dessa propriedade.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-283">The <xref:System.Reflection.PropertyInfo.PropertyType%2A> property gets the type of this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReflectedType">
      <MemberSignature Language="C#" Value="public Type ReflectedType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ReflectedType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._PropertyInfo.ReflectedType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReflectedType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ReflectedType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReflectedType : Type" Usage="System.Runtime.InteropServices._PropertyInfo.ReflectedType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd6b4-284">Fornece acesso independente da versão para objetos COM à propriedade <see cref="P:System.Reflection.MemberInfo.ReflectedType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-284">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MemberInfo.ReflectedType" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bd6b4-285">O objeto <see cref="T:System.Type" /> por meio do qual este objeto <see cref="T:System.Reflection.MemberInfo" /> foi obtido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-285">The <see cref="T:System.Type" /> object through which this <see cref="T:System.Reflection.MemberInfo" /> object was obtained.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd6b4-286">Essa propriedade é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamada a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-286">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="bd6b4-287">O <xref:System.Reflection.MemberInfo.ReflectedType%2A> propriedade obtém o objeto de classe que foi usado para obter esse <xref:System.Reflection.MemberInfo> objeto.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-287">The <xref:System.Reflection.MemberInfo.ReflectedType%2A> property gets the class object that was used to obtain this <xref:System.Reflection.MemberInfo> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetValue">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bd6b4-288">Fornece objetos COM com acesso independente de versão para o método <see cref="Overload:System.Reflection.PropertyInfo.SetValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-288">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.PropertyInfo.SetValue" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd6b4-289">Esse método é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamado a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-289">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="bd6b4-290">O <xref:System.Reflection.PropertyInfo.SetValue%2A> método define o valor da propriedade para o objeto fornecido como o valor especificado.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-290">The <xref:System.Reflection.PropertyInfo.SetValue%2A> method sets the property value for the given object to the given value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (object obj, object value, object[] index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValue(object obj, object value, object[] index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.SetValue(System.Object,System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (obj As Object, value As Object, index As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Object ^ obj, System::Object ^ value, cli::array &lt;System::Object ^&gt; ^ index);" />
      <MemberSignature Language="F#" Value="abstract member SetValue : obj * obj * obj[] -&gt; unit" Usage="_PropertyInfo.SetValue (obj, value, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="index" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="bd6b4-291">O objeto cujo valor da propriedade será definido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-291">The object whose property value will be set.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="bd6b4-292">O novo valor dessa propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-292">The new value for this property.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="bd6b4-293">Valores de índice opcionais para propriedades indexadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-293">Optional index values for indexed properties.</span>
          </span>
          <span data-ttu-id="bd6b4-294">Esse valor deve ser <see langword="null" /> para propriedades não indexadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-294">This value should be <see langword="null" /> for non-indexed properties.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd6b4-295">Fornece objetos COM com acesso independente de versão para o método <see cref="M:System.Reflection.PropertyInfo.SetValue(System.Object,System.Object,System.Object[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-295">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.PropertyInfo.SetValue(System.Object,System.Object,System.Object[])" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd6b4-296">Esse método é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamado a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-296">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="bd6b4-297">O <xref:System.Reflection.PropertyInfo.SetValue%2A> método define o valor da propriedade com valores de índice opcionais para propriedades do índice.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-297">The <xref:System.Reflection.PropertyInfo.SetValue%2A> method sets the value of the property with optional index values for index properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (object obj, object value, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] index, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValue(object obj, object value, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object[] index, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Object ^ obj, System::Object ^ value, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ index, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member SetValue : obj * obj * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo -&gt; unit" Usage="_PropertyInfo.SetValue (obj, value, invokeAttr, binder, index, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="index" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="bd6b4-298">O objeto cujo valor da propriedade será retornado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-298">The object whose property value will be returned.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="bd6b4-299">O novo valor dessa propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-299">The new value for this property.</span>
          </span>
        </param>
        <param name="invokeAttr">
          <span data-ttu-id="bd6b4-300">O atributo de invocação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-300">The invocation attribute.</span>
          </span>
          <span data-ttu-id="bd6b4-301">Deve ser um sinalizador de bit de <see cref="T:System.Reflection.BindingFlags" />: <see langword="InvokeMethod" />, <see langword="CreateInstance" />, <see langword="Static" />, <see langword="GetField" />, <see langword="SetField" />, <see langword="GetProperty" /> ou <see langword="SetProperty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-301">This must be a bit flag from <see cref="T:System.Reflection.BindingFlags" />: <see langword="InvokeMethod" />, <see langword="CreateInstance" />, <see langword="Static" />, <see langword="GetField" />, <see langword="SetField" />, <see langword="GetProperty" />, or <see langword="SetProperty" />.</span>
          </span>
          <span data-ttu-id="bd6b4-302">É necessário especificar um atributo de invocação adequado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-302">A suitable invocation attribute must be specified.</span>
          </span>
          <span data-ttu-id="bd6b4-303">Se um membro estático for invocado, o sinalizador <see langword="Static" /> de <see langword="BindingFlags" /> deverá ser definido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-303">If a static member will be invoked, the <see langword="Static" /> flag of <see langword="BindingFlags" /> must be set.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="bd6b4-304">Um objeto que permite a associação, a coerção de tipos de argumento, a invocação de membros e a recuperação de objetos <see cref="T:System.Reflection.MemberInfo" /> por meio da reflexão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-304">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see cref="T:System.Reflection.MemberInfo" /> objects through reflection.</span>
          </span>
          <span data-ttu-id="bd6b4-305">Caso <paramref name="binder" /> seja <see langword="null" />, o associador padrão é usado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-305">If <paramref name="binder" /> is <see langword="null" />, the default binder is used.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="bd6b4-306">Valores de índice opcionais para propriedades indexadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-306">Optional index values for indexed properties.</span>
          </span>
          <span data-ttu-id="bd6b4-307">Esse valor deve ser <see langword="null" /> para propriedades não indexadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-307">This value should be <see langword="null" /> for non-indexed properties.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="bd6b4-308">O objeto <see cref="T:System.Globalization.CultureInfo" /> que representa a cultura para a qual o recurso será localizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-308">The <see cref="T:System.Globalization.CultureInfo" /> object that represents the culture for which the resource will be localized.</span>
          </span>
          <span data-ttu-id="bd6b4-309">Observe que se o recurso não estiver localizado para essa cultura, o método <see langword="CultureInfo.Parent" /> será chamado sucessivamente pesquisando uma correspondência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-309">Note that if the resource is not localized for this culture, the <see langword="CultureInfo.Parent" /> method will be called successively in search of a match.</span>
          </span>
          <span data-ttu-id="bd6b4-310">Se esse valor for <see langword="null" />, o <see langword="CultureInfo" /> será obtido da propriedade <see langword="CultureInfo.CurrentUICulture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-310">If this value is <see langword="null" />, the <see langword="CultureInfo" /> is obtained from the <see langword="CultureInfo.CurrentUICulture" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd6b4-311">Fornece objetos COM com acesso independente de versão para o método <see cref="M:System.Reflection.FieldInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-311">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.FieldInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd6b4-312">Esse método é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamado a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-312">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="bd6b4-313">O <xref:System.Reflection.FieldInfo.SetValue%2A> método define o valor da propriedade para o objeto fornecido como o valor especificado.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-313">The <xref:System.Reflection.FieldInfo.SetValue%2A> method sets the property value for the given object to the given value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="abstract member ToString : unit -&gt; string" Usage="_PropertyInfo.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bd6b4-314">Fornece objetos COM com acesso independente de versão para o método <see cref="M:System.Object.ToString" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-314">Provides COM objects with version-independent access to the <see cref="M:System.Object.ToString" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bd6b4-315">Uma cadeia de caracteres que representa o <see cref="T:System.Object" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd6b4-315">A string that represents the current <see cref="T:System.Object" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd6b4-316">Esse método é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamado a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="bd6b4-316">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>