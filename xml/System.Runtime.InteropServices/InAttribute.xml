<Type Name="InAttribute" FullName="System.Runtime.InteropServices.InAttribute">
  <TypeSignature Language="C#" Value="public sealed class InAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit InAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.InAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class InAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class InAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Parameter, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="acf7f-101">Indica que os dados devem passar por marshaling pelo chamador para o receptor, mas não de volta para o chamador.</span><span class="sxs-lookup"><span data-stu-id="acf7f-101">Indicates that data should be marshaled from the caller to the callee, but not back to the caller.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acf7f-102">Você pode aplicar esse atributo para parâmetros.</span><span class="sxs-lookup"><span data-stu-id="acf7f-102">You can apply this attribute to parameters.</span></span>  
  
 <span data-ttu-id="acf7f-103">O <xref:System.Runtime.InteropServices.InAttribute> é opcional.</span><span class="sxs-lookup"><span data-stu-id="acf7f-103">The <xref:System.Runtime.InteropServices.InAttribute> is optional.</span></span> <span data-ttu-id="acf7f-104">Há suporte para interoperabilidade COM o atributo e apenas a invocação de plataforma.</span><span class="sxs-lookup"><span data-stu-id="acf7f-104">The attribute is supported for COM interop and platform invoke only.</span></span> <span data-ttu-id="acf7f-105">Na ausência de configurações explícitas, interop marshaler pressupõe que as regras com base no parâmetro de tipo, se o parâmetro é passado por referência ou por valor e se o tipo é blittable ou não blittable.</span><span class="sxs-lookup"><span data-stu-id="acf7f-105">In the absence of explicit settings, the interop marshaler assumes rules based on the parameter type, whether the parameter is passed by reference or by value, and whether the type is blittable or non-blittable.</span></span> <span data-ttu-id="acf7f-106">Por exemplo, a <xref:System.Text.StringBuilder> classe sempre deve para ser de entrada/saída e uma matriz de cadeias de caracteres transmitida por valor é considerada como no.</span><span class="sxs-lookup"><span data-stu-id="acf7f-106">For example, the <xref:System.Text.StringBuilder> class is always assumed to be In/Out and an array of strings passed by value is assumed to be In.</span></span>  
  
 <span data-ttu-id="acf7f-107">Não é possível aplicar o <xref:System.Runtime.InteropServices.InAttribute> para um parâmetro modificado com o c#-estilo `out` palavra-chave.</span><span class="sxs-lookup"><span data-stu-id="acf7f-107">You cannot apply the <xref:System.Runtime.InteropServices.InAttribute> to a parameter modified with the C#-styled `out` keyword.</span></span> <span data-ttu-id="acf7f-108">Para evitar confundir o `In` palavra-chave no Visual Basic com o <xref:System.Runtime.InteropServices.InAttribute>, menos o atributo, use o `<[In]>` formulário com o atributo entre colchetes.</span><span class="sxs-lookup"><span data-stu-id="acf7f-108">To avoid confusing the `In` keyword in Visual Basic with the <xref:System.Runtime.InteropServices.InAttribute>, minus Attribute, use the `<[In]>` form with brackets around the attribute.</span></span>  
  
 <span data-ttu-id="acf7f-109">Combinando o <xref:System.Runtime.InteropServices.InAttribute> e <xref:System.Runtime.InteropServices.OutAttribute> é particularmente útil quando aplicado a matrizes e formatados, não blittable tipos.</span><span class="sxs-lookup"><span data-stu-id="acf7f-109">Combining the <xref:System.Runtime.InteropServices.InAttribute> and <xref:System.Runtime.InteropServices.OutAttribute> is particularly useful when applied to arrays and formatted, non-blittable types.</span></span> <span data-ttu-id="acf7f-110">Os chamadores ver as alterações que um receptor torna a esses tipos somente quando você aplicar dois atributos.</span><span class="sxs-lookup"><span data-stu-id="acf7f-110">Callers see the changes a callee makes to these types only when you apply both attributes.</span></span> <span data-ttu-id="acf7f-111">Como esses tipos exigem a cópia durante o empacotamento, você pode usar <xref:System.Runtime.InteropServices.InAttribute> e <xref:System.Runtime.InteropServices.OutAttribute> para reduzir o desnecessárias cópias.</span><span class="sxs-lookup"><span data-stu-id="acf7f-111">Since these types require copying during marshaling, you can use <xref:System.Runtime.InteropServices.InAttribute> and <xref:System.Runtime.InteropServices.OutAttribute> to reduce unnecessary copies.</span></span>  
  
 <span data-ttu-id="acf7f-112">Para obter mais informações sobre o efeito de <xref:System.Runtime.InteropServices.InAttribute> no comportamento de marshaling, consulte [atributos direcionais](http://msdn.microsoft.com/library/241ac5b5-928e-4969-8f58-1dbc048f9ea2).</span><span class="sxs-lookup"><span data-stu-id="acf7f-112">For more information on the effect of <xref:System.Runtime.InteropServices.InAttribute> on marshaling behavior, see [Directional Attributes](http://msdn.microsoft.com/library/241ac5b5-928e-4969-8f58-1dbc048f9ea2).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="acf7f-113">O exemplo a seguir mostra como aplicar o <xref:System.Runtime.InteropServices.InAttribute> e <xref:System.Runtime.InteropServices.OutAttribute> para uma plataforma de invocar o protótipo que passa uma matriz como um parâmetro.</span><span class="sxs-lookup"><span data-stu-id="acf7f-113">The following example shows how to apply the <xref:System.Runtime.InteropServices.InAttribute> and <xref:System.Runtime.InteropServices.OutAttribute> to a platform invoke prototype that passes an array as a parameter.</span></span> <span data-ttu-id="acf7f-114">A combinação de atributos direcionais permite que o chamador ver as alterações feitas pelo receptor.</span><span class="sxs-lookup"><span data-stu-id="acf7f-114">The combination of directional attributes allows the caller to see the changes made by the callee.</span></span>  
  
 [!code-cpp[Interop InOutParameters#1](~/samples/snippets/cpp/VS_Snippets_CLR/Interop InOutParameters/CPP/inout.cpp#1)]
 [!code-csharp[Interop InOutParameters#1](~/samples/snippets/csharp/VS_Snippets_CLR/Interop InOutParameters/CS/inout.cs#1)]
 [!code-vb[Interop InOutParameters#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Interop InOutParameters/VB/inout.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.InteropServices.OutAttribute" />
    <altmember cref="T:System.Text.StringBuilder" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.InAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="acf7f-115">Inicializa uma nova instância da classe <see cref="T:System.Runtime.InteropServices.InAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="acf7f-115">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.InAttribute" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>