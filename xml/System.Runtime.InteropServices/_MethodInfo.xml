<Type Name="_MethodInfo" FullName="System.Runtime.InteropServices._MethodInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="65badab8e732aa20b9dadc7419cf271d97331efa" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52231571" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface _MethodInfo" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _MethodInfo" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices._MethodInfo" />
  <TypeSignature Language="VB.NET" Value="Public Interface _MethodInfo" />
  <TypeSignature Language="C++ CLI" Value="public interface class _MethodInfo" />
  <TypeSignature Language="F#" Value="type _MethodInfo = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.CLSCompliant(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.Guid("FFCC1B5D-ECB8-38DD-9B01-3DC8ABC2AA5F")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.TypeLibImportClass(typeof(System.Reflection.MethodInfo))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="89020-101">Expõe os membros públicos da classe <see cref="T:System.Reflection.MethodInfo" /> a código não gerenciado.</span>
      <span class="sxs-lookup">
        <span data-stu-id="89020-101">Exposes the public members of the <see cref="T:System.Reflection.MethodInfo" /> class to unmanaged code.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89020-102">Essa interface é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamado a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="89020-102">This interface is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="89020-103">Essa interface preserva a ordem de vtable do <xref:System.Reflection.MethodInfo?displayProperty=nameWithType> membros que podem ser acessados por objetos COM não gerenciados de classe.</span><span class="sxs-lookup"><span data-stu-id="89020-103">This interface preserves the vtable order of the <xref:System.Reflection.MethodInfo?displayProperty=nameWithType> class members that can be accessed by unmanaged COM objects.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodAttributes Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.MethodAttributes Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._MethodInfo.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As MethodAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MethodAttributes Attributes { System::Reflection::MethodAttributes get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Reflection.MethodAttributes" Usage="System.Runtime.InteropServices._MethodInfo.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="89020-104">Fornece acesso independente da versão para objetos COM à propriedade <see cref="P:System.Reflection.MethodBase.Attributes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-104">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MethodBase.Attributes" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="89020-105">Um dos valores de <see cref="T:System.Reflection.MethodAttributes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-105">One of the <see cref="T:System.Reflection.MethodAttributes" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89020-106">Essa propriedade é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamada a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="89020-106">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="89020-107">O <xref:System.Reflection.MethodBase.Attributes%2A> propriedade obtém os atributos associados a esse método.</span><span class="sxs-lookup"><span data-stu-id="89020-107">The <xref:System.Reflection.MethodBase.Attributes%2A> property gets the attributes associated with this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CallingConvention">
      <MemberSignature Language="C#" Value="public System.Reflection.CallingConventions CallingConvention { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.CallingConventions CallingConvention" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._MethodInfo.CallingConvention" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CallingConvention As CallingConventions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::CallingConventions CallingConvention { System::Reflection::CallingConventions get(); };" />
      <MemberSignature Language="F#" Value="member this.CallingConvention : System.Reflection.CallingConventions" Usage="System.Runtime.InteropServices._MethodInfo.CallingConvention" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.CallingConventions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="89020-108">Fornece acesso independente da versão para objetos COM à propriedade <see cref="P:System.Reflection.MethodBase.CallingConvention" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-108">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MethodBase.CallingConvention" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="89020-109">Um dos valores de <see cref="T:System.Reflection.CallingConventions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-109">One of the <see cref="T:System.Reflection.CallingConventions" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89020-110">Essa propriedade é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamada a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="89020-110">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="89020-111">O <xref:System.Reflection.MethodBase.CallingConvention%2A> propriedade obtém um valor que indica as convenções de chamada para esse método.</span><span class="sxs-lookup"><span data-stu-id="89020-111">The <xref:System.Reflection.MethodBase.CallingConvention%2A> property gets a value indicating the calling conventions for this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaringType">
      <MemberSignature Language="C#" Value="public Type DeclaringType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DeclaringType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._MethodInfo.DeclaringType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeclaringType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ DeclaringType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeclaringType : Type" Usage="System.Runtime.InteropServices._MethodInfo.DeclaringType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="89020-112">Fornece acesso independente da versão para objetos COM à propriedade <see cref="P:System.Reflection.MemberInfo.DeclaringType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-112">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MemberInfo.DeclaringType" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="89020-113">O objeto <see langword="Type" /> para a classe que declara esse membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-113">The <see langword="Type" /> object for the class that declares this member.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89020-114">Essa propriedade é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamada a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="89020-114">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="89020-115">O <xref:System.Reflection.MemberInfo.DeclaringType%2A> propriedade obtém a classe que declara esse membro.</span><span class="sxs-lookup"><span data-stu-id="89020-115">The <xref:System.Reflection.MemberInfo.DeclaringType%2A> property gets the class that declares this member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (object other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(object other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._MethodInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Object ^ other);" />
      <MemberSignature Language="F#" Value="abstract member Equals : obj -&gt; bool" Usage="_MethodInfo.Equals other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="89020-116">O <see cref="T:System.Object" /> a ser comparado com o <see cref="T:System.Object" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-116">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89020-117">Fornece objetos COM com acesso independente de versão para o método <see cref="M:System.Object.Equals(System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-117">Provides COM objects with version-independent access to the <see cref="M:System.Object.Equals(System.Object)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="89020-118">
            <see langword="true" /> se o <see cref="T:System.Object" /> especificado for igual ao <see cref="T:System.Object" /> atual; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-118">
              <see langword="true" /> if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89020-119">Esse método é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamado a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="89020-119">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="89020-120">O <xref:System.Object.Equals%2A> método determina se o especificado <xref:System.Object> é igual à atual <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="89020-120">The <xref:System.Object.Equals%2A> method determines whether the specified <xref:System.Object> is equal to the current <xref:System.Object>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBaseDefinition">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetBaseDefinition ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetBaseDefinition() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._MethodInfo.GetBaseDefinition" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBaseDefinition () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodInfo ^ GetBaseDefinition();" />
      <MemberSignature Language="F#" Value="abstract member GetBaseDefinition : unit -&gt; System.Reflection.MethodInfo" Usage="_MethodInfo.GetBaseDefinition " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="89020-121">Fornece objetos COM com acesso independente de versão para o método <see cref="M:System.Reflection.MethodInfo.GetBaseDefinition" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-121">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MethodInfo.GetBaseDefinition" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="89020-122">Um objeto <see cref="T:System.Reflection.MethodInfo" /> para a primeira implementação deste método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-122">A <see cref="T:System.Reflection.MethodInfo" /> object for the first implementation of this method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89020-123">Esse método é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamado a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="89020-123">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="89020-124">O <xref:System.Reflection.MethodInfo.GetBaseDefinition%2A> método retorna o <xref:System.Reflection.MethodInfo> do objeto para o método em que a classe base direta ou indireta em que o método representado por esta instância foi inicialmente declarados.</span><span class="sxs-lookup"><span data-stu-id="89020-124">The <xref:System.Reflection.MethodInfo.GetBaseDefinition%2A> method returns the <xref:System.Reflection.MethodInfo> object for the method on the direct or indirect base class in which the method represented by this instance was first declared.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="89020-125">Fornece objetos COM com acesso independente de versão para os métodos <see cref="Overload:System.Reflection.MemberInfo.GetCustomAttributes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-125">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.MemberInfo.GetCustomAttributes" /> methods.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89020-126">Esse método é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamado a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="89020-126">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="89020-127">O <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> membros retornam todos os atributos aplicados a esse membro.</span><span class="sxs-lookup"><span data-stu-id="89020-127">The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> members return all attributes applied to this member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public object[] GetCustomAttributes (bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetCustomAttributes(bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._MethodInfo.GetCustomAttributes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCustomAttributes (inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(bool inherit);" />
      <MemberSignature Language="F#" Value="abstract member GetCustomAttributes : bool -&gt; obj[]" Usage="_MethodInfo.GetCustomAttributes inherit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inherit">
          <span data-ttu-id="89020-128">
            <see langword="true" /> para pesquisar a cadeia de herança desse membro para encontrar os atributos; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-128">
              <see langword="true" /> to search this member's inheritance chain to find the attributes; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89020-129">Fornece objetos COM com acesso independente de versão para o método <see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-129">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="89020-130">Uma matriz que contém todos os atributos personalizados ou uma matriz com zero (0) elementos se nenhum atributo for definido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-130">An array that contains all the custom attributes, or an array with zero (0) elements if no attributes are defined.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89020-131">Esse método é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamado a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="89020-131">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="89020-132">O <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> método retorna uma matriz que contém todos os atributos personalizados.</span><span class="sxs-lookup"><span data-stu-id="89020-132">The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method returns an array containing all the custom attributes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public object[] GetCustomAttributes (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._MethodInfo.GetCustomAttributes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCustomAttributes (attributeType As Type, inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="abstract member GetCustomAttributes : Type * bool -&gt; obj[]" Usage="_MethodInfo.GetCustomAttributes (attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType">
          <span data-ttu-id="89020-133">O tipo de atributo a ser pesquisado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-133">The type of attribute to search for.</span>
          </span>
          <span data-ttu-id="89020-134">Somente os atributos que podem ser atribuídos a esse tipo são retornados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-134">Only attributes that are assignable to this type are returned.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="89020-135">
            <see langword="true" /> para pesquisar a cadeia de herança desse membro para encontrar os atributos; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-135">
              <see langword="true" /> to search this member's inheritance chain to find the attributes; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89020-136">Fornece objetos COM com acesso independente de versão para o método <see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-136">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="89020-137">Uma matriz de atributos personalizados aplicados a este membro ou uma matriz com zero (0) elementos se nenhum atributo tiver sido aplicado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-137">An array of custom attributes applied to this member, or an array with zero (0) elements if no attributes have been applied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89020-138">Esse método é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamado a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="89020-138">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="89020-139">O <xref:System.Reflection.Emit.MethodBuilder.GetCustomAttributes%2A> método retorna uma matriz de atributos personalizados identificados por <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="89020-139">The <xref:System.Reflection.Emit.MethodBuilder.GetCustomAttributes%2A> method returns an array of custom attributes identified by <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._MethodInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetHashCode();" />
      <MemberSignature Language="F#" Value="abstract member GetHashCode : unit -&gt; int" Usage="_MethodInfo.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="89020-140">Fornece objetos COM com acesso independente de versão para o método <see cref="M:System.Object.GetHashCode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-140">Provides COM objects with version-independent access to the <see cref="M:System.Object.GetHashCode" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="89020-141">O código hash da instância atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-141">The hash code for the current instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89020-142">Esse método é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamado a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="89020-142">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="89020-143">O <xref:System.Object.GetHashCode%2A> método serve como uma função de hash para um tipo específico.</span><span class="sxs-lookup"><span data-stu-id="89020-143">The <xref:System.Object.GetHashCode%2A> method serves as a hash function for a particular type.</span></span> <span data-ttu-id="89020-144"><xref:System.Object.GetHashCode%2A> é adequado para uso em algoritmos e estruturas de dados, como uma tabela de hash de hash.</span><span class="sxs-lookup"><span data-stu-id="89020-144"><xref:System.Object.GetHashCode%2A> is suitable for use in hashing algorithms and data structures such as a hash table.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIDsOfNames">
      <MemberSignature Language="C#" Value="public void GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._MethodInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId);" />
      <MemberSignature Language="F#" Value="abstract member GetIDsOfNames :  * nativeint * uint32 * uint32 * nativeint -&gt; unit" Usage="_MethodInfo.GetIDsOfNames (riid, rgszNames, cNames, lcid, rgDispId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid">
          <span data-ttu-id="89020-145">Reservado para uso futuro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-145">Reserved for future use.</span>
          </span>
          <span data-ttu-id="89020-146">Deve ser IID_NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-146">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="rgszNames">
          <span data-ttu-id="89020-147">Uma matriz de nomes a serem mapeados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-147">An array of names to be mapped.</span>
          </span>
        </param>
        <param name="cNames">
          <span data-ttu-id="89020-148">A contagem dos nomes a serem mapeados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-148">The count of the names to be mapped.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="89020-149">O contexto de localidade no qual interpretar os nomes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-149">The locale context in which to interpret the names.</span>
          </span>
        </param>
        <param name="rgDispId">
          <span data-ttu-id="89020-150">Uma matriz alocada pelo chamador que recebe os identificadores correspondentes aos nomes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-150">An array allocated by the caller that receives the identifiers corresponding to the names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89020-151">Mapeia um conjunto de nomes para um conjunto correspondente de identificadores de expedição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-151">Maps a set of names to a corresponding set of dispatch identifiers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89020-152">Esse método é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamado a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="89020-152">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span> <span data-ttu-id="89020-153">Para obter mais informações sobre `IDispatch::GetIDsOfNames`, consulte a Biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="89020-153">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMethodImplementationFlags">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodImplAttributes GetMethodImplementationFlags ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Reflection.MethodImplAttributes GetMethodImplementationFlags() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._MethodInfo.GetMethodImplementationFlags" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMethodImplementationFlags () As MethodImplAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodImplAttributes GetMethodImplementationFlags();" />
      <MemberSignature Language="F#" Value="abstract member GetMethodImplementationFlags : unit -&gt; System.Reflection.MethodImplAttributes" Usage="_MethodInfo.GetMethodImplementationFlags " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodImplAttributes</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="89020-154">Fornece objetos COM com acesso independente de versão para o método <see cref="M:System.Reflection.MethodBase.GetMethodImplementationFlags" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-154">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MethodBase.GetMethodImplementationFlags" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="89020-155">Um dos valores de <see cref="T:System.Reflection.MethodImplAttributes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-155">One of the <see cref="T:System.Reflection.MethodImplAttributes" /> values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89020-156">Esse método é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamado a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="89020-156">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="89020-157">O <xref:System.Reflection.MethodBase.GetMethodImplementationFlags%2A> membro retorna o <xref:System.Reflection.MethodImplAttributes> sinalizadores.</span><span class="sxs-lookup"><span data-stu-id="89020-157">The <xref:System.Reflection.MethodBase.GetMethodImplementationFlags%2A> member returns the <xref:System.Reflection.MethodImplAttributes> flags.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameters">
      <MemberSignature Language="C#" Value="public System.Reflection.ParameterInfo[] GetParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.ParameterInfo[] GetParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._MethodInfo.GetParameters" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParameters () As ParameterInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::ParameterInfo ^&gt; ^ GetParameters();" />
      <MemberSignature Language="F#" Value="abstract member GetParameters : unit -&gt; System.Reflection.ParameterInfo[]" Usage="_MethodInfo.GetParameters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ParameterInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="89020-158">Fornece objetos COM com acesso independente de versão para o método <see cref="M:System.Reflection.MethodBase.GetParameters" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-158">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MethodBase.GetParameters" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="89020-159">Uma matriz do tipo <see cref="T:System.Reflection.ParameterInfo" /> que contém informações que correspondem à assinatura do método (ou do construtor) refletido por essa instância.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-159">An array of type <see cref="T:System.Reflection.ParameterInfo" /> containing information that matches the signature of the method (or constructor) reflected by this instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89020-160">Esse método é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamado a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="89020-160">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="89020-161">O <xref:System.Reflection.MethodBase.GetParameters%2A> método obtém os parâmetros do método especificado ou do construtor.</span><span class="sxs-lookup"><span data-stu-id="89020-161">The <xref:System.Reflection.MethodBase.GetParameters%2A> method gets the parameters of the specified method or constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._MethodInfo.GetType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType();" />
      <MemberSignature Language="F#" Value="abstract member GetType : unit -&gt; Type" Usage="_MethodInfo.GetType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="89020-162">Fornece objetos COM com acesso independente de versão para o método <see cref="M:System.Type.GetType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-162">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetType" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="89020-163">Um objeto <see cref="T:System.Type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-163">A <see cref="T:System.Type" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89020-164">Esse método é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamado a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="89020-164">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="89020-165">O <xref:System.Type.GetType%2A> método obtém o tipo da instância atual.</span><span class="sxs-lookup"><span data-stu-id="89020-165">The <xref:System.Type.GetType%2A> method gets the type of the current instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeInfo">
      <MemberSignature Language="C#" Value="public void GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._MethodInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="F#" Value="abstract member GetTypeInfo : uint32 * uint32 * nativeint -&gt; unit" Usage="_MethodInfo.GetTypeInfo (iTInfo, lcid, ppTInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo">
          <span data-ttu-id="89020-166">As informações de tipo a serem retornadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-166">The type information to return.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="89020-167">O identificador de localidade das informações do tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-167">The locale identifier for the type information.</span>
          </span>
        </param>
        <param name="ppTInfo">
          <span data-ttu-id="89020-168">Um ponteiro para o objeto de informações de tipo solicitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-168">A pointer to the requested type information object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89020-169">Recupera as informações de tipo para um objeto, que pode ser usado para obter as informações de tipo para uma interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-169">Retrieves the type information for an object, which can be used to get the type information for an interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89020-170">Esse método é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamado a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="89020-170">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span> <span data-ttu-id="89020-171">Para obter mais informações sobre `IDispatch::GetTypeInfo`, consulte a Biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="89020-171">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeInfoCount">
      <MemberSignature Language="C#" Value="public void GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._MethodInfo.GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetTypeInfoCount (ByRef pcTInfo As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo);" />
      <MemberSignature Language="F#" Value="abstract member GetTypeInfoCount :  -&gt; unit" Usage="_MethodInfo.GetTypeInfoCount pcTInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo">
          <span data-ttu-id="89020-172">Quando este método retorna, contém um ponteiro para um local que recebe o número de interfaces de informações de tipo fornecidas pelo objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-172">When this method returns, contains a pointer to a location that receives the number of type information interfaces provided by the object.</span>
          </span>
          <span data-ttu-id="89020-173">Este parâmetro é passado não inicializado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-173">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89020-174">Retorna o número de interfaces de informações do tipo que um objeto fornece (0 ou 1).</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-174">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89020-175">Esse método é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamado a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="89020-175">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span> <span data-ttu-id="89020-176">Para obter mais informações sobre `IDispatch::GetTypeInfoCount`, consulte a Biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="89020-176">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Invoke">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="89020-177">Fornece objetos COM com acesso independente de versão para o método <see cref="Overload:System.Reflection.MethodBase.Invoke" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-177">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.MethodBase.Invoke" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89020-178">Esse método é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamado a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="89020-178">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="89020-179">O <xref:System.Reflection.ConstructorInfo.Invoke%2A> métodos invocam o construtor refletido pela instância que tem os parâmetros especificados.</span><span class="sxs-lookup"><span data-stu-id="89020-179">The <xref:System.Reflection.ConstructorInfo.Invoke%2A> methods invoke the constructor reflected by the instance that has the specified parameters.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (object obj, object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Invoke(object obj, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._MethodInfo.Invoke(System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (obj As Object, parameters As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(System::Object ^ obj, cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="abstract member Invoke : obj * obj[] -&gt; obj" Usage="_MethodInfo.Invoke (obj, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="parameters" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="89020-180">A instância que criou esse método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-180">The instance that created this method.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="89020-181">Uma lista de argumentos para o construtor ou método invocado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-181">An argument list for the invoked method or constructor.</span>
          </span>
          <span data-ttu-id="89020-182">Esta é uma matriz de objetos com o mesmo número, ordem e tipo que os parâmetros do método ou do construtor a ser invocado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-182">This is an array of objects with the same number, order, and type as the parameters of the method or constructor to be invoked.</span>
          </span>
          <span data-ttu-id="89020-183">Se não houver nenhum parâmetro, <paramref name="parameters" /> deverá ser <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-183">If there are no parameters, <paramref name="parameters" /> should be <see langword="null" />.</span>
          </span>
          <span data-ttu-id="89020-184">Se o método ou construtor representado por esta instância usar um parâmetro <see langword="ref" /> (<see langword="ByRef" /> no Visual Basic), nenhum atributo especial será necessário para esse parâmetro, a fim de invocar o método ou construtor com o uso dessa função.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-184">If the method or constructor represented by this instance takes a <see langword="ref" /> parameter (<see langword="ByRef" /> in Visual Basic), no special attribute is required for that parameter to invoke the method or constructor using this function.</span>
          </span>
          <span data-ttu-id="89020-185">Qualquer objeto nesta matriz que não for inicializado explicitamente com um valor conterá o valor padrão desse tipo de objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-185">Any object in this array that is not explicitly initialized with a value will contain the default value for that object type.</span>
          </span>
          <span data-ttu-id="89020-186">Para elementos de tipo de referência, esse valor é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-186">For reference type elements, this value is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="89020-187">Para elementos de tipo de valor, esse valor é 0, 0,0, ou <see langword="false" />, dependendo do tipo de elemento específico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-187">For value type elements, this value is 0, 0.0, or <see langword="false" />, depending on the specific element type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89020-188">Fornece objetos COM com acesso independente de versão para o método <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-188">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="89020-189">Uma instância da classe associada ao construtor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-189">An instance of the class associated with the constructor.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89020-190">O <xref:System.Reflection.MethodBase.Invoke%2A> método invoca o método ou construtor representado por esse objeto, usando os parâmetros especificados.</span><span class="sxs-lookup"><span data-stu-id="89020-190">The <xref:System.Reflection.MethodBase.Invoke%2A> method invokes the method or constructor represented by this object, using the specified parameters.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] parameters, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Invoke(object obj, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object[] parameters, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._MethodInfo.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(System::Object ^ obj, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ parameters, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member Invoke : obj * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo -&gt; obj" Usage="_MethodInfo.Invoke (obj, invokeAttr, binder, parameters, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="parameters" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="89020-191">A instância que criou esse método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-191">The instance that created this method.</span>
          </span>
        </param>
        <param name="invokeAttr">
          <span data-ttu-id="89020-192">Um dos valores <see langword="BindingFlags" /> que especifica o tipo de associação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-192">One of the <see langword="BindingFlags" /> values that specifies the type of binding.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="89020-193">Um <see langword="Binder" /> que define um conjunto de propriedades e permite a associação, coerção de tipos de argumento e invocação de membros usando a reflexão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-193">A <see langword="Binder" /> that defines a set of properties and enables the binding, coercion of argument types, and invocation of members using reflection.</span>
          </span>
          <span data-ttu-id="89020-194">Se <paramref name="binder" /> for <see langword="null" />, <see langword="Binder.DefaultBinding" /> será usado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-194">If <paramref name="binder" /> is <see langword="null" />, then <see langword="Binder.DefaultBinding" /> is used.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="89020-195">Uma matriz do tipo <see langword="Object" /> usada para fazer a correspondência do número, da ordem e do tipo dos parâmetros para esse construtor, sob as restrições de <paramref name="binder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-195">An array of type <see langword="Object" /> used to match the number, order, and type of the parameters for this constructor, under the constraints of <paramref name="binder" />.</span>
          </span>
          <span data-ttu-id="89020-196">Se esse construtor não exigir parâmetros, passe uma matriz com zero elementos, como em <c>Object[] parameters = new Object[0]</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-196">If this constructor does not require parameters, pass an array with zero elements, as in <c>Object[] parameters = new Object[0]</c>.</span>
          </span>
          <span data-ttu-id="89020-197">Qualquer objeto nesta matriz que não for inicializado explicitamente com um valor conterá o valor padrão desse tipo de objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-197">Any object in this array that is not explicitly initialized with a value will contain the default value for that object type.</span>
          </span>
          <span data-ttu-id="89020-198">Para elementos de tipo de referência, esse valor é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-198">For reference type elements, this value is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="89020-199">Para elementos de tipo de valor, esse valor é 0, 0,0, ou <see langword="false" />, dependendo do tipo de elemento específico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-199">For value type elements, this value is 0, 0.0, or <see langword="false" />, depending on the specific element type.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="89020-200">Um objeto <see cref="T:System.Globalization.CultureInfo" /> usado para reger a coerção de tipos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-200">A <see cref="T:System.Globalization.CultureInfo" /> object used to govern the coercion of types.</span>
          </span>
          <span data-ttu-id="89020-201">Se isso for <see langword="null" />, será usado o <see cref="T:System.Globalization.CultureInfo" /> para o thread atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-201">If this is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89020-202">Fornece objetos COM com acesso independente de versão para o método <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-202">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="89020-203">Uma instância da classe associada ao construtor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-203">An instance of the class associated with the constructor.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89020-204">Esse método é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamado a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="89020-204">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="89020-205">O <xref:System.Reflection.MethodBase.Invoke%2A> método invoca o construtor refletido por este <xref:System.Reflection.ConstructorInfo> objeto com os argumentos especificados, sob as restrições de especificado <xref:System.Reflection.Binder> objeto.</span><span class="sxs-lookup"><span data-stu-id="89020-205">The <xref:System.Reflection.MethodBase.Invoke%2A> method invokes the constructor reflected by this <xref:System.Reflection.ConstructorInfo> object with the specified arguments, under the constraints of the specified <xref:System.Reflection.Binder> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public void Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._MethodInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="F#" Value="abstract member Invoke : uint32 *  * uint32 * int16 * nativeint * nativeint * nativeint * nativeint -&gt; unit" Usage="_MethodInfo.Invoke (dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember">
          <span data-ttu-id="89020-206">Um identificador para o membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-206">An identifier for the member.</span>
          </span>
        </param>
        <param name="riid">
          <span data-ttu-id="89020-207">Reservado para uso futuro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-207">Reserved for future use.</span>
          </span>
          <span data-ttu-id="89020-208">Deve ser IID_NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-208">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="89020-209">O contexto de localidade no qual interpretar argumentos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-209">The locale context in which to interpret arguments.</span>
          </span>
        </param>
        <param name="wFlags">
          <span data-ttu-id="89020-210">Sinalizadores que descrevem o contexto da chamada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-210">Flags describing the context of the call.</span>
          </span>
        </param>
        <param name="pDispParams">
          <span data-ttu-id="89020-211">Um ponteiro para uma estrutura contendo uma matriz de argumentos, uma matriz de DISPIDs de argumento para argumentos nomeados e contagens para o número de elementos nas matrizes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-211">A pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span>
          </span>
        </param>
        <param name="pVarResult">
          <span data-ttu-id="89020-212">Um ponteiro para o local em que o resultado será armazenado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-212">A pointer to the location where the result will be stored.</span>
          </span>
        </param>
        <param name="pExcepInfo">
          <span data-ttu-id="89020-213">Um ponteiro para uma estrutura que contém informações de exceção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-213">A pointer to a structure that contains exception information.</span>
          </span>
        </param>
        <param name="puArgErr">
          <span data-ttu-id="89020-214">O índice do primeiro argumento que tem um erro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-214">The index of the first argument that has an error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89020-215">Fornece acesso a propriedades e métodos expostos por um objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-215">Provides access to properties and methods exposed by an object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89020-216">Esse método é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamado a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="89020-216">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span> <span data-ttu-id="89020-217">Para obter mais informações sobre `IDispatch::Invoke`, consulte a Biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="89020-217">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAbstract">
      <MemberSignature Language="C#" Value="public bool IsAbstract { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAbstract" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._MethodInfo.IsAbstract" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAbstract As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAbstract { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAbstract : bool" Usage="System.Runtime.InteropServices._MethodInfo.IsAbstract" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="89020-218">Fornece acesso independente da versão para objetos COM à propriedade <see cref="P:System.Reflection.MethodBase.IsAbstract" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-218">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MethodBase.IsAbstract" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="89020-219">
            <see langword="true" /> Se o método é abstrato; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-219">
              <see langword="true" /> if the method is abstract; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89020-220">Essa propriedade é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamada a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="89020-220">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="89020-221">O <xref:System.Reflection.MethodBase.IsAbstract%2A> propriedade obtém um valor que indica se o método é abstrato.</span><span class="sxs-lookup"><span data-stu-id="89020-221">The <xref:System.Reflection.MethodBase.IsAbstract%2A> property gets a value indicating whether the method is abstract.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAssembly">
      <MemberSignature Language="C#" Value="public bool IsAssembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAssembly" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._MethodInfo.IsAssembly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAssembly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAssembly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAssembly : bool" Usage="System.Runtime.InteropServices._MethodInfo.IsAssembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="89020-222">Fornece acesso independente da versão para objetos COM à propriedade <see cref="P:System.Reflection.MethodBase.IsAssembly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-222">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MethodBase.IsAssembly" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="89020-223">
            <see langword="true" /> Se esse método pode ser chamado por outras classes no mesmo assembly; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-223">
              <see langword="true" /> if this method can be called by other classes in the same assembly; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89020-224">Essa propriedade é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamada a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="89020-224">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="89020-225">O <xref:System.Reflection.MethodBase.IsAssembly%2A> propriedade obtém um valor que indica se esse método pode ser chamado por outras classes no mesmo assembly</span><span class="sxs-lookup"><span data-stu-id="89020-225">The <xref:System.Reflection.MethodBase.IsAssembly%2A> property gets a value indicating whether this method can be called by other classes in the same assembly</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsConstructor">
      <MemberSignature Language="C#" Value="public bool IsConstructor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsConstructor" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._MethodInfo.IsConstructor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsConstructor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsConstructor { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsConstructor : bool" Usage="System.Runtime.InteropServices._MethodInfo.IsConstructor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="89020-226">Fornece acesso independente da versão para objetos COM à propriedade <see cref="P:System.Reflection.MethodBase.IsConstructor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-226">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MethodBase.IsConstructor" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="89020-227">
            <see langword="true" /> Se esse método é um construtor; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-227">
              <see langword="true" /> if this method is a constructor; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89020-228">Essa propriedade é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamada a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="89020-228">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="89020-229">O <xref:System.Reflection.MethodBase.IsConstructor%2A> propriedade obtém um valor que indica se o método é um construtor.</span><span class="sxs-lookup"><span data-stu-id="89020-229">The <xref:System.Reflection.MethodBase.IsConstructor%2A> property gets a value indicating whether the method is a constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public bool IsDefined (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDefined(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._MethodInfo.IsDefined(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsDefined (attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsDefined(Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="abstract member IsDefined : Type * bool -&gt; bool" Usage="_MethodInfo.IsDefined (attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType">
          <span data-ttu-id="89020-230">O objeto <see langword="Type" /> ao qual os atributos personalizados são aplicados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-230">The <see langword="Type" /> object to which the custom attributes are applied.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="89020-231">
            <see langword="true" /> para pesquisar a cadeia de herança desse membro para encontrar os atributos; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-231">
              <see langword="true" /> to search this member's inheritance chain to find the attributes; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89020-232">Fornece objetos COM com acesso independente de versão para o método <see cref="M:System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-232">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="89020-233">
            <see langword="true" /> se uma ou mais instâncias do parâmetro <paramref name="attributeType" /> é aplicada a este membro; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-233">
              <see langword="true" /> if one or more instance of the <paramref name="attributeType" /> parameter is applied to this member; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89020-234">Esse método é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamado a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="89020-234">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="89020-235">O <xref:System.Reflection.MemberInfo.IsDefined%2A> membro indica se uma ou mais instâncias da `attributeType` parâmetro são aplicados a esse membro.</span><span class="sxs-lookup"><span data-stu-id="89020-235">The <xref:System.Reflection.MemberInfo.IsDefined%2A> member indicates whether one or more instances of the `attributeType` parameter are applied to this member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFamily">
      <MemberSignature Language="C#" Value="public bool IsFamily { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFamily" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._MethodInfo.IsFamily" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFamily As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFamily { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFamily : bool" Usage="System.Runtime.InteropServices._MethodInfo.IsFamily" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="89020-236">Fornece acesso independente da versão para objetos COM à propriedade <see cref="P:System.Reflection.MethodBase.IsFamily" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-236">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MethodBase.IsFamily" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="89020-237">
            <see langword="true" /> Se o acesso à classe é restrito a membros da classe em si e a membros de suas classes derivadas; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-237">
              <see langword="true" /> if access to the class is restricted to members of the class itself and to members of its derived classes; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89020-238">Essa propriedade é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamada a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="89020-238">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="89020-239">O <xref:System.Reflection.MethodBase.IsFamily%2A> propriedade obtém um valor que indica se o acesso a esse método é restrito a membros da classe e os membros de suas classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="89020-239">The <xref:System.Reflection.MethodBase.IsFamily%2A> property gets a value indicating whether access to this method is restricted to members of the class and members of its derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFamilyAndAssembly">
      <MemberSignature Language="C#" Value="public bool IsFamilyAndAssembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFamilyAndAssembly" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._MethodInfo.IsFamilyAndAssembly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFamilyAndAssembly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFamilyAndAssembly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFamilyAndAssembly : bool" Usage="System.Runtime.InteropServices._MethodInfo.IsFamilyAndAssembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="89020-240">Fornece acesso independente da versão para objetos COM à propriedade <see cref="P:System.Reflection.MethodBase.IsFamilyAndAssembly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-240">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MethodBase.IsFamilyAndAssembly" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="89020-241">
            <see langword="true" /> Se o acesso a esse método é restrito a membros da classe em si e a membros de classes derivadas que estão no mesmo assembly; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-241">
              <see langword="true" /> if access to this method is restricted to members of the class itself and to members of derived classes that are in the same assembly; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89020-242">Essa propriedade é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamada a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="89020-242">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="89020-243">O <xref:System.Reflection.MethodBase.IsFamilyAndAssembly%2A> propriedade obtém um valor que indica se esse método pode ser chamado por membros da própria classe e classes derivadas, se eles estiverem no mesmo assembly</span><span class="sxs-lookup"><span data-stu-id="89020-243">The <xref:System.Reflection.MethodBase.IsFamilyAndAssembly%2A> property gets a value indicating whether this method can be called by members of the class itself and derived classes if they are in the same assembly</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFamilyOrAssembly">
      <MemberSignature Language="C#" Value="public bool IsFamilyOrAssembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFamilyOrAssembly" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._MethodInfo.IsFamilyOrAssembly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFamilyOrAssembly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFamilyOrAssembly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFamilyOrAssembly : bool" Usage="System.Runtime.InteropServices._MethodInfo.IsFamilyOrAssembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="89020-244">Fornece acesso independente da versão para objetos COM à propriedade <see cref="P:System.Reflection.MethodBase.IsFamilyOrAssembly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-244">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MethodBase.IsFamilyOrAssembly" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="89020-245">
            <see langword="true" /> Se o acesso a esse método é restrito a membros da própria classe, os membros de classes derivadas onde quer que estejam e membros de outras classes no mesmo assembly; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-245">
              <see langword="true" /> if access to this method is restricted to members of the class itself, members of derived classes wherever they are, and members of other classes in the same assembly; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89020-246">Essa propriedade é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamada a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="89020-246">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="89020-247">O <xref:System.Reflection.MethodBase.IsFamilyOrAssembly%2A> propriedade obtém um valor que indica se esse método pode ser chamado por classes derivadas, onde quer que estejam e por todas as classes no mesmo assembly.</span><span class="sxs-lookup"><span data-stu-id="89020-247">The <xref:System.Reflection.MethodBase.IsFamilyOrAssembly%2A> property gets a value indicating whether this method can be called by derived classes, wherever they are, and by all classes in the same assembly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFinal">
      <MemberSignature Language="C#" Value="public bool IsFinal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFinal" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._MethodInfo.IsFinal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFinal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFinal { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFinal : bool" Usage="System.Runtime.InteropServices._MethodInfo.IsFinal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="89020-248">Fornece acesso independente da versão para objetos COM à propriedade <see cref="P:System.Reflection.MethodBase.IsFinal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-248">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MethodBase.IsFinal" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="89020-249">
            <see langword="true" /> se esse método for <see langword="final" />; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-249">
              <see langword="true" /> if this method is <see langword="final" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89020-250">Essa propriedade é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamada a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="89020-250">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="89020-251">O <xref:System.Reflection.MethodBase.IsFinal%2A> propriedade obtém um valor que indica se esse método é `final`.</span><span class="sxs-lookup"><span data-stu-id="89020-251">The <xref:System.Reflection.MethodBase.IsFinal%2A> property gets a value indicating whether this method is `final`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHideBySig">
      <MemberSignature Language="C#" Value="public bool IsHideBySig { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHideBySig" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._MethodInfo.IsHideBySig" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsHideBySig As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsHideBySig { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsHideBySig : bool" Usage="System.Runtime.InteropServices._MethodInfo.IsHideBySig" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="89020-252">Fornece acesso independente da versão para objetos COM à propriedade <see cref="P:System.Reflection.MethodBase.IsHideBySig" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-252">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MethodBase.IsHideBySig" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="89020-253">
            <see langword="true" /> se o membro estiver ocultado por assinatura. Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-253">
              <see langword="true" /> if the member is hidden by signature; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89020-254">Essa propriedade é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamada a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="89020-254">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="89020-255">O <xref:System.Reflection.MethodBase.IsHideBySig%2A> propriedade obtém um valor que indica se apenas um membro do mesmo nome com exatamente a mesma assinatura está oculto na classe derivada.</span><span class="sxs-lookup"><span data-stu-id="89020-255">The <xref:System.Reflection.MethodBase.IsHideBySig%2A> property gets a value indicating whether only a member of the same name with exactly the same signature is hidden in the derived class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPrivate">
      <MemberSignature Language="C#" Value="public bool IsPrivate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrivate" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._MethodInfo.IsPrivate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPrivate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPrivate { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPrivate : bool" Usage="System.Runtime.InteropServices._MethodInfo.IsPrivate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="89020-256">Fornece acesso independente da versão para objetos COM à propriedade <see cref="P:System.Reflection.MethodBase.IsPrivate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-256">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MethodBase.IsPrivate" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="89020-257">
            <see langword="true" /> Se o acesso a esse método é restrito aos outros membros da classe em si; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-257">
              <see langword="true" /> if access to this method is restricted to other members of the class itself; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89020-258">Essa propriedade é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamada a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="89020-258">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="89020-259">O <xref:System.Reflection.MethodBase.IsPrivate%2A> propriedade obtém um valor que indica se este membro é privado.</span><span class="sxs-lookup"><span data-stu-id="89020-259">The <xref:System.Reflection.MethodBase.IsPrivate%2A> property gets a value indicating whether this member is private.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPublic">
      <MemberSignature Language="C#" Value="public bool IsPublic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPublic" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._MethodInfo.IsPublic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPublic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPublic { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPublic : bool" Usage="System.Runtime.InteropServices._MethodInfo.IsPublic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="89020-260">Fornece acesso independente da versão para objetos COM à propriedade <see cref="P:System.Reflection.MethodBase.IsPublic" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-260">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MethodBase.IsPublic" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="89020-261">
            <see langword="true" /> Se esse método é público; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-261">
              <see langword="true" /> if this method is public; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89020-262">Essa propriedade é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamada a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="89020-262">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="89020-263">O <xref:System.Reflection.MethodBase.IsPublic%2A> propriedade obtém um valor que indica se esse método é público.</span><span class="sxs-lookup"><span data-stu-id="89020-263">The <xref:System.Reflection.MethodBase.IsPublic%2A> property gets a value indicating whether this method is public.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSpecialName">
      <MemberSignature Language="C#" Value="public bool IsSpecialName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSpecialName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._MethodInfo.IsSpecialName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSpecialName As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSpecialName { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSpecialName : bool" Usage="System.Runtime.InteropServices._MethodInfo.IsSpecialName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="89020-264">Fornece acesso independente da versão para objetos COM à propriedade <see cref="P:System.Reflection.MethodBase.IsSpecialName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-264">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MethodBase.IsSpecialName" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="89020-265">
            <see langword="true" /> se esse método tiver um nome especial; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-265">
              <see langword="true" /> if this method has a special name; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89020-266">Essa propriedade é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamada a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="89020-266">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="89020-267">O <xref:System.Reflection.MethodBase.IsSpecialName%2A> propriedade obtém um valor que indica se esse método tem um nome especial.</span><span class="sxs-lookup"><span data-stu-id="89020-267">The <xref:System.Reflection.MethodBase.IsSpecialName%2A> property gets a value indicating whether this method has a special name.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStatic">
      <MemberSignature Language="C#" Value="public bool IsStatic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStatic" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._MethodInfo.IsStatic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStatic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStatic { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStatic : bool" Usage="System.Runtime.InteropServices._MethodInfo.IsStatic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="89020-268">Fornece acesso independente da versão para objetos COM à propriedade <see cref="P:System.Reflection.MethodBase.IsStatic" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-268">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MethodBase.IsStatic" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="89020-269">
            <see langword="true" /> se esse método for <see langword="static" />; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-269">
              <see langword="true" /> if this method is <see langword="static" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89020-270">Essa propriedade é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamada a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="89020-270">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="89020-271">O <xref:System.Reflection.MethodBase.IsStatic%2A> propriedade obtém um valor que indica se o método é `static`.</span><span class="sxs-lookup"><span data-stu-id="89020-271">The <xref:System.Reflection.MethodBase.IsStatic%2A> property gets a value indicating whether the method is `static`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVirtual">
      <MemberSignature Language="C#" Value="public bool IsVirtual { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVirtual" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._MethodInfo.IsVirtual" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsVirtual As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsVirtual { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsVirtual : bool" Usage="System.Runtime.InteropServices._MethodInfo.IsVirtual" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="89020-272">Fornece acesso independente da versão para objetos COM à propriedade <see cref="P:System.Reflection.MethodBase.IsVirtual" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-272">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MethodBase.IsVirtual" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="89020-273">
            <see langword="true" /> se esse método for <see langword="virtual" />; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-273">
              <see langword="true" /> if this method is <see langword="virtual" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89020-274">Essa propriedade é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamada a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="89020-274">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="89020-275">O <xref:System.Reflection.MethodBase.IsVirtual%2A> propriedade obtém um valor que indica se o método é `virtual`.</span><span class="sxs-lookup"><span data-stu-id="89020-275">The <xref:System.Reflection.MethodBase.IsVirtual%2A> property gets a value indicating whether the method is `virtual`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberType">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberTypes MemberType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.MemberTypes MemberType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._MethodInfo.MemberType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemberType As MemberTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MemberTypes MemberType { System::Reflection::MemberTypes get(); };" />
      <MemberSignature Language="F#" Value="member this.MemberType : System.Reflection.MemberTypes" Usage="System.Runtime.InteropServices._MethodInfo.MemberType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="89020-276">Fornece acesso independente da versão para objetos COM à propriedade <see cref="P:System.Reflection.MemberInfo.MemberType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-276">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MemberInfo.MemberType" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="89020-277">Um do <see cref="T:System.Reflection.MemberTypes" /> valores que indicam o tipo de membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-277">One of the <see cref="T:System.Reflection.MemberTypes" /> values indicating the type of member.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89020-278">Essa propriedade é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamada a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="89020-278">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="89020-279">O <xref:System.Reflection.MemberInfo.MemberType%2A> propriedade obtém um <xref:System.Reflection.MemberTypes> valor que indica o tipo do membro – método, construtor, evento e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="89020-279">The <xref:System.Reflection.MemberInfo.MemberType%2A> property gets a <xref:System.Reflection.MemberTypes> value indicating the type of the member — method, constructor, event, and so on.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MethodHandle">
      <MemberSignature Language="C#" Value="public RuntimeMethodHandle MethodHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.RuntimeMethodHandle MethodHandle" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._MethodInfo.MethodHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MethodHandle As RuntimeMethodHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property RuntimeMethodHandle MethodHandle { RuntimeMethodHandle get(); };" />
      <MemberSignature Language="F#" Value="member this.MethodHandle : RuntimeMethodHandle" Usage="System.Runtime.InteropServices._MethodInfo.MethodHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.RuntimeMethodHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="89020-280">Fornece acesso independente da versão para objetos COM à propriedade <see cref="P:System.Reflection.MethodBase.MethodHandle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-280">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MethodBase.MethodHandle" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="89020-281">Um objeto <see cref="T:System.RuntimeMethodHandle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-281">A <see cref="T:System.RuntimeMethodHandle" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89020-282">Essa propriedade é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamada a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="89020-282">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="89020-283">O <xref:System.Reflection.MethodBase.MethodHandle%2A> propriedade obtém um identificador para a representação interna de metadados de um método.</span><span class="sxs-lookup"><span data-stu-id="89020-283">The <xref:System.Reflection.MethodBase.MethodHandle%2A> property gets a handle to the internal metadata representation of a method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._MethodInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Runtime.InteropServices._MethodInfo.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="89020-284">Fornece acesso independente da versão para objetos COM à propriedade <see cref="P:System.Reflection.MemberInfo.Name" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-284">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MemberInfo.Name" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="89020-285">Um <see cref="T:System.String" /> objeto que contém o nome desse membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-285">A <see cref="T:System.String" /> object containing the name of this member.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89020-286">Essa propriedade é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamada a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="89020-286">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="89020-287">O <xref:System.Reflection.MemberInfo.Name%2A> propriedade obtém o nome do membro atual.</span><span class="sxs-lookup"><span data-stu-id="89020-287">The <xref:System.Reflection.MemberInfo.Name%2A> property gets the name of the current member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReflectedType">
      <MemberSignature Language="C#" Value="public Type ReflectedType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ReflectedType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._MethodInfo.ReflectedType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReflectedType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ReflectedType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReflectedType : Type" Usage="System.Runtime.InteropServices._MethodInfo.ReflectedType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="89020-288">Fornece acesso independente da versão para objetos COM à propriedade <see cref="P:System.Reflection.MemberInfo.ReflectedType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-288">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MemberInfo.ReflectedType" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="89020-289">O <see langword="Type" /> objeto que foi usado para obter esse <see langword="MemberInfo" /> objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-289">The <see langword="Type" /> object that was used to obtain this <see langword="MemberInfo" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89020-290">Essa propriedade é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamada a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="89020-290">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="89020-291">O <xref:System.Reflection.MemberInfo.ReflectedType%2A> propriedade obtém o objeto de classe que foi usado para obter esse `MemberInfo` objeto.</span><span class="sxs-lookup"><span data-stu-id="89020-291">The <xref:System.Reflection.MemberInfo.ReflectedType%2A> property gets the class object that was used to obtain this `MemberInfo` object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReturnType">
      <MemberSignature Language="C#" Value="public Type ReturnType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ReturnType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._MethodInfo.ReturnType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReturnType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ReturnType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReturnType : Type" Usage="System.Runtime.InteropServices._MethodInfo.ReturnType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="89020-292">Fornece acesso independente da versão para objetos COM à propriedade <see cref="P:System.Reflection.MethodInfo.ReturnType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-292">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MethodInfo.ReturnType" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="89020-293">O tipo de retorno desse método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-293">The return type of this method.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89020-294">Essa propriedade é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamada a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="89020-294">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="89020-295">O <xref:System.Reflection.MethodInfo.ReturnType%2A> propriedade obtém o tipo de retorno desse método.</span><span class="sxs-lookup"><span data-stu-id="89020-295">The <xref:System.Reflection.MethodInfo.ReturnType%2A> property gets the return type of this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReturnTypeCustomAttributes">
      <MemberSignature Language="C#" Value="public System.Reflection.ICustomAttributeProvider ReturnTypeCustomAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.ICustomAttributeProvider ReturnTypeCustomAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._MethodInfo.ReturnTypeCustomAttributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReturnTypeCustomAttributes As ICustomAttributeProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::ICustomAttributeProvider ^ ReturnTypeCustomAttributes { System::Reflection::ICustomAttributeProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReturnTypeCustomAttributes : System.Reflection.ICustomAttributeProvider" Usage="System.Runtime.InteropServices._MethodInfo.ReturnTypeCustomAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ICustomAttributeProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="89020-296">Fornece acesso independente da versão para objetos COM à propriedade <see cref="P:System.Reflection.MethodInfo.ReturnTypeCustomAttributes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-296">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MethodInfo.ReturnTypeCustomAttributes" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="89020-297">Um <see cref="T:System.Reflection.ICustomAttributeProvider" /> objeto que representa os atributos personalizados para o tipo de retorno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-297">An <see cref="T:System.Reflection.ICustomAttributeProvider" /> object representing the custom attributes for the return type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89020-298">Essa propriedade é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamada a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="89020-298">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="89020-299">O <xref:System.Reflection.MethodInfo.ReturnTypeCustomAttributes%2A> propriedade obtém os atributos personalizados para o tipo de retorno.</span><span class="sxs-lookup"><span data-stu-id="89020-299">The <xref:System.Reflection.MethodInfo.ReturnTypeCustomAttributes%2A> property gets the custom attributes for the return type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._MethodInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="abstract member ToString : unit -&gt; string" Usage="_MethodInfo.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="89020-300">Fornece objetos COM com acesso independente de versão para o método <see cref="M:System.Object.ToString" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-300">Provides COM objects with version-independent access to the <see cref="M:System.Object.ToString" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="89020-301">Uma cadeia de caracteres que representa o <see cref="T:System.Object" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89020-301">A string that represents the current <see cref="T:System.Object" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89020-302">Esse método é para acesso a classes gerenciadas do código não gerenciado e não deve ser chamado a partir do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="89020-302">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>