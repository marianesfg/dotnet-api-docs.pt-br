<Type Name="UCOMIMoniker" FullName="System.Runtime.InteropServices.UCOMIMoniker">
  <TypeSignature Language="C#" Value="public interface UCOMIMoniker" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract UCOMIMoniker" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.UCOMIMoniker" />
  <TypeSignature Language="VB.NET" Value="Public Interface UCOMIMoniker" />
  <TypeSignature Language="C++ CLI" Value="public interface class UCOMIMoniker" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0000000f-0000-0000-c000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="43f3c-101">Use <see cref="T:System.Runtime.InteropServices.ComTypes.IMoniker" /> em seu lugar.</span><span class="sxs-lookup"><span data-stu-id="43f3c-101">Use <see cref="T:System.Runtime.InteropServices.ComTypes.IMoniker" /> instead.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43f3c-102">Para obter mais informações sobre o `IMoniker`, `IPersist`, e `IPersistStream` interfaces, consulte a biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="43f3c-102">For more information about the `IMoniker`, `IPersist`, and `IPersistStream` interfaces, see the MSDN Library.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BindToObject">
      <MemberSignature Language="C#" Value="public void BindToObject (System.Runtime.InteropServices.UCOMIBindCtx pbc, System.Runtime.InteropServices.UCOMIMoniker pmkToLeft, ref Guid riidResult, out object ppvResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BindToObject(class System.Runtime.InteropServices.UCOMIBindCtx pbc, class System.Runtime.InteropServices.UCOMIMoniker pmkToLeft, [in]valuetype System.Guid&amp; riidResult, [out] object&amp; ppvResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIMoniker.BindToObject(System.Runtime.InteropServices.UCOMIBindCtx,System.Runtime.InteropServices.UCOMIMoniker,System.Guid@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BindToObject (pbc As UCOMIBindCtx, pmkToLeft As UCOMIMoniker, ByRef riidResult As Guid, ByRef ppvResult As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BindToObject(System::Runtime::InteropServices::UCOMIBindCtx ^ pbc, System::Runtime::InteropServices::UCOMIMoniker ^ pmkToLeft, Guid % riidResult, [Runtime::InteropServices::Out] System::Object ^ % ppvResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pbc" Type="System.Runtime.InteropServices.UCOMIBindCtx" />
        <Parameter Name="pmkToLeft" Type="System.Runtime.InteropServices.UCOMIMoniker" />
        <Parameter Name="riidResult" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="ppvResult" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pbc"><span data-ttu-id="43f3c-103">Uma referência à interface <see langword="IBindCtx" /> no objeto de contexto de associação usada nessa operação de associação.</span><span class="sxs-lookup"><span data-stu-id="43f3c-103">A reference to the <see langword="IBindCtx" /> interface on the bind context object used in this binding operation.</span></span></param>
        <param name="pmkToLeft"><span data-ttu-id="43f3c-104">Uma referência ao moniker à esquerda desse moniker, se o moniker fizer parte de um moniker de composição.</span><span class="sxs-lookup"><span data-stu-id="43f3c-104">A reference to the moniker to the left of this moniker, if the moniker is part of a composite moniker.</span></span></param>
        <param name="riidResult"><span data-ttu-id="43f3c-105">O IID (identificador de interface) da interface que o cliente pretende usar para se comunicar com o objeto identificado pelo moniker.</span><span class="sxs-lookup"><span data-stu-id="43f3c-105">The interface identifier (IID) of the interface the client intends to use to communicate with the object that the moniker identifies.</span></span></param>
        <param name="ppvResult"><span data-ttu-id="43f3c-106">No retorno bem-sucedido, a referência à interface solicitada pelo <c>riidResult</c>.</span><span class="sxs-lookup"><span data-stu-id="43f3c-106">On successful return, reference to the interface requested by <c>riidResult</c>.</span></span></param>
        <summary><span data-ttu-id="43f3c-107">Usa o moniker para associar o objeto que identifica.</span><span class="sxs-lookup"><span data-stu-id="43f3c-107">Uses the moniker to bind to the object it identifies.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43f3c-108">Para obter mais informações sobre `IMoniker::BindToObject`, consulte a Biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="43f3c-108">For more information about `IMoniker::BindToObject`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindToStorage">
      <MemberSignature Language="C#" Value="public void BindToStorage (System.Runtime.InteropServices.UCOMIBindCtx pbc, System.Runtime.InteropServices.UCOMIMoniker pmkToLeft, ref Guid riid, out object ppvObj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BindToStorage(class System.Runtime.InteropServices.UCOMIBindCtx pbc, class System.Runtime.InteropServices.UCOMIMoniker pmkToLeft, [in]valuetype System.Guid&amp; riid, [out] object&amp; ppvObj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIMoniker.BindToStorage(System.Runtime.InteropServices.UCOMIBindCtx,System.Runtime.InteropServices.UCOMIMoniker,System.Guid@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BindToStorage (pbc As UCOMIBindCtx, pmkToLeft As UCOMIMoniker, ByRef riid As Guid, ByRef ppvObj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BindToStorage(System::Runtime::InteropServices::UCOMIBindCtx ^ pbc, System::Runtime::InteropServices::UCOMIMoniker ^ pmkToLeft, Guid % riid, [Runtime::InteropServices::Out] System::Object ^ % ppvObj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pbc" Type="System.Runtime.InteropServices.UCOMIBindCtx" />
        <Parameter Name="pmkToLeft" Type="System.Runtime.InteropServices.UCOMIMoniker" />
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="ppvObj" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pbc"><span data-ttu-id="43f3c-109">Uma referência à interface <see langword="IBindCtx" /> no objeto de contexto de associação usada durante essa operação de associação.</span><span class="sxs-lookup"><span data-stu-id="43f3c-109">A reference to the <see langword="IBindCtx" /> interface on the bind context object used during this binding operation.</span></span></param>
        <param name="pmkToLeft"><span data-ttu-id="43f3c-110">Uma referência ao moniker à esquerda desse moniker, se o moniker fizer parte de um moniker de composição.</span><span class="sxs-lookup"><span data-stu-id="43f3c-110">A reference to the moniker to the left of this moniker, if the moniker is part of a composite moniker.</span></span></param>
        <param name="riid"><span data-ttu-id="43f3c-111">O IID (identificador de interface) da interface de armazenamento solicitada.</span><span class="sxs-lookup"><span data-stu-id="43f3c-111">The interface identifier (IID) of the storage interface requested.</span></span></param>
        <param name="ppvObj"><span data-ttu-id="43f3c-112">No retorno bem-sucedido, uma referência à interface solicitada pelo <c>riid</c>.</span><span class="sxs-lookup"><span data-stu-id="43f3c-112">On successful return, a reference to the interface requested by <c>riid</c>.</span></span></param>
        <summary><span data-ttu-id="43f3c-113">Recupera um ponteiro de interface para o armazenamento que contém o objeto identificado pelo moniker.</span><span class="sxs-lookup"><span data-stu-id="43f3c-113">Retrieves an interface pointer to the storage that contains the object identified by the moniker.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43f3c-114">Para obter mais informações sobre `IMoniker::BindToStorage`, consulte a Biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="43f3c-114">For more information about `IMoniker::BindToStorage`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommonPrefixWith">
      <MemberSignature Language="C#" Value="public void CommonPrefixWith (System.Runtime.InteropServices.UCOMIMoniker pmkOther, out System.Runtime.InteropServices.UCOMIMoniker ppmkPrefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CommonPrefixWith(class System.Runtime.InteropServices.UCOMIMoniker pmkOther, [out] class System.Runtime.InteropServices.UCOMIMoniker&amp; ppmkPrefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIMoniker.CommonPrefixWith(System.Runtime.InteropServices.UCOMIMoniker,System.Runtime.InteropServices.UCOMIMoniker@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CommonPrefixWith (pmkOther As UCOMIMoniker, ByRef ppmkPrefix As UCOMIMoniker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CommonPrefixWith(System::Runtime::InteropServices::UCOMIMoniker ^ pmkOther, [Runtime::InteropServices::Out] System::Runtime::InteropServices::UCOMIMoniker ^ % ppmkPrefix);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pmkOther" Type="System.Runtime.InteropServices.UCOMIMoniker" />
        <Parameter Name="ppmkPrefix" Type="System.Runtime.InteropServices.UCOMIMoniker&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pmkOther"><span data-ttu-id="43f3c-115">Uma referência à interface <see langword="IMoniker" /> em outro moniker a ser comparada com isso para um prefixo comum.</span><span class="sxs-lookup"><span data-stu-id="43f3c-115">A reference to the <see langword="IMoniker" /> interface on another moniker to compare with this for a common prefix.</span></span></param>
        <param name="ppmkPrefix"><span data-ttu-id="43f3c-116">No retorno bem-sucedido, contém o moniker que é o prefixo comum desse moniker e <c>pmkOther</c>.</span><span class="sxs-lookup"><span data-stu-id="43f3c-116">On successful return, contains the moniker that is the common prefix of this moniker and <c>pmkOther</c>.</span></span></param>
        <summary><span data-ttu-id="43f3c-117">Cria um novo moniker com base no prefixo comum que esse moniker compartilha com outro moniker.</span><span class="sxs-lookup"><span data-stu-id="43f3c-117">Creates a new moniker based on the common prefix that this moniker shares with another moniker.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43f3c-118">Para obter mais informações sobre `IMoniker::CommonPrefixWith`, consulte a Biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="43f3c-118">For more information about `IMoniker::CommonPrefixWith`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComposeWith">
      <MemberSignature Language="C#" Value="public void ComposeWith (System.Runtime.InteropServices.UCOMIMoniker pmkRight, bool fOnlyIfNotGeneric, out System.Runtime.InteropServices.UCOMIMoniker ppmkComposite);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ComposeWith(class System.Runtime.InteropServices.UCOMIMoniker pmkRight, bool fOnlyIfNotGeneric, [out] class System.Runtime.InteropServices.UCOMIMoniker&amp; ppmkComposite) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIMoniker.ComposeWith(System.Runtime.InteropServices.UCOMIMoniker,System.Boolean,System.Runtime.InteropServices.UCOMIMoniker@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ComposeWith (pmkRight As UCOMIMoniker, fOnlyIfNotGeneric As Boolean, ByRef ppmkComposite As UCOMIMoniker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ComposeWith(System::Runtime::InteropServices::UCOMIMoniker ^ pmkRight, bool fOnlyIfNotGeneric, [Runtime::InteropServices::Out] System::Runtime::InteropServices::UCOMIMoniker ^ % ppmkComposite);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pmkRight" Type="System.Runtime.InteropServices.UCOMIMoniker" />
        <Parameter Name="fOnlyIfNotGeneric" Type="System.Boolean" />
        <Parameter Name="ppmkComposite" Type="System.Runtime.InteropServices.UCOMIMoniker&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pmkRight"><span data-ttu-id="43f3c-119">Uma referência à interface <see langword="IMoniker" /> no moniker a ser composta no final desse moniker.</span><span class="sxs-lookup"><span data-stu-id="43f3c-119">A reference to the <see langword="IMoniker" /> interface on the moniker to compose onto the end of this moniker.</span></span></param>
        <param name="fOnlyIfNotGeneric"><span data-ttu-id="43f3c-120">Se <see langword="true" />, o chamador exigirá uma composição não genérica, portanto, a operação continuará somente se <c>pmkRight</c> for uma classe moniker com que esse moniker pode compor de alguma maneira que não seja formar uma composição genérica.</span><span class="sxs-lookup"><span data-stu-id="43f3c-120">If <see langword="true" />, the caller requires a nongeneric composition, so the operation proceeds only if <c>pmkRight</c> is a moniker class that this moniker can compose with in some way other than forming a generic composite.</span></span> <span data-ttu-id="43f3c-121">Se <see langword="false" />, o método pode criar uma composição genérica, se necessário.</span><span class="sxs-lookup"><span data-stu-id="43f3c-121">If <see langword="false" />, the method can create a generic composite if necessary.</span></span></param>
        <param name="ppmkComposite"><span data-ttu-id="43f3c-122">No retorno bem-sucedido, uma referência ao moniker de composição resultante.</span><span class="sxs-lookup"><span data-stu-id="43f3c-122">On successful return, a reference to the resulting composite moniker.</span></span></param>
        <summary><span data-ttu-id="43f3c-123">Combina o moniker atual com outro moniker, criando um novo moniker de composição.</span><span class="sxs-lookup"><span data-stu-id="43f3c-123">Combines the current moniker with another moniker, creating a new composite moniker.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43f3c-124">Para obter mais informações sobre `IMoniker::ComposeWith`, consulte a Biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="43f3c-124">For more information about `IMoniker::ComposeWith`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enum">
      <MemberSignature Language="C#" Value="public void Enum (bool fForward, out System.Runtime.InteropServices.UCOMIEnumMoniker ppenumMoniker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Enum(bool fForward, [out] class System.Runtime.InteropServices.UCOMIEnumMoniker&amp; ppenumMoniker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIMoniker.Enum(System.Boolean,System.Runtime.InteropServices.UCOMIEnumMoniker@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Enum (fForward As Boolean, ByRef ppenumMoniker As UCOMIEnumMoniker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Enum(bool fForward, [Runtime::InteropServices::Out] System::Runtime::InteropServices::UCOMIEnumMoniker ^ % ppenumMoniker);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fForward" Type="System.Boolean" />
        <Parameter Name="ppenumMoniker" Type="System.Runtime.InteropServices.UCOMIEnumMoniker&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="fForward"><span data-ttu-id="43f3c-125">Se <see langword="true" />, enumerará os monikers da esquerda para a direita.</span><span class="sxs-lookup"><span data-stu-id="43f3c-125">If <see langword="true" />, enumerates the monikers from left to right.</span></span> <span data-ttu-id="43f3c-126">Se <see langword="false" />, enumerará da direita para esquerda.</span><span class="sxs-lookup"><span data-stu-id="43f3c-126">If <see langword="false" />, enumerates from right to left.</span></span></param>
        <param name="ppenumMoniker"><span data-ttu-id="43f3c-127">No retorno bem-sucedido, faz referência ao objeto enumerador do moniker.</span><span class="sxs-lookup"><span data-stu-id="43f3c-127">On successful return, references the enumerator object for the moniker.</span></span></param>
        <summary><span data-ttu-id="43f3c-128">Fornece um ponteiro a um enumerador que pode enumerar os componentes de um moniker de composição.</span><span class="sxs-lookup"><span data-stu-id="43f3c-128">Supplies a pointer to an enumerator that can enumerate the components of a composite moniker.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43f3c-129">Para obter mais informações sobre `IMoniker::Enum`, consulte a Biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="43f3c-129">For more information about `IMoniker::Enum`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClassID">
      <MemberSignature Language="C#" Value="public void GetClassID (out Guid pClassID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetClassID([out] valuetype System.Guid&amp; pClassID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIMoniker.GetClassID(System.Guid@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetClassID (ByRef pClassID As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetClassID([Runtime::InteropServices::Out] Guid % pClassID);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pClassID" Type="System.Guid&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pClassID"><span data-ttu-id="43f3c-130">No retorno bem-sucedido, contém o CLSID.</span><span class="sxs-lookup"><span data-stu-id="43f3c-130">On successful return, contains the CLSID.</span></span></param>
        <summary><span data-ttu-id="43f3c-131">Recupera o CLSID (identificador de classe) de um objeto.</span><span class="sxs-lookup"><span data-stu-id="43f3c-131">Retrieves the class identifier (CLSID) of an object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43f3c-132">Para obter mais informações sobre `IPersist::GetClassID`, consulte a Biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="43f3c-132">For more information about `IPersist::GetClassID`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDisplayName">
      <MemberSignature Language="C#" Value="public void GetDisplayName (System.Runtime.InteropServices.UCOMIBindCtx pbc, System.Runtime.InteropServices.UCOMIMoniker pmkToLeft, out string ppszDisplayName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetDisplayName(class System.Runtime.InteropServices.UCOMIBindCtx pbc, class System.Runtime.InteropServices.UCOMIMoniker pmkToLeft, [out] string&amp; ppszDisplayName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIMoniker.GetDisplayName(System.Runtime.InteropServices.UCOMIBindCtx,System.Runtime.InteropServices.UCOMIMoniker,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetDisplayName (pbc As UCOMIBindCtx, pmkToLeft As UCOMIMoniker, ByRef ppszDisplayName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetDisplayName(System::Runtime::InteropServices::UCOMIBindCtx ^ pbc, System::Runtime::InteropServices::UCOMIMoniker ^ pmkToLeft, [Runtime::InteropServices::Out] System::String ^ % ppszDisplayName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pbc" Type="System.Runtime.InteropServices.UCOMIBindCtx" />
        <Parameter Name="pmkToLeft" Type="System.Runtime.InteropServices.UCOMIMoniker" />
        <Parameter Name="ppszDisplayName" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pbc"><span data-ttu-id="43f3c-133">Uma referência ao contexto de associação a ser usado nessa operação.</span><span class="sxs-lookup"><span data-stu-id="43f3c-133">A reference to the bind context to use in this operation.</span></span></param>
        <param name="pmkToLeft"><span data-ttu-id="43f3c-134">Uma referência ao moniker à esquerda desse moniker, se o moniker fizer parte de um moniker de composição.</span><span class="sxs-lookup"><span data-stu-id="43f3c-134">A reference to the moniker to the left of this moniker, if the moniker is part of a composite moniker.</span></span></param>
        <param name="ppszDisplayName"><span data-ttu-id="43f3c-135">No retorno bem-sucedido, contém a cadeia de caracteres de nome de exibição.</span><span class="sxs-lookup"><span data-stu-id="43f3c-135">On successful return, contains the display name string.</span></span></param>
        <summary><span data-ttu-id="43f3c-136">Obtém o nome de exibição, que é uma representação legível para o usuário desse moniker.</span><span class="sxs-lookup"><span data-stu-id="43f3c-136">Gets the display name, which is a user-readable representation of this moniker.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43f3c-137">Para obter mais informações sobre `IMoniker::GetDisplayName`, consulte a Biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="43f3c-137">For more information about `IMoniker::GetDisplayName`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSizeMax">
      <MemberSignature Language="C#" Value="public void GetSizeMax (out long pcbSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetSizeMax([out] int64&amp; pcbSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIMoniker.GetSizeMax(System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetSizeMax (ByRef pcbSize As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetSizeMax([Runtime::InteropServices::Out] long % pcbSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcbSize" Type="System.Int64&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcbSize"><span data-ttu-id="43f3c-138">No retorno bem-sucedido, contém um valor <see langword="long" /> que indica o tamanho em bytes do fluxo necessário para salvar esse objeto.</span><span class="sxs-lookup"><span data-stu-id="43f3c-138">On successful return, contains a <see langword="long" /> value indicating the size in bytes of the stream needed to save this object.</span></span></param>
        <summary><span data-ttu-id="43f3c-139">Retorna o tamanho em bytes do fluxo necessário para salvar o objeto.</span><span class="sxs-lookup"><span data-stu-id="43f3c-139">Returns the size in bytes of the stream needed to save the object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43f3c-140">Para obter mais informações sobre `IPersistStream::GetSizeMax`, consulte a Biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="43f3c-140">For more information about `IPersistStream::GetSizeMax`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTimeOfLastChange">
      <MemberSignature Language="C#" Value="public void GetTimeOfLastChange (System.Runtime.InteropServices.UCOMIBindCtx pbc, System.Runtime.InteropServices.UCOMIMoniker pmkToLeft, out System.Runtime.InteropServices.FILETIME pFileTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTimeOfLastChange(class System.Runtime.InteropServices.UCOMIBindCtx pbc, class System.Runtime.InteropServices.UCOMIMoniker pmkToLeft, [out] valuetype System.Runtime.InteropServices.FILETIME&amp; pFileTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIMoniker.GetTimeOfLastChange(System.Runtime.InteropServices.UCOMIBindCtx,System.Runtime.InteropServices.UCOMIMoniker,System.Runtime.InteropServices.FILETIME@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetTimeOfLastChange (pbc As UCOMIBindCtx, pmkToLeft As UCOMIMoniker, ByRef pFileTime As FILETIME)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetTimeOfLastChange(System::Runtime::InteropServices::UCOMIBindCtx ^ pbc, System::Runtime::InteropServices::UCOMIMoniker ^ pmkToLeft, [Runtime::InteropServices::Out] System::Runtime::InteropServices::FILETIME % pFileTime);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pbc" Type="System.Runtime.InteropServices.UCOMIBindCtx" />
        <Parameter Name="pmkToLeft" Type="System.Runtime.InteropServices.UCOMIMoniker" />
        <Parameter Name="pFileTime" Type="System.Runtime.InteropServices.FILETIME&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pbc"><span data-ttu-id="43f3c-141">Uma referência ao contexto de associação a ser usado nessa operação de associação.</span><span class="sxs-lookup"><span data-stu-id="43f3c-141">A reference to the bind context to be used in this binding operation.</span></span></param>
        <param name="pmkToLeft"><span data-ttu-id="43f3c-142">Uma referência ao moniker à esquerda desse moniker, se o moniker fizer parte de um moniker de composição.</span><span class="sxs-lookup"><span data-stu-id="43f3c-142">A reference to the moniker to the left of this moniker, if the moniker is part of a composite moniker.</span></span></param>
        <param name="pFileTime"><span data-ttu-id="43f3c-143">No retorno bem-sucedido, contém a hora da última alteração.</span><span class="sxs-lookup"><span data-stu-id="43f3c-143">On successful return, contains the time of last change.</span></span></param>
        <summary><span data-ttu-id="43f3c-144">Fornece um número que representa a hora em que o objeto identificado por esse moniker foi alterado pela última vez.</span><span class="sxs-lookup"><span data-stu-id="43f3c-144">Provides a number representing the time the object identified by this moniker was last changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43f3c-145">Para obter mais informações sobre `IMoniker::GetTimeOfLastChange`, consulte a Biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="43f3c-145">For more information about `IMoniker::GetTimeOfLastChange`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Hash">
      <MemberSignature Language="C#" Value="public void Hash (out int pdwHash);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Hash([out] int32&amp; pdwHash) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIMoniker.Hash(System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Hash (ByRef pdwHash As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Hash([Runtime::InteropServices::Out] int % pdwHash);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pdwHash" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pdwHash"><span data-ttu-id="43f3c-146">No retorno bem-sucedido, contém o valor de hash desse moniker.</span><span class="sxs-lookup"><span data-stu-id="43f3c-146">On successful return, contains the hash value for this moniker.</span></span></param>
        <summary><span data-ttu-id="43f3c-147">Calcula um inteiro de 32 bits usando o estado interno do moniker.</span><span class="sxs-lookup"><span data-stu-id="43f3c-147">Calculates a 32-bit integer using the internal state of the moniker.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43f3c-148">Para obter mais informações sobre `IMoniker::Hash`, consulte a Biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="43f3c-148">For more information about `IMoniker::Hash`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Inverse">
      <MemberSignature Language="C#" Value="public void Inverse (out System.Runtime.InteropServices.UCOMIMoniker ppmk);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Inverse([out] class System.Runtime.InteropServices.UCOMIMoniker&amp; ppmk) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIMoniker.Inverse(System.Runtime.InteropServices.UCOMIMoniker@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Inverse (ByRef ppmk As UCOMIMoniker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Inverse([Runtime::InteropServices::Out] System::Runtime::InteropServices::UCOMIMoniker ^ % ppmk);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ppmk" Type="System.Runtime.InteropServices.UCOMIMoniker&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="ppmk"><span data-ttu-id="43f3c-149">No retorno bem-sucedido, contém um moniker que é o inverso desse moniker.</span><span class="sxs-lookup"><span data-stu-id="43f3c-149">On successful return, contains a moniker that is the inverse of this moniker.</span></span></param>
        <summary><span data-ttu-id="43f3c-150">Fornece um moniker que, quando composto à direita desse moniker ou de uma estrutura semelhante, compõe com nada.</span><span class="sxs-lookup"><span data-stu-id="43f3c-150">Provides a moniker that, when composed to the right of this moniker or one of similar structure, composes to nothing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43f3c-151">Para obter mais informações sobre `IMoniker::Inverse`, consulte a Biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="43f3c-151">For more information about `IMoniker::Inverse`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirty">
      <MemberSignature Language="C#" Value="public int IsDirty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IsDirty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIMoniker.IsDirty" />
      <MemberSignature Language="VB.NET" Value="Public Function IsDirty () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IsDirty();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="43f3c-152">Verifica se há alterações no objeto desde que foi salvo pela última vez.</span><span class="sxs-lookup"><span data-stu-id="43f3c-152">Checks the object for changes since it was last saved.</span></span></summary>
        <returns><span data-ttu-id="43f3c-153">Um valor <see langword="S_OK" /><see langword="HRESULT" /> se o objeto tiver sido alterado; caso contrário, um valor <see langword="S_FALSE" /><see langword="HRESULT" />.</span><span class="sxs-lookup"><span data-stu-id="43f3c-153">An <see langword="S_OK" /><see langword="HRESULT" /> value if the object has changed; otherwise, an <see langword="S_FALSE" /><see langword="HRESULT" /> value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43f3c-154">Para obter mais informações sobre `IPersistStream::IsDirty`, consulte a Biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="43f3c-154">For more information about `IPersistStream::IsDirty`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEqual">
      <MemberSignature Language="C#" Value="public void IsEqual (System.Runtime.InteropServices.UCOMIMoniker pmkOtherMoniker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void IsEqual(class System.Runtime.InteropServices.UCOMIMoniker pmkOtherMoniker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIMoniker.IsEqual(System.Runtime.InteropServices.UCOMIMoniker)" />
      <MemberSignature Language="VB.NET" Value="Public Sub IsEqual (pmkOtherMoniker As UCOMIMoniker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void IsEqual(System::Runtime::InteropServices::UCOMIMoniker ^ pmkOtherMoniker);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pmkOtherMoniker" Type="System.Runtime.InteropServices.UCOMIMoniker" />
      </Parameters>
      <Docs>
        <param name="pmkOtherMoniker"><span data-ttu-id="43f3c-155">Uma referência ao moniker a ser usado para comparação.</span><span class="sxs-lookup"><span data-stu-id="43f3c-155">A reference to the moniker to be used for comparison.</span></span></param>
        <summary><span data-ttu-id="43f3c-156">Compara esse moniker com um moniker especificado e indica se eles são idênticos.</span><span class="sxs-lookup"><span data-stu-id="43f3c-156">Compares this moniker with a specified moniker and indicates whether they are identical.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43f3c-157">Para obter mais informações sobre `IMoniker::IsEqual`, consulte a Biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="43f3c-157">For more information about `IMoniker::IsEqual`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRunning">
      <MemberSignature Language="C#" Value="public void IsRunning (System.Runtime.InteropServices.UCOMIBindCtx pbc, System.Runtime.InteropServices.UCOMIMoniker pmkToLeft, System.Runtime.InteropServices.UCOMIMoniker pmkNewlyRunning);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void IsRunning(class System.Runtime.InteropServices.UCOMIBindCtx pbc, class System.Runtime.InteropServices.UCOMIMoniker pmkToLeft, class System.Runtime.InteropServices.UCOMIMoniker pmkNewlyRunning) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIMoniker.IsRunning(System.Runtime.InteropServices.UCOMIBindCtx,System.Runtime.InteropServices.UCOMIMoniker,System.Runtime.InteropServices.UCOMIMoniker)" />
      <MemberSignature Language="VB.NET" Value="Public Sub IsRunning (pbc As UCOMIBindCtx, pmkToLeft As UCOMIMoniker, pmkNewlyRunning As UCOMIMoniker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void IsRunning(System::Runtime::InteropServices::UCOMIBindCtx ^ pbc, System::Runtime::InteropServices::UCOMIMoniker ^ pmkToLeft, System::Runtime::InteropServices::UCOMIMoniker ^ pmkNewlyRunning);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pbc" Type="System.Runtime.InteropServices.UCOMIBindCtx" />
        <Parameter Name="pmkToLeft" Type="System.Runtime.InteropServices.UCOMIMoniker" />
        <Parameter Name="pmkNewlyRunning" Type="System.Runtime.InteropServices.UCOMIMoniker" />
      </Parameters>
      <Docs>
        <param name="pbc"><span data-ttu-id="43f3c-158">Uma referência ao contexto de associação a ser usado nessa operação de associação.</span><span class="sxs-lookup"><span data-stu-id="43f3c-158">A reference to the bind context to be used in this binding operation.</span></span></param>
        <param name="pmkToLeft"><span data-ttu-id="43f3c-159">Uma referência ao moniker à esquerda desse moniker, se esse moniker fizer parte de uma composição.</span><span class="sxs-lookup"><span data-stu-id="43f3c-159">A reference to the moniker to the left of this moniker if this moniker is part of a composite.</span></span></param>
        <param name="pmkNewlyRunning"><span data-ttu-id="43f3c-160">Uma referência ao moniker adicionado mais recentemente à Tabela de Objetos em Execução.</span><span class="sxs-lookup"><span data-stu-id="43f3c-160">A reference to the moniker most recently added to the Running Object Table.</span></span></param>
        <summary><span data-ttu-id="43f3c-161">Determina se o objeto identificado por esse moniker está sendo carregado e executado.</span><span class="sxs-lookup"><span data-stu-id="43f3c-161">Determines whether the object that is identified by this moniker is currently loaded and running.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43f3c-162">Para obter mais informações sobre `IMoniker::IsRunning`, consulte a Biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="43f3c-162">For more information about `IMoniker::IsRunning`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSystemMoniker">
      <MemberSignature Language="C#" Value="public void IsSystemMoniker (out int pdwMksys);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void IsSystemMoniker([out] int32&amp; pdwMksys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIMoniker.IsSystemMoniker(System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub IsSystemMoniker (ByRef pdwMksys As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void IsSystemMoniker([Runtime::InteropServices::Out] int % pdwMksys);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pdwMksys" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pdwMksys"><span data-ttu-id="43f3c-163">Um ponteiro para um inteiro que é um dos valores da enumeração <see langword="MKSYS" /> e se refere a uma das classes COM do moniker.</span><span class="sxs-lookup"><span data-stu-id="43f3c-163">A pointer to an integer that is one of the values from the <see langword="MKSYS" /> enumeration, and refers to one of the COM moniker classes.</span></span></param>
        <summary><span data-ttu-id="43f3c-164">Indica se esse moniker é de uma das classes moniker fornecidas pelo sistema.</span><span class="sxs-lookup"><span data-stu-id="43f3c-164">Indicates whether this moniker is of one of the system-supplied moniker classes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43f3c-165">Para obter detalhes sobre os valores de `MKSYS` enumeração e para obter informações sobre `IMoniker::IsSystemMoniker`, consulte a biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="43f3c-165">For details on the values of the `MKSYS` enumeration and for information about `IMoniker::IsSystemMoniker`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Runtime.InteropServices.UCOMIStream pStm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Load(class System.Runtime.InteropServices.UCOMIStream pStm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIMoniker.Load(System.Runtime.InteropServices.UCOMIStream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (pStm As UCOMIStream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Runtime::InteropServices::UCOMIStream ^ pStm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pStm" Type="System.Runtime.InteropServices.UCOMIStream" />
      </Parameters>
      <Docs>
        <param name="pStm"><span data-ttu-id="43f3c-166">Fluxo do qual o objeto é carregado.</span><span class="sxs-lookup"><span data-stu-id="43f3c-166">Stream from which the object is loaded.</span></span></param>
        <summary><span data-ttu-id="43f3c-167">Inicializa um objeto do fluxo de onde ele foi salvo anteriormente.</span><span class="sxs-lookup"><span data-stu-id="43f3c-167">Initializes an object from the stream where it was previously saved.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43f3c-168">Para obter mais informações sobre `IPersistStream::Load`, consulte a Biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="43f3c-168">For more information about `IPersistStream::Load`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseDisplayName">
      <MemberSignature Language="C#" Value="public void ParseDisplayName (System.Runtime.InteropServices.UCOMIBindCtx pbc, System.Runtime.InteropServices.UCOMIMoniker pmkToLeft, string pszDisplayName, out int pchEaten, out System.Runtime.InteropServices.UCOMIMoniker ppmkOut);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ParseDisplayName(class System.Runtime.InteropServices.UCOMIBindCtx pbc, class System.Runtime.InteropServices.UCOMIMoniker pmkToLeft, string pszDisplayName, [out] int32&amp; pchEaten, [out] class System.Runtime.InteropServices.UCOMIMoniker&amp; ppmkOut) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIMoniker.ParseDisplayName(System.Runtime.InteropServices.UCOMIBindCtx,System.Runtime.InteropServices.UCOMIMoniker,System.String,System.Int32@,System.Runtime.InteropServices.UCOMIMoniker@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ParseDisplayName (pbc As UCOMIBindCtx, pmkToLeft As UCOMIMoniker, pszDisplayName As String, ByRef pchEaten As Integer, ByRef ppmkOut As UCOMIMoniker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ParseDisplayName(System::Runtime::InteropServices::UCOMIBindCtx ^ pbc, System::Runtime::InteropServices::UCOMIMoniker ^ pmkToLeft, System::String ^ pszDisplayName, [Runtime::InteropServices::Out] int % pchEaten, [Runtime::InteropServices::Out] System::Runtime::InteropServices::UCOMIMoniker ^ % ppmkOut);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pbc" Type="System.Runtime.InteropServices.UCOMIBindCtx" />
        <Parameter Name="pmkToLeft" Type="System.Runtime.InteropServices.UCOMIMoniker" />
        <Parameter Name="pszDisplayName" Type="System.String" />
        <Parameter Name="pchEaten" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="ppmkOut" Type="System.Runtime.InteropServices.UCOMIMoniker&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pbc"><span data-ttu-id="43f3c-169">Uma referência ao contexto de associação a ser usado nessa operação de associação.</span><span class="sxs-lookup"><span data-stu-id="43f3c-169">A reference to the bind context to be used in this binding operation.</span></span></param>
        <param name="pmkToLeft"><span data-ttu-id="43f3c-170">Uma referência ao moniker que foi criado fora do nome de exibição até este ponto.</span><span class="sxs-lookup"><span data-stu-id="43f3c-170">A reference to the moniker that has been built out of the display name up to this point.</span></span></param>
        <param name="pszDisplayName"><span data-ttu-id="43f3c-171">Uma referência à cadeia de caracteres que contém o nome de exibição restante a ser analisado.</span><span class="sxs-lookup"><span data-stu-id="43f3c-171">A reference to the string containing the remaining display name to parse.</span></span></param>
        <param name="pchEaten"><span data-ttu-id="43f3c-172">No retorno bem-sucedido, contém o número de caracteres em <c>pszDisplayName</c> que foram consumidos nesta etapa.</span><span class="sxs-lookup"><span data-stu-id="43f3c-172">On successful return, contains the number of characters in <c>pszDisplayName</c> that were consumed in this step.</span></span></param>
        <param name="ppmkOut"><span data-ttu-id="43f3c-173">Referência ao moniker criado de <c>pszDisplayName</c>.</span><span class="sxs-lookup"><span data-stu-id="43f3c-173">Reference to the moniker that was built from <c>pszDisplayName</c>.</span></span></param>
        <summary><span data-ttu-id="43f3c-174">Lê caracteres do nome de exibição especificado que entende e cria um moniker correspondente à parte lida.</span><span class="sxs-lookup"><span data-stu-id="43f3c-174">Reads as many characters of the specified display name as it understands and builds a moniker corresponding to the portion read.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43f3c-175">Para obter mais informações sobre `IMoniker::ParseDisplayName`, consulte a Biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="43f3c-175">For more information about `IMoniker::ParseDisplayName`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reduce">
      <MemberSignature Language="C#" Value="public void Reduce (System.Runtime.InteropServices.UCOMIBindCtx pbc, int dwReduceHowFar, ref System.Runtime.InteropServices.UCOMIMoniker ppmkToLeft, out System.Runtime.InteropServices.UCOMIMoniker ppmkReduced);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reduce(class System.Runtime.InteropServices.UCOMIBindCtx pbc, int32 dwReduceHowFar, class System.Runtime.InteropServices.UCOMIMoniker&amp; ppmkToLeft, [out] class System.Runtime.InteropServices.UCOMIMoniker&amp; ppmkReduced) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIMoniker.Reduce(System.Runtime.InteropServices.UCOMIBindCtx,System.Int32,System.Runtime.InteropServices.UCOMIMoniker@,System.Runtime.InteropServices.UCOMIMoniker@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reduce (pbc As UCOMIBindCtx, dwReduceHowFar As Integer, ByRef ppmkToLeft As UCOMIMoniker, ByRef ppmkReduced As UCOMIMoniker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reduce(System::Runtime::InteropServices::UCOMIBindCtx ^ pbc, int dwReduceHowFar, System::Runtime::InteropServices::UCOMIMoniker ^ % ppmkToLeft, [Runtime::InteropServices::Out] System::Runtime::InteropServices::UCOMIMoniker ^ % ppmkReduced);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pbc" Type="System.Runtime.InteropServices.UCOMIBindCtx" />
        <Parameter Name="dwReduceHowFar" Type="System.Int32" />
        <Parameter Name="ppmkToLeft" Type="System.Runtime.InteropServices.UCOMIMoniker&amp;" RefType="ref" />
        <Parameter Name="ppmkReduced" Type="System.Runtime.InteropServices.UCOMIMoniker&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pbc"><span data-ttu-id="43f3c-176">Uma referência à interface <see langword="IBindCtx" /> no contexto de associação a ser usada nessa operação de associação.</span><span class="sxs-lookup"><span data-stu-id="43f3c-176">A reference to the <see langword="IBindCtx" /> interface on the bind context to be used in this binding operation.</span></span></param>
        <param name="dwReduceHowFar"><span data-ttu-id="43f3c-177">Especifica até que ponto esse moniker deve ser reduzido.</span><span class="sxs-lookup"><span data-stu-id="43f3c-177">Specifies how far this moniker should be reduced.</span></span></param>
        <param name="ppmkToLeft"><span data-ttu-id="43f3c-178">Uma referência ao moniker à esquerda desse moniker.</span><span class="sxs-lookup"><span data-stu-id="43f3c-178">A reference to the moniker to the left of this moniker.</span></span></param>
        <param name="ppmkReduced"><span data-ttu-id="43f3c-179">No retorno bem-sucedido, uma referência ao formulário reduzido desse moniker, que pode ser <see langword="null" /> se ocorrer um erro ou se esse moniker for reduzido a nada.</span><span class="sxs-lookup"><span data-stu-id="43f3c-179">On successful return, a reference to the reduced form of this moniker, which can be <see langword="null" /> if an error occurs or if this moniker is reduced to nothing.</span></span></param>
        <summary><span data-ttu-id="43f3c-180">Retorna um moniker reduzido que é outro moniker que se refere ao mesmo objeto desse moniker, mas pode ser associado com eficiência igual ou maior.</span><span class="sxs-lookup"><span data-stu-id="43f3c-180">Returns a reduced moniker which is another moniker that refers to the same object as this moniker but can be bound with equal or greater efficiency.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43f3c-181">Para obter mais informações sobre `IMoniker::Reduce`, consulte a Biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="43f3c-181">For more information about `IMoniker::Reduce`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RelativePathTo">
      <MemberSignature Language="C#" Value="public void RelativePathTo (System.Runtime.InteropServices.UCOMIMoniker pmkOther, out System.Runtime.InteropServices.UCOMIMoniker ppmkRelPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RelativePathTo(class System.Runtime.InteropServices.UCOMIMoniker pmkOther, [out] class System.Runtime.InteropServices.UCOMIMoniker&amp; ppmkRelPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIMoniker.RelativePathTo(System.Runtime.InteropServices.UCOMIMoniker,System.Runtime.InteropServices.UCOMIMoniker@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RelativePathTo (pmkOther As UCOMIMoniker, ByRef ppmkRelPath As UCOMIMoniker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RelativePathTo(System::Runtime::InteropServices::UCOMIMoniker ^ pmkOther, [Runtime::InteropServices::Out] System::Runtime::InteropServices::UCOMIMoniker ^ % ppmkRelPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pmkOther" Type="System.Runtime.InteropServices.UCOMIMoniker" />
        <Parameter Name="ppmkRelPath" Type="System.Runtime.InteropServices.UCOMIMoniker&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pmkOther"><span data-ttu-id="43f3c-182">Uma referência ao moniker em que um caminho relativo deve ser adotado.</span><span class="sxs-lookup"><span data-stu-id="43f3c-182">A reference to the moniker to which a relative path should be taken.</span></span></param>
        <param name="ppmkRelPath"><span data-ttu-id="43f3c-183">No retorno bem-sucedido, referência ao moniker relativo.</span><span class="sxs-lookup"><span data-stu-id="43f3c-183">On successful return, reference to the relative moniker.</span></span></param>
        <summary><span data-ttu-id="43f3c-184">Fornece um moniker que, quando anexado a esse moniker (ou uma com uma estrutura semelhante), gera o moniker especificado.</span><span class="sxs-lookup"><span data-stu-id="43f3c-184">Supplies a moniker that, when appended to this moniker (or one with a similar structure), yields the specified moniker.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43f3c-185">Para obter mais informações sobre `IMoniker::RelativePath`, consulte a Biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="43f3c-185">For more information about `IMoniker::RelativePath`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.Runtime.InteropServices.UCOMIStream pStm, bool fClearDirty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save(class System.Runtime.InteropServices.UCOMIStream pStm, bool fClearDirty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIMoniker.Save(System.Runtime.InteropServices.UCOMIStream,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (pStm As UCOMIStream, fClearDirty As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::Runtime::InteropServices::UCOMIStream ^ pStm, bool fClearDirty);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pStm" Type="System.Runtime.InteropServices.UCOMIStream" />
        <Parameter Name="fClearDirty" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="pStm"><span data-ttu-id="43f3c-186">O fluxo no qual o objeto é salvo.</span><span class="sxs-lookup"><span data-stu-id="43f3c-186">The stream into which the object is saved.</span></span></param>
        <param name="fClearDirty"><span data-ttu-id="43f3c-187">Indica se é necessário limpar o sinalizador modificado após a conclusão do salvamento.</span><span class="sxs-lookup"><span data-stu-id="43f3c-187">Indicates whether to clear the modified flag after the save is complete.</span></span></param>
        <summary><span data-ttu-id="43f3c-188">Salva um objeto no fluxo especificado.</span><span class="sxs-lookup"><span data-stu-id="43f3c-188">Saves an object to the specified stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43f3c-189">Para obter mais informações sobre `IPersistStream::Save`, consulte a Biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="43f3c-189">For more information about `IPersistStream::Save`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>