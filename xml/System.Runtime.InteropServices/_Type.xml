<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="_Type.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c6da68c02b5adbe897e69251abe53d1bf839191a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c6da68c02b5adbe897e69251abe53d1bf839191a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices._Type">
          <source>Exposes the public members of the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> class to the unmanaged code.</source>
          <target state="translated">Expõe os membros públicos da classe <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> ao código não gerenciado.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>This interface is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Essa interface é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>This interface preserves the vtable order of the <ph id="ph1">&lt;xref:System.Type?displayProperty=nameWithType&gt;</ph> class members that can be accessed by unmanaged COM objects.</source>
          <target state="translated">Essa interface preserva a ordem de vtable do <ph id="ph1">&lt;xref:System.Type?displayProperty=nameWithType&gt;</ph> classe membros que podem ser acessados por objetos COM não gerenciados.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.Assembly">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.Assembly" /&gt;</ph> property.</source>
          <target state="translated">Fornece acesso independente da versão para objetos COM à propriedade <ph id="ph1">&lt;see cref="P:System.Type.Assembly" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.Assembly">
          <source>An <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> instance that describes the assembly containing the current type.</source>
          <target state="translated">Uma instância de <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> que descreve o assembly que contém o tipo atual.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.Assembly">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.Assembly">
          <source>The <ph id="ph1">&lt;xref:System.Type.Assembly%2A?displayProperty=nameWithType&gt;</ph> property gets the <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> in which the type is declared.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.Assembly%2A?displayProperty=nameWithType&gt;</ph> propriedade obtém o <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> em que o tipo é declarado.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.Assembly">
          <source>For generic types, this property gets the <ph id="ph1">&lt;xref:System.Reflection.Assembly&gt;</ph> in which the generic type is defined.</source>
          <target state="translated">Para tipos genéricos, essa propriedade obtém o <ph id="ph1">&lt;xref:System.Reflection.Assembly&gt;</ph> em que o tipo genérico é definido.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.AssemblyQualifiedName">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.AssemblyQualifiedName" /&gt;</ph> property.</source>
          <target state="translated">Fornece acesso independente da versão para objetos COM à propriedade <ph id="ph1">&lt;see cref="P:System.Type.AssemblyQualifiedName" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.AssemblyQualifiedName">
          <source>The assembly-qualified name of the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>, including the name of the assembly from which the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> was loaded.</source>
          <target state="translated">O nome qualificado de assembly do <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>, incluindo o nome do assembly do qual o <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> foi carregado.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.AssemblyQualifiedName">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.AssemblyQualifiedName">
          <source>The <ph id="ph1">&lt;xref:System.Type.AssemblyQualifiedName%2A?displayProperty=nameWithType&gt;</ph> property gets the assembly-qualified name of the <ph id="ph2">&lt;xref:System.Type&gt;</ph>, including the name of the assembly from which the <ph id="ph3">&lt;xref:System.Type&gt;</ph> was loaded.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.AssemblyQualifiedName%2A?displayProperty=nameWithType&gt;</ph> propriedade obtém o nome qualificado de assembly do <ph id="ph2">&lt;xref:System.Type&gt;</ph>, incluindo o nome do assembly do qual o <ph id="ph3">&lt;xref:System.Type&gt;</ph> foi carregado.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.Attributes">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.Attributes" /&gt;</ph> property.</source>
          <target state="translated">Fornece acesso independente da versão para objetos COM à propriedade <ph id="ph1">&lt;see cref="P:System.Type.Attributes" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.Attributes">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.TypeAttributes" /&gt;</ph> object representing the attribute set of the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>, unless the <ph id="ph3">&lt;see cref="T:System.Type" /&gt;</ph> represents a generic type parameter, in which case the value is unspecified.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Reflection.TypeAttributes" /&gt;</ph> que representa o conjunto de atributos do <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>, a menos que <ph id="ph3">&lt;see cref="T:System.Type" /&gt;</ph> represente um parâmetro de tipo genérico; nesse caso, o valor não é especificado.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.Attributes">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.Attributes">
          <source>The <ph id="ph1">&lt;xref:System.Type.Attributes%2A?displayProperty=nameWithType&gt;</ph> property gets the attributes associated with the <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.Attributes%2A?displayProperty=nameWithType&gt;</ph> propriedade obtém os atributos associados a <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.BaseType">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.BaseType" /&gt;</ph> property.</source>
          <target state="translated">Fornece acesso independente da versão para objetos COM à propriedade <ph id="ph1">&lt;see cref="P:System.Type.BaseType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.BaseType">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> from which the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> directly inherits, or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if the current <ph id="ph4">&lt;see langword="Type" /&gt;</ph> represents the <ph id="ph5">&lt;see cref="T:System.Object" /&gt;</ph> class.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> do qual atual <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> herda diretamente, ou <ph id="ph3">&lt;see langword="null" /&gt;</ph> se atual <ph id="ph4">&lt;see langword="Type" /&gt;</ph> representa o <ph id="ph5">&lt;see cref="T:System.Object" /&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.BaseType">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.BaseType">
          <source>The <ph id="ph1">&lt;xref:System.Type.BaseType%2A?displayProperty=nameWithType&gt;</ph> property gets the type from which the current <ph id="ph2">&lt;xref:System.Type&gt;</ph> directly inherits.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.BaseType%2A?displayProperty=nameWithType&gt;</ph> propriedade obtém o tipo do qual atual <ph id="ph2">&lt;xref:System.Type&gt;</ph> herda diretamente.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.DeclaringType">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.DeclaringType" /&gt;</ph> property.</source>
          <target state="translated">Fornece acesso independente da versão para objetos COM à propriedade <ph id="ph1">&lt;see cref="P:System.Type.DeclaringType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.DeclaringType">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> object for the class that declares this member.</source>
          <target state="translated">O objeto <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> para a classe que declara esse membro.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.DeclaringType">
          <source>If the type is a nested type, this property returns the enclosing type.</source>
          <target state="translated">Se o tipo for um tipo aninhado, essa propriedade retorna o tipo de delimitador.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.DeclaringType">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.DeclaringType">
          <source>The <ph id="ph1">&lt;xref:System.Type.DeclaringType%2A?displayProperty=nameWithType&gt;</ph> property gets the class that declares this member.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.DeclaringType%2A?displayProperty=nameWithType&gt;</ph> propriedade obtém a classe que declara a esse membro.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices._Type">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="Overload:System.Type.Equals" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="Overload:System.Type.Equals" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>The <ph id="ph1">&lt;xref:System.Type.Equals%2A?displayProperty=nameWithType&gt;</ph> method determines if the underlying system type of the current <ph id="ph2">&lt;xref:System.Type&gt;</ph> is the same as the underlying system type of the specified <ph id="ph3">&lt;xref:System.Object&gt;</ph> or <ph id="ph4">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.Equals%2A?displayProperty=nameWithType&gt;</ph> método determina se o tipo de sistema subjacente da atual <ph id="ph2">&lt;xref:System.Type&gt;</ph> é o mesmo que o tipo de sistema subjacente de especificado <ph id="ph3">&lt;xref:System.Object&gt;</ph> ou <ph id="ph4">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>.</source>
          <target state="translated">.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> whose underlying system type is to be compared with the underlying system type of the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> cujo tipo de sistema subjacente deve ser comparado com o tipo de sistema subjacente do <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> atual.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.Equals(System.Object)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.Equals(System.Object)" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="M:System.Type.Equals(System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the underlying system type of <ph id="ph2">&lt;paramref name="o" /&gt;</ph> is the same as the underlying system type of the current <ph id="ph3">&lt;see cref="T:System.Type" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o tipo de sistema subjacente do <ph id="ph2">&lt;paramref name="o" /&gt;</ph> for o mesmo que o tipo de sistema subjacente do <ph id="ph3">&lt;see cref="T:System.Type" /&gt;</ph> atual; caso contrário, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.Equals(System.Object)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Type.Equals%2A?displayProperty=nameWithType&gt;</ph> method determines if the underlying system type of the current <ph id="ph2">&lt;xref:System.Type&gt;</ph> is the same as the underlying system type of the specified <ph id="ph3">&lt;xref:System.Object&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.Equals%2A?displayProperty=nameWithType&gt;</ph> método determina se o tipo de sistema subjacente da atual <ph id="ph2">&lt;xref:System.Type&gt;</ph> é o mesmo que o tipo de sistema subjacente de especificado <ph id="ph3">&lt;xref:System.Object&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.Equals(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> whose underlying system type is to be compared with the underlying system type of the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> cujo tipo de sistema subjacente deve ser comparado com o tipo de sistema subjacente do <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> atual.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.Equals(System.Type)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.Equals(System.Type)" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="M:System.Type.Equals(System.Type)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.Equals(System.Type)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the underlying system type of <ph id="ph2">&lt;paramref name="o" /&gt;</ph> is the same as the underlying system type of the current <ph id="ph3">&lt;see cref="T:System.Type" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o tipo de sistema subjacente do <ph id="ph2">&lt;paramref name="o" /&gt;</ph> for o mesmo que o tipo de sistema subjacente do <ph id="ph3">&lt;see cref="T:System.Type" /&gt;</ph> atual; caso contrário, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.Equals(System.Type)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.Equals(System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.Type.Equals%2A?displayProperty=nameWithType&gt;</ph> method determines if the underlying system type of the current <ph id="ph2">&lt;xref:System.Type&gt;</ph> is the same as the underlying system type of the specified <ph id="ph3">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.Equals%2A?displayProperty=nameWithType&gt;</ph> método determina se o tipo de sistema subjacente da atual <ph id="ph2">&lt;xref:System.Type&gt;</ph> é o mesmo que o tipo de sistema subjacente de especificado <ph id="ph3">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Reflection.TypeFilter" /&gt;</ph> delegate that compares the interfaces against <bpt id="p1">&lt;c&gt;</bpt>filterCriteria<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O delegado de <ph id="ph1">&lt;see cref="T:System.Reflection.TypeFilter" /&gt;</ph> que compara as interfaces com <bpt id="p1">&lt;c&gt;</bpt>filterCriteria<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)">
          <source>The search criteria that determines whether an interface should be included in the returned array.</source>
          <target state="translated">Os critérios de pesquisa que determinam se uma interface deve ser incluída na matriz retornada.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="M:System.Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> objects representing a filtered list of the interfaces implemented or inherited by the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">Uma matriz de objetos <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que representa uma lista filtrada das interfaces implementadas ou herdadas pelo <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> atual.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)">
          <source>An empty array of type <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>, if no interfaces matching the filter are implemented or inherited by the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">Uma matriz vazia do tipo <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>, se nenhuma interface que corresponde ao filtro está implementada ou herdada pelo <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> atual.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Type.FindInterfaces%2A?displayProperty=nameWithType&gt;</ph> method returns an array of <ph id="ph2">&lt;xref:System.Type&gt;</ph> objects representing a filtered list of interfaces implemented or inherited by the current <ph id="ph3">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.FindInterfaces%2A?displayProperty=nameWithType&gt;</ph> método retorna uma matriz de <ph id="ph2">&lt;xref:System.Type&gt;</ph> objetos que representam uma lista filtrada de interfaces implementada ou herdada por atual <ph id="ph3">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)">
          <source>A <ph id="ph1">&lt;see langword="MemberTypes" /&gt;</ph> object indicating the type of member to search for.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see langword="MemberTypes" /&gt;</ph> indicando o tipo de membro a ser pesquisado.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)">
          <source>A bitmask comprised of one or more <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> that specify how the search is conducted.</source>
          <target state="translated">Um bitmask composto de um ou mais <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> que especificam como a pesquisa é realizada.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)">
          <source>Zero, to return <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Zero, para retornar <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)">
          <source>The delegate that does the comparisons, returning <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the member currently being inspected matches the <bpt id="p1">&lt;c&gt;</bpt>filterCriteria<ept id="p1">&lt;/c&gt;</ept> and <ph id="ph2">&lt;see langword="false" /&gt;</ph> otherwise.</source>
          <target state="translated">O delegado que faz as comparações, retornando <ph id="ph1">&lt;see langword="true" /&gt;</ph> se o membro inspecionado no momento corresponder ao <bpt id="p1">&lt;c&gt;</bpt>filterCriteria<ept id="p1">&lt;/c&gt;</ept>; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)">
          <source>You can use the <ph id="ph1">&lt;see langword="FilterAttribute" /&gt;</ph>, <ph id="ph2">&lt;see langword="FilterName" /&gt;</ph>, and <ph id="ph3">&lt;see langword="FilterNameIgnoreCase" /&gt;</ph> delegates supplied by this class.</source>
          <target state="translated">Use os delegados <ph id="ph1">&lt;see langword="FilterAttribute" /&gt;</ph>, <ph id="ph2">&lt;see langword="FilterName" /&gt;</ph> e <ph id="ph3">&lt;see langword="FilterNameIgnoreCase" /&gt;</ph> fornecidos por essa classe.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)">
          <source>The first uses the fields of <ph id="ph1">&lt;see langword="FieldAttributes" /&gt;</ph>, <ph id="ph2">&lt;see langword="MethodAttributes" /&gt;</ph>, and <ph id="ph3">&lt;see langword="MethodImplAttributes" /&gt;</ph> as search criteria, and the other two delegates use <ph id="ph4">&lt;see langword="String" /&gt;</ph> objects as the search criteria.</source>
          <target state="translated">O primeiro usa os campos <ph id="ph1">&lt;see langword="FieldAttributes" /&gt;</ph>, <ph id="ph2">&lt;see langword="MethodAttributes" /&gt;</ph> e <ph id="ph3">&lt;see langword="MethodImplAttributes" /&gt;</ph> como critérios de pesquisa e os outros dois delegados usam objetos <ph id="ph4">&lt;see langword="String" /&gt;</ph> como critérios de pesquisa.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)">
          <source>The search criteria that determines whether a member is returned in the array of <ph id="ph1">&lt;see langword="MemberInfo" /&gt;</ph> objects.</source>
          <target state="translated">Os critérios de pesquisa que determinam se um membro é retornado na matriz de objetos <ph id="ph1">&lt;see langword="MemberInfo" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)">
          <source>The fields of <ph id="ph1">&lt;see langword="FieldAttributes" /&gt;</ph>, <ph id="ph2">&lt;see langword="MethodAttributes" /&gt;</ph>, and <ph id="ph3">&lt;see langword="MethodImplAttributes" /&gt;</ph> can be used in conjunction with the <ph id="ph4">&lt;see langword="FilterAttribute" /&gt;</ph> delegate supplied by this class.</source>
          <target state="translated">Os campos de <ph id="ph1">&lt;see langword="FieldAttributes" /&gt;</ph>, <ph id="ph2">&lt;see langword="MethodAttributes" /&gt;</ph> e <ph id="ph3">&lt;see langword="MethodImplAttributes" /&gt;</ph> podem ser usados em conjunto com o delegado <ph id="ph4">&lt;see langword="FilterAttribute" /&gt;</ph> fornecido por essa classe.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="M:System.Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)">
          <source>A filtered array of <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> objects of the specified member type.</source>
          <target state="translated">Uma matriz filtrada de objetos <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> do tipo de membro especificado.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)">
          <source>An empty array of type <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph>, if the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> does not have members of type <ph id="ph3">&lt;paramref name="memberType" /&gt;</ph> that match the filter criteria.</source>
          <target state="translated">Uma matriz vazia do tipo <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph>, se o <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> atual não tiver membros do tipo <ph id="ph3">&lt;paramref name="memberType" /&gt;</ph> que correspondem aos critérios de filtro.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Type.FindMembers%2A?displayProperty=nameWithType&gt;</ph> method returns a filtered array of <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> objects of the specified member type.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.FindMembers%2A?displayProperty=nameWithType&gt;</ph> método retorna um conjunto filtrado de <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> objetos do tipo de membro especificado.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.FullName">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.FullName" /&gt;</ph> property.</source>
          <target state="translated">Fornece acesso independente da versão para objetos COM à propriedade <ph id="ph1">&lt;see cref="P:System.Type.FullName" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.FullName">
          <source>A string containing the fully qualified name of the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>, including the namespace of the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> but not the assembly.</source>
          <target state="translated">Uma cadeia de caracteres que contém o nome totalmente qualificado do <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>, incluindo o namespace do <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> , mas não o assembly.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.FullName">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.FullName">
          <source>The <ph id="ph1">&lt;xref:System.Type.FullName%2A?displayProperty=nameWithType&gt;</ph> property gets the fully qualified name of the <ph id="ph2">&lt;xref:System.Type&gt;</ph>, including the namespace of the <ph id="ph3">&lt;xref:System.Type&gt;</ph> but not the assembly.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.FullName%2A?displayProperty=nameWithType&gt;</ph> propriedade obtém o nome totalmente qualificado do <ph id="ph2">&lt;xref:System.Type&gt;</ph>, incluindo o namespace do <ph id="ph3">&lt;xref:System.Type&gt;</ph> , mas não o assembly.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetArrayRank">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetArrayRank" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="M:System.Type.GetArrayRank" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetArrayRank">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> containing the number of dimensions in the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> que contém o número de dimensões no <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> atual.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetArrayRank">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetArrayRank">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetArrayRank%2A?displayProperty=nameWithType&gt;</ph> method gets the number of dimensions in an <ph id="ph2">&lt;xref:System.Array&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.GetArrayRank%2A?displayProperty=nameWithType&gt;</ph> método obtém o número de dimensões em um <ph id="ph2">&lt;xref:System.Array&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices._Type">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="Overload:System.Type.GetConstructor" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="Overload:System.Type.GetConstructor" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetConstructor%2A?displayProperty=nameWithType&gt;</ph> method gets a specific constructor of the current <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.GetConstructor%2A?displayProperty=nameWithType&gt;</ph> método obtém um construtor específico do atual <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Type[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> objects representing the number, order, and type of the parameters for the desired constructor.</source>
          <target state="translated">Uma matriz de objetos <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que representam o número, a ordem e o tipo de parâmetros para o construtor desejado.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Type[])">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Type[])">
          <source>An empty array of <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> objects, to get a constructor that takes no parameters.</source>
          <target state="translated">Uma matriz vazia de objetos <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>, para obter um construtor que não aceita parâmetros.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Type[])">
          <source>Such an empty array is provided by the <ph id="ph1">&lt;see langword="static" /&gt;</ph> field <ph id="ph2">&lt;see cref="F:System.Type.EmptyTypes" /&gt;</ph>.</source>
          <target state="translated">Tal matriz vazia é fornecida pelo campo <ph id="ph1">&lt;see langword="static" /&gt;</ph> de <ph id="ph2">&lt;see cref="F:System.Type.EmptyTypes" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Type[])">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetConstructor(System.Type[])" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="M:System.Type.GetConstructor(System.Type[])" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Type[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.ConstructorInfo" /&gt;</ph> object representing the public instance constructor whose parameters match the types in the parameter type array, if found; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Reflection.ConstructorInfo" /&gt;</ph> que representa o construtor de instância pública cujos parâmetros correspondem aos tipos na matriz de tipos de parâmetro, se encontrado; caso contrário, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Type[])">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Type[])">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetConstructor%2A?displayProperty=nameWithType&gt;</ph> method searches for a public instance constructor whose parameters match the types in the specified array.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.GetConstructor%2A?displayProperty=nameWithType&gt;</ph> método procura um construtor de instância pública cujos parâmetros correspondem aos tipos na matriz especificada.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>A bitmask comprised of one or more <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> that specify how the search is conducted.</source>
          <target state="translated">Um bitmask composto de um ou mais <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> que especificam como a pesquisa é realizada.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>Zero, to return <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Zero, para retornar <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.Binder" /&gt;</ph> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Reflection.Binder" /&gt;</ph> que define um conjunto de propriedades e habilita a associação, que pode envolver seleção de um método sobrecarregado, coerção de tipos de argumento e invocação de um membro por meio de reflexão.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph>, to use the <ph id="ph2">&lt;see cref="P:System.Type.DefaultBinder" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph>, para usar o <ph id="ph2">&lt;see cref="P:System.Type.DefaultBinder" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> objects representing the number, order, and type of the parameters for the constructor to get.</source>
          <target state="translated">Uma matriz de objetos <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que representam o número, a ordem e o tipo de parâmetros para o construtor obter.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>An empty array of the type <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> (that is, Type[] types = new Type[0]) to get a constructor that takes no parameters.</source>
          <target state="translated">Uma matriz vazia do tipo <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> (ou seja, Type[] types = new Type[0]) para obter um construtor sem parâmetros.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source><ph id="ph1">&lt;see cref="F:System.Type.EmptyTypes" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Type.EmptyTypes" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterModifier" /&gt;</ph> objects representing the attributes associated with the corresponding element in the parameter type array.</source>
          <target state="translated">Uma matriz de objetos <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterModifier" /&gt;</ph> que representam os atributos associados ao elemento correspondente na matriz de tipo de parâmetro.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The default binder does not process this parameter.</source>
          <target state="translated">O associador padrão não processa este parâmetro.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="M:System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.ConstructorInfo" /&gt;</ph> object representing the constructor that matches the specified requirements, if found; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Reflection.ConstructorInfo" /&gt;</ph> que representa o construtor que corresponde aos requisitos especificados, se encontrados, caso contrário, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetConstructor%2A?displayProperty=nameWithType&gt;</ph> method searches for a constructor whose parameters match the specified argument types and modifiers, using the specified binding constraints.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.GetConstructor%2A?displayProperty=nameWithType&gt;</ph> método procura um construtor cujos parâmetros correspondem a tipos de argumento especificados e os modificadores, usando as restrições de associação especificada.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
          <source>A bitmask comprised of one or more <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> that specify how the search is conducted.</source>
          <target state="translated">Um bitmask composto de um ou mais <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> que especificam como a pesquisa é realizada.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
          <source>Zero, to return <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Zero, para retornar <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.Binder" /&gt;</ph> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Reflection.Binder" /&gt;</ph> que define um conjunto de propriedades e habilita a associação, que pode envolver seleção de um método sobrecarregado, coerção de tipos de argumento e invocação de um membro por meio de reflexão.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph>, to use the <ph id="ph2">&lt;see cref="P:System.Type.DefaultBinder" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph>, para usar o <ph id="ph2">&lt;see cref="P:System.Type.DefaultBinder" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.Reflection.CallingConventions" /&gt;</ph> object that specifies the set of rules to use regarding the order and layout of arguments, how the return value is passed, what registers are used for arguments, and the stack is cleaned up.</source>
          <target state="translated">O objeto <ph id="ph1">&lt;see cref="T:System.Reflection.CallingConventions" /&gt;</ph> que especifica o conjunto de regras a ser usado em relação à ordem e ao layout dos argumentos, a como o valor retornado é passado, quais registros são usados para argumentos e como a pilha é limpa.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> objects representing the number, order, and type of the parameters for the constructor to get.</source>
          <target state="translated">Uma matriz de objetos <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que representam o número, a ordem e o tipo de parâmetros para o construtor obter.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
          <source>An empty array of the type <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> (that is, Type[] types = new Type[0]) to get a constructor that takes no parameters.</source>
          <target state="translated">Uma matriz vazia do tipo <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> (ou seja, Type[] types = new Type[0]) para obter um construtor sem parâmetros.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterModifier" /&gt;</ph> objects representing the attributes associated with the corresponding element in the <bpt id="p1">&lt;c&gt;</bpt>types<ept id="p1">&lt;/c&gt;</ept> array.</source>
          <target state="translated">Uma matriz de objetos <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterModifier" /&gt;</ph> que representam os atributos associados ao elemento correspondente na matriz <bpt id="p1">&lt;c&gt;</bpt>types<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The default binder does not process this parameter.</source>
          <target state="translated">O associador padrão não processa este parâmetro.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="M:System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.ConstructorInfo" /&gt;</ph> object representing the constructor that matches the specified requirements, if found; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Reflection.ConstructorInfo" /&gt;</ph> que representa o construtor que corresponde aos requisitos especificados, se encontrados, caso contrário, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetConstructor%2A?displayProperty=nameWithType&gt;</ph> method searches for a constructor whose parameters match the specified argument types and modifiers, using the specified binding constraints and the specified calling convention.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.GetConstructor%2A?displayProperty=nameWithType&gt;</ph> método procura um construtor cujos parâmetros correspondem a tipos de argumento especificados e os modificadores, usando as restrições de associação especificada e a convenção de chamada especificada.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices._Type">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="Overload:System.Type.GetConstructors" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="Overload:System.Type.GetConstructors" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetConstructors%2A?displayProperty=nameWithType&gt;</ph> method gets the constructors of the current <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.GetConstructors%2A?displayProperty=nameWithType&gt;</ph> método obtém os construtores de atual <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructors">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetConstructors" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="M:System.Type.GetConstructors" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructors">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.ConstructorInfo" /&gt;</ph> objects representing all the public instance constructors defined for the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>, but not including the type initializer (static constructor).</source>
          <target state="translated">Uma matriz de objetos <ph id="ph1">&lt;see cref="T:System.Reflection.ConstructorInfo" /&gt;</ph> que representa todos os construtores de instância pública definidos para o <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> atual, mas não incluindo o inicializador de tipo (construtor estático).</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructors">
          <source>If no public instance constructors are defined for the current <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>, or if the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> represents a type parameter of a generic type or method definition, an empty array of type <ph id="ph3">&lt;see cref="T:System.Reflection.ConstructorInfo" /&gt;</ph> is returned.</source>
          <target state="translated">Se nenhum construtor de instância pública for definido para o <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> atual ou se o <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> atual representar um parâmetro de tipo de um tipo genérico ou uma definição de método, uma matriz vazia do tipo <ph id="ph3">&lt;see cref="T:System.Reflection.ConstructorInfo" /&gt;</ph> será retornada.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetConstructors">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetConstructors">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetConstructors%2A?displayProperty=nameWithType&gt;</ph> method returns all the public constructors defined for the current <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.GetConstructors%2A?displayProperty=nameWithType&gt;</ph> método retorna todos os construtores públicos definidos para o atual <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructors(System.Reflection.BindingFlags)">
          <source>A bitmask comprised of one or more <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> that specify how the search is conducted.</source>
          <target state="translated">Um bitmask composto de um ou mais <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> que especificam como a pesquisa é realizada.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructors(System.Reflection.BindingFlags)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructors(System.Reflection.BindingFlags)">
          <source>Zero, to return <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Zero, para retornar <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructors(System.Reflection.BindingFlags)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetConstructors(System.Reflection.BindingFlags)" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="M:System.Type.GetConstructors(System.Reflection.BindingFlags)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructors(System.Reflection.BindingFlags)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.ConstructorInfo" /&gt;</ph> objects representing all constructors defined for the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> that match the specified binding constraints, including the type initializer if it is defined.</source>
          <target state="translated">Uma matriz de objetos <ph id="ph1">&lt;see cref="T:System.Reflection.ConstructorInfo" /&gt;</ph> representando todos os construtores definidos para o <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> atual que corresponde às restrições de associação especificadas, incluindo o inicializador de tipo, se ele estiver definido.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetConstructors(System.Reflection.BindingFlags)">
          <source>Returns an empty array of type <ph id="ph1">&lt;see cref="T:System.Reflection.ConstructorInfo" /&gt;</ph> if no constructors are defined for the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>, if none of the defined constructors match the binding constraints, or if the current <ph id="ph3">&lt;see cref="T:System.Type" /&gt;</ph> represents a type parameter of a generic type or method definition.</source>
          <target state="translated">Retorna uma matriz vazia do tipo <ph id="ph1">&lt;see cref="T:System.Reflection.ConstructorInfo" /&gt;</ph> se nenhum construtor estiver definido para o <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> atual, se nenhum dos construtores definidos corresponderem às restrições de associação ou se o <ph id="ph3">&lt;see cref="T:System.Type" /&gt;</ph> atual representar um parâmetro de tipo de um tipo genérico ou definição de método.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetConstructors(System.Reflection.BindingFlags)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetConstructors(System.Reflection.BindingFlags)">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetConstructors%2A?displayProperty=nameWithType&gt;</ph> method searches for the constructors defined for the current <ph id="ph2">&lt;xref:System.Type&gt;</ph>, using the specified <ph id="ph3">&lt;xref:System.Reflection.BindingFlags&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.GetConstructors%2A?displayProperty=nameWithType&gt;</ph> método procura os construtores definidos atual <ph id="ph2">&lt;xref:System.Type&gt;</ph>, usando especificado <ph id="ph3">&lt;xref:System.Reflection.BindingFlags&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices._Type">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="Overload:System.Reflection.MemberInfo.GetCustomAttributes" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="Overload:System.Reflection.MemberInfo.GetCustomAttributes" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType&gt;</ph> method returns all attributes applied to this member.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType&gt;</ph> método retorna todos os atributos aplicados a este membro.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetCustomAttributes(System.Boolean)">
          <source>Specifies whether to search this member's inheritance chain to find the attributes.</source>
          <target state="translated">Especifica se deve-se pesquisar ou não a cadeia de herança desse membro para localizar os atributos.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetCustomAttributes(System.Boolean)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetCustomAttributes(System.Boolean)" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetCustomAttributes(System.Boolean)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetCustomAttributes(System.Boolean)">
          <source>An array of custom attributes applied to this member, or an array with zero (0) elements if no attributes have been applied.</source>
          <target state="translated">Uma matriz de atributos personalizados aplicados a este membro ou uma matriz com zero (0) elementos se nenhum atributo tiver sido aplicado.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetCustomAttributes(System.Boolean)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetCustomAttributes(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=nameWithType&gt;</ph> method returns all attributes applied to this member.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=nameWithType&gt;</ph> método retorna todos os atributos aplicados a este membro.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetCustomAttributes(System.Type,System.Boolean)">
          <source>The type of attribute to search for.</source>
          <target state="translated">O tipo de atributo a ser pesquisado.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetCustomAttributes(System.Type,System.Boolean)">
          <source>Only attributes that are assignable to this type are returned.</source>
          <target state="translated">Somente os atributos que podem ser atribuídos a esse tipo são retornados.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetCustomAttributes(System.Type,System.Boolean)">
          <source>Specifies whether to search this member's inheritance chain to find the attributes.</source>
          <target state="translated">Especifica se deve-se pesquisar ou não a cadeia de herança desse membro para localizar os atributos.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetCustomAttributes(System.Type,System.Boolean)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetCustomAttributes(System.Type,System.Boolean)">
          <source>An array of custom attributes applied to this member, or an array with zero (0) elements if no attributes have been applied.</source>
          <target state="translated">Uma matriz de atributos personalizados aplicados a este membro ou uma matriz com zero (0) elementos se nenhum atributo tiver sido aplicado.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetCustomAttributes(System.Type,System.Boolean)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetCustomAttributes(System.Type,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType&gt;</ph> method returns all attributes applied to this member.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType&gt;</ph> método retorna todos os atributos aplicados a este membro.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetDefaultMembers">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetDefaultMembers" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="M:System.Type.GetDefaultMembers" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetDefaultMembers">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> objects representing all default members of the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">Uma matriz de objetos <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> que representa todos os membros padrão do <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> atual.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetDefaultMembers">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetDefaultMembers">
          <source>An empty array of type <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph>, if the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> does not have default members.</source>
          <target state="translated">Uma matriz vazia do tipo <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph>, se o <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> atual não tiver membros padrão.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetDefaultMembers">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetDefaultMembers">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetDefaultMembers%2A?displayProperty=nameWithType&gt;</ph> method searches for the members defined for the current <ph id="ph2">&lt;xref:System.Type&gt;</ph> whose <ph id="ph3">&lt;xref:System.Reflection.DefaultMemberAttribute&gt;</ph> is set.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.GetDefaultMembers%2A?displayProperty=nameWithType&gt;</ph> método procura membros definidos atual <ph id="ph2">&lt;xref:System.Type&gt;</ph> cujo <ph id="ph3">&lt;xref:System.Reflection.DefaultMemberAttribute&gt;</ph> está definido.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetElementType">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetElementType" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="M:System.Type.GetElementType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetElementType">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the object encompassed or referred to by the current array, pointer or reference type.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> do objeto englobado ou referenciado pelo tipo de matriz, ponteiro ou tipo de referência.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetElementType">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetElementType">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph> if the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> is not an array or a pointer, or is not passed by reference, or represents a generic type or a type parameter of a generic type or method definition.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph> se o <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> atual não for uma matriz ou um ponteiro, se não for passado por referência ou, se representa um tipo genérico ou um parâmetro de tipo de um tipo genérico ou uma definição de tipo.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetElementType">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetElementType">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetElementType%2A?displayProperty=nameWithType&gt;</ph> method returns the <ph id="ph2">&lt;xref:System.Type&gt;</ph> of the object encompassed or referred to by the current array, pointer or reference type.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.GetElementType%2A?displayProperty=nameWithType&gt;</ph> método retorna o <ph id="ph2">&lt;xref:System.Type&gt;</ph> do objeto englobados ou chamado pelo tipo de referência, ponteiro ou matriz atual.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices._Type">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="Overload:System.Type.GetEvent" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="Overload:System.Type.GetEvent" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetEvent%2A?displayProperty=nameWithType&gt;</ph> method gets a specific event declared or inherited by the current <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.GetEvent%2A?displayProperty=nameWithType&gt;</ph> método obtém um evento específico declarado ou herdadas por atual <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetEvent(System.String)">
          <source>A bitmask comprised of one or more <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> that specify how the search is conducted.</source>
          <target state="translated">Um bitmask composto de um ou mais <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> que especificam como a pesquisa é realizada.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetEvent(System.String)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetEvent(System.String)">
          <source>Zero, to return <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Zero, para retornar <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetEvent(System.String)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetEvent(System.String)" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="M:System.Type.GetEvent(System.String)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetEvent(System.String)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.EventInfo" /&gt;</ph> objects representing all events that are declared or inherited by the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> that match the specified binding constraints.</source>
          <target state="translated">Uma matriz de objetos <ph id="ph1">&lt;see cref="T:System.Reflection.EventInfo" /&gt;</ph> que representam todos os eventos que são declarados ou herdados pelo <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> atual, que corresponde às restrições de associação especificadas.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetEvent(System.String)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetEvent(System.String)">
          <source>An empty array of type <ph id="ph1">&lt;see cref="T:System.Reflection.EventInfo" /&gt;</ph>, if the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> does not have events, or if none of the events match the binding constraints.</source>
          <target state="translated">Uma matriz vazia do tipo <ph id="ph1">&lt;see cref="T:System.Reflection.EventInfo" /&gt;</ph>, se o <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> atual não tiver eventos ou se nenhum dos eventos corresponderem às restrições de associação.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetEvent(System.String)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetEvent(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetEvent%2A?displayProperty=nameWithType&gt;</ph> method searches for events that are declared or inherited by the current <ph id="ph2">&lt;xref:System.Type&gt;</ph>, using the specified binding constraints.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.GetEvent%2A?displayProperty=nameWithType&gt;</ph> método procura eventos que são declarados ou herdadas por atual <ph id="ph2">&lt;xref:System.Type&gt;</ph>, usando as restrições de associação especificada.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetEvent(System.String,System.Reflection.BindingFlags)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of an event that is declared or inherited by the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que contém o nome de um evento que é declarado ou herdado pelo <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> atual.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetEvent(System.String,System.Reflection.BindingFlags)">
          <source>A bitmask comprised of one or more <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> that specify how the search is conducted.</source>
          <target state="translated">Um bitmask composto de um ou mais <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> que especificam como a pesquisa é realizada.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetEvent(System.String,System.Reflection.BindingFlags)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetEvent(System.String,System.Reflection.BindingFlags)">
          <source>Zero, to return <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Zero, para retornar <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetEvent(System.String,System.Reflection.BindingFlags)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetEvent(System.String,System.Reflection.BindingFlags)" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="M:System.Type.GetEvent(System.String,System.Reflection.BindingFlags)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetEvent(System.String,System.Reflection.BindingFlags)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Reflection.EventInfo" /&gt;</ph> object representing the specified event that is declared or inherited by the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>, if found; otherwise, <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O objeto <ph id="ph1">&lt;see cref="T:System.Reflection.EventInfo" /&gt;</ph> que representa o evento especificado, o qual é declarado ou herdado pelo <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> atual, se encontrado; caso contrário, <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetEvent(System.String,System.Reflection.BindingFlags)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetEvent(System.String,System.Reflection.BindingFlags)">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetEvent%2A?displayProperty=nameWithType&gt;</ph> method returns the <ph id="ph2">&lt;xref:System.Reflection.EventInfo&gt;</ph> object representing the specified event, using the specified binding constraints.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.GetEvent%2A?displayProperty=nameWithType&gt;</ph> método retorna o <ph id="ph2">&lt;xref:System.Reflection.EventInfo&gt;</ph> objeto que representa o evento especificado, usando as restrições de associação especificada.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices._Type">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="Overload:System.Type.GetEvents" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="Overload:System.Type.GetEvents" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetEvents%2A?displayProperty=nameWithType&gt;</ph> method gets the events that are declared or inherited by the current <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.GetEvents%2A?displayProperty=nameWithType&gt;</ph> método obtém os eventos que são declarados ou herdados por atual <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetEvents">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetEvents" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="M:System.Type.GetEvents" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetEvents">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.EventInfo" /&gt;</ph> objects representing all the public events that are declared or inherited by the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">Uma matriz de objetos <ph id="ph1">&lt;see cref="T:System.Reflection.EventInfo" /&gt;</ph> que representam todos os eventos públicos que são declarados ou herdados pelo <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> atual.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetEvents">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetEvents">
          <source>An empty array of type <ph id="ph1">&lt;see cref="T:System.Reflection.EventInfo" /&gt;</ph>, if the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> does not have public events.</source>
          <target state="translated">Uma matriz vazia do tipo <ph id="ph1">&lt;see cref="T:System.Reflection.EventInfo" /&gt;</ph>, se o <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> atual não tiver eventos públicos.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetEvents">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetEvents">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetEvents%2A?displayProperty=nameWithType&gt;</ph> method returns all the public events that are declared or inherited by the current <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.GetEvents%2A?displayProperty=nameWithType&gt;</ph> método retorna todos os eventos públicos que são declarados ou herdados por atual <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetEvents(System.Reflection.BindingFlags)">
          <source>A bitmask comprised of one or more <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> that specify how the search is conducted.</source>
          <target state="translated">Um bitmask composto de um ou mais <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> que especificam como a pesquisa é realizada.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetEvents(System.Reflection.BindingFlags)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetEvents(System.Reflection.BindingFlags)">
          <source>Zero, to return <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Zero, para retornar <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetEvents(System.Reflection.BindingFlags)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetEvents(System.Reflection.BindingFlags)" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="M:System.Type.GetEvents(System.Reflection.BindingFlags)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetEvents(System.Reflection.BindingFlags)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.EventInfo" /&gt;</ph> objects representing all events that are declared or inherited by the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> that match the specified binding constraints.</source>
          <target state="translated">Uma matriz de objetos <ph id="ph1">&lt;see cref="T:System.Reflection.EventInfo" /&gt;</ph> que representam todos os eventos que são declarados ou herdados pelo <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> atual, que corresponde às restrições de associação especificadas.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetEvents(System.Reflection.BindingFlags)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetEvents(System.Reflection.BindingFlags)">
          <source>An empty array of type <ph id="ph1">&lt;see cref="T:System.Reflection.EventInfo" /&gt;</ph>, if the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> does not have events, or if none of the events match the binding constraints.</source>
          <target state="translated">Uma matriz vazia do tipo <ph id="ph1">&lt;see cref="T:System.Reflection.EventInfo" /&gt;</ph>, se o <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> atual não tiver eventos ou se nenhum dos eventos corresponderem às restrições de associação.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetEvents(System.Reflection.BindingFlags)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetEvents(System.Reflection.BindingFlags)">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetEvents%2A?displayProperty=nameWithType&gt;</ph> method searches for events that are declared or inherited by the current <ph id="ph2">&lt;xref:System.Type&gt;</ph>, using the specified binding constraints.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.GetEvents%2A?displayProperty=nameWithType&gt;</ph> método procura eventos que são declarados ou herdadas por atual <ph id="ph2">&lt;xref:System.Type&gt;</ph>, usando as restrições de associação especificada.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices._Type">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="Overload:System.Type.GetField" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="Overload:System.Type.GetField" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetField%2A?displayProperty=nameWithType&gt;</ph> method gets a specific field of the current <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.GetField%2A?displayProperty=nameWithType&gt;</ph> método obtém um campo específico do atual <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetField(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the data field to get.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que contém o nome do campo de dados a ser obtido.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetField(System.String)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetField(System.String)" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="M:System.Type.GetField(System.String)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetField(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.FieldInfo" /&gt;</ph> object representing the public field with the specified name, if found; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Reflection.FieldInfo" /&gt;</ph> que representa o campo público com o nome especificado, se encontrado; caso contrário, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetField(System.String)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetField(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetField%2A?displayProperty=nameWithType&gt;</ph> method searches for the public field with the specified name.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.GetField%2A?displayProperty=nameWithType&gt;</ph> método pesquisa o campo público com o nome especificado.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetField(System.String,System.Reflection.BindingFlags)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the data field to get.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que contém o nome do campo de dados a ser obtido.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetField(System.String,System.Reflection.BindingFlags)">
          <source>A bitmask comprised of one or more <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> that specify how the search is conducted.</source>
          <target state="translated">Um bitmask composto de um ou mais <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> que especificam como a pesquisa é realizada.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetField(System.String,System.Reflection.BindingFlags)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetField(System.String,System.Reflection.BindingFlags)">
          <source>Zero, to return <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Zero, para retornar <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetField(System.String,System.Reflection.BindingFlags)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetField(System.String,System.Reflection.BindingFlags)" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="M:System.Type.GetField(System.String,System.Reflection.BindingFlags)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetField(System.String,System.Reflection.BindingFlags)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.FieldInfo" /&gt;</ph> object representing the field that matches the specified requirements, if found; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Reflection.FieldInfo" /&gt;</ph> que representa o campo que corresponde aos requisitos especificados, se for encontrado; caso contrário, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetField(System.String,System.Reflection.BindingFlags)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetField(System.String,System.Reflection.BindingFlags)">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetField%2A?displayProperty=nameWithType&gt;</ph> method searches for the specified field, using the specified binding constraints.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.GetField%2A?displayProperty=nameWithType&gt;</ph> método pesquisa o campo especificado, usando as restrições de associação especificada.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices._Type">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="Overload:System.Type.GetFields" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="Overload:System.Type.GetFields" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetFields%2A?displayProperty=nameWithType&gt;</ph> method gets a specific field of the current <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.GetFields%2A?displayProperty=nameWithType&gt;</ph> método obtém um campo específico do atual <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetFields">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetFields" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="M:System.Type.GetFields" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetFields">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.FieldInfo" /&gt;</ph> objects representing all the public fields defined for the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">Uma matriz de objetos <ph id="ph1">&lt;see cref="T:System.Reflection.FieldInfo" /&gt;</ph> que representa todos os campos públicos definidos para o <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> atual.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetFields">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetFields">
          <source>An empty array of type <ph id="ph1">&lt;see cref="T:System.Reflection.FieldInfo" /&gt;</ph>, if no public fields are defined for the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">Uma matriz vazia do tipo <ph id="ph1">&lt;see cref="T:System.Reflection.FieldInfo" /&gt;</ph> se nenhum campo público for definido para o <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> atual.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetFields">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetFields">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetFields%2A?displayProperty=nameWithType&gt;</ph> method returns all the public fields of the current <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.GetFields%2A?displayProperty=nameWithType&gt;</ph> método retorna todos os campos públicos do atual <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetFields(System.Reflection.BindingFlags)">
          <source>A bitmask comprised of one or more <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> that specify how the search is conducted.</source>
          <target state="translated">Um bitmask composto de um ou mais <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> que especificam como a pesquisa é realizada.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetFields(System.Reflection.BindingFlags)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetFields(System.Reflection.BindingFlags)">
          <source>Zero, to return <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Zero, para retornar <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetFields(System.Reflection.BindingFlags)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetFields(System.Reflection.BindingFlags)" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="M:System.Type.GetFields(System.Reflection.BindingFlags)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetFields(System.Reflection.BindingFlags)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.FieldInfo" /&gt;</ph> objects representing all fields defined for the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> that match the specified binding constraints.</source>
          <target state="translated">Uma matriz de objetos <ph id="ph1">&lt;see cref="T:System.Reflection.FieldInfo" /&gt;</ph> que representa todos os campos definidos para o <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> atual que corresponde às restrições de associação especificadas.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetFields(System.Reflection.BindingFlags)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetFields(System.Reflection.BindingFlags)">
          <source>An empty array of type <ph id="ph1">&lt;see cref="T:System.Reflection.FieldInfo" /&gt;</ph>, if no fields are defined for the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>, or if none of the defined fields match the binding constraints.</source>
          <target state="translated">Uma matriz vazia do tipo <ph id="ph1">&lt;see cref="T:System.Reflection.FieldInfo" /&gt;</ph> se nenhum campo estiver definido para o <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> atual ou se nenhum dos campos definidos corresponderem às restrições de associação.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetFields(System.Reflection.BindingFlags)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetFields(System.Reflection.BindingFlags)">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetFields%2A?displayProperty=nameWithType&gt;</ph> method searches for the fields defined for the current <ph id="ph2">&lt;xref:System.Type&gt;</ph>, using the specified binding constraints.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.GetFields%2A?displayProperty=nameWithType&gt;</ph> método procura os campos definidos para a atual <ph id="ph2">&lt;xref:System.Type&gt;</ph>, usando as restrições de associação especificada.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetHashCode">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetHashCode" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="M:System.Type.GetHashCode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetHashCode">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> containing the hash code for this instance.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> contendo o código hash para essa instância.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetHashCode">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetHashCode">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetHashCode%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">O método <ph id="ph1">&lt;xref:System.Type.GetHashCode%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <source>Reserved for future use.</source>
          <target state="translated">Reservado para uso futuro.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <source>Must be IID_NULL.</source>
          <target state="translated">Deve ser IID_NULL.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <source>Passed-in array of names to be mapped.</source>
          <target state="translated">Matriz passada de nomes a serem mapeados.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <source>Count of the names to be mapped.</source>
          <target state="translated">Contagem dos nomes a serem mapeados.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <source>The locale context in which to interpret the names.</source>
          <target state="translated">O contexto de localidade no qual interpretar os nomes.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <source>Caller-allocated array that receives the IDs corresponding to the names.</source>
          <target state="translated">Matriz alocada pelo chamador que recebe os IDs correspondentes aos nomes.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <source>Maps a set of names to a corresponding set of dispatch identifiers.</source>
          <target state="translated">Mapeia um conjunto de nomes para um conjunto correspondente de identificadores de expedição.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <source>For more information about <ph id="ph1">`IDispatch::GetIDsOfNames`</ph>, see the MSDN Library.</source>
          <target state="translated">Para obter mais informações sobre <ph id="ph1">`IDispatch::GetIDsOfNames`</ph>, consulte a Biblioteca MSDN.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices._Type">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="Overload:System.Type.GetInterface" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="Overload:System.Type.GetInterface" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetInterface%2A?displayProperty=nameWithType&gt;</ph> method gets a specific interface implemented or inherited by the current <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.GetInterface%2A?displayProperty=nameWithType&gt;</ph> método obtém uma interface específica implementada ou herdada por atual <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetInterface(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the interface to get.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que contém o nome da interface a ser obtida.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetInterface(System.String)">
          <source>For generic interfaces, this is the mangled name.</source>
          <target state="translated">Para interfaces genéricas, este é o nome danificado.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetInterface(System.String)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetInterface(System.String)" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="M:System.Type.GetInterface(System.String)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetInterface(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> object representing the interface with the specified name, implemented or inherited by the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>, if found; otherwise, <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que representa a interface com o nome especificado, implementado ou herdado pelo <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> atual, se encontrado; caso contrário, <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetInterface(System.String)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetInterface(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetInterface%2A?displayProperty=nameWithType&gt;</ph> method searches for the interface with the specified name..</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.GetInterface%2A?displayProperty=nameWithType&gt;</ph> pesquisas de método para a interface com o nome especificado.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetInterface(System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the interface to get.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que contém o nome da interface a ser obtida.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetInterface(System.String,System.Boolean)">
          <source>For generic interfaces, this is the mangled name.</source>
          <target state="translated">Para interfaces genéricas, este é o nome danificado.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetInterface(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to perform a case-insensitive search for <bpt id="p1">&lt;c&gt;</bpt>name<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para realizar uma pesquisa de <bpt id="p1">&lt;c&gt;</bpt>nome<ept id="p1">&lt;/c&gt;</ept> que não diferencia maiúsculas de minúsculas.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetInterface(System.String,System.Boolean)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetInterface(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> to perform a case-sensitive search for <bpt id="p1">&lt;c&gt;</bpt>name<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="false" /&gt;</ph> para realizar uma pesquisa de <bpt id="p1">&lt;c&gt;</bpt>nome<ept id="p1">&lt;/c&gt;</ept> que diferencia maiúsculas de minúsculas.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetInterface(System.String,System.Boolean)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetInterface(System.String,System.Boolean)" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="M:System.Type.GetInterface(System.String,System.Boolean)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetInterface(System.String,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> object representing the interface with the specified name, implemented or inherited by the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>, if found; otherwise, <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que representa a interface com o nome especificado, implementado ou herdado pelo <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> atual, se encontrado; caso contrário, <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetInterface(System.String,System.Boolean)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetInterface(System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetInterface%2A?displayProperty=nameWithType&gt;</ph> method searches for the specified interface, specifying whether to do a case-sensitive search.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.GetInterface%2A?displayProperty=nameWithType&gt;</ph> método pesquisa para a interface especificada, especificar se deseja fazer uma pesquisa diferencia maiusculas de minúsculas.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetInterfaceMap(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the interface of which to retrieve a mapping.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> da interface da qual recuperar um mapeamento.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetInterfaceMap(System.Type)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetInterfaceMap(System.Type)" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="M:System.Type.GetInterfaceMap(System.Type)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetInterfaceMap(System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Reflection.InterfaceMapping" /&gt;</ph> object representing the interface mapping for <ph id="ph2">&lt;paramref name="interfaceType" /&gt;</ph>.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Reflection.InterfaceMapping" /&gt;</ph> que representa o mapeamento de interface para <ph id="ph2">&lt;paramref name="interfaceType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetInterfaceMap(System.Type)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetInterfaceMap(System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetInterfaceMap%2A?displayProperty=nameWithType&gt;</ph> method returns an interface mapping for the specified interface type.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.GetInterfaceMap%2A?displayProperty=nameWithType&gt;</ph> método retorna um mapeamento de interface para o tipo de interface especificado.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetInterfaces">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetInterfaces" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="M:System.Type.GetInterfaces" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetInterfaces">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> objects representing all the interfaces implemented or inherited by the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">Uma matriz de objetos <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que representa todas as interfaces implementadas ou herdadas pela <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> atual.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetInterfaces">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetInterfaces">
          <source>An empty array of type <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>, if no interfaces are implemented or inherited by the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">Uma matriz vazia do tipo <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>, se nenhuma interface está implementada ou herdada pela <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> atual.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetInterfaces">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetInterfaces">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetInterfaces%2A?displayProperty=nameWithType&gt;</ph> method gets all the interfaces implemented or inherited by the current <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.GetInterfaces%2A?displayProperty=nameWithType&gt;</ph> método obtém todas as interfaces implementada ou herdada por atual <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices._Type">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="Overload:System.Type.GetMember" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="Overload:System.Type.GetMember" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetMember%2A?displayProperty=nameWithType&gt;</ph> method gets the specified members of the current <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.GetMember%2A?displayProperty=nameWithType&gt;</ph> método obtém os membros especificados do atual <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMember(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the public members to get.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que contém o nome dos membros públicos a serem obtidos.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMember(System.String)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetMember(System.String)" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="M:System.Type.GetMember(System.String)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMember(System.String)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> objects representing the public members with the specified name, if found; otherwise, an empty array.</source>
          <target state="translated">Uma matriz de objetos <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> que representa os membros públicos com o nome especificado, se encontrado; caso contrário, uma matriz vazia.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetMember(System.String)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetMember(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetMember%2A?displayProperty=nameWithType&gt;</ph> method searches for the public members with the specified name.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.GetMember%2A?displayProperty=nameWithType&gt;</ph> método procura os membros públicos com o nome especificado.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.BindingFlags)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the members to get.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que contém o nome dos membros a serem obtidos.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.BindingFlags)">
          <source>A bitmask comprised of one or more <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> that specify how the search is conducted.</source>
          <target state="translated">Um bitmask composto de um ou mais <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> que especificam como a pesquisa é realizada.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.BindingFlags)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.BindingFlags)">
          <source>Zero, to return an empty array.</source>
          <target state="translated">Zero, para retornar uma matriz vazia.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.BindingFlags)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetMember(System.String,System.Reflection.BindingFlags)" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="M:System.Type.GetMember(System.String,System.Reflection.BindingFlags)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.BindingFlags)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> objects representing the public members with the specified name, if found; otherwise, an empty array.</source>
          <target state="translated">Uma matriz de objetos <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> que representa os membros públicos com o nome especificado, se encontrado; caso contrário, uma matriz vazia.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.BindingFlags)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.BindingFlags)">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetMember%2A?displayProperty=nameWithType&gt;</ph> method searches for the specified members, using the specified binding constraints.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.GetMember%2A?displayProperty=nameWithType&gt;</ph> método procura os membros especificados, usando as restrições de associação especificada.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the members to get.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que contém o nome dos membros a serem obtidos.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Reflection.MemberTypes" /&gt;</ph> value to search for.</source>
          <target state="translated">O valor <ph id="ph1">&lt;see cref="T:System.Reflection.MemberTypes" /&gt;</ph> a ser pesquisado.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)">
          <source>A bitmask comprised of one or more <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> that specify how the search is conducted.</source>
          <target state="translated">Um bitmask composto de um ou mais <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> que especificam como a pesquisa é realizada.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)">
          <source>Zero, to return an empty array.</source>
          <target state="translated">Zero, para retornar uma matriz vazia.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="M:System.Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> objects representing the public members with the specified name, if found; otherwise, an empty array.</source>
          <target state="translated">Uma matriz de objetos <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> que representa os membros públicos com o nome especificado, se encontrado; caso contrário, uma matriz vazia.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetMember%2A?displayProperty=nameWithType&gt;</ph> method searches for the specified members of the specified member type, using the specified binding constraints.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.GetMember%2A?displayProperty=nameWithType&gt;</ph> método procura os membros especificados do tipo de membro especificado, usando as restrições de associação especificada.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices._Type">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="Overload:System.Type.GetMembers" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="Overload:System.Type.GetMembers" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetMembers%2A?displayProperty=nameWithType&gt;</ph> method gets the members (properties, methods, fields, events, and so on) of the current <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.GetMembers%2A?displayProperty=nameWithType&gt;</ph> método obtém os membros (propriedades, métodos, campos, eventos e assim por diante) do atual <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMembers">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetMembers" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="M:System.Type.GetMembers" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMembers">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> objects representing all the public members of the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">Uma matriz de objetos <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> que representa todos os membros públicos do <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> atual.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMembers">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMembers">
          <source>An empty array of type <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph>, if the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> does not have public members.</source>
          <target state="translated">Uma matriz vazia do tipo <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph>, se o <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> atual não tiver membros públicos.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetMembers">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetMembers">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetMembers%2A?displayProperty=nameWithType&gt;</ph> method returns all the public members of the current <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.GetMembers%2A?displayProperty=nameWithType&gt;</ph> método retorna todos os membros públicos do atual <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMembers(System.Reflection.BindingFlags)">
          <source>A bitmask comprised of one or more <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> that specify how the search is conducted.</source>
          <target state="translated">Um bitmask composto de um ou mais <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> que especificam como a pesquisa é realizada.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMembers(System.Reflection.BindingFlags)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMembers(System.Reflection.BindingFlags)">
          <source>Zero, to return <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Zero, para retornar <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMembers(System.Reflection.BindingFlags)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetMembers(System.Reflection.BindingFlags)" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="M:System.Type.GetMembers(System.Reflection.BindingFlags)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMembers(System.Reflection.BindingFlags)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> objects representing all members defined for the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> that match the specified binding constraints.</source>
          <target state="translated">Uma matriz de objetos <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> representando todos os membros definidos para o <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> atual que correspondem às restrições de associação especificadas.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMembers(System.Reflection.BindingFlags)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMembers(System.Reflection.BindingFlags)">
          <source>An empty array of type <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph>, if no members are defined for the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>, or if none of the defined members match the binding constraints.</source>
          <target state="translated">Uma matriz vazia do tipo <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph>, se nenhum membro estiver definido para o atual <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> ou se nenhum dos membros definidos corresponder às restrições de associação.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetMembers(System.Reflection.BindingFlags)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetMembers(System.Reflection.BindingFlags)">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetMembers%2A?displayProperty=nameWithType&gt;</ph> method searches for the members defined for the current <ph id="ph2">&lt;xref:System.Type&gt;</ph>, using the specified binding constraints.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.GetMembers%2A?displayProperty=nameWithType&gt;</ph> método procura membros definidos atual <ph id="ph2">&lt;xref:System.Type&gt;</ph>, usando as restrições de associação especificada.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices._Type">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="Overload:System.Type.GetMethod" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="Overload:System.Type.GetMethod" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetMethod%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">O método <ph id="ph1">&lt;xref:System.Type.GetMethod%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the public method to get.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que contém o nome do método público a ser obtido.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetMethod(System.String)" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="M:System.Type.GetMethod(System.String)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> object representing the public method with the specified name, if found; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> que representa o método público com o nome especificado, se encontrado; caso contrário, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetMethod%2A?displayProperty=nameWithType&gt;</ph> method searches for the public method with the specified name..</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.GetMethod%2A?displayProperty=nameWithType&gt;</ph> método procura o método público com o nome especificado.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the method to get.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que contém o nome do método a ser obtido.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags)">
          <source>A bitmask comprised of one or more <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> that specify how the search is conducted.</source>
          <target state="translated">Um bitmask composto de um ou mais <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> que especificam como a pesquisa é realizada.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags)">
          <source>Zero, to return <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Zero, para retornar <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetMethod(System.String,System.Reflection.BindingFlags)" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="M:System.Type.GetMethod(System.String,System.Reflection.BindingFlags)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> object representing the method that matches the specified requirements, if found; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> que representa o método que corresponde aos requisitos especificados, se for encontrado; caso contrário, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags)">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetMethod%2A?displayProperty=nameWithType&gt;</ph> method searches for the specified method, using the specified binding constraints.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.GetMethod%2A?displayProperty=nameWithType&gt;</ph> método pesquisa o método especificado, usando as restrições de associação especificada.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the public method to get.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que contém o nome do método público a ser obtido.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> objects representing the number, order, and type of the parameters for the method to get.</source>
          <target state="translated">Uma matriz de objetos <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que representam o número, a ordem e o tipo de parâmetros para o método a ser obtido.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[])">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[])">
          <source>An empty array of the type <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> (that is, Type[] types = new Type[0]) to get a method that takes no parameters.</source>
          <target state="translated">Uma matriz vazia do tipo <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> (ou seja, Type[] types = new Type[0]) para obter um método que não aceita parâmetros.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[])">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetMethod(System.String,System.Type[])" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="M:System.Type.GetMethod(System.String,System.Type[])" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> object representing the public method whose parameters match the specified argument types, if found; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> que representa o método público cujos parâmetros correspondem aos tipos de argumento especificados, se encontrado; caso contrário, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[])">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[])">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetMethod%2A?displayProperty=nameWithType&gt;</ph> method searches for the specified public method whose parameters match the specified argument types.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.GetMethod%2A?displayProperty=nameWithType&gt;</ph> método procura o método público especificado cujos parâmetros correspondem aos tipos de argumento especificado.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the public method to get.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que contém o nome do método público a ser obtido.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> objects representing the number, order, and type of the parameters for the method to get.</source>
          <target state="translated">Uma matriz de objetos <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que representam o número, a ordem e o tipo de parâmetros para o método a ser obtido.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])">
          <source>An empty array of the type <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> (that is, Type[] types = new Type[0]) to get a method that takes no parameters.</source>
          <target state="translated">Uma matriz vazia do tipo <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> (ou seja, Type[] types = new Type[0]) para obter um método que não aceita parâmetros.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterModifier" /&gt;</ph> objects representing the attributes associated with the corresponding element in the <bpt id="p1">&lt;c&gt;</bpt>types<ept id="p1">&lt;/c&gt;</ept> array.</source>
          <target state="translated">Uma matriz de objetos <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterModifier" /&gt;</ph> que representam os atributos associados ao elemento correspondente na matriz <bpt id="p1">&lt;c&gt;</bpt>types<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The default binder does not process this parameter.</source>
          <target state="translated">O associador padrão não processa este parâmetro.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="M:System.Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> object representing the public method that matches the specified requirements, if found; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> que representa o método público que corresponde aos requisitos especificados, se encontrado; caso contrário, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetMethod%2A?displayProperty=nameWithType&gt;</ph> method searches for the specified public method whose parameters match the specified argument types and modifiers.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.GetMethod%2A?displayProperty=nameWithType&gt;</ph> método procura o método público especificado cujos parâmetros correspondem a tipos de argumento especificados e os modificadores.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the method to get.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que contém o nome do método a ser obtido.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>A bitmask comprised of one or more <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> that specify how the search is conducted.</source>
          <target state="translated">Um bitmask composto de um ou mais <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> que especificam como a pesquisa é realizada.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>Zero, to return <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Zero, para retornar <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.Binder" /&gt;</ph> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Reflection.Binder" /&gt;</ph> que define um conjunto de propriedades e habilita a associação, que pode envolver seleção de um método sobrecarregado, coerção de tipos de argumento e invocação de um membro por meio de reflexão.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph>, to use the <ph id="ph2">&lt;see cref="P:System.Type.DefaultBinder" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph>, para usar o <ph id="ph2">&lt;see cref="P:System.Type.DefaultBinder" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> objects representing the number, order, and type of the parameters for the method to get.</source>
          <target state="translated">Uma matriz de objetos <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que representam o número, a ordem e o tipo de parâmetros para o método a ser obtido.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>An empty array of the type <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> (that is, Type[] types = new Type[0]) to get a method that takes no parameters.</source>
          <target state="translated">Uma matriz vazia do tipo <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> (ou seja, Type[] types = new Type[0]) para obter um método que não aceita parâmetros.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterModifier" /&gt;</ph> objects representing the attributes associated with the corresponding element in the <bpt id="p1">&lt;c&gt;</bpt>types<ept id="p1">&lt;/c&gt;</ept> array.</source>
          <target state="translated">Uma matriz de objetos <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterModifier" /&gt;</ph> que representam os atributos associados ao elemento correspondente na matriz <bpt id="p1">&lt;c&gt;</bpt>types<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The default binder does not process this parameter.</source>
          <target state="translated">O associador padrão não processa este parâmetro.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="M:System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> object representing the method that matches the specified requirements, if found; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> que representa o método que corresponde aos requisitos especificados, se for encontrado; caso contrário, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetMethod%2A?displayProperty=nameWithType&gt;</ph> method searches for the specified method whose parameters match the specified argument types and modifiers, using the specified binding constraints.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.GetMethod%2A?displayProperty=nameWithType&gt;</ph> pesquisas de método para o método especificado cujos parâmetros correspondem a tipos de argumento especificados e os modificadores, usando as restrições de associação especificada.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the method to get.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que contém o nome do método a ser obtido.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
          <source>A bitmask comprised of one or more <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> that specify how the search is conducted.</source>
          <target state="translated">Um bitmask composto de um ou mais <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> que especificam como a pesquisa é realizada.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
          <source>Zero, to return <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Zero, para retornar <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.Binder" /&gt;</ph> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Reflection.Binder" /&gt;</ph> que define um conjunto de propriedades e habilita a associação, que pode envolver seleção de um método sobrecarregado, coerção de tipos de argumento e invocação de um membro por meio de reflexão.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph>, to use the <ph id="ph2">&lt;see cref="P:System.Type.DefaultBinder" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph>, para usar o <ph id="ph2">&lt;see cref="P:System.Type.DefaultBinder" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.Reflection.CallingConventions" /&gt;</ph> object that specifies the set of rules to use regarding the order and layout of arguments, how the return value is passed, what registers are used for arguments, and how the stack is cleaned up.</source>
          <target state="translated">O objeto <ph id="ph1">&lt;see cref="T:System.Reflection.CallingConventions" /&gt;</ph> que especifica o conjunto de regras a ser usado em relação à ordem e ao layout dos argumentos, a como o valor retornado é passado, quais registros são usados para argumentos e como a pilha é limpa.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> objects representing the number, order, and type of the parameters for the method to get.</source>
          <target state="translated">Uma matriz de objetos <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que representam o número, a ordem e o tipo de parâmetros para o método a ser obtido.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
          <source>An empty array of the type <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> (that is, Type[] types = new Type[0]) to get a method that takes no parameters.</source>
          <target state="translated">Uma matriz vazia do tipo <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> (ou seja, Type[] types = new Type[0]) para obter um método que não aceita parâmetros.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterModifier" /&gt;</ph> objects representing the attributes associated with the corresponding element in the <bpt id="p1">&lt;c&gt;</bpt>types<ept id="p1">&lt;/c&gt;</ept> array.</source>
          <target state="translated">Uma matriz de objetos <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterModifier" /&gt;</ph> que representam os atributos associados ao elemento correspondente na matriz <bpt id="p1">&lt;c&gt;</bpt>types<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The default binder does not process this parameter.</source>
          <target state="translated">O associador padrão não processa este parâmetro.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="M:System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> object representing the method that matches the specified requirements, if found; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> que representa o método que corresponde aos requisitos especificados, se for encontrado; caso contrário, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetMethod%2A?displayProperty=nameWithType&gt;</ph> method searches for the specified method whose parameters match the specified argument types and modifiers, using the specified binding constraints and the specified calling convention.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.GetMethod%2A?displayProperty=nameWithType&gt;</ph> método pesquisa o método especificado cujos parâmetros correspondem a tipos de argumento especificados e os modificadores, usando as restrições de associação especificada e a convenção de chamada especificada.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices._Type">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="Overload:System.Type.GetMethods" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="Overload:System.Type.GetMethods" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetMethods%2A?displayProperty=nameWithType&gt;</ph> method gets the methods of the current <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.GetMethods%2A?displayProperty=nameWithType&gt;</ph> método obtém os métodos do atual <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethods">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetMethods" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="M:System.Type.GetMethods" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethods">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> objects representing all the public methods defined for the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">Uma matriz de objetos <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> que representam todos os métodos públicos definidos para o <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> atual.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethods">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethods">
          <source>An empty array of type <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph>, if no public methods are defined for the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">Uma matriz vazia do tipo <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph>, se nenhum método público for definido para o <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> atual.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetMethods">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetMethods">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetMethods%2A?displayProperty=nameWithType&gt;</ph> method returns all the public methods of the current <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.GetMethods%2A?displayProperty=nameWithType&gt;</ph> método retorna todos os métodos públicos do atual <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethods(System.Reflection.BindingFlags)">
          <source>A bitmask comprised of one or more <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> that specify how the search is conducted.</source>
          <target state="translated">Um bitmask composto de um ou mais <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> que especificam como a pesquisa é realizada.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethods(System.Reflection.BindingFlags)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethods(System.Reflection.BindingFlags)">
          <source>Zero, to return <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Zero, para retornar <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethods(System.Reflection.BindingFlags)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetMethods(System.Reflection.BindingFlags)" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="M:System.Type.GetMethods(System.Reflection.BindingFlags)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethods(System.Reflection.BindingFlags)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> objects representing all methods defined for the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> that match the specified binding constraints.</source>
          <target state="translated">Uma matriz de objetos <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> representando todos os métodos definidos para o <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> atual que correspondem às restrições de associação especificadas.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethods(System.Reflection.BindingFlags)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetMethods(System.Reflection.BindingFlags)">
          <source>An empty array of type <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph>, if no methods are defined for the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>, or if none of the defined methods match the binding constraints.</source>
          <target state="translated">Uma matriz vazia do tipo <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph>, se nenhum método estiver definido para o atual <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>, ou se nenhum dos métodos definidos corresponder às restrições de associação.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetMethods(System.Reflection.BindingFlags)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetMethods(System.Reflection.BindingFlags)">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetMethods%2A?displayProperty=nameWithType&gt;</ph> method searches for the methods defined for the current <ph id="ph2">&lt;xref:System.Type&gt;</ph>, using the specified binding constraints.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.GetMethods%2A?displayProperty=nameWithType&gt;</ph> método procura os métodos definidos atual <ph id="ph2">&lt;xref:System.Type&gt;</ph>, usando as restrições de associação especificada.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices._Type">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="Overload:System.Type.GetNestedType" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="Overload:System.Type.GetNestedType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetNestedType%2A?displayProperty=nameWithType&gt;</ph> method gets a specific type nested within the current <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.GetNestedType%2A?displayProperty=nameWithType&gt;</ph> método obtém um tipo específico aninhado atual <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetNestedType(System.String)">
          <source>The string containing the name of the nested type to get.</source>
          <target state="translated">A cadeia de caracteres que contém o nome do tipo aninhado a ser obtido.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetNestedType(System.String)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetNestedType(System.String)" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="M:System.Type.GetNestedType(System.String)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetNestedType(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> object representing the public nested type with the specified name, if found; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que representa o tipo aninhado público com o nome especificado, se encontrado; caso contrário, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetNestedType(System.String)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetNestedType(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetNestedType%2A?displayProperty=nameWithType&gt;</ph> method searches for the public nested type with the specified name.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.GetNestedType%2A?displayProperty=nameWithType&gt;</ph> método procura o tipo público aninhado com o nome especificado.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetNestedType(System.String,System.Reflection.BindingFlags)">
          <source>The string containing the name of the nested type to get.</source>
          <target state="translated">A cadeia de caracteres que contém o nome do tipo aninhado a ser obtido.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetNestedType(System.String,System.Reflection.BindingFlags)">
          <source>A bitmask comprised of one or more <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> that specify how the search is conducted.</source>
          <target state="translated">Um bitmask composto de um ou mais <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> que especificam como a pesquisa é realizada.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetNestedType(System.String,System.Reflection.BindingFlags)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetNestedType(System.String,System.Reflection.BindingFlags)">
          <source>Zero, to return <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Zero, para retornar <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetNestedType(System.String,System.Reflection.BindingFlags)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetNestedType(System.String,System.Reflection.BindingFlags)" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="M:System.Type.GetNestedType(System.String,System.Reflection.BindingFlags)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetNestedType(System.String,System.Reflection.BindingFlags)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> object representing the nested type that matches the specified requirements, if found; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que representa o tipo aninhado que corresponde aos requisitos especificados, se encontrado; caso contrário, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetNestedType(System.String,System.Reflection.BindingFlags)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetNestedType(System.String,System.Reflection.BindingFlags)">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetNestedType%2A?displayProperty=nameWithType&gt;</ph> method searches for the specified nested type, using the specified binding constraints.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.GetNestedType%2A?displayProperty=nameWithType&gt;</ph> método pesquisa o tipo aninhado especificado, usando as restrições de associação especificada.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices._Type">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="Overload:System.Type.GetNestedTypes" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="Overload:System.Type.GetNestedTypes" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetNestedTypes%2A?displayProperty=nameWithType&gt;</ph> method gets the types nested within the current <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.GetNestedTypes%2A?displayProperty=nameWithType&gt;</ph> método obtém os tipos aninhados atual <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetNestedTypes">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetNestedTypes" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="M:System.Type.GetNestedTypes" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetNestedTypes">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> objects representing all the types nested within the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">Uma matriz de objetos <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que representa todos os tipos aninhados no <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> atual.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetNestedTypes">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetNestedTypes">
          <source>An empty array of type <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>, if no types are nested within the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">Uma matriz vazia do tipo <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>, se nenhum tipo estiver aninhado na <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> atual.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetNestedTypes">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetNestedTypes">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetNestedTypes%2A?displayProperty=nameWithType&gt;</ph> method returns all the types nested within the current <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.GetNestedTypes%2A?displayProperty=nameWithType&gt;</ph> método retorna todos os tipos aninhados atual <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetNestedTypes(System.Reflection.BindingFlags)">
          <source>A bitmask comprised of one or more <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> that specify how the search is conducted.</source>
          <target state="translated">Um bitmask composto de um ou mais <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> que especificam como a pesquisa é realizada.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetNestedTypes(System.Reflection.BindingFlags)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetNestedTypes(System.Reflection.BindingFlags)">
          <source>Zero, to return <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Zero, para retornar <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetNestedTypes(System.Reflection.BindingFlags)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetNestedTypes(System.Reflection.BindingFlags)" /&gt;</ph> method, and searches for the types nested within the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>, using the specified binding constraints.</source>
          <target state="translated">Fornece objetos COM de acesso independente de versão para o método <ph id="ph1">&lt;see cref="M:System.Type.GetNestedTypes(System.Reflection.BindingFlags)" /&gt;</ph> e pesquisa os tipos aninhados no <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> atual, usando as restrições de associação especificadas.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetNestedTypes(System.Reflection.BindingFlags)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> objects representing all the types nested within the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> that match the specified binding constraints.</source>
          <target state="translated">Uma matriz de objetos <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que representa todos os tipos aninhados no <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> atual que correspondem às restrições de associação especificadas.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetNestedTypes(System.Reflection.BindingFlags)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetNestedTypes(System.Reflection.BindingFlags)">
          <source>An empty array of type <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>, if no types are nested within the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>, or if none of the nested types match the binding constraints.</source>
          <target state="translated">Uma matriz vazia do tipo <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> se nenhum tipo estiver aninhado no <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> atual ou se nenhum dos tipos aninhados corresponderem às restrições de associação.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetNestedTypes(System.Reflection.BindingFlags)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices._Type">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="Overload:System.Type.GetProperties" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="Overload:System.Type.GetProperties" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetProperties%2A?displayProperty=nameWithType&gt;</ph> method gets the properties of the current <ph id="ph2">&lt;xref:System.Type&gt;</ph>..</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.GetProperties%2A?displayProperty=nameWithType&gt;</ph> método obtém as propriedades do atual <ph id="ph2">&lt;xref:System.Type&gt;</ph>...</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperties">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetProperties" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="M:System.Type.GetProperties" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperties">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> objects representing all public properties of the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">Uma matriz de objetos <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> que representa todas as propriedades públicas do <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> atual.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperties">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperties">
          <source>An empty array of type <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph>, if the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> does not have public properties.</source>
          <target state="translated">Uma matriz vazia do tipo <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph>, se o <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> atual não tiver propriedades públicas.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetProperties">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetProperties">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetProperties%2A?displayProperty=nameWithType&gt;</ph> method returns all the public properties of the current <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.GetProperties%2A?displayProperty=nameWithType&gt;</ph> método retorna todas as propriedades públicas do atual <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperties(System.Reflection.BindingFlags)">
          <source>A bitmask comprised of one or more <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> that specify how the search is conducted.</source>
          <target state="translated">Um bitmask composto de um ou mais <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> que especificam como a pesquisa é realizada.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperties(System.Reflection.BindingFlags)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperties(System.Reflection.BindingFlags)">
          <source>Zero, to return <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Zero, para retornar <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperties(System.Reflection.BindingFlags)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetProperties(System.Reflection.BindingFlags)" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="M:System.Type.GetProperties(System.Reflection.BindingFlags)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperties(System.Reflection.BindingFlags)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> objects representing all properties of the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> that match the specified binding constraints.</source>
          <target state="translated">Uma matriz de objetos <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> que representa todas as propriedades do <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> atual que correspondem às restrições de associação especificadas.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperties(System.Reflection.BindingFlags)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperties(System.Reflection.BindingFlags)">
          <source>An empty array of type <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph>, if the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> does not have properties, or if none of the properties match the binding constraints.</source>
          <target state="translated">Uma matriz vazia do tipo <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph>, se o <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> atual não tiver propriedades, ou se nenhuma das propriedades corresponderem às restrições de associação.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetProperties(System.Reflection.BindingFlags)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetProperties(System.Reflection.BindingFlags)">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetProperties%2A?displayProperty=nameWithType&gt;</ph> method searches for the properties of the current <ph id="ph2">&lt;xref:System.Type&gt;</ph>, using the specified binding constraints.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.GetProperties%2A?displayProperty=nameWithType&gt;</ph> método procura as propriedades do atual <ph id="ph2">&lt;xref:System.Type&gt;</ph>, usando as restrições de associação especificada.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices._Type">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="Overload:System.Type.GetProperty" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="Overload:System.Type.GetProperty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetProperty%2A?displayProperty=nameWithType&gt;</ph> method gets a specific property of the current <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.GetProperty%2A?displayProperty=nameWithType&gt;</ph> método obtém uma propriedade específica da atual <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the public property to get.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que contém o nome da propriedade pública a ser obtida.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetProperty(System.String)" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="M:System.Type.GetProperty(System.String)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> object representing the public property with the specified name, if found; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Um objeto <ph id="ph2">&lt;see langword="null" /&gt;</ph> que representa a propriedade pública com o nome especificado, se encontrado; caso contrário, <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetProperty%2A?displayProperty=nameWithType&gt;</ph> method searches for the public property with the specified name.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.GetProperty%2A?displayProperty=nameWithType&gt;</ph> método procura a propriedade pública com o nome especificado.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the property to get.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que contém o nome da propriedade a ser obtida.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags)">
          <source>A bitmask comprised of one or more <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> that specify how the search is conducted.</source>
          <target state="translated">Um bitmask composto de um ou mais <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> que especificam como a pesquisa é realizada.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags)">
          <source>Zero, to return <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Zero, para retornar <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetProperty(System.String,System.Reflection.BindingFlags)" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="M:System.Type.GetProperty(System.String,System.Reflection.BindingFlags)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> object representing the property that matches the specified requirements, if found; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> que representa a propriedade que corresponde aos requisitos especificados, se for encontrado; caso contrário, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags)">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetProperty%2A?displayProperty=nameWithType&gt;</ph> method searches for the specified property, using the specified binding constraints.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.GetProperty%2A?displayProperty=nameWithType&gt;</ph> método procura a propriedade especificada, usando as restrições de associação especificada.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the public property to get.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que contém o nome da propriedade pública a ser obtida.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type)">
          <source>The return type of the property.</source>
          <target state="translated">O tipo de retorno da propriedade.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetProperty(System.String,System.Type)" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="M:System.Type.GetProperty(System.String,System.Type)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> object representing the public property with the specified name, if found; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Um objeto <ph id="ph2">&lt;see langword="null" /&gt;</ph> que representa a propriedade pública com o nome especificado, se encontrado; caso contrário, <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetProperty%2A?displayProperty=nameWithType&gt;</ph> method searches for the public property with the specified name and return type.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.GetProperty%2A?displayProperty=nameWithType&gt;</ph> método procura a propriedade pública com o nome especificado e o tipo de retorno.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the public property to get.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que contém o nome da propriedade pública a ser obtida.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> objects representing the number, order, and type of the parameters for the indexed property to get.</source>
          <target state="translated">Uma matriz de objetos <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que representam o número, a ordem e o tipo de parâmetros para a propriedade indexada a ser obtida.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type[])">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type[])">
          <source>An empty array of the type <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> (that is, Type[] types = new Type[0]) to get a property that is not indexed.</source>
          <target state="translated">Uma matriz vazia do tipo <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> (ou seja, tipos Type[] = novo Type[0]) para obter uma propriedade que não seja indexada.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type[])">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetProperty(System.String,System.Type[])" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="M:System.Type.GetProperty(System.String,System.Type[])" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> object representing the public property whose parameters match the specified argument types, if found; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> que representa a propriedade pública cujos parâmetros correspondem aos tipos de argumento especificados, se encontrada, caso contrário, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type[])">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type[])">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetProperty%2A?displayProperty=nameWithType&gt;</ph> method searches for the specified public property whose parameters match the specified argument types..</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.GetProperty%2A?displayProperty=nameWithType&gt;</ph> pesquisas de método para a propriedade pública especificada cujos parâmetros correspondem aos tipos de argumento especificado.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the public property to get.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que contém o nome da propriedade pública a ser obtida.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[])">
          <source>The return type of the property.</source>
          <target state="translated">O tipo de retorno da propriedade.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> objects representing the number, order, and type of the parameters for the indexed property to get.</source>
          <target state="translated">Uma matriz de objetos <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que representam o número, a ordem e o tipo de parâmetros para a propriedade indexada a ser obtida.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[])">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[])">
          <source>An empty array of the type <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> (that is, Type[] types = new Type[0]) to get a property that is not indexed.</source>
          <target state="translated">Uma matriz vazia do tipo <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> (ou seja, tipos Type[] = novo Type[0]) para obter uma propriedade que não seja indexada.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[])">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetProperty(System.String,System.Type,System.Type[])" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="M:System.Type.GetProperty(System.String,System.Type,System.Type[])" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> object representing the public property whose parameters match the specified argument types, if found; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> que representa a propriedade pública cujos parâmetros correspondem aos tipos de argumento especificados, se encontrada, caso contrário, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[])">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[])">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetProperty%2A?displayProperty=nameWithType&gt;</ph> method searches for the specified public property whose parameters match the specified argument types.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.GetProperty%2A?displayProperty=nameWithType&gt;</ph> pesquisas de método para a propriedade pública especificada cujos parâmetros correspondem aos tipos de argumento especificado.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the public property to get.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que contém o nome da propriedade pública a ser obtida.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The return type of the property.</source>
          <target state="translated">O tipo de retorno da propriedade.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> objects representing the number, order, and type of the parameters for the indexed property to get.</source>
          <target state="translated">Uma matriz de objetos <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que representam o número, a ordem e o tipo de parâmetros para a propriedade indexada a ser obtida.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>An empty array of the type <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> (that is, Type[] types = new Type[0]) to get a property that is not indexed.</source>
          <target state="translated">Uma matriz vazia do tipo <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> (ou seja, tipos Type[] = novo Type[0]) para obter uma propriedade que não seja indexada.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterModifier" /&gt;</ph> objects representing the attributes associated with the corresponding element in the <bpt id="p1">&lt;c&gt;</bpt>types<ept id="p1">&lt;/c&gt;</ept> array.</source>
          <target state="translated">Uma matriz de objetos <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterModifier" /&gt;</ph> que representam os atributos associados ao elemento correspondente na matriz <bpt id="p1">&lt;c&gt;</bpt>types<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The default binder does not process this parameter.</source>
          <target state="translated">O associador padrão não processa este parâmetro.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="M:System.Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> object representing the public property that matches the specified requirements, if found; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> que representa a propriedade pública que corresponde aos requisitos especificados, se encontrado; caso contrário, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetProperty%2A?displayProperty=nameWithType&gt;</ph> method searches for the specified public property whose parameters match the specified argument types and modifiers.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.GetProperty%2A?displayProperty=nameWithType&gt;</ph> pesquisas de método para a propriedade pública especificada cujos parâmetros correspondem a tipos de argumento especificados e os modificadores.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the property to get.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que contém o nome da propriedade a ser obtida.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>A bitmask comprised of one or more <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> that specify how the search is conducted.</source>
          <target state="translated">Um bitmask composto de um ou mais <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> que especificam como a pesquisa é realizada.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>Zero, to return <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Zero, para retornar <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.Binder" /&gt;</ph> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Reflection.Binder" /&gt;</ph> que define um conjunto de propriedades e habilita a associação, que pode envolver seleção de um método sobrecarregado, coerção de tipos de argumento e invocação de um membro por meio de reflexão.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph>, to use the <ph id="ph2">&lt;see cref="P:System.Type.DefaultBinder" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph>, para usar o <ph id="ph2">&lt;see cref="P:System.Type.DefaultBinder" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The return type of the property.</source>
          <target state="translated">O tipo de retorno da propriedade.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> objects representing the number, order, and type of the parameters for the indexed property to get.</source>
          <target state="translated">Uma matriz de objetos <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que representam o número, a ordem e o tipo de parâmetros para a propriedade indexada a ser obtida.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>An empty array of the type <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> (that is, Type[] types = new Type[0]) to get a property that is not indexed.</source>
          <target state="translated">Uma matriz vazia do tipo <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> (ou seja, tipos Type[] = novo Type[0]) para obter uma propriedade que não seja indexada.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterModifier" /&gt;</ph> objects representing the attributes associated with the corresponding element in the <bpt id="p1">&lt;c&gt;</bpt>types<ept id="p1">&lt;/c&gt;</ept> array.</source>
          <target state="translated">Uma matriz de objetos <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterModifier" /&gt;</ph> que representam os atributos associados ao elemento correspondente na matriz <bpt id="p1">&lt;c&gt;</bpt>types<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The default binder does not process this parameter.</source>
          <target state="translated">O associador padrão não processa este parâmetro.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="M:System.Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> object representing the property that matches the specified requirements, if found; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> que representa a propriedade que corresponde aos requisitos especificados, se for encontrado; caso contrário, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetProperty%2A?displayProperty=nameWithType&gt;</ph> method searches for the specified property whose parameters match the specified argument types and modifiers, using the specified binding constraints.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.GetProperty%2A?displayProperty=nameWithType&gt;</ph> pesquisas de método para a propriedade especificada cujos parâmetros correspondem a tipos de argumento especificados e os modificadores, usando as restrições de associação especificada.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetType">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetType" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="M:System.Type.GetType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetType">
          <source>The current <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> atual.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetType">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetType">
          <source>The <ph id="ph1">&lt;xref:System.Type.GetType%2A?displayProperty=nameWithType&gt;</ph> method gets the current <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.GetType%2A?displayProperty=nameWithType&gt;</ph> método obtém atual <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <source>The type information to return.</source>
          <target state="translated">As informações de tipo a serem retornadas.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <source>The locale identifier for the type information.</source>
          <target state="translated">O identificador de localidade das informações do tipo.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <source>Receives a pointer to the requested type information object.</source>
          <target state="translated">Recebe um ponteiro para o objeto de informações de tipo solicitado.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <source>Retrieves the type information for an object, which can then be used to get the type information for an interface.</source>
          <target state="translated">Recupera as informações do tipo de um objeto, que podem ser usadas para obter informações de tipo para uma interface.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <source>For more information about <ph id="ph1">`IDispatch::GetTypeInfo`</ph>, see the MSDN Library.</source>
          <target state="translated">Para obter mais informações sobre <ph id="ph1">`IDispatch::GetTypeInfo`</ph>, consulte a Biblioteca MSDN.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetTypeInfoCount(System.UInt32@)">
          <source>Points to a location that receives the number of type information interfaces provided by the object.</source>
          <target state="translated">Aponta para um local que recebe o número de interfaces de informações de tipo fornecido pelo objeto.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.GetTypeInfoCount(System.UInt32@)">
          <source>Retrieves the number of type information interfaces that an object provides (either 0 or 1).</source>
          <target state="translated">Retorna o número de interfaces de informações do tipo que um objeto fornece (0 ou 1).</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetTypeInfoCount(System.UInt32@)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.GetTypeInfoCount(System.UInt32@)">
          <source>For more information about <ph id="ph1">`IDispatch::GetTypeInfoCount`</ph>, see the MSDN Library.</source>
          <target state="translated">Para obter mais informações sobre <ph id="ph1">`IDispatch::GetTypeInfoCount`</ph>, consulte a Biblioteca MSDN.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.GUID">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.GUID" /&gt;</ph> property.</source>
          <target state="translated">Fornece acesso independente da versão para objetos COM à propriedade <ph id="ph1">&lt;see cref="P:System.Type.GUID" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.GUID">
          <source>The GUID associated with the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">O GUID associado ao <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.GUID">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.GUID">
          <source>The <ph id="ph1">&lt;xref:System.Type.GUID%2A?displayProperty=nameWithType&gt;</ph> property gets the GUID associated with the <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.GUID%2A?displayProperty=nameWithType&gt;</ph> propriedade obtém o GUID associado a <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.HasElementType">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.HasElementType" /&gt;</ph> property.</source>
          <target state="translated">Fornece acesso independente da versão para objetos COM à propriedade <ph id="ph1">&lt;see cref="P:System.Type.HasElementType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.HasElementType">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> is an array, a pointer, or is passed by reference; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> for uma matriz ou um ponteiro ou se for passado por referência; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.HasElementType">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.HasElementType">
          <source>The <ph id="ph1">&lt;xref:System.Type.HasElementType%2A?displayProperty=nameWithType&gt;</ph> property</source>
          <target state="translated">A propriedade <ph id="ph1">&lt;xref:System.Type.HasElementType%2A?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>Identifies the member.</source>
          <target state="translated">Identifica o membro.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>Reserved for future use.</source>
          <target state="translated">Reservado para uso futuro.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>Must be IID_NULL.</source>
          <target state="translated">Deve ser IID_NULL.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>The locale context in which to interpret arguments.</source>
          <target state="translated">O contexto de localidade no qual interpretar argumentos.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>Flags describing the context of the call.</source>
          <target state="translated">Sinalizadores que descrevem o contexto da chamada.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</source>
          <target state="translated">Ponteiro para uma estrutura contendo uma matriz de argumentos, uma matriz de DISPIDs de argumento para argumentos nomeados e contagens para o número de elementos nas matrizes.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>Pointer to the location where the result is to be stored.</source>
          <target state="translated">Ponteiro para o local onde o resultado deve ser armazenado.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>Pointer to a structure that contains exception information.</source>
          <target state="translated">Ponteiro para uma estrutura que contém informações de exceção.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>The index of the first argument that has an error.</source>
          <target state="translated">O índice do primeiro argumento que tem um erro.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>Provides access to properties and methods exposed by an object.</source>
          <target state="translated">Fornece acesso a propriedades e métodos expostos por um objeto.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>For more information about <ph id="ph1">`IDispatch::Invoke`</ph>, see the MSDN Library.</source>
          <target state="translated">Para obter mais informações sobre <ph id="ph1">`IDispatch::Invoke`</ph>, consulte a Biblioteca MSDN.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices._Type">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="Overload:System.Type.InvokeMember" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="Overload:System.Type.InvokeMember" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>The <ph id="ph1">&lt;xref:System.Type.InvokeMember%2A?displayProperty=nameWithType&gt;</ph> method invokes a specific member of the current <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.InvokeMember%2A?displayProperty=nameWithType&gt;</ph> método invoca um membro específico do atual <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Type">
          <source>.</source>
          <target state="translated">.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the constructor, method, property, or field member to invoke.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que contém o nome do construtor, do método, da propriedade ou do membro de campo a ser invocado.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])">
          <source>An empty string ("") to invoke the default member.</source>
          <target state="translated">Uma cadeia de caracteres vazia ("") para invocar o membro padrão.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])">
          <source>For IDispatch members, a string representing the DispID, for example "[DispID=3]".</source>
          <target state="translated">Para membros IDispatch, uma cadeia de caracteres que representa a DispID, por exemplo "[DispID=3]".</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])">
          <source>A bitmask comprised of one or more <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> that specify how the search is conducted.</source>
          <target state="translated">Um bitmask composto de um ou mais <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> que especificam como a pesquisa é realizada.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])">
          <source>The access can be one of the <ph id="ph1">&lt;see langword="BindingFlags" /&gt;</ph> such as <ph id="ph2">&lt;see langword="Public" /&gt;</ph>, <ph id="ph3">&lt;see langword="NonPublic" /&gt;</ph>, <ph id="ph4">&lt;see langword="Private" /&gt;</ph>, <ph id="ph5">&lt;see langword="InvokeMethod" /&gt;</ph>, <ph id="ph6">&lt;see langword="GetField" /&gt;</ph>, and so on.</source>
          <target state="translated">O acesso pode ser um dos <ph id="ph1">&lt;see langword="BindingFlags" /&gt;</ph>, como <ph id="ph2">&lt;see langword="Public" /&gt;</ph>, <ph id="ph3">&lt;see langword="NonPublic" /&gt;</ph>, <ph id="ph4">&lt;see langword="Private" /&gt;</ph>, <ph id="ph5">&lt;see langword="InvokeMethod" /&gt;</ph>, <ph id="ph6">&lt;see langword="GetField" /&gt;</ph> e assim por diante.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])">
          <source>The type of lookup need not be specified.</source>
          <target state="translated">O tipo de pesquisa não precisa ser especificado.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])">
          <source>If the type of lookup is omitted, <ph id="ph1">&lt;see langword="BindingFlags.Public" /&gt;</ph><ph id="ph2"> | </ph><ph id="ph3">&lt;see langword="BindingFlags.Instance" /&gt;</ph> will apply.</source>
          <target state="translated">Se o tipo de pesquisa for omitido, <ph id="ph1">&lt;see langword="BindingFlags.Public" /&gt;</ph><ph id="ph2"> | </ph><ph id="ph3">&lt;see langword="BindingFlags.Instance" /&gt;</ph> será aplicado.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.Binder" /&gt;</ph> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Reflection.Binder" /&gt;</ph> que define um conjunto de propriedades e habilita a associação, que pode envolver seleção de um método sobrecarregado, coerção de tipos de argumento e invocação de um membro por meio de reflexão.</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph>, to use the <ph id="ph2">&lt;see cref="P:System.Type.DefaultBinder" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph>, para usar o <ph id="ph2">&lt;see cref="P:System.Type.DefaultBinder" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> on which to invoke the specified member.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> no qual invocar o membro especificado.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])">
          <source>An array containing the arguments to pass to the member to invoke.</source>
          <target state="translated">Uma matriz que contém os argumentos que serão passados para o membro a ser invocado.</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> representing the return value of the invoked member.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> que representa o valor retornado do membro invocado.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.Type.InvokeMember%2A?displayProperty=nameWithType&gt;</ph> method invokes the specified member, using the specified binding constraints and matching the specified argument list.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.InvokeMember%2A?displayProperty=nameWithType&gt;</ph> método chama o membro especificado, usando as restrições de associação e especificados correspondente a lista de argumentos especificados.</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the constructor, method, property, or field member to invoke.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que contém o nome do construtor, do método, da propriedade ou do membro de campo a ser invocado.</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)">
          <source>An empty string ("") to invoke the default member.</source>
          <target state="translated">Uma cadeia de caracteres vazia ("") para invocar o membro padrão.</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)">
          <source>For IDispatch members, a string representing the DispID, for example "[DispID=3]".</source>
          <target state="translated">Para membros IDispatch, uma cadeia de caracteres que representa a DispID, por exemplo "[DispID=3]".</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)">
          <source>A bitmask comprised of one or more <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> that specify how the search is conducted.</source>
          <target state="translated">Um bitmask composto de um ou mais <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> que especificam como a pesquisa é realizada.</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)">
          <source>The access can be one of the <ph id="ph1">&lt;see langword="BindingFlags" /&gt;</ph> such as <ph id="ph2">&lt;see langword="Public" /&gt;</ph>, <ph id="ph3">&lt;see langword="NonPublic" /&gt;</ph>, <ph id="ph4">&lt;see langword="Private" /&gt;</ph>, <ph id="ph5">&lt;see langword="InvokeMethod" /&gt;</ph>, <ph id="ph6">&lt;see langword="GetField" /&gt;</ph>, and so on.</source>
          <target state="translated">O acesso pode ser um dos <ph id="ph1">&lt;see langword="BindingFlags" /&gt;</ph>, como <ph id="ph2">&lt;see langword="Public" /&gt;</ph>, <ph id="ph3">&lt;see langword="NonPublic" /&gt;</ph>, <ph id="ph4">&lt;see langword="Private" /&gt;</ph>, <ph id="ph5">&lt;see langword="InvokeMethod" /&gt;</ph>, <ph id="ph6">&lt;see langword="GetField" /&gt;</ph> e assim por diante.</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)">
          <source>The type of lookup need not be specified.</source>
          <target state="translated">O tipo de pesquisa não precisa ser especificado.</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)">
          <source>If the type of lookup is omitted, <ph id="ph1">&lt;see langword="BindingFlags.Public" /&gt;</ph><ph id="ph2"> | </ph><ph id="ph3">&lt;see langword="BindingFlags.Instance" /&gt;</ph> will apply.</source>
          <target state="translated">Se o tipo de pesquisa for omitido, <ph id="ph1">&lt;see langword="BindingFlags.Public" /&gt;</ph><ph id="ph2"> | </ph><ph id="ph3">&lt;see langword="BindingFlags.Instance" /&gt;</ph> será aplicado.</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.Binder" /&gt;</ph> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Reflection.Binder" /&gt;</ph> que define um conjunto de propriedades e habilita a associação, que pode envolver seleção de um método sobrecarregado, coerção de tipos de argumento e invocação de um membro por meio de reflexão.</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph>, to use the <ph id="ph2">&lt;see cref="P:System.Type.DefaultBinder" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph>, para usar o <ph id="ph2">&lt;see cref="P:System.Type.DefaultBinder" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> on which to invoke the specified member.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> no qual invocar o membro especificado.</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)">
          <source>An array containing the arguments to pass to the member to invoke.</source>
          <target state="translated">Uma matriz que contém os argumentos que serão passados para o membro a ser invocado.</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> object representing the globalization locale to use, which may be necessary for locale-specific conversions, such as converting a numeric String to a Double.</source>
          <target state="translated">O objeto <ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> que representa a localidade de globalização a ser usada, que pode ser necessária para realizar conversões específicas de localidade, como converter uma String numérica em uma Double.</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph> to use the current thread's <ph id="ph2">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph> para usar o <ph id="ph2">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> atual do thread.</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> representing the return value of the invoked member.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> que representa o valor retornado do membro invocado.</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)">
          <source>The <ph id="ph1">&lt;xref:System.Type.InvokeMember%2A?displayProperty=nameWithType&gt;</ph> method invokes the specified member, using the specified binding constraints and matching the specified argument list and culture.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.InvokeMember%2A?displayProperty=nameWithType&gt;</ph> método chama o membro especificado, usando as restrições de associação e especificados correspondente a lista de argumentos especificada e a cultura.</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the constructor, method, property, or field member to invoke.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que contém o nome do construtor, do método, da propriedade ou do membro de campo a ser invocado.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>An empty string ("") to invoke the default member.</source>
          <target state="translated">Uma cadeia de caracteres vazia ("") para invocar o membro padrão.</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>For IDispatch members, a string representing the DispID, for example "[DispID=3]".</source>
          <target state="translated">Para membros IDispatch, uma cadeia de caracteres que representa a DispID, por exemplo "[DispID=3]".</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>A bitmask comprised of one or more <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> that specify how the search is conducted.</source>
          <target state="translated">Um bitmask composto de um ou mais <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> que especificam como a pesquisa é realizada.</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>The access can be one of the <ph id="ph1">&lt;see langword="BindingFlags" /&gt;</ph> such as <ph id="ph2">&lt;see langword="Public" /&gt;</ph>, <ph id="ph3">&lt;see langword="NonPublic" /&gt;</ph>, <ph id="ph4">&lt;see langword="Private" /&gt;</ph>, <ph id="ph5">&lt;see langword="InvokeMethod" /&gt;</ph>, <ph id="ph6">&lt;see langword="GetField" /&gt;</ph>, and so on.</source>
          <target state="translated">O acesso pode ser um dos <ph id="ph1">&lt;see langword="BindingFlags" /&gt;</ph>, como <ph id="ph2">&lt;see langword="Public" /&gt;</ph>, <ph id="ph3">&lt;see langword="NonPublic" /&gt;</ph>, <ph id="ph4">&lt;see langword="Private" /&gt;</ph>, <ph id="ph5">&lt;see langword="InvokeMethod" /&gt;</ph>, <ph id="ph6">&lt;see langword="GetField" /&gt;</ph> e assim por diante.</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>The type of lookup need not be specified.</source>
          <target state="translated">O tipo de pesquisa não precisa ser especificado.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>If the type of lookup is omitted, <ph id="ph1">&lt;see langword="BindingFlags.Public" /&gt;</ph><ph id="ph2"> | </ph><ph id="ph3">&lt;see langword="BindingFlags.Instance" /&gt;</ph> will apply.</source>
          <target state="translated">Se o tipo de pesquisa for omitido, <ph id="ph1">&lt;see langword="BindingFlags.Public" /&gt;</ph><ph id="ph2"> | </ph><ph id="ph3">&lt;see langword="BindingFlags.Instance" /&gt;</ph> será aplicado.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.Binder" /&gt;</ph> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Reflection.Binder" /&gt;</ph> que define um conjunto de propriedades e habilita a associação, que pode envolver seleção de um método sobrecarregado, coerção de tipos de argumento e invocação de um membro por meio de reflexão.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph>, to use the <ph id="ph2">&lt;see cref="P:System.Type.DefaultBinder" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph>, para usar o <ph id="ph2">&lt;see cref="P:System.Type.DefaultBinder" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> on which to invoke the specified member.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> no qual invocar o membro especificado.</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>An array containing the arguments to pass to the member to invoke.</source>
          <target state="translated">Uma matriz que contém os argumentos que serão passados para o membro a ser invocado.</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterModifier" /&gt;</ph> objects representing the attributes associated with the corresponding element in the <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> array.</source>
          <target state="translated">Uma matriz de objetos <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterModifier" /&gt;</ph> que representa os atributos associados ao elemento correspondente na matriz <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>A parameter's associated attributes are stored in the member's signature.</source>
          <target state="translated">Os atributos associados ao parâmetro são armazenados na assinatura do membro.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>The default binder does not process this parameter.</source>
          <target state="translated">O associador padrão não processa este parâmetro.</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> object representing the globalization locale to use, which may be necessary for locale-specific conversions, such as converting a numeric String to a Double.</source>
          <target state="translated">O objeto <ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> que representa a localidade de globalização a ser usada, que pode ser necessária para realizar conversões específicas de localidade, como converter uma String numérica em uma Double.</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph> to use the current thread's <ph id="ph2">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph> para usar o <ph id="ph2">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> atual do thread.</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>An array containing the names of the parameters to which the values in the <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> array are passed.</source>
          <target state="translated">Uma matriz que contém os nomes dos parâmetros para os quais os valores na matriz <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> são passados.</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> representing the return value of the invoked member.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> que representa o valor retornado do membro invocado.</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>The <ph id="ph1">&lt;xref:System.Type.InvokeMember%2A?displayProperty=nameWithType&gt;</ph> method invokes the specified member, using the specified binding constraints and matching the specified argument list, modifiers, and culture.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.InvokeMember%2A?displayProperty=nameWithType&gt;</ph> método chama o membro especificado, usando as restrições de associação e especificados correspondente a lista de argumentos especificada, modificadores e cultura.</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.IsAbstract">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.IsAbstract" /&gt;</ph> property.</source>
          <target state="translated">Fornece acesso independente da versão para objetos COM à propriedade <ph id="ph1">&lt;see cref="P:System.Type.IsAbstract" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsAbstract">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> is abstract; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> for abstrato; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsAbstract">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsAbstract">
          <source>The <ph id="ph1">&lt;xref:System.Type.IsAbstract%2A?displayProperty=nameWithType&gt;</ph> property gets a value indicating whether the <ph id="ph2">&lt;xref:System.Type&gt;</ph> is abstract and must be overridden.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.IsAbstract%2A?displayProperty=nameWithType&gt;</ph> propriedade obtém um valor que indica se o <ph id="ph2">&lt;xref:System.Type&gt;</ph> é abstrato e deve ser substituído.</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.IsAnsiClass">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.IsAnsiClass" /&gt;</ph> property.</source>
          <target state="translated">Fornece acesso independente da versão para objetos COM à propriedade <ph id="ph1">&lt;see cref="P:System.Type.IsAnsiClass" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsAnsiClass">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the string format attribute <ph id="ph2">&lt;see langword="AnsiClass" /&gt;</ph> is selected for the <ph id="ph3">&lt;see cref="T:System.Type" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o atributo de formato da cadeia de caracteres <ph id="ph2">&lt;see langword="AnsiClass" /&gt;</ph> estiver selecionado para o <ph id="ph3">&lt;see cref="T:System.Type" /&gt;</ph>; caso contrário, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsAnsiClass">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsAnsiClass">
          <source>The <ph id="ph1">&lt;xref:System.Type.IsAnsiClass%2A?displayProperty=nameWithType&gt;</ph> property gets a value indicating whether the string format attribute <ph id="ph2">`AnsiClass`</ph> is selected for the <ph id="ph3">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.IsAnsiClass%2A?displayProperty=nameWithType&gt;</ph> propriedade obtém um valor que indica se a cadeia de caracteres de formato atributo <ph id="ph2">`AnsiClass`</ph> é selecionado para o <ph id="ph3">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.IsArray">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.IsArray" /&gt;</ph> property.</source>
          <target state="translated">Fornece acesso independente da versão para objetos COM à propriedade <ph id="ph1">&lt;see cref="P:System.Type.IsArray" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsArray">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> is an array; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> for uma matriz. Caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsArray">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsArray">
          <source>The <ph id="ph1">&lt;xref:System.Type.IsArray%2A?displayProperty=nameWithType&gt;</ph> property gets a value indicating whether the <ph id="ph2">&lt;xref:System.Type&gt;</ph> is an array.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.IsArray%2A?displayProperty=nameWithType&gt;</ph> propriedade obtém um valor que indica se o <ph id="ph2">&lt;xref:System.Type&gt;</ph> é uma matriz.</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.IsAssignableFrom(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> to compare with the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> a ser comparado com o <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> atual.</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.IsAssignableFrom(System.Type)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.IsAssignableFrom(System.Type)" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="M:System.Type.IsAssignableFrom(System.Type)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.IsAssignableFrom(System.Type)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="c" /&gt;</ph> and the current <ph id="ph3">&lt;see cref="T:System.Type" /&gt;</ph> represent the same type, or if the current <ph id="ph4">&lt;see cref="T:System.Type" /&gt;</ph> is in the inheritance hierarchy of <ph id="ph5">&lt;paramref name="c" /&gt;</ph>, or if the current <ph id="ph6">&lt;see cref="T:System.Type" /&gt;</ph> is an interface that <ph id="ph7">&lt;paramref name="c" /&gt;</ph> implements, or if <ph id="ph8">&lt;paramref name="c" /&gt;</ph> is a generic type parameter and the current <ph id="ph9">&lt;see cref="T:System.Type" /&gt;</ph> represents one of the constraints of <ph id="ph10">&lt;paramref name="c" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;paramref name="c" /&gt;</ph> e o <ph id="ph3">&lt;see cref="T:System.Type" /&gt;</ph> atual representarem o mesmo tipo ou, se o <ph id="ph4">&lt;see cref="T:System.Type" /&gt;</ph> atual estiver na hierarquia de herança de <ph id="ph5">&lt;paramref name="c" /&gt;</ph> ou, se o <ph id="ph6">&lt;see cref="T:System.Type" /&gt;</ph> atual for uma interface que o <ph id="ph7">&lt;paramref name="c" /&gt;</ph> implementa ou, se <ph id="ph8">&lt;paramref name="c" /&gt;</ph> for um parâmetro de tipo genérico e o <ph id="ph9">&lt;see cref="T:System.Type" /&gt;</ph> atual representar uma das restrições de <ph id="ph10">&lt;paramref name="c" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.IsAssignableFrom(System.Type)">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> if none of these conditions are the case, or if <ph id="ph2">&lt;paramref name="c" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="false" /&gt;</ph> se nenhuma dessas condições for o caso ou, se <ph id="ph2">&lt;paramref name="c" /&gt;</ph> for <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.IsAssignableFrom(System.Type)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.IsAutoClass">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.IsAutoClass" /&gt;</ph> property.</source>
          <target state="translated">Fornece acesso independente da versão para objetos COM à propriedade <ph id="ph1">&lt;see cref="P:System.Type.IsAutoClass" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsAutoClass">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the string format attribute <ph id="ph2">&lt;see langword="AutoClass" /&gt;</ph> is selected for the <ph id="ph3">&lt;see cref="T:System.Type" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o atributo de formato da cadeia de caracteres <ph id="ph2">&lt;see langword="AutoClass" /&gt;</ph> estiver selecionado para o <ph id="ph3">&lt;see cref="T:System.Type" /&gt;</ph>; caso contrário, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsAutoClass">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsAutoClass">
          <source>The <ph id="ph1">&lt;xref:System.Type.IsAutoClass%2A?displayProperty=nameWithType&gt;</ph> property gets a value indicating whether the string format attribute <ph id="ph2">`AutoClass`</ph> is selected for the <ph id="ph3">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.IsAutoClass%2A?displayProperty=nameWithType&gt;</ph> propriedade obtém um valor que indica se a cadeia de caracteres de formato atributo <ph id="ph2">`AutoClass`</ph> é selecionado para o <ph id="ph3">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.IsAutoLayout">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.IsAutoLayout" /&gt;</ph> property.</source>
          <target state="translated">Fornece acesso independente da versão para objetos COM à propriedade <ph id="ph1">&lt;see cref="P:System.Type.IsAutoLayout" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsAutoLayout">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the class layout attribute <ph id="ph2">&lt;see langword="AutoLayout" /&gt;</ph> is selected for the <ph id="ph3">&lt;see cref="T:System.Type" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se o atributo de layout de classe <ph id="ph2">&lt;see langword="AutoLayout" /&gt;</ph> é selecionado para o <ph id="ph3">&lt;see cref="T:System.Type" /&gt;</ph>; caso contrário, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsAutoLayout">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsAutoLayout">
          <source>The <ph id="ph1">&lt;xref:System.Type.IsAutoLayout%2A?displayProperty=nameWithType&gt;</ph> property gets a value indicating whether the class layout attribute <ph id="ph2">`AutoLayout`</ph> is selected for the <ph id="ph3">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.IsAutoLayout%2A?displayProperty=nameWithType&gt;</ph> propriedade obtém um valor que indica se o atributo de layout de classe <ph id="ph2">`AutoLayout`</ph> é selecionado para o <ph id="ph3">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.IsByRef">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.IsByRef" /&gt;</ph> property.</source>
          <target state="translated">Fornece acesso independente da versão para objetos COM à propriedade <ph id="ph1">&lt;see cref="P:System.Type.IsByRef" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsByRef">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> is passed by reference; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> for aprovado por referência; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsByRef">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsByRef">
          <source>The <ph id="ph1">&lt;xref:System.Type.IsByRef%2A?displayProperty=nameWithType&gt;</ph> property gets a value indicating whether the <ph id="ph2">&lt;xref:System.Type&gt;</ph> is passed by reference.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.IsByRef%2A?displayProperty=nameWithType&gt;</ph> propriedade obtém um valor que indica se o <ph id="ph2">&lt;xref:System.Type&gt;</ph> é passada por referência.</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.IsClass">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.IsClass" /&gt;</ph> property.</source>
          <target state="translated">Fornece acesso independente da versão para objetos COM à propriedade <ph id="ph1">&lt;see cref="P:System.Type.IsClass" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsClass">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> is a class; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> for uma classe; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsClass">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsClass">
          <source>The <ph id="ph1">&lt;xref:System.Type.IsClass%2A?displayProperty=nameWithType&gt;</ph> property gets a value indicating whether the <ph id="ph2">&lt;xref:System.Type&gt;</ph> is a class; that is, not a value type or interface.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.IsClass%2A?displayProperty=nameWithType&gt;</ph> propriedade obtém um valor que indica se o <ph id="ph2">&lt;xref:System.Type&gt;</ph> é uma classe; ou seja, não um tipo de valor ou interface.</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.IsCOMObject">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.IsCOMObject" /&gt;</ph> property.</source>
          <target state="translated">Fornece acesso independente da versão para objetos COM à propriedade <ph id="ph1">&lt;see cref="P:System.Type.IsCOMObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsCOMObject">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> is a COM object; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> for um objeto COM; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsCOMObject">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsCOMObject">
          <source>The <ph id="ph1">&lt;xref:System.Type.IsCOMObject%2A?displayProperty=nameWithType&gt;</ph> property gets a value indicating whether the <ph id="ph2">&lt;xref:System.Type&gt;</ph> is a COM object.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.IsCOMObject%2A?displayProperty=nameWithType&gt;</ph> propriedade obtém um valor que indica se o <ph id="ph2">&lt;xref:System.Type&gt;</ph> é um objeto COM.</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.IsContextful">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.IsContextful" /&gt;</ph> property.</source>
          <target state="translated">Fornece acesso independente da versão para objetos COM à propriedade <ph id="ph1">&lt;see cref="P:System.Type.IsContextful" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsContextful">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> can be hosted in a context; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> puder ser hospedado em um contexto; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsContextful">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsContextful">
          <source>The <ph id="ph1">&lt;xref:System.Type.IsContextful%2A?displayProperty=nameWithType&gt;</ph> property gets a value indicating whether the <ph id="ph2">&lt;xref:System.Type&gt;</ph> can be hosted in a context.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.IsContextful%2A?displayProperty=nameWithType&gt;</ph> propriedade obtém um valor que indica se o <ph id="ph2">&lt;xref:System.Type&gt;</ph> pode ser hospedado em um contexto.</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.IsDefined(System.Type,System.Boolean)">
          <source>The <ph id="ph1">&lt;see langword="Type" /&gt;</ph> object to which the custom attributes are applied.</source>
          <target state="translated">O objeto <ph id="ph1">&lt;see langword="Type" /&gt;</ph> ao qual os atributos personalizados são aplicados.</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.IsDefined(System.Type,System.Boolean)">
          <source>Specifies whether to search this member's inheritance chain to find the attributes.</source>
          <target state="translated">Especifica se deve-se pesquisar ou não a cadeia de herança desse membro para localizar os atributos.</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.IsDefined(System.Type,System.Boolean)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="M:System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.IsDefined(System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if one or more instance of <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> is applied to this member; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se uma ou mais instâncias de <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> forem aplicadas a esse membro; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.IsDefined(System.Type,System.Boolean)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.IsDefined(System.Type,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MemberInfo.IsDefined%2A?displayProperty=nameWithType&gt;</ph> method indicates whether one or more instance of <ph id="ph2">`attributeType`</ph> is applied to this member.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Reflection.MemberInfo.IsDefined%2A?displayProperty=nameWithType&gt;</ph> método indica se uma ou mais instância de <ph id="ph2">`attributeType`</ph> é aplicado a esse membro.</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.IsEnum">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.IsEnum" /&gt;</ph> property.</source>
          <target state="translated">Fornece acesso independente da versão para objetos COM à propriedade <ph id="ph1">&lt;see cref="P:System.Type.IsEnum" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsEnum">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> represents an enumeration; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> atual representar uma enumeração; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsEnum">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsEnum">
          <source>The <ph id="ph1">&lt;xref:System.Type.IsEnum%2A?displayProperty=nameWithType&gt;</ph> property gets a value indicating whether the current <ph id="ph2">&lt;xref:System.Type&gt;</ph> represents an enumeration.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.IsEnum%2A?displayProperty=nameWithType&gt;</ph> propriedade obtém um valor que indica se o atual <ph id="ph2">&lt;xref:System.Type&gt;</ph> representa uma enumeração.</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.IsExplicitLayout">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.IsExplicitLayout" /&gt;</ph> property.</source>
          <target state="translated">Fornece acesso independente da versão para objetos COM à propriedade <ph id="ph1">&lt;see cref="P:System.Type.IsExplicitLayout" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsExplicitLayout">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the class layout attribute <ph id="ph2">&lt;see langword="ExplicitLayout" /&gt;</ph> is selected for the <ph id="ph3">&lt;see cref="T:System.Type" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se o atributo de layout de classe <ph id="ph2">&lt;see langword="ExplicitLayout" /&gt;</ph> é selecionado para o <ph id="ph3">&lt;see cref="T:System.Type" /&gt;</ph>; caso contrário, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsExplicitLayout">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsExplicitLayout">
          <source>The <ph id="ph1">&lt;xref:System.Type.IsExplicitLayout%2A?displayProperty=nameWithType&gt;</ph> property gets a value indicating whether the class layout attribute <ph id="ph2">`ExplicitLayout`</ph> is selected for the <ph id="ph3">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.IsExplicitLayout%2A?displayProperty=nameWithType&gt;</ph> propriedade obtém um valor que indica se o atributo de layout de classe <ph id="ph2">`ExplicitLayout`</ph> é selecionado para o <ph id="ph3">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.IsImport">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.IsImport" /&gt;</ph> property.</source>
          <target state="translated">Fornece acesso independente da versão para objetos COM à propriedade <ph id="ph1">&lt;see cref="P:System.Type.IsImport" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsImport">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> has <ph id="ph3">&lt;see cref="T:System.Runtime.InteropServices.ComImportAttribute" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se o <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> tem <ph id="ph3">&lt;see cref="T:System.Runtime.InteropServices.ComImportAttribute" /&gt;</ph>; caso contrário, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsImport">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsImport">
          <source>The <ph id="ph1">&lt;xref:System.Type.IsImport%2A?displayProperty=nameWithType&gt;</ph> property gets a value indicating whether the <ph id="ph2">&lt;xref:System.Type&gt;</ph> has <ph id="ph3">&lt;xref:System.Runtime.InteropServices.ComImportAttribute&gt;</ph>, indicating that it was imported from a COM type library.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.IsImport%2A?displayProperty=nameWithType&gt;</ph> propriedade obtém um valor que indica se o <ph id="ph2">&lt;xref:System.Type&gt;</ph> tem <ph id="ph3">&lt;xref:System.Runtime.InteropServices.ComImportAttribute&gt;</ph>, indicando que ele foi importado de uma biblioteca de tipos COM.</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.IsInstanceOfType(System.Object)">
          <source>The object to compare with the current <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">O objeto a ser comparado com o <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> atual.</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.IsInstanceOfType(System.Object)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.IsInstanceOfType(System.Object)" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="M:System.Type.IsInstanceOfType(System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.IsInstanceOfType(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> is in the inheritance hierarchy of the object represented by <ph id="ph3">&lt;paramref name="o" /&gt;</ph>, or if the current <ph id="ph4">&lt;see cref="T:System.Type" /&gt;</ph> is an interface that <ph id="ph5">&lt;paramref name="o" /&gt;</ph> supports.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> atual estiver na hierarquia de herança do objeto representado pelo <ph id="ph3">&lt;paramref name="o" /&gt;</ph> ou se o <ph id="ph4">&lt;see cref="T:System.Type" /&gt;</ph> atual for uma interface com suporte no <ph id="ph5">&lt;paramref name="o" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.IsInstanceOfType(System.Object)">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> if neither of these conditions is the case, or if <ph id="ph2">&lt;paramref name="o" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>, or if the current <ph id="ph4">&lt;see cref="T:System.Type" /&gt;</ph> is an open generic type (that is, <ph id="ph5">&lt;see cref="P:System.Type.ContainsGenericParameters" /&gt;</ph> returns <ph id="ph6">&lt;see langword="true" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;see langword="false" /&gt;</ph> se nenhuma dessas condições for verdadeira, se <ph id="ph2">&lt;paramref name="o" /&gt;</ph> for <ph id="ph3">&lt;see langword="null" /&gt;</ph> ou se o <ph id="ph4">&lt;see cref="T:System.Type" /&gt;</ph> atual for um tipo genérico aberto (ou seja, <ph id="ph5">&lt;see cref="P:System.Type.ContainsGenericParameters" /&gt;</ph> retorna <ph id="ph6">&lt;see langword="true" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.IsInstanceOfType(System.Object)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.IsInstanceOfType(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Type.IsInstanceOfType%2A?displayProperty=nameWithType&gt;</ph> method determines whether the specified object is an instance of the current <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.IsInstanceOfType%2A?displayProperty=nameWithType&gt;</ph> método determina se o objeto especificado é uma instância do atual <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.IsInterface">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.IsInterface" /&gt;</ph> property.</source>
          <target state="translated">Fornece acesso independente da versão para objetos COM à propriedade <ph id="ph1">&lt;see cref="P:System.Type.IsInterface" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsInterface">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> is an interface; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> é uma interface; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsInterface">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsInterface">
          <source>The <ph id="ph1">&lt;xref:System.Type.IsInterface%2A?displayProperty=nameWithType&gt;</ph> property gets a value indicating whether the <ph id="ph2">&lt;xref:System.Type&gt;</ph> is an interface; that is, not a class or a value type.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.IsInterface%2A?displayProperty=nameWithType&gt;</ph> propriedade obtém um valor que indica se o <ph id="ph2">&lt;xref:System.Type&gt;</ph> é uma interface; não uma classe ou um tipo de valor.</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.IsLayoutSequential">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.IsLayoutSequential" /&gt;</ph> property.</source>
          <target state="translated">Fornece acesso independente da versão para objetos COM à propriedade <ph id="ph1">&lt;see cref="P:System.Type.IsLayoutSequential" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsLayoutSequential">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the class layout attribute <ph id="ph2">&lt;see langword="SequentialLayout" /&gt;</ph> is selected for the <ph id="ph3">&lt;see cref="T:System.Type" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se o atributo de layout de classe <ph id="ph2">&lt;see langword="SequentialLayout" /&gt;</ph> é selecionado para o <ph id="ph3">&lt;see cref="T:System.Type" /&gt;</ph>; caso contrário, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsLayoutSequential">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsLayoutSequential">
          <source>The <ph id="ph1">&lt;xref:System.Type.IsLayoutSequential%2A?displayProperty=nameWithType&gt;</ph> property gets a value indicating whether the class layout attribute <ph id="ph2">`SequentialLayout`</ph> is selected for the <ph id="ph3">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.IsLayoutSequential%2A?displayProperty=nameWithType&gt;</ph> propriedade obtém um valor que indica se o atributo de layout de classe <ph id="ph2">`SequentialLayout`</ph> é selecionado para o <ph id="ph3">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.IsMarshalByRef">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.IsMarshalByRef" /&gt;</ph> property.</source>
          <target state="translated">Fornece acesso independente da versão para objetos COM à propriedade <ph id="ph1">&lt;see cref="P:System.Type.IsMarshalByRef" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsMarshalByRef">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> is marshaled by reference; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se for realizado marshal no <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> por referência; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsMarshalByRef">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsMarshalByRef">
          <source>The <ph id="ph1">&lt;xref:System.Type.IsMarshalByRef%2A?displayProperty=nameWithType&gt;</ph> property gets a value indicating whether the Type is marshaled by reference.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.IsMarshalByRef%2A?displayProperty=nameWithType&gt;</ph> propriedade obtém um valor que indica se o tipo é empacotado por referência.</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.IsNestedAssembly">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.IsNestedAssembly" /&gt;</ph> property.</source>
          <target state="translated">Fornece acesso independente da versão para objetos COM à propriedade <ph id="ph1">&lt;see cref="P:System.Type.IsNestedAssembly" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsNestedAssembly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> is nested and visible only within its own assembly; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se o <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> aninhados e visíveis somente dentro de seu próprio assembly; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsNestedAssembly">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsNestedAssembly">
          <source>The <ph id="ph1">&lt;xref:System.Type.IsNestedAssembly%2A?displayProperty=nameWithType&gt;</ph> property gets a value indicating whether the <ph id="ph2">&lt;xref:System.Type&gt;</ph> is nested and visible only within its own assembly.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.IsNestedAssembly%2A?displayProperty=nameWithType&gt;</ph> propriedade obtém um valor que indica se o <ph id="ph2">&lt;xref:System.Type&gt;</ph> é visível somente dentro de seu próprio assembly e aninhadas.</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.IsNestedFamANDAssem">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.IsNestedFamANDAssem" /&gt;</ph> property.</source>
          <target state="translated">Fornece acesso independente da versão para objetos COM à propriedade <ph id="ph1">&lt;see cref="P:System.Type.IsNestedFamANDAssem" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsNestedFamANDAssem">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> is nested and visible only to classes that belong to both its own family and its own assembly; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se o <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> aninhados e visível somente para classes que pertencem ao seu próprio família e seu próprio assembly; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsNestedFamANDAssem">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsNestedFamANDAssem">
          <source>The <ph id="ph1">&lt;xref:System.Type.IsNestedFamANDAssem%2A?displayProperty=nameWithType&gt;</ph> property gets a value indicating whether the <ph id="ph2">&lt;xref:System.Type&gt;</ph> is nested and visible only to classes that belong to both its own family and its own assembly.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.IsNestedFamANDAssem%2A?displayProperty=nameWithType&gt;</ph> propriedade obtém um valor que indica se o <ph id="ph2">&lt;xref:System.Type&gt;</ph> é aninhadas e visíveis somente para classes que pertencem ao seu próprio família e seu próprio assembly.</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.IsNestedFamily">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.IsNestedFamily" /&gt;</ph> property.</source>
          <target state="translated">Fornece acesso independente da versão para objetos COM à propriedade <ph id="ph1">&lt;see cref="P:System.Type.IsNestedFamily" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsNestedFamily">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> is nested and visible only within its own family; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se o <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> aninhados e visíveis somente dentro de seu próprio família; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsNestedFamily">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsNestedFamily">
          <source>The <ph id="ph1">&lt;xref:System.Type.IsNestedFamily%2A?displayProperty=nameWithType&gt;</ph> property gets a value indicating whether the <ph id="ph2">&lt;xref:System.Type&gt;</ph> is nested and visible only within its own family.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.IsNestedFamily%2A?displayProperty=nameWithType&gt;</ph> propriedade obtém um valor que indica se o <ph id="ph2">&lt;xref:System.Type&gt;</ph> é visível somente dentro de seu próprio família e aninhadas.</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.IsNestedFamORAssem">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.IsNestedFamORAssem" /&gt;</ph> property.</source>
          <target state="translated">Fornece acesso independente da versão para objetos COM à propriedade <ph id="ph1">&lt;see cref="P:System.Type.IsNestedFamORAssem" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsNestedFamORAssem">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> is nested and visible only to classes that belong to its own family or to its own assembly; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se o <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> aninhados e visível somente para classes que pertencem à família de seu próprio ou seu próprio assembly; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsNestedFamORAssem">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsNestedFamORAssem">
          <source>The <ph id="ph1">&lt;xref:System.Type.IsNestedFamORAssem%2A?displayProperty=nameWithType&gt;</ph> property gets a value indicating whether the <ph id="ph2">&lt;xref:System.Type&gt;</ph> is nested and visible only to classes that belong to either its own family or to its own assembly.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.IsNestedFamORAssem%2A?displayProperty=nameWithType&gt;</ph> propriedade obtém um valor que indica se o <ph id="ph2">&lt;xref:System.Type&gt;</ph> é visível somente para classes que pertencem a uma família de seu próprio ou seu próprio assembly e aninhadas.</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.IsNestedPrivate">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.IsNestedPrivate" /&gt;</ph> property.</source>
          <target state="translated">Fornece acesso independente da versão para objetos COM à propriedade <ph id="ph1">&lt;see cref="P:System.Type.IsNestedPrivate" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsNestedPrivate">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> is nested and declared private; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se o <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> é aninhados e declarado particular; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsNestedPrivate">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsNestedPrivate">
          <source>The <ph id="ph1">&lt;xref:System.Type.IsNestedPrivate%2A?displayProperty=nameWithType&gt;</ph> property gets a value indicating whether the <ph id="ph2">&lt;xref:System.Type&gt;</ph> is nested and declared private.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.IsNestedPrivate%2A?displayProperty=nameWithType&gt;</ph> propriedade obtém um valor que indica se o <ph id="ph2">&lt;xref:System.Type&gt;</ph> é aninhados e declarado particular.</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.IsNestedPublic">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.IsNestedPublic" /&gt;</ph> property.</source>
          <target state="translated">Fornece acesso independente da versão para objetos COM à propriedade <ph id="ph1">&lt;see cref="P:System.Type.IsNestedPublic" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsNestedPublic">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the class is nested and declared public; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se a classe é declarado e aninhado público; Caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsNestedPublic">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsNestedPublic">
          <source>The <ph id="ph1">&lt;xref:System.Type.IsNestedPublic%2A?displayProperty=nameWithType&gt;</ph> property gets a value indicating whether a class is nested and declared public.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.IsNestedPublic%2A?displayProperty=nameWithType&gt;</ph> propriedade obtém um valor que indica se uma classe é aninhada e declarado como pública.</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.IsNotPublic">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.IsNotPublic" /&gt;</ph> property.</source>
          <target state="translated">Fornece acesso independente da versão para objetos COM à propriedade <ph id="ph1">&lt;see cref="P:System.Type.IsNotPublic" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsNotPublic">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the top-level <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> is not declared public; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se o nível superior <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> não está declarado como público; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsNotPublic">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsNotPublic">
          <source>The <ph id="ph1">&lt;xref:System.Type.IsNotPublic%2A?displayProperty=nameWithType&gt;</ph> property gets a value indicating whether the top-level <ph id="ph2">&lt;xref:System.Type&gt;</ph> is not declared public.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.IsNotPublic%2A?displayProperty=nameWithType&gt;</ph> propriedade obtém um valor que indica se o nível superior <ph id="ph2">&lt;xref:System.Type&gt;</ph> não está declarado como público.</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.IsPointer">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.IsPointer" /&gt;</ph> property.</source>
          <target state="translated">Fornece acesso independente da versão para objetos COM à propriedade <ph id="ph1">&lt;see cref="P:System.Type.IsPointer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsPointer">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> is a pointer; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> for um ponteiro; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsPointer">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsPointer">
          <source>The <ph id="ph1">&lt;xref:System.Type.IsPointer%2A?displayProperty=nameWithType&gt;</ph> property gets a value indicating whether the <ph id="ph2">&lt;xref:System.Type&gt;</ph> is a pointer.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.IsPointer%2A?displayProperty=nameWithType&gt;</ph> propriedade obtém um valor que indica se o <ph id="ph2">&lt;xref:System.Type&gt;</ph> é um ponteiro.</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.IsPrimitive">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.IsPrimitive" /&gt;</ph> property.</source>
          <target state="translated">Fornece acesso independente da versão para objetos COM à propriedade <ph id="ph1">&lt;see cref="P:System.Type.IsPrimitive" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsPrimitive">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> is one of the primitive types; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> for um dos tipos primitivos; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsPrimitive">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsPrimitive">
          <source>The <ph id="ph1">&lt;xref:System.Type.IsPrimitive%2A?displayProperty=nameWithType&gt;</ph> property gets a value indicating whether the <ph id="ph2">&lt;xref:System.Type&gt;</ph> is one of the primitive types.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.IsPrimitive%2A?displayProperty=nameWithType&gt;</ph> propriedade obtém um valor que indica se o <ph id="ph2">&lt;xref:System.Type&gt;</ph> é um dos tipos primitivos.</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.IsPublic">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.IsPublic" /&gt;</ph> property.</source>
          <target state="translated">Fornece acesso independente da versão para objetos COM à propriedade <ph id="ph1">&lt;see cref="P:System.Type.IsPublic" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsPublic">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the top-level <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> is declared public; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se o nível superior <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> está declarado como público; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsPublic">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsPublic">
          <source>The <ph id="ph1">&lt;xref:System.Type.IsPublic%2A?displayProperty=nameWithType&gt;</ph> property gets a value indicating whether the top-level <ph id="ph2">&lt;xref:System.Type&gt;</ph> is declared public.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.IsPublic%2A?displayProperty=nameWithType&gt;</ph> propriedade obtém um valor que indica se o nível superior <ph id="ph2">&lt;xref:System.Type&gt;</ph> está declarado como público.</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.IsSealed">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.IsSealed" /&gt;</ph> property.</source>
          <target state="translated">Fornece acesso independente da versão para objetos COM à propriedade <ph id="ph1">&lt;see cref="P:System.Type.IsSealed" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsSealed">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> is declared sealed; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se o <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> é declarado lacrado; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsSealed">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsSealed">
          <source>The <ph id="ph1">&lt;xref:System.Type.IsSealed%2A?displayProperty=nameWithType&gt;</ph> property gets a value indicating whether the <ph id="ph2">&lt;xref:System.Type&gt;</ph> is declared sealed.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.IsSealed%2A?displayProperty=nameWithType&gt;</ph> propriedade obtém um valor que indica se o <ph id="ph2">&lt;xref:System.Type&gt;</ph> está declarado como sealed.</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.IsSerializable">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.IsSerializable" /&gt;</ph> property.</source>
          <target state="translated">Fornece acesso independente da versão para objetos COM à propriedade <ph id="ph1">&lt;see cref="P:System.Type.IsSerializable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsSerializable">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> is serializable; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> for serializável; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsSerializable">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsSerializable">
          <source>The <ph id="ph1">&lt;xref:System.Type.IsSerializable%2A?displayProperty=nameWithType&gt;</ph> property gets a value indicating whether the <ph id="ph2">&lt;xref:System.Type&gt;</ph> is serializable.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.IsSerializable%2A?displayProperty=nameWithType&gt;</ph> propriedade obtém um valor que indica se o <ph id="ph2">&lt;xref:System.Type&gt;</ph> é serializável.</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.IsSpecialName">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.IsSpecialName" /&gt;</ph> property.</source>
          <target state="translated">Fornece acesso independente da versão para objetos COM à propriedade <ph id="ph1">&lt;see cref="P:System.Type.IsSpecialName" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsSpecialName">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> has a name that requires special handling; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se o <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> tem um nome que requer um tratamento especial; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsSpecialName">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsSpecialName">
          <source>The <ph id="ph1">&lt;xref:System.Type.IsSpecialName%2A?displayProperty=nameWithType&gt;</ph> property gets a value indicating whether the <ph id="ph2">&lt;xref:System.Type&gt;</ph> has a name that requires special handling.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.IsSpecialName%2A?displayProperty=nameWithType&gt;</ph> propriedade obtém um valor que indica se o <ph id="ph2">&lt;xref:System.Type&gt;</ph> tem um nome que requer manipulação especial.</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.IsSubclassOf(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> to compare with the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> a ser comparado com o <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> atual.</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.IsSubclassOf(System.Type)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.IsSubclassOf(System.Type)" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="M:System.Type.IsSubclassOf(System.Type)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.IsSubclassOf(System.Type)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> represented by the <ph id="ph3">&lt;paramref name="c" /&gt;</ph> parameter and the current <ph id="ph4">&lt;see cref="T:System.Type" /&gt;</ph> represent classes, and the class represented by the current <ph id="ph5">&lt;see cref="T:System.Type" /&gt;</ph> derives from the class represented by <ph id="ph6">&lt;paramref name="c" /&gt;</ph>; otherwise, <ph id="ph7">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> representado pelo parâmetro <ph id="ph3">&lt;paramref name="c" /&gt;</ph> e o <ph id="ph4">&lt;see cref="T:System.Type" /&gt;</ph> atual representarem classes e a classe representada pelo <ph id="ph5">&lt;see cref="T:System.Type" /&gt;</ph> atual derivar da classe representada por <ph id="ph6">&lt;paramref name="c" /&gt;</ph>; caso contrário, <ph id="ph7">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.IsSubclassOf(System.Type)">
          <source>This method also returns <ph id="ph1">&lt;see langword="false" /&gt;</ph> if <ph id="ph2">&lt;paramref name="c" /&gt;</ph> and the current <ph id="ph3">&lt;see cref="T:System.Type" /&gt;</ph> represent the same class.</source>
          <target state="translated">Esse método também retornará <ph id="ph1">&lt;see langword="false" /&gt;</ph> se <ph id="ph2">&lt;paramref name="c" /&gt;</ph> e o <ph id="ph3">&lt;see cref="T:System.Type" /&gt;</ph> atual representarem a mesma classe.</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.IsSubclassOf(System.Type)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.IsSubclassOf(System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.Type.IsSubclassOf%2A?displayProperty=nameWithType&gt;</ph> method determines whether the class represented by the current <ph id="ph2">&lt;xref:System.Type&gt;</ph> derives from the class represented by the specified <ph id="ph3">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.IsSubclassOf%2A?displayProperty=nameWithType&gt;</ph> método determina se a classe representado pelo atual <ph id="ph2">&lt;xref:System.Type&gt;</ph> deriva da classe representada pelo <ph id="ph3">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.IsUnicodeClass">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.IsUnicodeClass" /&gt;</ph> property.</source>
          <target state="translated">Fornece acesso independente da versão para objetos COM à propriedade <ph id="ph1">&lt;see cref="P:System.Type.IsUnicodeClass" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsUnicodeClass">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the string format attribute <ph id="ph2">&lt;see langword="UnicodeClass" /&gt;</ph> is selected for the <ph id="ph3">&lt;see cref="T:System.Type" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o atributo de formato da cadeia de caracteres <ph id="ph2">&lt;see langword="UnicodeClass" /&gt;</ph> estiver selecionado para o <ph id="ph3">&lt;see cref="T:System.Type" /&gt;</ph>; caso contrário, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsUnicodeClass">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsUnicodeClass">
          <source>The <ph id="ph1">&lt;xref:System.Type.IsUnicodeClass%2A?displayProperty=nameWithType&gt;</ph> property gets a value indicating whether the string format attribute <ph id="ph2">`UnicodeClass`</ph> is selected for the <ph id="ph3">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.IsUnicodeClass%2A?displayProperty=nameWithType&gt;</ph> propriedade obtém um valor que indica se a cadeia de caracteres de formato atributo <ph id="ph2">`UnicodeClass`</ph> é selecionado para o <ph id="ph3">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.IsValueType">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.IsValueType" /&gt;</ph> property.</source>
          <target state="translated">Fornece acesso independente da versão para objetos COM à propriedade <ph id="ph1">&lt;see cref="P:System.Type.IsValueType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsValueType">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> is a value type; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> for um tipo de valor; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsValueType">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.IsValueType">
          <source>The <ph id="ph1">&lt;xref:System.Type.IsValueType%2A?displayProperty=nameWithType&gt;</ph> property gets a value indicating whether the <ph id="ph2">&lt;xref:System.Type&gt;</ph> is a value type.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.IsValueType%2A?displayProperty=nameWithType&gt;</ph> propriedade obtém um valor que indica se o <ph id="ph2">&lt;xref:System.Type&gt;</ph> é um tipo de valor.</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.MemberType">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.MemberType" /&gt;</ph> property.</source>
          <target state="translated">Fornece acesso independente da versão para objetos COM à propriedade <ph id="ph1">&lt;see cref="P:System.Type.MemberType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.MemberType">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.MemberTypes" /&gt;</ph> value indicating that this member is a type or a nested type.</source>
          <target state="translated">Um valor <ph id="ph1">&lt;see cref="T:System.Reflection.MemberTypes" /&gt;</ph> que indica que esse membro é um tipo ou um tipo aninhado.</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.MemberType">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.MemberType">
          <source>The <ph id="ph1">&lt;xref:System.Type.MemberType%2A?displayProperty=nameWithType&gt;</ph> property gets a <ph id="ph2">&lt;xref:System.Reflection.MemberTypes&gt;</ph> value indicating that this member is a type or a nested type.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.MemberType%2A?displayProperty=nameWithType&gt;</ph> propriedade obtém um <ph id="ph2">&lt;xref:System.Reflection.MemberTypes&gt;</ph> valor que indica que esse membro é um tipo ou um tipo aninhado.</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.Module">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.Module" /&gt;</ph> property.</source>
          <target state="translated">Fornece acesso independente da versão para objetos COM à propriedade <ph id="ph1">&lt;see cref="P:System.Type.Module" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.Module">
          <source>The name of the module in which the current <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> is defined.</source>
          <target state="translated">O nome do módulo no qual atual <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> está definido.</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.Module">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.Module">
          <source>The <ph id="ph1">&lt;xref:System.Type.Module%2A?displayProperty=nameWithType&gt;</ph> property gets the module (the DLL) in which the current <ph id="ph2">&lt;xref:System.Type&gt;</ph> is defined.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.Module%2A?displayProperty=nameWithType&gt;</ph> propriedade obtém o módulo (DLL) no qual atual <ph id="ph2">&lt;xref:System.Type&gt;</ph> está definido.</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.Name">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Reflection.MemberInfo.Name" /&gt;</ph> property.</source>
          <target state="translated">Fornece acesso independente da versão para objetos COM à propriedade <ph id="ph1">&lt;see cref="P:System.Reflection.MemberInfo.Name" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.Name">
          <source>The name of the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">O nome do <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.Name">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.Name">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MemberInfo.Name%2A?displayProperty=nameWithType&gt;</ph> property gets the name of the <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Reflection.MemberInfo.Name%2A?displayProperty=nameWithType&gt;</ph> propriedade obtém o nome do <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.Namespace">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.Namespace" /&gt;</ph> property.</source>
          <target state="translated">Fornece acesso independente da versão para objetos COM à propriedade <ph id="ph1">&lt;see cref="P:System.Type.Namespace" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.Namespace">
          <source>The namespace of the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">O namespace do <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.Namespace">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.Namespace">
          <source>The <ph id="ph1">&lt;xref:System.Type.Namespace%2A?displayProperty=nameWithType&gt;</ph> property gets the namespace of the <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.Namespace%2A?displayProperty=nameWithType&gt;</ph> propriedade obtém o namespace de <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.ReflectedType">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.ReflectedType" /&gt;</ph> property.</source>
          <target state="translated">Fornece acesso independente da versão para objetos COM à propriedade <ph id="ph1">&lt;see cref="P:System.Type.ReflectedType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.ReflectedType">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> object through which this <ph id="ph2">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> object was obtained.</source>
          <target state="translated">O objeto <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> por meio do qual este objeto <ph id="ph2">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> foi obtido.</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.ReflectedType">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.ReflectedType">
          <source>The <ph id="ph1">&lt;xref:System.Type.ReflectedType%2A?displayProperty=nameWithType&gt;</ph> property gets the class object that was used to obtain this member.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.ReflectedType%2A?displayProperty=nameWithType&gt;</ph> propriedade obtém o objeto da classe que foi usado para obter esse membro.</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.ToString">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.ToString" /&gt;</ph> method.</source>
          <target state="translated">Fornece objetos COM com acesso independente de versão para o método <ph id="ph1">&lt;see cref="M:System.Type.ToString" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Type.ToString">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> representing the name of the current <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">Uma <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que representa o nome da <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> atual.</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.ToString">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Type.ToString">
          <source>The <ph id="ph1">&lt;xref:System.Type.ToString%2A?displayProperty=nameWithType&gt;</ph> method returns the name of the current <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.ToString%2A?displayProperty=nameWithType&gt;</ph> método retorna o nome do atual <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.TypeHandle">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.TypeHandle" /&gt;</ph> property.</source>
          <target state="translated">Fornece acesso independente da versão para objetos COM à propriedade <ph id="ph1">&lt;see cref="P:System.Type.TypeHandle" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.TypeHandle">
          <source>The handle for the current <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">O identificador do <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> atual.</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.TypeHandle">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.TypeHandle">
          <source>The <ph id="ph1">&lt;xref:System.Type.TypeHandle%2A?displayProperty=nameWithType&gt;</ph> property gets the handle for the current <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.TypeHandle%2A?displayProperty=nameWithType&gt;</ph> propriedade obtém o identificador atual <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.TypeInitializer">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.TypeInitializer" /&gt;</ph> property.</source>
          <target state="translated">Fornece acesso independente da versão para objetos COM à propriedade <ph id="ph1">&lt;see cref="P:System.Type.TypeInitializer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.TypeInitializer">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.ConstructorInfo" /&gt;</ph> containing the name of the class constructor for the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Reflection.ConstructorInfo" /&gt;</ph> que contém o nome do construtor de classe para o <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.TypeInitializer">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.TypeInitializer">
          <source>The <ph id="ph1">&lt;xref:System.Type.TypeInitializer%2A?displayProperty=nameWithType&gt;</ph> property gets the initializer for the <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.TypeInitializer%2A?displayProperty=nameWithType&gt;</ph> propriedade obtém o inicializador para o <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Type.UnderlyingSystemType">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Type.UnderlyingSystemType" /&gt;</ph> property.</source>
          <target state="translated">Fornece acesso independente da versão para objetos COM à propriedade <ph id="ph1">&lt;see cref="P:System.Type.UnderlyingSystemType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.UnderlyingSystemType">
          <source>The underlying system type for the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">O tipo de sistema subjacente para o <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.UnderlyingSystemType">
          <source>This property is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Type.UnderlyingSystemType">
          <source>The <ph id="ph1">&lt;xref:System.Type.UnderlyingSystemType%2A?displayProperty=nameWithType&gt;</ph> property indicates the type provided by the common language runtime that represents this type.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Type.UnderlyingSystemType%2A?displayProperty=nameWithType&gt;</ph> propriedade indica o tipo fornecido pelo common language runtime que representa esse tipo.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>