<Type Name="ITypeLibExporterNotifySink" FullName="System.Runtime.InteropServices.ITypeLibExporterNotifySink">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6de4c5f618909fc925bf243d0b660b6aa1a0c033" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37469766" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ITypeLibExporterNotifySink" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITypeLibExporterNotifySink" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.ITypeLibExporterNotifySink" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITypeLibExporterNotifySink" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITypeLibExporterNotifySink" />
  <TypeSignature Language="F#" Value="type ITypeLibExporterNotifySink = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("f1c3bf77-c3e4-11d3-88e7-00902754c43a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="f71ab-101">Fornece um mecanismo de retorno de chamada para o conversor de assembly para informar o chamador do status da conversão e envolver o chamador no processo de conversão em si.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f71ab-101">Provides a callback mechanism for the assembly converter to inform the caller of the status of the conversion, and involve the caller in the conversion process itself.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f71ab-102">Essa interface é usada no processo de conversão de um assembly gerenciado em uma biblioteca de tipos COM.</span><span class="sxs-lookup"><span data-stu-id="f71ab-102">This interface is used in the process of converting a managed assembly to a COM type library.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ReportEvent">
      <MemberSignature Language="C#" Value="public void ReportEvent (System.Runtime.InteropServices.ExporterEventKind eventKind, int eventCode, string eventMsg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReportEvent(valuetype System.Runtime.InteropServices.ExporterEventKind eventKind, int32 eventCode, string eventMsg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ITypeLibExporterNotifySink.ReportEvent(System.Runtime.InteropServices.ExporterEventKind,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReportEvent (eventKind As ExporterEventKind, eventCode As Integer, eventMsg As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReportEvent(System::Runtime::InteropServices::ExporterEventKind eventKind, int eventCode, System::String ^ eventMsg);" />
      <MemberSignature Language="F#" Value="abstract member ReportEvent : System.Runtime.InteropServices.ExporterEventKind * int * string -&gt; unit" Usage="iTypeLibExporterNotifySink.ReportEvent (eventKind, eventCode, eventMsg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventKind" Type="System.Runtime.InteropServices.ExporterEventKind" />
        <Parameter Name="eventCode" Type="System.Int32" />
        <Parameter Name="eventMsg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventKind">
          <span data-ttu-id="f71ab-103">Um valor <see cref="T:System.Runtime.InteropServices.ExporterEventKind" /> que indica o tipo de evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f71ab-103">An <see cref="T:System.Runtime.InteropServices.ExporterEventKind" /> value indicating the type of event.</span>
          </span>
        </param>
        <param name="eventCode">
          <span data-ttu-id="f71ab-104">Indica informações extras sobre o evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f71ab-104">Indicates extra information about the event.</span>
          </span>
        </param>
        <param name="eventMsg">
          <span data-ttu-id="f71ab-105">Uma mensagem gerada pelo evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f71ab-105">A message generated by the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f71ab-106">Notifica o chamador de que um evento ocorreu durante a conversão de um assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f71ab-106">Notifies the caller that an event occured during the conversion of an assembly.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f71ab-107">Se o evento que está sendo relatado é um aviso ou erro, `eventCode` conterá o HRESULT do erro.</span><span class="sxs-lookup"><span data-stu-id="f71ab-107">If the event being reported is a warning or an error, `eventCode` will contain the HRESULT of the error.</span></span> <span data-ttu-id="f71ab-108">Para qualquer outro evento será 0.</span><span class="sxs-lookup"><span data-stu-id="f71ab-108">For any other event it will be 0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveRef">
      <MemberSignature Language="C#" Value="public object ResolveRef (System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ResolveRef(class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ITypeLibExporterNotifySink.ResolveRef(System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ResolveRef(System::Reflection::Assembly ^ assembly);" />
      <MemberSignature Language="F#" Value="abstract member ResolveRef : System.Reflection.Assembly -&gt; obj" Usage="iTypeLibExporterNotifySink.ResolveRef assembly" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="assembly">
          <span data-ttu-id="f71ab-109">O assembly a resolver.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f71ab-109">The assembly to resolve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f71ab-110">Pede ao usuário para resolver uma referência a outro assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f71ab-110">Asks the user to resolve a reference to another assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f71ab-111">A biblioteca de tipos para <paramref name="assembly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f71ab-111">The type library for <paramref name="assembly" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f71ab-112">Se uma referência a outro assembly for encontrada durante a conversão de um assembly, o chamador deverá retornar a biblioteca de tipo correto (o objeto que implementa `ITypeLib` interface) para esse assembly.</span><span class="sxs-lookup"><span data-stu-id="f71ab-112">If a reference to another assembly is found during the conversion of an assembly, the caller is asked to return the correct type library (the object that implements `ITypeLib` interface) for that assembly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>