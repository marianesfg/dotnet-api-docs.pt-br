<Type Name="ITypeLibImporterNotifySink" FullName="System.Runtime.InteropServices.ITypeLibImporterNotifySink">
  <TypeSignature Language="C#" Value="public interface ITypeLibImporterNotifySink" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITypeLibImporterNotifySink" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.ITypeLibImporterNotifySink" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITypeLibImporterNotifySink" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITypeLibImporterNotifySink" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("f1c3bf76-c3e4-11d3-88e7-00902754c43a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c663f-101">Fornece um mecanismo de retorno de chamada para o conversor de biblioteca de tipos para informar o chamador do status da conversão e envolve o chamador no processo de conversão em si.</span><span class="sxs-lookup"><span data-stu-id="c663f-101">Provides a callback mechanism for the type library converter to inform the caller of the status of the conversion, and involve the caller in the conversion process itself.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c663f-102">Essa interface é usada no processo de conversão de uma biblioteca de tipo para um assembly gerenciado.</span><span class="sxs-lookup"><span data-stu-id="c663f-102">This interface is used in the process of converting a COM type library to a managed assembly.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ReportEvent">
      <MemberSignature Language="C#" Value="public void ReportEvent (System.Runtime.InteropServices.ImporterEventKind eventKind, int eventCode, string eventMsg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReportEvent(valuetype System.Runtime.InteropServices.ImporterEventKind eventKind, int32 eventCode, string eventMsg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ITypeLibImporterNotifySink.ReportEvent(System.Runtime.InteropServices.ImporterEventKind,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReportEvent (eventKind As ImporterEventKind, eventCode As Integer, eventMsg As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReportEvent(System::Runtime::InteropServices::ImporterEventKind eventKind, int eventCode, System::String ^ eventMsg);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventKind" Type="System.Runtime.InteropServices.ImporterEventKind" />
        <Parameter Name="eventCode" Type="System.Int32" />
        <Parameter Name="eventMsg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventKind"><span data-ttu-id="c663f-103">Um valor <see cref="T:System.Runtime.InteropServices.ImporterEventKind" /> que indica o tipo de evento.</span><span class="sxs-lookup"><span data-stu-id="c663f-103">An <see cref="T:System.Runtime.InteropServices.ImporterEventKind" /> value indicating the type of event.</span></span></param>
        <param name="eventCode"><span data-ttu-id="c663f-104">Indica informações extras sobre o evento.</span><span class="sxs-lookup"><span data-stu-id="c663f-104">Indicates extra information about the event.</span></span></param>
        <param name="eventMsg"><span data-ttu-id="c663f-105">Uma mensagem gerada pelo evento.</span><span class="sxs-lookup"><span data-stu-id="c663f-105">A message generated by the event.</span></span></param>
        <summary><span data-ttu-id="c663f-106">Notifica o chamador de que um evento ocorreu durante a conversão de uma biblioteca de tipos.</span><span class="sxs-lookup"><span data-stu-id="c663f-106">Notifies the caller that an event occured during the conversion of a type library.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c663f-107">Se o evento que está sendo relatado é um aviso ou erro, `eventCode` conterá o HRESULT do erro.</span><span class="sxs-lookup"><span data-stu-id="c663f-107">If the event being reported is a warning or an error, `eventCode` will contain the HRESULT of the error.</span></span> <span data-ttu-id="c663f-108">Para qualquer outro evento será 0.</span><span class="sxs-lookup"><span data-stu-id="c663f-108">For any other event it will be 0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveRef">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly ResolveRef (object typeLib);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Assembly ResolveRef(object typeLib) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ITypeLibImporterNotifySink.ResolveRef(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ResolveRef (typeLib As Object) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Assembly ^ ResolveRef(System::Object ^ typeLib);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeLib" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="typeLib"><span data-ttu-id="c663f-109">O objeto que implementa a interface do <see langword="ITypeLib" /> que precisa ser resolvida.</span><span class="sxs-lookup"><span data-stu-id="c663f-109">The object implementing the <see langword="ITypeLib" /> interface that needs to be resolved.</span></span></param>
        <summary><span data-ttu-id="c663f-110">Pede ao usuário para resolver uma referência a outra biblioteca de tipos.</span><span class="sxs-lookup"><span data-stu-id="c663f-110">Asks the user to resolve a reference to another type library.</span></span></summary>
        <returns><span data-ttu-id="c663f-111">O assembly correspondente a <paramref name="typeLib" />.</span><span class="sxs-lookup"><span data-stu-id="c663f-111">The assembly corresponding to <paramref name="typeLib" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c663f-112">Se for encontrada uma referência a outra biblioteca de tipos durante a conversão de uma biblioteca de tipos, o chamador deve retornar o assembly correto para essa biblioteca de tipo.</span><span class="sxs-lookup"><span data-stu-id="c663f-112">If a reference to another type library is found during the conversion of a type library, the caller is asked to return the correct assembly for that type library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>