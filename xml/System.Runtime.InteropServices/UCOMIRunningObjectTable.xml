<Type Name="UCOMIRunningObjectTable" FullName="System.Runtime.InteropServices.UCOMIRunningObjectTable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a9a18198a91a9762b0a3706bd451dd94114fd207" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37469139" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface UCOMIRunningObjectTable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract UCOMIRunningObjectTable" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.UCOMIRunningObjectTable" />
  <TypeSignature Language="VB.NET" Value="Public Interface UCOMIRunningObjectTable" />
  <TypeSignature Language="C++ CLI" Value="public interface class UCOMIRunningObjectTable" />
  <TypeSignature Language="F#" Value="type UCOMIRunningObjectTable = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00000010-0000-0000-c000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="43796-101">Use <see cref="T:System.Runtime.InteropServices.ComTypes.IRunningObjectTable" /> em seu lugar.</span>
      <span class="sxs-lookup">
        <span data-stu-id="43796-101">Use <see cref="T:System.Runtime.InteropServices.ComTypes.IRunningObjectTable" /> instead.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43796-102">Para obter mais informações, consulte a documentação existente de `IRunningObjectTable` na subpasta da biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="43796-102">For more information, please see the existing documentation for `IRunningObjectTable` in the com subfolder of the MSDN library.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="EnumRunning">
      <MemberSignature Language="C#" Value="public void EnumRunning (out System.Runtime.InteropServices.UCOMIEnumMoniker ppenumMoniker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnumRunning([out] class System.Runtime.InteropServices.UCOMIEnumMoniker&amp; ppenumMoniker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIRunningObjectTable.EnumRunning(System.Runtime.InteropServices.UCOMIEnumMoniker@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnumRunning (ByRef ppenumMoniker As UCOMIEnumMoniker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumRunning([Runtime::InteropServices::Out] System::Runtime::InteropServices::UCOMIEnumMoniker ^ % ppenumMoniker);" />
      <MemberSignature Language="F#" Value="abstract member EnumRunning :  -&gt; unit" Usage="uCOMIRunningObjectTable.EnumRunning ppenumMoniker" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ppenumMoniker" Type="System.Runtime.InteropServices.UCOMIEnumMoniker&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="ppenumMoniker">
          <span data-ttu-id="43796-103">No retorno bem-sucedido, o novo enumerador para o ROT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43796-103">On successful return, the new enumerator for the ROT.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43796-104">Enumera os objetos registrados atualmente como em execução.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43796-104">Enumerates the objects currently registered as running.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43796-105">Para obter mais informações, consulte a documentação existente de `IRunningObjectTable::EnumRunning` na biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="43796-105">For more information, please see the existing documentation for `IRunningObjectTable::EnumRunning` in the MSDN library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public void GetObject (System.Runtime.InteropServices.UCOMIMoniker pmkObjectName, out object ppunkObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObject(class System.Runtime.InteropServices.UCOMIMoniker pmkObjectName, [out] object&amp; ppunkObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIRunningObjectTable.GetObject(System.Runtime.InteropServices.UCOMIMoniker,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetObject (pmkObjectName As UCOMIMoniker, ByRef ppunkObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetObject(System::Runtime::InteropServices::UCOMIMoniker ^ pmkObjectName, [Runtime::InteropServices::Out] System::Object ^ % ppunkObject);" />
      <MemberSignature Language="F#" Value="abstract member GetObject : System.Runtime.InteropServices.UCOMIMoniker *  -&gt; unit" Usage="uCOMIRunningObjectTable.GetObject (pmkObjectName, ppunkObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pmkObjectName" Type="System.Runtime.InteropServices.UCOMIMoniker" />
        <Parameter Name="ppunkObject" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pmkObjectName">
          <span data-ttu-id="43796-106">Referência ao moniker a ser pesquisado no ROT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43796-106">Reference to the moniker to search for in the ROT.</span>
          </span>
        </param>
        <param name="ppunkObject">
          <span data-ttu-id="43796-107">No retorno bem-sucedido, contém o objeto em execução solicitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43796-107">On successful return, contains the requested running object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43796-108">Retorna o objeto registrado se o nome do objeto fornecido for registrado como em execução.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43796-108">Returns the registered object if the supplied object name is registered as running.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43796-109">Para obter mais informações, consulte a documentação existente de `IRunningObjectTable::GetObject` na biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="43796-109">For more information, please see the existing documentation for `IRunningObjectTable::GetObject` in the MSDN library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTimeOfLastChange">
      <MemberSignature Language="C#" Value="public void GetTimeOfLastChange (System.Runtime.InteropServices.UCOMIMoniker pmkObjectName, out System.Runtime.InteropServices.FILETIME pfiletime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTimeOfLastChange(class System.Runtime.InteropServices.UCOMIMoniker pmkObjectName, [out] valuetype System.Runtime.InteropServices.FILETIME&amp; pfiletime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIRunningObjectTable.GetTimeOfLastChange(System.Runtime.InteropServices.UCOMIMoniker,System.Runtime.InteropServices.FILETIME@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetTimeOfLastChange (pmkObjectName As UCOMIMoniker, ByRef pfiletime As FILETIME)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetTimeOfLastChange(System::Runtime::InteropServices::UCOMIMoniker ^ pmkObjectName, [Runtime::InteropServices::Out] System::Runtime::InteropServices::FILETIME % pfiletime);" />
      <MemberSignature Language="F#" Value="abstract member GetTimeOfLastChange : System.Runtime.InteropServices.UCOMIMoniker *  -&gt; unit" Usage="uCOMIRunningObjectTable.GetTimeOfLastChange (pmkObjectName, pfiletime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pmkObjectName" Type="System.Runtime.InteropServices.UCOMIMoniker" />
        <Parameter Name="pfiletime" Type="System.Runtime.InteropServices.FILETIME&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pmkObjectName">
          <span data-ttu-id="43796-110">Referência ao moniker a ser pesquisado no ROT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43796-110">Reference to the moniker to search for in the ROT.</span>
          </span>
        </param>
        <param name="pfiletime">
          <span data-ttu-id="43796-111">No retorno bem-sucedido, contém a hora da última alteração nos objetos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43796-111">On successful return, contains the objects last change time.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43796-112">Pesquisa esse moniker no ROT e relata o tempo registrado de alteração, se houver.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43796-112">Searches for this moniker in the ROT and reports the recorded time of change, if present.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43796-113">Para obter mais informações, consulte a documentação existente de `IRunningObjectTable::GetTimeOfLastChange` na biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="43796-113">For more information, please see the existing documentation for `IRunningObjectTable::GetTimeOfLastChange` in the MSDN library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRunning">
      <MemberSignature Language="C#" Value="public void IsRunning (System.Runtime.InteropServices.UCOMIMoniker pmkObjectName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void IsRunning(class System.Runtime.InteropServices.UCOMIMoniker pmkObjectName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIRunningObjectTable.IsRunning(System.Runtime.InteropServices.UCOMIMoniker)" />
      <MemberSignature Language="VB.NET" Value="Public Sub IsRunning (pmkObjectName As UCOMIMoniker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void IsRunning(System::Runtime::InteropServices::UCOMIMoniker ^ pmkObjectName);" />
      <MemberSignature Language="F#" Value="abstract member IsRunning : System.Runtime.InteropServices.UCOMIMoniker -&gt; unit" Usage="uCOMIRunningObjectTable.IsRunning pmkObjectName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pmkObjectName" Type="System.Runtime.InteropServices.UCOMIMoniker" />
      </Parameters>
      <Docs>
        <param name="pmkObjectName">
          <span data-ttu-id="43796-114">Referência ao moniker a ser pesquisado na Tabela de Objetos em Execução.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43796-114">Reference to the moniker to search for in the Running Object Table.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43796-115">Determina se o moniker especificado está registrado atualmente na Tabela de Objetos em Execução.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43796-115">Determines if the specified moniker is currently registered in the Running Object Table.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43796-116">Para obter mais informações, consulte a documentação existente de `IRunningObjectTable::IsRunning` na biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="43796-116">For more information, please see the existing documentation for `IRunningObjectTable::IsRunning` in the MSDN library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NoteChangeTime">
      <MemberSignature Language="C#" Value="public void NoteChangeTime (int dwRegister, ref System.Runtime.InteropServices.FILETIME pfiletime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NoteChangeTime(int32 dwRegister, valuetype System.Runtime.InteropServices.FILETIME&amp; pfiletime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIRunningObjectTable.NoteChangeTime(System.Int32,System.Runtime.InteropServices.FILETIME@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub NoteChangeTime (dwRegister As Integer, ByRef pfiletime As FILETIME)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void NoteChangeTime(int dwRegister, System::Runtime::InteropServices::FILETIME % pfiletime);" />
      <MemberSignature Language="F#" Value="abstract member NoteChangeTime : int *  -&gt; unit" Usage="uCOMIRunningObjectTable.NoteChangeTime (dwRegister, pfiletime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dwRegister" Type="System.Int32" />
        <Parameter Name="pfiletime" Type="System.Runtime.InteropServices.FILETIME&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="dwRegister">
          <span data-ttu-id="43796-117">A entrada ROT do objeto alterado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43796-117">The ROT entry of the changed object.</span>
          </span>
        </param>
        <param name="pfiletime">
          <span data-ttu-id="43796-118">Referência a hora da última alteração no objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43796-118">Reference to the object's last change time.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43796-119">Faz uma anotação da hora em que um determinado objeto foi alterado, para que <see langword="IMoniker::GetTimeOfLastChange" /> possa relatar uma hora de alteração apropriada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43796-119">Makes a note of the time that a particular object has changed so <see langword="IMoniker::GetTimeOfLastChange" /> can report an appropriate change time.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43796-120">Para obter mais informações, consulte a documentação existente de `IRunningObjectTable::NoteChangeTime` na biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="43796-120">For more information, please see the existing documentation for `IRunningObjectTable::NoteChangeTime` in the MSDN library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public void Register (int grfFlags, object punkObject, System.Runtime.InteropServices.UCOMIMoniker pmkObjectName, out int pdwRegister);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Register(int32 grfFlags, object punkObject, class System.Runtime.InteropServices.UCOMIMoniker pmkObjectName, [out] int32&amp; pdwRegister) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIRunningObjectTable.Register(System.Int32,System.Object,System.Runtime.InteropServices.UCOMIMoniker,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Register (grfFlags As Integer, punkObject As Object, pmkObjectName As UCOMIMoniker, ByRef pdwRegister As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Register(int grfFlags, System::Object ^ punkObject, System::Runtime::InteropServices::UCOMIMoniker ^ pmkObjectName, [Runtime::InteropServices::Out] int % pdwRegister);" />
      <MemberSignature Language="F#" Value="abstract member Register : int * obj * System.Runtime.InteropServices.UCOMIMoniker *  -&gt; unit" Usage="uCOMIRunningObjectTable.Register (grfFlags, punkObject, pmkObjectName, pdwRegister)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="grfFlags" Type="System.Int32" />
        <Parameter Name="punkObject" Type="System.Object" />
        <Parameter Name="pmkObjectName" Type="System.Runtime.InteropServices.UCOMIMoniker" />
        <Parameter Name="pdwRegister" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="grfFlags">
          <span data-ttu-id="43796-121">Especifica se a referência de ROT (Tabela de Objetos em Execução) à <c>punkObject</c> é fraca ou forte e controla o acesso ao objeto por meio de sua entrada na ROT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43796-121">Specifies whether the Running Object Table's (ROT) reference to <c>punkObject</c> is weak or strong, and controls access to the object through its entry in the ROT.</span>
          </span>
        </param>
        <param name="punkObject">
          <span data-ttu-id="43796-122">Referência ao objeto que está sendo registrado como em execução.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43796-122">Reference to the object being registered as running.</span>
          </span>
        </param>
        <param name="pmkObjectName">
          <span data-ttu-id="43796-123">Referência ao moniker que identifica <c>punkObject</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43796-123">Reference to the moniker that identifies <c>punkObject</c>.</span>
          </span>
        </param>
        <param name="pdwRegister">
          <span data-ttu-id="43796-124">Referência a um valor de 32 bits que pode ser usado para identificar essa entrada ROT nas chamadas subsequentes para <see cref="M:System.Runtime.InteropServices.UCOMIRunningObjectTable.Revoke(System.Int32)" /> ou <see cref="M:System.Runtime.InteropServices.UCOMIRunningObjectTable.NoteChangeTime(System.Int32,System.Runtime.InteropServices.FILETIME@)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43796-124">Reference to a 32-bit value that can be used to identify this ROT entry in subsequent calls to <see cref="M:System.Runtime.InteropServices.UCOMIRunningObjectTable.Revoke(System.Int32)" /> or <see cref="M:System.Runtime.InteropServices.UCOMIRunningObjectTable.NoteChangeTime(System.Int32,System.Runtime.InteropServices.FILETIME@)" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43796-125">Registra que o objeto fornecido entrou no estado de execução.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43796-125">Registers that the supplied object has entered the running state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43796-126">Para obter mais informações, consulte a documentação existente de `IRunningObjectTable::Register` na biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="43796-126">For more information, please see the existing documentation for `IRunningObjectTable::Register` in the MSDN library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Revoke">
      <MemberSignature Language="C#" Value="public void Revoke (int dwRegister);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Revoke(int32 dwRegister) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIRunningObjectTable.Revoke(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Revoke (dwRegister As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Revoke(int dwRegister);" />
      <MemberSignature Language="F#" Value="abstract member Revoke : int -&gt; unit" Usage="uCOMIRunningObjectTable.Revoke dwRegister" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dwRegister" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dwRegister">
          <span data-ttu-id="43796-127">A entrada ROT a ser revogada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43796-127">The ROT entry to revoke.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43796-128">Cancela o registro do objeto especificado da ROT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43796-128">Unregisters the specified object from the ROT.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43796-129">Para obter mais informações, consulte a documentação existente de `IRunningObjectTable::Revoke` na biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="43796-129">For more information, please see the existing documentation for `IRunningObjectTable::Revoke` in the MSDN library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>