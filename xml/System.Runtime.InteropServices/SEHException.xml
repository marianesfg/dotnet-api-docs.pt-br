<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SEHException.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac52006f6528910fbef9742e14057a3aeaaabd43cff.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2006f6528910fbef9742e14057a3aeaaabd43cff</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.SEHException">
          <source>Represents structured exception handling (SEH) errors.</source>
          <target state="translated">Representa erros de SEH (Manipulação de Exceção Estruturada).</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.SEHException">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.SEHException&gt;</ph> class handles SEH errors that are thrown from unmanaged code, but that have not been mapped to another .NET Framework exception.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Runtime.InteropServices.SEHException&gt;</ph> classe manipula erros de SEH gerados do código não gerenciado, mas que não foram mapeados para outra exceção do .NET Framework.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.SEHException">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.SEHException&gt;</ph> class also corresponds to the <ph id="ph2">`HRESULT`</ph> <ph id="ph3">`E_FAIL`</ph> (0x80004005).</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Runtime.InteropServices.SEHException&gt;</ph> classe também corresponde do <ph id="ph2">`HRESULT`</ph> <ph id="ph3">`E_FAIL`</ph> (0x80004005).</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.SEHException">
          <source>The .NET Framework often encounters unmanaged SEH exceptions that are automatically mapped to managed equivalents.</source>
          <target state="translated">Geralmente, o .NET Framework encontra exceções SEH não gerenciadas que são mapeadas automaticamente para equivalentes gerenciados.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.SEHException">
          <source>There are two common unmanaged SEH exceptions:</source>
          <target state="translated">Há duas exceções SEH comuns não gerenciadas:</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.SEHException">
          <source><ph id="ph1">`STATUS_NO_MEMORY`</ph> exceptions are automatically mapped to the <ph id="ph2">&lt;xref:System.OutOfMemoryException&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">`STATUS_NO_MEMORY`</ph> exceções são mapeadas automaticamente para o <ph id="ph2">&lt;xref:System.OutOfMemoryException&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.SEHException">
          <source><ph id="ph1">`STATUS_ACCESS_VIOLATION`</ph> exceptions are automatically mapped as follows:</source>
          <target state="translated"><ph id="ph1">`STATUS_ACCESS_VIOLATION`</ph> exceções automaticamente são mapeadas da seguinte maneira:</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.SEHException">
          <source>If <ph id="ph1">`legacyNullReferencePolicy`</ph> is applied, all access violations are mapped to the <ph id="ph2">&lt;xref:System.NullReferenceException&gt;</ph> class.</source>
          <target state="translated">Se <ph id="ph1">`legacyNullReferencePolicy`</ph> é aplicada, todas as violações de acesso são mapeadas para o <ph id="ph2">&lt;xref:System.NullReferenceException&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.SEHException">
          <source>If the address at which the read/write was attempted is not in JIT-compiled code, the exception is mapped to the <ph id="ph1">&lt;xref:System.AccessViolationException&gt;</ph> class.</source>
          <target state="translated">Se o endereço no qual foi tentada a leitura/gravação não está em código com compilação JIT, a exceção será mapeada para o <ph id="ph1">&lt;xref:System.AccessViolationException&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.SEHException">
          <source>If the address at which the read/write was attempted is in JIT-compiled code, but it is not in the OS Null partition area, the exception is mapped to the <ph id="ph1">&lt;xref:System.AccessViolationException&gt;</ph> class.</source>
          <target state="translated">Se o endereço no qual foi tentada a leitura/gravação está em código com compilação JIT, mas ele não está na área de partição de SO Null, a exceção será mapeada para o <ph id="ph1">&lt;xref:System.AccessViolationException&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.SEHException">
          <source>If there is no <ph id="ph1">`legacyNullReferencePolicy`</ph>, and the address at which the read/write was attempted is in JIT-compiled code and in the OS Null partition area, the exception is mapped to the <ph id="ph2">&lt;xref:System.NullReferenceException&gt;</ph> class.</source>
          <target state="translated">Se não houver nenhum <ph id="ph1">`legacyNullReferencePolicy`</ph>e o endereço no qual foi tentada a leitura/gravação está no código com compilação JIT e na área de partição do sistema operacional Null, a exceção será mapeada para o <ph id="ph2">&lt;xref:System.NullReferenceException&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.SEHException">
          <source>Any SEH exception that is not automatically mapped to a specific exception is mapped to the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.SEHException&gt;</ph> class by default.</source>
          <target state="translated">Exceção SEH automaticamente não está mapeada para uma exceção específica é mapeada para o <ph id="ph1">&lt;xref:System.Runtime.InteropServices.SEHException&gt;</ph> classe por padrão.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.SEHException">
          <source>For more information, search on "unmanaged exceptions" and "Structured Exception Handling" in the MSDN Library.</source>
          <target state="translated">Para obter mais informações, pesquise "exceções não gerenciadas" e "Estruturado tratamento de exceção" na biblioteca MSDN.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.SEHException">
          <source>Note that the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.SEHException&gt;</ph> class does not cause unmanaged C++ exception destructors to be called.</source>
          <target state="translated">Observe que o <ph id="ph1">&lt;xref:System.Runtime.InteropServices.SEHException&gt;</ph> classe não causa destruidores de exceção de C++ não gerenciados a ser chamado.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.SEHException">
          <source>To ensure that unmanaged C++ exception destructors are called, use the following syntax in the <ph id="ph1">`catch`</ph> block.</source>
          <target state="translated">Para garantir que são chamados de destruidores de exceção de C++ não gerenciados, use a seguinte sintaxe no <ph id="ph1">`catch`</ph> bloco.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.SEHException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.SEHException" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.SEHException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SEHException.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.SEHException" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.SEHException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.SEHException.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.SEHException&gt;</ph> class inherits from the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.ExternalException&gt;</ph> class.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Runtime.InteropServices.SEHException&gt;</ph> classe herda o <ph id="ph2">&lt;xref:System.Runtime.InteropServices.ExternalException&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.SEHException.#ctor">
          <source>This constructor sets the properties of the <ph id="ph1">&lt;xref:System.Exception&gt;</ph> object to the values in the following table.</source>
          <target state="translated">Este construtor define as propriedades do <ph id="ph1">&lt;xref:System.Exception&gt;</ph> objeto com os valores na tabela a seguir.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.SEHException.#ctor">
          <source>Property</source>
          <target state="translated">Propriedade</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.SEHException.#ctor">
          <source>Value</source>
          <target state="translated">Valor</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.SEHException.#ctor">
          <source>A null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic).</source>
          <target state="translated">Uma referência nula (<ph id="ph1">`Nothing`</ph> no Visual Basic).</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.SEHException.#ctor">
          <source>A localized error message string.</source>
          <target state="translated">Uma cadeia de caracteres de mensagem de erro localizada.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SEHException.#ctor(System.String)">
          <source>The message that indicates the reason for the exception.</source>
          <target state="translated">A mensagem que indica o motivo da exceção.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SEHException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.SEHException" /&gt;</ph> class with a specified message.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.SEHException" /&gt;</ph> com uma mensagem especificada.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.SEHException.#ctor(System.String)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.SEHException&gt;</ph> inherits from <ph id="ph2">&lt;xref:System.Runtime.InteropServices.ExternalException&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.SEHException&gt;</ph> herda de <ph id="ph2">&lt;xref:System.Runtime.InteropServices.ExternalException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.SEHException.#ctor(System.String)">
          <source>This constructor sets the properties of the <ph id="ph1">&lt;xref:System.Exception&gt;</ph> object as shown in the following table.</source>
          <target state="translated">Este construtor define as propriedades do <ph id="ph1">&lt;xref:System.Exception&gt;</ph> objeto conforme mostrado na tabela a seguir.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.SEHException.#ctor(System.String)">
          <source>Property</source>
          <target state="translated">Propriedade</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.SEHException.#ctor(System.String)">
          <source>Value</source>
          <target state="translated">Valor</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.SEHException.#ctor(System.String)">
          <source>A null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic).</source>
          <target state="translated">Uma referência nula (<ph id="ph1">`Nothing`</ph> no Visual Basic).</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.SEHException.#ctor(System.String)">
          <source><ph id="ph1">`message`</ph>.</source>
          <target state="translated"><ph id="ph1">`message`</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SEHException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The object that holds the serialized object data.</source>
          <target state="translated">O objeto que mantém os dados de objeto serializados.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SEHException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The contextual information about the source or destination.</source>
          <target state="translated">As informações contextuais sobre a origem ou o destino.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SEHException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.SEHException" /&gt;</ph> class from serialization data.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.SEHException" /&gt;</ph> dos dados de serialização.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.SEHException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</source>
          <target state="translated">Este construtor é chamado durante a desserialização para reconstituir o objeto de exceção transmitido por um fluxo.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.SEHException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Runtime.Serialization&gt;</ph> namespace.</source>
          <target state="translated">Para obter mais informações, consulte o namespace de <ph id="ph1">&lt;xref:System.Runtime.Serialization&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.SEHException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.SEHException&gt;</ph> inherits from <ph id="ph2">&lt;xref:System.Runtime.InteropServices.ExternalException&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.SEHException&gt;</ph> herda de <ph id="ph2">&lt;xref:System.Runtime.InteropServices.ExternalException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SEHException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source><ph id="ph1">&lt;paramref name="info" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="info" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SEHException.#ctor(System.String,System.Exception)">
          <source>The error message that explains the reason for the exception.</source>
          <target state="translated">A mensagem de erro que explica a razão da exceção.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SEHException.#ctor(System.String,System.Exception)">
          <source>The exception that is the cause of the current exception.</source>
          <target state="translated">A exceção que é a causa da exceção atual.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SEHException.#ctor(System.String,System.Exception)">
          <source>If the <bpt id="p1">&lt;c&gt;</bpt>inner<ept id="p1">&lt;/c&gt;</ept> parameter is not <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the current exception is raised in a <ph id="ph2">&lt;see langword="catch" /&gt;</ph> block that handles the inner exception.</source>
          <target state="translated">Se o parâmetro <bpt id="p1">&lt;c&gt;</bpt>inner<ept id="p1">&lt;/c&gt;</ept> não for <ph id="ph1">&lt;see langword="null" /&gt;</ph>, a exceção atual será gerada em um bloco <ph id="ph2">&lt;see langword="catch" /&gt;</ph> que manipula a exceção interna.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SEHException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.SEHException" /&gt;</ph> class with a specified error message and a reference to the inner exception that is the cause of this exception.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.SEHException" /&gt;</ph> com uma mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.SEHException.#ctor(System.String,System.Exception)">
          <source>An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.</source>
          <target state="translated">Uma exceção que é lançada como um resultado direto de uma exceção anterior deve incluir uma referência para a exceção anterior na propriedade <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.SEHException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or <ph id="ph2">`null`</ph> if the <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.</source>
          <target state="translated">A propriedade <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> retorna o mesmo valor que é passado para o construtor, ou <ph id="ph2">`null`</ph> caso a propriedade <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> não forneça o valor de exceção interno para o construtor.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.SEHException.#ctor(System.String,System.Exception)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.Runtime.InteropServices.SEHException&gt;</ph>.</source>
          <target state="translated">A tabela a seguir mostra os valores de propriedade iniciais para uma instância de <ph id="ph1">&lt;xref:System.Runtime.InteropServices.SEHException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.SEHException.#ctor(System.String,System.Exception)">
          <source>Property</source>
          <target state="translated">Propriedade</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.SEHException.#ctor(System.String,System.Exception)">
          <source>Value</source>
          <target state="translated">Valor</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.SEHException.#ctor(System.String,System.Exception)">
          <source>The inner exception reference.</source>
          <target state="translated">A referência de exceção interna.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.SEHException.#ctor(System.String,System.Exception)">
          <source>The error message string.</source>
          <target state="translated">A cadeia de caracteres da mensagem de erro.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SEHException.CanResume">
          <source>Indicates whether the exception can be recovered from, and whether the code can continue from the point at which the exception was thrown.</source>
          <target state="translated">Indica se a exceção pode ser recuperada e se o código pode continuar do ponto no qual a exceção foi gerada.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SEHException.CanResume">
          <source>Always <ph id="ph1">&lt;see langword="false" /&gt;</ph>, because resumable exceptions are not implemented.</source>
          <target state="translated">Sempre <ph id="ph1">&lt;see langword="false" /&gt;</ph>, pois exceções retomáveis não são implementadas.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.SEHException.CanResume">
          <source>If <ph id="ph1">&lt;xref:System.Runtime.InteropServices.SEHException.CanResume%2A&gt;</ph> returns <ph id="ph2">`true`</ph>, then a filtered exception handler can correct the problem that caused the exception, and the code will continue from the point at which the exception was thrown.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Runtime.InteropServices.SEHException.CanResume%2A&gt;</ph> retorna <ph id="ph2">`true`</ph>, em seguida, um manipulador de exceção filtrados pode corrigir o problema que causou a exceção e o código continuará a partir do ponto em que a exceção foi lançada.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>