<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ExtensibleClassFactory.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac50c38277b4087f3742cb505d291832a0e3f1b99a8.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0c38277b4087f3742cb505d291832a0e3f1b99a8</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.ExtensibleClassFactory">
          <source>Enables customization of managed objects that extend from unmanaged objects during creation.</source>
          <target state="translated">Permite a personalização de objetos gerenciados que se estendem de objetos não gerenciados durante a criação.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ExtensibleClassFactory">
          <source>The <ph id="ph1">`ExtensibleClassFactory`</ph> allows users to specify a <ph id="ph2">`delegate`</ph> that is called during construction of a runtime callable wrapper (RCW) that provides an instance of the underlying COM object.</source>
          <target state="translated">O <ph id="ph1">`ExtensibleClassFactory`</ph> permite que os usuários especifiquem um <ph id="ph2">`delegate`</ph> que é chamado durante a construção de um RCW runtime callable wrapper () que fornece uma instância do objeto COM subjacente.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ExtensibleClassFactory">
          <source>In effect, the callback acts as the class factory for the COM object wrapped by the RCW.</source>
          <target state="translated">Na verdade, o retorno de chamada atua como a fábrica de classes para o objeto COM encapsulados pelo RCW.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ExtensibleClassFactory">
          <source>Without the callback, the common language runtime creates the underlying COM object by calling <ph id="ph1">`CoCreateInstance`</ph>.</source>
          <target state="translated">Sem retorno de chamada, o common language runtime cria o objeto de COM subjacentes chamando <ph id="ph1">`CoCreateInstance`</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ExtensibleClassFactory">
          <source>This callback provides an alternative way of activating the underlying object, such as with a COM moniker or by providing a singleton object.</source>
          <target state="translated">Esse retorno de chamada fornece uma maneira alternativa de ativação de objeto subjacente, como com um moniker COM ou fornecendo um objeto de singleton.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ExtensibleClassFactory">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ExtensibleClassFactory.RegisterObjectCreationCallback%2A&gt;</ph> method must be called in the <ph id="ph2">`static`</ph> initializer of the class that is extending the RCW.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ExtensibleClassFactory.RegisterObjectCreationCallback%2A&gt;</ph> método deve ser chamado de <ph id="ph2">`static`</ph> inicializador da classe que está estendendo o RCW.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ExtensibleClassFactory">
          <source>Only one object creation callback is permitted per object type.</source>
          <target state="translated">Retorno de chamada de criação de apenas um objeto é permitido por tipo de objeto.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ExtensibleClassFactory">
          <source>When the extensible RCW is activated, the callback is registered.</source>
          <target state="translated">Quando o RCW extensível é ativado, o retorno de chamada está registrado.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ExtensibleClassFactory">
          <source>When the underlying COM object needs to be created, the callback is called to provide a reference to the object.</source>
          <target state="translated">Quando o objeto COM base precisa ser criado, o retorno de chamada é chamado para fornecer uma referência ao objeto.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ExtensibleClassFactory">
          <source>The callback must return an <ph id="ph1">`IUnknown`</ph> interface pointer for the base object.</source>
          <target state="translated">O retorno de chamada deve retornar um <ph id="ph1">`IUnknown`</ph> ponteiro de interface para o objeto base.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ExtensibleClassFactory">
          <source>Registers a <ph id="ph1">`delegate`</ph> that will be called whenever an instance of a managed type that extends from an unmanaged type needs to allocate the aggregated unmanaged object.</source>
          <target state="translated">Registra um <ph id="ph1">`delegate`</ph> que será chamado sempre que uma instância de um tipo gerenciado que se estende de um tipo não gerenciado precisa alocar o objeto não gerenciado agregado.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ExtensibleClassFactory">
          <source>This <ph id="ph1">`delegate`</ph> is expected to allocate and aggregate the unmanaged object and is called in place of a <ph id="ph2">`CoCreateInstance`</ph>.</source>
          <target state="translated">Isso <ph id="ph1">`delegate`</ph> deve alocar e agregar o objeto não gerenciado e é chamado no lugar de um <ph id="ph2">`CoCreateInstance`</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ExtensibleClassFactory">
          <source>This routine must be called in the context of the <ph id="ph1">`static`</ph> initializer for the class for which the callbacks will be made.</source>
          <target state="translated">Esta rotina deve ser chamada no contexto da <ph id="ph1">`static`</ph> inicializador para a classe para a qual os retornos de chamada serão feitos.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ExtensibleClassFactory.RegisterObjectCreationCallback(System.Runtime.InteropServices.ObjectCreationDelegate)">
          <source>A <ph id="ph1">&lt;see langword="delegate" /&gt;</ph> that is called in place of <ph id="ph2">&lt;see langword="CoCreateInstance" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see langword="delegate" /&gt;</ph> que é chamado no lugar de <ph id="ph2">&lt;see langword="CoCreateInstance" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ExtensibleClassFactory.RegisterObjectCreationCallback(System.Runtime.InteropServices.ObjectCreationDelegate)">
          <source>Registers a <ph id="ph1">&lt;see langword="delegate" /&gt;</ph> that is called when an instance of a managed type, that extends from an unmanaged type, needs to allocate the aggregated unmanaged object.</source>
          <target state="translated">Registra um <ph id="ph1">&lt;see langword="delegate" /&gt;</ph> que é chamado quando uma instância de um tipo gerenciado, que se estende de um tipo não gerenciado, precisa alocar o objeto não gerenciado agregado.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ExtensibleClassFactory.RegisterObjectCreationCallback(System.Runtime.InteropServices.ObjectCreationDelegate)">
          <source>This <ph id="ph1">`delegate`</ph> allocates and aggregates the unmanaged object and is called in place of <ph id="ph2">`CoCreateInstance`</ph>.</source>
          <target state="translated">Isso <ph id="ph1">`delegate`</ph> aloca e agrega o objeto não gerenciado e é chamado no lugar de <ph id="ph2">`CoCreateInstance`</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ExtensibleClassFactory.RegisterObjectCreationCallback(System.Runtime.InteropServices.ObjectCreationDelegate)">
          <source>This <ph id="ph1">`delegate`</ph> must be registered in the context of the <ph id="ph2">`static`</ph> class initializer for which the callbacks will be made.</source>
          <target state="translated">Isso <ph id="ph1">`delegate`</ph> devem ser registrados no contexto da <ph id="ph2">`static`</ph> inicializador de classe para a qual os retornos de chamada serão feitos.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ExtensibleClassFactory.RegisterObjectCreationCallback(System.Runtime.InteropServices.ObjectCreationDelegate)">
          <source>Only one class in an hierarchy should register a <ph id="ph1">`delegate`</ph> callback.</source>
          <target state="translated">Somente uma classe em uma hierarquia deve registrar um <ph id="ph1">`delegate`</ph> retorno de chamada.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>