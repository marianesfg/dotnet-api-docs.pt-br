<Type Name="_MemberInfo" FullName="System.Runtime.InteropServices._MemberInfo">
  <TypeSignature Language="C#" Value="public interface _MemberInfo" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _MemberInfo" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices._MemberInfo" />
  <TypeSignature Language="VB.NET" Value="Public Interface _MemberInfo" />
  <TypeSignature Language="C++ CLI" Value="public interface class _MemberInfo" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.CLSCompliant(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("f7102fa9-cabb-3a74-a6da-b4567ef1b079")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibImportClass(typeof(System.Reflection.MemberInfo))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="da2eb-101">Expõe os membros públicos da classe <see cref="T:System.Reflection.MemberInfo" /> a código não gerenciado.</span><span class="sxs-lookup"><span data-stu-id="da2eb-101">Exposes the public members of the <see cref="T:System.Reflection.MemberInfo" /> class to unmanaged code.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da2eb-102">Essa interface é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="da2eb-102">This interface is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="da2eb-103">Essa interface preserva a ordem de vtable do <xref:System.Reflection.MemberInfo?displayProperty=nameWithType> classe membros que podem ser acessados por objetos COM não gerenciados.</span><span class="sxs-lookup"><span data-stu-id="da2eb-103">This interface preserves the vtable order of the <xref:System.Reflection.MemberInfo?displayProperty=nameWithType> class members that can be accessed by unmanaged COM objects.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="DeclaringType">
      <MemberSignature Language="C#" Value="public Type DeclaringType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DeclaringType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._MemberInfo.DeclaringType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeclaringType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ DeclaringType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da2eb-104">Fornece acesso independente da versão para objetos COM à propriedade <see cref="P:System.Reflection.MemberInfo.DeclaringType" />.</span><span class="sxs-lookup"><span data-stu-id="da2eb-104">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MemberInfo.DeclaringType" /> property.</span></span></summary>
        <value><span data-ttu-id="da2eb-105">O objeto <see cref="T:System.Type" /> para a classe que declara esse membro.</span><span class="sxs-lookup"><span data-stu-id="da2eb-105">The <see cref="T:System.Type" /> object for the class that declares this member.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da2eb-106">Esta propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="da2eb-106">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="da2eb-107">O <xref:System.Reflection.MemberInfo.DeclaringType%2A?displayProperty=nameWithType> propriedade obtém a classe que declara a esse membro.</span><span class="sxs-lookup"><span data-stu-id="da2eb-107">The <xref:System.Reflection.MemberInfo.DeclaringType%2A?displayProperty=nameWithType> property gets the class that declares this member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (object other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(object other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._MemberInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Object ^ other);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="da2eb-108">O <see cref="T:System.Object" /> a ser comparado com o <see cref="T:System.Object" /> atual.</span><span class="sxs-lookup"><span data-stu-id="da2eb-108">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />.</span></span></param>
        <summary><span data-ttu-id="da2eb-109">Fornece objetos COM com acesso independente de versão para o método <see cref="M:System.Object.Equals(System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="da2eb-109">Provides COM objects with version-independent access to the <see cref="M:System.Object.Equals(System.Object)" /> method.</span></span></summary>
        <returns>
          <span data-ttu-id="da2eb-110"><see langword="true" /> se o <see cref="T:System.Object" /> especificado for igual ao <see cref="T:System.Object" /> atual; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="da2eb-110"><see langword="true" /> if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da2eb-111">Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="da2eb-111">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="da2eb-112">O <xref:System.Object.Equals%2A?displayProperty=nameWithType> método determina se o especificado <xref:System.Object> é igual à atual <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="da2eb-112">The <xref:System.Object.Equals%2A?displayProperty=nameWithType> method determines whether the specified <xref:System.Object> is equal to the current <xref:System.Object>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="da2eb-113">Fornece objetos COM com acesso independente de versão para o método <see cref="Overload:System.Reflection.MemberInfo.GetCustomAttributes" />.</span><span class="sxs-lookup"><span data-stu-id="da2eb-113">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.MemberInfo.GetCustomAttributes" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da2eb-114">Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="da2eb-114">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="da2eb-115">O <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType> método retorna todos os atributos aplicados a este membro.</span><span class="sxs-lookup"><span data-stu-id="da2eb-115">The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType> method returns all attributes applied to this member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public object[] GetCustomAttributes (bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetCustomAttributes(bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._MemberInfo.GetCustomAttributes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCustomAttributes (inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inherit">
          <span data-ttu-id="da2eb-116"><see langword="true" /> para pesquisar a cadeia de herança desse membro para encontrar os atributos; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="da2eb-116"><see langword="true" /> to search this member's inheritance chain to find the attributes; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="da2eb-117">Fornece objetos COM com acesso independente de versão para o método <see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)" />.</span><span class="sxs-lookup"><span data-stu-id="da2eb-117">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)" /> method.</span></span></summary>
        <returns><span data-ttu-id="da2eb-118">Uma matriz que contém todos os atributos personalizados ou uma matriz com zero (0) elementos se nenhum atributo for definido.</span><span class="sxs-lookup"><span data-stu-id="da2eb-118">An array that contains all the custom attributes, or an array with zero (0) elements if no attributes are defined.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da2eb-119">Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="da2eb-119">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="da2eb-120">O <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType> método retorna uma matriz que contém todos os atributos personalizados.</span><span class="sxs-lookup"><span data-stu-id="da2eb-120">The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType> method returns an array containing all the custom attributes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public object[] GetCustomAttributes (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._MemberInfo.GetCustomAttributes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCustomAttributes (attributeType As Type, inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(Type ^ attributeType, bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType"><span data-ttu-id="da2eb-121">O tipo de atributo a ser pesquisado.</span><span class="sxs-lookup"><span data-stu-id="da2eb-121">The type of attribute to search for.</span></span> <span data-ttu-id="da2eb-122">Somente os atributos que podem ser atribuídos a esse tipo são retornados.</span><span class="sxs-lookup"><span data-stu-id="da2eb-122">Only attributes that are assignable to this type are returned.</span></span></param>
        <param name="inherit">
          <span data-ttu-id="da2eb-123"><see langword="true" /> para pesquisar a cadeia de herança desse membro para encontrar os atributos; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="da2eb-123"><see langword="true" /> to search this member's inheritance chain to find the attributes; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="da2eb-124">Fornece objetos COM com acesso independente de versão para o método <see cref="M:System.Reflection.Assembly.GetCustomAttributes(System.Type,System.Boolean)" />.</span><span class="sxs-lookup"><span data-stu-id="da2eb-124">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetCustomAttributes(System.Type,System.Boolean)" /> method.</span></span></summary>
        <returns><span data-ttu-id="da2eb-125">Uma matriz de atributos personalizados aplicados a este membro ou uma matriz com zero (0) elementos se nenhum atributo tiver sido aplicado.</span><span class="sxs-lookup"><span data-stu-id="da2eb-125">An array of custom attributes applied to this member, or an array with zero (0) elements if no attributes have been applied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da2eb-126">Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="da2eb-126">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="da2eb-127">O <xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=nameWithType> método retorna uma matriz de atributos personalizados identificado por <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="da2eb-127">The <xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=nameWithType> method returns an array of custom attributes identified by <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._MemberInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="da2eb-128">Fornece objetos COM com acesso independente de versão para o método <see cref="M:System.Object.GetHashCode" />.</span><span class="sxs-lookup"><span data-stu-id="da2eb-128">Provides COM objects with version-independent access to the <see cref="M:System.Object.GetHashCode" /> method.</span></span></summary>
        <returns><span data-ttu-id="da2eb-129">O código hash da instância atual.</span><span class="sxs-lookup"><span data-stu-id="da2eb-129">The hash code for the current instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da2eb-130">Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="da2eb-130">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="da2eb-131">O <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> método serve como uma função de hash para um tipo específico.</span><span class="sxs-lookup"><span data-stu-id="da2eb-131">The <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> method serves as a hash function for a particular type.</span></span> <span data-ttu-id="da2eb-132"><xref:System.Object.GetHashCode%2A> é adequado para uso em algoritmos e estruturas de dados como uma tabela de hash de hash.</span><span class="sxs-lookup"><span data-stu-id="da2eb-132"><xref:System.Object.GetHashCode%2A> is suitable for use in hashing algorithms and data structures such as a hash table.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIDsOfNames">
      <MemberSignature Language="C#" Value="public void GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._MemberInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid"><span data-ttu-id="da2eb-133">Reservado para uso futuro.</span><span class="sxs-lookup"><span data-stu-id="da2eb-133">Reserved for future use.</span></span> <span data-ttu-id="da2eb-134">Deve ser IID_NULL.</span><span class="sxs-lookup"><span data-stu-id="da2eb-134">Must be IID_NULL.</span></span></param>
        <param name="rgszNames"><span data-ttu-id="da2eb-135">Uma matriz de nomes a serem mapeados.</span><span class="sxs-lookup"><span data-stu-id="da2eb-135">An  array of names to be mapped.</span></span></param>
        <param name="cNames"><span data-ttu-id="da2eb-136">A contagem dos nomes a serem mapeados.</span><span class="sxs-lookup"><span data-stu-id="da2eb-136">The count of the names to be mapped.</span></span></param>
        <param name="lcid"><span data-ttu-id="da2eb-137">O contexto de localidade no qual interpretar os nomes.</span><span class="sxs-lookup"><span data-stu-id="da2eb-137">The locale context in which to interpret the names.</span></span></param>
        <param name="rgDispId"><span data-ttu-id="da2eb-138">Uma matriz alocada pelo chamador que recebe os identificadores correspondentes aos nomes.</span><span class="sxs-lookup"><span data-stu-id="da2eb-138">An array allocated by the caller that receives the identifiers corresponding to the names.</span></span></param>
        <summary><span data-ttu-id="da2eb-139">Mapeia um conjunto de nomes para um conjunto correspondente de identificadores de expedição.</span><span class="sxs-lookup"><span data-stu-id="da2eb-139">Maps a set of names to a corresponding set of dispatch identifiers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da2eb-140">Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="da2eb-140">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span> <span data-ttu-id="da2eb-141">Para obter mais informações sobre `IDispatch::GetIDsOfNames`, consulte a Biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="da2eb-141">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._MemberInfo.GetType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="da2eb-142">Fornece objetos COM com acesso independente de versão para o método <see cref="M:System.Type.GetType" />.</span><span class="sxs-lookup"><span data-stu-id="da2eb-142">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetType" /> method.</span></span></summary>
        <returns><span data-ttu-id="da2eb-143">Um objeto <see cref="T:System.Type" />.</span><span class="sxs-lookup"><span data-stu-id="da2eb-143">A <see cref="T:System.Type" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da2eb-144">Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="da2eb-144">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="da2eb-145">O <xref:System.Type.GetType%2A?displayProperty=nameWithType> método obtém o tipo da instância atual.</span><span class="sxs-lookup"><span data-stu-id="da2eb-145">The <xref:System.Type.GetType%2A?displayProperty=nameWithType> method gets the type of the current instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeInfo">
      <MemberSignature Language="C#" Value="public void GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._MemberInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo"><span data-ttu-id="da2eb-146">As informações de tipo a serem retornadas.</span><span class="sxs-lookup"><span data-stu-id="da2eb-146">The type information to return.</span></span></param>
        <param name="lcid"><span data-ttu-id="da2eb-147">O identificador de localidade das informações do tipo.</span><span class="sxs-lookup"><span data-stu-id="da2eb-147">The locale identifier for the type information.</span></span></param>
        <param name="ppTInfo"><span data-ttu-id="da2eb-148">Um ponteiro para o objeto de informações de tipo solicitado.</span><span class="sxs-lookup"><span data-stu-id="da2eb-148">A pointer to the requested type information object.</span></span></param>
        <summary><span data-ttu-id="da2eb-149">Recupera as informações de tipo para um objeto, que pode ser usado para obter as informações de tipo para uma interface.</span><span class="sxs-lookup"><span data-stu-id="da2eb-149">Retrieves the type information for an object, which can be used to get the type information for an interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da2eb-150">Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="da2eb-150">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span> <span data-ttu-id="da2eb-151">Para obter mais informações sobre `IDispatch::GetTypeInfo`, consulte a Biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="da2eb-151">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeInfoCount">
      <MemberSignature Language="C#" Value="public void GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._MemberInfo.GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetTypeInfoCount (ByRef pcTInfo As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo"><span data-ttu-id="da2eb-152">Quando este método retorna, contém um ponteiro para um local que recebe o número de interfaces de informações de tipo fornecidas pelo objeto.</span><span class="sxs-lookup"><span data-stu-id="da2eb-152">When this method returns, contains a pointer to a location that receives the number of type information interfaces provided by the object.</span></span> <span data-ttu-id="da2eb-153">Este parâmetro é passado não inicializado.</span><span class="sxs-lookup"><span data-stu-id="da2eb-153">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="da2eb-154">Retorna o número de interfaces de informações do tipo que um objeto fornece (0 ou 1).</span><span class="sxs-lookup"><span data-stu-id="da2eb-154">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da2eb-155">Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="da2eb-155">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span> <span data-ttu-id="da2eb-156">Para obter mais informações sobre `IDispatch::GetTypeInfoCount`, consulte a Biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="da2eb-156">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public void Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._MemberInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember"><span data-ttu-id="da2eb-157">Um identificador para o membro.</span><span class="sxs-lookup"><span data-stu-id="da2eb-157">An identifier for the member.</span></span></param>
        <param name="riid"><span data-ttu-id="da2eb-158">Reservado para uso futuro.</span><span class="sxs-lookup"><span data-stu-id="da2eb-158">Reserved for future use.</span></span> <span data-ttu-id="da2eb-159">Deve ser IID_NULL.</span><span class="sxs-lookup"><span data-stu-id="da2eb-159">Must be IID_NULL.</span></span></param>
        <param name="lcid"><span data-ttu-id="da2eb-160">O contexto de localidade no qual interpretar argumentos.</span><span class="sxs-lookup"><span data-stu-id="da2eb-160">The locale context in which to interpret arguments.</span></span></param>
        <param name="wFlags"><span data-ttu-id="da2eb-161">Sinalizadores que descrevem o contexto da chamada.</span><span class="sxs-lookup"><span data-stu-id="da2eb-161">Flags describing the context of the call.</span></span></param>
        <param name="pDispParams"><span data-ttu-id="da2eb-162">Um ponteiro para uma estrutura contendo uma matriz de argumentos, uma matriz de DISPIDs de argumento para argumentos nomeados e contagens para o número de elementos nas matrizes.</span><span class="sxs-lookup"><span data-stu-id="da2eb-162">A pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span></span></param>
        <param name="pVarResult"><span data-ttu-id="da2eb-163">Um ponteiro para o local em que o resultado será armazenado.</span><span class="sxs-lookup"><span data-stu-id="da2eb-163">A pointer to the location where the result will be stored.</span></span></param>
        <param name="pExcepInfo"><span data-ttu-id="da2eb-164">Um ponteiro para uma estrutura que contém informações de exceção.</span><span class="sxs-lookup"><span data-stu-id="da2eb-164">A pointer to a structure that contains exception information.</span></span></param>
        <param name="puArgErr"><span data-ttu-id="da2eb-165">O índice do primeiro argumento que tem um erro.</span><span class="sxs-lookup"><span data-stu-id="da2eb-165">The index of the first argument that has an error.</span></span></param>
        <summary><span data-ttu-id="da2eb-166">Fornece acesso a propriedades e métodos expostos por um objeto.</span><span class="sxs-lookup"><span data-stu-id="da2eb-166">Provides access to properties and methods exposed by an object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da2eb-167">Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="da2eb-167">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span> <span data-ttu-id="da2eb-168">Para obter mais informações sobre `IDispatch::Invoke`, consulte a Biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="da2eb-168">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public bool IsDefined (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDefined(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._MemberInfo.IsDefined(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsDefined (attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsDefined(Type ^ attributeType, bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType"><span data-ttu-id="da2eb-169">O objeto <see cref="T:System.Type" /> ao qual os atributos personalizados são aplicados.</span><span class="sxs-lookup"><span data-stu-id="da2eb-169">The <see cref="T:System.Type" /> object to which the custom attributes are applied.</span></span></param>
        <param name="inherit">
          <span data-ttu-id="da2eb-170"><see langword="true" /> para pesquisar a cadeia de herança desse membro para encontrar os atributos; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="da2eb-170"><see langword="true" /> to search this member's inheritance chain to find the attributes; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="da2eb-171">Fornece objetos COM com acesso independente de versão para o método <see cref="M:System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)" />.</span><span class="sxs-lookup"><span data-stu-id="da2eb-171">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)" /> method.</span></span></summary>
        <returns>
          <span data-ttu-id="da2eb-172"><see langword="true" /> se uma ou mais instâncias do parâmetro <paramref name="attributeType" /> é aplicada a este membro; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="da2eb-172"><see langword="true" /> if one or more instance of the <paramref name="attributeType" /> parameter is applied to this member; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da2eb-173">Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="da2eb-173">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="da2eb-174">O <xref:System.Reflection.MemberInfo.IsDefined%2A> método indica se uma ou mais instâncias do `attributeType` parâmetro são aplicados a este membro.</span><span class="sxs-lookup"><span data-stu-id="da2eb-174">The <xref:System.Reflection.MemberInfo.IsDefined%2A> method indicates whether one or more instances of the `attributeType` parameter are applied to this member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberType">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberTypes MemberType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.MemberTypes MemberType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._MemberInfo.MemberType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemberType As MemberTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MemberTypes MemberType { System::Reflection::MemberTypes get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da2eb-175">Fornece acesso independente da versão para objetos COM à propriedade <see cref="P:System.Reflection.MemberInfo.MemberType" />.</span><span class="sxs-lookup"><span data-stu-id="da2eb-175">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MemberInfo.MemberType" /> property.</span></span></summary>
        <value><span data-ttu-id="da2eb-176">Uma da <see cref="T:System.Reflection.MemberTypes" /> valores indicando o tipo de membro.</span><span class="sxs-lookup"><span data-stu-id="da2eb-176">One of the <see cref="T:System.Reflection.MemberTypes" /> values indicating the type of member.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da2eb-177">Esta propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="da2eb-177">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="da2eb-178">O <xref:System.Reflection.MemberInfo.MemberType%2A?displayProperty=nameWithType> propriedade obtém um <xref:System.Reflection.MemberTypes> valor que indica o tipo do membro, método, construtor, eventos e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="da2eb-178">The <xref:System.Reflection.MemberInfo.MemberType%2A?displayProperty=nameWithType> property gets a <xref:System.Reflection.MemberTypes> value indicating the type of the member — method, constructor, event, and so on.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._MemberInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da2eb-179">Fornece acesso independente da versão para objetos COM à propriedade <see cref="P:System.Reflection.MemberInfo.Name" />.</span><span class="sxs-lookup"><span data-stu-id="da2eb-179">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MemberInfo.Name" /> property.</span></span></summary>
        <value><span data-ttu-id="da2eb-180">Um <see cref="T:System.String" /> objeto que contém o nome desse membro.</span><span class="sxs-lookup"><span data-stu-id="da2eb-180">A <see cref="T:System.String" /> object containing the name of this member.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da2eb-181">Esta propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="da2eb-181">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="da2eb-182">O <xref:System.Reflection.MemberInfo.Name%2A?displayProperty=nameWithType> propriedade obtém o nome do membro atual.</span><span class="sxs-lookup"><span data-stu-id="da2eb-182">The <xref:System.Reflection.MemberInfo.Name%2A?displayProperty=nameWithType> property gets the name of the current member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReflectedType">
      <MemberSignature Language="C#" Value="public Type ReflectedType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ReflectedType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._MemberInfo.ReflectedType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReflectedType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ReflectedType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da2eb-183">Fornece acesso independente da versão para objetos COM à propriedade <see cref="P:System.Reflection.MemberInfo.ReflectedType" />.</span><span class="sxs-lookup"><span data-stu-id="da2eb-183">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MemberInfo.ReflectedType" /> property.</span></span></summary>
        <value><span data-ttu-id="da2eb-184">O <see cref="T:System.Type" /> objeto que foi usado para obter esse <see cref="T:System.Reflection.MemberInfo" /> objeto.</span><span class="sxs-lookup"><span data-stu-id="da2eb-184">The <see cref="T:System.Type" /> object that was used to obtain this <see cref="T:System.Reflection.MemberInfo" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da2eb-185">Esta propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="da2eb-185">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="da2eb-186">O <xref:System.Reflection.MemberInfo.ReflectedType%2A?displayProperty=nameWithType> propriedade obtém o objeto da classe que foi usado para obter essa instância do <xref:System.Reflection.MemberInfo>.</span><span class="sxs-lookup"><span data-stu-id="da2eb-186">The <xref:System.Reflection.MemberInfo.ReflectedType%2A?displayProperty=nameWithType> property gets the class object that was used to obtain this instance of <xref:System.Reflection.MemberInfo>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._MemberInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="da2eb-187">Fornece objetos COM com acesso independente de versão para o método <see cref="M:System.Object.ToString" />.</span><span class="sxs-lookup"><span data-stu-id="da2eb-187">Provides COM objects with version-independent access to the <see cref="M:System.Object.ToString" /> method.</span></span></summary>
        <returns><span data-ttu-id="da2eb-188">Uma cadeia de caracteres que representa o <see cref="T:System.Object" /> atual.</span><span class="sxs-lookup"><span data-stu-id="da2eb-188">A string that represents the current <see cref="T:System.Object" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da2eb-189">Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="da2eb-189">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
