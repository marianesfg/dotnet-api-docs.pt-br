<Type Name="DllImportAttribute" FullName="System.Runtime.InteropServices.DllImportAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c88c893bbcacbedffc6f6936c071741ed1dd6858" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48745056" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DllImportAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DllImportAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.DllImportAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DllImportAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class DllImportAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type DllImportAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="cebb1-101">Indica que o método atribuído é exposto por uma DLL (biblioteca de vínculo dinâmico) não gerenciada como um ponto de entrada estático.</span>
      <span class="sxs-lookup">
        <span data-stu-id="cebb1-101">Indicates that the attributed method is exposed by an unmanaged dynamic-link library (DLL) as a static entry point.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cebb1-102">Você pode aplicar esse atributo para métodos.</span><span class="sxs-lookup"><span data-stu-id="cebb1-102">You can apply this attribute to methods.</span></span>  
  
 <span data-ttu-id="cebb1-103">O <xref:System.Runtime.InteropServices.DllImportAttribute> atributo fornece as informações necessárias para chamar uma função exportada de uma DLL não gerenciada.</span><span class="sxs-lookup"><span data-stu-id="cebb1-103">The <xref:System.Runtime.InteropServices.DllImportAttribute> attribute provides the information needed to call a function exported from an unmanaged DLL.</span></span> <span data-ttu-id="cebb1-104">Como um requisito mínimo, você deve fornecer o nome da DLL que contém o ponto de entrada.</span><span class="sxs-lookup"><span data-stu-id="cebb1-104">As a minimum requirement, you must supply the name of the DLL containing the entry point.</span></span>  
  
 <span data-ttu-id="cebb1-105">Aplicar esse atributo diretamente ao c# e as definições de método do C++. No entanto, o compilador do Visual Basic emite esse atributo quando você usa o `Declare` instrução.</span><span class="sxs-lookup"><span data-stu-id="cebb1-105">You apply this attribute directly to C# and C++ method definitions; however, the Visual Basic compiler emits this attribute when you use the `Declare` statement.</span></span> <span data-ttu-id="cebb1-106">Para obter definições de método complexo que incluem <xref:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping>, <xref:System.Runtime.InteropServices.DllImportAttribute.CallingConvention>, <xref:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling>, <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig>, <xref:System.Runtime.InteropServices.DllImportAttribute.SetLastError>, ou <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar> campos, aplicar esse atributo diretamente para as definições de método do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="cebb1-106">For complex method definitions that include <xref:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping>, <xref:System.Runtime.InteropServices.DllImportAttribute.CallingConvention>, <xref:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling>, <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig>, <xref:System.Runtime.InteropServices.DllImportAttribute.SetLastError>, or <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar> fields, you apply this attribute directly to Visual Basic method definitions.</span></span>  
  
 <span data-ttu-id="cebb1-107">**Observação** JScript não oferece suporte a esse atributo.</span><span class="sxs-lookup"><span data-stu-id="cebb1-107">**Note** JScript does not support this attribute.</span></span> <span data-ttu-id="cebb1-108">Você pode usar o c# ou classes de wrapper do Visual Basic para acessar os métodos da API não gerenciados de programas de JScript.</span><span class="sxs-lookup"><span data-stu-id="cebb1-108">You can use C# or Visual Basic wrapper classes to access unmanaged API methods from JScript programs.</span></span>  
  
 <span data-ttu-id="cebb1-109">Para obter mais informações sobre como usar a plataforma de invocar o serviço para acesso de funções em DLLs não gerenciadas, consulte [consumindo funções de DLL não gerenciadas](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span><span class="sxs-lookup"><span data-stu-id="cebb1-109">For additional information about using the platform invoke service to access functions in unmanaged DLLs, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cebb1-110">O <xref:System.Runtime.InteropServices.DllImportAttribute> não oferece suporte a marshaling de tipos genéricos.</span><span class="sxs-lookup"><span data-stu-id="cebb1-110">The <xref:System.Runtime.InteropServices.DllImportAttribute> does not support marshaling of generic types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cebb1-111">O exemplo de código a seguir mostra como usar o <xref:System.Runtime.InteropServices.DllImportAttribute> atributo para importar do Win32 `MessageBox` função.</span><span class="sxs-lookup"><span data-stu-id="cebb1-111">The following code example shows how to use the <xref:System.Runtime.InteropServices.DllImportAttribute> attribute to import the Win32 `MessageBox` function.</span></span>  <span data-ttu-id="cebb1-112">O exemplo de código chama o método importado.</span><span class="sxs-lookup"><span data-stu-id="cebb1-112">The code example then calls the imported method.</span></span>  
  
 [!code-csharp[System.Runtime.InteropServices.DllImport.Canonical#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.InteropServices.DllImport.Canonical/cs/sample.cs#1)]
 [!code-vb[System.Runtime.InteropServices.DllImport.Canonical#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.InteropServices.DllImport.Canonical/vb/sample.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="F:System.Runtime.InteropServices.DllImportAttribute.SetLastError" />
    <altmember cref="F:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling" />
    <altmember cref="F:System.Runtime.InteropServices.DllImportAttribute.PreserveSig" />
    <altmember cref="F:System.Runtime.InteropServices.DllImportAttribute.CallingConvention" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DllImportAttribute (string dllName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string dllName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.DllImportAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dllName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DllImportAttribute(System::String ^ dllName);" />
      <MemberSignature Language="F#" Value="new System.Runtime.InteropServices.DllImportAttribute : string -&gt; System.Runtime.InteropServices.DllImportAttribute" Usage="new System.Runtime.InteropServices.DllImportAttribute dllName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dllName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dllName">
          <span data-ttu-id="cebb1-113">O nome da DLL que contém o método não gerenciado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cebb1-113">The name of the DLL that contains the unmanaged method.</span>
          </span>
          <span data-ttu-id="cebb1-114">Isso pode incluir um nome de exibição do assembly se a DLL estiver incluída em um assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cebb1-114">This can include an assembly display name, if the DLL is included in an assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cebb1-115">Inicializa uma nova instância da classe <see cref="T:System.Runtime.InteropServices.DllImportAttribute" /> com o nome da DLL que contém o método a ser importado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cebb1-115">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.DllImportAttribute" /> class with the name of the DLL containing the method to import.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cebb1-116">Se um arquivo DLL não gerenciado está incluído em um assembly, por exemplo, usando o vinculador ou o `/linkresource` opção de compilador, você pode especificar o nome de exibição do assembly como parte do `dllName`.</span><span class="sxs-lookup"><span data-stu-id="cebb1-116">If an unmanaged DLL file is included in an assembly, for example, by using the linker or the `/linkresource` compiler option, you can specify the assembly display name as part of `dllName`.</span></span> <span data-ttu-id="cebb1-117">Por exemplo, se uma DLL não gerenciada denominada `unmanaged.dll` está incluído em um assembly gerenciado chamado `MyAssembly`, o atributo pode ser especificado conforme mostrado no código a seguir.</span><span class="sxs-lookup"><span data-stu-id="cebb1-117">For example, if an unmanaged DLL named `unmanaged.dll` is included in a managed assembly named `MyAssembly`, the attribute might be specified as shown in the following code.</span></span>  
  
 [!code-cpp[System.Runtime.InteropServices.DllImportAttribute#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/cpp/source.cpp#2)]
 [!code-csharp[System.Runtime.InteropServices.DllImportAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/cs/source.cs#2)]
 [!code-vb[System.Runtime.InteropServices.DllImportAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/vb/source.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="cebb1-118">O exemplo de código a seguir mostra como usar o <xref:System.Runtime.InteropServices.DllImportAttribute> atributo para importar do Win32 `MessageBox` função.</span><span class="sxs-lookup"><span data-stu-id="cebb1-118">The following code example shows how to use the <xref:System.Runtime.InteropServices.DllImportAttribute> attribute to import the Win32 `MessageBox` function.</span></span>  <span data-ttu-id="cebb1-119">O exemplo de código chama o método importado.</span><span class="sxs-lookup"><span data-stu-id="cebb1-119">The code example then calls the imported method.</span></span>  
  
 [!code-csharp[System.Runtime.InteropServices.DllImport.Canonical#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.InteropServices.DllImport.Canonical/cs/sample.cs#1)]
 [!code-vb[System.Runtime.InteropServices.DllImport.Canonical#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.InteropServices.DllImport.Canonical/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BestFitMapping">
      <MemberSignature Language="C#" Value="public bool BestFitMapping;" />
      <MemberSignature Language="ILAsm" Value=".field public bool BestFitMapping" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping" />
      <MemberSignature Language="VB.NET" Value="Public BestFitMapping As Boolean " />
      <MemberSignature Language="C++ CLI" Value="public: bool BestFitMapping;" />
      <MemberSignature Language="F#" Value="val mutable BestFitMapping : bool" Usage="System.Runtime.InteropServices.DllImportAttribute.BestFitMapping" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cebb1-120">Habilita ou desabilita o comportamento de mapeamento mais adequado ao converter caracteres Unicode em caracteres ANSI.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cebb1-120">Enables or disables best-fit mapping behavior when converting Unicode characters to ANSI characters.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cebb1-121">Se `true`, fallback de melhor ajuste o comportamento de mapeamento é habilitado, o mapeamento de melhor ajuste, caso contrário, está desabilitado.</span><span class="sxs-lookup"><span data-stu-id="cebb1-121">If `true`, best-fit mapping behavior is enabled; otherwise, best-fit mapping is disabled.</span></span> <span data-ttu-id="cebb1-122">O <xref:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping> campo é `true` por padrão.</span><span class="sxs-lookup"><span data-stu-id="cebb1-122">The <xref:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping> field is `true` by default.</span></span> <span data-ttu-id="cebb1-123">As configurações para esse campo substituem as configurações para qualquer nível de <xref:System.Runtime.InteropServices.BestFitMappingAttribute?displayProperty=nameWithType> atributo.</span><span class="sxs-lookup"><span data-stu-id="cebb1-123">Settings for this field override the any level settings for the <xref:System.Runtime.InteropServices.BestFitMappingAttribute?displayProperty=nameWithType> attribute.</span></span>  
  
 <span data-ttu-id="cebb1-124">O common language runtime converte em caracteres ANSI que qualquer gerenciado caracteres Unicode passados para um método não gerenciado em execução no Windows 98 ou Windows Me.</span><span class="sxs-lookup"><span data-stu-id="cebb1-124">The common language runtime converts to ANSI characters any managed Unicode characters passed to an unmanaged method executing on Windows 98 or Windows Me.</span></span> <span data-ttu-id="cebb1-125">Mapeamento de melhor ajuste permite que o marshaler de interoperabilidade fornecer um caractere de fechamento de correspondência quando não existe nenhuma correspondência exata.</span><span class="sxs-lookup"><span data-stu-id="cebb1-125">Best-fit mapping enables the interop marshaler to provide a close-matching character when no exact match exists.</span></span> <span data-ttu-id="cebb1-126">Por exemplo, o marshaler converte o caractere de direitos autorais de Unicode para o c para métodos não gerenciados que aceitam caracteres ANSI.</span><span class="sxs-lookup"><span data-stu-id="cebb1-126">For example, the marshaler converts the Unicode copyright character to 'c' for unmanaged methods that accept ANSI characters.</span></span> <span data-ttu-id="cebb1-127">Alguns caracteres não têm uma representação de melhor ajuste; Esses caracteres são chamados não mapeável.</span><span class="sxs-lookup"><span data-stu-id="cebb1-127">Some characters lack a best-fit representation; these characters are called unmappable.</span></span> <span data-ttu-id="cebb1-128">Caracteres não mapeável geralmente são convertidos para o padrão '?' Caractere ANSI.</span><span class="sxs-lookup"><span data-stu-id="cebb1-128">Unmappable characters are usually converted to the default '?' ANSI character.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="cebb1-129">Determinados caracteres Unicode são convertidos em caracteres perigosas, como a barra invertida '\\' caractere, que pode alterar inadvertidamente um caminho.</span><span class="sxs-lookup"><span data-stu-id="cebb1-129">Certain Unicode characters are converted to dangerous characters, such as the backslash '\\' character, which can inadvertently change a path.</span></span> <span data-ttu-id="cebb1-130">Definindo o <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar> campo para `true`, você pode sinalizar a presença de um caractere não mapeável ao chamador lançando uma exceção.</span><span class="sxs-lookup"><span data-stu-id="cebb1-130">By setting the <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar> field to `true`, you can signal the presence of an unmappable character to the caller by throwing an exception.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="cebb1-131">Você não pode alterar os valores padrão fornecidos pelo <xref:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping> e <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar> campos quando passar uma matriz gerenciada cujos elementos é caracteres ANSI ou LPSTRs para uma matriz segura não gerenciada.</span><span class="sxs-lookup"><span data-stu-id="cebb1-131">You cannot change the default values provided by the <xref:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping> and <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar> fields when passing a managed array whose elements are ANSI Chars or LPSTRs to an unmanaged safe array.</span></span> <span data-ttu-id="cebb1-132">Mapeamento de melhor ajuste está sempre habilitado e nenhuma exceção é lançada.</span><span class="sxs-lookup"><span data-stu-id="cebb1-132">Best-fit mapping is always enabled and no exception is thrown.</span></span> <span data-ttu-id="cebb1-133">Lembre-se de que essa combinação pode comprometer seu modelo de segurança.</span><span class="sxs-lookup"><span data-stu-id="cebb1-133">Be aware that this combination can compromise your security model.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cebb1-134">Em alguns casos, os desenvolvedores de Visual Basic usam a <xref:System.Runtime.InteropServices.DllImportAttribute>, em vez do `Declare` instrução, para definir uma função de DLL em código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="cebb1-134">In some cases, Visual Basic developers use the <xref:System.Runtime.InteropServices.DllImportAttribute>, instead of the `Declare` statement, to define a DLL function in managed code.</span></span> <span data-ttu-id="cebb1-135">Definindo o <xref:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping> campo é um dos casos.</span><span class="sxs-lookup"><span data-stu-id="cebb1-135">Setting the <xref:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping> field is one of those cases.</span></span> <span data-ttu-id="cebb1-136">O exemplo a seguir mostra como aplicar o mais rígida segurança de mapeamento de caractere para uma plataforma de invocar as definições de método, especificando o conjunto de caracteres ANSI, desabilitando o melhor comportamento de mapeamento de ajuste e gerar uma exceção em caracteres de Unicode não mapeados.</span><span class="sxs-lookup"><span data-stu-id="cebb1-136">The following example shows how to apply the strictest character mapping security to a platform invoke method definitions by specifying the ANSI character set, disabling best fit mapping behavior, and throwing an exception on unmapped Unicode characters.</span></span>  
  
 [!code-cpp[System.Runtime.InteropServices.DllImportAttribute#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/cpp/source.cpp#3)]
 [!code-csharp[System.Runtime.InteropServices.DllImportAttribute#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/cs/source.cs#3)]
 [!code-vb[System.Runtime.InteropServices.DllImportAttribute#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/vb/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Runtime.InteropServices.DllImportAttribute.CharSet" />
        <altmember cref="T:System.Runtime.InteropServices.BestFitMappingAttribute" />
        <related type="Article" href="http://msdn.microsoft.com/library/115f7a2f-d422-4605-ab36-13a8dd28142a">
          <span data-ttu-id="cebb1-137">marshaling de interoperabilidade</span>
          <span class="sxs-lookup">
            <span data-stu-id="cebb1-137">Interop Marshaling</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="CallingConvention">
      <MemberSignature Language="C#" Value="public System.Runtime.InteropServices.CallingConvention CallingConvention;" />
      <MemberSignature Language="ILAsm" Value=".field public valuetype System.Runtime.InteropServices.CallingConvention CallingConvention" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.DllImportAttribute.CallingConvention" />
      <MemberSignature Language="VB.NET" Value="Public CallingConvention As CallingConvention " />
      <MemberSignature Language="C++ CLI" Value="public: System::Runtime::InteropServices::CallingConvention CallingConvention;" />
      <MemberSignature Language="F#" Value="val mutable CallingConvention : System.Runtime.InteropServices.CallingConvention" Usage="System.Runtime.InteropServices.DllImportAttribute.CallingConvention" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.CallingConvention</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cebb1-138">Indica a convenção de chamada de um ponto de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cebb1-138">Indicates the calling convention of an entry point.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cebb1-139">Defina esse campo para um do <xref:System.Runtime.InteropServices.CallingConvention> membros de enumeração.</span><span class="sxs-lookup"><span data-stu-id="cebb1-139">You set this field to one of the <xref:System.Runtime.InteropServices.CallingConvention> enumeration members.</span></span> <span data-ttu-id="cebb1-140">O valor padrão para o <xref:System.Runtime.InteropServices.DllImportAttribute.CallingConvention> campo é <xref:System.Runtime.InteropServices.CallingConvention.Winapi>, cujo padrão é por sua vez <xref:System.Runtime.InteropServices.CallingConvention.StdCall> convenção.</span><span class="sxs-lookup"><span data-stu-id="cebb1-140">The default value for the <xref:System.Runtime.InteropServices.DllImportAttribute.CallingConvention> field is <xref:System.Runtime.InteropServices.CallingConvention.Winapi>, which in turn defaults to <xref:System.Runtime.InteropServices.CallingConvention.StdCall> convention.</span></span>  
  
 <span data-ttu-id="cebb1-141">Para obter mais informações, consulte a convenção de chamada na biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="cebb1-141">For more information, see Calling Convention in the MSDN library.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cebb1-142">Em alguns casos, os desenvolvedores de Visual Basic usam a <xref:System.Runtime.InteropServices.DllImportAttribute>, em vez do `Declare` instrução, para definir uma função de DLL em código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="cebb1-142">In some cases, Visual Basic developers use the <xref:System.Runtime.InteropServices.DllImportAttribute>, instead of the `Declare` statement, to define a DLL function in managed code.</span></span> <span data-ttu-id="cebb1-143">Definindo o <xref:System.Runtime.InteropServices.DllImportAttribute.CallingConvention> campo é um dos casos.</span><span class="sxs-lookup"><span data-stu-id="cebb1-143">Setting the <xref:System.Runtime.InteropServices.DllImportAttribute.CallingConvention> field is one of those cases.</span></span>  
  
 <span data-ttu-id="cebb1-144">System.Runtime.InteropServices.DllImportAttribute#1</span><span class="sxs-lookup"><span data-stu-id="cebb1-144">System.Runtime.InteropServices.DllImportAttribute#1</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.InteropServices.CallingConvention" />
      </Docs>
    </Member>
    <Member MemberName="CharSet">
      <MemberSignature Language="C#" Value="public System.Runtime.InteropServices.CharSet CharSet;" />
      <MemberSignature Language="ILAsm" Value=".field public valuetype System.Runtime.InteropServices.CharSet CharSet" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.DllImportAttribute.CharSet" />
      <MemberSignature Language="VB.NET" Value="Public CharSet As CharSet " />
      <MemberSignature Language="C++ CLI" Value="public: System::Runtime::InteropServices::CharSet CharSet;" />
      <MemberSignature Language="F#" Value="val mutable CharSet : System.Runtime.InteropServices.CharSet" Usage="System.Runtime.InteropServices.DllImportAttribute.CharSet" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.CharSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cebb1-145">Indica como realizar marshaling de parâmetros de cadeia de caracteres para o método e a desconfiguração de nome de controles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cebb1-145">Indicates how to marshal string parameters to the method and controls name mangling.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cebb1-146">Use esse campo com um membro do <xref:System.Runtime.InteropServices.CharSet> enumeração para especificar o comportamento de marshaling de parâmetros de cadeia de caracteres e para especificar qual nome de ponto de entrada para invocar (o nome exato fornecido ou um nome que termina com "A" ou "W").</span><span class="sxs-lookup"><span data-stu-id="cebb1-146">Use this field with a member of the <xref:System.Runtime.InteropServices.CharSet> enumeration to specify the marshaling behavior of string parameters and to specify which entry-point name to invoke (the exact name given or a name ending with "A" or "W").</span></span> <span data-ttu-id="cebb1-147">É o membro de enumeração padrão para c# e Visual Basic `CharSet.Ansi` e é o membro de enumeração padrão do C++ `CharSet.None`, que é equivalente a `CharSet.Ansi`.</span><span class="sxs-lookup"><span data-stu-id="cebb1-147">The default enumeration member for C# and Visual Basic is `CharSet.Ansi` and the default enumeration member for C++ is `CharSet.None`, which is equivalent to `CharSet.Ansi`.</span></span> <span data-ttu-id="cebb1-148">No Visual Basic, você deve usar o `Declare` instrução para especificar o `CharSet` campo.</span><span class="sxs-lookup"><span data-stu-id="cebb1-148">In Visual Basic, you use the `Declare` statement to specify the `CharSet` field.</span></span>  
  
 <span data-ttu-id="cebb1-149">O <xref:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling> campo influencia o comportamento do `CharSet` campo determinar qual nome de ponto de entrada para invocar.</span><span class="sxs-lookup"><span data-stu-id="cebb1-149">The <xref:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling> field influences the behavior of the `CharSet` field in determining which entry-point name to invoke.</span></span> <span data-ttu-id="cebb1-150">Para obter uma descrição detalhada e exemplos do marshaling de cadeia de caracteres e o nome de correspondência de comportamento associado com o `CharSet` campo, consulte [especificando um conjunto de caracteres](~/docs/framework/interop/specifying-a-character-set.md).</span><span class="sxs-lookup"><span data-stu-id="cebb1-150">For a detailed description and examples of the string marshaling and name matching behavior associated with the `CharSet` field, see [Specifying a Character Set](~/docs/framework/interop/specifying-a-character-set.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cebb1-151">O exemplo de código a seguir mostra como usar o <xref:System.Runtime.InteropServices.DllImportAttribute> atributo para importar do Win32 `MessageBox` função.</span><span class="sxs-lookup"><span data-stu-id="cebb1-151">The following code example shows how to use the <xref:System.Runtime.InteropServices.DllImportAttribute> attribute to import the Win32 `MessageBox` function.</span></span>  <span data-ttu-id="cebb1-152">O exemplo de código chama o método importado.</span><span class="sxs-lookup"><span data-stu-id="cebb1-152">The code example then calls the imported method.</span></span>  
  
 [!code-csharp[System.Runtime.InteropServices.DllImport.Canonical#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.InteropServices.DllImport.Canonical/cs/sample.cs#1)]
 [!code-vb[System.Runtime.InteropServices.DllImport.Canonical#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.InteropServices.DllImport.Canonical/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling" />
      </Docs>
    </Member>
    <Member MemberName="EntryPoint">
      <MemberSignature Language="C#" Value="public string EntryPoint;" />
      <MemberSignature Language="ILAsm" Value=".field public string EntryPoint" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.DllImportAttribute.EntryPoint" />
      <MemberSignature Language="VB.NET" Value="Public EntryPoint As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ EntryPoint;" />
      <MemberSignature Language="F#" Value="val mutable EntryPoint : string" Usage="System.Runtime.InteropServices.DllImportAttribute.EntryPoint" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cebb1-153">Indica o nome ou o ordinal do ponto de entrada DLL a ser chamado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cebb1-153">Indicates the name or ordinal of the DLL entry point to be called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cebb1-154">Você pode especificar o nome do ponto de entrada, fornecendo uma cadeia de caracteres que indica o nome da DLL que contém o ponto de entrada, ou você pode identificar o ponto de entrada pelo seu ordinal.</span><span class="sxs-lookup"><span data-stu-id="cebb1-154">You can specify the entry-point name by supplying a string indicating the name of the DLL containing the entry point, or you can identify the entry point by its ordinal.</span></span> <span data-ttu-id="cebb1-155">Ordinais são prefixados com o sinal #, por exemplo, #1.</span><span class="sxs-lookup"><span data-stu-id="cebb1-155">Ordinals are prefixed with the # sign, for example, #1.</span></span> <span data-ttu-id="cebb1-156">Se você omitir esse campo, o common language runtime usa o nome do método do.NET marcado com o <xref:System.Runtime.InteropServices.DllImportAttribute>.</span><span class="sxs-lookup"><span data-stu-id="cebb1-156">If you omit this field, the common language runtime uses the name of the.NET method marked with the <xref:System.Runtime.InteropServices.DllImportAttribute>.</span></span>  
  
 <span data-ttu-id="cebb1-157">Para obter mais informações, consulte [identificando funções em DLLs](~/docs/framework/interop/identifying-functions-in-dlls.md).</span><span class="sxs-lookup"><span data-stu-id="cebb1-157">For additional information, see [Identifying Functions in DLLs](~/docs/framework/interop/identifying-functions-in-dlls.md).</span></span> <span data-ttu-id="cebb1-158">Para obter exemplos que mostram como usar o <xref:System.Runtime.InteropServices.DllImportAttribute.EntryPoint> campo, consulte [especificando um ponto de entrada](~/docs/framework/interop/specifying-an-entry-point.md).</span><span class="sxs-lookup"><span data-stu-id="cebb1-158">For examples showing how to use the <xref:System.Runtime.InteropServices.DllImportAttribute.EntryPoint> field, see [Specifying an Entry Point](~/docs/framework/interop/specifying-an-entry-point.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cebb1-159">O exemplo de código a seguir mostra como usar o <xref:System.Runtime.InteropServices.DllImportAttribute> atributo para importar do Win32 `MessageBox` função.</span><span class="sxs-lookup"><span data-stu-id="cebb1-159">The following code example shows how to use the <xref:System.Runtime.InteropServices.DllImportAttribute> attribute to import the Win32 `MessageBox` function.</span></span>  <span data-ttu-id="cebb1-160">O exemplo de código usa o <xref:System.Runtime.InteropServices.DllImportAttribute.EntryPoint> propriedade para especificar a função a ser importado e, em seguida, altera o nome para `MyNewMessageBoxMethod`.</span><span class="sxs-lookup"><span data-stu-id="cebb1-160">The code example uses the <xref:System.Runtime.InteropServices.DllImportAttribute.EntryPoint> property to specify the function to import and then changes the name to `MyNewMessageBoxMethod`.</span></span>  
  
 [!code-csharp[System.Runtime.InteropServices.DllImport.EntryPoint#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.InteropServices.DllImport.EntryPoint/cs/sample.cs#1)]
 [!code-vb[System.Runtime.InteropServices.DllImport.EntryPoint#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.InteropServices.DllImport.EntryPoint/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.InteropServices.DllImportAttribute" />
      </Docs>
    </Member>
    <Member MemberName="ExactSpelling">
      <MemberSignature Language="C#" Value="public bool ExactSpelling;" />
      <MemberSignature Language="ILAsm" Value=".field public bool ExactSpelling" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling" />
      <MemberSignature Language="VB.NET" Value="Public ExactSpelling As Boolean " />
      <MemberSignature Language="C++ CLI" Value="public: bool ExactSpelling;" />
      <MemberSignature Language="F#" Value="val mutable ExactSpelling : bool" Usage="System.Runtime.InteropServices.DllImportAttribute.ExactSpelling" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cebb1-161">Controla se o campo <see cref="F:System.Runtime.InteropServices.DllImportAttribute.CharSet" /> faz com que a Common Language Runtime pesquise uma DLL não gerenciada quanto a nomes de ponto de entrada diferentes daquele especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cebb1-161">Controls whether the <see cref="F:System.Runtime.InteropServices.DllImportAttribute.CharSet" /> field causes the common language runtime to search an unmanaged DLL for entry-point names other than the one specified.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cebb1-162">Se `false`, o nome do ponto de entrada anexado com a letra A é invocado quando o <xref:System.Runtime.InteropServices.DllImportAttribute.CharSet?displayProperty=nameWithType> campo é definido como `CharSet.Ansi`, e o nome de ponto de entrada anexado com a letra W é invocado quando o <xref:System.Runtime.InteropServices.DllImportAttribute.CharSet?displayProperty=nameWithType> campo é definido como o `CharSet.Unicode`.</span><span class="sxs-lookup"><span data-stu-id="cebb1-162">If `false`, the entry point name appended with the letter A is invoked when the <xref:System.Runtime.InteropServices.DllImportAttribute.CharSet?displayProperty=nameWithType> field is set to `CharSet.Ansi`, and the entry-point name appended with the letter W is invoked when the <xref:System.Runtime.InteropServices.DllImportAttribute.CharSet?displayProperty=nameWithType> field is set to the `CharSet.Unicode`.</span></span> <span data-ttu-id="cebb1-163">Normalmente, os compiladores gerenciados defina esse campo.</span><span class="sxs-lookup"><span data-stu-id="cebb1-163">Typically, managed compilers set this field.</span></span>  
  
 <span data-ttu-id="cebb1-164">A tabela a seguir mostra a relação entre o <xref:System.Runtime.InteropServices.DllImportAttribute.CharSet> e <xref:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling> campos, com base nos valores padrão impostas pela linguagem de programação.</span><span class="sxs-lookup"><span data-stu-id="cebb1-164">The following table shows the relationship between the <xref:System.Runtime.InteropServices.DllImportAttribute.CharSet> and <xref:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling> fields, based on default values imposed by the programming language.</span></span> <span data-ttu-id="cebb1-165">Você pode substituir a configuração padrão, mas fazer isso com cuidado.</span><span class="sxs-lookup"><span data-stu-id="cebb1-165">You can override the default setting, but do so with caution.</span></span>  
  
|<span data-ttu-id="cebb1-166">Idioma</span><span class="sxs-lookup"><span data-stu-id="cebb1-166">Language</span></span>|<span data-ttu-id="cebb1-167">ANSI</span><span class="sxs-lookup"><span data-stu-id="cebb1-167">ANSI</span></span>|<span data-ttu-id="cebb1-168">Unicode</span><span class="sxs-lookup"><span data-stu-id="cebb1-168">Unicode</span></span>|<span data-ttu-id="cebb1-169">Auto</span><span class="sxs-lookup"><span data-stu-id="cebb1-169">Auto</span></span>|  
|--------------|----------|-------------|----------|  
|<span data-ttu-id="cebb1-170">Visual Basic</span><span class="sxs-lookup"><span data-stu-id="cebb1-170">Visual Basic</span></span>|<span data-ttu-id="cebb1-171">ExactSpelling: = True</span><span class="sxs-lookup"><span data-stu-id="cebb1-171">ExactSpelling:=True</span></span>|<span data-ttu-id="cebb1-172">ExactSpelling: = True</span><span class="sxs-lookup"><span data-stu-id="cebb1-172">ExactSpelling:=True</span></span>|<span data-ttu-id="cebb1-173">ExactSpelling: = False</span><span class="sxs-lookup"><span data-stu-id="cebb1-173">ExactSpelling:=False</span></span>|  
|<span data-ttu-id="cebb1-174">C#</span><span class="sxs-lookup"><span data-stu-id="cebb1-174">C#</span></span>|<span data-ttu-id="cebb1-175">ExactSpelling=false</span><span class="sxs-lookup"><span data-stu-id="cebb1-175">ExactSpelling=false</span></span>|<span data-ttu-id="cebb1-176">ExactSpelling=false</span><span class="sxs-lookup"><span data-stu-id="cebb1-176">ExactSpelling=false</span></span>|<span data-ttu-id="cebb1-177">ExactSpelling=false</span><span class="sxs-lookup"><span data-stu-id="cebb1-177">ExactSpelling=false</span></span>|  
|<span data-ttu-id="cebb1-178">C++</span><span class="sxs-lookup"><span data-stu-id="cebb1-178">C++</span></span>|<span data-ttu-id="cebb1-179">ExactSpelling=false</span><span class="sxs-lookup"><span data-stu-id="cebb1-179">ExactSpelling=false</span></span>|<span data-ttu-id="cebb1-180">ExactSpelling=false</span><span class="sxs-lookup"><span data-stu-id="cebb1-180">ExactSpelling=false</span></span>|<span data-ttu-id="cebb1-181">ExactSpelling=false</span><span class="sxs-lookup"><span data-stu-id="cebb1-181">ExactSpelling=false</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="cebb1-182">Em alguns casos, os desenvolvedores de Visual Basic usam a <xref:System.Runtime.InteropServices.DllImportAttribute>, em vez de usar o `Declare` instrução, para definir uma função de DLL em código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="cebb1-182">In some cases, Visual Basic developers use the <xref:System.Runtime.InteropServices.DllImportAttribute>, instead of using the `Declare` statement, to define a DLL function in managed code.</span></span> <span data-ttu-id="cebb1-183">Definindo o <xref:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling> campo é um dos casos.</span><span class="sxs-lookup"><span data-stu-id="cebb1-183">Setting the <xref:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling> field is one of those cases.</span></span>  
  
 [!code-cpp[System.Runtime.InteropServices.DllImportAttribute#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/cpp/source.cpp#4)]
 [!code-csharp[System.Runtime.InteropServices.DllImportAttribute#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/cs/source.cs#4)]
 [!code-vb[System.Runtime.InteropServices.DllImportAttribute#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/vb/source.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreserveSig">
      <MemberSignature Language="C#" Value="public bool PreserveSig;" />
      <MemberSignature Language="ILAsm" Value=".field public bool PreserveSig" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.DllImportAttribute.PreserveSig" />
      <MemberSignature Language="VB.NET" Value="Public PreserveSig As Boolean " />
      <MemberSignature Language="C++ CLI" Value="public: bool PreserveSig;" />
      <MemberSignature Language="F#" Value="val mutable PreserveSig : bool" Usage="System.Runtime.InteropServices.DllImportAttribute.PreserveSig" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cebb1-184">Indica se os métodos não gerenciados que têm valores retornados <see langword="HRESULT" /> ou <see langword="retval" /> são traduzidos diretamente ou se os valores retornados <see langword="HRESULT" /> e <see langword="retval" /> são convertidos automaticamente para exceções.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cebb1-184">Indicates whether unmanaged methods that have <see langword="HRESULT" /> or <see langword="retval" /> return values are directly translated or whether <see langword="HRESULT" /> or <see langword="retval" /> return values are automatically converted to exceptions.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cebb1-185">Defina a <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig> campo para `true` a tradução diretamente de assinaturas não gerenciadas com `HRESULT` ou `retval` valores; defini-lo como `false` converter automaticamente `HRESULT` ou `retval` valores às exceções.</span><span class="sxs-lookup"><span data-stu-id="cebb1-185">Set the <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig> field to `true` to directly translate unmanaged signatures with `HRESULT` or `retval` values; set it to `false` to automatically convert `HRESULT` or `retval` values to exceptions.</span></span> <span data-ttu-id="cebb1-186">Por padrão, o <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig> campo é `true`.</span><span class="sxs-lookup"><span data-stu-id="cebb1-186">By default, the <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig> field is `true`.</span></span>  
  
 <span data-ttu-id="cebb1-187">Quando `true`, a assinatura resultante do método retorna um valor inteiro que contém o `HRESULT` valor.</span><span class="sxs-lookup"><span data-stu-id="cebb1-187">When `true`, the resulting method signature returns an integer value that contains the `HRESULT` value.</span></span>  <span data-ttu-id="cebb1-188">Nesse caso, você deve inspecionar o valor de retorno e responder adequadamente manualmente em seu aplicativo.</span><span class="sxs-lookup"><span data-stu-id="cebb1-188">In this case, you must manually inspect the return value and respond accordingly in your application.</span></span>  
  
 <span data-ttu-id="cebb1-189">Quando você define o <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig> campo para `false`, a assinatura do método resultante contém um tipo de retorno nulo em vez de um número inteiro (`HRESULT`) tipo de retorno.</span><span class="sxs-lookup"><span data-stu-id="cebb1-189">When you set the <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig> field to `false`, the resulting method signature contains a void return type instead of an integer (`HRESULT`) return type.</span></span>  <span data-ttu-id="cebb1-190">Quando o método não gerenciado gera uma `HRESULT`, o tempo de execução ignora automaticamente um valor de retorno de `S_OK` (ou 0) e não gerará uma exceção.</span><span class="sxs-lookup"><span data-stu-id="cebb1-190">When the unmanaged method produces an `HRESULT`, the runtime automatically ignores a return value of `S_OK` (or 0) and does not throw an exception.</span></span>  <span data-ttu-id="cebb1-191">Para `HRESULT`s diferente `S_OK`, o tempo de execução gera automaticamente uma exceção que corresponde à `HRESULT`.</span><span class="sxs-lookup"><span data-stu-id="cebb1-191">For `HRESULT`s other than `S_OK`, the runtime automatically throws an exception that corresponds to the `HRESULT`.</span></span>  <span data-ttu-id="cebb1-192">Observe que o <xref:System.Runtime.InteropServices.DllImportAttribute> atributo só executa essa conversão para métodos que retornam um `HRESULT`.</span><span class="sxs-lookup"><span data-stu-id="cebb1-192">Note that the <xref:System.Runtime.InteropServices.DllImportAttribute> attribute only performs this conversion to methods that return an `HRESULT`.</span></span>  
  
 <span data-ttu-id="cebb1-193">Você pode optar por alterar o comportamento a partir de relatório de erros de padrão `HRESULT`s às exceções em casos em que as exceções se ajuste melhor a estrutura do seu aplicativo de relatório de erros.</span><span class="sxs-lookup"><span data-stu-id="cebb1-193">You might decide to change the default error reporting behavior from `HRESULT`s to exceptions in cases where exceptions better fit the error reporting structure of your application.</span></span>  
  
 <span data-ttu-id="cebb1-194">Esse campo é semelhante para o <xref:System.Runtime.InteropServices.PreserveSigAttribute>; no entanto, em contraste com o <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig> campo, o valor padrão para o atributo é `false`.</span><span class="sxs-lookup"><span data-stu-id="cebb1-194">This field is similar to the <xref:System.Runtime.InteropServices.PreserveSigAttribute>; however, in contrast to the <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig> field, the default value for the attribute is `false`.</span></span>  
  
 <span data-ttu-id="cebb1-195">Em alguns casos, os desenvolvedores de Visual Basic usam a <xref:System.Runtime.InteropServices.DllImportAttribute>, em vez de usar o `Declare` instrução, para definir uma função de DLL em código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="cebb1-195">In some cases, Visual Basic developers use the <xref:System.Runtime.InteropServices.DllImportAttribute>, instead of using the `Declare` statement, to define a DLL function in managed code.</span></span> <span data-ttu-id="cebb1-196">Definindo o <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig> campo é um dos casos.</span><span class="sxs-lookup"><span data-stu-id="cebb1-196">Setting the <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig> field is one of those cases.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cebb1-197">O seguinte exemplo de código usa o <xref:System.Runtime.InteropServices.DllImportAttribute> para importar não gerenciado `SHAutoComplete` função uma vez com o <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig> campo definido como `true` e, novamente com o <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig> campo definido como `false`.</span><span class="sxs-lookup"><span data-stu-id="cebb1-197">The following code example uses the <xref:System.Runtime.InteropServices.DllImportAttribute> to import the unmanaged `SHAutoComplete` function once with the <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig> field set to `true` and again with the <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig> field set to `false`.</span></span>  <span data-ttu-id="cebb1-198">Este exemplo de código faz com que o `SHAutoComplete` função para gerar erros com uma exceção, uma vez e um `HRESULT` a próxima.</span><span class="sxs-lookup"><span data-stu-id="cebb1-198">This code example causes the `SHAutoComplete` function to generate any errors with an exception one time and an `HRESULT` the next.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.PreserveSigAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.PreserveSigAttribute/cs/example.cs#1)]
 [!code-vb[Runtime.InteropServices.PreserveSigAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.PreserveSigAttribute/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.InteropServices.PreserveSigAttribute" />
      </Docs>
    </Member>
    <Member MemberName="SetLastError">
      <MemberSignature Language="C#" Value="public bool SetLastError;" />
      <MemberSignature Language="ILAsm" Value=".field public bool SetLastError" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.DllImportAttribute.SetLastError" />
      <MemberSignature Language="VB.NET" Value="Public SetLastError As Boolean " />
      <MemberSignature Language="C++ CLI" Value="public: bool SetLastError;" />
      <MemberSignature Language="F#" Value="val mutable SetLastError : bool" Usage="System.Runtime.InteropServices.DllImportAttribute.SetLastError" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cebb1-199">Indica se o computador chamado chama a <see langword="SetLastError" /> função da API do Win32 antes de retornar do método atribuído.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cebb1-199">Indicates whether the callee calls the <see langword="SetLastError" /> Win32 API function before returning from the attributed method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cebb1-200">`true` para indicar que o receptor chamará `SetLastError`; caso contrário, `false`.</span><span class="sxs-lookup"><span data-stu-id="cebb1-200">`true` to indicate that the callee will call `SetLastError`; otherwise, `false`.</span></span> <span data-ttu-id="cebb1-201">O padrão é `false`.</span><span class="sxs-lookup"><span data-stu-id="cebb1-201">The default is `false`.</span></span>  
  
 <span data-ttu-id="cebb1-202">A marshaler de tempo de execução chama `GetLastError` e armazena em cache o valor retornado para impedir que ele seja substituído por outras chamadas à API.</span><span class="sxs-lookup"><span data-stu-id="cebb1-202">The runtime marshaler calls `GetLastError` and caches the value returned to prevent it from being overwritten by other API calls.</span></span> <span data-ttu-id="cebb1-203">Você pode recuperar o código de erro chamando <xref:System.Runtime.InteropServices.Marshal.GetLastWin32Error%2A>.</span><span class="sxs-lookup"><span data-stu-id="cebb1-203">You can retrieve the error code by calling <xref:System.Runtime.InteropServices.Marshal.GetLastWin32Error%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cebb1-204">Em alguns casos, os desenvolvedores de Visual Basic usam a <xref:System.Runtime.InteropServices.DllImportAttribute>, em vez de usar o `Declare` instrução, para definir uma função de DLL em código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="cebb1-204">In some cases, Visual Basic developers use the <xref:System.Runtime.InteropServices.DllImportAttribute>, instead of using the `Declare` statement, to define a DLL function in managed code.</span></span> <span data-ttu-id="cebb1-205">Definindo o <xref:System.Runtime.InteropServices.DllImportAttribute.SetLastError> campo é um dos casos.</span><span class="sxs-lookup"><span data-stu-id="cebb1-205">Setting the <xref:System.Runtime.InteropServices.DllImportAttribute.SetLastError> field is one of those cases.</span></span>  
  
 [!code-cpp[System.Runtime.InteropServices.DllImportAttribute#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/cpp/source.cpp#5)]
 [!code-csharp[System.Runtime.InteropServices.DllImportAttribute#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/cs/source.cs#5)]
 [!code-vb[System.Runtime.InteropServices.DllImportAttribute#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/vb/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error" />
      </Docs>
    </Member>
    <Member MemberName="ThrowOnUnmappableChar">
      <MemberSignature Language="C#" Value="public bool ThrowOnUnmappableChar;" />
      <MemberSignature Language="ILAsm" Value=".field public bool ThrowOnUnmappableChar" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar" />
      <MemberSignature Language="VB.NET" Value="Public ThrowOnUnmappableChar As Boolean " />
      <MemberSignature Language="C++ CLI" Value="public: bool ThrowOnUnmappableChar;" />
      <MemberSignature Language="F#" Value="val mutable ThrowOnUnmappableChar : bool" Usage="System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cebb1-206">Habilita ou desabilita a geração de uma exceção em um caractere Unicode não mapeável que é convertido em um caractere "?" ANSI.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cebb1-206">Enables or disables the throwing of an exception on an unmappable Unicode character that is converted to an ANSI "?" character.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cebb1-207">`true` para indicar que uma exceção é lançada sempre que o marshaler de interoperabilidade converte um caractere não mapeável; `false` para indicar que o <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar> campo será desabilitado.</span><span class="sxs-lookup"><span data-stu-id="cebb1-207">`true` to indicate that an exception is thrown each time the interop marshaler converts an unmappable character; `false` to indicate that the <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar> field is disabled.</span></span> <span data-ttu-id="cebb1-208">Este campo é `false` por padrão.</span><span class="sxs-lookup"><span data-stu-id="cebb1-208">This field is `false` by default.</span></span>  
  
 <span data-ttu-id="cebb1-209">O common language runtime converte em caracteres ANSI que qualquer gerenciado caracteres Unicode passados para um método não gerenciado em execução no Windows 98 ou Windows Me.</span><span class="sxs-lookup"><span data-stu-id="cebb1-209">The common language runtime converts to ANSI characters any managed Unicode characters passed to an unmanaged method executing on Windows 98 or Windows Me.</span></span> <span data-ttu-id="cebb1-210">Mapeamento de melhor ajuste permite que o marshaler de interoperabilidade fornecer um caractere de fechamento de correspondência quando não existe nenhuma correspondência exata.</span><span class="sxs-lookup"><span data-stu-id="cebb1-210">Best-fit mapping enables the interop marshaler to provide a close-matching character when no exact match exists.</span></span> <span data-ttu-id="cebb1-211">Por exemplo, o marshaler converte o caractere de direitos autorais de Unicode para o c para métodos não gerenciados que aceitam caracteres ANSI.</span><span class="sxs-lookup"><span data-stu-id="cebb1-211">For example, the marshaler converts the Unicode copyright character to 'c' for unmanaged methods that accept ANSI characters.</span></span> <span data-ttu-id="cebb1-212">Alguns caracteres não têm uma representação de melhor ajuste; Esses caracteres são chamados não mapeável.</span><span class="sxs-lookup"><span data-stu-id="cebb1-212">Some characters lack a best-fit representation; these characters are called unmappable.</span></span> <span data-ttu-id="cebb1-213">Caracteres não mapeável geralmente são convertidos para o padrão '?' Caractere ANSI.</span><span class="sxs-lookup"><span data-stu-id="cebb1-213">Unmappable characters are usually converted to the default '?' ANSI character.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="cebb1-214">Determinados caracteres Unicode são convertidos em caracteres perigosas, como a barra invertida '\\' caractere, que pode alterar inadvertidamente um caminho.</span><span class="sxs-lookup"><span data-stu-id="cebb1-214">Certain Unicode characters are converted to dangerous characters, such as the backslash '\\' character, which can inadvertently change a path.</span></span> <span data-ttu-id="cebb1-215">Definindo o <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar> campo para `true`, você pode sinalizar a presença de um caractere não mapeável ao chamador lançando uma exceção.</span><span class="sxs-lookup"><span data-stu-id="cebb1-215">By setting the <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar> field to `true`, you can signal the presence of an unmappable character to the caller by throwing an exception.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="cebb1-216">Você não pode alterar os valores padrão fornecidos pelo <xref:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping> e <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar> campos quando passar uma matriz gerenciada cujos elementos é caracteres ANSI ou LPSTRs para uma matriz segura não gerenciada.</span><span class="sxs-lookup"><span data-stu-id="cebb1-216">You cannot change the default values provided by the <xref:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping> and <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar> fields when passing a managed array whose elements are ANSI Chars or LPSTRs to an unmanaged safe array.</span></span> <span data-ttu-id="cebb1-217">Mapeamento de melhor ajuste está sempre habilitado e nenhuma exceção é lançada.</span><span class="sxs-lookup"><span data-stu-id="cebb1-217">Best-fit mapping is always enabled and no exception is thrown.</span></span> <span data-ttu-id="cebb1-218">Lembre-se de que essa combinação pode comprometer seu modelo de segurança.</span><span class="sxs-lookup"><span data-stu-id="cebb1-218">Be aware that this combination can compromise your security model.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cebb1-219">Em alguns casos, os desenvolvedores de Visual Basic usam a <xref:System.Runtime.InteropServices.DllImportAttribute> para definir uma função de DLL em código gerenciado, em vez de usar o `Declare` instrução.</span><span class="sxs-lookup"><span data-stu-id="cebb1-219">In some cases, Visual Basic developers use the <xref:System.Runtime.InteropServices.DllImportAttribute> to define a DLL function in managed code, instead of using the `Declare` statement.</span></span> <span data-ttu-id="cebb1-220">Definindo o <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar> campo é um dos casos.</span><span class="sxs-lookup"><span data-stu-id="cebb1-220">Setting the <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar> field is one of those cases.</span></span> <span data-ttu-id="cebb1-221">O exemplo a seguir mostra como aplicar o mais rígida segurança de mapeamento de caractere para uma plataforma de invocar as definições de método, especificando o conjunto de caracteres ANSI, desabilitando o melhor comportamento de mapeamento de ajuste e gerar uma exceção em caracteres de Unicode não mapeados.</span><span class="sxs-lookup"><span data-stu-id="cebb1-221">The following example shows how to apply the strictest character mapping security to a platform invoke method definitions by specifying the ANSI character set, disabling best fit mapping behavior, and throwing an exception on unmapped Unicode characters.</span></span>  
  
 [!code-cpp[System.Runtime.InteropServices.DllImportAttribute#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/cpp/source.cpp#3)]
 [!code-csharp[System.Runtime.InteropServices.DllImportAttribute#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/cs/source.cs#3)]
 [!code-vb[System.Runtime.InteropServices.DllImportAttribute#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/vb/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Runtime.InteropServices.DllImportAttribute.CharSet" />
        <altmember cref="F:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping" />
        <related type="Article" href="http://msdn.microsoft.com/library/115f7a2f-d422-4605-ab36-13a8dd28142a">
          <span data-ttu-id="cebb1-222">marshaling de interoperabilidade</span>
          <span class="sxs-lookup">
            <span data-stu-id="cebb1-222">Interop Marshaling</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.DllImportAttribute.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : string" Usage="System.Runtime.InteropServices.DllImportAttribute.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cebb1-223">Obtém o nome do arquivo DLL que contém o ponto de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cebb1-223">Gets the name of the DLL file that contains the entry point.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cebb1-224">O nome do arquivo DLL que contém o ponto de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cebb1-224">The name of the DLL file that contains the entry point.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cebb1-225">Você pode fornecer um caminho completo ou relativo.</span><span class="sxs-lookup"><span data-stu-id="cebb1-225">You can provide a full or relative path.</span></span> <span data-ttu-id="cebb1-226">Se você não fornecer nenhum caminho, a DLL deve ser no caminho atual em tempo de execução, a menos que a DLL é carregada por outros meios.</span><span class="sxs-lookup"><span data-stu-id="cebb1-226">If you provide no path, the DLL must be in the current path at run time, unless the DLL is loaded by some other means.</span></span> <span data-ttu-id="cebb1-227">Lembre-se, no entanto, que usando um caminho totalmente qualificado pode introduzir imprecisão se a DLL é movida.</span><span class="sxs-lookup"><span data-stu-id="cebb1-227">Be aware, however, that using a fully qualified path can introduce inaccuracy if the DLL is moved.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>