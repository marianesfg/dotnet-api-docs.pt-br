<Type Name="TypeIdentifierAttribute" FullName="System.Runtime.InteropServices.TypeIdentifierAttribute">
  <TypeSignature Language="C#" Value="public sealed class TypeIdentifierAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TypeIdentifierAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.TypeIdentifierAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TypeIdentifierAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeIdentifierAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Struct | System.AttributeTargets.Enum | System.AttributeTargets.Interface | System.AttributeTargets.Delegate, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="5f92b-101">Dá suporte à equivalência de tipo.</span><span class="sxs-lookup"><span data-stu-id="5f92b-101">Provides support for type equivalence.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f92b-102">O <xref:System.Runtime.InteropServices.TypeIdentifierAttribute> atributo principalmente é emitido por compiladores.</span><span class="sxs-lookup"><span data-stu-id="5f92b-102">The <xref:System.Runtime.InteropServices.TypeIdentifierAttribute> attribute is primarily emitted by compilers.</span></span> <span data-ttu-id="5f92b-103">Ele tem duas finalidades:</span><span class="sxs-lookup"><span data-stu-id="5f92b-103">It serves two purposes:</span></span>  
  
-   <span data-ttu-id="5f92b-104">Para todos os tipos importados, ele indica que o tipo é destinado a ser usado para equivalência de tipo.</span><span class="sxs-lookup"><span data-stu-id="5f92b-104">For all imported types, it indicates that the type is intended to be used for type equivalence.</span></span>  
  
-   <span data-ttu-id="5f92b-105">Para tipos que não têm GUIDs em sua biblioteca de tipo, ele tem um construtor que usa duas cadeias de caracteres (`scope` e `identifier`).</span><span class="sxs-lookup"><span data-stu-id="5f92b-105">For types that don’t have GUIDs in their type library, it has a constructor that takes two strings (`scope` and `identifier`).</span></span> <span data-ttu-id="5f92b-106">Eles são combinados em um GUID e tornam-se a chave que é usada para equivalência de tipo.</span><span class="sxs-lookup"><span data-stu-id="5f92b-106">These are combined into a GUID and become the key that is used for type equivalence.</span></span>  
  
 <span data-ttu-id="5f92b-107">Equivalência de tipo é abordada no <xref:System.Type.IsEquivalentTo%2A?displayProperty=nameWithType> tópico.</span><span class="sxs-lookup"><span data-stu-id="5f92b-107">Type equivalence is discussed in the <xref:System.Type.IsEquivalentTo%2A?displayProperty=nameWithType> topic.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5f92b-108">Cria uma nova instância da classe <see cref="T:System.Runtime.InteropServices.TypeIdentifierAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="5f92b-108">Creates a new instance of the <see cref="T:System.Runtime.InteropServices.TypeIdentifierAttribute" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeIdentifierAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.TypeIdentifierAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeIdentifierAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5f92b-109">Cria uma nova instância da classe <see cref="T:System.Runtime.InteropServices.TypeIdentifierAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="5f92b-109">Creates a new instance of the <see cref="T:System.Runtime.InteropServices.TypeIdentifierAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f92b-110">Essa sobrecarga de construtor não aceita parâmetros.</span><span class="sxs-lookup"><span data-stu-id="5f92b-110">This constructor overload does not accept parameters.</span></span> <span data-ttu-id="5f92b-111">Portanto, interfaces que têm esse atributo usam GUID e o nome simples do tipo para estabelecer a equivalência de tipo.</span><span class="sxs-lookup"><span data-stu-id="5f92b-111">Therefore, interfaces that have this attribute use the type's GUID and simple name to establish type equivalence.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeIdentifierAttribute (string scope, string identifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string scope, string identifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.TypeIdentifierAttribute.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scope As String, identifier As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeIdentifierAttribute(System::String ^ scope, System::String ^ identifier);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="identifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="scope"><span data-ttu-id="5f92b-112">A primeira cadeia de caracteres de equivalência de tipo.</span><span class="sxs-lookup"><span data-stu-id="5f92b-112">The first type equivalence string.</span></span></param>
        <param name="identifier"><span data-ttu-id="5f92b-113">A segunda cadeia de caracteres de equivalência de tipo.</span><span class="sxs-lookup"><span data-stu-id="5f92b-113">The second type equivalence string.</span></span></param>
        <summary><span data-ttu-id="5f92b-114">Cria uma nova instância da classe <see cref="T:System.Runtime.InteropServices.TypeIdentifierAttribute" /> com o escopo especificado e o identificador.</span><span class="sxs-lookup"><span data-stu-id="5f92b-114">Creates a new instance of the <see cref="T:System.Runtime.InteropServices.TypeIdentifierAttribute" /> class with the specified scope and identifier.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f92b-115">O `scope` e `identifier` parâmetros são usados para estabelecer a equivalência de tipo.</span><span class="sxs-lookup"><span data-stu-id="5f92b-115">The `scope` and `identifier` parameters are used to establish type equivalence.</span></span> <span data-ttu-id="5f92b-116">Eles são combinados em um GUID e tornam-se a chave que é usada para equivalência de tipo.</span><span class="sxs-lookup"><span data-stu-id="5f92b-116">They are combined into a GUID and become the key that is used for type equivalence.</span></span> <span data-ttu-id="5f92b-117">Este construtor é particularmente útil para tipos que não possuem GUIDs em sua biblioteca de tipos.</span><span class="sxs-lookup"><span data-stu-id="5f92b-117">This constructor is particularly useful for types that do not have GUIDs in their type library.</span></span>  
  
 <span data-ttu-id="5f92b-118">O <xref:System.Runtime.InteropServices.TypeIdentifierAttribute> classe internamente mantém o `scope` e `identifier` parâmetros como membros particulares.</span><span class="sxs-lookup"><span data-stu-id="5f92b-118">The <xref:System.Runtime.InteropServices.TypeIdentifierAttribute> class internally maintains the `scope` and `identifier` parameters as private members.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Identifier">
      <MemberSignature Language="C#" Value="public string Identifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Identifier" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.TypeIdentifierAttribute.Identifier" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Identifier As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Identifier { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5f92b-119">Obtém o valor do parâmetro <paramref name="identifier" /> que foi passado ao construtor <see cref="M:System.Runtime.InteropServices.TypeIdentifierAttribute.#ctor(System.String,System.String)" />.</span><span class="sxs-lookup"><span data-stu-id="5f92b-119">Gets the value of the <paramref name="identifier" /> parameter that was passed to the <see cref="M:System.Runtime.InteropServices.TypeIdentifierAttribute.#ctor(System.String,System.String)" /> constructor.</span></span></summary>
        <value><span data-ttu-id="5f92b-120">O valor do construtor <paramref name="identifier" /> parâmetro.</span><span class="sxs-lookup"><span data-stu-id="5f92b-120">The value of the constructor's <paramref name="identifier" /> parameter.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scope">
      <MemberSignature Language="C#" Value="public string Scope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Scope" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.TypeIdentifierAttribute.Scope" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Scope As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Scope { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5f92b-121">Obtém o valor do parâmetro <paramref name="scope" /> que foi passado ao construtor <see cref="M:System.Runtime.InteropServices.TypeIdentifierAttribute.#ctor(System.String,System.String)" />.</span><span class="sxs-lookup"><span data-stu-id="5f92b-121">Gets the value of the <paramref name="scope" /> parameter that was passed to the <see cref="M:System.Runtime.InteropServices.TypeIdentifierAttribute.#ctor(System.String,System.String)" /> constructor.</span></span></summary>
        <value><span data-ttu-id="5f92b-122">O valor do construtor <paramref name="scope" /> parâmetro.</span><span class="sxs-lookup"><span data-stu-id="5f92b-122">The value of the constructor's <paramref name="scope" /> parameter.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>