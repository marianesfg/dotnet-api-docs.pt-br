<Type Name="_ConstructorInfo" FullName="System.Runtime.InteropServices._ConstructorInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9c6864392f845f1369f62565bff5ecd35c10bcf5" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface _ConstructorInfo" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _ConstructorInfo" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices._ConstructorInfo" />
  <TypeSignature Language="VB.NET" Value="Public Interface _ConstructorInfo" />
  <TypeSignature Language="C++ CLI" Value="public interface class _ConstructorInfo" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.CLSCompliant(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("E9A19478-9646-3679-9B10-8411AE1FD57D")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibImportClass(typeof(System.Reflection.ConstructorInfo))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="5a42c-101">Expõe os membros públicos da classe <see cref="T:System.Reflection.ConstructorInfo" /> a código não gerenciado.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5a42c-101">Exposes the public members of the <see cref="T:System.Reflection.ConstructorInfo" /> class to unmanaged code.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a42c-102">Essa interface é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="5a42c-102">This interface is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="5a42c-103">O <xref:System.Reflection.ConstructorInfo?displayProperty=nameWithType> classe descobre os atributos de um construtor de classe e fornece acesso aos metadados do construtor.</span><span class="sxs-lookup"><span data-stu-id="5a42c-103">The <xref:System.Reflection.ConstructorInfo?displayProperty=nameWithType> class discovers the attributes of a class constructor and provides access to constructor metadata.</span></span>  
  
 <span data-ttu-id="5a42c-104">O <xref:System.Runtime.InteropServices._ConstructorInfo?displayProperty=nameWithType> interface preserva a ordem de vtable do <xref:System.Reflection.ConstructorInfo?displayProperty=nameWithType> classe membros que podem ser acessados por objetos COM não gerenciados.</span><span class="sxs-lookup"><span data-stu-id="5a42c-104">The <xref:System.Runtime.InteropServices._ConstructorInfo?displayProperty=nameWithType> interface preserves the vtable order of the <xref:System.Reflection.ConstructorInfo?displayProperty=nameWithType> class members that can be accessed by unmanaged COM objects.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodAttributes Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.MethodAttributes Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._ConstructorInfo.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As MethodAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MethodAttributes Attributes { System::Reflection::MethodAttributes get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a42c-105">Fornece acesso independente da versão para objetos COM à propriedade <see cref="P:System.Reflection.MethodBase.Attributes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-105">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MethodBase.Attributes" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5a42c-106">Um dos valores de <see cref="T:System.Reflection.MethodAttributes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-106">One of the <see cref="T:System.Reflection.MethodAttributes" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a42c-107">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="5a42c-107">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="5a42c-108">O <xref:System.Reflection.MethodBase.Attributes%2A> propriedade obtém os atributos associados a este método.</span><span class="sxs-lookup"><span data-stu-id="5a42c-108">The <xref:System.Reflection.MethodBase.Attributes%2A> property gets the attributes associated with this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CallingConvention">
      <MemberSignature Language="C#" Value="public System.Reflection.CallingConventions CallingConvention { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.CallingConventions CallingConvention" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._ConstructorInfo.CallingConvention" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CallingConvention As CallingConventions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::CallingConventions CallingConvention { System::Reflection::CallingConventions get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.CallingConventions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a42c-109">Fornece acesso independente da versão para objetos COM à propriedade <see cref="P:System.Reflection.MethodBase.CallingConvention" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-109">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MethodBase.CallingConvention" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5a42c-110">As <see cref="T:System.Reflection.CallingConventions" /> deste método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-110">The <see cref="T:System.Reflection.CallingConventions" /> for this method.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a42c-111">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="5a42c-111">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="5a42c-112">O <xref:System.Reflection.MethodBase.CallingConvention%2A> propriedade obtém um valor que indica as convenções de chamada para esse método.</span><span class="sxs-lookup"><span data-stu-id="5a42c-112">The <xref:System.Reflection.MethodBase.CallingConvention%2A> property gets a value indicating the calling conventions for this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaringType">
      <MemberSignature Language="C#" Value="public Type DeclaringType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DeclaringType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._ConstructorInfo.DeclaringType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeclaringType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ DeclaringType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a42c-113">Fornece acesso independente da versão para objetos COM à propriedade <see cref="P:System.Reflection.MemberInfo.DeclaringType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-113">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MemberInfo.DeclaringType" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5a42c-114">O objeto <see cref="T:System.Type" /> para a classe que declara esse membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-114">The <see cref="T:System.Type" /> object for the class that declares this member.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a42c-115">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="5a42c-115">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="5a42c-116">O <xref:System.Reflection.MemberInfo.DeclaringType%2A> propriedade obtém a classe que declara a esse membro.</span><span class="sxs-lookup"><span data-stu-id="5a42c-116">The <xref:System.Reflection.MemberInfo.DeclaringType%2A> property gets the class that declares this member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (object other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(object other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._ConstructorInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Object ^ other);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="5a42c-117">O <see cref="T:System.Object" /> a ser comparado com o <see cref="T:System.Object" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-117">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a42c-118">Fornece objetos COM com acesso independente de versão para o método <see cref="M:System.Object.Equals(System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-118">Provides COM objects with version-independent access to the <see cref="M:System.Object.Equals(System.Object)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5a42c-119">
            <see langword="true" /> se o <see cref="T:System.Object" /> especificado for igual ao <see cref="T:System.Object" /> atual; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-119">
              <see langword="true" /> if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a42c-120">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="5a42c-120">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="5a42c-121">O <xref:System.Object.Equals%2A> método determina se o especificado <xref:System.Object> é igual à atual <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="5a42c-121">The <xref:System.Object.Equals%2A> method determines whether the specified <xref:System.Object> is equal to the current <xref:System.Object>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5a42c-122">Fornece objetos COM com acesso independente de versão para os membros <see cref="Overload:System.Reflection.MemberInfo.GetCustomAttributes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-122">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.MemberInfo.GetCustomAttributes" /> members.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a42c-123">O <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> membros retornam todos os atributos aplicados a este membro.</span><span class="sxs-lookup"><span data-stu-id="5a42c-123">The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> members return all attributes applied to this member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public object[] GetCustomAttributes (bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetCustomAttributes(bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._ConstructorInfo.GetCustomAttributes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCustomAttributes (inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inherit">
          <span data-ttu-id="5a42c-124">Especifica se deve-se pesquisar ou não a cadeia de herança desse membro para localizar os atributos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-124">Specifies whether to search this member's inheritance chain to find the attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a42c-125">Fornece objetos COM com acesso independente de versão para o método <see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-125">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5a42c-126">Uma matriz que contém todos os atributos personalizados ou uma matriz com zero elementos se nenhum atributo for definido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-126">An array that contains all the custom attributes, or an array with zero elements if no attributes are defined.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a42c-127">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="5a42c-127">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="5a42c-128">O <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> método retorna uma matriz que contém todos os atributos personalizados.</span><span class="sxs-lookup"><span data-stu-id="5a42c-128">The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method returns an array containing all the custom attributes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public object[] GetCustomAttributes (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._ConstructorInfo.GetCustomAttributes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCustomAttributes (attributeType As Type, inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(Type ^ attributeType, bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType">
          <span data-ttu-id="5a42c-129">O tipo de atributo a ser pesquisado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-129">The type of attribute to search for.</span>
          </span>
          <span data-ttu-id="5a42c-130">Somente os atributos que podem ser atribuídos a esse tipo são retornados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-130">Only attributes that are assignable to this type are returned.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="5a42c-131">Especifica se deve-se pesquisar ou não a cadeia de herança desse membro para localizar os atributos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-131">Specifies whether to search this member's inheritance chain to find the attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a42c-132">Fornece objetos COM com acesso independente de versão para o método <see cref="M:System.Reflection.Emit.MethodBuilder.GetCustomAttributes(System.Type,System.Boolean)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-132">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Emit.MethodBuilder.GetCustomAttributes(System.Type,System.Boolean)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5a42c-133">Uma matriz de atributos personalizados aplicados a este membro ou uma matriz com zero (0) elementos se nenhum atributo tiver sido aplicado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-133">An array of custom attributes applied to this member, or an array with zero (0) elements if no attributes have been applied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a42c-134">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="5a42c-134">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="5a42c-135">O <xref:System.Reflection.Emit.MethodBuilder.GetCustomAttributes%2A> método retorna uma matriz de atributos personalizados identificado por <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="5a42c-135">The <xref:System.Reflection.Emit.MethodBuilder.GetCustomAttributes%2A> method returns an array of custom attributes identified by <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._ConstructorInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5a42c-136">Fornece objetos COM com acesso independente de versão para o método <see cref="M:System.Object.GetHashCode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-136">Provides COM objects with version-independent access to the <see cref="M:System.Object.GetHashCode" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5a42c-137">O código hash da instância atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-137">The hash code for the current instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a42c-138">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="5a42c-138">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="5a42c-139">O <xref:System.Object.GetHashCode%2A> método serve como uma função de hash para um tipo específico.</span><span class="sxs-lookup"><span data-stu-id="5a42c-139">The <xref:System.Object.GetHashCode%2A> method serves as a hash function for a particular type.</span></span> <span data-ttu-id="5a42c-140"><xref:System.Object.GetHashCode%2A> é adequado para uso em algoritmos de hash e estruturas de dados como uma tabela de hash.</span><span class="sxs-lookup"><span data-stu-id="5a42c-140"><xref:System.Object.GetHashCode%2A> is suitable for use in hashing algorithms and data structures like a hash table.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIDsOfNames">
      <MemberSignature Language="C#" Value="public void GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._ConstructorInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid">
          <span data-ttu-id="5a42c-141">Reservado para uso futuro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-141">Reserved for future use.</span>
          </span>
          <span data-ttu-id="5a42c-142">Deve ser IID_NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-142">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="rgszNames">
          <span data-ttu-id="5a42c-143">Matriz passada de nomes a serem mapeados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-143">Passed-in array of names to be mapped.</span>
          </span>
        </param>
        <param name="cNames">
          <span data-ttu-id="5a42c-144">Contagem dos nomes a serem mapeados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-144">Count of the names to be mapped.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="5a42c-145">O contexto de localidade no qual interpretar os nomes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-145">The locale context in which to interpret the names.</span>
          </span>
        </param>
        <param name="rgDispId">
          <span data-ttu-id="5a42c-146">Matriz alocada pelo chamador que recebe os IDs correspondentes aos nomes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-146">Caller-allocated array that receives the IDs corresponding to the names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a42c-147">Mapeia um conjunto de nomes para um conjunto correspondente de identificadores de expedição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-147">Maps a set of names to a corresponding set of dispatch identifiers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a42c-148">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="5a42c-148">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="5a42c-149">Para obter mais informações sobre `IDispatch::GetIDsOfNames`, consulte a Biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="5a42c-149">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMethodImplementationFlags">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodImplAttributes GetMethodImplementationFlags ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Reflection.MethodImplAttributes GetMethodImplementationFlags() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._ConstructorInfo.GetMethodImplementationFlags" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMethodImplementationFlags () As MethodImplAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodImplAttributes GetMethodImplementationFlags();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodImplAttributes</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5a42c-150">Fornece objetos COM com acesso independente de versão para o membro <see cref="M:System.Reflection.MethodBase.GetMethodImplementationFlags" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-150">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MethodBase.GetMethodImplementationFlags" /> member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5a42c-151">Os sinalizadores <see cref="T:System.Reflection.MethodImplAttributes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-151">The <see cref="T:System.Reflection.MethodImplAttributes" /> flags.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a42c-152">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="5a42c-152">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="5a42c-153">O <xref:System.Reflection.MethodBase.GetMethodImplementationFlags%2A> membro retorna o <xref:System.Reflection.MethodImplAttributes> sinalizadores.</span><span class="sxs-lookup"><span data-stu-id="5a42c-153">The <xref:System.Reflection.MethodBase.GetMethodImplementationFlags%2A> member returns the <xref:System.Reflection.MethodImplAttributes> flags.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameters">
      <MemberSignature Language="C#" Value="public System.Reflection.ParameterInfo[] GetParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.ParameterInfo[] GetParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._ConstructorInfo.GetParameters" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParameters () As ParameterInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::ParameterInfo ^&gt; ^ GetParameters();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ParameterInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5a42c-154">Fornece objetos COM com acesso independente de versão para o método <see cref="M:System.Reflection.MethodBase.GetParameters" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-154">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MethodBase.GetParameters" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5a42c-155">Uma matriz do tipo <see cref="T:System.Reflection.ParameterInfo" /> que contém informações que correspondem à assinatura do método (ou do construtor) refletido por essa instância.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-155">An array of type <see cref="T:System.Reflection.ParameterInfo" /> containing information that matches the signature of the method (or constructor) reflected by this instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a42c-156">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="5a42c-156">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="5a42c-157">O <xref:System.Reflection.MethodBase.GetParameters%2A> método obtém os parâmetros do construtor ou método especificado.</span><span class="sxs-lookup"><span data-stu-id="5a42c-157">The <xref:System.Reflection.MethodBase.GetParameters%2A> method gets the parameters of the specified method or constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._ConstructorInfo.GetType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5a42c-158">Fornece objetos COM com acesso independente de versão para o método <see cref="M:System.Object.GetType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-158">Provides COM objects with version-independent access to the <see cref="M:System.Object.GetType" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5a42c-159">Um objeto <see cref="T:System.Type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-159">A <see cref="T:System.Type" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a42c-160">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="5a42c-160">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="5a42c-161">O <xref:System.Object.GetType%2A> método obtém o tipo da instância atual.</span><span class="sxs-lookup"><span data-stu-id="5a42c-161">The <xref:System.Object.GetType%2A> method gets the type of the current instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeInfo">
      <MemberSignature Language="C#" Value="public void GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._ConstructorInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo">
          <span data-ttu-id="5a42c-162">As informações de tipo a serem retornadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-162">The type information to return.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="5a42c-163">O identificador de localidade das informações do tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-163">The locale identifier for the type information.</span>
          </span>
        </param>
        <param name="ppTInfo">
          <span data-ttu-id="5a42c-164">Recebe um ponteiro para o objeto de informações de tipo solicitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-164">Receives a pointer to the requested type information object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a42c-165">Recupera as informações do tipo de um objeto, que podem ser usadas para obter informações de tipo para uma interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-165">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a42c-166">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="5a42c-166">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="5a42c-167">Para obter mais informações sobre `IDispatch::GetTypeInfo`, consulte a Biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="5a42c-167">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeInfoCount">
      <MemberSignature Language="C#" Value="public void GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._ConstructorInfo.GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetTypeInfoCount (ByRef pcTInfo As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo">
          <span data-ttu-id="5a42c-168">Aponta para um local que recebe o número de interfaces de informações de tipo fornecido pelo objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-168">Points to a location that receives the number of type information interfaces provided by the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a42c-169">Retorna o número de interfaces de informações do tipo que um objeto fornece (0 ou 1).</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-169">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a42c-170">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="5a42c-170">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="5a42c-171">Para obter mais informações sobre `IDispatch::GetTypeInfoCount`, consulte a Biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="5a42c-171">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public void Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._ConstructorInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember">
          <span data-ttu-id="5a42c-172">Identifica o membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-172">Identifies the member.</span>
          </span>
        </param>
        <param name="riid">
          <span data-ttu-id="5a42c-173">Reservado para uso futuro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-173">Reserved for future use.</span>
          </span>
          <span data-ttu-id="5a42c-174">Deve ser IID_NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-174">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="5a42c-175">O contexto de localidade no qual interpretar argumentos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-175">The locale context in which to interpret arguments.</span>
          </span>
        </param>
        <param name="wFlags">
          <span data-ttu-id="5a42c-176">Sinalizadores que descrevem o contexto da chamada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-176">Flags describing the context of the call.</span>
          </span>
        </param>
        <param name="pDispParams">
          <span data-ttu-id="5a42c-177">Ponteiro para uma estrutura contendo uma matriz de argumentos, uma matriz de DISPIDs de argumento para argumentos nomeados e contagens para o número de elementos nas matrizes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-177">Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span>
          </span>
        </param>
        <param name="pVarResult">
          <span data-ttu-id="5a42c-178">Ponteiro para o local onde o resultado deve ser armazenado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-178">Pointer to the location where the result is to be stored.</span>
          </span>
        </param>
        <param name="pExcepInfo">
          <span data-ttu-id="5a42c-179">Ponteiro para uma estrutura que contém informações de exceção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-179">Pointer to a structure that contains exception information.</span>
          </span>
        </param>
        <param name="puArgErr">
          <span data-ttu-id="5a42c-180">O índice do primeiro argumento que tem um erro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-180">The index of the first argument that has an error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a42c-181">Fornece acesso a propriedades e métodos expostos por um objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-181">Provides access to properties and methods exposed by an object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a42c-182">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="5a42c-182">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="5a42c-183">Para obter mais informações sobre `IDispatch::Invoke`, consulte a Biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="5a42c-183">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke_2">
      <MemberSignature Language="C#" Value="public object Invoke_2 (object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] parameters, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Invoke_2(object obj, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object[] parameters, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._ConstructorInfo.Invoke_2(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke_2(System::Object ^ obj, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ parameters, System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="parameters" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="5a42c-184">A instância que criou esse método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-184">The instance that created this method.</span>
          </span>
        </param>
        <param name="invokeAttr">
          <span data-ttu-id="5a42c-185">Um dos valores <see langword="BindingFlags" /> que especifica o tipo de associação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-185">One of the <see langword="BindingFlags" /> values that specifies the type of binding.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="5a42c-186">Um <see langword="Binder" /> que define um conjunto de propriedades e permite a associação, coerção de tipos de argumento e invocação de membros usando a reflexão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-186">A <see langword="Binder" /> that defines a set of properties and enables the binding, coercion of argument types, and invocation of members using reflection.</span>
          </span>
          <span data-ttu-id="5a42c-187">Se <c>binder</c> for <see langword="null" />, então <see langword="Binder.DefaultBinding" /> será usado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-187">If <c>binder</c> is <see langword="null" />, then <see langword="Binder.DefaultBinding" /> is used.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="5a42c-188">Uma matriz do tipo <see langword="Object" /> usada para fazer a correspondência do número, da ordem e do tipo dos parâmetros para esse construtor, sob as restrições de <c>binder</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-188">An array of type <see langword="Object" /> used to match the number, order, and type of the parameters for this constructor, under the constraints of <c>binder</c>.</span>
          </span>
          <span data-ttu-id="5a42c-189">Se esse construtor não exigir parâmetros, passe uma matriz com zero elementos, como em parâmetros de Object[] = novo Object[0].</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-189">If this constructor does not require parameters, pass an array with zero elements, as in Object[] parameters = new Object[0].</span>
          </span>
          <span data-ttu-id="5a42c-190">Qualquer objeto nesta matriz que não for inicializado explicitamente com um valor conterá o valor padrão desse tipo de objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-190">Any object in this array that is not explicitly initialized with a value will contain the default value for that object type.</span>
          </span>
          <span data-ttu-id="5a42c-191">Para elementos de tipo de referência, esse valor é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-191">For reference-type elements, this value is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="5a42c-192">Para elementos de tipo de valor, esse valor é 0, 0,0, ou <see langword="false" />, dependendo do tipo de elemento específico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-192">For value-type elements, this value is 0, 0.0, or <see langword="false" />, depending on the specific element type.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="5a42c-193">Um <see cref="T:System.Globalization.CultureInfo" /> usado para reger a coerção de tipos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-193">A <see cref="T:System.Globalization.CultureInfo" /> used to govern the coercion of types.</span>
          </span>
          <span data-ttu-id="5a42c-194">Se isso for <see langword="null" />, será usado o <see cref="T:System.Globalization.CultureInfo" /> para o thread atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-194">If this is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a42c-195">Fornece objetos COM com acesso independente de versão para o método <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-195">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5a42c-196">Uma instância da classe associada ao construtor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-196">An instance of the class associated with the constructor.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a42c-197">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="5a42c-197">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="5a42c-198">O <xref:System.Reflection.MethodBase.Invoke%2A> método chama o construtor refletido por este <xref:System.Reflection.ConstructorInfo> com os argumentos especificados, sob as restrições de especificado <xref:System.Reflection.Binder>.</span><span class="sxs-lookup"><span data-stu-id="5a42c-198">The <xref:System.Reflection.MethodBase.Invoke%2A> method invokes the constructor reflected by this <xref:System.Reflection.ConstructorInfo> with the specified arguments, under the constraints of the specified <xref:System.Reflection.Binder>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke_3">
      <MemberSignature Language="C#" Value="public object Invoke_3 (object obj, object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Invoke_3(object obj, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._ConstructorInfo.Invoke_3(System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke_3 (obj As Object, parameters As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke_3(System::Object ^ obj, cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="parameters" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="5a42c-199">A instância que criou esse método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-199">The instance that created this method.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="5a42c-200">Uma lista de argumentos para o construtor ou método invocado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-200">An argument list for the invoked method or constructor.</span>
          </span>
          <span data-ttu-id="5a42c-201">Esta é uma matriz de objetos com o mesmo número, ordem e tipo que os parâmetros do método ou do construtor a ser invocado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-201">This is an array of objects with the same number, order, and type as the parameters of the method or constructor to be invoked.</span>
          </span>
          <span data-ttu-id="5a42c-202">Se não houver nenhum parâmetro, <c>parameters</c> deverá ser <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-202">If there are no parameters, <c>parameters</c> should be <see langword="null" />.</span>
          </span>
          <span data-ttu-id="5a42c-203">Se o método ou construtor representado por esta instância usar um parâmetro <see langword="ref" /> (<see langword="ByRef" /> no Visual Basic), nenhum atributo especial será necessário para esse parâmetro, a fim de invocar o método ou construtor com o uso dessa função.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-203">If the method or constructor represented by this instance takes a <see langword="ref" /> parameter (<see langword="ByRef" /> in Visual Basic), no special attribute is required for that parameter in order to invoke the method or constructor using this function.</span>
          </span>
          <span data-ttu-id="5a42c-204">Qualquer objeto nesta matriz que não for inicializado explicitamente com um valor conterá o valor padrão desse tipo de objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-204">Any object in this array that is not explicitly initialized with a value will contain the default value for that object type.</span>
          </span>
          <span data-ttu-id="5a42c-205">Para elementos de tipo de referência, esse valor é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-205">For reference-type elements, this value is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="5a42c-206">Para elementos de tipo de valor, esse valor é 0, 0,0, ou <see langword="false" />, dependendo do tipo de elemento específico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-206">For value-type elements, this value is 0, 0.0, or <see langword="false" />, depending on the specific element type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a42c-207">Fornece objetos COM com acesso independente de versão para o método <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-207">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5a42c-208">Uma instância da classe associada ao construtor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-208">An instance of the class associated with the constructor.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a42c-209">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="5a42c-209">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="5a42c-210">O <xref:System.Reflection.MethodBase.Invoke%2A> método invoca o método ou construtor representado por esse objeto, usando os parâmetros especificados.</span><span class="sxs-lookup"><span data-stu-id="5a42c-210">The <xref:System.Reflection.MethodBase.Invoke%2A> method invokes the method or constructor represented by this object, using the specified parameters.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke_4">
      <MemberSignature Language="C#" Value="public object Invoke_4 (System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] parameters, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Invoke_4(valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object[] parameters, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._ConstructorInfo.Invoke_4(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke_4(System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ parameters, System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="parameters" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="invokeAttr">
          <span data-ttu-id="5a42c-211">Um dos valores <see langword="BindingFlags" /> que especifica o tipo de associação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-211">One of the <see langword="BindingFlags" /> values that specifies the type of binding.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="5a42c-212">Um <see langword="Binder" /> que define um conjunto de propriedades e permite a associação, coerção de tipos de argumento e invocação de membros usando a reflexão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-212">A <see langword="Binder" /> that defines a set of properties and enables the binding, coercion of argument types, and invocation of members using reflection.</span>
          </span>
          <span data-ttu-id="5a42c-213">Se <c>binder</c> for <see langword="null" />, então <see langword="Binder.DefaultBinding" /> será usado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-213">If <c>binder</c> is <see langword="null" />, then <see langword="Binder.DefaultBinding" /> is used.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="5a42c-214">Uma matriz do tipo <see langword="Object" /> usada para fazer a correspondência do número, da ordem e do tipo dos parâmetros para esse construtor, sob as restrições de <c>binder</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-214">An array of type <see langword="Object" /> used to match the number, order, and type of the parameters for this constructor, under the constraints of <c>binder</c>.</span>
          </span>
          <span data-ttu-id="5a42c-215">Se esse construtor não exigir parâmetros, passe uma matriz com zero elementos, como em parâmetros de Object[] = novo Object[0].</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-215">If this constructor does not require parameters, pass an array with zero elements, as in Object[] parameters = new Object[0].</span>
          </span>
          <span data-ttu-id="5a42c-216">Qualquer objeto nesta matriz que não for inicializado explicitamente com um valor conterá o valor padrão desse tipo de objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-216">Any object in this array that is not explicitly initialized with a value will contain the default value for that object type.</span>
          </span>
          <span data-ttu-id="5a42c-217">Para elementos de tipo de referência, esse valor é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-217">For reference-type elements, this value is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="5a42c-218">Para elementos de tipo de valor, esse valor é 0, 0,0, ou <see langword="false" />, dependendo do tipo de elemento específico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-218">For value-type elements, this value is 0, 0.0, or <see langword="false" />, depending on the specific element type.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="5a42c-219">Um <see cref="T:System.Globalization.CultureInfo" /> usado para reger a coerção de tipos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-219">A <see cref="T:System.Globalization.CultureInfo" /> used to govern the coercion of types.</span>
          </span>
          <span data-ttu-id="5a42c-220">Se isso for <see langword="null" />, será usado o <see cref="T:System.Globalization.CultureInfo" /> para o thread atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-220">If this is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a42c-221">Fornece objetos COM com acesso independente de versão para o método <see cref="M:System.Reflection.ConstructorInfo.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-221">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.ConstructorInfo.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5a42c-222">Uma instância da classe associada ao construtor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-222">An instance of the class associated with the constructor.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a42c-223">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="5a42c-223">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="5a42c-224">O <xref:System.Reflection.ConstructorInfo.Invoke%2A> método chama o construtor refletido por este <xref:System.Reflection.ConstructorInfo> objeto com os argumentos especificados, sob as restrições de especificado <xref:System.Reflection.Binder> objeto.</span><span class="sxs-lookup"><span data-stu-id="5a42c-224">The <xref:System.Reflection.ConstructorInfo.Invoke%2A> method invokes the constructor reflected by this <xref:System.Reflection.ConstructorInfo> object with the specified arguments, under the constraints of the specified <xref:System.Reflection.Binder> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke_5">
      <MemberSignature Language="C#" Value="public object Invoke_5 (object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Invoke_5(object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._ConstructorInfo.Invoke_5(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke_5 (parameters As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke_5(cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="parameters">
          <span data-ttu-id="5a42c-225">Uma matriz de valores que corresponde ao número, à ordem e ao tipo (de acordo com as restrições do associador padrão) dos parâmetros desse construtor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-225">An array of values that matches the number, order, and type (under the constraints of the default binder) of the parameters for this constructor.</span>
          </span>
          <span data-ttu-id="5a42c-226">Se esse construtor não usar nenhum parâmetro, use uma matriz com zero elementos ou <see langword="null" />, como em parâmetros de Object[] = novo Object[0].</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-226">If this constructor takes no parameters, then use either an array with zero elements or <see langword="null" />, as in Object[] parameters = new Object[0].</span>
          </span>
          <span data-ttu-id="5a42c-227">Qualquer objeto nesta matriz que não for inicializado explicitamente com um valor conterá o valor padrão desse tipo de objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-227">Any object in this array that is not explicitly initialized with a value will contain the default value for that object type.</span>
          </span>
          <span data-ttu-id="5a42c-228">Para elementos de tipo de referência, esse valor é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-228">For reference-type elements, this value is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="5a42c-229">Para elementos de tipo de valor, esse valor é 0, 0,0, ou <see langword="false" />, dependendo do tipo de elemento específico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-229">For value-type elements, this value is 0, 0.0, or <see langword="false" />, depending on the specific element type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a42c-230">Fornece objetos COM com acesso independente de versão para o método <see cref="M:System.Reflection.ConstructorInfo.Invoke(System.Object[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-230">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.ConstructorInfo.Invoke(System.Object[])" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5a42c-231">Uma instância da classe associada ao construtor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-231">An instance of the class associated with the constructor.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a42c-232">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="5a42c-232">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="5a42c-233">O <xref:System.Reflection.ConstructorInfo.Invoke%2A> método chama o construtor refletido pela instância que tem os parâmetros especificados, fornecendo os valores padrão para os parâmetros não são usados normalmente.</span><span class="sxs-lookup"><span data-stu-id="5a42c-233">The <xref:System.Reflection.ConstructorInfo.Invoke%2A> method invokes the constructor reflected by the instance that has the specified parameters, providing default values for the parameters not commonly used.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAbstract">
      <MemberSignature Language="C#" Value="public bool IsAbstract { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAbstract" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._ConstructorInfo.IsAbstract" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAbstract As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAbstract { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a42c-234">Fornece acesso independente da versão para objetos COM à propriedade <see cref="P:System.Reflection.MethodBase.IsAbstract" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-234">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MethodBase.IsAbstract" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5a42c-235">
            <see langword="true" /> Se o método é abstract; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-235">
              <see langword="true" /> if the method is abstract; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a42c-236">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="5a42c-236">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="5a42c-237">O <xref:System.Reflection.MethodBase.IsAbstract%2A> propriedade obtém um valor que indica se o método é abstrato.</span><span class="sxs-lookup"><span data-stu-id="5a42c-237">The <xref:System.Reflection.MethodBase.IsAbstract%2A> property gets a value indicating whether the method is abstract.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAssembly">
      <MemberSignature Language="C#" Value="public bool IsAssembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAssembly" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._ConstructorInfo.IsAssembly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAssembly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAssembly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a42c-238">Fornece acesso independente da versão para objetos COM à propriedade <see cref="P:System.Reflection.MethodBase.IsAssembly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-238">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MethodBase.IsAssembly" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5a42c-239">
            <see langword="true" /> Se esse método pode ser chamado por outras classes no mesmo assembly; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-239">
              <see langword="true" /> if this method can be called by other classes in the same assembly; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a42c-240">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="5a42c-240">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="5a42c-241">O <xref:System.Reflection.MethodBase.IsAssembly%2A> propriedade obtém um valor que indica se esse método pode ser chamado por outras classes no mesmo assembly.</span><span class="sxs-lookup"><span data-stu-id="5a42c-241">The <xref:System.Reflection.MethodBase.IsAssembly%2A> property gets a value indicating whether this method can be called by other classes in the same assembly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsConstructor">
      <MemberSignature Language="C#" Value="public bool IsConstructor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsConstructor" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._ConstructorInfo.IsConstructor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsConstructor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsConstructor { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a42c-242">Fornece acesso independente da versão para objetos COM à propriedade <see cref="P:System.Reflection.MethodBase.IsConstructor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-242">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MethodBase.IsConstructor" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5a42c-243">
            <see langword="true" /> Se esse método é um construtor; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-243">
              <see langword="true" /> if this method is a constructor; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a42c-244">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="5a42c-244">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="5a42c-245">O <xref:System.Reflection.MethodBase.IsConstructor%2A> propriedade obtém um valor que indica se o método é um construtor.</span><span class="sxs-lookup"><span data-stu-id="5a42c-245">The <xref:System.Reflection.MethodBase.IsConstructor%2A> property gets a value indicating whether the method is a constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public bool IsDefined (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDefined(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._ConstructorInfo.IsDefined(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsDefined (attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsDefined(Type ^ attributeType, bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType">
          <span data-ttu-id="5a42c-246">O objeto <see langword="Type" /> ao qual os atributos personalizados são aplicados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-246">The <see langword="Type" /> object to which the custom attributes are applied.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="5a42c-247">Especifica se deve-se pesquisar ou não a cadeia de herança desse membro para localizar os atributos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-247">Specifies whether to search this member's inheritance chain to find the attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a42c-248">Fornece objetos COM com acesso independente de versão para o membro <see cref="M:System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-248">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)" /> member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5a42c-249">
            <see langword="true" /> se uma ou mais instâncias de <paramref name="attributeType" /> forem aplicadas a esse membro; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-249">
              <see langword="true" /> if one or more instances of <paramref name="attributeType" /> is applied to this member; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a42c-250">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="5a42c-250">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="5a42c-251">O <xref:System.Reflection.MemberInfo.IsDefined%2A> membro indica se uma ou mais instâncias de `attributeType` é aplicado a esse membro.</span><span class="sxs-lookup"><span data-stu-id="5a42c-251">The <xref:System.Reflection.MemberInfo.IsDefined%2A> member indicates whether one or more instances of `attributeType` is applied to this member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFamily">
      <MemberSignature Language="C#" Value="public bool IsFamily { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFamily" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._ConstructorInfo.IsFamily" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFamily As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFamily { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a42c-252">Fornece acesso independente da versão para objetos COM à propriedade <see cref="P:System.Reflection.MethodBase.IsFamily" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-252">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MethodBase.IsFamily" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5a42c-253">
            <see langword="true" /> Se o acesso para a classe é restrito a membros de classe em si e a membros de suas classes derivadas; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-253">
              <see langword="true" /> if access to the class is restricted to members of the class itself and to members of its derived classes; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a42c-254">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="5a42c-254">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="5a42c-255">O <xref:System.Reflection.MethodBase.IsFamily%2A> propriedade obtém um valor que indica se o acesso a este método é restrito a membros da classe e os membros de suas classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="5a42c-255">The <xref:System.Reflection.MethodBase.IsFamily%2A> property gets a value indicating whether access to this method is restricted to members of the class and members of its derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFamilyAndAssembly">
      <MemberSignature Language="C#" Value="public bool IsFamilyAndAssembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFamilyAndAssembly" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._ConstructorInfo.IsFamilyAndAssembly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFamilyAndAssembly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFamilyAndAssembly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a42c-256">Fornece acesso independente da versão para objetos COM à propriedade <see cref="P:System.Reflection.MethodBase.IsFamilyAndAssembly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-256">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MethodBase.IsFamilyAndAssembly" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5a42c-257">
            <see langword="true" /> Se o acesso a este método é restrito a membros da classe e a membros de classes derivadas que estão no mesmo assembly; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-257">
              <see langword="true" /> if access to this method is restricted to members of the class itself and to members of derived classes that are in the same assembly; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a42c-258">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="5a42c-258">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="5a42c-259">O <xref:System.Reflection.MethodBase.IsFamilyAndAssembly%2A> propriedade obtém um valor que indica se esse método pode ser chamado por classes derivadas se eles estiverem no mesmo assembly.</span><span class="sxs-lookup"><span data-stu-id="5a42c-259">The <xref:System.Reflection.MethodBase.IsFamilyAndAssembly%2A> property gets a value indicating whether this method can be called by derived classes if they are in the same assembly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFamilyOrAssembly">
      <MemberSignature Language="C#" Value="public bool IsFamilyOrAssembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFamilyOrAssembly" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._ConstructorInfo.IsFamilyOrAssembly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFamilyOrAssembly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFamilyOrAssembly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a42c-260">Fornece acesso independente da versão para objetos COM à propriedade <see cref="P:System.Reflection.MethodBase.IsFamilyOrAssembly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-260">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MethodBase.IsFamilyOrAssembly" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5a42c-261">
            <see langword="true" /> Se o acesso a este método é restrito a membros de classe em si, membros de classes derivadas onde quer que estejam e os membros de outras classes no mesmo assembly; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-261">
              <see langword="true" /> if access to this method is restricted to members of the class itself, members of derived classes wherever they are, and members of other classes in the same assembly; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a42c-262">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="5a42c-262">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="5a42c-263">O <xref:System.Reflection.MethodBase.IsFamilyOrAssembly%2A> propriedade obtém um valor que indica se esse método pode ser chamado por classes derivadas, independentemente de onde eles são e por todas as classes no mesmo assembly.</span><span class="sxs-lookup"><span data-stu-id="5a42c-263">The <xref:System.Reflection.MethodBase.IsFamilyOrAssembly%2A> property gets a value indicating whether this method can be called by derived classes, wherever they are, and by all classes in the same assembly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFinal">
      <MemberSignature Language="C#" Value="public bool IsFinal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFinal" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._ConstructorInfo.IsFinal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFinal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFinal { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a42c-264">Fornece acesso independente da versão para objetos COM à propriedade <see cref="P:System.Reflection.MethodBase.IsFinal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-264">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MethodBase.IsFinal" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5a42c-265">
            <see langword="true" /> se esse método for <see langword="final" />; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-265">
              <see langword="true" /> if this method is <see langword="final" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a42c-266">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="5a42c-266">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="5a42c-267">O <xref:System.Reflection.MethodBase.IsFinal%2A> propriedade obtém um valor que indica se esse método é `final`.</span><span class="sxs-lookup"><span data-stu-id="5a42c-267">The <xref:System.Reflection.MethodBase.IsFinal%2A> property gets a value indicating whether this method is `final`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHideBySig">
      <MemberSignature Language="C#" Value="public bool IsHideBySig { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHideBySig" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._ConstructorInfo.IsHideBySig" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsHideBySig As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsHideBySig { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a42c-268">Fornece acesso independente da versão para objetos COM à propriedade <see cref="P:System.Reflection.MethodBase.IsHideBySig" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-268">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MethodBase.IsHideBySig" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5a42c-269">
            <see langword="true" /> se o membro estiver ocultado por assinatura. Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-269">
              <see langword="true" /> if the member is hidden by signature; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a42c-270">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="5a42c-270">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="5a42c-271">O <xref:System.Reflection.MethodBase.IsHideBySig%2A> propriedade obtém um valor que indica se apenas um membro do mesmo tipo com exatamente a mesma assinatura está oculto na classe derivada.</span><span class="sxs-lookup"><span data-stu-id="5a42c-271">The <xref:System.Reflection.MethodBase.IsHideBySig%2A> property gets a value indicating whether only a member of the same kind with exactly the same signature is hidden in the derived class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPrivate">
      <MemberSignature Language="C#" Value="public bool IsPrivate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrivate" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._ConstructorInfo.IsPrivate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPrivate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPrivate { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a42c-272">Fornece acesso independente da versão para objetos COM à propriedade <see cref="P:System.Reflection.MethodBase.IsPrivate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-272">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MethodBase.IsPrivate" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5a42c-273">
            <see langword="true" /> Se o acesso a este método é restrito a outros membros da classe em si; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-273">
              <see langword="true" /> if access to this method is restricted to other members of the class itself; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a42c-274">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="5a42c-274">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="5a42c-275">O <xref:System.Reflection.MethodBase.IsPrivate%2A> propriedade obtém um valor que indica se este membro é privado.</span><span class="sxs-lookup"><span data-stu-id="5a42c-275">The <xref:System.Reflection.MethodBase.IsPrivate%2A> property gets a value indicating whether this member is private.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPublic">
      <MemberSignature Language="C#" Value="public bool IsPublic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPublic" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._ConstructorInfo.IsPublic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPublic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPublic { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a42c-276">Fornece acesso independente da versão para objetos COM à propriedade <see cref="P:System.Reflection.MethodBase.IsPublic" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-276">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MethodBase.IsPublic" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5a42c-277">
            <see langword="true" /> Se esse método é público; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-277">
              <see langword="true" /> if this method is public; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a42c-278">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="5a42c-278">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="5a42c-279">O <xref:System.Reflection.MethodBase.IsPublic%2A> propriedade obtém um valor que indica se este é um método público.</span><span class="sxs-lookup"><span data-stu-id="5a42c-279">The <xref:System.Reflection.MethodBase.IsPublic%2A> property gets a value indicating whether this is a public method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSpecialName">
      <MemberSignature Language="C#" Value="public bool IsSpecialName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSpecialName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._ConstructorInfo.IsSpecialName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSpecialName As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSpecialName { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a42c-280">Fornece acesso independente da versão para objetos COM à propriedade <see cref="P:System.Reflection.MethodBase.IsSpecialName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-280">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MethodBase.IsSpecialName" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5a42c-281">
            <see langword="true" /> se esse método tiver um nome especial; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-281">
              <see langword="true" /> if this method has a special name; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a42c-282">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="5a42c-282">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="5a42c-283">O <xref:System.Reflection.MethodBase.IsSpecialName%2A> propriedade obtém um valor que indica se esse método tem um nome especial.</span><span class="sxs-lookup"><span data-stu-id="5a42c-283">The <xref:System.Reflection.MethodBase.IsSpecialName%2A> property gets a value indicating whether this method has a special name.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStatic">
      <MemberSignature Language="C#" Value="public bool IsStatic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStatic" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._ConstructorInfo.IsStatic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStatic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStatic { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a42c-284">Fornece acesso independente da versão para objetos COM à propriedade <see cref="P:System.Reflection.MethodBase.IsStatic" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-284">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MethodBase.IsStatic" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5a42c-285">
            <see langword="true" /> se esse método for <see langword="static" />; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-285">
              <see langword="true" /> if this method is <see langword="static" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a42c-286">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="5a42c-286">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="5a42c-287">O <xref:System.Reflection.MethodBase.IsStatic%2A> propriedade obtém um valor que indica se o método é `static`.</span><span class="sxs-lookup"><span data-stu-id="5a42c-287">The <xref:System.Reflection.MethodBase.IsStatic%2A> property gets a value indicating whether the method is `static`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVirtual">
      <MemberSignature Language="C#" Value="public bool IsVirtual { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVirtual" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._ConstructorInfo.IsVirtual" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsVirtual As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsVirtual { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a42c-288">Fornece acesso independente da versão para objetos COM à propriedade <see cref="P:System.Reflection.MethodBase.IsVirtual" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-288">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MethodBase.IsVirtual" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5a42c-289">
            <see langword="true" /> se esse método for <see langword="virtual" />; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-289">
              <see langword="true" /> if this method is <see langword="virtual" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a42c-290">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="5a42c-290">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="5a42c-291">O <xref:System.Reflection.MethodBase.IsVirtual%2A> propriedade obtém um valor que indica se o método é `virtual`.</span><span class="sxs-lookup"><span data-stu-id="5a42c-291">The <xref:System.Reflection.MethodBase.IsVirtual%2A> property gets a value indicating whether the method is `virtual`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberType">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberTypes MemberType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.MemberTypes MemberType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._ConstructorInfo.MemberType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemberType As MemberTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MemberTypes MemberType { System::Reflection::MemberTypes get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a42c-292">Fornece acesso independente da versão para objetos COM à propriedade <see cref="P:System.Reflection.ConstructorInfo.MemberType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-292">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.ConstructorInfo.MemberType" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5a42c-293">Um valor <see cref="T:System.Reflection.MemberTypes" /> que indica o tipo de membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-293">A <see cref="T:System.Reflection.MemberTypes" /> value indicating the type of member.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a42c-294">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="5a42c-294">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="5a42c-295">O <xref:System.Reflection.ConstructorInfo.MemberType%2A> propriedade obtém um <xref:System.Reflection.MemberTypes> valor que indica o tipo do membro, método, construtor, eventos e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="5a42c-295">The <xref:System.Reflection.ConstructorInfo.MemberType%2A> property gets a <xref:System.Reflection.MemberTypes> value indicating the type of the member — method, constructor, event, and so on.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MethodHandle">
      <MemberSignature Language="C#" Value="public RuntimeMethodHandle MethodHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.RuntimeMethodHandle MethodHandle" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._ConstructorInfo.MethodHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MethodHandle As RuntimeMethodHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property RuntimeMethodHandle MethodHandle { RuntimeMethodHandle get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.RuntimeMethodHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a42c-296">Fornece acesso independente da versão para objetos COM à propriedade <see cref="P:System.Reflection.MethodBase.MethodHandle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-296">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MethodBase.MethodHandle" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5a42c-297">Um objeto <see cref="T:System.RuntimeMethodHandle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-297">A <see cref="T:System.RuntimeMethodHandle" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a42c-298">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="5a42c-298">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="5a42c-299">O <xref:System.Reflection.MethodBase.MethodHandle%2A> propriedade obtém um identificador para a representação interna de metadados de um método.</span><span class="sxs-lookup"><span data-stu-id="5a42c-299">The <xref:System.Reflection.MethodBase.MethodHandle%2A> property gets a handle to the internal metadata representation of a method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._ConstructorInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a42c-300">Fornece acesso independente da versão para objetos COM à propriedade <see cref="P:System.Reflection.MemberInfo.Name" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-300">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MemberInfo.Name" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5a42c-301">Um <see cref="T:System.String" /> que contém o nome do computador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-301">A <see cref="T:System.String" /> containing the name of this member.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a42c-302">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="5a42c-302">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="5a42c-303">O <xref:System.Reflection.MemberInfo.Name%2A> propriedade obtém o nome do membro atual.</span><span class="sxs-lookup"><span data-stu-id="5a42c-303">The <xref:System.Reflection.MemberInfo.Name%2A> property gets the name of the current member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReflectedType">
      <MemberSignature Language="C#" Value="public Type ReflectedType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ReflectedType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._ConstructorInfo.ReflectedType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReflectedType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ReflectedType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a42c-304">Fornece acesso independente da versão para objetos COM à propriedade <see cref="P:System.Reflection.MemberInfo.ReflectedType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-304">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MemberInfo.ReflectedType" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5a42c-305">O objeto <see cref="T:System.Type" /> por meio do qual este objeto <see cref="T:System.Reflection.MemberInfo" /> foi obtido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-305">The <see cref="T:System.Type" /> object through which this <see cref="T:System.Reflection.MemberInfo" /> object was obtained.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a42c-306">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="5a42c-306">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="5a42c-307">O <xref:System.Reflection.MemberInfo.ReflectedType%2A> propriedade obtém o objeto da classe que foi usado para obter essa instância do <xref:System.Reflection.MemberInfo>.</span><span class="sxs-lookup"><span data-stu-id="5a42c-307">The <xref:System.Reflection.MemberInfo.ReflectedType%2A> property gets the class object that was used to obtain this instance of <xref:System.Reflection.MemberInfo>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._ConstructorInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5a42c-308">Fornece objetos COM com acesso independente de versão para o método <see cref="M:System.Object.ToString" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-308">Provides COM objects with version-independent access to the <see cref="M:System.Object.ToString" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5a42c-309">Uma cadeia de caracteres que representa o <see cref="T:System.Object" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a42c-309">A string that represents the current <see cref="T:System.Object" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a42c-310">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="5a42c-310">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>