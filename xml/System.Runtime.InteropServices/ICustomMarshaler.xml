<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ICustomMarshaler.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac596e612f036008e38d852a9b63135ce9093ba596a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">96e612f036008e38d852a9b63135ce9093ba596a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Provides custom wrappers for handling method calls.</source>
          <target state="translated">Fornece wrappers personalizados para manipular chamadas de método.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>A marshaler provides a bridge between the functionality of old and new interfaces.</source>
          <target state="translated">Um empacotamento fornece uma ponte entre a funcionalidade antigas e novas interfaces.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Custom marshaling provides the following benefits:</source>
          <target state="translated">Empacotamento personalizado oferece os seguintes benefícios:</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>It enables client applications that were designed to work with an old interface to also work with servers that implement a new interface.</source>
          <target state="translated">Ele permite que aplicativos cliente que foram projetados para trabalhar com uma interface antiga também trabalhar com servidores que implementam uma nova interface.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>It enables client applications built to work with a new interface to work with servers that implement an old interface.</source>
          <target state="translated">Permite aplicativos cliente criados para funcionar com uma nova interface trabalhar com servidores que implementam uma interface antiga.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>If you have an interface that introduces different marshaling behavior or that is exposed to the Component Object Model (COM) in a different way, you can design a custom marshaler instead of using the interop marshaler.</source>
          <target state="translated">Se você tiver uma interface que apresenta o comportamento de marshaling diferente ou que é exposto para o modelo COM (Component Object) de forma diferente, você pode criar um marshaler personalizado em vez de usar o empacotamento de interoperabilidade.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>By using a custom marshaler, you can minimize the distinction between new .NET Framework components and existing COM components.</source>
          <target state="translated">Usando um marshaler personalizado, você pode minimizar a distinção entre os novos componentes do .NET Framework e componentes COM existentes.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>For example, suppose that you are developing a managed interface called <ph id="ph1">`INew`</ph>.</source>
          <target state="translated">Por exemplo, suponha que você está desenvolvendo uma interface gerenciada chamada <ph id="ph1">`INew`</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>When this interface is exposed to COM through a standard COM callable wrapper (CCW), it has the same methods as the managed interface and uses the marshaling rules built into the interop marshaler.</source>
          <target state="translated">Quando essa interface é exposta a COM por meio de um padrão COM callable wrapper (CCW), ela tem os mesmos métodos de como a interface gerenciada e usa as regras de empacotamento incorporadas interop marshaler.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Now suppose that a well-known COM interface called <ph id="ph1">`IOld`</ph> already provides the same functionality as the <ph id="ph2">`INew`</ph> interface.</source>
          <target state="translated">Agora suponha que uma interface COM conhecido chamado <ph id="ph1">`IOld`</ph> já fornecem a mesma funcionalidade que o <ph id="ph2">`INew`</ph> interface.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>By designing a custom marshaler, you can provide an unmanaged implementation of <ph id="ph1">`IOld`</ph> that simply delegates the calls to the managed implementation of the <ph id="ph2">`INew`</ph> interface.</source>
          <target state="translated">Criando um marshaler personalizado, você pode fornecer uma implementação não gerenciada de <ph id="ph1">`IOld`</ph> que simplesmente delega as chamadas para a implementação gerenciada do <ph id="ph2">`INew`</ph> interface.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Therefore, the custom marshaler acts as a bridge between the managed and unmanaged interfaces.</source>
          <target state="translated">Portanto, o marshaler personalizado atua como uma ponte entre as interfaces gerenciadas e não gerenciados.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Custom marshalers are not invoked when calling from managed code to unmanaged code on a dispatch-only interface.</source>
          <target state="translated">Marshalers personalizados não serão chamados durante a chamada do código gerenciado para código não gerenciado em uma interface somente de expedição.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Defining the Marshaling Type</source>
          <target state="translated">Definindo o tipo Marshaling</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Before you can build a custom marshaler, you must define the managed and unmanaged interfaces that will be marshaled.</source>
          <target state="translated">Antes de criar um marshaler personalizado, você deve definir as interfaces gerenciadas e que irá ser empacotadas.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>These interfaces commonly perform the same function but are exposed differently to managed and unmanaged objects.</source>
          <target state="translated">Essas interfaces geralmente realizam a mesma função, mas são expostas diferente para objetos gerenciados e não gerenciados.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>A managed compiler produces a managed interface from metadata, and the resulting interface looks like any other managed interface.</source>
          <target state="translated">Um compilador gerenciado gera uma interface gerenciada dos metadados e a interface resultante parece com qualquer outra interface gerenciada.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The following example shows a typical interface.</source>
          <target state="translated">O exemplo a seguir mostra uma interface comum.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>You define the unmanaged type in Interface Definition Language (IDL) and compile it with the Microsoft Interface Definition Language (MIDL) compiler.</source>
          <target state="translated">Defina o tipo não gerenciado na Interface Definition Language (IDL) e compilá-lo com o compilador de linguagem de definição de Interface da Microsoft (MIDL).</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>You define the interface within a library statement and assign it an interface ID with the universal unique identifier (UUID) attribute, as the following example demonstrates.</source>
          <target state="translated">Definir a interface dentro de uma instrução de biblioteca e atribuir uma ID de interface com o atributo de identificador exclusivo universal (UUID), como demonstrado no exemplo a seguir.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The MIDL compiler produces several output files.</source>
          <target state="translated">O compilador MIDL produz vários arquivos de saída.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>If the interface is defined in Old.idl, the output file Old_i.c defines a <ph id="ph1">`const`</ph> variable with the interface identifier (IID) of the interface, as the following example demonstrates.</source>
          <target state="translated">Se a interface é definida em Old.idl, o arquivo de saída Old_i.c define um <ph id="ph1">`const`</ph> variável com o identificador de interface (IID) da interface, como demonstrado no exemplo a seguir.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The Old.h file is also produced by MIDL.</source>
          <target state="translated">O arquivo de Old.h também é produzido pelo MIDL.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>It contains a C++ definition of the interface that can be included in your C++ source code.</source>
          <target state="translated">Ele contém uma definição de C++ da interface que pode ser incluída em seu código-fonte C++.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Implementing the ICustomMarshaler Interface</source>
          <target state="translated">Implementando a interface ICustomMarshaler</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Your custom marshaler must implement the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler&gt;</ph> interface to provide the appropriate wrappers to the runtime.</source>
          <target state="translated">O marshaler personalizado deve implementar o <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler&gt;</ph> interface para fornecer os wrappers apropriados para o tempo de execução.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The following C# code displays the base interface that must be implemented by all custom marshalers.</source>
          <target state="translated">O código c# a seguir exibe a interface base que deve ser implementada por todos os empacotadores personalizados.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler&gt;</ph> interface includes methods that provide conversion support, cleanup support, and information about the data to be marshaled.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler&gt;</ph> interface inclui métodos que oferecem suporte à conversão, suporte de limpeza e informações sobre os dados a ser empacotado.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Type of operation</source>
          <target state="translated">Tipo de operação</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>ICustomMarshaler method</source>
          <target state="translated">Método ICustomMarshaler</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Description</source>
          <target state="translated">Descrição</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Conversion (from native to managed code)</source>
          <target state="translated">Conversão (de nativo para código gerenciado)</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Marshals a pointer to native data into a managed object.</source>
          <target state="translated">Realiza marshaling de um ponteiro para dados nativos em um objeto gerenciado.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>This method returns a custom runtime callable wrapper (RCW) that can marshal the unmanaged interface that is passed as an argument.</source>
          <target state="translated">Esse método retorna um tempo de execução personalizado RCW (callable wrapper) que possa empacotar a interface de não gerenciada é passada como um argumento.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The marshaler should return an instance of the custom RCW for that type.</source>
          <target state="translated">O marshaler deve retornar uma instância de RCW personalizado para esse tipo.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Conversion (from managed to native code)</source>
          <target state="translated">Conversão (a partir do código gerenciado para nativo)</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Marshals a managed object into a pointer to native data.</source>
          <target state="translated">Realiza marshaling de um objeto gerenciado em um ponteiro para dados nativos.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>This method returns a custom COM callable wrapper (CCW) that can marshal the managed interface that is passed as an argument.</source>
          <target state="translated">Esse método retorna um personalizado COM callable wrapper (CCW) que possa empacotar a interface gerenciada é passada como um argumento.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The marshaler should return an instance of the custom CCW for that type.</source>
          <target state="translated">O marshaler deve retornar uma instância da CCW personalizado para esse tipo.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Cleanup (of native code)</source>
          <target state="translated">Limpeza (de código nativo)</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Enables the marshaler to clean up the native data (the CCW) that is returned by the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A&gt;</ph> method.</source>
          <target state="translated">Permite que o marshaler limpar os dados nativos (o CCW) que são retornados pelo <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Cleanup (of managed code)</source>
          <target state="translated">Limpeza (de código gerenciado)</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Enables the marshaler to clean up the managed data (the RCW) that is returned by the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A&gt;</ph> method.</source>
          <target state="translated">Permite que o marshaler limpar os dados gerenciados (RCW) que são retornados pelo <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Information (about native code)</source>
          <target state="translated">Informações (sobre código nativo)</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Returns the size of the unmanaged data to be marshaled.</source>
          <target state="translated">Retorna o tamanho dos dados não gerenciados para ser empacotado.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Conversion</source>
          <target state="translated">Conversão</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Marshals a pointer to native data into a managed object.</source>
          <target state="translated">Realiza marshaling de um ponteiro para dados nativos em um objeto gerenciado.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>This method returns a custom runtime callable wrapper (RCW) that can marshal the unmanaged interface that is passed as an argument.</source>
          <target state="translated">Esse método retorna um tempo de execução personalizado RCW (callable wrapper) que possa empacotar a interface de não gerenciada é passada como um argumento.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The marshaler should return an instance of the custom RCW for that type.</source>
          <target state="translated">O marshaler deve retornar uma instância de RCW personalizado para esse tipo.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Marshals a managed object into a pointer to native data.</source>
          <target state="translated">Realiza marshaling de um objeto gerenciado em um ponteiro para dados nativos.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>This method returns a custom COM callable wrapper (CCW) that can marshal the managed interface that is passed as an argument.</source>
          <target state="translated">Esse método retorna um personalizado COM callable wrapper (CCW) que possa empacotar a interface gerenciada é passada como um argumento.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The marshaler should return an instance of the custom CCW for that type.</source>
          <target state="translated">O marshaler deve retornar uma instância da CCW personalizado para esse tipo.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Cleanup</source>
          <target state="translated">Limpeza</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Enables the marshaler to clean up the native data (the CCW) that is returned by the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A&gt;</ph> method.</source>
          <target state="translated">Permite que o marshaler limpar os dados nativos (o CCW) que são retornados pelo <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Enables the marshaler to clean up the managed data (the RCW) that is returned by the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A&gt;</ph> method.</source>
          <target state="translated">Permite que o marshaler limpar os dados gerenciados (RCW) que são retornados pelo <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Size Information</source>
          <target state="translated">Informações de tamanho</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Returns the size of the unmanaged data to be marshaled.</source>
          <target state="translated">Retorna o tamanho dos dados não gerenciados para ser empacotado.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Implementing the GetInstance Method</source>
          <target state="translated">Implementando o método GetInstance</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>In addition to implementing the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler&gt;</ph> interface, custom marshalers must implement a <ph id="ph2">`static`</ph> method called <ph id="ph3">`GetInstance`</ph> that accepts a <ph id="ph4">&lt;xref:System.String&gt;</ph> as a parameter and has a return type of <ph id="ph5">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler&gt;</ph>.</source>
          <target state="translated">Além de implementar o <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler&gt;</ph> interface empacotadores personalizados devem implementar um <ph id="ph2">`static`</ph> método chamado <ph id="ph3">`GetInstance`</ph> que aceita um <ph id="ph4">&lt;xref:System.String&gt;</ph> como um parâmetro e tem um tipo de retorno <ph id="ph5">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>This <ph id="ph1">`static`</ph> method is called by the common language runtime's COM interop layer to instantiate an instance of the custom marshaler.</source>
          <target state="translated">Isso <ph id="ph1">`static`</ph> método é chamado pela camada de interoperabilidade COM o common language runtime para criar uma instância do marshaler personalizado.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The string that is passed to <ph id="ph1">`GetInstance`</ph> is a cookie that the method can use to customize the returned custom marshaler.</source>
          <target state="translated">A cadeia de caracteres que é passada para <ph id="ph1">`GetInstance`</ph> é um cookie que o método pode usar para personalizar o marshaler personalizado retornado.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Applying MarshalAsAttribute</source>
          <target state="translated">Aplicando MarshalAsAttribute</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>To use a custom marshaler, you must apply the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> attribute to the parameter or field that is being marshaled.</source>
          <target state="translated">Para usar um marshaler personalizado, você deve aplicar o <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> de atributo para o parâmetro ou campo que está sendo empacotado.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>You must also pass the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler?displayProperty=nameWithType&gt;</ph> enumeration value to the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> constructor.</source>
          <target state="translated">Você também deve transmitir o <ph id="ph1">&lt;xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler?displayProperty=nameWithType&gt;</ph> valor de enumeração para o <ph id="ph2">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> construtor.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>In addition, you must specify the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;</ph> field with one of the following named parameters:</source>
          <target state="translated">Além disso, você deve especificar o <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;</ph> campo com um dos seguintes parâmetros nomeados:</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;</ph> (required): The assembly-qualified name of the custom marshaler.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;</ph> (obrigatório): O nome qualificado de assembly do marshaler personalizado.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The name should include the namespace and class of the custom marshaler.</source>
          <target state="translated">O nome deve incluir o namespace e classe de marshaler personalizado.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>If the custom marshaler is not defined in the assembly it is used in, you must specify the name of the assembly in which it is defined.</source>
          <target state="translated">Se o marshaler personalizado não está definido no assembly em que é usado, você deve especificar o nome do assembly no qual ela está definida.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>You can use the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef&gt;</ph> field instead of the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;</ph> field.</source>
          <target state="translated">Você pode usar o <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef&gt;</ph> campo em vez do <ph id="ph2">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;</ph> campo.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef&gt;</ph> takes a type that is easier to specify.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef&gt;</ph> usa um tipo que é mais fácil de especificar.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalCookie&gt;</ph> (optional): A cookie that is passed to the custom marshaler.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalCookie&gt;</ph> (opcional): um cookie que é passado para o marshaler personalizado.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>You can use the cookie to provide additional information to the marshaler.</source>
          <target state="translated">Você pode usar o cookie para fornecer informações adicionais para o empacotador.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>For example, if the same marshaler is used to provide a number of wrappers, the cookie identifies a specific wrapper.</source>
          <target state="translated">Por exemplo, se o mesmo marshaler é usado para fornecer um número de wrappers, o cookie identifica um wrapper específico.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The cookie is passed to the <ph id="ph1">`GetInstance`</ph> method of the marshaler.</source>
          <target state="translated">O cookie é passado para o <ph id="ph1">`GetInstance`</ph> método de empacotamento.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> attribute identifies the custom marshaler so it can activate the appropriate wrapper.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> atributo identifica o marshaler personalizado para que ele pode ativar o wrapper apropriado.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The common language runtime's interop service then examines the attribute and creates the custom marshaler the first time the argument (parameter or field) needs to be marshaled.</source>
          <target state="translated">Serviço de interoperabilidade do common language runtime, em seguida, examina o atributo e cria o tempo de marshaler personalizado primeiro o argumento (parâmetro ou campo) precisa ser empacotado.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The runtime then calls the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A&gt;</ph> methods on the custom marshaler to activate the correct wrapper to handle the call.</source>
          <target state="translated">O tempo de execução, em seguida, chama o <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A&gt;</ph> métodos em que o marshaler personalizado para ativar o wrapper correto para manipular a chamada.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Using a Custom Marshaler</source>
          <target state="translated">Usando um Marshaler personalizado</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>When the custom marshaler is complete, you can use it as a custom wrapper for a particular type.</source>
          <target state="translated">Quando o marshaler personalizado for concluído, você pode usá-lo como um wrapper personalizado para um determinado tipo.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The following example shows the definition of the <ph id="ph1">`IUserData`</ph> managed interface:</source>
          <target state="translated">O exemplo a seguir mostra a definição do <ph id="ph1">`IUserData`</ph> interface gerenciada:</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>In the following example, the <ph id="ph1">`IUserData`</ph> interface uses the <ph id="ph2">`NewOldMarshaler`</ph> custom marshaler to enable unmanaged client applications to pass an <ph id="ph3">`IOld`</ph> interface to the <ph id="ph4">`DoSomeStuff`</ph> method.</source>
          <target state="translated">No exemplo a seguir, o <ph id="ph1">`IUserData`</ph> interface usos de <ph id="ph2">`NewOldMarshaler`</ph> marshaler personalizado para permitir que aplicativos cliente não gerenciados passar um <ph id="ph3">`IOld`</ph> interface para o <ph id="ph4">`DoSomeStuff`</ph> método.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The managed description of the <ph id="ph1">`DoSomeStuff`</ph> method takes an <ph id="ph2">`INew`</ph> interface, as shown in the previous example, whereas the unmanaged version of <ph id="ph3">`DoSomeStuff`</ph> takes an <ph id="ph4">`IOld`</ph> interface pointer, as shown in the following example.</source>
          <target state="translated">A descrição do gerenciado do <ph id="ph1">`DoSomeStuff`</ph> leva um <ph id="ph2">`INew`</ph> de interface, conforme mostrado no exemplo anterior, enquanto a versão não gerenciada de <ph id="ph3">`DoSomeStuff`</ph> leva um <ph id="ph4">`IOld`</ph> ponteiro de interface, conforme mostrado no exemplo a seguir.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The type library that is generated by exporting the managed definition of <ph id="ph1">`IUserData`</ph> yields the unmanaged definition shown in this example instead of the standard definition.</source>
          <target state="translated">A biblioteca de tipos que é gerada por meio da exportação a definição gerenciada da <ph id="ph1">`IUserData`</ph> gera a definição não gerenciada mostrada neste exemplo, em vez da definição padrão.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> attribute applied to the <ph id="ph2">`INew`</ph> argument in the managed definition of the <ph id="ph3">`DoSomeStuff`</ph> method indicates that the argument uses a custom marshaler, as the following example shows.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> atributo aplicado para o <ph id="ph2">`INew`</ph> argumento a definição gerenciada do <ph id="ph3">`DoSomeStuff`</ph> método indica que o argumento usa um marshaler personalizado, como mostra o exemplo a seguir.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>In the previous examples, the first parameter provided to the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> attribute is the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler?displayProperty=nameWithType&gt;</ph> enumeration value <ph id="ph3">`UnmanagedType.CustomMarshaler`</ph>.</source>
          <target state="translated">Nos exemplos anteriores, o primeiro parâmetro fornecido para o <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> atributo é o <ph id="ph2">&lt;xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler?displayProperty=nameWithType&gt;</ph> valor de enumeração <ph id="ph3">`UnmanagedType.CustomMarshaler`</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The second parameter is the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;</ph> field, which provides the assembly-qualified name of the custom marshaler.</source>
          <target state="translated">O segundo parâmetro é o <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;</ph> campo, que fornece o nome qualificado de assembly do marshaler personalizado.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>This name consists of the namespace and class of the custom marshaler (<ph id="ph1">`MarshalType="MyCompany.NewOldMarshaler"`</ph>).</source>
          <target state="translated">Esse nome consiste o namespace e classe de personalizado (<ph id="ph1">`MarshalType="MyCompany.NewOldMarshaler"`</ph>).</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ICustomMarshaler.CleanUpManagedData(System.Object)">
          <source>The managed object to be destroyed.</source>
          <target state="translated">O objeto gerenciado a ser destruído.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ICustomMarshaler.CleanUpManagedData(System.Object)">
          <source>Performs necessary cleanup of the managed data when it is no longer needed.</source>
          <target state="translated">Executa a limpeza necessária dos dados gerenciados quando eles não forem mais necessários.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ICustomMarshaler.CleanUpNativeData(System.IntPtr)">
          <source>A pointer to the unmanaged data to be destroyed.</source>
          <target state="translated">Um ponteiro para os dados não gerenciados a serem destruídos.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ICustomMarshaler.CleanUpNativeData(System.IntPtr)">
          <source>Performs necessary cleanup of the unmanaged data when it is no longer needed.</source>
          <target state="translated">Executa a limpeza necessária dos dados não gerenciados quando eles não forem mais necessários.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ICustomMarshaler.GetNativeDataSize">
          <source>Returns the size of the native data to be marshaled.</source>
          <target state="translated">Retorna o tamanho dos dados nativos cujo marshaling deve ser realizado.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ICustomMarshaler.GetNativeDataSize">
          <source>The size, in bytes, of the native data.</source>
          <target state="translated">O tamanho, em bytes, dos dados nativos.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative(System.Object)">
          <source>The managed object to be converted.</source>
          <target state="translated">O objeto gerenciado a ser convertido.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative(System.Object)">
          <source>Converts the managed data to unmanaged data.</source>
          <target state="translated">Converte os dados gerenciados em dados não gerenciados.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative(System.Object)">
          <source>A pointer to the COM view of the managed object.</source>
          <target state="translated">Um ponteiro para a exibição COM do objeto gerenciado.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged(System.IntPtr)">
          <source>A pointer to the unmanaged data to be wrapped.</source>
          <target state="translated">Um ponteiro para os dados não gerenciados a serem encapsulados.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged(System.IntPtr)">
          <source>Converts the unmanaged data to managed data.</source>
          <target state="translated">Converte os dados não gerenciados em dados gerenciados.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged(System.IntPtr)">
          <source>An object that represents the managed view of the COM data.</source>
          <target state="translated">Um objeto que representa a exibição gerenciada dos dados COM.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>