<Type Name="LayoutKind" FullName="System.Runtime.InteropServices.LayoutKind">
  <TypeSignature Language="C#" Value="public enum LayoutKind" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed LayoutKind extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.LayoutKind" />
  <TypeSignature Language="VB.NET" Value="Public Enum LayoutKind" />
  <TypeSignature Language="C++ CLI" Value="public enum class LayoutKind" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="64038-101">Controla o layout de um objeto quando exportado para o código não gerenciado.</span><span class="sxs-lookup"><span data-stu-id="64038-101">Controls the layout of an object when exported to unmanaged code.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64038-102">Essa enumeração é usada com <xref:System.Runtime.InteropServices.StructLayoutAttribute>.</span><span class="sxs-lookup"><span data-stu-id="64038-102">This enumeration is used with <xref:System.Runtime.InteropServices.StructLayoutAttribute>.</span></span> <span data-ttu-id="64038-103">O common language runtime usa o `Auto` valor layout por padrão.</span><span class="sxs-lookup"><span data-stu-id="64038-103">The common language runtime uses the `Auto` layout value by default.</span></span> <span data-ttu-id="64038-104">Para reduzir problemas relacionados a layout associados a `Auto` valor, especifique os compiladores c#, Visual Basic e C++ `Sequential` layout para tipos de valor.</span><span class="sxs-lookup"><span data-stu-id="64038-104">To reduce layout-related problems associated with the `Auto` value, C#, Visual Basic, and C++ compilers specify `Sequential` layout for value types.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="64038-105">O <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack?displayProperty=nameWithType> campo controla o alinhamento de campos de dados e, portanto, afeta o layout independentemente do <xref:System.Runtime.InteropServices.LayoutKind> valor que você especificar.</span><span class="sxs-lookup"><span data-stu-id="64038-105">The <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack?displayProperty=nameWithType> field controls the alignment of data fields, and thus affects the layout regardless of the <xref:System.Runtime.InteropServices.LayoutKind> value you specify.</span></span> <span data-ttu-id="64038-106">Por padrão, o valor de <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack> é 0, que indica o padrão de remessa de tamanho para a plataforma atual.</span><span class="sxs-lookup"><span data-stu-id="64038-106">By default, the value of <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack> is 0, which indicates the default packing size for the current platform.</span></span> <span data-ttu-id="64038-107">Por exemplo, quando você usa o `Explicit` layout e especifique alinhamentos de campo em limites de byte, você deve definir <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack> como 1 para obter o resultado desejado.</span><span class="sxs-lookup"><span data-stu-id="64038-107">For example, when you use the `Explicit` layout value and specify field alignments on byte boundaries, you must set <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack> to 1 to get the desired result.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64038-108">O exemplo a seguir mostra a declaração gerenciada a `PtInRect` função, que verifica se um ponto está dentro de um retângulo e define uma `Point` estrutura com layout sequencial e um `Rect` estrutura com layout explícito.</span><span class="sxs-lookup"><span data-stu-id="64038-108">The following example shows the managed declaration of the `PtInRect` function, which checks whether a point lies within a rectangle, and defines a `Point` structure with Sequential layout and a `Rect` structure with Explicit layout.</span></span>  
  
 [!code-cpp[LayoutKind#1](~/samples/snippets/cpp/VS_Snippets_CLR/LayoutKind/CPP/layoutkind.cpp#1)]
 [!code-csharp[LayoutKind#1](~/samples/snippets/csharp/VS_Snippets_CLR/LayoutKind/CS/layoutkind.cs#1)]
 [!code-vb[LayoutKind#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/LayoutKind/VB/layoutkind.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Auto">
      <MemberSignature Language="C#" Value="Auto" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.InteropServices.LayoutKind Auto = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.LayoutKind.Auto" />
      <MemberSignature Language="VB.NET" Value="Auto" />
      <MemberSignature Language="C++ CLI" Value="Auto" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.LayoutKind</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><span data-ttu-id="64038-109">O tempo de execução escolhe automaticamente um layout adequado para os membros de um objeto na memória não gerenciada.</span><span class="sxs-lookup"><span data-stu-id="64038-109">The runtime automatically chooses an appropriate layout for the members of an object in unmanaged memory.</span></span> <span data-ttu-id="64038-110">Objetos definidos com esse membro de enumeração não podem ser expostos fora do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="64038-110">Objects defined with this enumeration member cannot be exposed outside of managed code.</span></span> <span data-ttu-id="64038-111">Tentar fazer isso gera uma exceção.</span><span class="sxs-lookup"><span data-stu-id="64038-111">Attempting to do so generates an exception.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Explicit">
      <MemberSignature Language="C#" Value="Explicit" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.InteropServices.LayoutKind Explicit = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.LayoutKind.Explicit" />
      <MemberSignature Language="VB.NET" Value="Explicit" />
      <MemberSignature Language="C++ CLI" Value="Explicit" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.LayoutKind</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="64038-112">A posição exata de cada membro de um objeto na memória não gerenciada é explicitamente controlada, sujeito à configuração do campo <see cref="F:System.Runtime.InteropServices.StructLayoutAttribute.Pack" />.</span><span class="sxs-lookup"><span data-stu-id="64038-112">The precise position of each member of an object in unmanaged memory is explicitly controlled, subject to the setting of the <see cref="F:System.Runtime.InteropServices.StructLayoutAttribute.Pack" /> field.</span></span> <span data-ttu-id="64038-113">Cada membro deve usar o <see cref="T:System.Runtime.InteropServices.FieldOffsetAttribute" /> para indicar a posição do campo dentro do tipo.</span><span class="sxs-lookup"><span data-stu-id="64038-113">Each member must use the <see cref="T:System.Runtime.InteropServices.FieldOffsetAttribute" /> to indicate the position of that field within the type.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Sequential">
      <MemberSignature Language="C#" Value="Sequential" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.InteropServices.LayoutKind Sequential = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.LayoutKind.Sequential" />
      <MemberSignature Language="VB.NET" Value="Sequential" />
      <MemberSignature Language="C++ CLI" Value="Sequential" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.LayoutKind</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="64038-114">Os membros do objeto são dispostos sequencialmente, na ordem em que aparecem quando exportados para memória não gerenciada.</span><span class="sxs-lookup"><span data-stu-id="64038-114">The members of the object are laid out sequentially, in the order in which they appear when exported to unmanaged memory.</span></span> <span data-ttu-id="64038-115">Os membros são dispostos de acordo com a remessa especificada em <see cref="F:System.Runtime.InteropServices.StructLayoutAttribute.Pack" /> e podem ser não contíguos.</span><span class="sxs-lookup"><span data-stu-id="64038-115">The members are laid out according to the packing specified in <see cref="F:System.Runtime.InteropServices.StructLayoutAttribute.Pack" />, and can be noncontiguous.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>