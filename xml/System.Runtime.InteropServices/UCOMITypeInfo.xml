<Type Name="UCOMITypeInfo" FullName="System.Runtime.InteropServices.UCOMITypeInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3e5fe6f47db1fa26ccf4ee152cefee9aac9e3377" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58749568" /></Metadata><TypeSignature Language="C#" Value="public interface UCOMITypeInfo" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract UCOMITypeInfo" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.UCOMITypeInfo" />
  <TypeSignature Language="VB.NET" Value="Public Interface UCOMITypeInfo" />
  <TypeSignature Language="C++ CLI" Value="public interface class UCOMITypeInfo" />
  <TypeSignature Language="F#" Value="type UCOMITypeInfo = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinmac-3.0">
      <AttributeName>System.Obsolete</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.Guid("00020401-0000-0000-c000-000000000046")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.Guid("00020401-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("Use System.Runtime.InteropServices.ComTypes.ITypeInfo instead. http://go.microsoft.com/fwlink/?linkid=14202", false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Use <see cref="T:System.Runtime.InteropServices.ComTypes.ITypeInfo" /> em seu lugar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obter informações adicionais sobre `ITypeInfo`, consulte a biblioteca MSDN.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddressOfMember">
      <MemberSignature Language="C#" Value="public void AddressOfMember (int memid, System.Runtime.InteropServices.INVOKEKIND invKind, out IntPtr ppv);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddressOfMember(int32 memid, valuetype System.Runtime.InteropServices.INVOKEKIND invKind, [out] native int&amp; ppv) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMITypeInfo.AddressOfMember(System.Int32,System.Runtime.InteropServices.INVOKEKIND,System.IntPtr@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddressOfMember (memid As Integer, invKind As INVOKEKIND, ByRef ppv As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddressOfMember(int memid, System::Runtime::InteropServices::INVOKEKIND invKind, [Runtime::InteropServices::Out] IntPtr % ppv);" />
      <MemberSignature Language="F#" Value="abstract member AddressOfMember : int * System.Runtime.InteropServices.INVOKEKIND *  -&gt; unit" Usage="uCOMITypeInfo.AddressOfMember (memid, invKind, ppv)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memid" Type="System.Int32" />
        <Parameter Name="invKind" Type="System.Runtime.InteropServices.INVOKEKIND" />
        <Parameter Name="ppv" Type="System.IntPtr" RefType="out" />
      </Parameters>
      <Docs>
        <param name="memid">ID do membro do endereço do membro <see langword="static" /> a ser recuperada.</param>
        <param name="invKind">Especifica se o membro é uma propriedade e, nesse caso, o tipo.</param>
        <param name="ppv">No retorno bem-sucedido, uma referência ao membro <see langword="static" />.</param>
        <summary>Recupera os endereços de funções estáticas ou variáveis, como aquelas definidas em uma DLL.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obter informações adicionais sobre `ITypeInfo::AddressOfMember`, consulte a biblioteca MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public void CreateInstance (object pUnkOuter, ref Guid riid, out object ppvObj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateInstance(object pUnkOuter, valuetype System.Guid&amp; riid, [out] object&amp; ppvObj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMITypeInfo.CreateInstance(System.Object,System.Guid@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateInstance (pUnkOuter As Object, ByRef riid As Guid, ByRef ppvObj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateInstance(System::Object ^ pUnkOuter, Guid % riid, [Runtime::InteropServices::Out] System::Object ^ % ppvObj);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : obj *  *  -&gt; unit" Usage="uCOMITypeInfo.CreateInstance (pUnkOuter, riid, ppvObj)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pUnkOuter" Type="System.Object" />
        <Parameter Name="riid" Type="System.Guid" RefType="ref" />
        <Parameter Name="ppvObj" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pUnkOuter">Objeto que atua como o <see langword="IUnknown" /> que controla.</param>
        <param name="riid">O IID da interface que o chamador usará para se comunicar com o objeto resultante.</param>
        <param name="ppvObj">No retorno bem-sucedido, uma referência ao objeto criado.</param>
        <summary>Cria uma nova instância de um tipo que descreve uma classe de componente (coclass).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obter informações adicionais sobre `ITypeInfo::CreateInstance`, consulte a biblioteca MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainingTypeLib">
      <MemberSignature Language="C#" Value="public void GetContainingTypeLib (out System.Runtime.InteropServices.UCOMITypeLib ppTLB, out int pIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetContainingTypeLib([out] class System.Runtime.InteropServices.UCOMITypeLib&amp; ppTLB, [out] int32&amp; pIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMITypeInfo.GetContainingTypeLib(System.Runtime.InteropServices.UCOMITypeLib@,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetContainingTypeLib (ByRef ppTLB As UCOMITypeLib, ByRef pIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetContainingTypeLib([Runtime::InteropServices::Out] System::Runtime::InteropServices::UCOMITypeLib ^ % ppTLB, [Runtime::InteropServices::Out] int % pIndex);" />
      <MemberSignature Language="F#" Value="abstract member GetContainingTypeLib :  *  -&gt; unit" Usage="uCOMITypeInfo.GetContainingTypeLib (ppTLB, pIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ppTLB" Type="System.Runtime.InteropServices.UCOMITypeLib" RefType="out" />
        <Parameter Name="pIndex" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="ppTLB">No retorno bem-sucedido, uma referência à biblioteca de tipos recipiente.</param>
        <param name="pIndex">No retorno bem-sucedido, uma referência ao índice da descrição do tipo dentro da biblioteca de tipos recipiente.</param>
        <summary>Recupera a biblioteca de tipos que contém essa descrição de tipo e seu índice dentro dessa biblioteca de tipos.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obter informações adicionais sobre `ITypeInfo::GetContainingTypeLib`, consulte a biblioteca MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDllEntry">
      <MemberSignature Language="C#" Value="public void GetDllEntry (int memid, System.Runtime.InteropServices.INVOKEKIND invKind, out string pBstrDllName, out string pBstrName, out short pwOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetDllEntry(int32 memid, valuetype System.Runtime.InteropServices.INVOKEKIND invKind, [out] string&amp; pBstrDllName, [out] string&amp; pBstrName, [out] int16&amp; pwOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMITypeInfo.GetDllEntry(System.Int32,System.Runtime.InteropServices.INVOKEKIND,System.String@,System.String@,System.Int16@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetDllEntry (memid As Integer, invKind As INVOKEKIND, ByRef pBstrDllName As String, ByRef pBstrName As String, ByRef pwOrdinal As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetDllEntry(int memid, System::Runtime::InteropServices::INVOKEKIND invKind, [Runtime::InteropServices::Out] System::String ^ % pBstrDllName, [Runtime::InteropServices::Out] System::String ^ % pBstrName, [Runtime::InteropServices::Out] short % pwOrdinal);" />
      <MemberSignature Language="F#" Value="abstract member GetDllEntry : int * System.Runtime.InteropServices.INVOKEKIND *  *  *  -&gt; unit" Usage="uCOMITypeInfo.GetDllEntry (memid, invKind, pBstrDllName, pBstrName, pwOrdinal)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memid" Type="System.Int32" />
        <Parameter Name="invKind" Type="System.Runtime.InteropServices.INVOKEKIND" />
        <Parameter Name="pBstrDllName" Type="System.String" RefType="out" />
        <Parameter Name="pBstrName" Type="System.String" RefType="out" />
        <Parameter Name="pwOrdinal" Type="System.Int16" RefType="out" />
      </Parameters>
      <Docs>
        <param name="memid">ID da função de membro cuja descrição de entrada da DLL será retornada.</param>
        <param name="invKind">Especifica o tipo de membro identificado por <paramref name="memid" />.</param>
        <param name="pBstrDllName">Se não for <see langword="null" />, a função definirá <paramref name="pBstrDllName" /> para um <see langword="BSTR" /> que contém o nome da DLL.</param>
        <param name="pBstrName">Se não for <see langword="null" />, a função definirá <c>lpbstrName</c> para um <see langword="BSTR" /> que contém o nome do ponto de entrada.</param>
        <param name="pwOrdinal">Se não for <see langword="null" /> e a função for definida por um ordinal, então, <c>lpwOrdinal</c> está definido para apontar para o ordinal.</param>
        <summary>Recupera uma descrição ou especificação de um ponto de entrada de uma função em uma DLL.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obter informações adicionais sobre `ITypeInfo::GetDllEntry`, consulte a biblioteca MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDocumentation">
      <MemberSignature Language="C#" Value="public void GetDocumentation (int index, out string strName, out string strDocString, out int dwHelpContext, out string strHelpFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetDocumentation(int32 index, [out] string&amp; strName, [out] string&amp; strDocString, [out] int32&amp; dwHelpContext, [out] string&amp; strHelpFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetDocumentation (index As Integer, ByRef strName As String, ByRef strDocString As String, ByRef dwHelpContext As Integer, ByRef strHelpFile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetDocumentation(int index, [Runtime::InteropServices::Out] System::String ^ % strName, [Runtime::InteropServices::Out] System::String ^ % strDocString, [Runtime::InteropServices::Out] int % dwHelpContext, [Runtime::InteropServices::Out] System::String ^ % strHelpFile);" />
      <MemberSignature Language="F#" Value="abstract member GetDocumentation : int *  *  *  *  -&gt; unit" Usage="uCOMITypeInfo.GetDocumentation (index, strName, strDocString, dwHelpContext, strHelpFile)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="strName" Type="System.String" RefType="out" />
        <Parameter Name="strDocString" Type="System.String" RefType="out" />
        <Parameter Name="dwHelpContext" Type="System.Int32" RefType="out" />
        <Parameter Name="strHelpFile" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="index">ID do membro cuja documentação será retornada.</param>
        <param name="strName">No retorno bem-sucedido, o nome do método do item.</param>
        <param name="strDocString">No retorno bem-sucedido, a cadeia de caracteres de documentação do item especificado.</param>
        <param name="dwHelpContext">No retorno bem-sucedido, uma referência ao contexto da Ajuda associado ao item especificado.</param>
        <param name="strHelpFile">No retorno bem-sucedido, o nome totalmente qualificado do arquivo de Ajuda.</param>
        <summary>Recupera a cadeia de caracteres de documentação, o nome e o caminho completos do arquivo de Ajuda e a ID de contexto do tópico da Ajuda de uma descrição de tipo especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obter informações adicionais sobre `ITypeInfo::GetDocumentation`, consulte a biblioteca MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFuncDesc">
      <MemberSignature Language="C#" Value="public void GetFuncDesc (int index, out IntPtr ppFuncDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetFuncDesc(int32 index, [out] native int&amp; ppFuncDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMITypeInfo.GetFuncDesc(System.Int32,System.IntPtr@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetFuncDesc (index As Integer, ByRef ppFuncDesc As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetFuncDesc(int index, [Runtime::InteropServices::Out] IntPtr % ppFuncDesc);" />
      <MemberSignature Language="F#" Value="abstract member GetFuncDesc : int *  -&gt; unit" Usage="uCOMITypeInfo.GetFuncDesc (index, ppFuncDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="ppFuncDesc" Type="System.IntPtr" RefType="out" />
      </Parameters>
      <Docs>
        <param name="index">Índice da descrição da função a ser retornada.</param>
        <param name="ppFuncDesc">Referência a um <see langword="FUNCDESC" /> que descreve a função especificada.</param>
        <summary>Recupera a estrutura <see cref="T:System.Runtime.InteropServices.FUNCDESC" /> que contém informações sobre uma função especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Os valores de `ppFuncDesc` podem ser acessados por meio de <xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A>.  
  
 Para obter informações adicionais sobre `ITypeInfo::GetFuncDesc`, consulte a biblioteca MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIDsOfNames">
      <MemberSignature Language="C#" Value="public void GetIDsOfNames (string[] rgszNames, int cNames, int[] pMemId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetIDsOfNames([in]string[] rgszNames, int32 cNames, [out] int32[] pMemId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMITypeInfo.GetIDsOfNames(System.String[],System.Int32,System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetIDsOfNames (rgszNames As String(), cNames As Integer, pMemId As Integer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetIDsOfNames(cli::array &lt;System::String ^&gt; ^ rgszNames, int cNames, cli::array &lt;int&gt; ^ pMemId);" />
      <MemberSignature Language="F#" Value="abstract member GetIDsOfNames : string[] * int * int[] -&gt; unit" Usage="uCOMITypeInfo.GetIDsOfNames (rgszNames, cNames, pMemId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgszNames" Type="System.String[]" />
        <Parameter Name="cNames" Type="System.Int32" />
        <Parameter Name="pMemId" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="rgszNames">Ao retorno bem-sucedido, uma matriz de nomes a serem mapeados.</param>
        <param name="cNames">Contagem de nomes a serem mapeados.</param>
        <param name="pMemId">Referência a uma matriz em que os mapeamentos de nome são colocados.</param>
        <summary>Mapeia entre nomes e IDs de membro e nomes e IDs de parâmetro.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obter informações adicionais sobre `ITypeInfo::GetIDsOfNames`, consulte a biblioteca MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImplTypeFlags">
      <MemberSignature Language="C#" Value="public void GetImplTypeFlags (int index, out int pImplTypeFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetImplTypeFlags(int32 index, [out] int32&amp; pImplTypeFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMITypeInfo.GetImplTypeFlags(System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetImplTypeFlags (index As Integer, ByRef pImplTypeFlags As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetImplTypeFlags(int index, [Runtime::InteropServices::Out] int % pImplTypeFlags);" />
      <MemberSignature Language="F#" Value="abstract member GetImplTypeFlags : int *  -&gt; unit" Usage="uCOMITypeInfo.GetImplTypeFlags (index, pImplTypeFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="pImplTypeFlags" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="index">Índice da interface base ou interface implementada.</param>
        <param name="pImplTypeFlags">No retorno bem-sucedido, uma referência à enumeração <see langword="IMPLTYPEFLAGS" />.</param>
        <summary>Recupera o valor <see cref="T:System.Runtime.InteropServices.IMPLTYPEFLAGS" /> para uma interface ou interface base implementada em uma descrição de tipo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obter informações adicionais sobre `ITypeInfo::GetImplTypeFlags`, consulte a biblioteca MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMops">
      <MemberSignature Language="C#" Value="public void GetMops (int memid, out string pBstrMops);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetMops(int32 memid, [out] string&amp; pBstrMops) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMITypeInfo.GetMops(System.Int32,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetMops (memid As Integer, ByRef pBstrMops As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetMops(int memid, [Runtime::InteropServices::Out] System::String ^ % pBstrMops);" />
      <MemberSignature Language="F#" Value="abstract member GetMops : int *  -&gt; unit" Usage="uCOMITypeInfo.GetMops (memid, pBstrMops)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memid" Type="System.Int32" />
        <Parameter Name="pBstrMops" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="memid">A ID de membro que indica quais informações de marshaling são necessárias.</param>
        <param name="pBstrMops">Uma referência à cadeia de caracteres de opcode usada no marshaling dos campos da estrutura descrita pela descrição do tipo de referência ou retorna <see langword="null" /> se não houver informações para retornar.</param>
        <summary>Recupera informações de marshaling.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obter informações adicionais sobre `ITypeInfo::GetMops`, consulte a biblioteca MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNames">
      <MemberSignature Language="C#" Value="public void GetNames (int memid, string[] rgBstrNames, int cMaxNames, out int pcNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetNames(int32 memid, [out] string[] rgBstrNames, int32 cMaxNames, [out] int32&amp; pcNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMITypeInfo.GetNames(System.Int32,System.String[],System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetNames (memid As Integer, rgBstrNames As String(), cMaxNames As Integer, ByRef pcNames As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetNames(int memid, cli::array &lt;System::String ^&gt; ^ rgBstrNames, int cMaxNames, [Runtime::InteropServices::Out] int % pcNames);" />
      <MemberSignature Language="F#" Value="abstract member GetNames : int * string[] * int *  -&gt; unit" Usage="uCOMITypeInfo.GetNames (memid, rgBstrNames, cMaxNames, pcNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memid" Type="System.Int32" />
        <Parameter Name="rgBstrNames" Type="System.String[]" />
        <Parameter Name="cMaxNames" Type="System.Int32" />
        <Parameter Name="pcNames" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="memid">A ID do membro cujo nome (ou nomes) é retornado.</param>
        <param name="rgBstrNames">Ao retorno bem-sucedido, contém o nome (ou nomes) associado ao membro.</param>
        <param name="cMaxNames">Comprimento da matriz <paramref name="rgBstrNames" />.</param>
        <param name="pcNames">Ao retorno bem-sucedido, o número de nomes na matriz <paramref name="rgBstrNames" />.</param>
        <summary>Recupera a variável com a ID do membro especificada (ou o nome da propriedade ou método e seus parâmetros) que corresponde à ID da função especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obter informações adicionais sobre `ITypeInfo::GetNames`, consulte a biblioteca MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRefTypeInfo">
      <MemberSignature Language="C#" Value="public void GetRefTypeInfo (int hRef, out System.Runtime.InteropServices.UCOMITypeInfo ppTI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetRefTypeInfo(int32 hRef, [out] class System.Runtime.InteropServices.UCOMITypeInfo&amp; ppTI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMITypeInfo.GetRefTypeInfo(System.Int32,System.Runtime.InteropServices.UCOMITypeInfo@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetRefTypeInfo (hRef As Integer, ByRef ppTI As UCOMITypeInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetRefTypeInfo(int hRef, [Runtime::InteropServices::Out] System::Runtime::InteropServices::UCOMITypeInfo ^ % ppTI);" />
      <MemberSignature Language="F#" Value="abstract member GetRefTypeInfo : int *  -&gt; unit" Usage="uCOMITypeInfo.GetRefTypeInfo (hRef, ppTI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hRef" Type="System.Int32" />
        <Parameter Name="ppTI" Type="System.Runtime.InteropServices.UCOMITypeInfo" RefType="out" />
      </Parameters>
      <Docs>
        <param name="hRef">Identificador para a descrição do tipo de referência a ser retornado.</param>
        <param name="ppTI">No retorno bem-sucedido, a descrição do tipo de referência.</param>
        <summary>Se uma descrição de tipo faz referência a outras descrições de tipo, ela recuperará as descrições do tipo de referência.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obter informações adicionais sobre `ITypeInfo::GetRefTypeInfo`, consulte a biblioteca MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRefTypeOfImplType">
      <MemberSignature Language="C#" Value="public void GetRefTypeOfImplType (int index, out int href);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetRefTypeOfImplType(int32 index, [out] int32&amp; href) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMITypeInfo.GetRefTypeOfImplType(System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetRefTypeOfImplType (index As Integer, ByRef href As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetRefTypeOfImplType(int index, [Runtime::InteropServices::Out] int % href);" />
      <MemberSignature Language="F#" Value="abstract member GetRefTypeOfImplType : int *  -&gt; unit" Usage="uCOMITypeInfo.GetRefTypeOfImplType (index, href)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="href" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="index">Índice do tipo implementado cujo identificador é retornado.</param>
        <param name="href">Referência a um identificador da interface implementada.</param>
        <summary>Se uma descrição de tipo descreve uma classe COM, ela recuperará a descrição de tipo dos tipos de interface implementados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obter informações adicionais sobre `ITypeInfo::GetRefTypeOfImplType`, consulte a biblioteca MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeAttr">
      <MemberSignature Language="C#" Value="public void GetTypeAttr (out IntPtr ppTypeAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTypeAttr([out] native int&amp; ppTypeAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMITypeInfo.GetTypeAttr(System.IntPtr@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetTypeAttr (ByRef ppTypeAttr As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetTypeAttr([Runtime::InteropServices::Out] IntPtr % ppTypeAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetTypeAttr :  -&gt; unit" Usage="uCOMITypeInfo.GetTypeAttr ppTypeAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ppTypeAttr" Type="System.IntPtr" RefType="out" />
      </Parameters>
      <Docs>
        <param name="ppTypeAttr">No retorno bem-sucedido, uma referência à estrutura que contém os atributos dessa descrição de tipo.</param>
        <summary>Recupera uma estrutura <see cref="T:System.Runtime.InteropServices.TYPEATTR" /> que contém os atributos da descrição de tipo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Os valores de `ppTypeAttr` podem ser acessados por meio de <xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A>.  
  
 Para obter informações adicionais sobre `ITypeInfo::GetTypeAttr`, consulte a biblioteca MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeComp">
      <MemberSignature Language="C#" Value="public void GetTypeComp (out System.Runtime.InteropServices.UCOMITypeComp ppTComp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTypeComp([out] class System.Runtime.InteropServices.UCOMITypeComp&amp; ppTComp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMITypeInfo.GetTypeComp(System.Runtime.InteropServices.UCOMITypeComp@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetTypeComp (ByRef ppTComp As UCOMITypeComp)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetTypeComp([Runtime::InteropServices::Out] System::Runtime::InteropServices::UCOMITypeComp ^ % ppTComp);" />
      <MemberSignature Language="F#" Value="abstract member GetTypeComp :  -&gt; unit" Usage="uCOMITypeInfo.GetTypeComp ppTComp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ppTComp" Type="System.Runtime.InteropServices.UCOMITypeComp" RefType="out" />
      </Parameters>
      <Docs>
        <param name="ppTComp">No retorno bem-sucedido, uma referência ao <see langword="UCOMITypeComp" /> da biblioteca de tipos recipiente.</param>
        <summary>Recupera a interface <see langword="ITypeComp" /> da descrição de tipo, o que permite a um compilador do cliente associar os membros da descrição de tipo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obter informações adicionais sobre `ITypeInfo::GetTypeComp`, consulte a biblioteca MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVarDesc">
      <MemberSignature Language="C#" Value="public void GetVarDesc (int index, out IntPtr ppVarDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetVarDesc(int32 index, [out] native int&amp; ppVarDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMITypeInfo.GetVarDesc(System.Int32,System.IntPtr@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetVarDesc (index As Integer, ByRef ppVarDesc As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetVarDesc(int index, [Runtime::InteropServices::Out] IntPtr % ppVarDesc);" />
      <MemberSignature Language="F#" Value="abstract member GetVarDesc : int *  -&gt; unit" Usage="uCOMITypeInfo.GetVarDesc (index, ppVarDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="ppVarDesc" Type="System.IntPtr" RefType="out" />
      </Parameters>
      <Docs>
        <param name="index">Índice da descrição da variável a ser retornada.</param>
        <param name="ppVarDesc">No retorno bem-sucedido, uma referência ao <see langword="VARDESC" /> que descreve a variável especificada.</param>
        <summary>Recupera uma estrutura <see langword="VARDESC" /> que descreve a variável especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Os valores de `ppVarDesc` podem ser acessados por meio de <xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A>.  
  
 Para obter informações adicionais sobre `ITypeInfo::GetVarDesc`, consulte a biblioteca MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public void Invoke (object pvInstance, int memid, short wFlags, ref System.Runtime.InteropServices.DISPPARAMS pDispParams, out object pVarResult, out System.Runtime.InteropServices.EXCEPINFO pExcepInfo, out int puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Invoke(object pvInstance, int32 memid, int16 wFlags, valuetype System.Runtime.InteropServices.DISPPARAMS&amp; pDispParams, [out] object&amp; pVarResult, [out] valuetype System.Runtime.InteropServices.EXCEPINFO&amp; pExcepInfo, [out] int32&amp; puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMITypeInfo.Invoke(System.Object,System.Int32,System.Int16,System.Runtime.InteropServices.DISPPARAMS@,System.Object@,System.Runtime.InteropServices.EXCEPINFO@,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invoke (pvInstance As Object, memid As Integer, wFlags As Short, ByRef pDispParams As DISPPARAMS, ByRef pVarResult As Object, ByRef pExcepInfo As EXCEPINFO, ByRef puArgErr As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invoke(System::Object ^ pvInstance, int memid, short wFlags, System::Runtime::InteropServices::DISPPARAMS % pDispParams, [Runtime::InteropServices::Out] System::Object ^ % pVarResult, [Runtime::InteropServices::Out] System::Runtime::InteropServices::EXCEPINFO % pExcepInfo, [Runtime::InteropServices::Out] int % puArgErr);" />
      <MemberSignature Language="F#" Value="abstract member Invoke : obj * int * int16 *  *  *  *  -&gt; unit" Usage="uCOMITypeInfo.Invoke (pvInstance, memid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pvInstance" Type="System.Object" />
        <Parameter Name="memid" Type="System.Int32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.Runtime.InteropServices.DISPPARAMS" RefType="ref" />
        <Parameter Name="pVarResult" Type="System.Object" RefType="out" />
        <Parameter Name="pExcepInfo" Type="System.Runtime.InteropServices.EXCEPINFO" RefType="out" />
        <Parameter Name="puArgErr" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pvInstance">Referência à interface descrita por essa descrição de tipo.</param>
        <param name="memid">Identifica o membro de interface.</param>
        <param name="wFlags">Sinalizadores que descrevem o contexto da chamada invoke.</param>
        <param name="pDispParams">Referência a uma estrutura que contém uma matriz de argumentos, uma matriz de DISPIDs para argumentos nomeados e a contagens do número de elementos em cada matriz.</param>
        <param name="pVarResult">Referência ao local em que o resultado será armazenado. Se <paramref name="wFlags" /> especificar <see langword="DISPATCH_PROPERTYPUT" /> ou <see langword="DISPATCH_PROPERTYPUTREF" />, <paramref name="pVarResult" /> será ignorado. Definido como <see langword="null" /> se nenhum resultado for desejado.</param>
        <param name="pExcepInfo">Aponta para uma estrutura de informações de exceção, que será preenchida somente se <see langword="DISP_E_EXCEPTION" /> for retornado.</param>
        <param name="puArgErr">Se <see langword="Invoke" /> retornar <see langword="DISP_E_TYPEMISMATCH" />, <paramref name="puArgErr" /> indicará o índice em <c>rgvarg</c> do argumento com tipo incorreto. Se mais de um argumento retornar um erro, <paramref name="puArgErr" /> indicará somente o primeiro argumento com um erro.</param>
        <summary>Invoca um método ou acessa uma propriedade de um objeto que implementa a interface descrita pela descrição do tipo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Os valores de `pDispParams` podem ser acessados por meio de <xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A>.  
  
 Os valores válidos para `wFlags` são:  
  
|Valor|Descrição|  
|-----------|-----------------|  
|DISPATCH_METHOD|O membro é acessado como um método. Caso haja ambiguidade, este e o `DISPATCH_PROPERTYGET` sinalizador pode ser definido.|  
|DISPATCH_PROPERTYGET|O membro é recuperado como um propriedade ou membro de dados.|  
|DISPATCH_PROPERTYPUT|O membro é alterado como um propriedade ou membro de dados.|  
|DISPATCH_PROPERTYPUTREF|O membro é alterado por meio de uma atribuição de referência, em vez de uma atribuição de valor. Este valor é válido somente quando a propriedade aceita uma referência a um objeto.|  
  
 Para obter informações adicionais sobre `ITypeInfo::Invoke`, consulte a biblioteca MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseFuncDesc">
      <MemberSignature Language="C#" Value="public void ReleaseFuncDesc (IntPtr pFuncDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseFuncDesc(native int pFuncDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMITypeInfo.ReleaseFuncDesc(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseFuncDesc (pFuncDesc As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseFuncDesc(IntPtr pFuncDesc);" />
      <MemberSignature Language="F#" Value="abstract member ReleaseFuncDesc : nativeint -&gt; unit" Usage="uCOMITypeInfo.ReleaseFuncDesc pFuncDesc" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pFuncDesc" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pFuncDesc">Referência ao <see langword="FUNCDESC" /> a ser liberado.</param>
        <summary>Libera um <see cref="T:System.Runtime.InteropServices.FUNCDESC" /> retornado anteriormente por <see cref="M:System.Runtime.InteropServices.UCOMITypeInfo.GetFuncDesc(System.Int32,System.IntPtr@)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obter informações adicionais sobre `ITypeInfo::ReleaseFuncDesc`, consulte a biblioteca MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseTypeAttr">
      <MemberSignature Language="C#" Value="public void ReleaseTypeAttr (IntPtr pTypeAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseTypeAttr(native int pTypeAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMITypeInfo.ReleaseTypeAttr(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseTypeAttr (pTypeAttr As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseTypeAttr(IntPtr pTypeAttr);" />
      <MemberSignature Language="F#" Value="abstract member ReleaseTypeAttr : nativeint -&gt; unit" Usage="uCOMITypeInfo.ReleaseTypeAttr pTypeAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pTypeAttr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pTypeAttr">Referência ao <see langword="TYPEATTR" /> a ser liberado.</param>
        <summary>Libera um <see cref="T:System.Runtime.InteropServices.TYPEATTR" /> retornado anteriormente por <see cref="M:System.Runtime.InteropServices.UCOMITypeInfo.GetTypeAttr(System.IntPtr@)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obter informações adicionais sobre `ITypeInfo::ReleaseTypeAttr`, consulte a biblioteca MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseVarDesc">
      <MemberSignature Language="C#" Value="public void ReleaseVarDesc (IntPtr pVarDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseVarDesc(native int pVarDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMITypeInfo.ReleaseVarDesc(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseVarDesc (pVarDesc As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseVarDesc(IntPtr pVarDesc);" />
      <MemberSignature Language="F#" Value="abstract member ReleaseVarDesc : nativeint -&gt; unit" Usage="uCOMITypeInfo.ReleaseVarDesc pVarDesc" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pVarDesc" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pVarDesc">Referência ao <see langword="VARDESC" /> a ser liberado.</param>
        <summary>Libera um <see langword="VARDESC" /> retornado anteriormente por <see cref="M:System.Runtime.InteropServices.UCOMITypeInfo.GetVarDesc(System.Int32,System.IntPtr@)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obter informações adicionais sobre `ITypeInfo::ReleaseVarDesc`, consulte a biblioteca MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>