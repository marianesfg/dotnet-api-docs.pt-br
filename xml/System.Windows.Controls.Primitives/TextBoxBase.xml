<Type Name="TextBoxBase" FullName="System.Windows.Controls.Primitives.TextBoxBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="81fef11690f80095ee2a1658ac4e2f240b447657" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class TextBoxBase : System.Windows.Controls.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract TextBoxBase extends System.Windows.Controls.Control" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Primitives.TextBoxBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TextBoxBase&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextBoxBase abstract : System::Windows::Controls::Control" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Text)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="PART_ContentHost", Type=typeof(System.Windows.FrameworkElement))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="e4044-101">Uma classe base abstrata que fornece funcionalidade para controles de edição de texto, inclusive <see cref="T:System.Windows.Controls.TextBox" /> e <see cref="T:System.Windows.Controls.RichTextBox" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e4044-101">An abstract base class that provides functionality for text editing controls, including <see cref="T:System.Windows.Controls.TextBox" /> and <see cref="T:System.Windows.Controls.RichTextBox" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e4044-102">O exemplo a seguir demonstra como usar o derivada <xref:System.Windows.Controls.TextBox> objeto [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="e4044-102">The following example demonstrates how to use the derived <xref:System.Windows.Controls.TextBox> object in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)].</span></span>  
  
 [!code-xaml[TextBoxBase_Samp#TextBoxBase1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml#textboxbase1)]  
  
 <span data-ttu-id="e4044-103">O exemplo a seguir demonstra como usar o derivada <xref:System.Windows.Controls.RichTextBox> objeto no código.</span><span class="sxs-lookup"><span data-stu-id="e4044-103">The following example demonstrates how to use the derived <xref:System.Windows.Controls.RichTextBox> object in code.</span></span>  
  
 [!code-csharp[richtextboxsnippets#_RichTextBox_MouseUpDown](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_richtextbox_mouseupdown)]
 [!code-vb[richtextboxsnippets#_RichTextBox_MouseUpDown](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_richtextbox_mouseupdown)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.TextBox" />
    <altmember cref="T:System.Windows.Controls.RichTextBox" />
  </Docs>
  <Members>
    <Member MemberName="AcceptsReturn">
      <MemberSignature Language="C#" Value="public bool AcceptsReturn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptsReturn" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptsReturn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcceptsReturn { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e4044-104">Obtém ou define um valor que indica como o controle de edição de texto responde quando o usuário pressiona a tecla ENTER.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-104">Gets or sets a value that indicates how the text editing control responds when the user presses the ENTER key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e4044-105">
            <see langword="true" /> se pressionar a tecla ENTER insere uma nova linha na posição atual do cursor; caso contrário, a tecla ENTER será ignorada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-105">
              <see langword="true" /> if pressing the ENTER key inserts a new line at the current cursor position; otherwise, the ENTER key is ignored.</span>
          </span>
          <span data-ttu-id="e4044-106">O valor padrão é <see langword="false" /> para <see cref="T:System.Windows.Controls.TextBox" /> e <see langword="true" /> para <see cref="T:System.Windows.Controls.RichTextBox" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-106">The default value is <see langword="false" /> for <see cref="T:System.Windows.Controls.TextBox" /> and <see langword="true" /> for <see cref="T:System.Windows.Controls.RichTextBox" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4044-107">Corresponde a tecla ENTER para `VK_RETURN` código de tecla virtual.</span><span class="sxs-lookup"><span data-stu-id="e4044-107">The ENTER key corresponds to `VK_RETURN` virtual-key code.</span></span>  
  
<a name="dependencyPropertyInfo_AcceptsReturn"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="e4044-108">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="e4044-108">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="e4044-109">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="e4044-109">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturnProperty>|  
|<span data-ttu-id="e4044-110">Propriedades de metadados é definido como `true`</span><span class="sxs-lookup"><span data-stu-id="e4044-110">Metadata properties set to `true`</span></span>|<span data-ttu-id="e4044-111">Nenhum</span><span class="sxs-lookup"><span data-stu-id="e4044-111">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />
        <altmember cref="P:System.Windows.Controls.TextBox.TextWrapping" />
      </Docs>
    </Member>
    <Member MemberName="AcceptsReturnProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AcceptsReturnProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AcceptsReturnProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturnProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AcceptsReturnProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AcceptsReturnProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e4044-112">Identifica a propriedade de dependência <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-112">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptsTab">
      <MemberSignature Language="C#" Value="public bool AcceptsTab { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptsTab" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptsTab As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcceptsTab { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e4044-113">Obtém ou define um valor que indica como o controle de edição de texto responde quando o usuário pressiona a tecla TAB.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-113">Gets or sets a value that indicates how the text editing control responds when the user presses the TAB key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e4044-114">
            <see langword="true" /> se pressionar a tecla TAB inserir um caractere de tabulação na posição atual do cursor; <see langword="false" /> se pressionar a tecla TAB mover o foco para o próximo controle que é marcado como uma parada de tabulação e não inserir um caractere de tabulação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-114">
              <see langword="true" /> if pressing the TAB key inserts a tab character at the current cursor position; <see langword="false" /> if pressing the TAB key moves the focus to the next control that is marked as a tab stop and does not insert a tab character.</span>
          </span>
          <span data-ttu-id="e4044-115">O valor padrão é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-115">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4044-116">Corresponde a tecla TAB para **VK_TAB** código de tecla virtual.</span><span class="sxs-lookup"><span data-stu-id="e4044-116">The TAB key corresponds to **VK_TAB** virtual-key code.</span></span>  
  
<a name="dependencyPropertyInfo_AcceptsTab"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="e4044-117">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="e4044-117">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="e4044-118">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="e4044-118">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTabProperty>|  
|<span data-ttu-id="e4044-119">Propriedades de metadados é definido como `true`</span><span class="sxs-lookup"><span data-stu-id="e4044-119">Metadata properties set to `true`</span></span>|<span data-ttu-id="e4044-120">Nenhum</span><span class="sxs-lookup"><span data-stu-id="e4044-120">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptsTabProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AcceptsTabProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AcceptsTabProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTabProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AcceptsTabProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AcceptsTabProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e4044-121">Identifica a propriedade de dependência <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-121">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendText">
      <MemberSignature Language="C#" Value="public void AppendText (string textData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendText(string textData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.AppendText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendText (textData As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendText(System::String ^ textData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textData" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textData">
          <span data-ttu-id="e4044-122">Uma cadeia de caracteres que especifica o texto a ser acrescentado ao conteúdo atual do controle de texto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-122">A string that specifies the text to append to the current contents of the text control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4044-123">Acrescenta uma cadeia de caracteres ao conteúdo de um controle de texto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-123">Appends a string to the contents of a text control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4044-124">O <xref:System.Windows.Controls.Primitives.TextBoxBase.AppendText%2A> método permite que o usuário acrescentar o texto para o conteúdo de um controle de texto sem usando a concatenação de texto, que pode resultar em melhor desempenho quando muitas concatenações são necessárias.</span><span class="sxs-lookup"><span data-stu-id="e4044-124">The <xref:System.Windows.Controls.Primitives.TextBoxBase.AppendText%2A> method enables the user to append text to the contents of a text control without using text concatenation, which, can yield better performance when many concatenations are required.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4044-125">O exemplo a seguir demonstra como usar o <xref:System.Windows.Controls.Primitives.TextBoxBase.AppendText%2A> método.</span><span class="sxs-lookup"><span data-stu-id="e4044-125">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.AppendText%2A> method.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase11](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase11)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase11](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoWordSelection">
      <MemberSignature Language="C#" Value="public bool AutoWordSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoWordSelection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoWordSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoWordSelection { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e4044-126">Obtém ou define um valor que determina se o resto da palavra é selecionado quando o usuário seleciona parte dela arrastando com o mouse sobre a palavra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-126">Gets or sets a value that determines whether when a user selects part of a word by dragging across it with the mouse, the rest of the word is selected.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e4044-127">
            <see langword="true" /> se a seleção automática de palavras estiver habilitada; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-127">
              <see langword="true" /> if automatic word selection is enabled; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="e4044-128">O valor padrão é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-128">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4044-129">Quando <xref:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection%2A> é ativada, toda vez que essa parte de uma palavra é selecionado pelo usuário arrastando-se pela parte de uma palavra usando o mouse, a seleção automaticamente é expandida para incluir a palavra inteira.</span><span class="sxs-lookup"><span data-stu-id="e4044-129">When <xref:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection%2A> is enabled, every time that part of a word is selected by the user dragging over part of a word using the mouse, the selection is automatically expanded to include the whole word.</span></span> <span data-ttu-id="e4044-130">O usuário pode substituir a seleção automática de uma palavra inteira, momentaneamente invertendo a direção na qual o ponteiro do mouse está sendo arrastado como a seleção é feita.</span><span class="sxs-lookup"><span data-stu-id="e4044-130">The user can override automatic selection of a whole word by momentarily reversing the direction in which the mouse pointer is being dragged as the selection is made.</span></span> <span data-ttu-id="e4044-131">Essa ação Desfaz a seleção automática de toda a palavra e permite que o usuário selecionar precisamente parte ou todas as palavras.</span><span class="sxs-lookup"><span data-stu-id="e4044-131">This action undoes the automatic selection of the whole word, and enables the user to precisely select part or all of the word.</span></span>  
  
 <span data-ttu-id="e4044-132">Quando <xref:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection%2A> é desabilitado, uma seleção não é automaticamente expandida para incluir palavras inteiras; nesse caso, precisas seleções sempre são determinadas manualmente.</span><span class="sxs-lookup"><span data-stu-id="e4044-132">When <xref:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection%2A> is disabled, a selection is not automatically expanded to include whole words; in this case, precise selections are always determined manually.</span></span>  
  
 <span data-ttu-id="e4044-133">**Observação:** seleção automática não afeta a primeira palavra em que o usuário arrasta em.</span><span class="sxs-lookup"><span data-stu-id="e4044-133">**Note:** Auto selection does not affect the first word that the user drags across.</span></span> <span data-ttu-id="e4044-134">Ele é somente depois que esse limite de palavra primeiro é cruzado que seleção automática entra em vigor.</span><span class="sxs-lookup"><span data-stu-id="e4044-134">It is only after this first word boundary is crossed that auto selection takes effect.</span></span>  
  
<a name="dependencyPropertyInfo_AutoWordSelection"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="e4044-135">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="e4044-135">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="e4044-136">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="e4044-136">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelectionProperty>|  
|<span data-ttu-id="e4044-137">Propriedades de metadados é definido como `true`</span><span class="sxs-lookup"><span data-stu-id="e4044-137">Metadata properties set to `true`</span></span>|<span data-ttu-id="e4044-138">Nenhum</span><span class="sxs-lookup"><span data-stu-id="e4044-138">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoWordSelectionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AutoWordSelectionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AutoWordSelectionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelectionProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AutoWordSelectionProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AutoWordSelectionProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e4044-139">Identifica a propriedade de dependência <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-139">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginChange">
      <MemberSignature Language="C#" Value="public void BeginChange ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginChange() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginChange ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginChange();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e4044-140">Inicia um bloco de alteração.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-140">Begins a change block.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4044-141">**Observação:** quando você chama <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A>, você também deve chamar <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> para concluir o bloco de alteração caso contrário, uma exceção será lançada.</span><span class="sxs-lookup"><span data-stu-id="e4044-141">**Note:** When you call <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A>, you must also call <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> to complete the change block otherwise an exception will be thrown.</span></span>  
  
 <span data-ttu-id="e4044-142">Um bloco de alteração logicamente agrupa várias alterações em uma unidade de desfazer única e impede que os eventos de alteração de conteúdo ou a seleção de texto que está sendo gerado após o bloco de alteração.</span><span class="sxs-lookup"><span data-stu-id="e4044-142">A change block logically groups multiple changes into a single undo unit and prevents text content or selection change events from being raised until after the change block.</span></span> <span data-ttu-id="e4044-143">Dessa forma, você pode fazer várias edições para o elemento de texto sem o risco de elemento de texto que está sendo alterado ao mesmo tempo por outro ouvinte.</span><span class="sxs-lookup"><span data-stu-id="e4044-143">This way you can make multiple edits to the text element without the danger of the text element being changed at the same time by another listener.</span></span> <span data-ttu-id="e4044-144">Um bloco de alteração é criado chamando o <xref:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock%2A> método.</span><span class="sxs-lookup"><span data-stu-id="e4044-144">A change block is created by calling the <xref:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock%2A> method.</span></span> <span data-ttu-id="e4044-145">Chamando o <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> método faz com que todas as alterações subsequentes devem ser incluídos no bloco de alteração especificada até que uma chamada correspondente para o <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> método é feito.</span><span class="sxs-lookup"><span data-stu-id="e4044-145">Calling the <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> method causes all subsequent changes to be included in the specified change block until a corresponding call to the <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> method is made.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4044-146">O exemplo a seguir mostra como usar o <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> e <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> métodos para criar um bloco de alteração.</span><span class="sxs-lookup"><span data-stu-id="e4044-146">The following example shows how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> and <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> methods to create a change block.</span></span>  
  
 [!code-csharp[TextBoxMiscSnippets_procedural_snip#BeginChangeEndChangeCodeExampleInline1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/CSharp/BeginChangeEndChangeExample.cs#beginchangeendchangecodeexampleinline1)]
 [!code-vb[TextBoxMiscSnippets_procedural_snip#BeginChangeEndChangeCodeExampleInline1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/visualbasic/beginchangeendchangeexample.vb#beginchangeendchangecodeexampleinline1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Redo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange" />
      </Docs>
    </Member>
    <Member MemberName="CanRedo">
      <MemberSignature Language="C#" Value="public bool CanRedo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRedo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.CanRedo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanRedo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanRedo { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e4044-147">Obtém um valor que indica se a ação de desfazer mais recente pode ser refeita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-147">Gets a value that indicates whether the most recent undo action can be redone.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e4044-148">
            <see langword="true" /> Se a ação de desfazer mais recente pode ser refeita; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-148">
              <see langword="true" /> if the most recent undo action can be redone; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="e4044-149">Esta propriedade não tem valor padrão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-149">This property has no default value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e4044-150">O exemplo de código a seguir demonstra como usar o <xref:System.Windows.Controls.Primitives.TextBoxBase.CanRedo%2A> para determinar se a ação de desfazer mais recente pode ser refeita.</span><span class="sxs-lookup"><span data-stu-id="e4044-150">The following code example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.CanRedo%2A> property to determine whether the most recent undo action can be redone.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase9](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase9)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.CanUndo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Redo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
      </Docs>
    </Member>
    <Member MemberName="CanUndo">
      <MemberSignature Language="C#" Value="public bool CanUndo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanUndo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.CanUndo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanUndo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanUndo { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e4044-151">Obtém um valor que indica se a ação mais recente pode ser desfeita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-151">Gets a value that indicates whether the most recent action can be undone.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e4044-152">
            <see langword="true" /> Se a ação mais recente pode ser desfeita. Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-152">
              <see langword="true" /> if the most recent action can be undone; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="e4044-153">Esta propriedade não tem valor padrão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-153">This property has no default value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e4044-154">O exemplo de código a seguir demonstra como usar o <xref:System.Windows.Controls.Primitives.TextBoxBase.CanUndo%2A> para determinar se a ação mais recente pode ser desfeita.</span><span class="sxs-lookup"><span data-stu-id="e4044-154">The following code example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.CanUndo%2A> property to determine whether the most recent action can be undone.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase8](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase8)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.CanRedo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Redo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
      </Docs>
    </Member>
    <Member MemberName="CaretBrush">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush CaretBrush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush CaretBrush" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.CaretBrush" />
      <MemberSignature Language="VB.NET" Value="Public Property CaretBrush As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Brush ^ CaretBrush { System::Windows::Media::Brush ^ get(); void set(System::Windows::Media::Brush ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e4044-155">Obtém ou define o pincel que é usado para pintar o cursor do sistema da caixa de texto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-155">Gets or sets the brush that is used to paint the caret of the text box.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e4044-156">O pincel que é usado para pintar o cursor do sistema da caixa de texto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-156">The brush that is used to paint the caret of the text box.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e4044-157">O exemplo a seguir cria um <xref:System.Windows.Controls.TextBox> e adiciona o texto "Este é o texto".</span><span class="sxs-lookup"><span data-stu-id="e4044-157">The following example creates a <xref:System.Windows.Controls.TextBox> and adds the text, "This is some text."</span></span> <span data-ttu-id="e4044-158">O exemplo define o <xref:System.Windows.Controls.Primitives.TextBoxBase.CaretBrush%2A> e <xref:System.Windows.Controls.Control.Foreground%2A> propriedades de um <xref:System.Windows.Controls.TextBox> como azul.</span><span class="sxs-lookup"><span data-stu-id="e4044-158">The example sets the <xref:System.Windows.Controls.Primitives.TextBoxBase.CaretBrush%2A> and <xref:System.Windows.Controls.Control.Foreground%2A> properties of a <xref:System.Windows.Controls.TextBox> to blue.</span></span>  
  
 [!code-xaml[TextBaseSelectionBrush#TextBox](~/samples/snippets/csharp/VS_Snippets_Wpf/textbaseselectionbrush/CS/window1.xaml#textbox)]   
  
 <span data-ttu-id="e4044-159">O exemplo anterior produz saída semelhante a ilustração a seguir.</span><span class="sxs-lookup"><span data-stu-id="e4044-159">The preceding example produces output that is like the following illustration.</span></span>  
  
 <span data-ttu-id="e4044-160">![Caixa de texto com CaretBrush definido como azul. ] (~/add/media/textboxcaretbrush.png "TextBox com CaretBrush definido como azul.")</span><span class="sxs-lookup"><span data-stu-id="e4044-160">![TextBox with CaretBrush set to blue.](~/add/media/textboxcaretbrush.png "TextBox with CaretBrush set to blue.")</span></span>  
<span data-ttu-id="e4044-161">Caixa de texto com CaretBrush definido como azul</span><span class="sxs-lookup"><span data-stu-id="e4044-161">TextBox with CaretBrush set to blue</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaretBrushProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CaretBrushProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CaretBrushProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.CaretBrushProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CaretBrushProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CaretBrushProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e4044-162">Identifica a propriedade de dependência <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.CaretBrush" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-162">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.CaretBrush" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public void Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Sub Copy ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Copy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e4044-163">Copia a seleção atual do controle de edição de texto para o <see cref="T:System.Windows.Clipboard" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-163">Copies the current selection of the text editing control to the <see cref="T:System.Windows.Clipboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4044-164">Uma operação de cópia copia o texto selecionado para o <xref:System.Windows.Clipboard>.</span><span class="sxs-lookup"><span data-stu-id="e4044-164">A copy operation copies the selected text to the <xref:System.Windows.Clipboard>.</span></span> <span data-ttu-id="e4044-165">Observe que o texto selecionado não é removido do texto do controle no processo de edição.</span><span class="sxs-lookup"><span data-stu-id="e4044-165">Note that the selected text is not removed from the text editing control in the process.</span></span> <span data-ttu-id="e4044-166">Um método similar, <xref:System.Windows.Controls.Primitives.TextBoxBase.Cut%2A>, move a seleção atual para o <xref:System.Windows.Clipboard> e remove o texto selecionado do texto do controle no processo de edição.</span><span class="sxs-lookup"><span data-stu-id="e4044-166">A similar method, <xref:System.Windows.Controls.Primitives.TextBoxBase.Cut%2A>, moves the current selection to the <xref:System.Windows.Clipboard> and removes the selected text from the text editing control in the process.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4044-167">O exemplo a seguir demonstra como usar o <xref:System.Windows.Controls.Primitives.TextBoxBase.Copy%2A> método para copiar o texto selecionado em um <xref:System.Windows.Controls.TextBox> controle.</span><span class="sxs-lookup"><span data-stu-id="e4044-167">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.Copy%2A> method to copy the text that is selected in a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase4](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase4)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase4)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="e4044-168">para confiança total de herdeiros.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-168">for full trust for inheritors.</span>
          </span>
          <span data-ttu-id="e4044-169">Este membro não pode ser herdado por código parcialmente confiável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-169">This member cannot be inherited by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Paste" />
      </Docs>
    </Member>
    <Member MemberName="Cut">
      <MemberSignature Language="C#" Value="public void Cut ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Cut() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.Cut" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cut ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cut();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e4044-170">Remove a seleção atual do controle de edição de texto e copia-a para a <see cref="T:System.Windows.Clipboard" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-170">Removes the current selection from the text editing control and copies it to the <see cref="T:System.Windows.Clipboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4044-171">Uma operação de transferência remove a seleção atual de controle de edição de texto e copiá-lo para o <xref:System.Windows.Clipboard>.</span><span class="sxs-lookup"><span data-stu-id="e4044-171">A cut operation removes the current selection from the text editing control and copies it to the <xref:System.Windows.Clipboard>.</span></span> <span data-ttu-id="e4044-172">Observe que o texto selecionado é removido (cortados) o controle no processo de edição de texto.</span><span class="sxs-lookup"><span data-stu-id="e4044-172">Note that the selected text is removed (cut) from the text editing control in the process.</span></span> <span data-ttu-id="e4044-173">Um método similar, <xref:System.Windows.Controls.Primitives.TextBoxBase.Copy%2A>, copia a seleção atual na área de transferência, mas não remove o texto selecionado do controle de edição de texto.</span><span class="sxs-lookup"><span data-stu-id="e4044-173">A similar method, <xref:System.Windows.Controls.Primitives.TextBoxBase.Copy%2A>, copies the current selection to the Clipboard, but does not remove the selected text from the text editing control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4044-174">O exemplo a seguir demonstra como usar o <xref:System.Windows.Controls.Primitives.TextBoxBase.Cut%2A> método para excluir o texto selecionado em um <xref:System.Windows.Controls.TextBox> controle.</span><span class="sxs-lookup"><span data-stu-id="e4044-174">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.Cut%2A> method to delete the text that is selected in a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase5](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase5)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase5)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="e4044-175">para confiança total de herdeiros.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-175">for full trust for inheritors.</span>
          </span>
          <span data-ttu-id="e4044-176">Este membro não pode ser herdado por código parcialmente confiável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-176">This member cannot be inherited by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Paste" />
      </Docs>
    </Member>
    <Member MemberName="DeclareChangeBlock">
      <MemberSignature Language="C#" Value="public IDisposable DeclareChangeBlock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IDisposable DeclareChangeBlock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock" />
      <MemberSignature Language="VB.NET" Value="Public Function DeclareChangeBlock () As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IDisposable ^ DeclareChangeBlock();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e4044-177">Cria um bloco de alteração.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-177">Creates a change block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e4044-178">Um objeto <see cref="T:System.IDisposable" /> que se refere a um novo bloco de alteração.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-178">An <see cref="T:System.IDisposable" /> object that refers to a new change block.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4044-179">Um bloco de alteração logicamente agrupa várias alterações em uma unidade única de desfazer.</span><span class="sxs-lookup"><span data-stu-id="e4044-179">A change block logically groups multiple changes into a single undo unit.</span></span> <span data-ttu-id="e4044-180">Um bloco de alteração é criado chamando o <xref:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock%2A> método.</span><span class="sxs-lookup"><span data-stu-id="e4044-180">A change block is created by calling the <xref:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock%2A> method.</span></span> <span data-ttu-id="e4044-181">Chamando o <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> método faz com que todas as alterações subsequentes devem ser incluídos no bloco de alteração especificada até que uma chamada correspondente para o <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> método é feito.</span><span class="sxs-lookup"><span data-stu-id="e4044-181">Calling the <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> method causes all subsequent changes to be included in the specified change block until a corresponding call to the <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> method is made.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Redo" />
      </Docs>
    </Member>
    <Member MemberName="EndChange">
      <MemberSignature Language="C#" Value="public void EndChange ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndChange() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndChange ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndChange();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e4044-182">Encerra um bloco de alteração.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-182">Ends a change block.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4044-183">**Observação:** quando você chama <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A>, você também deve chamar <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> para concluir o bloco de alteração caso contrário, uma exceção será lançada.</span><span class="sxs-lookup"><span data-stu-id="e4044-183">**Note:** When you call <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A>, you must also call <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> to complete the change block otherwise an exception will be thrown.</span></span>  
  
 <span data-ttu-id="e4044-184">Um bloco de alteração logicamente agrupa várias alterações em uma unidade de desfazer única e impede que os eventos de alteração de conteúdo ou a seleção de texto que está sendo gerado após o bloco de alteração.</span><span class="sxs-lookup"><span data-stu-id="e4044-184">A change block logically groups multiple changes into a single undo unit and prevents text content or selection change events from being raised until after the change block.</span></span> <span data-ttu-id="e4044-185">Dessa forma, você pode fazer várias edições para o elemento de texto sem o risco de elemento de texto que está sendo alterado ao mesmo tempo por outro processo.</span><span class="sxs-lookup"><span data-stu-id="e4044-185">This way you can make multiple edits to the text element without the danger of the text element being changed at the same time by another process.</span></span> <span data-ttu-id="e4044-186">Um bloco de alteração é criado chamando o <xref:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock%2A> método.</span><span class="sxs-lookup"><span data-stu-id="e4044-186">A change block is created by calling the <xref:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock%2A> method.</span></span> <span data-ttu-id="e4044-187">Chamando o <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> método faz com que todas as alterações subsequentes devem ser incluídos no bloco de alteração especificada até que uma chamada correspondente para o <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> método é feito.</span><span class="sxs-lookup"><span data-stu-id="e4044-187">Calling the <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> method causes all subsequent changes to be included in the specified change block until a corresponding call to the <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> method is made.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4044-188">O exemplo a seguir mostra como usar o <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> e <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> métodos para criar um bloco de alteração.</span><span class="sxs-lookup"><span data-stu-id="e4044-188">The following example shows how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> and <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> methods to create a change block.</span></span>  
  
 [!code-csharp[TextBoxMiscSnippets_procedural_snip#BeginChangeEndChangeCodeExampleInline1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/CSharp/BeginChangeEndChangeExample.cs#beginchangeendchangecodeexampleinline1)]
 [!code-vb[TextBoxMiscSnippets_procedural_snip#BeginChangeEndChangeCodeExampleInline1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/visualbasic/beginchangeendchangeexample.vb#beginchangeendchangecodeexampleinline1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Redo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LockCurrentUndoUnit" />
      </Docs>
    </Member>
    <Member MemberName="ExtentHeight">
      <MemberSignature Language="C#" Value="public double ExtentHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ExtentHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.ExtentHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExtentHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double ExtentHeight { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e4044-189">Obtém o tamanho vertical da área de conteúdo visível.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-189">Gets the vertical size of the visible content area.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e4044-190">Um valor de ponto flutuante que especifica o tamanho vertical da área de conteúdo visível, em [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-190">A floating-point value that specifies the vertical size of the visible content area, in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span>
          </span>
          <span data-ttu-id="e4044-191">O valor dessa propriedade é 0.0 se o controle de edição de texto não estiver configurado para dar suporte a rolagem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-191">The value of this property is 0.0 if the text-editing control is not configured to support scrolling.</span>
          </span>
          <span data-ttu-id="e4044-192">Esta propriedade não tem valor padrão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-192">This property has no default value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e4044-193">O exemplo a seguir demonstra como ler o valor de <xref:System.Windows.Controls.Primitives.TextBoxBase.ExtentHeight%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="e4044-193">The following example demonstrates how to read the value of the <xref:System.Windows.Controls.Primitives.TextBoxBase.ExtentHeight%2A> property.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase3)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.ExtentWidth" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />
      </Docs>
    </Member>
    <Member MemberName="ExtentWidth">
      <MemberSignature Language="C#" Value="public double ExtentWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ExtentWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.ExtentWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExtentWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double ExtentWidth { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e4044-194">Obtém o tamanho horizontal da área de conteúdo visível.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-194">Gets the horizontal size of the visible content area.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e4044-195">Um valor de ponto flutuante que especifica o tamanho horizontal da área de conteúdo visível, no [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-195">A floating-point value that specifies the horizontal size of the visible content area, in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span>
          </span>
          <span data-ttu-id="e4044-196">O valor dessa propriedade é 0.0 se o controle de edição de texto não estiver configurado para dar suporte a rolagem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-196">The value of this property is 0.0 if the text editing control is not configured to support scrolling.</span>
          </span>
          <span data-ttu-id="e4044-197">Esta propriedade não tem valor padrão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-197">This property has no default value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e4044-198">O exemplo a seguir demonstra como ler o valor de <xref:System.Windows.Controls.Primitives.TextBoxBase.ExtentWidth%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="e4044-198">The following example demonstrates how to read the value of the <xref:System.Windows.Controls.Primitives.TextBoxBase.ExtentWidth%2A> property.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase3)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.ExtentWidth" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />
      </Docs>
    </Member>
    <Member MemberName="HorizontalOffset">
      <MemberSignature Language="C#" Value="public double HorizontalOffset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 HorizontalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalOffset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HorizontalOffset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double HorizontalOffset { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e4044-199">Obtém ou define a posição de rolagem horizontal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-199">Gets or sets the horizontal scroll position.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e4044-200">Um valor de ponto flutuante que especifica a posição de rolagem horizontal, em [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-200">A floating-point value that specifies the horizontal scroll position, in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span>
          </span>
          <span data-ttu-id="e4044-201">A definição dessa propriedade faz com que o texto para rolar até o deslocamento horizontal especificado do controle de edição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-201">Setting this property causes the text editing control to scroll to the specified horizontal offset.</span>
          </span>
          <span data-ttu-id="e4044-202">Ler esta propriedade retorna o deslocamento horizontal atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-202">Reading this property returns the current horizontal offset.</span>
          </span>
          <span data-ttu-id="e4044-203">O valor dessa propriedade é 0.0 se o controle de edição de texto não estiver configurado para dar suporte a rolagem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-203">The value of this property is 0.0 if the text editing control is not configured to support scrolling.</span>
          </span>
          <span data-ttu-id="e4044-204">Esta propriedade não tem valor padrão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-204">This property has no default value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4044-205">O deslocamento horizontal é medido a partir à direita da área de texto visível se você estiver trabalhando no modo da direita para a esquerda; Caso contrário, ele é medido da esquerda.</span><span class="sxs-lookup"><span data-stu-id="e4044-205">The horizontal offset is measured from the right of the visible text area if you are working in right-to-left mode; otherwise, it is measured from the left.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4044-206">O exemplo a seguir demonstra como ler o valor de <xref:System.Windows.Controls.Primitives.TextBoxBase.HorizontalOffset%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="e4044-206">The following example demonstrates how to read the value of the <xref:System.Windows.Controls.Primitives.TextBoxBase.HorizontalOffset%2A> property.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase3)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e4044-207">É feita uma tentativa de definir essa propriedade com um valor negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-207">An attempt is made to set this property to a negative value.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalOffset" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToEnd" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHome" />
      </Docs>
    </Member>
    <Member MemberName="HorizontalScrollBarVisibility">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ScrollBarVisibility HorizontalScrollBarVisibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.ScrollBarVisibility HorizontalScrollBarVisibility" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" />
      <MemberSignature Language="VB.NET" Value="Public Property HorizontalScrollBarVisibility As ScrollBarVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ScrollBarVisibility HorizontalScrollBarVisibility { System::Windows::Controls::ScrollBarVisibility get(); void set(System::Windows::Controls::ScrollBarVisibility value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ScrollBarVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e4044-208">Obtém ou define um valor que indica se uma barra de rolagem horizontal é mostrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-208">Gets or sets a value that indicates whether a horizontal scroll bar is shown.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e4044-209">Um valor que é definido pela enumeração <see cref="T:System.Windows.Controls.ScrollBarVisibility" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-209">A value that is defined by the <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> enumeration.</span>
          </span>
          <span data-ttu-id="e4044-210">O valor padrão é <see cref="F:System.Windows.Visibility.Hidden" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-210">The default value is <see cref="F:System.Windows.Visibility.Hidden" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_HorizontalScrollBarVisibility"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="e4044-211">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="e4044-211">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="e4044-212">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="e4044-212">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibilityProperty>|  
|<span data-ttu-id="e4044-213">Propriedades de metadados é definido como `true`</span><span class="sxs-lookup"><span data-stu-id="e4044-213">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="e4044-214">O exemplo a seguir demonstra como definir o valor de <xref:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility%2A> propriedade usando [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="e4044-214">The following example demonstrates how to set the value of the <xref:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility%2A> property by using [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)].</span></span>  
  
 [!code-xaml[TextBoxBase_Samp#TextBoxBase1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml#textboxbase1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalScrollBarVisibilityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HorizontalScrollBarVisibilityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HorizontalScrollBarVisibilityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibilityProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HorizontalScrollBarVisibilityProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ HorizontalScrollBarVisibilityProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e4044-215">Identifica a propriedade de dependência <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-215">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInactiveSelectionHighlightEnabled">
      <MemberSignature Language="C#" Value="public bool IsInactiveSelectionHighlightEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInactiveSelectionHighlightEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.IsInactiveSelectionHighlightEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsInactiveSelectionHighlightEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInactiveSelectionHighlightEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e4044-216">Obtém ou define um valor que indica se a caixa de texto exibe o texto selecionado quando ela não tem o foco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-216">Gets or sets a value that indicates whether the text box displays selected text when the text box does not have focus.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e4044-217">
            <see langword="true" /> se a caixa de texto exibir o texto selecionado quando a caixa de texto não tiver o foco; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-217">
              <see langword="true" /> if the text box displays selected text when the text box does not have focus; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="e4044-218">O padrão registrado é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-218">The registered default is <see langword="false" />.</span>
          </span>
          <span data-ttu-id="e4044-219">Para obter mais informações sobre o que pode influenciar o valor, consulte [Precedência do valor da propriedade de dependência](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-219">For more information about what can influence the value, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsInactiveSelectionHighlightEnabled"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="e4044-220">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="e4044-220">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="e4044-221">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="e4044-221">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.IsInactiveSelectionHighlightEnabledProperty>|  
|<span data-ttu-id="e4044-222">Propriedades de metadados é definido como `true`</span><span class="sxs-lookup"><span data-stu-id="e4044-222">Metadata properties set to `true`</span></span>|<span data-ttu-id="e4044-223">Nenhum</span><span class="sxs-lookup"><span data-stu-id="e4044-223">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInactiveSelectionHighlightEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsInactiveSelectionHighlightEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsInactiveSelectionHighlightEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.IsInactiveSelectionHighlightEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsInactiveSelectionHighlightEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsInactiveSelectionHighlightEnabledProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e4044-224">Identifica a propriedade de dependência <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsInactiveSelectionHighlightEnabled" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-224">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsInactiveSelectionHighlightEnabled" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e4044-225">Obtém ou define um valor que indica se o controle de edição de texto é somente leitura para um usuário interagindo com o controle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-225">Gets or sets a value that indicates whether the text editing control is read-only to a user interacting with the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e4044-226">
            <see langword="true" /> se o conteúdo do controle de edição de texto for somente leitura para um usuário. Caso contrário, o conteúdo do controle de edição de texto pode ser modificado pelo usuário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-226">
              <see langword="true" /> if the contents of the text editing control are read-only to a user; otherwise, the contents of the text editing control can be modified by the user.</span>
          </span>
          <span data-ttu-id="e4044-227">O valor padrão é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-227">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4044-228">Esse valor afeta somente um usuário que está interagindo com o controle.</span><span class="sxs-lookup"><span data-stu-id="e4044-228">This value only affects a user who is interacting with the control.</span></span> <span data-ttu-id="e4044-229">O conteúdo de um controle de edição de texto sempre pode ser modificado programaticamente.</span><span class="sxs-lookup"><span data-stu-id="e4044-229">The contents of a text editing control can always be modified programmatically.</span></span>  
  
<a name="dependencyPropertyInfo_IsReadOnly"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="e4044-230">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="e4044-230">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="e4044-231">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="e4044-231">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyProperty>|  
|<span data-ttu-id="e4044-232">Propriedades de metadados é definido como `true`</span><span class="sxs-lookup"><span data-stu-id="e4044-232">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnlyCaretVisible">
      <MemberSignature Language="C#" Value="public bool IsReadOnlyCaretVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnlyCaretVisible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible" />
      <MemberSignature Language="VB.NET" Value="Public Property IsReadOnlyCaretVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnlyCaretVisible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e4044-233">Obtém ou define um valor que indica se uma caixa de texto somente leitura exibe um acento circunflexo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-233">Gets or sets a value that indicates whether a read-only text box displays a caret.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e4044-234">
            <see langword="true" /> se uma caixa de texto somente leitura exibe um acento circunflexo; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-234">
              <see langword="true" /> if a read-only text box displays a caret; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="e4044-235">O padrão é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-235">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4044-236">Quando <xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly%2A> é `true`, um usuário ainda pode selecionar e copiar o texto.</span><span class="sxs-lookup"><span data-stu-id="e4044-236">When <xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly%2A> is `true`, a user can still select and copy text.</span></span> <span data-ttu-id="e4044-237">Se o <xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible%2A> propriedade também é definida como `true`, um acento circunflexo será exibido na caixa de texto quando a caixa de texto tem o foco do teclado.</span><span class="sxs-lookup"><span data-stu-id="e4044-237">If the <xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible%2A> property is also set to `true`, a caret will appear in the text box when the text box has keyboard focus.</span></span> <span data-ttu-id="e4044-238">Quando <xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly%2A> é `false`, o <xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible%2A> propriedade não tem nenhum efeito.</span><span class="sxs-lookup"><span data-stu-id="e4044-238">When <xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly%2A> is `false`, the <xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible%2A> property has no effect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnlyCaretVisibleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsReadOnlyCaretVisibleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsReadOnlyCaretVisibleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisibleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsReadOnlyCaretVisibleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsReadOnlyCaretVisibleProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e4044-239">Identifica a propriedade de dependência <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-239">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnlyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsReadOnlyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsReadOnlyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsReadOnlyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsReadOnlyProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e4044-240">Identifica a propriedade de dependência <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-240">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSelectionActive">
      <MemberSignature Language="C#" Value="public bool IsSelectionActive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSelectionActive" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.IsSelectionActive" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSelectionActive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSelectionActive { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e4044-241">Obtém um valor que indica se a caixa de texto tem o foco e o texto selecionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-241">Gets a value that indicates whether the text box has focus and selected text.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e4044-242">
            <see langword="true" /> Se a caixa de texto tem foco e o texto selecionado. Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-242">
              <see langword="true" /> if the text box has focus and selected text; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="e4044-243">O padrão registrado é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-243">The registered default is <see langword="false" />.</span>
          </span>
          <span data-ttu-id="e4044-244">Para obter mais informações sobre o que pode influenciar o valor, consulte [Precedência do valor da propriedade de dependência](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-244">For more information about what can influence the value, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsSelectionActive"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="e4044-245">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="e4044-245">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="e4044-246">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="e4044-246">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.IsSelectionActiveProperty>|  
|<span data-ttu-id="e4044-247">Propriedades de metadados é definido como `true`</span><span class="sxs-lookup"><span data-stu-id="e4044-247">Metadata properties set to `true`</span></span>|<span data-ttu-id="e4044-248">Nenhum</span><span class="sxs-lookup"><span data-stu-id="e4044-248">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSelectionActiveProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsSelectionActiveProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsSelectionActiveProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.IsSelectionActiveProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsSelectionActiveProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsSelectionActiveProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e4044-249">Identifica a propriedade de dependência <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsSelectionActive" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-249">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsSelectionActive" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUndoEnabled">
      <MemberSignature Language="C#" Value="public bool IsUndoEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUndoEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsUndoEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUndoEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e4044-250">Obtém ou define um valor que indica se o suporte ao comando desfazer está habilitado para o controle de edição de texto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-250">Gets or sets a value that indicates whether undo support is enabled for the text-editing control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e4044-251">
            <see langword="true" /> se o suporte à função desfazer estiver habilitado, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-251">
              <see langword="true" /> if undo support is enabled; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="e4044-252">O valor padrão é <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-252">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4044-253">Definir essa propriedade como `false` limpa a pilha de desfazer.</span><span class="sxs-lookup"><span data-stu-id="e4044-253">Setting this property to `false` clears the undo stack.</span></span> <span data-ttu-id="e4044-254">Portanto, se você desabilitar desfazer e reabilitá-la, desfazer comandos ainda não funcionam porque a pilha de desfazer foi esvaziada quando desabilitado desfazer.</span><span class="sxs-lookup"><span data-stu-id="e4044-254">Therefore, if you disable undo and then re-enable it, undo commands still do not work because the undo stack was emptied when you disabled undo.</span></span>  
  
<a name="dependencyPropertyInfo_IsUndoEnabled"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="e4044-255">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="e4044-255">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="e4044-256">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="e4044-256">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabledProperty>|  
|<span data-ttu-id="e4044-257">Propriedades de metadados é definido como `true`</span><span class="sxs-lookup"><span data-stu-id="e4044-257">Metadata properties set to `true`</span></span>|<span data-ttu-id="e4044-258">Nenhum</span><span class="sxs-lookup"><span data-stu-id="e4044-258">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="e4044-259">O exemplo a seguir demonstra como usar o <xref:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabled%2A> propriedade [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="e4044-259">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabled%2A> property in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)].</span></span>  
  
 [!code-xaml[TextBoxBase_Samp#TextBoxBase1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml#textboxbase1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LockCurrentUndoUnit" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Redo" />
      </Docs>
    </Member>
    <Member MemberName="IsUndoEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsUndoEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsUndoEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsUndoEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsUndoEnabledProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e4044-260">Identifica a propriedade de dependência <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabled" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-260">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabled" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineDown">
      <MemberSignature Language="C#" Value="public void LineDown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LineDown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.LineDown" />
      <MemberSignature Language="VB.NET" Value="Public Sub LineDown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LineDown();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e4044-261">Rola o conteúdo do controle para baixo em uma linha.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-261">Scrolls the contents of the control down by one line.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e4044-262">O exemplo a seguir demonstra como usar o <xref:System.Windows.Controls.Primitives.TextBoxBase.LineDown%2A> método para rolar o conteúdo de um <xref:System.Windows.Controls.TextBox> controle.</span><span class="sxs-lookup"><span data-stu-id="e4044-262">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.LineDown%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase13](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase13)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase13](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase13)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineLeft" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineRight" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineUp" />
      </Docs>
    </Member>
    <Member MemberName="LineLeft">
      <MemberSignature Language="C#" Value="public void LineLeft ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LineLeft() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.LineLeft" />
      <MemberSignature Language="VB.NET" Value="Public Sub LineLeft ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LineLeft();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e4044-263">Rola o conteúdo do controle para à esquerda em uma linha.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-263">Scrolls the contents of the control to the left by one line.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e4044-264">O exemplo a seguir demonstra como usar o <xref:System.Windows.Controls.Primitives.TextBoxBase.LineLeft%2A> método para rolar o conteúdo de um <xref:System.Windows.Controls.TextBox> controle.</span><span class="sxs-lookup"><span data-stu-id="e4044-264">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.LineLeft%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase14](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase14)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase14](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineDown" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineRight" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineUp" />
      </Docs>
    </Member>
    <Member MemberName="LineRight">
      <MemberSignature Language="C#" Value="public void LineRight ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LineRight() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.LineRight" />
      <MemberSignature Language="VB.NET" Value="Public Sub LineRight ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LineRight();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e4044-265">Rola o conteúdo do controle para a direita em uma linha.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-265">Scrolls the contents of the control to the right by one line.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e4044-266">O exemplo a seguir demonstra como usar o <xref:System.Windows.Controls.Primitives.TextBoxBase.LineRight%2A> método para rolar o conteúdo de um <xref:System.Windows.Controls.TextBox> controle.</span><span class="sxs-lookup"><span data-stu-id="e4044-266">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.LineRight%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase15](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase15)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase15](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineDown" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineLeft" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineUp" />
      </Docs>
    </Member>
    <Member MemberName="LineUp">
      <MemberSignature Language="C#" Value="public void LineUp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LineUp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.LineUp" />
      <MemberSignature Language="VB.NET" Value="Public Sub LineUp ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LineUp();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e4044-267">Rola o conteúdo do controle para cima em uma linha.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-267">Scrolls the contents of the control upward by one line.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e4044-268">O exemplo a seguir demonstra como usar o <xref:System.Windows.Controls.Primitives.TextBoxBase.LineUp%2A> método para rolar o conteúdo de um <xref:System.Windows.Controls.TextBox> controle.</span><span class="sxs-lookup"><span data-stu-id="e4044-268">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.LineUp%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase16](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase16)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase16](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineLeft" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineDown" />
      </Docs>
    </Member>
    <Member MemberName="LockCurrentUndoUnit">
      <MemberSignature Language="C#" Value="public void LockCurrentUndoUnit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LockCurrentUndoUnit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.LockCurrentUndoUnit" />
      <MemberSignature Language="VB.NET" Value="Public Sub LockCurrentUndoUnit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LockCurrentUndoUnit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e4044-269">Bloqueia a unidade de desfazer mais recente da pilha de desfazer do aplicativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-269">Locks the most recent undo unit of the undo stack of the application.</span>
          </span>
          <span data-ttu-id="e4044-270">Isso impede que a unidade bloqueada seja mesclada com unidades de desfazer que são adicionadas posteriormente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-270">This prevents the locked unit from being merged with undo units that are added subsequently.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4044-271">Chame este método quando uma unidade de desfazer não texto é adicionada à pilha de desfazer principal do aplicativo.</span><span class="sxs-lookup"><span data-stu-id="e4044-271">Call this method when a non-text undo unit is added to the application's main undo stack.</span></span> <span data-ttu-id="e4044-272">Isso impede que a unidade bloqueada seja mesclada com unidades de desfazer que são adicionadas posteriormente.</span><span class="sxs-lookup"><span data-stu-id="e4044-272">This prevents the locked unit from being merged with undo units that are added subsequently.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.CanRedo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LockCurrentUndoUnit" />
      </Docs>
    </Member>
    <Member MemberName="OnApplyTemplate">
      <MemberSignature Language="C#" Value="public override void OnApplyTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnApplyTemplate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnApplyTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub OnApplyTemplate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void OnApplyTemplate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e4044-273">É chamado quando um modelo de controle é aplicado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-273">Is called when a control template is applied.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4044-274">Substitui <xref:System.Windows.FrameworkElement.OnApplyTemplate%2A>.</span><span class="sxs-lookup"><span data-stu-id="e4044-274">Overrides <xref:System.Windows.FrameworkElement.OnApplyTemplate%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="e4044-275">Quando implementada em uma classe derivada, esse método é chamado sempre que o código do aplicativo ou processos internos chamada <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e4044-275">When implemented in a derived class, this method is invoked whenever application code or internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnContextMenuOpening">
      <MemberSignature Language="C#" Value="protected override void OnContextMenuOpening (System.Windows.Controls.ContextMenuEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnContextMenuOpening(class System.Windows.Controls.ContextMenuEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnContextMenuOpening (e As ContextMenuEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnContextMenuOpening(System::Windows::Controls::ContextMenuEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.ContextMenuEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="e4044-276">Argumentos do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-276">Arguments of the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4044-277">Chamado sempre que um evento roteado <see cref="E:System.Windows.FrameworkElement.ContextMenuOpening" /> sem tratamento atingir essa classe em sua rota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-277">Called whenever an unhandled <see cref="E:System.Windows.FrameworkElement.ContextMenuOpening" /> routed event reaches this class in its route.</span>
          </span>
          <span data-ttu-id="e4044-278">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-278">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4044-279">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="e4044-279">This method has no default implementation.</span></span> <span data-ttu-id="e4044-280">Você ainda deve chamar a implementação base no caso de uma classe intermediária na herança implementou esse método.</span><span class="sxs-lookup"><span data-stu-id="e4044-280">You should still call the base implementation in case an intermediate class in the inheritance has implemented this method.</span></span>  
  
 <span data-ttu-id="e4044-281">O objetivo deste método é semelhante a [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: ele permite que você manipule o evento correspondente de classes derivadas usando um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="e4044-281">The purpose of this method is somewhat similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: it lets you handle the matching event from derived classes by using a class handler instead of an instance handler.</span></span> <span data-ttu-id="e4044-282">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="e4044-282">In this case, the matching event is a routed event.</span></span> <span data-ttu-id="e4044-283">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque o evento roteado pode ter falhado por um elemento filho, que não é necessariamente o elemento que invoca manipuladores.</span><span class="sxs-lookup"><span data-stu-id="e4044-283">The implementation pattern of the On\* methods is different for routed events because the routed event might have been raised by a child element, which is not necessarily the element that invokes handlers.</span></span> <span data-ttu-id="e4044-284">Portanto, sua implementação precisa consideram o evento propriedades da fonte dos argumentos (e não deve tentar gerar novamente o evento na maioria dos casos).</span><span class="sxs-lookup"><span data-stu-id="e4044-284">Therefore, your implementation needs to take the event arguments' source properties into account (and should not try to re-raise the event in most cases).</span></span> <span data-ttu-id="e4044-285">As subclasses de <xref:System.Windows.Controls.Primitives.TextBoxBase> pode chamar os métodos do manipulador de classe privada quando o evento é recebido na rota.</span><span class="sxs-lookup"><span data-stu-id="e4044-285">Subclasses of <xref:System.Windows.Controls.Primitives.TextBoxBase> can call private class handler methods when the event is received along the route.</span></span> <span data-ttu-id="e4044-286">É um cenário levar os argumentos do evento e deliberadamente marcar o evento como manipulado.</span><span class="sxs-lookup"><span data-stu-id="e4044-286">One scenario is to take the arguments of the event and deliberately mark the event as handled.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragEnter">
      <MemberSignature Language="C#" Value="protected override void OnDragEnter (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDragEnter(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnDragEnter(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDragEnter (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDragEnter(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="e4044-287">Fornece dados sobre o evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-287">Provides data about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4044-288">Invocado sempre que um evento roteado anexado <see cref="E:System.Windows.DragDrop.DragEnter" /> sem tratamento acessa um elemento derivado desta classe em sua rota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-288">Invoked whenever an unhandled <see cref="E:System.Windows.DragDrop.DragEnter" /> attached routed event reaches an element derived from this class in its route.</span>
          </span>
          <span data-ttu-id="e4044-289">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-289">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnDragEnter(System.Windows.DragEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnDragLeave">
      <MemberSignature Language="C#" Value="protected override void OnDragLeave (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDragLeave(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnDragLeave(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDragLeave (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDragLeave(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="e4044-290">Fornece dados sobre o evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-290">Provides data about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4044-291">Invocado sempre que um evento roteado anexado <see cref="E:System.Windows.DragDrop.DragLeave" /> sem tratamento acessa um elemento derivado desta classe em sua rota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-291">Invoked whenever an unhandled <see cref="E:System.Windows.DragDrop.DragLeave" /> attached routed event reaches an element derived from this class in its route.</span>
          </span>
          <span data-ttu-id="e4044-292">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-292">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnDragLeave(System.Windows.DragEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnDragOver">
      <MemberSignature Language="C#" Value="protected override void OnDragOver (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDragOver(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnDragOver(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDragOver (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDragOver(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="e4044-293">Fornece dados sobre o evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-293">Provides data about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4044-294">Invocado sempre que um evento roteado anexado <see cref="E:System.Windows.DragDrop.DragOver" /> sem tratamento acessa um elemento derivado desta classe em sua rota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-294">Invoked whenever an unhandled <see cref="E:System.Windows.DragDrop.DragOver" /> attached routed event reaches an element derived from this class in its route.</span>
          </span>
          <span data-ttu-id="e4044-295">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-295">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnDragOver(System.Windows.DragEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnDrop">
      <MemberSignature Language="C#" Value="protected override void OnDrop (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDrop(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnDrop(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDrop (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDrop(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="e4044-296">Fornece dados sobre o evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-296">Provides data about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4044-297">Invocado sempre que um evento roteado anexado <see cref="E:System.Windows.DragDrop.DragEnter" /> sem tratamento acessa um elemento derivado desta classe em sua rota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-297">Invoked whenever an unhandled <see cref="E:System.Windows.DragDrop.DragEnter" /> attached routed event reaches an element derived from this class in its route.</span>
          </span>
          <span data-ttu-id="e4044-298">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-298">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnDrop(System.Windows.DragEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnGiveFeedback">
      <MemberSignature Language="C#" Value="protected override void OnGiveFeedback (System.Windows.GiveFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnGiveFeedback(class System.Windows.GiveFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnGiveFeedback (e As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnGiveFeedback(System::Windows::GiveFeedbackEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="e4044-299">Fornece dados sobre o evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-299">Provides data about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4044-300">Invocado sempre que um evento roteado anexado <see cref="E:System.Windows.DragDrop.GiveFeedback" /> sem tratamento acessa um elemento derivado desta classe em sua rota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-300">Invoked whenever an unhandled <see cref="E:System.Windows.DragDrop.GiveFeedback" /> attached routed event reaches an element derived from this class in its route.</span>
          </span>
          <span data-ttu-id="e4044-301">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-301">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnGotKeyboardFocus">
      <MemberSignature Language="C#" Value="protected override void OnGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnGotKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnGotKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnGotKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="e4044-302">Fornece dados sobre o evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-302">Provides data about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4044-303">Invocado sempre que um evento roteado anexado <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> sem tratamento acessa um elemento derivado desta classe em sua rota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-303">Invoked whenever an unhandled <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> attached routed event reaches an element derived from this class in its route.</span>
          </span>
          <span data-ttu-id="e4044-304">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-304">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="e4044-305">Fornece dados sobre o evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-305">Provides data about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4044-306">Invocado sempre que um evento roteado anexado <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> sem tratamento acessa um elemento derivado desta classe em sua rota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-306">Invoked whenever an unhandled <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> attached routed event reaches an element derived from this class in its route.</span>
          </span>
          <span data-ttu-id="e4044-307">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-307">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected override void OnKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="e4044-308">Fornece dados sobre o evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-308">Provides data about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4044-309">Invocado sempre que um evento roteado anexado <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> sem tratamento acessa um elemento derivado desta classe em sua rota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-309">Invoked whenever an unhandled <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> attached routed event reaches an element derived from this class in its route.</span>
          </span>
          <span data-ttu-id="e4044-310">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-310">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnKeyUp(System.Windows.Input.KeyEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnLostFocus">
      <MemberSignature Language="C#" Value="protected override void OnLostFocus (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLostFocus(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnLostFocus(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLostFocus (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLostFocus(System::Windows::RoutedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="e4044-311">Fornece dados sobre o evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-311">Provides data about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4044-312">Gera o evento <see cref="E:System.Windows.UIElement.LostFocus" /> (usando os argumentos fornecidos).</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-312">Raises the <see cref="E:System.Windows.UIElement.LostFocus" /> event (using the provided arguments).</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnLostFocus(System.Windows.RoutedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnLostKeyboardFocus">
      <MemberSignature Language="C#" Value="protected override void OnLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLostKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLostKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLostKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="e4044-313">Fornece dados sobre o evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-313">Provides data about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4044-314">Invocado sempre que um evento roteado anexado <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> sem tratamento acessa um elemento derivado desta classe em sua rota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-314">Invoked whenever an unhandled <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> attached routed event reaches an element derived from this class in its route.</span>
          </span>
          <span data-ttu-id="e4044-315">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-315">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected override void OnMouseDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="e4044-316">Fornece dados sobre o evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-316">Provides data about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4044-317">Invocado sempre que um evento roteado anexado <see cref="E:System.Windows.Input.Mouse.MouseDown" /> sem tratamento acessa um elemento derivado desta classe em sua rota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-317">Invoked whenever an unhandled <see cref="E:System.Windows.Input.Mouse.MouseDown" /> attached routed event reaches an element derived from this class in its route.</span>
          </span>
          <span data-ttu-id="e4044-318">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-318">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected override void OnMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="e4044-319">Fornece dados sobre o evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-319">Provides data about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4044-320">Invocado sempre que um evento roteado anexado <see cref="E:System.Windows.Input.Mouse.MouseMove" /> sem tratamento acessa um elemento derivado desta classe em sua rota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-320">Invoked whenever an unhandled <see cref="E:System.Windows.Input.Mouse.MouseMove" /> attached routed event reaches an element derived from this class in its route.</span>
          </span>
          <span data-ttu-id="e4044-321">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-321">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnMouseMove(System.Windows.Input.MouseEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="e4044-322">Argumentos do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-322">Arguments of the event.</span>
          </span>
          <span data-ttu-id="e4044-323">Esses argumentos incluirão detalhes sobre qual botão do mouse foi pressionado e o estado manipulado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-323">These arguments will include details about which mouse button was depressed, and the handled state.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4044-324">Invocado sempre que um evento <see cref="E:System.Windows.Input.Mouse.MouseUp" /> sem tratamento acessa um elemento derivado desta classe em sua rota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-324">Invoked whenever an unhandled <see cref="E:System.Windows.Input.Mouse.MouseUp" /> event reaches an element derived from this class in its route.</span>
          </span>
          <span data-ttu-id="e4044-325">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-325">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseWheel">
      <MemberSignature Language="C#" Value="protected override void OnMouseWheel (System.Windows.Input.MouseWheelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseWheel(class System.Windows.Input.MouseWheelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseWheel (e As MouseWheelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseWheel(System::Windows::Input::MouseWheelEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseWheelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="e4044-326">Os argumentos do botão de rolagem do mouse associados a este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-326">The mouse wheel arguments that are associated with this event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4044-327">É chamado quando um evento <see cref="E:System.Windows.UIElement.MouseWheel" /> é roteado para esta classe (ou para uma classe que herda desta classe).</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-327">Is called when a <see cref="E:System.Windows.UIElement.MouseWheel" /> event is routed to this class (or to a class that inherits from this class).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4044-328">O <xref:System.Windows.UIElement.MouseWheel> evento ocorre quando a roda do mouse é revertida.</span><span class="sxs-lookup"><span data-stu-id="e4044-328">The <xref:System.Windows.UIElement.MouseWheel> event occurs when the mouse wheel is rolled.</span></span>  
  
 <span data-ttu-id="e4044-329">Substitui <xref:System.Windows.UIElement.OnMouseWheel%2A>.</span><span class="sxs-lookup"><span data-stu-id="e4044-329">Overrides <xref:System.Windows.UIElement.OnMouseWheel%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnPreviewKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreviewKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPreviewKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPreviewKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="e4044-330">Os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-330">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4044-331">Chamado durante o <see cref="E:System.Windows.UIElement.KeyDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-331">Called when the <see cref="E:System.Windows.UIElement.KeyDown" /> occurs.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnQueryContinueDrag">
      <MemberSignature Language="C#" Value="protected override void OnQueryContinueDrag (System.Windows.QueryContinueDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnQueryContinueDrag(class System.Windows.QueryContinueDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnQueryContinueDrag (e As QueryContinueDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnQueryContinueDrag(System::Windows::QueryContinueDragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.QueryContinueDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="e4044-332">Fornece dados sobre o evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-332">Provides data about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4044-333">Invocado sempre que um evento roteado anexado <see cref="E:System.Windows.DragDrop.QueryContinueDrag" /> sem tratamento acessa um elemento derivado desta classe em sua rota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-333">Invoked whenever an unhandled <see cref="E:System.Windows.DragDrop.QueryContinueDrag" /> attached  routed event reaches an element derived from this class in its route.</span>
          </span>
          <span data-ttu-id="e4044-334">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-334">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4044-335">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="e4044-335">This method has no default implementation.</span></span> <span data-ttu-id="e4044-336">Ainda é recomendável chamar base() em sua implementação, no caso de uma classe intermediária na herança implementado esse método.</span><span class="sxs-lookup"><span data-stu-id="e4044-336">Calling base() in your implementation is still recommended, in case an intermediate class in the inheritance implemented this method.</span></span> <span data-ttu-id="e4044-337">Você pode chamar base() antes ou depois do tratamento especial, dependendo dos seus requisitos.</span><span class="sxs-lookup"><span data-stu-id="e4044-337">You may call base() either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="e4044-338">O objetivo deste método é semelhante a [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: ele permite que você manipule o evento correspondente de classes derivadas usando um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="e4044-338">The purpose of this method is somewhat similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: it lets you handle the matching event from derived classes by using a class handler instead of an instance handler.</span></span> <span data-ttu-id="e4044-339">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="e4044-339">In this case, the matching event is a routed event.</span></span> <span data-ttu-id="e4044-340">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque o evento roteado pode ter sido gerado por um elemento filho, que não é necessariamente o elemento que invoca manipuladores.</span><span class="sxs-lookup"><span data-stu-id="e4044-340">The implementation pattern of the On\* methods is different for routed events because the routed event may have been raised by a child element, which is not necessarily the element that invokes handlers.</span></span> <span data-ttu-id="e4044-341">Portanto, sua implementação precisa consideram o evento propriedades da fonte dos argumentos (e não deve tentar gerar novamente o evento na maioria dos casos).</span><span class="sxs-lookup"><span data-stu-id="e4044-341">Therefore, your implementation needs to take the event arguments' source properties into account (and should not try to re-raise the event in most cases).</span></span> <span data-ttu-id="e4044-342">As subclasses de <xref:System.Windows.Controls.Primitives.TextBoxBase> pode optar por chamar os métodos do manipulador de classe privada quando o evento é recebido na rota.</span><span class="sxs-lookup"><span data-stu-id="e4044-342">Subclasses of <xref:System.Windows.Controls.Primitives.TextBoxBase> can choose to call private class handler methods when the event is received along the route.</span></span> <span data-ttu-id="e4044-343">É um cenário levar os argumentos do evento e marcar o evento como manipulado.</span><span class="sxs-lookup"><span data-stu-id="e4044-343">One scenario is to take the arguments of the event and mark the event as handled.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnQueryCursor">
      <MemberSignature Language="C#" Value="protected override void OnQueryCursor (System.Windows.Input.QueryCursorEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnQueryCursor(class System.Windows.Input.QueryCursorEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnQueryCursor (e As QueryCursorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnQueryCursor(System::Windows::Input::QueryCursorEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.QueryCursorEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="e4044-344">Fornece dados sobre o evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-344">Provides data about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4044-345">Invocado sempre que um evento roteado anexado <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> sem tratamento acessa um elemento derivado desta classe em sua rota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-345">Invoked whenever an unhandled <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> attached routed event reaches an element derived from this class in its route.</span>
          </span>
          <span data-ttu-id="e4044-346">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-346">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectionChanged (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectionChanged(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnSelectionChanged(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectionChanged (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectionChanged(System::Windows::RoutedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="e4044-347">Os argumentos associados ao evento <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-347">The arguments that are associated with the <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4044-348">É chamado quando o cursor ou a seleção atual muda de posição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-348">Is called when the caret or current selection changes position.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4044-349">Este método gera uma <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged> eventos.</span><span class="sxs-lookup"><span data-stu-id="e4044-349">This method raises a <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTemplateChanged">
      <MemberSignature Language="C#" Value="protected override void OnTemplateChanged (System.Windows.Controls.ControlTemplate oldTemplate, System.Windows.Controls.ControlTemplate newTemplate);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTemplateChanged(class System.Windows.Controls.ControlTemplate oldTemplate, class System.Windows.Controls.ControlTemplate newTemplate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnTemplateChanged(System.Windows.Controls.ControlTemplate,System.Windows.Controls.ControlTemplate)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnTemplateChanged (oldTemplate As ControlTemplate, newTemplate As ControlTemplate)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnTemplateChanged(System::Windows::Controls::ControlTemplate ^ oldTemplate, System::Windows::Controls::ControlTemplate ^ newTemplate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldTemplate" Type="System.Windows.Controls.ControlTemplate" />
        <Parameter Name="newTemplate" Type="System.Windows.Controls.ControlTemplate" />
      </Parameters>
      <Docs>
        <param name="oldTemplate">
          <span data-ttu-id="e4044-350">Um objeto <see cref="T:System.Windows.Controls.ControlTemplate" /> que especifica o modelo de controle que está ativo no momento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-350">A <see cref="T:System.Windows.Controls.ControlTemplate" /> object that specifies the control template that is currently active.</span>
          </span>
        </param>
        <param name="newTemplate">
          <span data-ttu-id="e4044-351">Um objeto <see cref="T:System.Windows.Controls.ControlTemplate" /> que especifica um novo modelo de controle a ser usado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-351">A <see cref="T:System.Windows.Controls.ControlTemplate" /> object that specifies a new control template to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4044-352">É chamado quando o modelo de controle é alterado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-352">Is called when the control template changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4044-353">Substitui <xref:System.Windows.Controls.Control.OnTemplateChanged%2A>.</span><span class="sxs-lookup"><span data-stu-id="e4044-353">Overrides <xref:System.Windows.Controls.Control.OnTemplateChanged%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTextChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnTextChanged (System.Windows.Controls.TextChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTextChanged(class System.Windows.Controls.TextChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnTextChanged(System.Windows.Controls.TextChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTextChanged (e As TextChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTextChanged(System::Windows::Controls::TextChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.TextChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="e4044-354">Os argumentos associados ao evento <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-354">The arguments that are associated with the <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4044-355">É chamado quando o conteúdo desse controle de edição é alterado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-355">Is called when content in this editing control changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4044-356">Este método gera uma <xref:System.Windows.Controls.Primitives.TextBoxBase.TextChanged> eventos.</span><span class="sxs-lookup"><span data-stu-id="e4044-356">This method raises a <xref:System.Windows.Controls.Primitives.TextBoxBase.TextChanged> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTextInput">
      <MemberSignature Language="C#" Value="protected override void OnTextInput (System.Windows.Input.TextCompositionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTextInput(class System.Windows.Input.TextCompositionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnTextInput (e As TextCompositionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnTextInput(System::Windows::Input::TextCompositionEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TextCompositionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="e4044-357">Fornece dados sobre o evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-357">Provides data about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4044-358">Invocado sempre que um evento roteado anexado <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> sem tratamento acessa um elemento derivado desta classe em sua rota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-358">Invoked whenever an unhandled <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> attached routed event reaches an element derived from this class in its route.</span>
          </span>
          <span data-ttu-id="e4044-359">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-359">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PageDown">
      <MemberSignature Language="C#" Value="public void PageDown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PageDown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.PageDown" />
      <MemberSignature Language="VB.NET" Value="Public Sub PageDown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PageDown();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e4044-360">Rola o conteúdo do controle para baixo em uma página.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-360">Scrolls the contents of the control down by one page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e4044-361">O exemplo a seguir demonstra como usar o <xref:System.Windows.Controls.Primitives.TextBoxBase.PageDown%2A> método para rolar o conteúdo de um <xref:System.Windows.Controls.TextBox> controle.</span><span class="sxs-lookup"><span data-stu-id="e4044-361">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.PageDown%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase17](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase17)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase17](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageLeft" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageRight" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageUp" />
      </Docs>
    </Member>
    <Member MemberName="PageLeft">
      <MemberSignature Language="C#" Value="public void PageLeft ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PageLeft() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.PageLeft" />
      <MemberSignature Language="VB.NET" Value="Public Sub PageLeft ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PageLeft();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e4044-362">Rola o conteúdo do controle para a esquerda em uma página.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-362">Scrolls the contents of the control to the left by one page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e4044-363">O exemplo a seguir demonstra como usar o <xref:System.Windows.Controls.Primitives.TextBoxBase.PageLeft%2A> método para rolar o conteúdo de um <xref:System.Windows.Controls.TextBox> controle.</span><span class="sxs-lookup"><span data-stu-id="e4044-363">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.PageLeft%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase18](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase18)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase18](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase18)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageDown" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageRight" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageUp" />
      </Docs>
    </Member>
    <Member MemberName="PageRight">
      <MemberSignature Language="C#" Value="public void PageRight ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PageRight() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.PageRight" />
      <MemberSignature Language="VB.NET" Value="Public Sub PageRight ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PageRight();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e4044-364">Rola o conteúdo do controle para a direita em uma página.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-364">Scrolls the contents of the control to the right by one page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e4044-365">O exemplo a seguir demonstra como usar o <xref:System.Windows.Controls.Primitives.TextBoxBase.PageRight%2A> método para rolar o conteúdo de um <xref:System.Windows.Controls.TextBox> controle.</span><span class="sxs-lookup"><span data-stu-id="e4044-365">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.PageRight%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase19](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase19)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase19](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase19)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageLeft" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageDown" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageUp" />
      </Docs>
    </Member>
    <Member MemberName="PageUp">
      <MemberSignature Language="C#" Value="public void PageUp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PageUp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.PageUp" />
      <MemberSignature Language="VB.NET" Value="Public Sub PageUp ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PageUp();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e4044-366">Rola o conteúdo do controle para cima em uma página.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-366">Scrolls the contents of the control up by one page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e4044-367">O exemplo a seguir demonstra como usar o <xref:System.Windows.Controls.Primitives.TextBoxBase.PageUp%2A> método para rolar o conteúdo de um <xref:System.Windows.Controls.TextBox> controle.</span><span class="sxs-lookup"><span data-stu-id="e4044-367">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.PageUp%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase20](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase20)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase20](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageLeft" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageRight" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageDown" />
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public void Paste ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Paste() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.Paste" />
      <MemberSignature Language="VB.NET" Value="Public Sub Paste ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Paste();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e4044-368">Cola o conteúdo da Área de Transferência sobre a seleção atual no controle de edição de texto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-368">Pastes the contents of the Clipboard over the current selection in the text editing control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e4044-369">O exemplo a seguir demonstra como usar o <xref:System.Windows.Controls.Primitives.TextBoxBase.Paste%2A> método para colar o conteúdo selecionado em um <xref:System.Windows.Controls.TextBox> controle.</span><span class="sxs-lookup"><span data-stu-id="e4044-369">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.Paste%2A> method to paste selected content into a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase6](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase6)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Cut" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Copy" />
      </Docs>
    </Member>
    <Member MemberName="Redo">
      <MemberSignature Language="C#" Value="public bool Redo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Redo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.Redo" />
      <MemberSignature Language="VB.NET" Value="Public Function Redo () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Redo();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e4044-370">Desfaz o comando Desfazer mais recente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-370">Undoes the most recent undo command.</span>
          </span>
          <span data-ttu-id="e4044-371">Em outras palavras, refaz a unidade de desfazer mais recente na pilha de desfazer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-371">In other words, redoes the most recent undo unit on the undo stack.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e4044-372">
            <see langword="true" /> se a operação de refazer foi bem-sucedida; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-372">
              <see langword="true" /> if the redo operation was successful; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="e4044-373">Este método retorna <see langword="false" /> se não há nenhum comando Desfazer disponível (a pilha de desfazer está vazia).</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-373">This method returns <see langword="false" /> if there is no undo command available (the undo stack is empty).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e4044-374">O exemplo a seguir demonstra como usar o <xref:System.Windows.Controls.Primitives.TextBoxBase.Redo%2A> método.</span><span class="sxs-lookup"><span data-stu-id="e4044-374">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.Redo%2A> method.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase9](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase9)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LockCurrentUndoUnit" />
      </Docs>
    </Member>
    <Member MemberName="ScrollToEnd">
      <MemberSignature Language="C#" Value="public void ScrollToEnd ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScrollToEnd() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToEnd" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScrollToEnd ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScrollToEnd();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e4044-375">Rola a exibição do controle de edição para o final do conteúdo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-375">Scrolls the view of the editing control to the end of the content.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e4044-376">O exemplo a seguir demonstra como usar o <xref:System.Windows.Controls.Primitives.TextBoxBase.ScrollToEnd%2A> método para rolar o conteúdo de um <xref:System.Windows.Controls.TextBox> controle.</span><span class="sxs-lookup"><span data-stu-id="e4044-376">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.ScrollToEnd%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase22](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase22)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase22](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase22)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHome" />
      </Docs>
    </Member>
    <Member MemberName="ScrollToHome">
      <MemberSignature Language="C#" Value="public void ScrollToHome ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScrollToHome() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHome" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScrollToHome ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScrollToHome();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e4044-377">Rola a exibição de controle de edição para o início do visor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-377">Scrolls the view of the editing control to the beginning of the viewport.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e4044-378">O exemplo a seguir demonstra como usar o <xref:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHome%2A> método para rolar o conteúdo de um <xref:System.Windows.Controls.TextBox> controle.</span><span class="sxs-lookup"><span data-stu-id="e4044-378">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHome%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase21](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase21)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase21](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToEnd" />
      </Docs>
    </Member>
    <Member MemberName="ScrollToHorizontalOffset">
      <MemberSignature Language="C#" Value="public void ScrollToHorizontalOffset (double offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScrollToHorizontalOffset(float64 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHorizontalOffset(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScrollToHorizontalOffset (offset As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScrollToHorizontalOffset(double offset);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="e4044-379">Um valor duplo que especifica o deslocamento horizontal até o qual rolar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-379">A double value that specifies the horizontal offset to scroll to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4044-380">Rola o conteúdo do controle de edição para o deslocamento horizontal especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-380">Scrolls the contents of the editing control to the specified horizontal offset.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToVerticalOffset(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="ScrollToVerticalOffset">
      <MemberSignature Language="C#" Value="public void ScrollToVerticalOffset (double offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScrollToVerticalOffset(float64 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToVerticalOffset(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScrollToVerticalOffset (offset As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScrollToVerticalOffset(double offset);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="e4044-381">Um valor duplo que especifica o deslocamento vertical para rolagem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-381">A double value that specifies the vertical offset to scroll to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4044-382">Rola o conteúdo do controle de edição para o deslocamento vertical especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-382">Scrolls the contents of the editing control to the specified vertical offset.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHorizontalOffset(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="SelectAll">
      <MemberSignature Language="C#" Value="public void SelectAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.SelectAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e4044-383">Seleciona todo o conteúdo do controle de edição do texto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-383">Selects all the contents of the text editing control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e4044-384">O exemplo a seguir demonstra como usar o <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectAll%2A> método para selecionar todo o conteúdo de um <xref:System.Windows.Controls.TextBox> controle.</span><span class="sxs-lookup"><span data-stu-id="e4044-384">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectAll%2A> method to select all the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase7](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase7)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionBrush">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush SelectionBrush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush SelectionBrush" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionBrush As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Brush ^ SelectionBrush { System::Windows::Media::Brush ^ get(); void set(System::Windows::Media::Brush ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e4044-385">Obtém ou define o pincel que realça o texto selecionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-385">Gets or sets the brush that highlights selected text.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e4044-386">O pincel que realça o texto selecionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-386">The brush that highlights selected text.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4044-387">Você pode especificar o pincel que destaca o texto selecionado, definindo o <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> e <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> propriedades.</span><span class="sxs-lookup"><span data-stu-id="e4044-387">You can specify the brush that highlights selected text by setting the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> and <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> properties.</span></span> <span data-ttu-id="e4044-388">O <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> propriedade especifica a opacidade do <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A>.</span><span class="sxs-lookup"><span data-stu-id="e4044-388">The <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> property specifies the opacity of the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4044-389">O exemplo a seguir cria um <xref:System.Windows.Controls.TextBox> e adiciona o texto "Este é o texto".</span><span class="sxs-lookup"><span data-stu-id="e4044-389">The following example creates a <xref:System.Windows.Controls.TextBox> and adds the text, "This is some text."</span></span> <span data-ttu-id="e4044-390">O exemplo define o <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> propriedade para vermelho e <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> propriedade como 0,5 para personalizar a aparência do texto selecionado.</span><span class="sxs-lookup"><span data-stu-id="e4044-390">The example sets the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> property to red and the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> property to 0.5 to customize the appearance of selected text.</span></span>  
  
 [!code-xaml[TextBaseSelectionBrush#TextBox](~/samples/snippets/csharp/VS_Snippets_Wpf/textbaseselectionbrush/CS/window1.xaml#textbox)]   
  
 <span data-ttu-id="e4044-391">A ilustração a seguir mostra o <xref:System.Windows.Controls.TextBox> do exemplo anterior com o texto selecionado.</span><span class="sxs-lookup"><span data-stu-id="e4044-391">The following illustration shows the <xref:System.Windows.Controls.TextBox> from the preceding example with its text selected.</span></span>  
  
 <span data-ttu-id="e4044-392">![Caixa de texto com um CaretBrush vermelho](~/add/media/textboxselectionbrush.png "caixa de texto com um CaretBrush vermelho")</span><span class="sxs-lookup"><span data-stu-id="e4044-392">![TextBox with a red SelectionBrush](~/add/media/textboxselectionbrush.png "TextBox with a red SelectionBrush")</span></span>  
<span data-ttu-id="e4044-393">O texto selecionado em uma caixa de texto com CaretBrush definido como vermelho</span><span class="sxs-lookup"><span data-stu-id="e4044-393">Selected text in a TextBox with SelectionBrush set to red</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionBrushProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectionBrushProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectionBrushProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrushProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectionBrushProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SelectionBrushProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e4044-394">Identifica a propriedade de dependência <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-394">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler SelectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler SelectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectionChanged As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ SelectionChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e4044-395">Ocorre quando a seleção de texto é alterada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-395">Occurs when the text selection has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_SelectionChanged"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="e4044-396">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="e4044-396">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="e4044-397">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="e4044-397">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionChangedEvent>|  
|<span data-ttu-id="e4044-398">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="e4044-398">Routing strategy</span></span>|<span data-ttu-id="e4044-399">Bolha</span><span class="sxs-lookup"><span data-stu-id="e4044-399">Bubbling</span></span>|  
|<span data-ttu-id="e4044-400">delegado</span><span class="sxs-lookup"><span data-stu-id="e4044-400">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="e4044-401">O exemplo a seguir demonstra como tratar o <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged> evento por meio de código.</span><span class="sxs-lookup"><span data-stu-id="e4044-401">The following example demonstrates how to handle the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged> event by using code.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase10](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase10)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent SelectionChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent SelectionChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.SelectionChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectionChangedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ SelectionChangedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e4044-402">Identifica o evento roteado <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-402">Identifies the <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged" />
      </Docs>
    </Member>
    <Member MemberName="SelectionOpacity">
      <MemberSignature Language="C#" Value="public double SelectionOpacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SelectionOpacity" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionOpacity As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double SelectionOpacity { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e4044-403">Obtém ou define a opacidade do <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-403">Gets or sets the opacity of the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e4044-404">A opacidade do <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-404">The opacity of the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" />.</span>
          </span>
          <span data-ttu-id="e4044-405">O padrão é 0,4.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-405">The default is 0.4.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4044-406">Se <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> é definido como 0, o <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> é transparente e não fica visível.</span><span class="sxs-lookup"><span data-stu-id="e4044-406">If <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> is set to 0, the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> is transparent and is not visible.</span></span> <span data-ttu-id="e4044-407">Se <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> é definido como 1.0 ou maior, o <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> é opaco e selecionado texto não estiver visível.</span><span class="sxs-lookup"><span data-stu-id="e4044-407">If <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> is set to 1.0 or greater, the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> is opaque and the selected text is not visible.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4044-408">O exemplo a seguir cria um <xref:System.Windows.Controls.TextBox> e adiciona o texto "Este é o texto".</span><span class="sxs-lookup"><span data-stu-id="e4044-408">The following example creates a <xref:System.Windows.Controls.TextBox> and adds the text, "This is some text."</span></span> <span data-ttu-id="e4044-409">O exemplo define o <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> propriedade para vermelho e <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> propriedade como 0,5 para personalizar a aparência do texto selecionado.</span><span class="sxs-lookup"><span data-stu-id="e4044-409">The example sets the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> property to red and the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> property to 0.5 to customize the appearance of selected text.</span></span>  
  
 [!code-xaml[TextBaseSelectionBrush#TextBox](~/samples/snippets/csharp/VS_Snippets_Wpf/textbaseselectionbrush/CS/window1.xaml#textbox)]   
  
 <span data-ttu-id="e4044-410">A ilustração a seguir mostra o <xref:System.Windows.Controls.TextBox> do exemplo anterior com o texto selecionado.</span><span class="sxs-lookup"><span data-stu-id="e4044-410">The following illustration shows the <xref:System.Windows.Controls.TextBox> from the preceding example with its text selected.</span></span>  
  
 <span data-ttu-id="e4044-411">![Caixa de texto com um CaretBrush vermelho](~/add/media/textboxselectionbrush.png "caixa de texto com um CaretBrush vermelho")</span><span class="sxs-lookup"><span data-stu-id="e4044-411">![TextBox with a red SelectionBrush](~/add/media/textboxselectionbrush.png "TextBox with a red SelectionBrush")</span></span>  
<span data-ttu-id="e4044-412">Texto selecionado em uma caixa de texto com SelectionOpacity definido como 0,5</span><span class="sxs-lookup"><span data-stu-id="e4044-412">Selected text in a TextBox with SelectionOpacity set to 0.5</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionOpacityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectionOpacityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectionOpacityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacityProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectionOpacityProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SelectionOpacityProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e4044-413">Identifica a propriedade de dependência <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-413">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpellCheck">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.SpellCheck SpellCheck { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.SpellCheck SpellCheck" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.SpellCheck" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SpellCheck As SpellCheck" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::SpellCheck ^ SpellCheck { System::Windows::Controls::SpellCheck ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.SpellCheck</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e4044-414">Obtém um objeto <see cref="T:System.Windows.Controls.SpellCheck" /> que fornece acesso aos erros de ortografia no conteúdo de texto de uma <see cref="T:System.Windows.Controls.Primitives.TextBoxBase" /> ou <see cref="T:System.Windows.Controls.RichTextBox" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-414">Gets a <see cref="T:System.Windows.Controls.SpellCheck" /> object that provides access to spelling errors in the text contents of a <see cref="T:System.Windows.Controls.Primitives.TextBoxBase" /> or <see cref="T:System.Windows.Controls.RichTextBox" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e4044-415">Um <see cref="T:System.Windows.Controls.SpellCheck" /> objeto que fornece acesso aos erros de ortografia o conteúdo de texto de um <see cref="T:System.Windows.Controls.Primitives.TextBoxBase" /> ou <see cref="T:System.Windows.Controls.RichTextBox" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-415">A <see cref="T:System.Windows.Controls.SpellCheck" /> object that provides access to spelling errors in the text contents of a <see cref="T:System.Windows.Controls.Primitives.TextBoxBase" /> or <see cref="T:System.Windows.Controls.RichTextBox" />.</span>
          </span>
          <span data-ttu-id="e4044-416">Esta propriedade não tem valor padrão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-416">This property has no default value.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Controls.SpellingError" />
        <altmember cref="T:System.Windows.Controls.SpellingReform" />
        <altmember cref="T:System.Windows.Controls.SpellCheck" />
      </Docs>
    </Member>
    <Member MemberName="TextChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.TextChangedEventHandler TextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.TextChangedEventHandler TextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextChanged As TextChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Controls::TextChangedEventHandler ^ TextChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.TextChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e4044-417">Ocorre quando o conteúdo é alterado no elemento de texto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-417">Occurs when content changes in the text element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4044-418">Para uma <xref:System.Windows.Controls.TextBox>, esse evento ocorre quando o texto é alterado; para um <xref:System.Windows.Controls.RichTextBox>, esse evento ocorre quando qualquer conteúdo ou formatação de alterações (por exemplo, imagens, tabela ou a cor do plano de fundo).</span><span class="sxs-lookup"><span data-stu-id="e4044-418">For a <xref:System.Windows.Controls.TextBox>, this event occurs when its text changes; for a <xref:System.Windows.Controls.RichTextBox>, this event occurs when any content or formatting changes (for example, images, table, or background color).</span></span>  
  
<a name="routedEventInfo_TextChanged"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="e4044-419">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="e4044-419">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="e4044-420">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="e4044-420">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.TextChangedEvent>|  
|<span data-ttu-id="e4044-421">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="e4044-421">Routing strategy</span></span>|<span data-ttu-id="e4044-422">Bolha</span><span class="sxs-lookup"><span data-stu-id="e4044-422">Bubbling</span></span>|  
|<span data-ttu-id="e4044-423">delegado</span><span class="sxs-lookup"><span data-stu-id="e4044-423">Delegate</span></span>|<xref:System.Windows.Controls.TextChangedEventHandler>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.TextChangedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="TextChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TextChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TextChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.TextChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextChangedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TextChangedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e4044-424">Identifica o evento roteado <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-424">Identifies the <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" />
      </Docs>
    </Member>
    <Member MemberName="Undo">
      <MemberSignature Language="C#" Value="public bool Undo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Undo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
      <MemberSignature Language="VB.NET" Value="Public Function Undo () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Undo();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e4044-425">Desfaz o comando Desfazer mais recente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-425">Undoes the most recent undo command.</span>
          </span>
          <span data-ttu-id="e4044-426">Em outras palavras, desfaz a unidade de desfazer mais recente na pilha de desfazer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-426">In other words, undoes the most recent undo unit on the undo stack.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e4044-427">
            <see langword="true" /> se a operação de desfazer foi bem-sucedida; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-427">
              <see langword="true" /> if the undo operation was successful; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="e4044-428">Este método retorna <see langword="false" /> se a pilha de desfazer está vazia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-428">This method returns <see langword="false" /> if the undo stack is empty.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e4044-429">O exemplo a seguir demonstra como usar o <xref:System.Windows.Controls.Primitives.TextBoxBase.Undo%2A> método.</span><span class="sxs-lookup"><span data-stu-id="e4044-429">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.Undo%2A> method.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase8](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase8)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Redo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LockCurrentUndoUnit" />
      </Docs>
    </Member>
    <Member MemberName="UndoLimit">
      <MemberSignature Language="C#" Value="public int UndoLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 UndoLimit" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit" />
      <MemberSignature Language="VB.NET" Value="Public Property UndoLimit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int UndoLimit { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e4044-430">Obtém ou define o número de ações armazenadas na fila de desfazer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-430">Gets or sets the number of actions stored in the undo queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e4044-431">O número de ações armazenada na fila de desfazer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-431">The number of actions stored in the undo queue.</span>
          </span>
          <span data-ttu-id="e4044-432">O padrão é -1, que significa que a fila de desfazer está limitada a memória disponível.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-432">The default is –1, which means the undo queue is limited to the memory that is available.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4044-433">Configuração <xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit%2A> limpará a fila de desfazer.</span><span class="sxs-lookup"><span data-stu-id="e4044-433">Setting <xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit%2A> clears the undo queue.</span></span> <span data-ttu-id="e4044-434">Quando <xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit%2A> é definido com-1, a fila de desfazer é limitada apenas pela memória disponível.</span><span class="sxs-lookup"><span data-stu-id="e4044-434">When <xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit%2A> is set to –1, the undo queue is limited only by the memory that is available.</span></span> <span data-ttu-id="e4044-435">Quando <xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit%2A> é definido como 0, desfazer está desabilitado no <xref:System.Windows.Controls.Primitives.TextBoxBase>.</span><span class="sxs-lookup"><span data-stu-id="e4044-435">When <xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit%2A> is set to 0, undo is disabled on the <xref:System.Windows.Controls.Primitives.TextBoxBase>.</span></span>  
  
 <span data-ttu-id="e4044-436"><xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit%2A> é introduzido no .NET Framework versão 3.5.</span><span class="sxs-lookup"><span data-stu-id="e4044-436"><xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="e4044-437">Para saber mais, confira [Versões e dependências](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="e4044-437">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e4044-438">
            <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit" /> é definida após a chamada a <see cref="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange" /> e antes da chamada a <see cref="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-438">
              <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit" /> is set after calling <see cref="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange" /> and before calling <see cref="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="UndoLimitProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty UndoLimitProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty UndoLimitProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.UndoLimitProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UndoLimitProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ UndoLimitProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e4044-439">Identifica a propriedade de dependência <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-439">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit" /> dependency property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4044-440"><xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimitProperty> é introduzido no .NET Framework versão 3.5.</span><span class="sxs-lookup"><span data-stu-id="e4044-440"><xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimitProperty> is introduced in the .NET Framework version 3.5.</span></span> <span data-ttu-id="e4044-441">Para obter mais informações, consulte[versões e dependências](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="e4044-441">For more information, see[Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalOffset">
      <MemberSignature Language="C#" Value="public double VerticalOffset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 VerticalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalOffset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VerticalOffset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double VerticalOffset { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e4044-442">Obtém ou define a posição de rolagem vertical.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-442">Gets or sets the vertical scroll position.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e4044-443">Um valor de ponto flutuante que especifica a posição de rolagem vertical, em [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-443">A floating-point value that specifies the vertical scroll position, in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span>
          </span>
          <span data-ttu-id="e4044-444">A definição dessa propriedade faz com que o texto para rolar até o deslocamento vertical especificado do controle de edição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-444">Setting this property causes the text editing control to scroll to the specified vertical offset.</span>
          </span>
          <span data-ttu-id="e4044-445">Ler esta propriedade retorna o deslocamento vertical atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-445">Reading this property returns the current vertical offset.</span>
          </span>
          <span data-ttu-id="e4044-446">O valor dessa propriedade é 0.0 se o controle de edição de texto não estiver configurado para dar suporte a rolagem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-446">The value of this property is 0.0 if the text editing control is not configured to support scrolling.</span>
          </span>
          <span data-ttu-id="e4044-447">Esta propriedade não tem valor padrão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-447">This property has no default value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4044-448">O deslocamento vertical é medido da parte superior da área de texto visível.</span><span class="sxs-lookup"><span data-stu-id="e4044-448">The vertical offset is measured from the top of the visible text area.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4044-449">O exemplo a seguir demonstra como ler o valor de <xref:System.Windows.Controls.Primitives.TextBoxBase.VerticalOffset%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="e4044-449">The following example demonstrates how to read the value of the <xref:System.Windows.Controls.Primitives.TextBoxBase.VerticalOffset%2A> property.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase3)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e4044-450">É feita uma tentativa de definir essa propriedade com um valor negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-450">An attempt is made to set this property to a negative value.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalOffset" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToEnd" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHome" />
      </Docs>
    </Member>
    <Member MemberName="VerticalScrollBarVisibility">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ScrollBarVisibility VerticalScrollBarVisibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.ScrollBarVisibility VerticalScrollBarVisibility" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />
      <MemberSignature Language="VB.NET" Value="Public Property VerticalScrollBarVisibility As ScrollBarVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ScrollBarVisibility VerticalScrollBarVisibility { System::Windows::Controls::ScrollBarVisibility get(); void set(System::Windows::Controls::ScrollBarVisibility value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ScrollBarVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e4044-451">Obtém ou define um valor que indica se uma barra de rolagem vertical é mostrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-451">Gets or sets a value that indicates whether a vertical scroll bar is shown.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e4044-452">Um valor que é definido pela enumeração <see cref="T:System.Windows.Controls.ScrollBarVisibility" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-452">A value that is defined by the <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> enumeration.</span>
          </span>
          <span data-ttu-id="e4044-453">O valor padrão é <see cref="F:System.Windows.Visibility.Hidden" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-453">The default value is <see cref="F:System.Windows.Visibility.Hidden" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_VerticalScrollBarVisibility"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="e4044-454">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="e4044-454">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="e4044-455">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="e4044-455">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibilityProperty>|  
|<span data-ttu-id="e4044-456">Propriedades de metadados é definido como `true`</span><span class="sxs-lookup"><span data-stu-id="e4044-456">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn" />
        <altmember cref="P:System.Windows.Controls.TextBox.TextWrapping" />
        <altmember cref="T:System.Windows.Controls.ScrollBarVisibility" />
      </Docs>
    </Member>
    <Member MemberName="VerticalScrollBarVisibilityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty VerticalScrollBarVisibilityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty VerticalScrollBarVisibilityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibilityProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly VerticalScrollBarVisibilityProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ VerticalScrollBarVisibilityProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e4044-457">Identifica a propriedade de dependência <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-457">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewportHeight">
      <MemberSignature Language="C#" Value="public double ViewportHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ViewportHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.ViewportHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ViewportHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double ViewportHeight { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e4044-458">Obtém o tamanho vertical da área de conteúdo rolável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-458">Gets the vertical size of the scrollable content area.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e4044-459">Um valor de ponto flutuante que especifica o tamanho vertical da área de conteúdo rolável, em [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-459">A floating-point value that specifies the vertical size of the scrollable content area, in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span>
          </span>
          <span data-ttu-id="e4044-460">O valor dessa propriedade é 0.0 se o controle de edição de texto não estiver configurado para dar suporte a rolagem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-460">The value of this property is 0.0 if the text editing control is not configured to support scrolling.</span>
          </span>
          <span data-ttu-id="e4044-461">Esta propriedade não tem valor padrão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-461">This property has no default value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e4044-462">O exemplo a seguir demonstra como ler o valor de <xref:System.Windows.Controls.Primitives.TextBoxBase.ViewportHeight%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="e4044-462">The following example demonstrates how to read the value of the <xref:System.Windows.Controls.Primitives.TextBoxBase.ViewportHeight%2A> property.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase3)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.ViewportWidth" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />
      </Docs>
    </Member>
    <Member MemberName="ViewportWidth">
      <MemberSignature Language="C#" Value="public double ViewportWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ViewportWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.ViewportWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ViewportWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double ViewportWidth { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e4044-463">Obtém o tamanho horizontal da área de conteúdo rolável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-463">Gets the horizontal size of the scrollable content area.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e4044-464">Um valor de ponto flutuante que especifica o tamanho horizontal da área de conteúdo rolável, em [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-464">A floating-point value that specifies the horizontal size of the scrollable content area, in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span>
          </span>
          <span data-ttu-id="e4044-465">O valor dessa propriedade é 0.0 se o controle de edição de texto não estiver configurado para dar suporte a rolagem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-465">The value of this property is 0.0 if the text editing control is not configured to support scrolling.</span>
          </span>
          <span data-ttu-id="e4044-466">Esta propriedade não tem valor padrão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4044-466">This property has no default value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e4044-467">O exemplo a seguir demonstra como ler o valor de <xref:System.Windows.Controls.Primitives.TextBoxBase.ViewportWidth%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="e4044-467">The following example demonstrates how to read the value of the <xref:System.Windows.Controls.Primitives.TextBoxBase.ViewportWidth%2A> property.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase3)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.ViewportWidth" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />
      </Docs>
    </Member>
  </Members>
</Type>