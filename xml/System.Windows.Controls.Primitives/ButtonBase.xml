<Type Name="ButtonBase" FullName="System.Windows.Controls.Primitives.ButtonBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="13e555cd2ed8ffe1e34cbc976d8ddc082c6bce0a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30619970" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ButtonBase : System.Windows.Controls.ContentControl, System.Windows.Input.ICommandSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract ButtonBase extends System.Windows.Controls.ContentControl implements class System.Windows.Input.ICommandSource" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Primitives.ButtonBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ButtonBase&#xA;Inherits ContentControl&#xA;Implements ICommandSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class ButtonBase abstract : System::Windows::Controls::ContentControl, System::Windows::Input::ICommandSource" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.ContentControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Input.ICommandSource</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Click")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Button)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="49e2c-101">Representa a classe base de todos os controles <see cref="T:System.Windows.Controls.Button" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="49e2c-101">Represents the base class for all <see cref="T:System.Windows.Controls.Button" /> controls.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49e2c-102">Manipular o <xref:System.Windows.Controls.Primitives.ButtonBase.Click> evento para responder quando o usuário clica em um <xref:System.Windows.Controls.Primitives.ButtonBase>.</span><span class="sxs-lookup"><span data-stu-id="49e2c-102">Handle the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event to respond when the user clicks a <xref:System.Windows.Controls.Primitives.ButtonBase>.</span></span> <span data-ttu-id="49e2c-103">O usuário pode gerar o <xref:System.Windows.Controls.Primitives.ButtonBase.Click> eventos usando um <xref:System.Windows.Controls.AccessText> ou pressionando ENTER ou a barra de espaços quando o controle tem foco.</span><span class="sxs-lookup"><span data-stu-id="49e2c-103">The user can raise the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event by using an <xref:System.Windows.Controls.AccessText> or by pressing ENTER or the SPACEBAR when the control has focus.</span></span>  <span data-ttu-id="49e2c-104">Quando o usuário pressiona a barra de espaços, os conjuntos de controle <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> para `true` e captura o mouse.</span><span class="sxs-lookup"><span data-stu-id="49e2c-104">When the user presses the SPACEBAR, the control sets <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> to `true` and captures the mouse.</span></span>  <span data-ttu-id="49e2c-105">Como resultado, o controle gera eventos de mouse como <xref:System.Windows.UIElement.MouseEnter> e <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>.</span><span class="sxs-lookup"><span data-stu-id="49e2c-105">As a result, the control will raise mouse events such as <xref:System.Windows.UIElement.MouseEnter> and <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>.</span></span> <span data-ttu-id="49e2c-106">Observe que o uso de <xref:System.Windows.Controls.AccessText> ou ENTER não alterar <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> ou captura o mouse, mas ele gere o <xref:System.Windows.Controls.Primitives.ButtonBase.Click> evento.</span><span class="sxs-lookup"><span data-stu-id="49e2c-106">Note that using the <xref:System.Windows.Controls.AccessText> or ENTER does not change <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> or capture the mouse, but it does raise the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 <span data-ttu-id="49e2c-107">O <xref:System.Windows.Controls.Primitives.ButtonBase> define o <xref:System.Windows.Input.KeyboardNavigation.AcceptsReturn%2A> anexado propriedade `true`.</span><span class="sxs-lookup"><span data-stu-id="49e2c-107">The <xref:System.Windows.Controls.Primitives.ButtonBase> sets the <xref:System.Windows.Input.KeyboardNavigation.AcceptsReturn%2A> attached property to `true`.</span></span>  
  
 <span data-ttu-id="49e2c-108">O <xref:System.Windows.Controls.Primitives.ButtonBase> define o <xref:System.Windows.UIElement.IsInputMethodEnabled%2A> propriedade `false`.</span><span class="sxs-lookup"><span data-stu-id="49e2c-108">The <xref:System.Windows.Controls.Primitives.ButtonBase> sets the <xref:System.Windows.UIElement.IsInputMethodEnabled%2A> property to `false`.</span></span>  
  
 <span data-ttu-id="49e2c-109">Um <xref:System.Windows.Controls.Primitives.ButtonBase> é um <xref:System.Windows.Controls.ContentControl>, que significa que ele pode conter um único objeto de qualquer tipo (como uma cadeia de caracteres, uma imagem ou um painel).</span><span class="sxs-lookup"><span data-stu-id="49e2c-109">A <xref:System.Windows.Controls.Primitives.ButtonBase> is a <xref:System.Windows.Controls.ContentControl>, which means that it can contain a single object of any type (such as a string, an image, or a panel).</span></span> <span data-ttu-id="49e2c-110">Para obter mais informações, consulte a classe <xref:System.Windows.Controls.ContentControl>.</span><span class="sxs-lookup"><span data-stu-id="49e2c-110">For more information, see the <xref:System.Windows.Controls.ContentControl> class.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ButtonBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ButtonBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="49e2c-111">Inicializa uma nova instância da classe <see cref="T:System.Windows.Controls.Primitives.ButtonBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49e2c-111">Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler Click" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Primitives.ButtonBase.Click" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Click As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ Click;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="49e2c-112">Ocorre quando um <see cref="T:System.Windows.Controls.Button" /> é clicado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49e2c-112">Occurs when a <see cref="T:System.Windows.Controls.Button" /> is clicked.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49e2c-113">O usuário pode gerar o <xref:System.Windows.Controls.Primitives.ButtonBase.Click> eventos usando um <xref:System.Windows.Controls.AccessText> ou pressionando ENTER ou a barra de espaços quando o controle tem foco.</span><span class="sxs-lookup"><span data-stu-id="49e2c-113">The user can raise the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event by using an <xref:System.Windows.Controls.AccessText> or by pressing ENTER or the SPACEBAR when the control has focus.</span></span>  <span data-ttu-id="49e2c-114">Quando o usuário pressiona a barra de espaços, os conjuntos de controle <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> para `true` e captura o mouse.</span><span class="sxs-lookup"><span data-stu-id="49e2c-114">When the user presses the SPACEBAR, the control sets <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> to `true` and captures the mouse.</span></span>  <span data-ttu-id="49e2c-115">Como resultado, o controle gera eventos de mouse como <xref:System.Windows.UIElement.MouseEnter> e <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>.</span><span class="sxs-lookup"><span data-stu-id="49e2c-115">As a result, the control will raise mouse events such as <xref:System.Windows.UIElement.MouseEnter> and <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>.</span></span> <span data-ttu-id="49e2c-116">Observe que o uso de <xref:System.Windows.Controls.AccessText> ou ENTER não alterar <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> ou captura o mouse, mas ele gere o <xref:System.Windows.Controls.Primitives.ButtonBase.Click> evento.</span><span class="sxs-lookup"><span data-stu-id="49e2c-116">Note that using the <xref:System.Windows.Controls.AccessText> or ENTER does not change <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> or capture the mouse, but it does raise the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 <span data-ttu-id="49e2c-117">O <xref:System.Windows.Controls.Primitives.ButtonBase> marcas a <xref:System.Windows.UIElement.MouseLeftButtonDown> eventos tratados no <xref:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown%2A> método e gera o <xref:System.Windows.Controls.Primitives.ButtonBase.Click> evento.</span><span class="sxs-lookup"><span data-stu-id="49e2c-117">The <xref:System.Windows.Controls.Primitives.ButtonBase> marks the <xref:System.Windows.UIElement.MouseLeftButtonDown> event as handled in the <xref:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown%2A> method and raises the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span> <span data-ttu-id="49e2c-118">Portanto, o <xref:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown%2A> evento nunca ocorrerá para um controle que herda de <xref:System.Windows.Controls.Primitives.ButtonBase>.</span><span class="sxs-lookup"><span data-stu-id="49e2c-118">Hence, the <xref:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown%2A> event will never occur for a control that inherits from <xref:System.Windows.Controls.Primitives.ButtonBase>.</span></span> <span data-ttu-id="49e2c-119">Em vez disso, anexe um manipulador de eventos para o <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> evento ou chamada <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> com `handledEventsToo` definido como `true`.</span><span class="sxs-lookup"><span data-stu-id="49e2c-119">Instead, attach an event handler to the <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> event, or call <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` set to `true`.</span></span>  
  
<a name="routedEventInfo_Click"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="49e2c-120">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="49e2c-120">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="49e2c-121">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="49e2c-121">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.ButtonBase.ClickEvent>|  
|<span data-ttu-id="49e2c-122">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="49e2c-122">Routing strategy</span></span>|<span data-ttu-id="49e2c-123">Bolha</span><span class="sxs-lookup"><span data-stu-id="49e2c-123">Bubbling</span></span>|  
|<span data-ttu-id="49e2c-124">delegado</span><span class="sxs-lookup"><span data-stu-id="49e2c-124">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="49e2c-125">O exemplo a seguir mostra três botões respondem a cliques de três maneiras diferentes.</span><span class="sxs-lookup"><span data-stu-id="49e2c-125">The following example shows three buttons that respond to clicks in three different ways.</span></span>  
  
-   <span data-ttu-id="49e2c-126">Passe - o primeiro botão altera cores quando o usuário passar o mouse sobre o botão</span><span class="sxs-lookup"><span data-stu-id="49e2c-126">Hover - the first button changes colors when the user hovers with the mouse over the button</span></span>  
  
-   <span data-ttu-id="49e2c-127">Pressione - o segundo botão requer que o mouse ser pressionado enquanto o ponteiro do mouse está no botão.</span><span class="sxs-lookup"><span data-stu-id="49e2c-127">Press - the second button requires that the mouse be pressed while the mouse pointer is in the button.</span></span>  
  
-   <span data-ttu-id="49e2c-128">Versão – a terceira não redefine a cor do plano de fundo dos botões até que o mouse é pressionado e solto no botão.</span><span class="sxs-lookup"><span data-stu-id="49e2c-128">Release - the third does not reset the background color of the buttons until the mouse is pressed and released in the button.</span></span>  
  
 [!code-xaml[ClickModes_snip#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ClickModes_snip/CSharp/Pane1.xaml#1)]  
  
 [!code-csharp[ClickModes_snip#2](~/samples/snippets/csharp/VS_Snippets_Wpf/ClickModes_snip/CSharp/Pane1.xaml.cs#2)]
 [!code-vb[ClickModes_snip#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ClickModes_snip/VisualBasic/Window1.xaml.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClickEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ClickEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ClickEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ButtonBase.ClickEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClickEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ClickEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="49e2c-129">Identifica o evento roteado <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49e2c-129">Identifies the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49e2c-130">Esse evento corresponde a um clique de botão esquerdo do mouse.</span><span class="sxs-lookup"><span data-stu-id="49e2c-130">This event corresponds to a left mouse button click.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClickMode">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ClickMode ClickMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.ClickMode ClickMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ClickMode As ClickMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ClickMode ClickMode { System::Windows::Controls::ClickMode get(); void set(System::Windows::Controls::ClickMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ClickMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="49e2c-131">Obtém ou define quando o evento <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> ocorre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49e2c-131">Gets or sets when the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> event occurs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="49e2c-132">Quando o evento <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> ocorre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49e2c-132">When the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> event occurs.</span>
          </span>
          <span data-ttu-id="49e2c-133">O valor padrão é <see cref="F:System.Windows.Controls.ClickMode.Release" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49e2c-133">The default value is <see cref="F:System.Windows.Controls.ClickMode.Release" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_ClickMode"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="49e2c-134">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="49e2c-134">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="49e2c-135">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="49e2c-135">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.ButtonBase.ClickModeProperty>|  
|<span data-ttu-id="49e2c-136">Propriedades de metadados é definido como `true`</span><span class="sxs-lookup"><span data-stu-id="49e2c-136">Metadata properties set to `true`</span></span>|<span data-ttu-id="49e2c-137">Nenhum</span><span class="sxs-lookup"><span data-stu-id="49e2c-137">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClickModeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ClickModeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ClickModeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ButtonBase.ClickModeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClickModeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ClickModeProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="49e2c-138">Identifica a propriedade de dependência <see cref="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49e2c-138">Identifies the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ICommand Command { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ICommand Command" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.ButtonBase.Command" />
      <MemberSignature Language="VB.NET" Value="Public Property Command As ICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ICommand ^ Command { System::Windows::Input::ICommand ^ get(); void set(System::Windows::Input::ICommand ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="49e2c-139">Obtém ou define o comando a ser chamado quando este botão é pressionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49e2c-139">Gets or sets the command to invoke when this button is pressed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="49e2c-140">Um comando a ser invocado quando esse botão é pressionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49e2c-140">A command to invoke when this button is pressed.</span>
          </span>
          <span data-ttu-id="49e2c-141">O valor padrão é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49e2c-141">The default value is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49e2c-142">Essa propriedade é usada para associar um comando com uma instância específica do botão.</span><span class="sxs-lookup"><span data-stu-id="49e2c-142">This property is used to associate a command with a particular button instance.</span></span>  
  
 <span data-ttu-id="49e2c-143">Em [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], geralmente, essa propriedade é definida para ser um valor de comando estático de uma das bibliotecas do comando existente, como <xref:System.Windows.Input.ApplicationCommands> ou <xref:System.Windows.Input.NavigationCommands>.</span><span class="sxs-lookup"><span data-stu-id="49e2c-143">In [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], this property is most often set to be a static command value from one of the existing command libraries, such as <xref:System.Windows.Input.ApplicationCommands> or <xref:System.Windows.Input.NavigationCommands>.</span></span> <span data-ttu-id="49e2c-144">Para obter detalhes, consulte [visão geral de comandos](~/docs/framework/wpf/advanced/commanding-overview.md) ou <xref:System.Windows.Input.ICommand>.</span><span class="sxs-lookup"><span data-stu-id="49e2c-144">For details, see [Commanding Overview](~/docs/framework/wpf/advanced/commanding-overview.md) or <xref:System.Windows.Input.ICommand>.</span></span>  
  
<a name="xamlAttributeUsage_Command"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="49e2c-145">Uso do Atributo XAML</span><span class="sxs-lookup"><span data-stu-id="49e2c-145">XAML Attribute Usage</span></span>  
  
```  
<object Command="commandName"/>  
```  
  
<a name="xamlValues_Command"></a>   
## <a name="xaml-values"></a><span data-ttu-id="49e2c-146">Valores XAML</span><span class="sxs-lookup"><span data-stu-id="49e2c-146">XAML Values</span></span>  
 <span data-ttu-id="49e2c-147">*commandName*</span><span class="sxs-lookup"><span data-stu-id="49e2c-147">*commandName*</span></span>  
 <span data-ttu-id="49e2c-148">O comando a ser invocado quando esse botão é pressionado.</span><span class="sxs-lookup"><span data-stu-id="49e2c-148">The command to invoke when this button is pressed.</span></span>  
  
<a name="dependencyPropertyInfo_Command"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="49e2c-149">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="49e2c-149">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="49e2c-150">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="49e2c-150">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.ButtonBase.CommandProperty>|  
|<span data-ttu-id="49e2c-151">Propriedades de metadados é definido como `true`</span><span class="sxs-lookup"><span data-stu-id="49e2c-151">Metadata properties set to `true`</span></span>|<span data-ttu-id="49e2c-152">Nenhum</span><span class="sxs-lookup"><span data-stu-id="49e2c-152">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandParameter">
      <MemberSignature Language="C#" Value="public object CommandParameter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CommandParameter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.ButtonBase.CommandParameter" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandParameter As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CommandParameter { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="49e2c-153">Obtém ou define o parâmetro a ser passado para a propriedade <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49e2c-153">Gets or sets the parameter to pass to the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="49e2c-154">Parâmetro a ser passado para a propriedade <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49e2c-154">Parameter to pass to the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" /> property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49e2c-155">A maioria dos comandos existentes de bibliotecas do comando não usa um parâmetro de comando.</span><span class="sxs-lookup"><span data-stu-id="49e2c-155">Most existing commands from the command libraries do not use a command parameter.</span></span> <span data-ttu-id="49e2c-156">Dos comandos que usam um parâmetro de comando, a maioria deles ter um parâmetro com algum valor de tipo primitivo, como um número inteiro ou uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="49e2c-156">Of the commands that do use a command parameter, most of these take a parameter with some primitive type value, such as an integer or a string.</span></span> <span data-ttu-id="49e2c-157">No entanto, é possível criar um comando personalizado onde esse comando espera um tipo não-primitivo como seu parâmetro de comando.</span><span class="sxs-lookup"><span data-stu-id="49e2c-157">However, it is possible to create a custom command where that command expects a nonprimitive type as its command parameter.</span></span> <span data-ttu-id="49e2c-158">Para um caso de comando personalizado como esta configuração <xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameter%2A> no código pode exigir uma instância de objeto novo ou existente.</span><span class="sxs-lookup"><span data-stu-id="49e2c-158">For a custom command case like this, setting <xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameter%2A> in code might require a new or existing object instance.</span></span> <span data-ttu-id="49e2c-159">Configuração <xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameter%2A> na marcação pode exigir sintaxe de elemento de propriedade, onde o objeto preenchendo a sintaxe de elemento de propriedade é um novo elemento do tipo esperado pelo comando.</span><span class="sxs-lookup"><span data-stu-id="49e2c-159">Setting <xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameter%2A> in markup might require property element syntax, where the object element filling the property element syntax is a new element of the type expected by that command.</span></span> <span data-ttu-id="49e2c-160">Como alternativa, a configuração na marcação pode exigir uma referência por meio de uma extensão de marcação para um objeto existente (normalmente, essas referências serão feitas com [associação de extensão de marcação](~/docs/framework/wpf/advanced/binding-markup-extension.md) ou [StaticResource Markup Extension](~/docs/framework/wpf/advanced/staticresource-markup-extension.md)).</span><span class="sxs-lookup"><span data-stu-id="49e2c-160">Alternatively, setting in markup might require a reference through a markup extension to an existing object (typically these references are made with [Binding Markup Extension](~/docs/framework/wpf/advanced/binding-markup-extension.md) or [StaticResource Markup Extension](~/docs/framework/wpf/advanced/staticresource-markup-extension.md)).</span></span>  
  
<a name="xamlAttributeUsage_CommandParameter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="49e2c-161">Uso do Atributo XAML</span><span class="sxs-lookup"><span data-stu-id="49e2c-161">XAML Attribute Usage</span></span>  
  
```  
<object CommandParameter="commandParameter" />  
```  
  
<a name="xamlValues_CommandParameter"></a>   
## <a name="xaml-values"></a><span data-ttu-id="49e2c-162">Valores XAML</span><span class="sxs-lookup"><span data-stu-id="49e2c-162">XAML Values</span></span>  
 <span data-ttu-id="49e2c-163">*commandParameter*</span><span class="sxs-lookup"><span data-stu-id="49e2c-163">*commandParameter*</span></span>  
 <span data-ttu-id="49e2c-164">Um valor do mesmo tipo que o comando particular especificado no <xref:System.Windows.Controls.Primitives.ButtonBase.Command%2A> propriedade espera.</span><span class="sxs-lookup"><span data-stu-id="49e2c-164">A value of the same type as the particular command specified in the <xref:System.Windows.Controls.Primitives.ButtonBase.Command%2A> property expects.</span></span> <span data-ttu-id="49e2c-165">Se você usar um comando de biblioteca existente do comando, consulte a documentação da biblioteca de comando para [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] informações de uso, incluindo o tipo de <xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameter%2A> espera que o comando.</span><span class="sxs-lookup"><span data-stu-id="49e2c-165">If you use an existing command library command, see that command library's documentation for [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] usage information, including which type of <xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameter%2A> the command expects.</span></span> <span data-ttu-id="49e2c-166">Se você usar um comando personalizado, consulte comentários.</span><span class="sxs-lookup"><span data-stu-id="49e2c-166">If you use a custom command, see Remarks.</span></span>  
  
<a name="dependencyPropertyInfo_CommandParameter"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="49e2c-167">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="49e2c-167">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="49e2c-168">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="49e2c-168">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameterProperty>|  
|<span data-ttu-id="49e2c-169">Propriedades de metadados é definido como `true`</span><span class="sxs-lookup"><span data-stu-id="49e2c-169">Metadata properties set to `true`</span></span>|<span data-ttu-id="49e2c-170">Nenhum</span><span class="sxs-lookup"><span data-stu-id="49e2c-170">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.ICommand" />
      </Docs>
    </Member>
    <Member MemberName="CommandParameterProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CommandParameterProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CommandParameterProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ButtonBase.CommandParameterProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommandParameterProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CommandParameterProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="49e2c-171">Identifica a propriedade de dependência <see cref="P:System.Windows.Controls.Primitives.ButtonBase.CommandParameter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49e2c-171">Identifies the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.CommandParameter" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CommandProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CommandProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ButtonBase.CommandProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommandProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CommandProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="49e2c-172">Identifica a propriedade de dependência <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" /> roteada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49e2c-172">Identifies the routed <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandTarget">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement CommandTarget { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement CommandTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.ButtonBase.CommandTarget" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandTarget As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ CommandTarget { System::Windows::IInputElement ^ get(); void set(System::Windows::IInputElement ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="49e2c-173">Obtém ou define o elemento no qual é acionado o comando especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49e2c-173">Gets or sets the element on which to raise the specified command.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="49e2c-174">Elemento no qual gerar um comando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49e2c-174">Element on which to raise a command.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49e2c-175">O <xref:System.Windows.Controls.Primitives.ButtonBase.CommandTarget%2A> propriedade não pode ser usada para definir um <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="49e2c-175">The <xref:System.Windows.Controls.Primitives.ButtonBase.CommandTarget%2A> property cannot be used to define a <xref:System.Windows.UIElement>.</span></span> <span data-ttu-id="49e2c-176">O <xref:System.Windows.Controls.Primitives.ButtonBase.CommandTarget%2A> propriedade fornece uma referência a um elemento que já está definida em algum lugar no seu aplicativo.</span><span class="sxs-lookup"><span data-stu-id="49e2c-176">The <xref:System.Windows.Controls.Primitives.ButtonBase.CommandTarget%2A> property provides a reference to an element that is already defined somewhere in your application.</span></span>  
  
<a name="xamlAttributeUsage_Target"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="49e2c-177">Uso do Atributo XAML</span><span class="sxs-lookup"><span data-stu-id="49e2c-177">XAML Attribute Usage</span></span>  
  
```  
<ButtonBase CommandTarget="{Binding ElementName= elementName }"/>  
```  
  
<a name="xamlValues_CommandTarget"></a>   
## <a name="xaml-values"></a><span data-ttu-id="49e2c-178">Valores XAML</span><span class="sxs-lookup"><span data-stu-id="49e2c-178">XAML Values</span></span>  
 <span data-ttu-id="49e2c-179">*elementName*</span><span class="sxs-lookup"><span data-stu-id="49e2c-179">*elementName*</span></span>  
 <span data-ttu-id="49e2c-180">O nome do <xref:System.Windows.IInputElement> que recebe o comando.</span><span class="sxs-lookup"><span data-stu-id="49e2c-180">The name of <xref:System.Windows.IInputElement> that receives the command.</span></span>  
  
<a name="dependencyPropertyInfo_CommandTarget"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="49e2c-181">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="49e2c-181">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="49e2c-182">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="49e2c-182">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.ButtonBase.CommandTargetProperty>|  
|<span data-ttu-id="49e2c-183">Propriedades de metadados é definido como `true`</span><span class="sxs-lookup"><span data-stu-id="49e2c-183">Metadata properties set to `true`</span></span>|<span data-ttu-id="49e2c-184">Nenhum</span><span class="sxs-lookup"><span data-stu-id="49e2c-184">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.ICommand" />
      </Docs>
    </Member>
    <Member MemberName="CommandTargetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CommandTargetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CommandTargetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ButtonBase.CommandTargetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommandTargetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CommandTargetProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="49e2c-185">Identifica a propriedade de dependência <see cref="P:System.Windows.Controls.Primitives.ButtonBase.CommandTarget" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49e2c-185">Identifies the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.CommandTarget" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledCore">
      <MemberSignature Language="C#" Value="protected override bool IsEnabledCore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabledCore" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.ButtonBase.IsEnabledCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property IsEnabledCore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool IsEnabledCore { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="49e2c-186">Obtém o valor da propriedade <see cref="P:System.Windows.ContentElement.IsEnabled" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49e2c-186">Gets the value of the <see cref="P:System.Windows.ContentElement.IsEnabled" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="49e2c-187">
            <see langword="true" /> se o controle estiver habilitado; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49e2c-187">
              <see langword="true" /> if the control is enabled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49e2c-188">Se você optar por substituir essa implementação, certifique-se de que você chamar o método base.</span><span class="sxs-lookup"><span data-stu-id="49e2c-188">If you choose to override this implementation, make certain that you call the base method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPressed">
      <MemberSignature Language="C#" Value="public bool IsPressed { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPressed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed" />
      <MemberSignature Language="VB.NET" Value="Public Property IsPressed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:  property bool IsPressed {  public:&#xA;bool get(); protected:&#xA; void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="49e2c-189">Obtém um valor que indica se uma <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> está ativada no momento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49e2c-189">Gets a value that indicates whether a <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> is currently activated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="49e2c-190">
            <see langword="true" /> se a <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> está ativada, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49e2c-190">
              <see langword="true" /> if the <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> is activated; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="49e2c-191">O padrão é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49e2c-191">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49e2c-192"><xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> é o estado de um botão que indica o botão esquerdo do mouse ou a barra de espaços é pressionada sobre o botão.</span><span class="sxs-lookup"><span data-stu-id="49e2c-192"><xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> is the state of a button that indicates the left mouse button or SPACEBAR is pressed over the button.</span></span> <span data-ttu-id="49e2c-193">Quando <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> é `true`, o controle captura o mouse.</span><span class="sxs-lookup"><span data-stu-id="49e2c-193">When <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> is `true`, the control captures the mouse.</span></span>  <span data-ttu-id="49e2c-194">Como resultado, o controle gera eventos de mouse como <xref:System.Windows.UIElement.MouseEnter> e <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>.</span><span class="sxs-lookup"><span data-stu-id="49e2c-194">As a result, the control will raise mouse events such as <xref:System.Windows.UIElement.MouseEnter> and <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>.</span></span> <span data-ttu-id="49e2c-195">Observe que o uso de <xref:System.Windows.Controls.AccessText> ou ENTER não alterar <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> ou captura o mouse, mas é gerar faz o <xref:System.Windows.Controls.Primitives.ButtonBase.Click> evento.</span><span class="sxs-lookup"><span data-stu-id="49e2c-195">Note that using the <xref:System.Windows.Controls.AccessText> or ENTER does not change <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> or capture the mouse, but is does raise the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 <span data-ttu-id="49e2c-196">Começando com o .NET Framework versão 3.0 Service Pack 1, <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> tem um setter protegido.</span><span class="sxs-lookup"><span data-stu-id="49e2c-196">Starting with the .NET Framework version 3.0 Service Pack 1, <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> has a protected setter.</span></span> <span data-ttu-id="49e2c-197">Para usar essa funcionalidade, seu aplicativo deve ter como destino o .NET Framework versão 3.5.</span><span class="sxs-lookup"><span data-stu-id="49e2c-197">To use this functionality, your application should target the .NET Framework version 3.5.</span></span>  <span data-ttu-id="49e2c-198">Para saber mais, confira [Versões e dependências](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="49e2c-198">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsPressed"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="49e2c-199">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="49e2c-199">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="49e2c-200">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="49e2c-200">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.ButtonBase.IsPressedProperty>|  
|<span data-ttu-id="49e2c-201">Propriedades de metadados é definido como `true`</span><span class="sxs-lookup"><span data-stu-id="49e2c-201">Metadata properties set to `true`</span></span>|<span data-ttu-id="49e2c-202">Nenhum</span><span class="sxs-lookup"><span data-stu-id="49e2c-202">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="49e2c-203">Este exemplo mostra como usar o <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> propriedade em um estilo de gatilho.</span><span class="sxs-lookup"><span data-stu-id="49e2c-203">This example shows how to use the <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> property in a trigger style.</span></span>  
  
 [!code-xaml[BtnColor#9](~/samples/snippets/csharp/VS_Snippets_Wpf/BtnColor/CSharp/Pane1.xaml#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPressedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsPressedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsPressedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ButtonBase.IsPressedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsPressedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsPressedProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="49e2c-204">Identifica a propriedade de dependência <see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49e2c-204">Identifies the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAccessKey">
      <MemberSignature Language="C#" Value="protected override void OnAccessKey (System.Windows.Input.AccessKeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnAccessKey(class System.Windows.Input.AccessKeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnAccessKey (e As AccessKeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnAccessKey(System::Windows::Input::AccessKeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.AccessKeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="49e2c-205">Os dados de evento do evento <see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49e2c-205">The event data for the <see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49e2c-206">Responde quando o <see cref="P:System.Windows.Controls.AccessText.AccessKey" /> para este controle é chamado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49e2c-206">Responds when the <see cref="P:System.Windows.Controls.AccessText.AccessKey" /> for this control is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49e2c-207">Se <xref:System.Windows.Input.AccessKeyEventArgs.IsMultiple%2A> é `true`, este método chama a implementação base, o que coloca o foco neste controle.</span><span class="sxs-lookup"><span data-stu-id="49e2c-207">If <xref:System.Windows.Input.AccessKeyEventArgs.IsMultiple%2A> is `true`, this method calls the base implementation, which gives this control focus.</span></span>  <span data-ttu-id="49e2c-208">Caso contrário, esse método gerará o <xref:System.Windows.Controls.Primitives.ButtonBase.Click> evento.</span><span class="sxs-lookup"><span data-stu-id="49e2c-208">Otherwise, this method raises the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected virtual void OnClick ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClick() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnClick" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClick ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClick();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="49e2c-209">Aciona o evento roteado <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49e2c-209">Raises the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49e2c-210">O controle gera o <xref:System.Windows.Controls.Primitives.ButtonBase.Click> evento chamando <xref:System.Windows.UIElement.RaiseEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="49e2c-210">The control raises the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event by calling <xref:System.Windows.UIElement.RaiseEvent%2A>.</span></span> <span data-ttu-id="49e2c-211">Para obter mais informações, consulte [Visão geral de eventos roteados](~/docs/framework/wpf/advanced/routed-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="49e2c-211">For more information, see [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="49e2c-212">Ao substituir <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnClick" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnClick" /> método para que registrado delegados receber o evento.</span>
            <span class="sxs-lookup">
              <span data-stu-id="49e2c-212">When overriding <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnClick" /> in a derived class, be sure to call the base class’s <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnClick" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnIsPressedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsPressedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsPressedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnIsPressedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsPressedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsPressedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="49e2c-213">Os dados para <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49e2c-213">The data for <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49e2c-214">Chamado quando a propriedade <see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed" /> é alterada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49e2c-214">Called when the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed" /> property changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="49e2c-215">Os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49e2c-215">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49e2c-216">Fornece a manipulação de classe para os eventos roteados <see cref="E:System.Windows.UIElement.KeyDown" /> que ocorrem quando o usuário pressiona uma tecla, enquanto esse controle tem o foco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49e2c-216">Provides class handling for the <see cref="E:System.Windows.UIElement.KeyDown" /> routed event that occurs when the user presses a key while this control has focus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49e2c-217">Essa implementação marca o <xref:System.Windows.UIElement.KeyDown> eventos como manipulada, definindo o <xref:System.Windows.RoutedEventArgs.Handled%2A> propriedade dos dados do evento para `true` quando <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> não está definido como <xref:System.Windows.Controls.ClickMode.Hover> e uma das seguintes situações for verdadeira:</span><span class="sxs-lookup"><span data-stu-id="49e2c-217">This implementation marks the <xref:System.Windows.UIElement.KeyDown> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` when <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is not set to <xref:System.Windows.Controls.ClickMode.Hover> and one of the following cases are true:</span></span>  
  
-   <span data-ttu-id="49e2c-218">O usuário pressiona a barra de espaços.</span><span class="sxs-lookup"><span data-stu-id="49e2c-218">The user presses the SPACEBAR.</span></span>  
  
-   <span data-ttu-id="49e2c-219">O usuário pressiona ENTER e <xref:System.Windows.Input.KeyboardNavigation.AcceptsReturn%2A> é `true` para este controle.</span><span class="sxs-lookup"><span data-stu-id="49e2c-219">The user presses ENTER and <xref:System.Windows.Input.KeyboardNavigation.AcceptsReturn%2A> is `true` for this control.</span></span>  
  
 <span data-ttu-id="49e2c-220">Em todos os outros casos, essa implementação não altera o estado manipulado (o <xref:System.Windows.RoutedEventArgs.Handled%2A> propriedade) da <xref:System.Windows.UIElement.KeyDown> dados de evento.</span><span class="sxs-lookup"><span data-stu-id="49e2c-220">In all other cases, this implementation does not change the handled state (the <xref:System.Windows.RoutedEventArgs.Handled%2A> property) of the <xref:System.Windows.UIElement.KeyDown> event data.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="49e2c-221">Se você substituir <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown(System.Windows.Input.KeyEventArgs)" />, sempre chamar a implementação base sua <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown(System.Windows.Input.KeyEventArgs)" /> implementação.</span>
            <span class="sxs-lookup">
              <span data-stu-id="49e2c-221">If you override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown(System.Windows.Input.KeyEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown(System.Windows.Input.KeyEventArgs)" /> implementation.</span>
            </span>
            <span data-ttu-id="49e2c-222">Falha ao chamar a implementação base impede que as classes base manipular o evento com um manipulador de classe, que pode alterar o comportamento de tempo de execução da classe final.</span>
            <span class="sxs-lookup">
              <span data-stu-id="49e2c-222">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span>
            </span>
            <span data-ttu-id="49e2c-223">Você pode chamar a implementação base antes ou depois do tratamento especial, dependendo dos seus requisitos.</span>
            <span class="sxs-lookup">
              <span data-stu-id="49e2c-223">You can call the base implementation either before or after your special handling, depending on your requirements.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected override void OnKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="49e2c-224">Os dados de evento do evento <see cref="E:System.Windows.UIElement.KeyUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49e2c-224">The event data for the <see cref="E:System.Windows.UIElement.KeyUp" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49e2c-225">Fornece a manipulação de classe para os eventos roteados <see cref="E:System.Windows.UIElement.KeyUp" /> que ocorrem quando o usuário solta uma tecla, enquanto esse controle tem o foco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49e2c-225">Provides class handling for the <see cref="E:System.Windows.UIElement.KeyUp" /> routed event that occurs when the user releases a key while this control has focus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49e2c-226">Essa implementação marca o <xref:System.Windows.UIElement.KeyUp> eventos como manipulada, definindo o <xref:System.Windows.RoutedEventArgs.Handled%2A> propriedade dos dados do evento para `true` quando o usuário libera a barra de espaços.</span><span class="sxs-lookup"><span data-stu-id="49e2c-226">This implementation marks the <xref:System.Windows.UIElement.KeyUp> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` when the user releases the SPACEBAR.</span></span> <span data-ttu-id="49e2c-227">Caso contrário, essa implementação não altera o estado manipulado (o <xref:System.Windows.RoutedEventArgs.Handled%2A> propriedade) da <xref:System.Windows.UIElement.KeyUp> dados de evento.</span><span class="sxs-lookup"><span data-stu-id="49e2c-227">Otherwise, this implementation does not change the handled state (the <xref:System.Windows.RoutedEventArgs.Handled%2A> property) of the <xref:System.Windows.UIElement.KeyUp> event data.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="49e2c-228">Se você substituir <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyUp(System.Windows.Input.KeyEventArgs)" />, sempre chamar a implementação base sua <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyUp(System.Windows.Input.KeyEventArgs)" /> implementação.</span>
            <span class="sxs-lookup">
              <span data-stu-id="49e2c-228">If you override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyUp(System.Windows.Input.KeyEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyUp(System.Windows.Input.KeyEventArgs)" /> implementation.</span>
            </span>
            <span data-ttu-id="49e2c-229">Falha ao chamar a implementação base impede que as classes base manipular o evento com um manipulador de classe, que pode alterar o comportamento de tempo de execução da classe final.</span>
            <span class="sxs-lookup">
              <span data-stu-id="49e2c-229">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span>
            </span>
            <span data-ttu-id="49e2c-230">Você pode chamar a implementação base antes ou depois do tratamento especial, dependendo dos seus requisitos.</span>
            <span class="sxs-lookup">
              <span data-stu-id="49e2c-230">You can call the base implementation either before or after your special handling, depending on your requirements.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnLostKeyboardFocus">
      <MemberSignature Language="C#" Value="protected override void OnLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLostKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLostKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLostKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="49e2c-231">Os dados de evento do evento <see cref="E:System.Windows.IInputElement.LostKeyboardFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49e2c-231">The event data for the <see cref="E:System.Windows.IInputElement.LostKeyboardFocus" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49e2c-232">Chamado quando um elemento perde o foco do teclado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49e2c-232">Called when an element loses keyboard focus.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLostMouseCapture">
      <MemberSignature Language="C#" Value="protected override void OnLostMouseCapture (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLostMouseCapture(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLostMouseCapture (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLostMouseCapture(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="49e2c-233">Os dados de evento do evento <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49e2c-233">The event data for the <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49e2c-234">Fornece a manipulação de classe para eventos roteados <see cref="E:System.Windows.UIElement.LostMouseCapture" /> que ocorrem quando esse controle não está mais recebendo mensagens de evento do mouse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49e2c-234">Provides class handling for the <see cref="E:System.Windows.UIElement.LostMouseCapture" /> routed event that occurs when this control is no longer receiving mouse event messages.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49e2c-235">Esta implementação não altera o estado manipulado (o <xref:System.Windows.RoutedEventArgs.Handled%2A> propriedade) da <xref:System.Windows.UIElement.LostMouseCapture> dados de evento.</span><span class="sxs-lookup"><span data-stu-id="49e2c-235">This implementation does not change the handled state (the <xref:System.Windows.RoutedEventArgs.Handled%2A> property) of the <xref:System.Windows.UIElement.LostMouseCapture> event data.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="49e2c-236">Se você substituir <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" />, sempre chamar a implementação base sua <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" /> implementação.</span>
            <span class="sxs-lookup">
              <span data-stu-id="49e2c-236">If you override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" /> implementation.</span>
            </span>
            <span data-ttu-id="49e2c-237">Falha ao chamar a implementação base impede que as classes base manipular o evento com um manipulador de classe, que pode alterar o comportamento de tempo de execução da classe final.</span>
            <span class="sxs-lookup">
              <span data-stu-id="49e2c-237">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span>
            </span>
            <span data-ttu-id="49e2c-238">Você pode chamar a implementação base antes ou depois do tratamento especial, dependendo dos seus requisitos.</span>
            <span class="sxs-lookup">
              <span data-stu-id="49e2c-238">You can call the base implementation either before or after your special handling, depending on your requirements.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected override void OnMouseEnter (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseEnter(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseEnter(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseEnter (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseEnter(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="49e2c-239">Os dados de evento do evento <see cref="E:System.Windows.Input.Mouse.MouseEnter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49e2c-239">The event data for the <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49e2c-240">Fornece a manipulação de classe para o evento roteado <see cref="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode" /> que ocorre quando o mouse entra neste controle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49e2c-240">Provides class handling for the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode" /> routed event that occurs when the mouse enters this control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49e2c-241">Quando <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> é definido como <xref:System.Windows.Controls.ClickMode.Hover>, essa implementação marca o <xref:System.Windows.UIElement.MouseEnter> eventos como manipulada, definindo o <xref:System.Windows.RoutedEventArgs.Handled%2A> propriedade dos dados do evento para `true` e gera o <xref:System.Windows.Controls.Primitives.ButtonBase.Click> evento.</span><span class="sxs-lookup"><span data-stu-id="49e2c-241">When <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is set to <xref:System.Windows.Controls.ClickMode.Hover>, this implementation marks the <xref:System.Windows.UIElement.MouseEnter> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` and raises the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="49e2c-242">Se você substituir <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseEnter(System.Windows.Input.MouseEventArgs)" />, sempre chamar a implementação base sua <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseEnter(System.Windows.Input.MouseEventArgs)" /> implementação.</span>
            <span class="sxs-lookup">
              <span data-stu-id="49e2c-242">If you override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseEnter(System.Windows.Input.MouseEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseEnter(System.Windows.Input.MouseEventArgs)" /> implementation.</span>
            </span>
            <span data-ttu-id="49e2c-243">Falha ao chamar a implementação base impede que as classes base manipular o evento com um manipulador de classe, que pode alterar o comportamento de tempo de execução da classe final.</span>
            <span class="sxs-lookup">
              <span data-stu-id="49e2c-243">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span>
            </span>
            <span data-ttu-id="49e2c-244">Você pode chamar a implementação base antes ou depois do tratamento especial, dependendo dos seus requisitos.</span>
            <span class="sxs-lookup">
              <span data-stu-id="49e2c-244">You can call the base implementation either before or after your special handling, depending on your requirements.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeave (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeave(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeave (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeave(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="49e2c-245">Os dados de evento do evento <see cref="E:System.Windows.Input.Mouse.MouseLeave" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49e2c-245">The event data for the <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49e2c-246">Fornece a manipulação de classe para o evento roteado <see cref="E:System.Windows.UIElement.MouseLeave" /> que ocorre quando o mouse sai de um elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49e2c-246">Provides class handling for the <see cref="E:System.Windows.UIElement.MouseLeave" /> routed event that occurs when the mouse leaves an element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49e2c-247">Essa implementação marca o <xref:System.Windows.UIElement.MouseLeave> eventos como manipulada, definindo o <xref:System.Windows.RoutedEventArgs.Handled%2A> propriedade dos dados do evento para `true` quando <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> é definido como <xref:System.Windows.Controls.ClickMode.Hover>.</span><span class="sxs-lookup"><span data-stu-id="49e2c-247">This implementation marks the <xref:System.Windows.UIElement.MouseLeave> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` when <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is set to <xref:System.Windows.Controls.ClickMode.Hover>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="49e2c-248">Se você substituir <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)" />, sempre chamar a implementação base sua <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)" /> implementação.</span>
            <span class="sxs-lookup">
              <span data-stu-id="49e2c-248">If you override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)" /> implementation.</span>
            </span>
            <span data-ttu-id="49e2c-249">Falha ao chamar a implementação base impede que as classes base manipular o evento com um manipulador de classe, que pode alterar o comportamento de tempo de execução da classe final.</span>
            <span class="sxs-lookup">
              <span data-stu-id="49e2c-249">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span>
            </span>
            <span data-ttu-id="49e2c-250">Você pode chamar a implementação base antes ou depois do tratamento especial, dependendo dos seus requisitos.</span>
            <span class="sxs-lookup">
              <span data-stu-id="49e2c-250">You can call the base implementation either before or after your special handling, depending on your requirements.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeftButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeftButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeftButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="49e2c-251">Os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49e2c-251">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49e2c-252">Fornece a manipulação de classe para o evento roteado <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> que ocorre quando o botão esquerdo do mouse é pressionado enquanto o ponteiro do mouse está sobre este controle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49e2c-252">Provides class handling for the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> routed event that occurs when the left mouse button is pressed while the mouse pointer is over this control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49e2c-253">Essa implementação marca o <xref:System.Windows.UIElement.MouseLeftButtonDown> eventos como manipulada, definindo o <xref:System.Windows.RoutedEventArgs.Handled%2A> propriedade dos dados do evento para `true` quando <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> não está definido como <xref:System.Windows.Controls.ClickMode.Hover>.</span><span class="sxs-lookup"><span data-stu-id="49e2c-253">This implementation marks the <xref:System.Windows.UIElement.MouseLeftButtonDown> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` when <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is not set to <xref:System.Windows.Controls.ClickMode.Hover>.</span></span> <span data-ttu-id="49e2c-254">Para responder ao <xref:System.Windows.UIElement.MouseLeftButtonDown> eventos, anexar um manipulador de eventos para o <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> evento ou chamada <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> com `handledEventsToo` definido como `true`.</span><span class="sxs-lookup"><span data-stu-id="49e2c-254">To respond to the <xref:System.Windows.UIElement.MouseLeftButtonDown> event, attach an event handler to the <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> event, or call <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` set to `true`.</span></span>  
  
 <span data-ttu-id="49e2c-255">Quando <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> é definido como <xref:System.Windows.Controls.ClickMode.Press>, esse método dispara o <xref:System.Windows.Controls.Primitives.ButtonBase.Click> evento.</span><span class="sxs-lookup"><span data-stu-id="49e2c-255">When <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is set to <xref:System.Windows.Controls.ClickMode.Press>, this method raises the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="49e2c-256">Se você substituir <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />, sempre chamar a implementação base sua <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" /> implementação.</span>
            <span class="sxs-lookup">
              <span data-stu-id="49e2c-256">If you override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" /> implementation.</span>
            </span>
            <span data-ttu-id="49e2c-257">Falha ao chamar a implementação base impede que as classes base manipular o evento com um manipulador de classe, que pode alterar o comportamento de tempo de execução da classe final.</span>
            <span class="sxs-lookup">
              <span data-stu-id="49e2c-257">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span>
            </span>
            <span data-ttu-id="49e2c-258">Você pode chamar a implementação base antes ou depois do tratamento especial, dependendo dos seus requisitos.</span>
            <span class="sxs-lookup">
              <span data-stu-id="49e2c-258">You can call the base implementation either before or after your special handling, depending on your requirements.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeftButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeftButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeftButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="49e2c-259">Os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49e2c-259">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49e2c-260">Fornece a manipulação de classe para o evento roteado <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> que ocorre quando o botão esquerdo do mouse é solto enquanto o ponteiro do mouse está sobre este controle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49e2c-260">Provides class handling for the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> routed event that occurs when the left mouse button is released while the mouse pointer is over this control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49e2c-261">Essa implementação marca o <xref:System.Windows.UIElement.MouseLeftButtonUp> eventos como manipulada, definindo o <xref:System.Windows.RoutedEventArgs.Handled%2A> propriedade dos dados do evento para `true` quando <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> não está definido como <xref:System.Windows.Controls.ClickMode.Hover>.</span><span class="sxs-lookup"><span data-stu-id="49e2c-261">This implementation marks the <xref:System.Windows.UIElement.MouseLeftButtonUp> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` when <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is not set to <xref:System.Windows.Controls.ClickMode.Hover>.</span></span> <span data-ttu-id="49e2c-262">Para responder ao <xref:System.Windows.UIElement.MouseLeftButtonUp> eventos, anexar um manipulador de eventos para o <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> evento ou chamada <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> com `handledEventsToo` definido como `true`.</span><span class="sxs-lookup"><span data-stu-id="49e2c-262">To respond to the <xref:System.Windows.UIElement.MouseLeftButtonUp> event, attach an event handler to the <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> event, or call <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` set to `true`.</span></span>  
  
 <span data-ttu-id="49e2c-263">Quando <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> é definido como <xref:System.Windows.Controls.ClickMode.Release> é <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> é `true`, esse método dispara o <xref:System.Windows.Controls.Primitives.ButtonBase.Click> evento.</span><span class="sxs-lookup"><span data-stu-id="49e2c-263">When <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is set to <xref:System.Windows.Controls.ClickMode.Release> is <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> is `true`, this method raises the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="49e2c-264">Se você substituir <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />, sempre chamar a implementação base sua <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" /> implementação.</span>
            <span class="sxs-lookup">
              <span data-stu-id="49e2c-264">If you override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" /> implementation.</span>
            </span>
            <span data-ttu-id="49e2c-265">Falha ao chamar a implementação base impede que as classes base manipular o evento com um manipulador de classe, que pode alterar o comportamento de tempo de execução da classe final.</span>
            <span class="sxs-lookup">
              <span data-stu-id="49e2c-265">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span>
            </span>
            <span data-ttu-id="49e2c-266">Você pode chamar a implementação base antes ou depois do tratamento especial, dependendo dos seus requisitos.</span>
            <span class="sxs-lookup">
              <span data-stu-id="49e2c-266">You can call the base implementation either before or after your special handling, depending on your requirements.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected override void OnMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="49e2c-267">Os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49e2c-267">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49e2c-268">Fornece a manipulação de classe para o evento roteado <see cref="E:System.Windows.UIElement.MouseMove" /> que ocorre quando o mouse se move enquanto está nesse elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49e2c-268">Provides class handling for the <see cref="E:System.Windows.UIElement.MouseMove" /> routed event that occurs when the mouse pointer moves while over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49e2c-269">Essa implementação marca o <xref:System.Windows.UIElement.MouseMove> eventos como manipulada, definindo o <xref:System.Windows.RoutedEventArgs.Handled%2A> propriedade dos dados do evento para `true` quando <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> não está definido como <xref:System.Windows.Controls.ClickMode.Hover> e <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> é `true`.</span><span class="sxs-lookup"><span data-stu-id="49e2c-269">This implementation marks the <xref:System.Windows.UIElement.MouseMove> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` when <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is not set to <xref:System.Windows.Controls.ClickMode.Hover> and <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> is `true`.</span></span> <span data-ttu-id="49e2c-270">Para responder ao <xref:System.Windows.UIElement.MouseMove> eventos, anexar um manipulador de eventos para o <xref:System.Windows.ContentElement.PreviewMouseMove> evento ou chamada <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> com `handledEventsToo` definido como `true`.</span><span class="sxs-lookup"><span data-stu-id="49e2c-270">To respond to the <xref:System.Windows.UIElement.MouseMove> event, attach an event handler to the <xref:System.Windows.ContentElement.PreviewMouseMove> event, or call <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="49e2c-271">Se você substituir <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseMove(System.Windows.Input.MouseEventArgs)" />, sempre chamar a implementação base sua <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseMove(System.Windows.Input.MouseEventArgs)" /> implementação.</span>
            <span class="sxs-lookup">
              <span data-stu-id="49e2c-271">If you override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseMove(System.Windows.Input.MouseEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseMove(System.Windows.Input.MouseEventArgs)" /> implementation.</span>
            </span>
            <span data-ttu-id="49e2c-272">Falha ao chamar a implementação base impede que as classes base manipular o evento com um manipulador de classe, que pode alterar o comportamento de tempo de execução da classe final.</span>
            <span class="sxs-lookup">
              <span data-stu-id="49e2c-272">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span>
            </span>
            <span data-ttu-id="49e2c-273">Você pode chamar a implementação base antes ou depois do tratamento especial, dependendo dos seus requisitos.</span>
            <span class="sxs-lookup">
              <span data-stu-id="49e2c-273">You can call the base implementation either before or after your special handling, depending on your requirements.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnRenderSizeChanged">
      <MemberSignature Language="C#" Value="protected internal override void OnRenderSizeChanged (System.Windows.SizeChangedInfo sizeInfo);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnRenderSizeChanged(class System.Windows.SizeChangedInfo sizeInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnRenderSizeChanged(System.Windows.SizeChangedInfo)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnRenderSizeChanged (sizeInfo As SizeChangedInfo)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnRenderSizeChanged(System::Windows::SizeChangedInfo ^ sizeInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sizeInfo" Type="System.Windows.SizeChangedInfo" />
      </Parameters>
      <Docs>
        <param name="sizeInfo">
          <span data-ttu-id="49e2c-274">Especifica as alterações de tamanho.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49e2c-274">Specifies the size changes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49e2c-275">Chamado quando o tamanho renderizado de um controle é alterado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49e2c-275">Called when the rendered size of a control changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49e2c-276">Substitui o <xref:System.Windows.Controls.Primitives.ButtonBase.OnRenderSizeChanged%2A> método o <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="49e2c-276">Overrides the <xref:System.Windows.Controls.Primitives.ButtonBase.OnRenderSizeChanged%2A> method of the <xref:System.Windows.UIElement>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>