<Type Name="Popup" FullName="System.Windows.Controls.Primitives.Popup">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="212e4135cc8198c8b79f6477e4e635d7fc49195c" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37525065" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Popup : System.Windows.FrameworkElement, System.Windows.Markup.IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Popup extends System.Windows.FrameworkElement implements class System.Windows.Markup.IAddChild" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Primitives.Popup" />
  <TypeSignature Language="VB.NET" Value="Public Class Popup&#xA;Inherits FrameworkElement&#xA;Implements IAddChild" />
  <TypeSignature Language="C++ CLI" Value="public ref class Popup : System::Windows::FrameworkElement, System::Windows::Markup::IAddChild" />
  <TypeSignature Language="F#" Value="type Popup = class&#xA;    inherit FrameworkElement&#xA;    interface IAddChild" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.FrameworkElement</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Opened")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Child")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Child")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="1a84d-101">Represents a pop-up window that has content.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1a84d-101">Represents a pop-up window that has content.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a84d-102">**Modelo de conteúdo**: <xref:System.Windows.Controls.Primitives.Popup> tem uma propriedade de conteúdo: <xref:System.Windows.Controls.Primitives.Popup.Child%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a84d-102">**Content Model**:  <xref:System.Windows.Controls.Primitives.Popup> has one content property: <xref:System.Windows.Controls.Primitives.Popup.Child%2A>.</span></span> <span data-ttu-id="1a84d-103">Um <xref:System.Windows.Controls.Primitives.Popup> pode ter no máximo um filho, que pode ser qualquer <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="1a84d-103">A <xref:System.Windows.Controls.Primitives.Popup> can have a maximum of one child, which can be any <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="1a84d-104">A ilustração a seguir mostra uma <xref:System.Windows.Controls.Primitives.Popup> controle que tem um <xref:System.Windows.Controls.Button> como seu pai.</span><span class="sxs-lookup"><span data-stu-id="1a84d-104">The following illustration shows a <xref:System.Windows.Controls.Primitives.Popup> control that has a <xref:System.Windows.Controls.Button> as its parent.</span></span>  
  
 <span data-ttu-id="1a84d-105">![Ilustração de pop-up](~/add/media/popuppicture.JPG "ilustração de pop-up")</span><span class="sxs-lookup"><span data-stu-id="1a84d-105">![Popup illustration](~/add/media/popuppicture.JPG "Popup illustration")</span></span>  
  
 <span data-ttu-id="1a84d-106">Você pode posicionar um pop-up, definindo o <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>, <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A>, <xref:System.Windows.Controls.Primitives.Popup.Placement%2A>, <xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A>, e <xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty> propriedades.</span><span class="sxs-lookup"><span data-stu-id="1a84d-106">You can position a popup by setting the <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>, <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A>, <xref:System.Windows.Controls.Primitives.Popup.Placement%2A>, <xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A>, and <xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty> properties.</span></span> <span data-ttu-id="1a84d-107">Para mais informações, consulte [Comportamento de posicionamento de pop-up](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span><span class="sxs-lookup"><span data-stu-id="1a84d-107">For more information, see [Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span></span> <span data-ttu-id="1a84d-108">Quando <xref:System.Windows.Controls.Primitives.Popup> é exibido na tela, ele não se reposicionará o pai estiver reposicionado.</span><span class="sxs-lookup"><span data-stu-id="1a84d-108">When <xref:System.Windows.Controls.Primitives.Popup> is displayed on the screen, it does not reposition itself if its parent is repositioned.</span></span>  
  
 <span data-ttu-id="1a84d-109">Um <xref:System.Windows.Controls.Primitives.Popup> exibe seu conteúdo em sua própria janela na tela.</span><span class="sxs-lookup"><span data-stu-id="1a84d-109">A <xref:System.Windows.Controls.Primitives.Popup> displays its content in its own window on the screen.</span></span> <span data-ttu-id="1a84d-110">Um <xref:System.Windows.Controls.Primitives.Popup> controle dá suporte a animação quando o <xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A> estiver definida como `true` e o aplicativo está em execução com confiança total.</span><span class="sxs-lookup"><span data-stu-id="1a84d-110">A <xref:System.Windows.Controls.Primitives.Popup> control supports animation when the <xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A> property is set to `true` and the application is running with full trust.</span></span> <span data-ttu-id="1a84d-111">Um aplicativo que está sendo executado com confiança total tem acesso completo aos recursos do sistema e é normalmente instalado no sistema do usuário.</span><span class="sxs-lookup"><span data-stu-id="1a84d-111">An application that is running with full trust has complete access to system resources and is typically installed on the user's system.</span></span> <span data-ttu-id="1a84d-112">Para obter mais informações, consulte [segurança (WPF)](~/docs/framework/wpf/security-wpf.md).</span><span class="sxs-lookup"><span data-stu-id="1a84d-112">For more information, see [Security (WPF)](~/docs/framework/wpf/security-wpf.md).</span></span>  
  
 <span data-ttu-id="1a84d-113">Para efeitos de bitmap e opacidade serem exibidos no conteúdo de um <xref:System.Windows.Controls.Primitives.Popup>, você deve definir os efeitos diretamente no <xref:System.Windows.Controls.Primitives.Popup> conteúdo.</span><span class="sxs-lookup"><span data-stu-id="1a84d-113">For bitmap and opacity effects to appear on the content of a <xref:System.Windows.Controls.Primitives.Popup>, you must set the effects directly on the <xref:System.Windows.Controls.Primitives.Popup> content.</span></span> <span data-ttu-id="1a84d-114">O conteúdo de um <xref:System.Windows.Controls.Primitives.Popup> não herda efeitos que são definidos na <xref:System.Windows.Controls.Primitives.Popup> controlar ou em qualquer outro elemento que está na janela pai.</span><span class="sxs-lookup"><span data-stu-id="1a84d-114">The content of a <xref:System.Windows.Controls.Primitives.Popup> does not inherit effects that are set on the <xref:System.Windows.Controls.Primitives.Popup> control or on any other element that is in the parent window.</span></span>  
  
 <span data-ttu-id="1a84d-115">Um <xref:System.Windows.Controls.Primitives.Popup> é dimensionado para seu conteúdo por padrão.</span><span class="sxs-lookup"><span data-stu-id="1a84d-115">A <xref:System.Windows.Controls.Primitives.Popup> is sized to its content by default.</span></span> <span data-ttu-id="1a84d-116">Quando isso ocorre, aplicando uma <xref:System.Windows.UIElement.RenderTransform%2A> ou efeitos de bitmap podem fazer com que o <xref:System.Windows.Controls.Primitives.Popup> obscuros.</span><span class="sxs-lookup"><span data-stu-id="1a84d-116">When this occurs, applying a <xref:System.Windows.UIElement.RenderTransform%2A> or bitmap effects may cause the <xref:System.Windows.Controls.Primitives.Popup> to be obscured.</span></span> <span data-ttu-id="1a84d-117">Isso ocorre porque o tamanho padrão do conteúdo não fornece área suficiente para os efeitos a serem exibidos.</span><span class="sxs-lookup"><span data-stu-id="1a84d-117">This occurs because the default size of the content does not provide enough area for the effects to display.</span></span> <span data-ttu-id="1a84d-118">Se mais espaço for necessário, você pode definir uma margem ao redor de <xref:System.Windows.Controls.Primitives.Popup> conteúdo para aumentar a área que está disponível para o controle.</span><span class="sxs-lookup"><span data-stu-id="1a84d-118">If more space is required, you can define a margin around the <xref:System.Windows.Controls.Primitives.Popup> content to increase the area that is available to the control.</span></span>  
  
 <span data-ttu-id="1a84d-119">O <xref:System.Windows.FrameworkElement.Parent%2A> propriedade deve ser definida em de <xref:System.Windows.Controls.Primitives.Popup> quando usada em um [!INCLUDE[TLA#tla_winfxwebapp](~/includes/tlasharptla-winfxwebapp-md.md)].</span><span class="sxs-lookup"><span data-stu-id="1a84d-119">The <xref:System.Windows.FrameworkElement.Parent%2A> property must be set on the <xref:System.Windows.Controls.Primitives.Popup> when used in a [!INCLUDE[TLA#tla_winfxwebapp](~/includes/tlasharptla-winfxwebapp-md.md)].</span></span>  
  
 <span data-ttu-id="1a84d-120">Para criar uma dica de ferramenta, use o <xref:System.Windows.Controls.ToolTip> e <xref:System.Windows.Controls.ToolTipService> classes.</span><span class="sxs-lookup"><span data-stu-id="1a84d-120">To create a tooltip, use the <xref:System.Windows.Controls.ToolTip> and <xref:System.Windows.Controls.ToolTipService> classes.</span></span> <span data-ttu-id="1a84d-121">Para obter mais informações, consulte [Visão geral de ToolTip](~/docs/framework/wpf/controls/tooltip-overview.md).</span><span class="sxs-lookup"><span data-stu-id="1a84d-121">For more information, see [ToolTip Overview](~/docs/framework/wpf/controls/tooltip-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1a84d-122">O exemplo a seguir mostra como criar um <xref:System.Windows.Controls.Primitives.Popup> controle.</span><span class="sxs-lookup"><span data-stu-id="1a84d-122">The following example shows how to create a <xref:System.Windows.Controls.Primitives.Popup> control.</span></span>  
  
 [!code-xaml[PopupSimple#2](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupSimple/CSharp/Window1.xaml#2)]  
  
 [!code-csharp[PopupSimple#CreatePopup](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupSimple/CSharp/Window1.xaml.cs#createpopup)]
 [!code-vb[PopupSimple#CreatePopup](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PopupSimple/VisualBasic/Window1.xaml.vb#createpopup)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.Primitives.PlacementMode" />
    <altmember cref="T:System.Windows.Controls.ToolTip" />
    <altmember cref="T:System.Windows.Controls.ToolTipService" />
    <altmember cref="T:System.Windows.Controls.Primitives.CustomPopupPlacementCallback" />
    <altmember cref="T:System.Windows.Controls.Primitives.PopupAnimation" />
    <altmember cref="T:System.Windows.Controls.Primitives.PopupPrimaryAxis" />
    <altmember cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Popup ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.Popup.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Popup();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1a84d-123">Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-123">Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowsTransparency">
      <MemberSignature Language="C#" Value="public bool AllowsTransparency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowsTransparency" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.Popup.AllowsTransparency" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowsTransparency As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowsTransparency { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowsTransparency : bool with get, set" Usage="System.Windows.Controls.Primitives.Popup.AllowsTransparency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1a84d-124">Gets or sets a value that indicates whether a <see cref="T:System.Windows.Controls.Primitives.Popup" /> control can contain transparent content.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-124">Gets or sets a value that indicates whether a <see cref="T:System.Windows.Controls.Primitives.Popup" /> control can contain transparent content.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1a84d-125">
            <see langword="true" /> se o controle <see cref="T:System.Windows.Controls.Primitives.Popup" /> pode conter conteúdo transparente, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-125">
              <see langword="true" /> if the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control can contain transparent content; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="1a84d-126">O padrão é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-126">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a84d-127">Um <xref:System.Windows.Controls.Primitives.Popup> controle só pode conter conteúdo transparente quando o aplicativo é executado com confiança total.</span><span class="sxs-lookup"><span data-stu-id="1a84d-127">A <xref:System.Windows.Controls.Primitives.Popup> control can only contain transparent content when the application runs with full trust.</span></span> <span data-ttu-id="1a84d-128">Um aplicativo executado com confiança total tem acesso completo aos recursos do sistema e normalmente é instalado no sistema local.</span><span class="sxs-lookup"><span data-stu-id="1a84d-128">An application that runs with full trust has complete access to system resources and is typically installed on the local system.</span></span> <span data-ttu-id="1a84d-129">Para obter mais informações, consulte [segurança (WPF)](~/docs/framework/wpf/security-wpf.md).</span><span class="sxs-lookup"><span data-stu-id="1a84d-129">For more information, see [Security (WPF)](~/docs/framework/wpf/security-wpf.md).</span></span>  
  
 <span data-ttu-id="1a84d-130">Essa propriedade não pode ser definida como `true` quando o <xref:System.Windows.Controls.Primitives.Popup> é hospedado em um [!INCLUDE[TLA#tla_winfxwebapp](~/includes/tlasharptla-winfxwebapp-md.md)].</span><span class="sxs-lookup"><span data-stu-id="1a84d-130">This property cannot be set to `true` when the <xref:System.Windows.Controls.Primitives.Popup> is hosted in a [!INCLUDE[TLA#tla_winfxwebapp](~/includes/tlasharptla-winfxwebapp-md.md)].</span></span>  
  
 <span data-ttu-id="1a84d-131">Se o <xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A> estiver definida como `true` em um aplicativo que não é executado em confiança total, o <xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A> o valor da propriedade é alterado para `false`.</span><span class="sxs-lookup"><span data-stu-id="1a84d-131">If the <xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A> property is set to `true` in an application that does not run in full trust, the <xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A> property value is changed to `false`.</span></span> <span data-ttu-id="1a84d-132">Um aplicativo que está hospedado em um navegador é um exemplo de um aplicativo que não é executado em confiança total.</span><span class="sxs-lookup"><span data-stu-id="1a84d-132">An application that is hosted in a browser is an example of an application that does not run in full trust.</span></span>  
  
<a name="dependencyPropertyInfo_AllowsTransparency"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="1a84d-133">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="1a84d-133">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a84d-134">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="1a84d-134">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.Popup.AllowsTransparencyProperty>|  
|<span data-ttu-id="1a84d-135">Propriedades de metadados definido como `true`</span><span class="sxs-lookup"><span data-stu-id="1a84d-135">Metadata properties set to `true`</span></span>|<span data-ttu-id="1a84d-136">Nenhum</span><span class="sxs-lookup"><span data-stu-id="1a84d-136">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1a84d-137">O exemplo a seguir mostra como definir a <xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A> propriedade em um <xref:System.Windows.Controls.Primitives.Popup> controle.</span><span class="sxs-lookup"><span data-stu-id="1a84d-137">The following example shows how to set the <xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A> property on a <xref:System.Windows.Controls.Primitives.Popup> control.</span></span>  
  
 [!code-csharp[PopupSnips#AllowsTransparency](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupSnips/Csharp/Window1.xaml.cs#allowstransparency)]
 [!code-vb[PopupSnips#AllowsTransparency](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PopupSnips/visualbasic/window1.xaml.vb#allowstransparency)]
 [!code-xaml[PopupSnips#AllowsTransparency](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupSnips/Csharp/Window1.xaml#allowstransparency)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="1a84d-138">Para definir essa propriedade como <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-138">for setting this property to <see langword="true" />.</span>
          </span>
          <span data-ttu-id="1a84d-139">Enumeração associada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-139">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <altmember cref="P:System.Windows.Window.AllowsTransparency" />
      </Docs>
    </Member>
    <Member MemberName="AllowsTransparencyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AllowsTransparencyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AllowsTransparencyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.Popup.AllowsTransparencyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AllowsTransparencyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AllowsTransparencyProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AllowsTransparencyProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.Popup.AllowsTransparencyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1a84d-140">Identifies the <see cref="P:System.Windows.Controls.Primitives.Popup.AllowsTransparency" /> dependency property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-140">Identifies the <see cref="P:System.Windows.Controls.Primitives.Popup.AllowsTransparency" /> dependency property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a84d-141">O identificador da propriedade de dependência <xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a84d-141">The identifier for the <xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A> dependency property.</span></span>  
  
   
  
## Examples  
 [<span data-ttu-id="1a84d-142">Visão geral das propriedades da dependência</span><span class="sxs-lookup"><span data-stu-id="1a84d-142">Dependency Properties Overview</span></span>](~/docs/framework/wpf/advanced/dependency-properties-overview.md)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Child">
      <MemberSignature Language="C#" Value="public System.Windows.UIElement Child { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.UIElement Child" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.Popup.Child" />
      <MemberSignature Language="VB.NET" Value="Public Property Child As UIElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::UIElement ^ Child { System::Windows::UIElement ^ get(); void set(System::Windows::UIElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Child : System.Windows.UIElement with get, set" Usage="System.Windows.Controls.Primitives.Popup.Child" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.UIElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1a84d-143">Gets or sets the content of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-143">Gets or sets the content of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1a84d-144">O conteúdo <see cref="T:System.Windows.UIElement" /> do controle <see cref="T:System.Windows.Controls.Primitives.Popup" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-144">The <see cref="T:System.Windows.UIElement" /> content of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control.</span>
          </span>
          <span data-ttu-id="1a84d-145">O padrão é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-145">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a84d-146">**Modelo de conteúdo**: O <xref:System.Windows.Controls.Primitives.Popup.Child%2A> é a propriedade de conteúdo somente para o <xref:System.Windows.Controls.Primitives.Popup> controle.</span><span class="sxs-lookup"><span data-stu-id="1a84d-146">**Content Model**: The <xref:System.Windows.Controls.Primitives.Popup.Child%2A> property is the only content property for the <xref:System.Windows.Controls.Primitives.Popup> control.</span></span> <span data-ttu-id="1a84d-147">Um <xref:System.Windows.Controls.Primitives.Popup> só pode ter uma <xref:System.Windows.UIElement> como um filho, mas esse filho pode conter conteúdo incorporado complexo.</span><span class="sxs-lookup"><span data-stu-id="1a84d-147">A <xref:System.Windows.Controls.Primitives.Popup> can only have one <xref:System.Windows.UIElement> as a child, but that child can contain complex embedded content.</span></span> <span data-ttu-id="1a84d-148">Por exemplo, o filho pode ser um <xref:System.Windows.Controls.StackPanel> que contém um <xref:System.Windows.Controls.Image>, texto e outros tipos de controles.</span><span class="sxs-lookup"><span data-stu-id="1a84d-148">For example, the child can be a <xref:System.Windows.Controls.StackPanel> that contains an <xref:System.Windows.Controls.Image>, text, and other types of controls.</span></span>  
  
 <span data-ttu-id="1a84d-149">Quando o conteúdo é adicionado a um <xref:System.Windows.Controls.Primitives.Popup> controle, o <xref:System.Windows.Controls.Primitives.Popup> controle se torna o pai lógico para o conteúdo.</span><span class="sxs-lookup"><span data-stu-id="1a84d-149">When content is added to a <xref:System.Windows.Controls.Primitives.Popup> control, the <xref:System.Windows.Controls.Primitives.Popup> control becomes the logical parent to the content.</span></span> <span data-ttu-id="1a84d-150">Da mesma forma, o <xref:System.Windows.Controls.Primitives.Popup> conteúdo é considerado como o filho lógico do <xref:System.Windows.Controls.Primitives.Popup>.</span><span class="sxs-lookup"><span data-stu-id="1a84d-150">Similarly, the <xref:System.Windows.Controls.Primitives.Popup> content is considered to be the logical child of the <xref:System.Windows.Controls.Primitives.Popup>.</span></span> <span data-ttu-id="1a84d-151">O conteúdo filho não é adicionado à árvore visual que contém o <xref:System.Windows.Controls.Primitives.Popup> controle.</span><span class="sxs-lookup"><span data-stu-id="1a84d-151">The child content is not added to the visual tree that contains the <xref:System.Windows.Controls.Primitives.Popup> control.</span></span> <span data-ttu-id="1a84d-152">Em vez disso, o conteúdo filho é renderizado em uma janela separada com seu próprio visual de árvore quando o <xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A> é definido como `true`.</span><span class="sxs-lookup"><span data-stu-id="1a84d-152">Instead, the child content is rendered in a separate window with its own visual tree when the <xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A> is set to `true`.</span></span>  
  
<a name="dependencyPropertyInfo_Child"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="1a84d-153">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="1a84d-153">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a84d-154">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="1a84d-154">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.Popup.ChildProperty>|  
|<span data-ttu-id="1a84d-155">Propriedades de metadados definido como `true`</span><span class="sxs-lookup"><span data-stu-id="1a84d-155">Metadata properties set to `true`</span></span>|<span data-ttu-id="1a84d-156">Nenhum</span><span class="sxs-lookup"><span data-stu-id="1a84d-156">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1a84d-157">O exemplo a seguir mostra como adicionar conteúdo a um <xref:System.Windows.Controls.Primitives.Popup> controle.</span><span class="sxs-lookup"><span data-stu-id="1a84d-157">The following example shows how to add content to a <xref:System.Windows.Controls.Primitives.Popup> control.</span></span>  
  
 [!code-csharp[PopupSnips#Child](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupSnips/Csharp/Window1.xaml.cs#child)]
 [!code-vb[PopupSnips#Child](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PopupSnips/visualbasic/window1.xaml.vb#child)]
 [!code-xaml[PopupSnips#Child](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupSnips/Csharp/Window1.xaml#child)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ChildProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ChildProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.Popup.ChildProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ChildProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ChildProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ChildProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.Popup.ChildProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1a84d-158">Identifies the <see cref="P:System.Windows.Controls.Primitives.Popup.Child" /> dependency property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-158">Identifies the <see cref="P:System.Windows.Controls.Primitives.Popup.Child" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Closed">
      <MemberSignature Language="C#" Value="public event EventHandler Closed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Closed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Primitives.Popup.Closed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Closed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Closed;" />
      <MemberSignature Language="F#" Value="member this.Closed : EventHandler " Usage="member this.Closed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1a84d-159">Occurs when the <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /> property changes to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-159">Occurs when the <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /> property changes to <see langword="false" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a84d-160">Um <xref:System.Windows.Controls.Primitives.Popup> é aberto e fechado ativando/desativando o <xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="1a84d-160">A <xref:System.Windows.Controls.Primitives.Popup> is opened and closed by toggling the <xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1a84d-161">O exemplo a seguir mostra como definir um manipulador de eventos para o <xref:System.Windows.Controls.Primitives.Popup.Closed> eventos.</span><span class="sxs-lookup"><span data-stu-id="1a84d-161">The following example shows how to define an event handler for the <xref:System.Windows.Controls.Primitives.Popup.Closed> event.</span></span>  
  
 [!code-csharp[PopupSnips#Closed](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupSnips/Csharp/Window1.xaml.cs#closed)]
 [!code-vb[PopupSnips#Closed](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PopupSnips/visualbasic/window1.xaml.vb#closed)]
 [!code-xaml[PopupSnips#Closed](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupSnips/Csharp/Window1.xaml#closed)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Controls.Primitives.Popup.Opened" />
      </Docs>
    </Member>
    <Member MemberName="CreateRootPopup">
      <MemberSignature Language="C#" Value="public static void CreateRootPopup (System.Windows.Controls.Primitives.Popup popup, System.Windows.UIElement child);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreateRootPopup(class System.Windows.Controls.Primitives.Popup popup, class System.Windows.UIElement child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.Popup.CreateRootPopup(System.Windows.Controls.Primitives.Popup,System.Windows.UIElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CreateRootPopup(System::Windows::Controls::Primitives::Popup ^ popup, System::Windows::UIElement ^ child);" />
      <MemberSignature Language="F#" Value="static member CreateRootPopup : System.Windows.Controls.Primitives.Popup * System.Windows.UIElement -&gt; unit" Usage="System.Windows.Controls.Primitives.Popup.CreateRootPopup (popup, child)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="popup" Type="System.Windows.Controls.Primitives.Popup" />
        <Parameter Name="child" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="popup">
          <span data-ttu-id="1a84d-162">The <see cref="T:System.Windows.Controls.Primitives.Popup" /> to which to add child content.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-162">The <see cref="T:System.Windows.Controls.Primitives.Popup" /> to which to add child content.</span>
          </span>
        </param>
        <param name="child">
          <span data-ttu-id="1a84d-163">The <see cref="T:System.Windows.UIElement" /> child content.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-163">The <see cref="T:System.Windows.UIElement" /> child content.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1a84d-164">Attaches a child element to a <see cref="T:System.Windows.Controls.Primitives.Popup" /> control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-164">Attaches a child element to a <see cref="T:System.Windows.Controls.Primitives.Popup" /> control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a84d-165">Você talvez queira criar um controle personalizado que tem a mesma funcionalidade que um controle existente e também exibe o comportamento de um <xref:System.Windows.Controls.Primitives.Popup>.</span><span class="sxs-lookup"><span data-stu-id="1a84d-165">You might want to create a custom control that has the same functionality as an existing control and also exhibits the behavior of a <xref:System.Windows.Controls.Primitives.Popup>.</span></span>  <span data-ttu-id="1a84d-166">Você pode fazer com que o seu controle se comportam como uma <xref:System.Windows.Controls.Primitives.Popup> adicionando um <xref:System.Windows.Controls.Primitives.Popup> ao seu controle e chamar o <xref:System.Windows.Controls.Primitives.Popup.CreateRootPopup%2A> método.</span><span class="sxs-lookup"><span data-stu-id="1a84d-166">You can make your control behave like a <xref:System.Windows.Controls.Primitives.Popup> by adding a <xref:System.Windows.Controls.Primitives.Popup> to your control and calling the <xref:System.Windows.Controls.Primitives.Popup.CreateRootPopup%2A> method.</span></span>  
  
 <span data-ttu-id="1a84d-167">Esse método atribui `child` para a propriedade child e associa as seguintes propriedades à `child`.</span><span class="sxs-lookup"><span data-stu-id="1a84d-167">This method assigns `child` to the child property and binds the following properties to `child`.</span></span>  
  
-   <xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A>  
  
-   <xref:System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallback%2A>  
  
-   <xref:System.Windows.Controls.Primitives.Popup.Placement%2A>  
  
-   <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A>  
  
-   <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>  
  
-   <xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A>  
  
-   <xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A>  
  
-   <xref:System.Windows.Controls.Primitives.Popup.VerticalOffset%2A>  
  
 <span data-ttu-id="1a84d-168">Você deve implementá-los como propriedades de dependência em seu controle para que possa ser usado da mesma forma que um <xref:System.Windows.Controls.Primitives.Popup>.</span><span class="sxs-lookup"><span data-stu-id="1a84d-168">You should implement these as dependency properties in your control so it can be used the same way as a <xref:System.Windows.Controls.Primitives.Popup>.</span></span> <span data-ttu-id="1a84d-169">Para obter mais informações, consulte [Propriedades de dependência personalizadas](~/docs/framework/wpf/advanced/custom-dependency-properties.md).</span><span class="sxs-lookup"><span data-stu-id="1a84d-169">For more information, see [Custom Dependency Properties](~/docs/framework/wpf/advanced/custom-dependency-properties.md).</span></span>  
  
 <span data-ttu-id="1a84d-170">Quando você chama <xref:System.Windows.Controls.Primitives.Popup.CreateRootPopup%2A>, `child` não pode ser um filho de um <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="1a84d-170">When you call <xref:System.Windows.Controls.Primitives.Popup.CreateRootPopup%2A>, `child` cannot be a child of a <xref:System.Windows.UIElement>.</span></span> <span data-ttu-id="1a84d-171">Além disso, `PlacementTarget` deve ser definido no seu controle antes de chamar esse método.</span><span class="sxs-lookup"><span data-stu-id="1a84d-171">Also, `PlacementTarget` should be set on your control before you call this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomPopupPlacementCallback">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.Primitives.CustomPopupPlacementCallback CustomPopupPlacementCallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.Primitives.CustomPopupPlacementCallback CustomPopupPlacementCallback" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallback" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomPopupPlacementCallback As CustomPopupPlacementCallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::Primitives::CustomPopupPlacementCallback ^ CustomPopupPlacementCallback { System::Windows::Controls::Primitives::CustomPopupPlacementCallback ^ get(); void set(System::Windows::Controls::Primitives::CustomPopupPlacementCallback ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CustomPopupPlacementCallback : System.Windows.Controls.Primitives.CustomPopupPlacementCallback with get, set" Usage="System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Primitives.CustomPopupPlacementCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1a84d-172">Gets or sets a delegate handler method that positions the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-172">Gets or sets a delegate handler method that positions the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1a84d-173">O método delegado <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacementCallback" /> que fornece informações de posicionamento para o controle <see cref="T:System.Windows.Controls.Primitives.Popup" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-173">The <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacementCallback" /> delegate method that provides placement information for the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control.</span>
          </span>
          <span data-ttu-id="1a84d-174">O padrão é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-174">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_CustomPopupPlacementCallback"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="1a84d-175">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="1a84d-175">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a84d-176">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="1a84d-176">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallbackProperty>|  
|<span data-ttu-id="1a84d-177">Propriedades de metadados definido como `true`</span><span class="sxs-lookup"><span data-stu-id="1a84d-177">Metadata properties set to `true`</span></span>|<span data-ttu-id="1a84d-178">Nenhum</span><span class="sxs-lookup"><span data-stu-id="1a84d-178">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1a84d-179">O exemplo a seguir mostra como definir um <xref:System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallback%2A> delegar.</span><span class="sxs-lookup"><span data-stu-id="1a84d-179">The following example shows how to set a <xref:System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallback%2A> delegate.</span></span>  
  
 [!code-csharp[PopupCustomPlacement#DelegateDefinition](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupCustomPlacement/CSharp/Window1.xaml.cs#delegatedefinition)]
 [!code-vb[PopupCustomPlacement#DelegateDefinition](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PopupCustomPlacement/visualbasic/window1.xaml.vb#delegatedefinition)]  
  
 [!code-csharp[PopupCustomPlacement#DelegateInstance](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupCustomPlacement/CSharp/Window1.xaml.cs#delegateinstance)]
 [!code-vb[PopupCustomPlacement#DelegateInstance](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PopupCustomPlacement/visualbasic/window1.xaml.vb#delegateinstance)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.Primitives.CustomPopupPlacementCallback" />
      </Docs>
    </Member>
    <Member MemberName="CustomPopupPlacementCallbackProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CustomPopupPlacementCallbackProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CustomPopupPlacementCallbackProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallbackProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CustomPopupPlacementCallbackProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CustomPopupPlacementCallbackProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CustomPopupPlacementCallbackProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallbackProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1a84d-180">Identifies the <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacementCallback" /> dependency property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-180">Identifies the <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacementCallback" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUIParentCore">
      <MemberSignature Language="C#" Value="protected internal override System.Windows.DependencyObject GetUIParentCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Windows.DependencyObject GetUIParentCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.Popup.GetUIParentCore" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function GetUIParentCore () As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Windows::DependencyObject ^ GetUIParentCore();" />
      <MemberSignature Language="F#" Value="override this.GetUIParentCore : unit -&gt; System.Windows.DependencyObject" Usage="popup.GetUIParentCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1a84d-181">Returns the logical parent of a <see cref="T:System.Windows.Controls.Primitives.Popup" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-181">Returns the logical parent of a <see cref="T:System.Windows.Controls.Primitives.Popup" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1a84d-182">If the <see cref="T:System.Windows.Controls.Primitives.Popup" /> does not have a defined parent and the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> is not <see langword="null" />, the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> is returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-182">If the <see cref="T:System.Windows.Controls.Primitives.Popup" /> does not have a defined parent and the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> is not <see langword="null" />, the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> is returned.</span>
          </span>
          <span data-ttu-id="1a84d-183">Otherwise, the return values are the same as <see cref="M:System.Windows.FrameworkElement.GetUIParentCore" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-183">Otherwise, the return values are the same as <see cref="M:System.Windows.FrameworkElement.GetUIParentCore" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDropShadow">
      <MemberSignature Language="C#" Value="public bool HasDropShadow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasDropShadow" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.Popup.HasDropShadow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasDropShadow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasDropShadow { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasDropShadow : bool" Usage="System.Windows.Controls.Primitives.Popup.HasDropShadow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1a84d-184">Gets a value that indicates whether a <see cref="T:System.Windows.Controls.Primitives.Popup" /> is displayed with a drop shadow effect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-184">Gets a value that indicates whether a <see cref="T:System.Windows.Controls.Primitives.Popup" /> is displayed with a drop shadow effect.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1a84d-185">
            <see langword="true" /> se o <see cref="T:System.Windows.Controls.Primitives.Popup" /> é exibido com uma sombra, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-185">
              <see langword="true" /> if the <see cref="T:System.Windows.Controls.Primitives.Popup" /> is displayed with a drop shadow; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a84d-186">Um efeito de sombra é exibida quando o <xref:System.Windows.SystemParameters.DropShadow%2A?displayProperty=nameWithType> propriedade e o <xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A?displayProperty=nameWithType> estiverem definidas como `true`.</span><span class="sxs-lookup"><span data-stu-id="1a84d-186">A drop shadow effect displays when the <xref:System.Windows.SystemParameters.DropShadow%2A?displayProperty=nameWithType> property and the <xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A?displayProperty=nameWithType> property are set to `true`.</span></span>  
  
<a name="dependencyPropertyInfo_HasDropShadow"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="1a84d-187">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="1a84d-187">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a84d-188">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="1a84d-188">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.Popup.HasDropShadowProperty>|  
|<span data-ttu-id="1a84d-189">Propriedades de metadados definido como `true`</span><span class="sxs-lookup"><span data-stu-id="1a84d-189">Metadata properties set to `true`</span></span>|<span data-ttu-id="1a84d-190">Nenhum</span><span class="sxs-lookup"><span data-stu-id="1a84d-190">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1a84d-191">O exemplo a seguir mostra como obter o valor da <xref:System.Windows.Controls.Primitives.Popup.HasDropShadow%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="1a84d-191">The following example shows how to get the value of the <xref:System.Windows.Controls.Primitives.Popup.HasDropShadow%2A> property.</span></span>  
  
 [!code-csharp[PopupSnips#HasDropShadow](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupSnips/Csharp/Window1.xaml.cs#hasdropshadow)]
 [!code-vb[PopupSnips#HasDropShadow](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PopupSnips/visualbasic/window1.xaml.vb#hasdropshadow)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDropShadowProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HasDropShadowProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HasDropShadowProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.Popup.HasDropShadowProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HasDropShadowProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ HasDropShadowProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable HasDropShadowProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.Popup.HasDropShadowProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1a84d-192">Identifies the <see cref="P:System.Windows.Controls.Primitives.Popup.HasDropShadow" /> dependency property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-192">Identifies the <see cref="P:System.Windows.Controls.Primitives.Popup.HasDropShadow" /> dependency property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a84d-193">O identificador da propriedade de dependência <xref:System.Windows.Controls.Primitives.Popup.HasDropShadow%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a84d-193">The identifier for the <xref:System.Windows.Controls.Primitives.Popup.HasDropShadow%2A> dependency property.</span></span>  
  
   
  
## Examples  
 [<span data-ttu-id="1a84d-194">Visão geral das propriedades da dependência</span><span class="sxs-lookup"><span data-stu-id="1a84d-194">Dependency Properties Overview</span></span>](~/docs/framework/wpf/advanced/dependency-properties-overview.md)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalOffset">
      <MemberSignature Language="C#" Value="public double HorizontalOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 HorizontalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property HorizontalOffset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double HorizontalOffset { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.HorizontalOffset : double with get, set" Usage="System.Windows.Controls.Primitives.Popup.HorizontalOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1a84d-195">Get or sets the horizontal distance between the target origin and the popup alignment point.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-195">Get or sets the horizontal distance between the target origin and the popup alignment point.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1a84d-196">A distância horizontal entre a origem de destino e o ponto de alinhamento de pop-up.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-196">The horizontal distance between the target origin and the popup alignment point.</span>
          </span>
          <span data-ttu-id="1a84d-197">Para obter informações sobre o ponto de alinhamento de pop-up e de origem de destino, consulte [pop-up posicionamento Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-197">For information about the target origin and popup alignment point, see [Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span>
          </span>
          <span data-ttu-id="1a84d-198">O padrão é 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-198">The default is 0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a84d-199">Você pode posicionar um pop-up, definindo o <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>, <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A>, <xref:System.Windows.Controls.Primitives.Popup.Placement%2A>, <xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A>, e <xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty> propriedades.</span><span class="sxs-lookup"><span data-stu-id="1a84d-199">You can position a popup by setting the <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>, <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A>, <xref:System.Windows.Controls.Primitives.Popup.Placement%2A>, <xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A>, and <xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty> properties.</span></span> <span data-ttu-id="1a84d-200">Para mais informações, consulte [Comportamento de posicionamento de pop-up](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span><span class="sxs-lookup"><span data-stu-id="1a84d-200">For more information, see [Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span></span>  
  
<a name="dependencyPropertyInfo_HorizontalOffset"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="1a84d-201">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="1a84d-201">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a84d-202">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="1a84d-202">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.Popup.HorizontalOffsetProperty>|  
|<span data-ttu-id="1a84d-203">Propriedades de metadados definido como `true`</span><span class="sxs-lookup"><span data-stu-id="1a84d-203">Metadata properties set to `true`</span></span>|<span data-ttu-id="1a84d-204">Nenhum</span><span class="sxs-lookup"><span data-stu-id="1a84d-204">None</span></span>|  
  
<a name="xamlAttributeUsage_HorizontalOffset"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="1a84d-205">Uso do Atributo XAML</span><span class="sxs-lookup"><span data-stu-id="1a84d-205">XAML Attribute Usage</span></span>  
  
```  
<object HorizontalOffset="double"/>  
- or -  
<object HorizontalOffset="qualifiedDouble"/>  
```  
  
<a name="xamlValues_HorizontallOffset"></a>   
## <a name="xaml-values"></a><span data-ttu-id="1a84d-206">Valores XAML</span><span class="sxs-lookup"><span data-stu-id="1a84d-206">XAML Values</span></span>  
 `double`  
 <xref:System.Double>  
  
 <span data-ttu-id="1a84d-207">Uma representação de cadeia de caracteres de um <xref:System.Double> valor.</span><span class="sxs-lookup"><span data-stu-id="1a84d-207">A string representation of a <xref:System.Double> value.</span></span> <span data-ttu-id="1a84d-208">Isso é interpretado como um [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] medida.</span><span class="sxs-lookup"><span data-stu-id="1a84d-208">This is interpreted as a [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] measurement.</span></span> <span data-ttu-id="1a84d-209">Cadeias de caracteres não é necessário incluir explicitamente os pontos decimais.</span><span class="sxs-lookup"><span data-stu-id="1a84d-209">Strings do not have to explicitly include decimal points.</span></span> <span data-ttu-id="1a84d-210">Por exemplo, um valor de `1` é aceitável.</span><span class="sxs-lookup"><span data-stu-id="1a84d-210">For example, a value of `1` is acceptable.</span></span>  
  
 <span data-ttu-id="1a84d-211">O mesmo <xref:System.Double> restrições de intervalo como aqueles que são mencionadas na seção de valor de propriedade deste tópico.</span><span class="sxs-lookup"><span data-stu-id="1a84d-211">The same <xref:System.Double> range restrictions apply as those that are mentioned in the Property Value section of this topic.</span></span>  
  
 `qualifiedDouble`  
 <span data-ttu-id="1a84d-212">Um `double` valor conforme descrito anteriormente nesta tabela, seguido por um dos seguintes unidade declaração cadeias de caracteres: `px`, `in`, `cm`, ou `pt`.</span><span class="sxs-lookup"><span data-stu-id="1a84d-212">A `double` value as described earlier in this table, followed by one of the following unit declaration strings: `px`, `in`, `cm`, or `pt`.</span></span>  
  
 <span data-ttu-id="1a84d-213">`px` (padrão) [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="1a84d-213">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="1a84d-214">`in` polegadas; 1 na = 96 px</span><span class="sxs-lookup"><span data-stu-id="1a84d-214">`in` is inches; 1in=96px</span></span>  
  
 <span data-ttu-id="1a84d-215">`cm` centímetros; 1cm=(96/2.54) px</span><span class="sxs-lookup"><span data-stu-id="1a84d-215">`cm` is centimeters; 1cm=(96/2.54) px</span></span>  
  
 <span data-ttu-id="1a84d-216">`pt` pontos de; 1pt=(96/72) px</span><span class="sxs-lookup"><span data-stu-id="1a84d-216">`pt` is points; 1pt=(96/72) px</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1a84d-217">O exemplo a seguir cria uma <xref:System.Windows.Controls.Primitives.Popup> e define o <xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A> e <xref:System.Windows.Controls.Primitives.Popup.VerticalOffset%2A> propriedades como 20.</span><span class="sxs-lookup"><span data-stu-id="1a84d-217">The following example creates a <xref:System.Windows.Controls.Primitives.Popup> and sets the <xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A> and <xref:System.Windows.Controls.Primitives.Popup.VerticalOffset%2A> properties to 20.</span></span>  <span data-ttu-id="1a84d-218">O <xref:System.Windows.Controls.Primitives.Popup.Placement%2A> estiver definida como <xref:System.Windows.Controls.Primitives.PlacementMode.Bottom> (que é o padrão), portanto, a origem de destino é o canto inferior esquerdo da área de destino e o ponto de alinhamento do pop-up é o canto superior esquerdo do <xref:System.Windows.Controls.Primitives.Popup>.</span><span class="sxs-lookup"><span data-stu-id="1a84d-218">The <xref:System.Windows.Controls.Primitives.Popup.Placement%2A> property is set to <xref:System.Windows.Controls.Primitives.PlacementMode.Bottom> (which is the default), so the target origin is the bottom left corner of the target area and the popup alignment point is the top left corner of the <xref:System.Windows.Controls.Primitives.Popup>.</span></span>  
  
 [!code-xaml[PopupPositionSnippet#5](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupPositionSnippet/CS/Window1.xaml#5)]   
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" />
        <altmember cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" />
        <altmember cref="P:System.Windows.Controls.Primitives.Popup.PlacementRectangle" />
        <altmember cref="P:System.Windows.Controls.Primitives.Popup.Placement" />
      </Docs>
    </Member>
    <Member MemberName="HorizontalOffsetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HorizontalOffsetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HorizontalOffsetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.Popup.HorizontalOffsetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HorizontalOffsetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ HorizontalOffsetProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable HorizontalOffsetProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.Popup.HorizontalOffsetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1a84d-219">Identifies the <see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" /> dependency property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-219">Identifies the <see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOpen">
      <MemberSignature Language="C#" Value="public bool IsOpen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOpen" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.Popup.IsOpen" />
      <MemberSignature Language="VB.NET" Value="Public Property IsOpen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOpen { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsOpen : bool with get, set" Usage="System.Windows.Controls.Primitives.Popup.IsOpen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1a84d-220">Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.Primitives.Popup" /> is visible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-220">Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.Primitives.Popup" /> is visible.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1a84d-221">
            <see langword="true" /> se o <see cref="T:System.Windows.Controls.Primitives.Popup" /> estiver visível; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-221">
              <see langword="true" /> if the <see cref="T:System.Windows.Controls.Primitives.Popup" /> is visible; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="1a84d-222">O padrão é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-222">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a84d-223">Se um controle usa uma <xref:System.Windows.Controls.Primitives.Popup> como parte do seu estilo de padrão, associar a <xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A> propriedade do <xref:System.Windows.Controls.Primitives.Popup> a uma propriedade do controle.</span><span class="sxs-lookup"><span data-stu-id="1a84d-223">If a control uses a <xref:System.Windows.Controls.Primitives.Popup> as part of its default style, bind the <xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A> property of the <xref:System.Windows.Controls.Primitives.Popup> to a property of the control.</span></span> <span data-ttu-id="1a84d-224">Por exemplo, uma <xref:System.Windows.Controls.ComboBox> pode associar seu <xref:System.Windows.Controls.ComboBox.IsDropDownOpen%2A> propriedade para o <xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A> propriedade do <xref:System.Windows.Controls.Primitives.Popup>.</span><span class="sxs-lookup"><span data-stu-id="1a84d-224">For example, a <xref:System.Windows.Controls.ComboBox> can bind its <xref:System.Windows.Controls.ComboBox.IsDropDownOpen%2A> property to the <xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A> property of the <xref:System.Windows.Controls.Primitives.Popup>.</span></span> <span data-ttu-id="1a84d-225">Isso simplifica a lógica para controlar quando o <xref:System.Windows.Controls.Primitives.Popup> está visível.</span><span class="sxs-lookup"><span data-stu-id="1a84d-225">This simplifies the logic for controlling when the <xref:System.Windows.Controls.Primitives.Popup> is visible.</span></span>  
  
<a name="dependencyPropertyInfo_IsOpen"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="1a84d-226">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="1a84d-226">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a84d-227">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="1a84d-227">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.Popup.IsOpenProperty>|  
|<span data-ttu-id="1a84d-228">Propriedades de metadados definido como `true`</span><span class="sxs-lookup"><span data-stu-id="1a84d-228">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="1a84d-229">O exemplo a seguir mostra como definir o <xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="1a84d-229">The following example shows how to set the <xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A> property.</span></span>  
  
 [!code-csharp[PopupSnips#IsOpen](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupSnips/Csharp/Window1.xaml.cs#isopen)]
 [!code-vb[PopupSnips#IsOpen](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PopupSnips/visualbasic/window1.xaml.vb#isopen)]
 [!code-xaml[PopupSnips#IsOpen](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupSnips/Csharp/Window1.xaml#isopen)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOpenProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsOpenProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsOpenProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.Popup.IsOpenProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsOpenProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsOpenProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsOpenProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.Popup.IsOpenProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1a84d-230">Identifies the <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /> dependency property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-230">Identifies the <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogicalChildren">
      <MemberSignature Language="C#" Value="protected internal override System.Collections.IEnumerator LogicalChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator LogicalChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.Popup.LogicalChildren" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property LogicalChildren As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Collections::IEnumerator ^ LogicalChildren { System::Collections::IEnumerator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LogicalChildren : System.Collections.IEnumerator" Usage="System.Windows.Controls.Primitives.Popup.LogicalChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1a84d-231">Gets an enumerator that you can use to access the logical child elements of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-231">Gets an enumerator that you can use to access the logical child elements of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1a84d-232">Uma <see cref="T:System.Collections.IEnumerator" /> que você pode usar para acessar os elementos filho lógicos de um <see cref="T:System.Windows.Controls.Primitives.Popup" /> controle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-232">An <see cref="T:System.Collections.IEnumerator" /> that you can use to access the logical child elements of a <see cref="T:System.Windows.Controls.Primitives.Popup" /> control.</span>
          </span>
          <span data-ttu-id="1a84d-233">O padrão é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-233">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a84d-234">Quando você adiciona conteúdo a um <xref:System.Windows.Controls.Primitives.Popup> controle, o <xref:System.Windows.Controls.Primitives.Popup> controle se torna o pai lógico para o conteúdo.</span><span class="sxs-lookup"><span data-stu-id="1a84d-234">When you add content to a <xref:System.Windows.Controls.Primitives.Popup> control, the <xref:System.Windows.Controls.Primitives.Popup> control becomes the logical parent to the content.</span></span> <span data-ttu-id="1a84d-235">Da mesma forma, o <xref:System.Windows.Controls.Primitives.Popup> conteúdo é considerado como o filho lógico do <xref:System.Windows.Controls.Primitives.Popup>.</span><span class="sxs-lookup"><span data-stu-id="1a84d-235">Similarly, the <xref:System.Windows.Controls.Primitives.Popup> content is considered to be the logical child of the <xref:System.Windows.Controls.Primitives.Popup>.</span></span> <span data-ttu-id="1a84d-236">O conteúdo filho não é adicionado à árvore visual que contém o <xref:System.Windows.Controls.Primitives.Popup> controle.</span><span class="sxs-lookup"><span data-stu-id="1a84d-236">The child content is not added to the visual tree that contains the <xref:System.Windows.Controls.Primitives.Popup> control.</span></span> <span data-ttu-id="1a84d-237">Em vez disso, o conteúdo filho é renderizado em uma janela separada que tem seu próprio visual de árvore quando o <xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A> estiver definida como `true`.</span><span class="sxs-lookup"><span data-stu-id="1a84d-237">Instead, the child content is rendered in a separate window that has its own visual tree when the <xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A> property is set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size MeasureOverride (System.Windows.Size availableSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size MeasureOverride(valuetype System.Windows.Size availableSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.Popup.MeasureOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function MeasureOverride (availableSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size MeasureOverride(System::Windows::Size availableSize);" />
      <MemberSignature Language="F#" Value="override this.MeasureOverride : System.Windows.Size -&gt; System.Windows.Size" Usage="popup.MeasureOverride availableSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="availableSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="availableSize">
          <span data-ttu-id="1a84d-238">The available size that this element can give to the child.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-238">The available size that this element can give to the child.</span>
          </span>
          <span data-ttu-id="1a84d-239">You can use infinity as a value to indicate that the element can size to whatever content is available.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-239">You can use infinity as a value to indicate that the element can size to whatever content is available.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1a84d-240">Determines the required size of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> content within the visual tree of the logical parent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-240">Determines the required size of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> content within the visual tree of the logical parent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1a84d-241">A <see cref="T:System.Windows.Size" /> structure that has the <see cref="P:System.Windows.Size.Height" /> and <see cref="P:System.Windows.Size.Width" /> properties both equal to zero (0).</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-241">A <see cref="T:System.Windows.Size" /> structure that has the <see cref="P:System.Windows.Size.Height" /> and <see cref="P:System.Windows.Size.Width" /> properties both equal to zero (0).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a84d-242">Esse método sempre retorna um <xref:System.Windows.Size> que tem uma largura e altura de zero (0), pois <xref:System.Windows.Controls.Primitives.Popup> conteúdo não está na árvore visual de seu pai lógico ou <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a84d-242">This method always returns a <xref:System.Windows.Size> that has a width and height of zero (0), because <xref:System.Windows.Controls.Primitives.Popup> content is not located in the visual tree of its logical parent or <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>.</span></span> <span data-ttu-id="1a84d-243">O conteúdo filho é criado em uma janela diferente que tem sua própria árvore visual.</span><span class="sxs-lookup"><span data-stu-id="1a84d-243">The child content is created in a different window that has its own visual tree.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnClosed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClosed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.Popup.OnClosed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClosed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClosed(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnClosed : EventArgs -&gt; unit&#xA;override this.OnClosed : EventArgs -&gt; unit" Usage="popup.OnClosed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="1a84d-244">The event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-244">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1a84d-245">Responds when the value of the <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /> property changes from to <see langword="true" /> to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-245">Responds when the value of the <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /> property changes from to <see langword="true" /> to <see langword="false" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnOpened">
      <MemberSignature Language="C#" Value="protected virtual void OnOpened (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnOpened(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.Popup.OnOpened(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnOpened (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnOpened(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnOpened : EventArgs -&gt; unit&#xA;override this.OnOpened : EventArgs -&gt; unit" Usage="popup.OnOpened e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="1a84d-246">The event arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-246">The event arguments.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1a84d-247">Responds to the condition in which the value of the <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /> property changes from <see langword="false" /> to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-247">Responds to the condition in which the value of the <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /> property changes from <see langword="false" /> to <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="protected override void OnPreviewMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreviewMouseLeftButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.Popup.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPreviewMouseLeftButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPreviewMouseLeftButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreviewMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="popup.OnPreviewMouseLeftButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="1a84d-248">The event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-248">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1a84d-249">Provides class handling for the <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-249">Provides class handling for the <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a84d-250">Essa implementação torna-se de que um <xref:System.Windows.Controls.Primitives.Popup> fecha quando ocorre um evento de mouse fora do <xref:System.Windows.Controls.Primitives.Popup> quando o <xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A> estiver definida como `false`.</span><span class="sxs-lookup"><span data-stu-id="1a84d-250">This implementation makes sure that a <xref:System.Windows.Controls.Primitives.Popup> closes when a mouse event occurs outside the <xref:System.Windows.Controls.Primitives.Popup> when the <xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A> property is set to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="protected override void OnPreviewMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreviewMouseLeftButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.Popup.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPreviewMouseLeftButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPreviewMouseLeftButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreviewMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="popup.OnPreviewMouseLeftButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="1a84d-251">The event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-251">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1a84d-252">Provides class handling for the <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonUp" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-252">Provides class handling for the <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonUp" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a84d-253">Essa implementação torna-se de que um <xref:System.Windows.Controls.Primitives.Popup> fecha quando ocorre um evento de mouse fora do <xref:System.Windows.Controls.Primitives.Popup> quando o <xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A> estiver definida como `false`.</span><span class="sxs-lookup"><span data-stu-id="1a84d-253">This implementation makes sure that a <xref:System.Windows.Controls.Primitives.Popup> closes when a mouse event occurs outside the <xref:System.Windows.Controls.Primitives.Popup> when the <xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A> property is set to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseRightButtonDown">
      <MemberSignature Language="C#" Value="protected override void OnPreviewMouseRightButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreviewMouseRightButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.Popup.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPreviewMouseRightButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPreviewMouseRightButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreviewMouseRightButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="popup.OnPreviewMouseRightButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="1a84d-254">The event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-254">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1a84d-255">Provides class handling for the <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonUp" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-255">Provides class handling for the <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonUp" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a84d-256">Essa implementação torna-se de que um <xref:System.Windows.Controls.Primitives.Popup> fecha quando ocorre um evento de mouse fora do <xref:System.Windows.Controls.Primitives.Popup> quando o <xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A> estiver definida como `false`.</span><span class="sxs-lookup"><span data-stu-id="1a84d-256">This implementation makes sure that a <xref:System.Windows.Controls.Primitives.Popup> closes when a mouse event occurs outside the <xref:System.Windows.Controls.Primitives.Popup> when the <xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A> property is set to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseRightButtonUp">
      <MemberSignature Language="C#" Value="protected override void OnPreviewMouseRightButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreviewMouseRightButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.Popup.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPreviewMouseRightButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPreviewMouseRightButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreviewMouseRightButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="popup.OnPreviewMouseRightButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="1a84d-257">The event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-257">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1a84d-258">Provides class handling for the <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonDown" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-258">Provides class handling for the <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonDown" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a84d-259">Essa implementação torna-se de que um <xref:System.Windows.Controls.Primitives.Popup> fecha quando ocorre um evento de mouse fora do <xref:System.Windows.Controls.Primitives.Popup> quando o <xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A> estiver definida como `false`.</span><span class="sxs-lookup"><span data-stu-id="1a84d-259">This implementation makes sure that a <xref:System.Windows.Controls.Primitives.Popup> closes when a mouse event occurs outside the <xref:System.Windows.Controls.Primitives.Popup> when the <xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A> property is set to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Opened">
      <MemberSignature Language="C#" Value="public event EventHandler Opened;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Opened" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Primitives.Popup.Opened" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Opened As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Opened;" />
      <MemberSignature Language="F#" Value="member this.Opened : EventHandler " Usage="member this.Opened : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1a84d-260">Occurs when the <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /> property changes to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-260">Occurs when the <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /> property changes to <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a84d-261">Um <xref:System.Windows.Controls.Primitives.Popup> é aberto e fechado ativando/desativando o <xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="1a84d-261">A <xref:System.Windows.Controls.Primitives.Popup> is opened and closed by toggling the <xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1a84d-262">O exemplo a seguir mostra como definir um manipulador de eventos para o <xref:System.Windows.Controls.Primitives.Popup.Opened> eventos.</span><span class="sxs-lookup"><span data-stu-id="1a84d-262">The following example shows how to define an event handler for the <xref:System.Windows.Controls.Primitives.Popup.Opened> event.</span></span>  
  
 [!code-csharp[PopupSnips#Opened](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupSnips/Csharp/Window1.xaml.cs#opened)]
 [!code-vb[PopupSnips#Opened](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PopupSnips/visualbasic/window1.xaml.vb#opened)]
 [!code-xaml[PopupSnips#Opened](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupSnips/Csharp/Window1.xaml#opened)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Controls.Primitives.Popup.Closed" />
      </Docs>
    </Member>
    <Member MemberName="Placement">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.Primitives.PlacementMode Placement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.Primitives.PlacementMode Placement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.Popup.Placement" />
      <MemberSignature Language="VB.NET" Value="Public Property Placement As PlacementMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::Primitives::PlacementMode Placement { System::Windows::Controls::Primitives::PlacementMode get(); void set(System::Windows::Controls::Primitives::PlacementMode value); };" />
      <MemberSignature Language="F#" Value="member this.Placement : System.Windows.Controls.Primitives.PlacementMode with get, set" Usage="System.Windows.Controls.Primitives.Popup.Placement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Primitives.PlacementMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1a84d-263">Gets or sets the orientation of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control when the control opens, and specifies the behavior of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control when it overlaps screen boundaries.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-263">Gets or sets the orientation of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control when the control opens, and specifies the behavior of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control when it overlaps screen boundaries.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1a84d-264">Um valor de enumeração <see cref="T:System.Windows.Controls.Primitives.PlacementMode" /> que determina a orientação do controle de <see cref="T:System.Windows.Controls.Primitives.Popup" /> quando ele é aberto e que especifica como o controle interage com os limites da tela.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-264">A <see cref="T:System.Windows.Controls.Primitives.PlacementMode" /> enumeration value that determines the orientation of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control when the control opens, and that specifies how the control interacts with screen boundaries.</span>
          </span>
          <span data-ttu-id="1a84d-265">O padrão é <see cref="F:System.Windows.Controls.Primitives.PlacementMode.Bottom" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-265">The default is <see cref="F:System.Windows.Controls.Primitives.PlacementMode.Bottom" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a84d-266">Você pode posicionar um pop-up, definindo o <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>, <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A>, <xref:System.Windows.Controls.Primitives.Popup.Placement%2A>, <xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A>, e <xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty> propriedades.</span><span class="sxs-lookup"><span data-stu-id="1a84d-266">You can position a popup by setting the <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>, <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A>, <xref:System.Windows.Controls.Primitives.Popup.Placement%2A>, <xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A>, and <xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty> properties.</span></span> <span data-ttu-id="1a84d-267">Para mais informações, consulte [Comportamento de posicionamento de pop-up](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span><span class="sxs-lookup"><span data-stu-id="1a84d-267">For more information, see [Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span></span>  
  
 <span data-ttu-id="1a84d-268">Se o <xref:System.Windows.SystemParameters.MenuDropAlignment%2A> é de propriedade `true`, definindo <xref:System.Windows.Controls.Primitives.Popup.Placement%2A> para <xref:System.Windows.Controls.Primitives.PlacementMode.Left> ou <xref:System.Windows.Controls.Primitives.PlacementMode.Right> inverte a posição do <xref:System.Windows.Controls.Primitives.Popup>; um <xref:System.Windows.Controls.Primitives.Popup> com <xref:System.Windows.Controls.Primitives.Popup.Placement%2A> definido como <xref:System.Windows.Controls.Primitives.PlacementMode.Left> alinha sua borda esquerda com o borda do botão direito do mouse <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A> e uma <xref:System.Windows.Controls.Primitives.Popup> com <xref:System.Windows.Controls.Primitives.Popup.Placement%2A> definido como <xref:System.Windows.Controls.Primitives.PlacementMode.Right> alinha sua borda direita à borda esquerda do <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a84d-268">If the <xref:System.Windows.SystemParameters.MenuDropAlignment%2A> property is `true`, setting <xref:System.Windows.Controls.Primitives.Popup.Placement%2A> to <xref:System.Windows.Controls.Primitives.PlacementMode.Left> or <xref:System.Windows.Controls.Primitives.PlacementMode.Right> reverses the position of the <xref:System.Windows.Controls.Primitives.Popup>; a <xref:System.Windows.Controls.Primitives.Popup> with <xref:System.Windows.Controls.Primitives.Popup.Placement%2A> set to <xref:System.Windows.Controls.Primitives.PlacementMode.Left> aligns its left edge with the right edge of <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A> and a <xref:System.Windows.Controls.Primitives.Popup> with <xref:System.Windows.Controls.Primitives.Popup.Placement%2A> set to <xref:System.Windows.Controls.Primitives.PlacementMode.Right> aligns its right edge with the left edge of <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>.</span></span>  
  
<a name="dependencyPropertyInfo_Placement"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="1a84d-269">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="1a84d-269">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a84d-270">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="1a84d-270">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.Popup.PlacementProperty>|  
|<span data-ttu-id="1a84d-271">Propriedades de metadados definido como `true`</span><span class="sxs-lookup"><span data-stu-id="1a84d-271">Metadata properties set to `true`</span></span>|<span data-ttu-id="1a84d-272">Nenhum</span><span class="sxs-lookup"><span data-stu-id="1a84d-272">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1a84d-273">O exemplo a seguir cria quatro <xref:System.Windows.Controls.Primitives.Popup> controles que estão em relação a uma imagem.</span><span class="sxs-lookup"><span data-stu-id="1a84d-273">The following example creates four <xref:System.Windows.Controls.Primitives.Popup> controls that are relative to an image.</span></span> <span data-ttu-id="1a84d-274">Cada <xref:System.Windows.Controls.Primitives.Popup> tem um valor diferente para a propriedade de posicionamento.</span><span class="sxs-lookup"><span data-stu-id="1a84d-274">Each <xref:System.Windows.Controls.Primitives.Popup> has a different value for the placement property.</span></span>  
  
 [!code-xaml[PopupPositionSnippet#3](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupPositionSnippet/CS/Window1.xaml#3)]   
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.Primitives.PlacementMode" />
        <altmember cref="P:System.Windows.Controls.Primitives.Popup.Placement" />
        <altmember cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" />
        <altmember cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" />
      </Docs>
    </Member>
    <Member MemberName="PlacementProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PlacementProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PlacementProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.Popup.PlacementProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PlacementProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PlacementProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PlacementProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.Popup.PlacementProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1a84d-275">Identifies the <see cref="P:System.Windows.Controls.Primitives.Popup.Placement" /> dependency property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-275">Identifies the <see cref="P:System.Windows.Controls.Primitives.Popup.Placement" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlacementRectangle">
      <MemberSignature Language="C#" Value="public System.Windows.Rect PlacementRectangle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Rect PlacementRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.Popup.PlacementRectangle" />
      <MemberSignature Language="VB.NET" Value="Public Property PlacementRectangle As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Rect PlacementRectangle { System::Windows::Rect get(); void set(System::Windows::Rect value); };" />
      <MemberSignature Language="F#" Value="member this.PlacementRectangle : System.Windows.Rect with get, set" Usage="System.Windows.Controls.Primitives.Popup.PlacementRectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1a84d-276">Gets or sets the rectangle relative to which the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control is positioned when it opens.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-276">Gets or sets the rectangle relative to which the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control is positioned when it opens.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1a84d-277">O retângulo utilizado para posicionar o controle <see cref="T:System.Windows.Controls.Primitives.Popup" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-277">The rectangle that is used to position the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control.</span>
          </span>
          <span data-ttu-id="1a84d-278">O padrão é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-278">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a84d-279">Você pode posicionar um pop-up, definindo o <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>, <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A>, <xref:System.Windows.Controls.Primitives.Popup.Placement%2A>, <xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A>, e <xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty> propriedades.</span><span class="sxs-lookup"><span data-stu-id="1a84d-279">You can position a popup by setting the <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>, <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A>, <xref:System.Windows.Controls.Primitives.Popup.Placement%2A>, <xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A>, and <xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty> properties.</span></span> <span data-ttu-id="1a84d-280">Para mais informações, consulte [Comportamento de posicionamento de pop-up](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span><span class="sxs-lookup"><span data-stu-id="1a84d-280">For more information, see [Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span></span>  
  
<a name="dependencyPropertyInfo_PlacementRectangle"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="1a84d-281">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="1a84d-281">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a84d-282">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="1a84d-282">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.Popup.PlacementRectangleProperty>|  
|<span data-ttu-id="1a84d-283">Propriedades de metadados definido como `true`</span><span class="sxs-lookup"><span data-stu-id="1a84d-283">Metadata properties set to `true`</span></span>|<span data-ttu-id="1a84d-284">Nenhum</span><span class="sxs-lookup"><span data-stu-id="1a84d-284">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1a84d-285">O exemplo a seguir define o <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A> propriedade de um <xref:System.Windows.Controls.Primitives.Popup>.</span><span class="sxs-lookup"><span data-stu-id="1a84d-285">The following example sets the <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A> property of a <xref:System.Windows.Controls.Primitives.Popup>.</span></span> <span data-ttu-id="1a84d-286">O <xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A>, <xref:System.Windows.Rect.Width%2A>, e <xref:System.Windows.Rect.Height%2A> propriedades do <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A> são 50, 50, 50 e 100, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="1a84d-286">The <xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A>, <xref:System.Windows.Rect.Width%2A>, and <xref:System.Windows.Rect.Height%2A> properties of the <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A> are 50, 50, 50, and 100, respectively.</span></span> <span data-ttu-id="1a84d-287">O <xref:System.Windows.Controls.Primitives.Popup> é relativo dos limites do <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="1a84d-287">The <xref:System.Windows.Controls.Primitives.Popup> is relative to the bounds of the <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A> property.</span></span> <span data-ttu-id="1a84d-288">Observe que o <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A> propriedade não cria um elemento visível no aplicativo; o exemplo cria um <xref:System.Windows.Shapes.Rectangle> com os mesmos limites para representar o <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a84d-288">Note that the <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A> property does not create a visible element in the application; the example creates a <xref:System.Windows.Shapes.Rectangle> with the same bounds to represent the <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A>.</span></span>  
  
 [!code-xaml[PopupPositionSnippet#6](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupPositionSnippet/CS/Window1.xaml#6)]   
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" />
        <altmember cref="P:System.Windows.Controls.Primitives.Popup.Placement" />
        <altmember cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" />
        <altmember cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" />
      </Docs>
    </Member>
    <Member MemberName="PlacementRectangleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PlacementRectangleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PlacementRectangleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.Popup.PlacementRectangleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PlacementRectangleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PlacementRectangleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PlacementRectangleProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.Popup.PlacementRectangleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1a84d-289">Identifies the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementRectangle" /> dependency property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-289">Identifies the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementRectangle" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlacementTarget">
      <MemberSignature Language="C#" Value="public System.Windows.UIElement PlacementTarget { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.UIElement PlacementTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" />
      <MemberSignature Language="VB.NET" Value="Public Property PlacementTarget As UIElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::UIElement ^ PlacementTarget { System::Windows::UIElement ^ get(); void set(System::Windows::UIElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PlacementTarget : System.Windows.UIElement with get, set" Usage="System.Windows.Controls.Primitives.Popup.PlacementTarget" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.UIElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1a84d-290">Gets or sets the element relative to which the <see cref="T:System.Windows.Controls.Primitives.Popup" /> is positioned when it opens.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-290">Gets or sets the element relative to which the <see cref="T:System.Windows.Controls.Primitives.Popup" /> is positioned when it opens.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1a84d-291">O <see cref="T:System.Windows.UIElement" /> que é o pai lógico do controle <see cref="T:System.Windows.Controls.Primitives.Popup" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-291">The <see cref="T:System.Windows.UIElement" /> that is the logical parent of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control.</span>
          </span>
          <span data-ttu-id="1a84d-292">O padrão é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-292">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a84d-293">Você pode posicionar um pop-up, definindo o <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>, <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A>, <xref:System.Windows.Controls.Primitives.Popup.Placement%2A>, <xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A>, e <xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty> propriedades.</span><span class="sxs-lookup"><span data-stu-id="1a84d-293">You can position a popup by setting the <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>, <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A>, <xref:System.Windows.Controls.Primitives.Popup.Placement%2A>, <xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A>, and <xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty> properties.</span></span> <span data-ttu-id="1a84d-294">Para mais informações, consulte [Comportamento de posicionamento de pop-up](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span><span class="sxs-lookup"><span data-stu-id="1a84d-294">For more information, see [Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span></span>  
  
<a name="dependencyPropertyInfo_PlacementTarget"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="1a84d-295">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="1a84d-295">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a84d-296">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="1a84d-296">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.Popup.PlacementTargetProperty>|  
|<span data-ttu-id="1a84d-297">Propriedades de metadados definido como `true`</span><span class="sxs-lookup"><span data-stu-id="1a84d-297">Metadata properties set to `true`</span></span>|<span data-ttu-id="1a84d-298">Nenhum</span><span class="sxs-lookup"><span data-stu-id="1a84d-298">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1a84d-299">O exemplo a seguir cria uma <xref:System.Windows.Controls.Primitives.Popup> que é o filho de um <xref:System.Windows.Controls.Canvas>e define <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A> para `ellipse1`, portanto, o pop-up é relativo a <xref:System.Windows.Shapes.Ellipse>.</span><span class="sxs-lookup"><span data-stu-id="1a84d-299">The following example creates a <xref:System.Windows.Controls.Primitives.Popup> that is the child of a <xref:System.Windows.Controls.Canvas>, and sets <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A> to `ellipse1`, so the popup is relative to the <xref:System.Windows.Shapes.Ellipse>.</span></span>  
  
 [!code-xaml[PopupPositionSnippet#2](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupPositionSnippet/CS/Window1.xaml#2)]    
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" />
        <altmember cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" />
        <altmember cref="P:System.Windows.Controls.Primitives.Popup.Placement" />
        <altmember cref="P:System.Windows.Controls.Primitives.Popup.PlacementRectangle" />
      </Docs>
    </Member>
    <Member MemberName="PlacementTargetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PlacementTargetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PlacementTargetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.Popup.PlacementTargetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PlacementTargetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PlacementTargetProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PlacementTargetProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.Popup.PlacementTargetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1a84d-300">Identifies the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> dependency property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-300">Identifies the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PopupAnimation">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.Primitives.PopupAnimation PopupAnimation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.Primitives.PopupAnimation PopupAnimation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.Popup.PopupAnimation" />
      <MemberSignature Language="VB.NET" Value="Public Property PopupAnimation As PopupAnimation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::Primitives::PopupAnimation PopupAnimation { System::Windows::Controls::Primitives::PopupAnimation get(); void set(System::Windows::Controls::Primitives::PopupAnimation value); };" />
      <MemberSignature Language="F#" Value="member this.PopupAnimation : System.Windows.Controls.Primitives.PopupAnimation with get, set" Usage="System.Windows.Controls.Primitives.Popup.PopupAnimation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Primitives.PopupAnimation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1a84d-301">Gets or sets an animation for the opening and closing of a <see cref="T:System.Windows.Controls.Primitives.Popup" /> control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-301">Gets or sets an animation for the opening and closing of a <see cref="T:System.Windows.Controls.Primitives.Popup" /> control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1a84d-302">O valor de enumeração <see cref="T:System.Windows.Controls.Primitives.PopupAnimation" /> que define uma animação para abrir e fechar um controle <see cref="T:System.Windows.Controls.Primitives.Popup" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-302">The <see cref="T:System.Windows.Controls.Primitives.PopupAnimation" /> enumeration value that defines an animation to open and close a <see cref="T:System.Windows.Controls.Primitives.Popup" /> control.</span>
          </span>
          <span data-ttu-id="1a84d-303">O padrão é <see cref="F:System.Windows.Controls.Primitives.PopupAnimation.None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-303">The default is <see cref="F:System.Windows.Controls.Primitives.PopupAnimation.None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a84d-304">Um <xref:System.Windows.Controls.Primitives.Popup> pode ser animado apenas quando o <xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A> estiver definida como `true`.</span><span class="sxs-lookup"><span data-stu-id="1a84d-304">A <xref:System.Windows.Controls.Primitives.Popup> can only animate when the <xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A> property is set to `true`.</span></span> <span data-ttu-id="1a84d-305">Isso requer que o aplicativo que cria o <xref:System.Windows.Controls.Primitives.Popup> controle para ser executado com confiança total.</span><span class="sxs-lookup"><span data-stu-id="1a84d-305">This requires the application that creates the <xref:System.Windows.Controls.Primitives.Popup> control to run with full trust.</span></span>  
  
 <span data-ttu-id="1a84d-306">Se o <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A> for animada, o <xref:System.Windows.Controls.Primitives.Popup> não será animada.</span><span class="sxs-lookup"><span data-stu-id="1a84d-306">If the <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A> is animated, the <xref:System.Windows.Controls.Primitives.Popup> will not be animated.</span></span>  
  
<a name="dependencyPropertyInfo_PopupAnimation"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="1a84d-307">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="1a84d-307">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a84d-308">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="1a84d-308">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.Popup.PopupAnimationProperty>|  
|<span data-ttu-id="1a84d-309">Propriedades de metadados definido como `true`</span><span class="sxs-lookup"><span data-stu-id="1a84d-309">Metadata properties set to `true`</span></span>|<span data-ttu-id="1a84d-310">Nenhum</span><span class="sxs-lookup"><span data-stu-id="1a84d-310">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1a84d-311">O exemplo a seguir mostra como definir o <xref:System.Windows.Controls.Primitives.Popup.PopupAnimation%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="1a84d-311">The following example shows how to set the <xref:System.Windows.Controls.Primitives.Popup.PopupAnimation%2A> property.</span></span>  
  
 [!code-csharp[PopupSnips#AllowsTransparency](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupSnips/Csharp/Window1.xaml.cs#allowstransparency)]
 [!code-vb[PopupSnips#AllowsTransparency](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PopupSnips/visualbasic/window1.xaml.vb#allowstransparency)]
 [!code-xaml[PopupSnips#AllowsTransparency](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupSnips/Csharp/Window1.xaml#allowstransparency)]  
  
 [!code-csharp[PopupSnips#Animation](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupSnips/Csharp/Window1.xaml.cs#animation)]
 [!code-vb[PopupSnips#Animation](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PopupSnips/visualbasic/window1.xaml.vb#animation)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.Primitives.PopupAnimation" />
      </Docs>
    </Member>
    <Member MemberName="PopupAnimationProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PopupAnimationProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PopupAnimationProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.Popup.PopupAnimationProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PopupAnimationProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PopupAnimationProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PopupAnimationProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.Popup.PopupAnimationProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1a84d-312">Identifies the <see cref="P:System.Windows.Controls.Primitives.Popup.PopupAnimation" /> dependency property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-312">Identifies the <see cref="P:System.Windows.Controls.Primitives.Popup.PopupAnimation" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StaysOpen">
      <MemberSignature Language="C#" Value="public bool StaysOpen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StaysOpen" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.Popup.StaysOpen" />
      <MemberSignature Language="VB.NET" Value="Public Property StaysOpen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StaysOpen { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.StaysOpen : bool with get, set" Usage="System.Windows.Controls.Primitives.Popup.StaysOpen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1a84d-313">Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control closes when the control is no longer in focus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-313">Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control closes when the control is no longer in focus.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1a84d-314">
            <see langword="true" /> se o controle de <see cref="T:System.Windows.Controls.Primitives.Popup" /> fecha quando a propriedade <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /> é definida como <see langword="false" />; <see langword="false" /> se o <see cref="T:System.Windows.Controls.Primitives.Popup" /> controle fecha quando ocorre um evento de mouse ou teclado fora do controle de <see cref="T:System.Windows.Controls.Primitives.Popup" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-314">
              <see langword="true" /> if the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control closes when <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /> property is set to <see langword="false" />; <see langword="false" /> if the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control closes when a mouse or keyboard event occurs outside the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control.</span>
          </span>
          <span data-ttu-id="1a84d-315">O padrão é <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-315">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a84d-316">Quando o <xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A> estiver definida como `true`, <xref:System.Windows.Controls.Primitives.Popup> permanece aberto até que ela é fechada explicitamente definindo a <xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A> propriedade `false`.</span><span class="sxs-lookup"><span data-stu-id="1a84d-316">When the <xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A> property is set to `true`, <xref:System.Windows.Controls.Primitives.Popup> stays open until it is explicitly closed by setting the <xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A> property to `false`.</span></span> <span data-ttu-id="1a84d-317">Quando <xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A> está `false`, o <xref:System.Windows.Controls.Primitives.Popup> controle intercepta todos os eventos de mouse e teclado para determinar quando um desses eventos ocorre fora o <xref:System.Windows.Controls.Primitives.Popup> controle.</span><span class="sxs-lookup"><span data-stu-id="1a84d-317">When <xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A> is `false`, the <xref:System.Windows.Controls.Primitives.Popup> control intercepts all mouse and keyboard events to determine when one of these events occurs outside the <xref:System.Windows.Controls.Primitives.Popup> control.</span></span>  
  
<a name="dependencyPropertyInfo_StaysOpen"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="1a84d-318">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="1a84d-318">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a84d-319">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="1a84d-319">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.Popup.StaysOpenProperty>|  
|<span data-ttu-id="1a84d-320">Propriedades de metadados definido como `true`</span><span class="sxs-lookup"><span data-stu-id="1a84d-320">Metadata properties set to `true`</span></span>|<span data-ttu-id="1a84d-321">Nenhum</span><span class="sxs-lookup"><span data-stu-id="1a84d-321">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1a84d-322">O exemplo a seguir mostra como definir o <xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="1a84d-322">The following example shows how to set the <xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A> property.</span></span>  
  
 [!code-csharp[PopupSnips#StaysOpen](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupSnips/Csharp/Window1.xaml.cs#staysopen)]
 [!code-vb[PopupSnips#StaysOpen](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PopupSnips/visualbasic/window1.xaml.vb#staysopen)]
 [!code-xaml[PopupSnips#StaysOpen](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupSnips/Csharp/Window1.xaml#staysopen)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" />
      </Docs>
    </Member>
    <Member MemberName="StaysOpenProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StaysOpenProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StaysOpenProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.Popup.StaysOpenProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StaysOpenProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ StaysOpenProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable StaysOpenProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.Popup.StaysOpenProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1a84d-323">Identifies the <see cref="P:System.Windows.Controls.Primitives.Popup.StaysOpen" /> dependency property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-323">Identifies the <see cref="P:System.Windows.Controls.Primitives.Popup.StaysOpen" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.Popup.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddChild (value As Object) Implements IAddChild.AddChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddChild(System::Object ^ value) = System::Windows::Markup::IAddChild::AddChild;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1a84d-324">An object to add as a child.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-324">An object to add as a child.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1a84d-325">This member supports the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-325">This member supports the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.Popup.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub AddText (text As String) Implements IAddChild.AddText" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddText(System::String ^ text) = System::Windows::Markup::IAddChild::AddText;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="1a84d-326">A string to add to the object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-326">A string to add to the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1a84d-327">This member supports the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-327">This member supports the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalOffset">
      <MemberSignature Language="C#" Value="public double VerticalOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 VerticalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property VerticalOffset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double VerticalOffset { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.VerticalOffset : double with get, set" Usage="System.Windows.Controls.Primitives.Popup.VerticalOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1a84d-328">Gets or sets the vertical distance between the target origin and the popup alignment point.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-328">Gets or sets the vertical distance between the target origin and the popup alignment point.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1a84d-329">A distância vertical entre a origem de destino e o ponto de alinhamento do pop-up.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-329">The vertical distance between the target origin and the popup alignment point.</span>
          </span>
          <span data-ttu-id="1a84d-330">Para obter informações sobre o ponto de alinhamento de pop-up e de origem de destino, consulte [pop-up posicionamento Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-330">For information about the target origin and popup alignment point, see [Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span>
          </span>
          <span data-ttu-id="1a84d-331">O padrão é 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-331">The default is 0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a84d-332">Você pode posicionar um pop-up, definindo o <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>, <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A>, <xref:System.Windows.Controls.Primitives.Popup.Placement%2A>, <xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A>, e <xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty> propriedades.</span><span class="sxs-lookup"><span data-stu-id="1a84d-332">You can position a popup by setting the <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>, <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A>, <xref:System.Windows.Controls.Primitives.Popup.Placement%2A>, <xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A>, and <xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty> properties.</span></span> <span data-ttu-id="1a84d-333">Para mais informações, consulte [Comportamento de posicionamento de pop-up](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span><span class="sxs-lookup"><span data-stu-id="1a84d-333">For more information, see [Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span></span>  
  
<a name="xamlAttributeUsage_VerticalOffset"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="1a84d-334">Uso do Atributo XAML</span><span class="sxs-lookup"><span data-stu-id="1a84d-334">XAML Attribute Usage</span></span>  
  
```  
<object VerticalOffset="double"/>  
- or -  
<object VerticalOffset="qualifiedDouble"/>  
```  
  
<a name="xamlValues_VerticalOffset"></a>   
## <a name="xaml-values"></a><span data-ttu-id="1a84d-335">Valores XAML</span><span class="sxs-lookup"><span data-stu-id="1a84d-335">XAML Values</span></span>  
 `double`  
 <xref:System.Double>  
  
 <span data-ttu-id="1a84d-336">Uma representação de cadeia de caracteres de um <xref:System.Double> valor.</span><span class="sxs-lookup"><span data-stu-id="1a84d-336">A string representation of a <xref:System.Double> value.</span></span> <span data-ttu-id="1a84d-337">Isso é interpretado como um [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] medida.</span><span class="sxs-lookup"><span data-stu-id="1a84d-337">This is interpreted as a [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] measurement.</span></span> <span data-ttu-id="1a84d-338">Cadeias de caracteres não é necessário incluir explicitamente os pontos decimais.</span><span class="sxs-lookup"><span data-stu-id="1a84d-338">Strings do not have to explicitly include decimal points.</span></span> <span data-ttu-id="1a84d-339">Por exemplo, um valor de `1` é aceitável.</span><span class="sxs-lookup"><span data-stu-id="1a84d-339">For example, a value of `1` is acceptable.</span></span>  
  
 <span data-ttu-id="1a84d-340">O mesmo <xref:System.Double> restrições de intervalo como aqueles que são mencionadas na seção de valor de propriedade deste tópico.</span><span class="sxs-lookup"><span data-stu-id="1a84d-340">The same <xref:System.Double> range restrictions apply as those that are mentioned in the Property Value section of this topic.</span></span>  
  
 `qualifiedDouble`  
 <span data-ttu-id="1a84d-341">Um `double` valor conforme descrito anteriormente nesta tabela, seguido por um dos seguintes unidade declaração cadeias de caracteres: `px`, `in`, `cm`, ou `pt`.</span><span class="sxs-lookup"><span data-stu-id="1a84d-341">A `double` value as described earlier in this table, followed by one of the following unit declaration strings: `px`, `in`, `cm`, or `pt`.</span></span>  
  
 <span data-ttu-id="1a84d-342">`px` (padrão) [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="1a84d-342">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="1a84d-343">`in` polegadas; 1 na = 96 px</span><span class="sxs-lookup"><span data-stu-id="1a84d-343">`in` is inches; 1in=96px</span></span>  
  
 <span data-ttu-id="1a84d-344">`cm` centímetros; 1cm=(96/2.54) px</span><span class="sxs-lookup"><span data-stu-id="1a84d-344">`cm` is centimeters; 1cm=(96/2.54) px</span></span>  
  
 <span data-ttu-id="1a84d-345">`pt` pontos de; 1pt=(96/72) px</span><span class="sxs-lookup"><span data-stu-id="1a84d-345">`pt` is points; 1pt=(96/72) px</span></span>  
  
<a name="dependencyPropertyInfo_VerticalOffset"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="1a84d-346">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="1a84d-346">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1a84d-347">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="1a84d-347">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty>|  
|<span data-ttu-id="1a84d-348">Propriedades de metadados definido como `true`</span><span class="sxs-lookup"><span data-stu-id="1a84d-348">Metadata properties set to `true`</span></span>|<span data-ttu-id="1a84d-349">Nenhum</span><span class="sxs-lookup"><span data-stu-id="1a84d-349">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1a84d-350">O exemplo a seguir cria uma <xref:System.Windows.Controls.Primitives.Popup> e define o <xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A> e <xref:System.Windows.Controls.Primitives.Popup.VerticalOffset%2A> propriedades como 20.</span><span class="sxs-lookup"><span data-stu-id="1a84d-350">The following example creates a <xref:System.Windows.Controls.Primitives.Popup> and sets the <xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A> and <xref:System.Windows.Controls.Primitives.Popup.VerticalOffset%2A> properties to 20.</span></span>  <span data-ttu-id="1a84d-351">O <xref:System.Windows.Controls.Primitives.Popup.Placement%2A> estiver definida como <xref:System.Windows.Controls.Primitives.PlacementMode.Bottom> (que é o padrão), portanto, a origem de destino é o canto inferior esquerdo da área de destino e o ponto de alinhamento do pop-up é o canto superior esquerdo do <xref:System.Windows.Controls.Primitives.Popup>.</span><span class="sxs-lookup"><span data-stu-id="1a84d-351">The <xref:System.Windows.Controls.Primitives.Popup.Placement%2A> property is set to <xref:System.Windows.Controls.Primitives.PlacementMode.Bottom> (which is the default), so the target origin is the bottom left corner of the target area, and the popup alignment point is the top left corner of the <xref:System.Windows.Controls.Primitives.Popup>.</span></span>  
  
 [!code-xaml[PopupPositionSnippet#5](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupPositionSnippet/CS/Window1.xaml#5)]     
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" />
        <altmember cref="P:System.Windows.Controls.Primitives.Popup.PlacementRectangle" />
        <altmember cref="P:System.Windows.Controls.Primitives.Popup.Placement" />
        <altmember cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" />
      </Docs>
    </Member>
    <Member MemberName="VerticalOffsetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty VerticalOffsetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty VerticalOffsetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly VerticalOffsetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ VerticalOffsetProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable VerticalOffsetProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1a84d-352">Identifies the <see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" /> dependency property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a84d-352">Identifies the <see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>