<Type Name="ListEnumerator&lt;TValue&gt;" FullName="Microsoft.VisualC.StlClr.ListEnumerator&lt;TValue&gt;">
  <TypeSignature Language="C#" Value="public class ListEnumerator&lt;TValue&gt; : Microsoft.VisualC.StlClr.ListEnumeratorBase&lt;TValue&gt;, System.Collections.Generic.IEnumerator&lt;TValue&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ListEnumerator`1&lt;TValue&gt; extends Microsoft.VisualC.StlClr.ListEnumeratorBase`1&lt;!TValue&gt; implements class System.Collections.Generic.IEnumerator`1&lt;!TValue&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualC.StlClr.ListEnumerator`1" />
  <TypeSignature Language="VB.NET" Value="Public Class ListEnumerator(Of TValue)&#xA;Inherits ListEnumeratorBase(Of TValue)&#xA;Implements IEnumerator(Of TValue)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TValue&gt;&#xA;public ref class ListEnumerator : Microsoft::VisualC::StlClr::ListEnumeratorBase&lt;TValue&gt;, System::Collections::Generic::IEnumerator&lt;TValue&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TValue" />
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.VisualC.StlClr.ListEnumeratorBase&lt;TValue&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TValue">TValue</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerator&lt;TValue&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1038")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TValue"><span data-ttu-id="ebb2a-101">O tipo de um elemento na sequência controlada.</span><span class="sxs-lookup"><span data-stu-id="ebb2a-101">The type of an element in the controlled sequence.</span></span></typeparam>
    <summary><span data-ttu-id="ebb2a-102">Dá suporte à iteração simples sobre qualquer objeto STL/CLR que implementa a interface <see cref="T:Microsoft.VisualC.StlClr.IList`1" />.</span><span class="sxs-lookup"><span data-stu-id="ebb2a-102">Supports simple iteration over any STL/CLR object that implements the <see cref="T:Microsoft.VisualC.StlClr.IList`1" /> interface.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[unnamed_parm](~/includes/unnamed-parm-md.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListEnumerator (Microsoft.VisualC.StlClr.Generic.INode&lt;TValue&gt; _First);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.VisualC.StlClr.Generic.INode`1&lt;!TValue&gt; _First) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ListEnumerator`1.#ctor(Microsoft.VisualC.StlClr.Generic.INode{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (_First As INode(Of TValue))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListEnumerator(Microsoft::VisualC::StlClr::Generic::INode&lt;TValue&gt; ^ _First);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="_First" Type="Microsoft.VisualC.StlClr.Generic.INode&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="_First"><span data-ttu-id="ebb2a-103">O primeiro nó no contêiner pelo qual iterar.</span><span class="sxs-lookup"><span data-stu-id="ebb2a-103">The first node in the container over which to iterate.</span></span></param>
        <summary><span data-ttu-id="ebb2a-104">Aloca e inicializa um novo objeto <see cref="T:Microsoft.VisualC.StlClr.ListEnumerator`1" />.</span><span class="sxs-lookup"><span data-stu-id="ebb2a-104">Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.ListEnumerator`1" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public virtual TValue Current { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TValue Current" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualC.StlClr.ListEnumerator`1.Current" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Current As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property TValue Current { TValue get(); void set(TValue value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ebb2a-105">Obtém ou define o elemento atual na coleção.</span><span class="sxs-lookup"><span data-stu-id="ebb2a-105">Gets or sets the current element in the collection.</span></span></summary>
        <value><span data-ttu-id="ebb2a-106">O elemento atual na coleção.</span><span class="sxs-lookup"><span data-stu-id="ebb2a-106">The current element in the collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ebb2a-107">Libera ou redefine os recursos não gerenciados usados pelo objeto <see cref="T:Microsoft.VisualC.StlClr.ListEnumerator`1" />.</span><span class="sxs-lookup"><span data-stu-id="ebb2a-107">Frees, releases, or resets unmanaged resources that are used by the <see cref="T:Microsoft.VisualC.StlClr.ListEnumerator`1" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override sealed void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ListEnumerator`1.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Dispose();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ebb2a-108">Libera ou redefine os recursos não gerenciados usados pelo objeto <see cref="T:Microsoft.VisualC.StlClr.ListEnumerator`1" />.</span><span class="sxs-lookup"><span data-stu-id="ebb2a-108">Frees, releases, or resets unmanaged resources that are used by the <see cref="T:Microsoft.VisualC.StlClr.ListEnumerator`1" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool A_0);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool A_0) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ListEnumerator`1.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (A_0 As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool A_0);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="A_0" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="A_0">
          <span data-ttu-id="ebb2a-109"><see langword="true" /> para descarte de objetos gerenciados; <see langword="false" /> para descarte de objetos não gerenciados.</span><span class="sxs-lookup"><span data-stu-id="ebb2a-109"><see langword="true" /> to dispose of managed objects; <see langword="false" /> to dispose of unmanaged objects.</span></span></param>
        <summary><span data-ttu-id="ebb2a-110">Libera ou redefine os recursos não gerenciados usados pelo objeto <see cref="T:Microsoft.VisualC.StlClr.ListEnumerator`1" />.</span><span class="sxs-lookup"><span data-stu-id="ebb2a-110">Frees, releases, or resets unmanaged resources that are used by the <see cref="T:Microsoft.VisualC.StlClr.ListEnumerator`1" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public override bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ListEnumerator`1.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveNext();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ebb2a-111">Avança o enumerador para o próximo elemento da coleção.</span><span class="sxs-lookup"><span data-stu-id="ebb2a-111">Advances the enumerator to the next element in the collection.</span></span></summary>
        <returns>
          <span data-ttu-id="ebb2a-112"><see langword="true" /> se o enumerador foi avançado com êxito para o próximo elemento; <see langword="false" /> se o enumerador passou o final da coleção.</span><span class="sxs-lookup"><span data-stu-id="ebb2a-112"><see langword="true" /> if the enumerator was successfully advanced to the next element; <see langword="false" /> if the enumerator has passed the end of the collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public override void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ListEnumerator`1.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ebb2a-113">Define o enumerador com sua posição inicial, que é antes do primeiro elemento da coleção.</span><span class="sxs-lookup"><span data-stu-id="ebb2a-113">Sets the enumerator to its initial position, which is before the first element in the collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>