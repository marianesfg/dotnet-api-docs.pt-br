<Type Name="TreeEnumeratorBase&lt;TKey,TValue&gt;" FullName="Microsoft.VisualC.StlClr.TreeEnumeratorBase&lt;TKey,TValue&gt;">
  <TypeSignature Language="C#" Value="public class TreeEnumeratorBase&lt;TKey,TValue&gt; : System.Collections.IEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TreeEnumeratorBase`2&lt;TKey, TValue&gt; extends System.Object implements class System.Collections.IEnumerator" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2" />
  <TypeSignature Language="VB.NET" Value="Public Class TreeEnumeratorBase(Of TKey, TValue)&#xA;Implements IEnumerator" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TKey, typename TValue&gt;&#xA;public ref class TreeEnumeratorBase : System::Collections::IEnumerator" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey" />
    <TypeParameter Name="TValue" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerator</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1005")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1038")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TKey"><span data-ttu-id="9c790-101">O tipo do componente principal de um elemento na sequência controlada.</span><span class="sxs-lookup"><span data-stu-id="9c790-101">The type of the key component of an element in the controlled sequence.</span></span></typeparam>
    <typeparam name="TValue"><span data-ttu-id="9c790-102">O tipo de componente do valor de um elemento na sequência controlada.</span><span class="sxs-lookup"><span data-stu-id="9c790-102">The type of the value component of an element in the controlled sequence.</span></span></typeparam>
    <summary><span data-ttu-id="9c790-103">Dá suporte à iteração simples sobre qualquer objeto STL/CLR que implementa a interface <see cref="T:Microsoft.VisualC.StlClr.ITree`2" />.</span><span class="sxs-lookup"><span data-stu-id="9c790-103">Supports simple iteration over any STL/CLR object that implements the <see cref="T:Microsoft.VisualC.StlClr.ITree`2" /> interface.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeEnumeratorBase (Microsoft.VisualC.StlClr.Generic.INode&lt;TValue&gt; _First);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.VisualC.StlClr.Generic.INode`1&lt;!TValue&gt; _First) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2.#ctor(Microsoft.VisualC.StlClr.Generic.INode{`1})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (_First As INode(Of TValue))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeEnumeratorBase(Microsoft::VisualC::StlClr::Generic::INode&lt;TValue&gt; ^ _First);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="_First" Type="Microsoft.VisualC.StlClr.Generic.INode&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="_First"><span data-ttu-id="9c790-104">O primeiro nó no contêiner pelo qual iterar.</span><span class="sxs-lookup"><span data-stu-id="9c790-104">The first node in the container over which to iterate.</span></span></param>
        <summary><span data-ttu-id="9c790-105">Aloca e inicializa um novo objeto <see cref="T:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2" />.</span><span class="sxs-lookup"><span data-stu-id="9c790-105">Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public virtual object Current { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Current" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2.Current" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Current As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ Current { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c790-106">Obtém ou define o elemento atual na coleção.</span><span class="sxs-lookup"><span data-stu-id="9c790-106">Gets or sets the current element in the collection.</span></span></summary>
        <value><span data-ttu-id="9c790-107">O elemento atual na coleção.</span><span class="sxs-lookup"><span data-stu-id="9c790-107">The current element in the collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public virtual bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveNext();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.MoveNext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9c790-108">Avança o enumerador para o próximo elemento da coleção.</span><span class="sxs-lookup"><span data-stu-id="9c790-108">Advances the enumerator to the next element in the collection.</span></span></summary>
        <returns>
          <span data-ttu-id="9c790-109"><see langword="true" /> se o enumerador foi avançado com êxito para o próximo elemento; <see langword="false" /> se o enumerador passou o final da coleção.</span><span class="sxs-lookup"><span data-stu-id="9c790-109"><see langword="true" /> if the enumerator was successfully advanced to the next element; <see langword="false" /> if the enumerator has passed the end of the collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public virtual void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.Reset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9c790-110">Define o enumerador com sua posição inicial, que é antes do primeiro elemento da coleção.</span><span class="sxs-lookup"><span data-stu-id="9c790-110">Sets the enumerator to its initial position, which is before the first element in the collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>