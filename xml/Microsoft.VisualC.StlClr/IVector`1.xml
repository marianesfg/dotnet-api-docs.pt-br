<Type Name="IVector&lt;TValue&gt;" FullName="Microsoft.VisualC.StlClr.IVector&lt;TValue&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="41241d4ab321e8b55283cd9436c6323fbd5b1dee" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39773406" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IVector&lt;TValue&gt; : ICloneable, Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer&lt;TValue&gt;, System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IVector`1&lt;TValue&gt; implements class Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1&lt;!TValue&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualC.StlClr.IVector`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IVector(Of TValue)&#xA;Implements ICloneable, ICollection, IRandomAccessContainer(Of TValue)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TValue&gt;&#xA;public interface class IVector : ICloneable, Microsoft::VisualC::StlClr::Generic::IRandomAccessContainer&lt;TValue&gt;, System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type IVector&lt;'Value&gt; = interface&#xA;    interface IRandomAccessContainer&lt;'Value&gt;&#xA;    interface ICloneable&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TValue" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer&lt;TValue&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TValue">
      <span data-ttu-id="8c874-101">O tipo de um elemento na sequência controlada.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8c874-101">The type of an element in the controlled sequence.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="8c874-102">Define a interface para um objeto de [vetor](http://msdn.microsoft.com/library/f90060d5-097a-4e9d-9a26-a634b5b9c6c2) STL/CLR.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8c874-102">Defines the interface for an STL/CLR [vector](http://msdn.microsoft.com/library/f90060d5-097a-4e9d-9a26-a634b5b9c6c2) object.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[unnamed_parm](~/includes/unnamed-parm-md.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="assign">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8c874-103">Substitui todos os elementos no contêiner pelos elementos especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-103">Replaces all elements in the container with the specified elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c874-104">Para obter mais informações, consulte [Vector:: Assign (STL/CLR)](http://msdn.microsoft.com/library/945e2048-6c61-4701-b13c-8241cbee3fa1).</span><span class="sxs-lookup"><span data-stu-id="8c874-104">For more information, see [vector::assign (STL/CLR)](http://msdn.microsoft.com/library/945e2048-6c61-4701-b13c-8241cbee3fa1).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="assign">
      <MemberSignature Language="C#" Value="public void assign (System.Collections.IEnumerable _Right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void assign(class System.Collections.IEnumerable _Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.assign(System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub assign (_Right As IEnumerable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void assign(System::Collections::IEnumerable ^ _Right);" />
      <MemberSignature Language="F#" Value="abstract member assign : System.Collections.IEnumerable -&gt; unit" Usage="iVector.assign _Right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Right" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="_Right">
          <span data-ttu-id="8c874-105">A enumeração cujos elementos serão inseridos no contêiner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-105">The enumeration whose elements are to be inserted into the container.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c874-106">Substitui todos os elementos no contêiner pelos elementos na enumeração especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-106">Replaces all elements in the container with the elements in the specified enumeration.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c874-107">Para obter mais informações, consulte [Vector:: Assign (STL/CLR)](http://msdn.microsoft.com/library/945e2048-6c61-4701-b13c-8241cbee3fa1).</span><span class="sxs-lookup"><span data-stu-id="8c874-107">For more information, see [vector::assign (STL/CLR)](http://msdn.microsoft.com/library/945e2048-6c61-4701-b13c-8241cbee3fa1).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="assign">
      <MemberSignature Language="C#" Value="public void assign (Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt; _First, Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt; _Last);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void assign(class Microsoft.VisualC.StlClr.Generic.IInputIterator`1&lt;!TValue&gt; _First, class Microsoft.VisualC.StlClr.Generic.IInputIterator`1&lt;!TValue&gt; _Last) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.assign(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub assign (_First As IInputIterator(Of TValue), _Last As IInputIterator(Of TValue))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void assign(Microsoft::VisualC::StlClr::Generic::IInputIterator&lt;TValue&gt; ^ _First, Microsoft::VisualC::StlClr::Generic::IInputIterator&lt;TValue&gt; ^ _Last);" />
      <MemberSignature Language="F#" Value="abstract member assign : Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;'Value&gt; * Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;'Value&gt; -&gt; unit" Usage="iVector.assign (_First, _Last)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_First" Type="Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt;" />
        <Parameter Name="_Last" Type="Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="_First">
          <span data-ttu-id="8c874-108">A posição de início do intervalo de elementos a inserir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-108">The beginning position of the range of elements to insert.</span>
          </span>
        </param>
        <param name="_Last">
          <span data-ttu-id="8c874-109">A primeira posição além do fim do intervalo de elementos a inserir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-109">The first position beyond the end of the range of elements to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c874-110">Substitui todos os elementos no contêiner pelos elementos entre os iteradores determinados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-110">Replaces all elements in the container with the elements between the given iterators.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c874-111">Para obter mais informações, consulte [Vector:: Assign (STL/CLR)](http://msdn.microsoft.com/library/945e2048-6c61-4701-b13c-8241cbee3fa1).</span><span class="sxs-lookup"><span data-stu-id="8c874-111">For more information, see [vector::assign (STL/CLR)](http://msdn.microsoft.com/library/945e2048-6c61-4701-b13c-8241cbee3fa1).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="assign">
      <MemberSignature Language="C#" Value="public void assign (int _Count, TValue _Val);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void assign(int32 _Count, !TValue _Val) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.assign(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub assign (_Count As Integer, _Val As TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void assign(int _Count, TValue _Val);" />
      <MemberSignature Language="F#" Value="abstract member assign : int * 'Value -&gt; unit" Usage="iVector.assign (_Count, _Val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Count" Type="System.Int32" />
        <Parameter Name="_Val" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="_Count">
          <span data-ttu-id="8c874-112">O número de elementos a serem inseridos no contêiner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-112">The number of elements to insert into the container.</span>
          </span>
        </param>
        <param name="_Val">
          <span data-ttu-id="8c874-113">O valor do elemento a ser inserido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-113">The value of the element to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c874-114">Substitui todos os elementos no contêiner pelo número especificado de elementos que têm os valores determinados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-114">Replaces all elements in the container with the specified number of elements that have given values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c874-115">Para obter mais informações, consulte [Vector:: Assign (STL/CLR)](http://msdn.microsoft.com/library/945e2048-6c61-4701-b13c-8241cbee3fa1).</span><span class="sxs-lookup"><span data-stu-id="8c874-115">For more information, see [vector::assign (STL/CLR)](http://msdn.microsoft.com/library/945e2048-6c61-4701-b13c-8241cbee3fa1).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="at">
      <MemberSignature Language="C#" Value="public TValue at (int _Pos);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TValue at(int32 _Pos) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.at(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function at (_Pos As Integer) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TValue % at(int _Pos);" />
      <MemberSignature Language="F#" Value="abstract member at : int -&gt; " Usage="iVector.at _Pos" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue@</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Pos" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="_Pos">
          <span data-ttu-id="8c874-116">A posição do elemento a ser acessado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-116">The position of the element to access.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c874-117">Acessa um elemento em uma posição especificada no contêiner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-117">Accesses an element at a specified position in the container.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8c874-118">O elemento da sequência controlada na posição <paramref name="_Pos" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-118">The element of the controlled sequence at position <paramref name="_Pos" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c874-119">Para obter mais informações, consulte [Vector:: AT (STL/CLR)](http://msdn.microsoft.com/library/9af9f829-48b8-4906-ba4a-b43454acb2c7).</span><span class="sxs-lookup"><span data-stu-id="8c874-119">For more information, see [vector::at (STL/CLR)](http://msdn.microsoft.com/library/9af9f829-48b8-4906-ba4a-b43454acb2c7).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="back">
      <MemberSignature Language="C#" Value="public TValue back ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TValue back() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.back" />
      <MemberSignature Language="VB.NET" Value="Public Function back () As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TValue % back();" />
      <MemberSignature Language="F#" Value="abstract member back : unit -&gt; " Usage="iVector.back " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue@</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8c874-120">Acessa o último elemento do contêiner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-120">Accesses the last element of the container.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8c874-121">O último elemento da sequência controlada, que deve ser não vazia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-121">The last element of the controlled sequence, which must be non-empty.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c874-122">Para obter mais informações, consulte [Vector:: back (STL/CLR)](http://msdn.microsoft.com/library/5edb3fcc-74c5-4f04-b8dd-edab49ba45a0).</span><span class="sxs-lookup"><span data-stu-id="8c874-122">For more information, see [vector::back (STL/CLR)](http://msdn.microsoft.com/library/5edb3fcc-74c5-4f04-b8dd-edab49ba45a0).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="back_item">
      <MemberSignature Language="C#" Value="public TValue back_item { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TValue back_item" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualC.StlClr.IVector`1.back_item" />
      <MemberSignature Language="VB.NET" Value="Public Property back_item As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TValue back_item { TValue get(); void set(TValue value); };" />
      <MemberSignature Language="F#" Value="member this.back_item : 'Value with get, set" Usage="Microsoft.VisualC.StlClr.IVector&lt;'Value&gt;.back_item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8c874-123">Acessa o último elemento do contêiner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-123">Accesses the last element of the container.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8c874-124">O último elemento da sequência controlada, que deve ser não vazia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-124">The last element of the controlled sequence, which must be non-empty.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c874-125">Para obter mais informações, consulte [vector::back_item (STL/CLR)](http://msdn.microsoft.com/library/9658ffa8-7bde-4242-9ed9-ca42be0d1433).</span><span class="sxs-lookup"><span data-stu-id="8c874-125">For more information, see [vector::back_item (STL/CLR)](http://msdn.microsoft.com/library/9658ffa8-7bde-4242-9ed9-ca42be0d1433).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="begin">
      <MemberSignature Language="C#" Value="public void begin (ref Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt; );" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void begin(class Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1&lt;!TValue&gt;&amp; ) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.begin(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function begin (ByRef  As ContainerRandomAccessIterator(Of TValue)) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ begin(Microsoft::VisualC::StlClr::Generic::ContainerRandomAccessIterator&lt;TValue&gt; ^ % );" />
      <MemberSignature Language="F#" Value="abstract member begin :  -&gt; unit" Usage="iVector.begin " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="">To be added.</param>
        <summary>
          <span data-ttu-id="8c874-126">Designa o início da sequência controlada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-126">Designates the beginning of the controlled sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8c874-127">Um iterador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-127">An iterator.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c874-128">Para obter mais informações, consulte [Vector:: Begin (STL/CLR)](http://msdn.microsoft.com/library/f9cdf854-0770-4334-a3dd-7f4d728a42bd).</span><span class="sxs-lookup"><span data-stu-id="8c874-128">For more information, see [vector::begin (STL/CLR)](http://msdn.microsoft.com/library/f9cdf854-0770-4334-a3dd-7f4d728a42bd).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="capacity">
      <MemberSignature Language="C#" Value="public int capacity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 capacity() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.capacity" />
      <MemberSignature Language="VB.NET" Value="Public Function capacity () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int capacity();" />
      <MemberSignature Language="F#" Value="abstract member capacity : unit -&gt; int" Usage="iVector.capacity " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8c874-129">Relata o tamanho do armazenamento alocado para o contêiner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-129">Reports the size of allocated storage for the container.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8c874-130">O armazenamento alocado no momento para conter a sequência controlada, um valor pelo menos tão grande quanto <see cref="M:Microsoft.VisualC.StlClr.IVector`1.size" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-130">The storage that is currently allocated to hold the controlled sequence, a value at least as large as <see cref="M:Microsoft.VisualC.StlClr.IVector`1.size" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c874-131">Para obter mais informações, consulte [Vector:: Capacity (STL/CLR)](http://msdn.microsoft.com/library/f82d8da9-8b4d-4288-8d18-8e9ca5911d87).</span><span class="sxs-lookup"><span data-stu-id="8c874-131">For more information, see [vector::capacity (STL/CLR)](http://msdn.microsoft.com/library/f82d8da9-8b4d-4288-8d18-8e9ca5911d87).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="clear">
      <MemberSignature Language="C#" Value="public void clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void clear();" />
      <MemberSignature Language="F#" Value="abstract member clear : unit -&gt; unit" Usage="iVector.clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8c874-132">Remove todos os elementos do contêiner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-132">Removes all elements from the container.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c874-133">Para obter mais informações, consulte [Vector:: Clear (STL/CLR)](http://msdn.microsoft.com/library/4ed20ec8-3089-4c36-b68f-1b51c639041f).</span><span class="sxs-lookup"><span data-stu-id="8c874-133">For more information, see [vector::clear (STL/CLR)](http://msdn.microsoft.com/library/4ed20ec8-3089-4c36-b68f-1b51c639041f).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="empty">
      <MemberSignature Language="C#" Value="public bool empty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool empty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.empty" />
      <MemberSignature Language="VB.NET" Value="Public Function empty () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool empty();" />
      <MemberSignature Language="F#" Value="abstract member empty : unit -&gt; bool" Usage="iVector.empty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8c874-134">Testa se o contêiner não tem elementos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-134">Tests whether the container has no elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8c874-135">
            <see langword="true" /> se o contêiner não tiver elementos; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-135">
              <see langword="true" /> if the container has no elements; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c874-136">Para obter mais informações, consulte [Vector:: Empty (STL/CLR)](http://msdn.microsoft.com/library/c09fc4a3-bd79-4458-9a36-1d9c82ac36b1).</span><span class="sxs-lookup"><span data-stu-id="8c874-136">For more information, see [vector::empty (STL/CLR)](http://msdn.microsoft.com/library/c09fc4a3-bd79-4458-9a36-1d9c82ac36b1).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="end">
      <MemberSignature Language="C#" Value="public void end (ref Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt; );" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void end(class Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1&lt;!TValue&gt;&amp; ) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.end(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function end (ByRef  As ContainerRandomAccessIterator(Of TValue)) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ end(Microsoft::VisualC::StlClr::Generic::ContainerRandomAccessIterator&lt;TValue&gt; ^ % );" />
      <MemberSignature Language="F#" Value="abstract member end :  -&gt; unit" Usage="iVector.end " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="">To be added.</param>
        <summary>
          <span data-ttu-id="8c874-137">Designa o fim da sequência controlada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-137">Designates the end of the controlled sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8c874-138">Um iterador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-138">An iterator.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c874-139">Para obter mais informações, consulte [Vector:: end (STL/CLR)](http://msdn.microsoft.com/library/21fcaf1b-7f14-4dc4-a312-fa30e631ea0d).</span><span class="sxs-lookup"><span data-stu-id="8c874-139">For more information, see [vector::end (STL/CLR)](http://msdn.microsoft.com/library/21fcaf1b-7f14-4dc4-a312-fa30e631ea0d).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="erase">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8c874-140">Remove elementos das posições especificadas no contêiner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-140">Removes elements from specified positions in the container.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c874-141">Para obter mais informações, consulte [Vector:: Erase (STL/CLR)](http://msdn.microsoft.com/library/624905eb-83c0-499b-a07a-c10aebd7acc3).</span><span class="sxs-lookup"><span data-stu-id="8c874-141">For more information, see [vector::erase (STL/CLR)](http://msdn.microsoft.com/library/624905eb-83c0-499b-a07a-c10aebd7acc3).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="erase">
      <MemberSignature Language="C#" Value="public void erase (ref Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt; , Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Where);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn) erase(class Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1&lt;!TValue&gt;&amp; , class Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1 modreq(System.Runtime.CompilerServices.IsByValue) _Where) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue)" />
      <MemberSignature Language="VB.NET" Value="Public Function erase (ByRef  As ContainerRandomAccessIterator(Of TValue), _Where As ContainerRandomAccessIterator) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ erase(Microsoft::VisualC::StlClr::Generic::ContainerRandomAccessIterator&lt;TValue&gt; ^ % , Microsoft::VisualC::StlClr::Generic::ContainerRandomAccessIterator ^ _Where);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt;&amp;" RefType="ref" />
        <Parameter Name="_Where" Type="Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator" />
      </Parameters>
      <Docs>
        <param name="">To be added.</param>
        <param name="_Where">
          <span data-ttu-id="8c874-142">A posição do elemento a ser removido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-142">The position of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c874-143">Remove o elemento único da sequência controlada para a qual o <paramref name="_Where" /> aponta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-143">Removes the single element of the controlled sequence that is pointed to by <paramref name="_Where" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8c874-144">Um iterador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-144">An iterator.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c874-145">Para obter mais informações, consulte [Vector:: Erase (STL/CLR)](http://msdn.microsoft.com/library/624905eb-83c0-499b-a07a-c10aebd7acc3).</span><span class="sxs-lookup"><span data-stu-id="8c874-145">For more information, see [vector::erase (STL/CLR)](http://msdn.microsoft.com/library/624905eb-83c0-499b-a07a-c10aebd7acc3).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="erase">
      <MemberSignature Language="C#" Value="public void erase (ref Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt; , Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _First_iter, Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Last_iter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn) erase(class Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1&lt;!TValue&gt;&amp; , class Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1 modreq(System.Runtime.CompilerServices.IsByValue) _First_iter, class Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1 modreq(System.Runtime.CompilerServices.IsByValue) _Last_iter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue)" />
      <MemberSignature Language="VB.NET" Value="Public Function erase (ByRef  As ContainerRandomAccessIterator(Of TValue), _First_iter As ContainerRandomAccessIterator, _Last_iter As ContainerRandomAccessIterator) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ erase(Microsoft::VisualC::StlClr::Generic::ContainerRandomAccessIterator&lt;TValue&gt; ^ % , Microsoft::VisualC::StlClr::Generic::ContainerRandomAccessIterator ^ _First_iter, Microsoft::VisualC::StlClr::Generic::ContainerRandomAccessIterator ^ _Last_iter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt;&amp;" RefType="ref" />
        <Parameter Name="_First_iter" Type="Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator" />
        <Parameter Name="_Last_iter" Type="Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator" />
      </Parameters>
      <Docs>
        <param name="">To be added.</param>
        <param name="_First_iter">
          <span data-ttu-id="8c874-146">O início do intervalo de elementos a apagar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-146">The beginning of the range of elements to erase.</span>
          </span>
        </param>
        <param name="_Last_iter">
          <span data-ttu-id="8c874-147">A primeira posição além do intervalo de elementos a ser apagada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-147">The first position beyond the range of elements to erase.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c874-148">Remove os elementos da sequência controlada no intervalo <c>[</c><paramref name="_First_iter" /><c>,</c><paramref name="_Last_iter" /><c>)</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-148">Removes the elements of the controlled sequence in the range <c>[</c><paramref name="_First_iter" /><c>,</c><paramref name="_Last_iter" /><c>)</c>.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8c874-149">Um iterador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-149">An iterator.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c874-150">Para obter mais informações, consulte [Vector:: Erase (STL/CLR)](http://msdn.microsoft.com/library/624905eb-83c0-499b-a07a-c10aebd7acc3).</span><span class="sxs-lookup"><span data-stu-id="8c874-150">For more information, see [vector::erase (STL/CLR)](http://msdn.microsoft.com/library/624905eb-83c0-499b-a07a-c10aebd7acc3).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="front">
      <MemberSignature Language="C#" Value="public TValue front ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TValue front() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.front" />
      <MemberSignature Language="VB.NET" Value="Public Function front () As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TValue % front();" />
      <MemberSignature Language="F#" Value="abstract member front : unit -&gt; " Usage="iVector.front " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue@</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8c874-151">Acessa o primeiro elemento do contêiner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-151">Accesses the first element of the container.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8c874-152">O primeiro elemento da sequência controlada, que não pode ser vazia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-152">The first element of the controlled sequence, which must be non-empty.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c874-153">Para obter mais informações, consulte [Vector:: front (STL/CLR)](http://msdn.microsoft.com/library/37a36157-8220-4d5b-85b5-c6a63211a322).</span><span class="sxs-lookup"><span data-stu-id="8c874-153">For more information, see [vector::front (STL/CLR)](http://msdn.microsoft.com/library/37a36157-8220-4d5b-85b5-c6a63211a322).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="front_item">
      <MemberSignature Language="C#" Value="public TValue front_item { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TValue front_item" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualC.StlClr.IVector`1.front_item" />
      <MemberSignature Language="VB.NET" Value="Public Property front_item As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TValue front_item { TValue get(); void set(TValue value); };" />
      <MemberSignature Language="F#" Value="member this.front_item : 'Value with get, set" Usage="Microsoft.VisualC.StlClr.IVector&lt;'Value&gt;.front_item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8c874-154">Acessa o primeiro elemento do contêiner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-154">Accesses the first element of the container.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8c874-155">O primeiro elemento da sequência controlada, que não pode ser vazia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-155">The first element of the controlled sequence, which must be non-empty.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c874-156">Para obter mais informações, consulte [vector::front_item (STL/CLR)](http://msdn.microsoft.com/library/7db87868-3e54-4c67-a06b-01bcfff3128d).</span><span class="sxs-lookup"><span data-stu-id="8c874-156">For more information, see [vector::front_item (STL/CLR)](http://msdn.microsoft.com/library/7db87868-3e54-4c67-a06b-01bcfff3128d).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="get_generation">
      <MemberSignature Language="C#" Value="public uint get_generation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.UInt32 modopt(System.Runtime.CompilerServices.IsLong) get_generation() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.get_generation" />
      <MemberSignature Language="VB.NET" Value="Public Function get_generation () As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::UInt32 get_generation();" />
      <MemberSignature Language="F#" Value="abstract member get_generation : unit -&gt; UInt32" Usage="iVector.get_generation " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="insert">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8c874-157">Adiciona elementos ao contêiner em uma posição especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-157">Adds elements to the container at a specified position.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c874-158">Para obter mais informações, consulte [Vector:: Insert (STL/CLR)](http://msdn.microsoft.com/library/f240cabf-f9d1-40c1-9cfb-975a90955546).</span><span class="sxs-lookup"><span data-stu-id="8c874-158">For more information, see [vector::insert (STL/CLR)](http://msdn.microsoft.com/library/f240cabf-f9d1-40c1-9cfb-975a90955546).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="insert">
      <MemberSignature Language="C#" Value="public void insert (Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Where_iter, System.Collections.IEnumerable _Right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void insert(class Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1 modreq(System.Runtime.CompilerServices.IsByValue) _Where_iter, class System.Collections.IEnumerable _Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub insert (_Where_iter As ContainerRandomAccessIterator, _Right As IEnumerable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void insert(Microsoft::VisualC::StlClr::Generic::ContainerRandomAccessIterator ^ _Where_iter, System::Collections::IEnumerable ^ _Right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Where_iter" Type="Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator" />
        <Parameter Name="_Right" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="_Where_iter">
          <span data-ttu-id="8c874-159">A posição no contêiner antes da qual realizar inserir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-159">The position in the container before which to insert.</span>
          </span>
        </param>
        <param name="_Right">
          <span data-ttu-id="8c874-160">A enumeração a ser inserida no contêiner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-160">The enumeration to insert into the container.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c874-161">Insere a sequência que é designada por um enumerador no contêiner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-161">Inserts the sequence that is designated by an enumerator into the container.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c874-162">Para obter mais informações, consulte [Vector:: Insert (STL/CLR)](http://msdn.microsoft.com/library/f240cabf-f9d1-40c1-9cfb-975a90955546).</span><span class="sxs-lookup"><span data-stu-id="8c874-162">For more information, see [vector::insert (STL/CLR)](http://msdn.microsoft.com/library/f240cabf-f9d1-40c1-9cfb-975a90955546).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="insert">
      <MemberSignature Language="C#" Value="public void insert (Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Where, Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt; _First, Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt; _Last);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void insert(class Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1 modreq(System.Runtime.CompilerServices.IsByValue) _Where, class Microsoft.VisualC.StlClr.Generic.IInputIterator`1&lt;!TValue&gt; _First, class Microsoft.VisualC.StlClr.Generic.IInputIterator`1&lt;!TValue&gt; _Last) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub insert (_Where As ContainerRandomAccessIterator, _First As IInputIterator(Of TValue), _Last As IInputIterator(Of TValue))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void insert(Microsoft::VisualC::StlClr::Generic::ContainerRandomAccessIterator ^ _Where, Microsoft::VisualC::StlClr::Generic::IInputIterator&lt;TValue&gt; ^ _First, Microsoft::VisualC::StlClr::Generic::IInputIterator&lt;TValue&gt; ^ _Last);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Where" Type="Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator" />
        <Parameter Name="_First" Type="Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt;" />
        <Parameter Name="_Last" Type="Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="_Where">
          <span data-ttu-id="8c874-163">A posição no contêiner antes da qual realizar inserir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-163">The position in the container before which to insert.</span>
          </span>
        </param>
        <param name="_First">
          <span data-ttu-id="8c874-164">A posição de início do intervalo a inserir no contêiner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-164">The beginning position of the range to insert into the container.</span>
          </span>
        </param>
        <param name="_Last">
          <span data-ttu-id="8c874-165">A primeira posição além do intervalo a inserir no contêiner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-165">The first position beyond the range to insert into the container.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c874-166">Insere a sequência que começa com <paramref name="_First" /> e termina com o elemento anterior a <paramref name="_Last" /> no contêiner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-166">Inserts the sequence beginning with <paramref name="_First" /> and ending with the element preceding <paramref name="_Last" /> into the container.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c874-167">Para obter mais informações, consulte [Vector:: Insert (STL/CLR)](http://msdn.microsoft.com/library/f240cabf-f9d1-40c1-9cfb-975a90955546).</span><span class="sxs-lookup"><span data-stu-id="8c874-167">For more information, see [vector::insert (STL/CLR)](http://msdn.microsoft.com/library/f240cabf-f9d1-40c1-9cfb-975a90955546).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="insert">
      <MemberSignature Language="C#" Value="public void insert (Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Where, int _Count, TValue _Val);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void insert(class Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1 modreq(System.Runtime.CompilerServices.IsByValue) _Where, int32 _Count, !TValue _Val) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub insert (_Where As ContainerRandomAccessIterator, _Count As Integer, _Val As TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void insert(Microsoft::VisualC::StlClr::Generic::ContainerRandomAccessIterator ^ _Where, int _Count, TValue _Val);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Where" Type="Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator" />
        <Parameter Name="_Count" Type="System.Int32" />
        <Parameter Name="_Val" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="_Where">
          <span data-ttu-id="8c874-168">A posição no contêiner antes da qual realizar inserir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-168">The position in the container before which to insert.</span>
          </span>
        </param>
        <param name="_Count">
          <span data-ttu-id="8c874-169">O número de elementos a serem inseridos no contêiner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-169">The number of elements to insert into the container.</span>
          </span>
        </param>
        <param name="_Val">
          <span data-ttu-id="8c874-170">O valor do elemento a ser inserido no contêiner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-170">The value of the element to insert into the container.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c874-171">Insere o número especificado dos elementos fornecidos no contêiner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-171">Inserts the specified number of the given elements into the container.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c874-172">Para obter mais informações, consulte [Vector:: Insert (STL/CLR)](http://msdn.microsoft.com/library/f240cabf-f9d1-40c1-9cfb-975a90955546).</span><span class="sxs-lookup"><span data-stu-id="8c874-172">For more information, see [vector::insert (STL/CLR)](http://msdn.microsoft.com/library/f240cabf-f9d1-40c1-9cfb-975a90955546).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="insert">
      <MemberSignature Language="C#" Value="public void insert (ref Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt; , Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Where, TValue _Val);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn) insert(class Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1&lt;!TValue&gt;&amp; , class Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1 modreq(System.Runtime.CompilerServices.IsByValue) _Where, !TValue _Val) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function insert (ByRef  As ContainerRandomAccessIterator(Of TValue), _Where As ContainerRandomAccessIterator, _Val As TValue) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ insert(Microsoft::VisualC::StlClr::Generic::ContainerRandomAccessIterator&lt;TValue&gt; ^ % , Microsoft::VisualC::StlClr::Generic::ContainerRandomAccessIterator ^ _Where, TValue _Val);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt;&amp;" RefType="ref" />
        <Parameter Name="_Where" Type="Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator" />
        <Parameter Name="_Val" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="">To be added.</param>
        <param name="_Where">
          <span data-ttu-id="8c874-173">A posição no contêiner antes da qual realizar inserir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-173">The position in the container before which to insert.</span>
          </span>
        </param>
        <param name="_Val">
          <span data-ttu-id="8c874-174">O valor do elemento a ser inserido no contêiner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-174">The value of the element to insert into the container.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c874-175">Insere o valor especificado no contêiner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-175">Inserts the specified value into the container.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8c874-176">Um iterador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-176">An iterator.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c874-177">Para obter mais informações, consulte [Vector:: Insert (STL/CLR)](http://msdn.microsoft.com/library/f240cabf-f9d1-40c1-9cfb-975a90955546).</span><span class="sxs-lookup"><span data-stu-id="8c874-177">For more information, see [vector::insert (STL/CLR)](http://msdn.microsoft.com/library/f240cabf-f9d1-40c1-9cfb-975a90955546).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public TValue this[int _Pos] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TValue Item(int32)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualC.StlClr.IVector`1.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(_Pos As Integer) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TValue default[int] { TValue get(int _Pos); void set(int _Pos, TValue value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : 'Value with get, set" Usage="Microsoft.VisualC.StlClr.IVector&lt;'Value&gt;.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Pos" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="_Pos">
          <span data-ttu-id="8c874-178">A posição do elemento a ser acessado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-178">The position of the element to access.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c874-179">Acessa um elemento em uma posição especificada no contêiner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-179">Accesses an element at a specified position in the container.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8c874-180">O elemento na posição <paramref name="_Pos" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-180">The element at position <paramref name="_Pos" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c874-181">Para obter mais informações, consulte [vector::operator(STL/CLR)](http://msdn.microsoft.com/library/379a7029-460d-4de8-918b-c79e3e13b9d4).</span><span class="sxs-lookup"><span data-stu-id="8c874-181">For more information, see [vector::operator(STL/CLR)](http://msdn.microsoft.com/library/379a7029-460d-4de8-918b-c79e3e13b9d4).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="pop_back">
      <MemberSignature Language="C#" Value="public void pop_back ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void pop_back() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.pop_back" />
      <MemberSignature Language="VB.NET" Value="Public Sub pop_back ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void pop_back();" />
      <MemberSignature Language="F#" Value="abstract member pop_back : unit -&gt; unit" Usage="iVector.pop_back " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8c874-182">Remove o último elemento do contêiner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-182">Removes the last element from the container.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c874-183">Para obter mais informações, consulte [Vector:: pop_back (STL/CLR)](http://msdn.microsoft.com/library/7e9fb72c-e733-4434-a71c-e4389629a821).</span><span class="sxs-lookup"><span data-stu-id="8c874-183">For more information, see [vector::pop_back (STL/CLR)](http://msdn.microsoft.com/library/7e9fb72c-e733-4434-a71c-e4389629a821).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="push_back">
      <MemberSignature Language="C#" Value="public void push_back (TValue _Val);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void push_back(!TValue _Val) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.push_back(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub push_back (_Val As TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void push_back(TValue _Val);" />
      <MemberSignature Language="F#" Value="abstract member push_back : 'Value -&gt; unit" Usage="iVector.push_back _Val" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Val" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="_Val">
          <span data-ttu-id="8c874-184">O valor do elemento a ser inserido no contêiner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-184">The value of the element to insert into the container.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c874-185">Adiciona um novo elemento ao final do contêiner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-185">Adds a new element to the end of the container.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c874-186">Para obter mais informações, consulte [Vector:: push_back (STL/CLR)](http://msdn.microsoft.com/library/4a4c302b-e29f-4b68-b759-2f831814d896).</span><span class="sxs-lookup"><span data-stu-id="8c874-186">For more information, see [vector::push_back (STL/CLR)](http://msdn.microsoft.com/library/4a4c302b-e29f-4b68-b759-2f831814d896).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="rbegin">
      <MemberSignature Language="C#" Value="public void rbegin (ref Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;TValue&gt; );" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void rbegin(class Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1&lt;!TValue&gt;&amp; ) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function rbegin (ByRef  As ReverseRandomAccessIterator(Of TValue)) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ rbegin(Microsoft::VisualC::StlClr::Generic::ReverseRandomAccessIterator&lt;TValue&gt; ^ % );" />
      <MemberSignature Language="F#" Value="abstract member rbegin :  -&gt; unit" Usage="iVector.rbegin " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;TValue&gt;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="">To be added.</param>
        <summary>
          <span data-ttu-id="8c874-187">Designa o início da sequência controlada invertida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-187">Designates the beginning of the reversed controlled sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8c874-188">Um iterador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-188">An iterator.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c874-189">Para obter mais informações, consulte [Vector:: rbegin (STL/CLR)](http://msdn.microsoft.com/library/fad410b9-fe79-4820-9be5-6b7e0219a1af).</span><span class="sxs-lookup"><span data-stu-id="8c874-189">For more information, see [vector::rbegin (STL/CLR)](http://msdn.microsoft.com/library/fad410b9-fe79-4820-9be5-6b7e0219a1af).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="rend">
      <MemberSignature Language="C#" Value="public void rend (ref Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;TValue&gt; );" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void rend(class Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1&lt;!TValue&gt;&amp; ) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.rend(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function rend (ByRef  As ReverseRandomAccessIterator(Of TValue)) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ rend(Microsoft::VisualC::StlClr::Generic::ReverseRandomAccessIterator&lt;TValue&gt; ^ % );" />
      <MemberSignature Language="F#" Value="abstract member rend :  -&gt; unit" Usage="iVector.rend " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;TValue&gt;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="">To be added.</param>
        <summary>
          <span data-ttu-id="8c874-190">Designa o fim da sequência controlada invertida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-190">Designates the end of the reversed controlled sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8c874-191">Um iterador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-191">An iterator.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c874-192">Para obter mais informações, consulte [Vector:: rend (STL/CLR)](http://msdn.microsoft.com/library/8dc1927f-9214-468d-877e-eda20c03e90d).</span><span class="sxs-lookup"><span data-stu-id="8c874-192">For more information, see [vector::rend (STL/CLR)](http://msdn.microsoft.com/library/8dc1927f-9214-468d-877e-eda20c03e90d).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="reserve">
      <MemberSignature Language="C#" Value="public void reserve (int _Capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void reserve(int32 _Capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.reserve(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub reserve (_Capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void reserve(int _Capacity);" />
      <MemberSignature Language="F#" Value="abstract member reserve : int -&gt; unit" Usage="iVector.reserve _Capacity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="_Capacity">
          <span data-ttu-id="8c874-193">A nova capacidade mínima do contêiner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-193">The new minimum capacity of the container.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c874-194">Reserva armazenamento para garantir a capacidade de crescimento mínima para o contêiner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-194">Reserves storage to ensure the minimum growth capacity for the container.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c874-195">Para obter mais informações, consulte [Vector:: Reserve (STL/CLR)](http://msdn.microsoft.com/library/d1d5ede9-9628-4b55-95ec-f087a57205f2).</span><span class="sxs-lookup"><span data-stu-id="8c874-195">For more information, see [vector::reserve (STL/CLR)](http://msdn.microsoft.com/library/d1d5ede9-9628-4b55-95ec-f087a57205f2).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="resize">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8c874-196">Altera o número de elementos que o contêiner pode conter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-196">Changes the number of elements that the container can hold.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c874-197">Para obter mais informações, consulte [Vector:: Resize (STL/CLR)](http://msdn.microsoft.com/library/a3556fbc-67d9-463a-9ffc-cb43ee15657f).</span><span class="sxs-lookup"><span data-stu-id="8c874-197">For more information, see [vector::resize (STL/CLR)](http://msdn.microsoft.com/library/a3556fbc-67d9-463a-9ffc-cb43ee15657f).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="resize">
      <MemberSignature Language="C#" Value="public void resize (int _Newsize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void resize(int32 _Newsize) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.resize(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub resize (_Newsize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void resize(int _Newsize);" />
      <MemberSignature Language="F#" Value="abstract member resize : int -&gt; unit" Usage="iVector.resize _Newsize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Newsize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="_Newsize">
          <span data-ttu-id="8c874-198">O novo tamanho da sequência controlada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-198">The new size of the controlled sequence.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c874-199">Altera o número de elementos no contêiner para o tamanho especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-199">Changes the number of elements in the container to the specified size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c874-200">Para obter mais informações, consulte [Vector:: Resize (STL/CLR)](http://msdn.microsoft.com/library/a3556fbc-67d9-463a-9ffc-cb43ee15657f).</span><span class="sxs-lookup"><span data-stu-id="8c874-200">For more information, see [vector::resize (STL/CLR)](http://msdn.microsoft.com/library/a3556fbc-67d9-463a-9ffc-cb43ee15657f).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="resize">
      <MemberSignature Language="C#" Value="public void resize (int _Newsize, TValue _Val);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void resize(int32 _Newsize, !TValue _Val) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.resize(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub resize (_Newsize As Integer, _Val As TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void resize(int _Newsize, TValue _Val);" />
      <MemberSignature Language="F#" Value="abstract member resize : int * 'Value -&gt; unit" Usage="iVector.resize (_Newsize, _Val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Newsize" Type="System.Int32" />
        <Parameter Name="_Val" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="_Newsize">
          <span data-ttu-id="8c874-201">O novo tamanho da sequência controlada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-201">The new size of the controlled sequence.</span>
          </span>
        </param>
        <param name="_Val">
          <span data-ttu-id="8c874-202">O valor dos elementos a serem inseridos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-202">The value of the elements to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c874-203">Altera o número de elementos no contêiner para o tamanho especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-203">Changes the number of elements in the container to the specified size.</span>
          </span>
          <span data-ttu-id="8c874-204">Se o novo tamanho for maior que o tamanho anterior, o método anexará elementos que têm o valor <paramref name="_Val" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-204">If the new size is larger than the old size, the method appends elements that have value <paramref name="_Val" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c874-205">Para obter mais informações, consulte [Vector:: Resize (STL/CLR)](http://msdn.microsoft.com/library/a3556fbc-67d9-463a-9ffc-cb43ee15657f).</span><span class="sxs-lookup"><span data-stu-id="8c874-205">For more information, see [vector::resize (STL/CLR)](http://msdn.microsoft.com/library/a3556fbc-67d9-463a-9ffc-cb43ee15657f).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="size">
      <MemberSignature Language="C#" Value="public int size ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 size() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.size" />
      <MemberSignature Language="VB.NET" Value="Public Function size () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int size();" />
      <MemberSignature Language="F#" Value="abstract member size : unit -&gt; int" Usage="iVector.size " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8c874-206">Conta o número de elementos no contêiner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-206">Counts the number of elements in the container.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8c874-207">O tamanho da sequência controlada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-207">The length of the controlled sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c874-208">Para obter mais informações, consulte [Vector:: Size (STL/CLR)](http://msdn.microsoft.com/library/3d2a156e-5871-4441-9307-21a20cd1430f).</span><span class="sxs-lookup"><span data-stu-id="8c874-208">For more information, see [vector::size (STL/CLR)](http://msdn.microsoft.com/library/3d2a156e-5871-4441-9307-21a20cd1430f).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="swap">
      <MemberSignature Language="C#" Value="public void swap (Microsoft.VisualC.StlClr.IVector&lt;TValue&gt; );" FrameworkAlternate="netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void swap(class Microsoft.VisualC.StlClr.IVector`1&lt;!TValue&gt; ) cil managed" FrameworkAlternate="netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub swap ( As IVector(Of TValue))" FrameworkAlternate="netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void swap(Microsoft::VisualC::StlClr::IVector&lt;TValue&gt; ^ );" FrameworkAlternate="netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C#" Value="public void swap (Microsoft.VisualC.StlClr.IVector&lt;TValue&gt; A_0);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void swap(class Microsoft.VisualC.StlClr.IVector`1&lt;!TValue&gt; A_0) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IVector`1.swap(Microsoft.VisualC.StlClr.IVector{`0})" FrameworkAlternate="netframework-4.5;netframework-3.5;netframework-4.0;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub swap (A_0 As IVector(Of TValue))" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void swap(Microsoft::VisualC::StlClr::IVector&lt;TValue&gt; ^ A_0);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="F#" Value="abstract member swap : Microsoft.VisualC.StlClr.IVector&lt;'Value&gt; -&gt; unit" Usage="iVector.swap A_0" FrameworkAlternate="netframework-4.5;netframework-3.5;netframework-4.0;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.IVector&lt;TValue&gt;" Index="0" FrameworkAlternate="netframework-3.5;netframework-4.0" />
        <Parameter Name="A_0" Type="Microsoft.VisualC.StlClr.IVector&lt;TValue&gt;" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      </Parameters>
      <Docs>
        <param name="A_0">
          <span data-ttu-id="8c874-209">O contêiner com o qual trocar conteúdos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-209">The container with which to swap contents.</span>
          </span>
        </param>
        <param name="">To be added.</param>
        <summary>
          <span data-ttu-id="8c874-210">Alterna o conteúdo de dois contêineres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c874-210">Swaps the contents of two containers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c874-211">Para obter mais informações, consulte [Vector:: swap (STL/CLR)](http://msdn.microsoft.com/library/9ad083fe-f79b-4b97-8013-581fd00c059a).</span><span class="sxs-lookup"><span data-stu-id="8c874-211">For more information, see [vector::swap (STL/CLR)](http://msdn.microsoft.com/library/9ad083fe-f79b-4b97-8013-581fd00c059a).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>