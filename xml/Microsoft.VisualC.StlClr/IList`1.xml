<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IList`1.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5de39d3d8060166098953b3069f8cd72977dd07e2.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">de39d3d8060166098953b3069f8cd72977dd07e2</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualC.StlClr.IList`1">
          <source>The type of a list element.</source>
          <target state="translated">O tipo de um elemento de lista.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualC.StlClr.IList`1">
          <source>Defines the interface for an STL/CLR <bpt id="p1">[</bpt>list<ept id="p1">](http://msdn.microsoft.com/library/a70c45c8-a257-4f6b-8434-b27ff6685bac)</ept> object.</source>
          <target state="translated">Define a interface para um objeto STL/CLR de <bpt id="p1">[</bpt>lista<ept id="p1">](http://msdn.microsoft.com/library/a70c45c8-a257-4f6b-8434-b27ff6685bac)</ept>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualC.StlClr.IList`1">
          <source>Replaces all elements of the container with the specified elements.</source>
          <target state="translated">Substitui todos os elementos do contêiner pelos elementos especificados.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualC.StlClr.IList`1">
          <source>For more information, see <bpt id="p1">[</bpt>list::assign (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/c5f2b131-d0e1-4188-9d4b-d617280e4032)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>List:: Assign (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/c5f2b131-d0e1-4188-9d4b-d617280e4032)</ept>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.assign(System.Collections.IEnumerable)">
          <source>The enumeration whose elements are to be inserted into the container.</source>
          <target state="translated">A enumeração cujos elementos serão inseridos no contêiner.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.assign(System.Collections.IEnumerable)">
          <source>Replaces the controlled sequence with the sequence that is designated by the given enumerator.</source>
          <target state="translated">Substitui a sequência controlada pela sequência que é designada pelo enumerador fornecido.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualC.StlClr.IList`1.assign(System.Collections.IEnumerable)">
          <source>For more information, see <bpt id="p1">[</bpt>list::assign (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/c5f2b131-d0e1-4188-9d4b-d617280e4032)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>List:: Assign (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/c5f2b131-d0e1-4188-9d4b-d617280e4032)</ept>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.assign(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
          <source>The beginning position of the range of elements to insert into the container.</source>
          <target state="translated">A posição de início do intervalo de elementos a ser inserida no contêiner.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.assign(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
          <source>The first position beyond the range of elements to insert into the container.</source>
          <target state="translated">A primeira posição além do intervalo de elementos a ser inserida no contêiner.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.assign(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
          <source>Replaces the controlled sequence with the sequence <bpt id="p1">&lt;c&gt;</bpt>[<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;paramref name="_First" /&gt;</ph><bpt id="p2">&lt;c&gt;</bpt>,<ept id="p2">&lt;/c&gt;</ept><ph id="ph2">&lt;paramref name="_Last" /&gt;</ph><bpt id="p3">&lt;c&gt;</bpt>)<ept id="p3">&lt;/c&gt;</ept>.</source>
          <target state="translated">Substitui a sequência controlada pela sequência <bpt id="p1">&lt;c&gt;</bpt>[<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;paramref name="_First" /&gt;</ph><bpt id="p2">&lt;c&gt;</bpt>,<ept id="p2">&lt;/c&gt;</ept><ph id="ph2">&lt;paramref name="_Last" /&gt;</ph><bpt id="p3">&lt;c&gt;</bpt>)<ept id="p3">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualC.StlClr.IList`1.assign(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
          <source>For more information, see <bpt id="p1">[</bpt>list::assign (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/c5f2b131-d0e1-4188-9d4b-d617280e4032)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>List:: Assign (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/c5f2b131-d0e1-4188-9d4b-d617280e4032)</ept>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.assign(System.Int32,`0)">
          <source>The number of elements to insert into the container.</source>
          <target state="translated">O número de elementos a serem inseridos no contêiner.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.assign(System.Int32,`0)">
          <source>The value of the elements to insert into the container.</source>
          <target state="translated">O valor dos elementos a serem inseridos no contêiner.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.assign(System.Int32,`0)">
          <source>Replaces the controlled sequence with the specified number of the given element.</source>
          <target state="translated">Substitui a sequência controlada pelo número especificado do elemento fornecido.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualC.StlClr.IList`1.assign(System.Int32,`0)">
          <source>For more information, see <bpt id="p1">[</bpt>list::assign (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/c5f2b131-d0e1-4188-9d4b-d617280e4032)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>List:: Assign (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/c5f2b131-d0e1-4188-9d4b-d617280e4032)</ept>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.back">
          <source>Accesses the last element of the container.</source>
          <target state="translated">Acessa o último elemento do contêiner.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.back">
          <source>The last element of the controlled sequence, which must be non-empty.</source>
          <target state="translated">O último elemento da sequência controlada, que deve ser não vazia.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualC.StlClr.IList`1.back">
          <source>For more information, see <bpt id="p1">[</bpt>list::back (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/3241e497-42ab-4108-8598-3f90eac76f07)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>List (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/3241e497-42ab-4108-8598-3f90eac76f07)</ept>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualC.StlClr.IList`1.back_item">
          <source>Accesses the last element of the container.</source>
          <target state="translated">Acessa o último elemento do contêiner.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualC.StlClr.IList`1.back_item">
          <source>The last element of the controlled sequence, which must be non-empty.</source>
          <target state="translated">O último elemento da sequência controlada, que deve ser não vazia.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualC.StlClr.IList`1.back_item">
          <source>For more information, see <bpt id="p1">[</bpt>list::back_item (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/63dcdd21-61f7-4e0f-88a7-c9c8f8a2c50a)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>list::back_item (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/63dcdd21-61f7-4e0f-88a7-c9c8f8a2c50a)</ept>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.begin(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)">
          <source>Designates the beginning of the controlled sequence.</source>
          <target state="translated">Designa o início da sequência controlada.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.begin(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)">
          <source>An iterator.</source>
          <target state="translated">Um iterador.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualC.StlClr.IList`1.begin(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)">
          <source>For more information, see <bpt id="p1">[</bpt>list::begin (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/3431467b-951a-498a-af8d-50f631da1646)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>List:: Begin (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/3431467b-951a-498a-af8d-50f631da1646)</ept>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.clear">
          <source>Removes all elements from the container.</source>
          <target state="translated">Remove todos os elementos do contêiner.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualC.StlClr.IList`1.clear">
          <source>For more information, see <bpt id="p1">[</bpt>list::clear (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/5aac9a64-52f6-4a73-8b24-e30ceedcbc20)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>List:: Clear (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/5aac9a64-52f6-4a73-8b24-e30ceedcbc20)</ept>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.empty">
          <source>Tests whether the container has no elements.</source>
          <target state="translated">Testa se o contêiner não tem elementos.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.empty">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the container has no elements; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o contêiner não tiver elementos; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualC.StlClr.IList`1.empty">
          <source>For more information, see <bpt id="p1">[</bpt>list::empty (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/f45edf8a-927d-41ff-9c09-cb0fba4f08b8)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>List:: Empty (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/f45edf8a-927d-41ff-9c09-cb0fba4f08b8)</ept>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)">
          <source>Designates the end of the controlled sequence.</source>
          <target state="translated">Designa o fim da sequência controlada.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)">
          <source>An iterator.</source>
          <target state="translated">Um iterador.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualC.StlClr.IList`1.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)">
          <source>For more information, see <bpt id="p1">[</bpt>list::end (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/c3444164-2c6e-4cbd-8765-1ce7d30fc43e)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>List:: end (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/c3444164-2c6e-4cbd-8765-1ce7d30fc43e)</ept>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualC.StlClr.IList`1">
          <source>Removes elements from the container.</source>
          <target state="translated">Remove elementos do contêiner.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualC.StlClr.IList`1">
          <source>For more information, see <bpt id="p1">[</bpt>list::erase (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/78705058-1e83-441d-b267-d4fb56451c0b)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>List:: Erase (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/78705058-1e83-441d-b267-d4fb56451c0b)</ept>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue)">
          <source>The position of the element to erase.</source>
          <target state="translated">A posição do elemento a ser apagado.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue)">
          <source>Removes the single element of the controlled sequence pointed to by the given iterator.</source>
          <target state="translated">Remove o único elemento da sequência controlada apontado pelo iterador fornecido.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue)">
          <source>An iterator.</source>
          <target state="translated">Um iterador.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualC.StlClr.IList`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue)">
          <source>For more information, see <bpt id="p1">[</bpt>list::erase (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/78705058-1e83-441d-b267-d4fb56451c0b)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>List:: Erase (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/78705058-1e83-441d-b267-d4fb56451c0b)</ept>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue)">
          <source>The beginning position of the range of elements to erase.</source>
          <target state="translated">A posição de início do intervalo de elementos a ser apagada.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue)">
          <source>The first position beyond the range of elements to erase.</source>
          <target state="translated">A primeira posição além do intervalo de elementos a ser apagada.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue)">
          <source>Removes the elements of the controlled sequence in the range <bpt id="p1">&lt;c&gt;</bpt>[<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;paramref name="_First_iter" /&gt;</ph><bpt id="p2">&lt;c&gt;</bpt>,<ept id="p2">&lt;/c&gt;</ept><ph id="ph2">&lt;paramref name="_Last_iter" /&gt;</ph><bpt id="p3">&lt;c&gt;</bpt>)<ept id="p3">&lt;/c&gt;</ept>.</source>
          <target state="translated">Remove os elementos da sequência controlada no intervalo <bpt id="p1">&lt;c&gt;</bpt>[<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;paramref name="_First_iter" /&gt;</ph><bpt id="p2">&lt;c&gt;</bpt>,<ept id="p2">&lt;/c&gt;</ept><ph id="ph2">&lt;paramref name="_Last_iter" /&gt;</ph><bpt id="p3">&lt;c&gt;</bpt>)<ept id="p3">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue)">
          <source>An iterator.</source>
          <target state="translated">Um iterador.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualC.StlClr.IList`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue)">
          <source>For more information, see <bpt id="p1">[</bpt>list::erase (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/78705058-1e83-441d-b267-d4fb56451c0b)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>List:: Erase (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/78705058-1e83-441d-b267-d4fb56451c0b)</ept>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.front">
          <source>Accesses the first element of the container.</source>
          <target state="translated">Acessa o primeiro elemento do contêiner.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.front">
          <source>The first element of the controlled sequence, which must be non-empty.</source>
          <target state="translated">O primeiro elemento da sequência controlada, que não pode ser vazia.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualC.StlClr.IList`1.front">
          <source>For more information, see <bpt id="p1">[</bpt>list::front (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/ead6aaaa-b518-4a9c-af80-7189bf872cad)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>List:: front (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/ead6aaaa-b518-4a9c-af80-7189bf872cad)</ept>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualC.StlClr.IList`1.front_item">
          <source>Accesses the first element of the container.</source>
          <target state="translated">Acessa o primeiro elemento do contêiner.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualC.StlClr.IList`1.front_item">
          <source>The first element of the controlled sequence, which must be non-empty.</source>
          <target state="translated">O primeiro elemento da sequência controlada, que não pode ser vazia.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualC.StlClr.IList`1.front_item">
          <source>For more information, see <bpt id="p1">[</bpt>list::front_item (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/c871873b-7745-442b-9760-9d8096fa8610)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>list::front_item (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/c871873b-7745-442b-9760-9d8096fa8610)</ept>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualC.StlClr.IList`1">
          <source>Adds elements to the container.</source>
          <target state="translated">Adiciona elementos ao contêiner.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualC.StlClr.IList`1">
          <source>For more information, see <bpt id="p1">[</bpt>list::insert (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/399ed30f-6b76-41a8-b180-6070e3ca1c68)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>List:: Insert (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/399ed30f-6b76-41a8-b180-6070e3ca1c68)</ept>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Collections.IEnumerable)">
          <source>The position in the container to insert before.</source>
          <target state="translated">A posição no contêiner antes da qual inserir.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Collections.IEnumerable)">
          <source>The enumeration whose elements are to be inserted into the container.</source>
          <target state="translated">A enumeração cujos elementos serão inseridos no contêiner.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Collections.IEnumerable)">
          <source>Inserts the elements of the specified enumerator into the container.</source>
          <target state="translated">Insere os elementos do enumerador especificado no contêiner.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Collections.IEnumerable)">
          <source>For more information, see <bpt id="p1">[</bpt>list::insert (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/399ed30f-6b76-41a8-b180-6070e3ca1c68)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>List:: Insert (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/399ed30f-6b76-41a8-b180-6070e3ca1c68)</ept>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
          <source>The position in the container immediately following the newly inserted elements.</source>
          <target state="translated">A posição no contêiner imediatamente após os elementos recém-inseridos.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
          <source>The beginning position of the range of elements to insert into the container.</source>
          <target state="translated">A posição de início do intervalo de elementos a ser inserida no contêiner.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
          <source>The first position beyond the range of elements to insert into the container.</source>
          <target state="translated">A primeira posição além do intervalo de elementos a ser inserida no contêiner.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
          <source>Inserts the sequence [<ph id="ph1">&lt;paramref name="_First" /&gt;</ph><bpt id="p1">&lt;c&gt;</bpt>,<ept id="p1">&lt;/c&gt;</ept><ph id="ph2">&lt;paramref name="_Last" /&gt;</ph>) into the container.</source>
          <target state="translated">Insere a sequência [<ph id="ph1">&lt;paramref name="_First" /&gt;</ph><bpt id="p1">&lt;c&gt;</bpt>,<ept id="p1">&lt;/c&gt;</ept><ph id="ph2">&lt;paramref name="_Last" /&gt;</ph>) no contêiner.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
          <source>For more information, see <bpt id="p1">[</bpt>list::insert (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/399ed30f-6b76-41a8-b180-6070e3ca1c68)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>List:: Insert (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/399ed30f-6b76-41a8-b180-6070e3ca1c68)</ept>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Int32,`0)">
          <source>The position in the container immediately following the newly inserted elements.</source>
          <target state="translated">A posição no contêiner imediatamente após os elementos recém-inseridos.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Int32,`0)">
          <source>The number of elements to insert into the container.</source>
          <target state="translated">O número de elementos a serem inseridos no contêiner.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Int32,`0)">
          <source>The value of the elements to insert into the container.</source>
          <target state="translated">O valor dos elementos a serem inseridos no contêiner.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Int32,`0)">
          <source>Inserts the specified number of elements of the given value into the container.</source>
          <target state="translated">Insere o número especificado de elementos do valor fornecido no contêiner.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Int32,`0)">
          <source>For more information, see <bpt id="p1">[</bpt>list::insert (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/399ed30f-6b76-41a8-b180-6070e3ca1c68)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>List:: Insert (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/399ed30f-6b76-41a8-b180-6070e3ca1c68)</ept>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,`0)">
          <source>The position in the container immediately following the newly inserted elements.</source>
          <target state="translated">A posição no contêiner imediatamente após os elementos recém-inseridos.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,`0)">
          <source>The value of the element to insert into the container.</source>
          <target state="translated">O valor do elemento a ser inserido no contêiner.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,`0)">
          <source>Inserts an element of the given value into the container.</source>
          <target state="translated">Insere um elemento do valor fornecido no contêiner.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,`0)">
          <source>An iterator.</source>
          <target state="translated">Um iterador.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,`0)">
          <source>For more information, see <bpt id="p1">[</bpt>list::insert (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/399ed30f-6b76-41a8-b180-6070e3ca1c68)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>List:: Insert (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/399ed30f-6b76-41a8-b180-6070e3ca1c68)</ept>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.merge(Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})">
          <source>The container to merge into this container.</source>
          <target state="translated">O contêiner a ser mesclado neste contêiner.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.merge(Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})">
          <source>The Boolean functor for comparing pairs of elements.</source>
          <target state="translated">O functor Booliano para comparar pares de elementos.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.merge(Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})">
          <source>Merges two ordered controlled sequences.</source>
          <target state="translated">Mescla duas sequências controladas ordenadas.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualC.StlClr.IList`1.merge(Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})">
          <source>For more information, see <bpt id="p1">[</bpt>list::merge (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/f8e93cd3-bd08-4086-859b-08a2899cc9a6)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>List:: Merge (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/f8e93cd3-bd08-4086-859b-08a2899cc9a6)</ept>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.pop_back">
          <source>Removes the last element from the container.</source>
          <target state="translated">Remove o último elemento do contêiner.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualC.StlClr.IList`1.pop_back">
          <source>For more information, see <bpt id="p1">[</bpt>list::pop_back (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/03fe8e0e-461b-41c4-8e20-97d0d4ed0feb)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>List:: pop_back (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/03fe8e0e-461b-41c4-8e20-97d0d4ed0feb)</ept>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.pop_front">
          <source>Removes the first element from the container.</source>
          <target state="translated">Remove o primeiro elemento do contêiner.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualC.StlClr.IList`1.pop_front">
          <source>For more information, see <bpt id="p1">[</bpt>list::pop_front (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/6a0bad42-6796-41d9-a3e9-1488b3882574)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>List:: pop_front (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/6a0bad42-6796-41d9-a3e9-1488b3882574)</ept>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.push_back(`0)">
          <source>The value of the element to append to the container.</source>
          <target state="translated">O valor do elemento a ser acrescentado ao contêiner.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.push_back(`0)">
          <source>Adds a new element to the end of the container.</source>
          <target state="translated">Adiciona um novo elemento ao final do contêiner.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualC.StlClr.IList`1.push_back(`0)">
          <source>For more information, see <bpt id="p1">[</bpt>list::push_back (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/f2c70470-a899-4e5f-8f3e-b55d6a8bff0e)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>List:: push_back (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/f2c70470-a899-4e5f-8f3e-b55d6a8bff0e)</ept>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.push_front(`0)">
          <source>The value of the element to insert at the beginning of the container.</source>
          <target state="translated">O valor do elemento a ser inserido no início do contêiner.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.push_front(`0)">
          <source>Adds a new element to the beginning of the container.</source>
          <target state="translated">Adiciona um novo elemento ao início do contêiner.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualC.StlClr.IList`1.push_front(`0)">
          <source>For more information, see <bpt id="p1">[</bpt>list::push_front (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/47525641-1139-44fc-ac62-bdc04876d9e0)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>List:: push_front (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/47525641-1139-44fc-ac62-bdc04876d9e0)</ept>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)">
          <source>Designates the beginning of the reversed controlled sequence.</source>
          <target state="translated">Designa o início da sequência controlada invertida.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)">
          <source>An iterator.</source>
          <target state="translated">Um iterador.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualC.StlClr.IList`1.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)">
          <source>For more information, see <bpt id="p1">[</bpt>list::rbegin (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/99637376-8ac3-4e39-844a-b4f324a7c6ba)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>List:: rbegin (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/99637376-8ac3-4e39-844a-b4f324a7c6ba)</ept>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.remove(`0)">
          <source>The value of the element to remove from the container.</source>
          <target state="translated">O valor do elemento a ser removido do contêiner.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.remove(`0)">
          <source>Removes an element that has a specified value from the container.</source>
          <target state="translated">Remove um elemento que tem um valor especificado do contêiner.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualC.StlClr.IList`1.remove(`0)">
          <source>For more information, see <bpt id="p1">[</bpt>list::remove (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/eaf598ee-e8fd-4cc0-be69-ca81a80e1d51)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>List:: Remove (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/eaf598ee-e8fd-4cc0-be69-ca81a80e1d51)</ept>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.rend(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)">
          <source>Designates the end of the reversed controlled sequence.</source>
          <target state="translated">Designa o fim da sequência controlada invertida.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.rend(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)">
          <source>An iterator.</source>
          <target state="translated">Um iterador.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualC.StlClr.IList`1.rend(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)">
          <source>For more information, see <bpt id="p1">[</bpt>list::rend (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/b51030ad-1bca-42b0-b890-db47111d2921)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>List:: rend (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/b51030ad-1bca-42b0-b890-db47111d2921)</ept>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualC.StlClr.IList`1">
          <source>Changes the number of elements in the container.</source>
          <target state="translated">Altera o número de elementos no contêiner.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualC.StlClr.IList`1">
          <source>For more information, see <bpt id="p1">[</bpt>list::resize (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/c4b8d41f-a62b-4dbc-8568-0e0a9da24016)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>List:: Resize (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/c4b8d41f-a62b-4dbc-8568-0e0a9da24016)</ept>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.resize(System.Int32)">
          <source>The new size of the container.</source>
          <target state="translated">O novo tamanho do contêiner.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.resize(System.Int32)">
          <source>Changes the number of elements in the container to the specified size.</source>
          <target state="translated">Altera o número de elementos no contêiner para o tamanho especificado.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualC.StlClr.IList`1.resize(System.Int32)">
          <source>For more information, see <bpt id="p1">[</bpt>list::resize (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/c4b8d41f-a62b-4dbc-8568-0e0a9da24016)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>List:: Resize (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/c4b8d41f-a62b-4dbc-8568-0e0a9da24016)</ept>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.resize(System.Int32,`0)">
          <source>The new size of the container.</source>
          <target state="translated">O novo tamanho do contêiner.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.resize(System.Int32,`0)">
          <source>The value of the padding elements.</source>
          <target state="translated">O valor dos elementos de preenchimento.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.resize(System.Int32,`0)">
          <source>Changes the number of elements in the container to the specified size.</source>
          <target state="translated">Altera o número de elementos no contêiner para o tamanho especificado.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.resize(System.Int32,`0)">
          <source>If the new size is larger than the old size, the given values will be appended to the container.</source>
          <target state="translated">Se o novo tamanho for maior que o tamanho anterior, os valores fornecidos serão acrescentados ao contêiner.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualC.StlClr.IList`1.resize(System.Int32,`0)">
          <source>For more information, see <bpt id="p1">[</bpt>list::resize (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/c4b8d41f-a62b-4dbc-8568-0e0a9da24016)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>List:: Resize (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/c4b8d41f-a62b-4dbc-8568-0e0a9da24016)</ept>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.reverse">
          <source>Reverses the elements of the controlled sequence.</source>
          <target state="translated">Inverte os elementos da sequência controlada.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualC.StlClr.IList`1.reverse">
          <source>For more information, see <bpt id="p1">[</bpt>list::reverse (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/de3bce1e-01fe-461d-a785-5cf4fcea988f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>List:: reverse (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/de3bce1e-01fe-461d-a785-5cf4fcea988f)</ept>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.size">
          <source>Counts the number of elements in the container.</source>
          <target state="translated">Conta o número de elementos no contêiner.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.size">
          <source>The length of the controlled sequence.</source>
          <target state="translated">O tamanho da sequência controlada.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualC.StlClr.IList`1.size">
          <source>For more information, see <bpt id="p1">[</bpt>list::size (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/409e39fb-4468-44bb-b179-52c90e2fa293)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>List:: Size (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/409e39fb-4468-44bb-b179-52c90e2fa293)</ept>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.sort(Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})">
          <source>The operator that will be used to compare elements for ordering.</source>
          <target state="translated">O operador que será usado para comparar elementos para ordenação.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.sort(Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})">
          <source>Orders the controlled sequence.</source>
          <target state="translated">Ordena a sequência controlada.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualC.StlClr.IList`1.sort(Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})">
          <source>For more information, see <bpt id="p1">[</bpt>list::sort (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/f811d5f4-a19e-4194-8765-1e68097c52f0)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>List:: Sort (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/f811d5f4-a19e-4194-8765-1e68097c52f0)</ept>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualC.StlClr.IList`1">
          <source>Reorders links between nodes.</source>
          <target state="translated">Reordena os links entre os nós.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualC.StlClr.IList`1">
          <source>For more information, see <bpt id="p1">[</bpt>list::splice (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/ebc424b9-8341-4a88-b101-86d56324f5ac)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>List:: splice (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/ebc424b9-8341-4a88-b101-86d56324f5ac)</ept>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.IList{`0})">
          <source>The position in the container before which to splice.</source>
          <target state="translated">A posição no contêiner antes do qual realizar splice.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.IList{`0})">
          <source>The container to splice from.</source>
          <target state="translated">O contêiner do qual realizar splice.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.IList{`0})">
          <source>All elements will be removed from this container after the splice operation.</source>
          <target state="translated">Todos os elementos serão removidos deste contêiner após a operação de splice.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.IList{`0})">
          <source>Inserts the given sequence into the container before the specified position.</source>
          <target state="translated">Insere a sequência fornecida no contêiner antes da posição especificada.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.IList{`0})">
          <source>For more information, see <bpt id="p1">[</bpt>list::splice (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/ebc424b9-8341-4a88-b101-86d56324f5ac)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>List:: splice (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/ebc424b9-8341-4a88-b101-86d56324f5ac)</ept>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue)">
          <source>The position in the container before which to splice.</source>
          <target state="translated">A posição no contêiner antes do qual realizar splice.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue)">
          <source>The container to splice from.</source>
          <target state="translated">O contêiner do qual realizar splice.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue)">
          <source>The position of the element to splice.</source>
          <target state="translated">A posição do elemento a ter splice.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue)">
          <source>Removes the element from the given container pointed to by <ph id="ph1">&lt;paramref name="_First" /&gt;</ph> and inserts it before the element in the controlled sequence pointed to by <ph id="ph2">&lt;paramref name="_Where" /&gt;</ph>.</source>
          <target state="translated">Remove o elemento do contêiner fornecido apontado pelo <ph id="ph1">&lt;paramref name="_First" /&gt;</ph> e insere-o antes do elemento na sequência controlada apontada pelo <ph id="ph2">&lt;paramref name="_Where" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue)">
          <source>For more information, see <bpt id="p1">[</bpt>list::splice (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/ebc424b9-8341-4a88-b101-86d56324f5ac)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>List:: splice (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/ebc424b9-8341-4a88-b101-86d56324f5ac)</ept>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue)">
          <source>The position in the container before which to splice.</source>
          <target state="translated">A posição no contêiner antes do qual realizar splice.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue)">
          <source>The container to splice from.</source>
          <target state="translated">O contêiner do qual realizar splice.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue)">
          <source>The beginning position of the range of elements to splice.</source>
          <target state="translated">A posição de início do intervalo de elementos a ter splice.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue)">
          <source>The first position beyond the range of elements to splice.</source>
          <target state="translated">A primeira posição além do intervalo de elementos a ter splice.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue)">
          <source>Removes the range of elements [<ph id="ph1">&lt;paramref name="_First" /&gt;</ph>, <ph id="ph2">&lt;paramref name="_Last" /&gt;</ph>) from the given container and inserts it before the element in the controlled sequence pointed to by <ph id="ph3">&lt;paramref name="_Where" /&gt;</ph>.</source>
          <target state="translated">Remove o intervalo de elementos [<ph id="ph1">&lt;paramref name="_First" /&gt;</ph>, <ph id="ph2">&lt;paramref name="_Last" /&gt;</ph>) do contêiner fornecido e insere-o antes do elemento na sequência controlada apontada pelo <ph id="ph3">&lt;paramref name="_Where" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue)">
          <source>For more information, see <bpt id="p1">[</bpt>list::splice (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/ebc424b9-8341-4a88-b101-86d56324f5ac)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>List:: splice (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/ebc424b9-8341-4a88-b101-86d56324f5ac)</ept>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.swap(Microsoft.VisualC.StlClr.IList{`0})">
          <source>The container to swap contents with.</source>
          <target state="translated">O contêiner com o qual trocar conteúdo.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.swap(Microsoft.VisualC.StlClr.IList{`0})">
          <source>Swaps the contents of two containers.</source>
          <target state="translated">Alterna o conteúdo de dois contêineres.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualC.StlClr.IList`1.swap(Microsoft.VisualC.StlClr.IList{`0})">
          <source>For more information, see <bpt id="p1">[</bpt>list::swap (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/188b66c2-0a08-4001-a566-41d0955c89bd)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>List:: swap (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/188b66c2-0a08-4001-a566-41d0955c89bd)</ept>.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.unique(Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})">
          <source>The comparer that determines whether element pairs are unique.</source>
          <target state="translated">O comparador que determina se os pares de elementos são exclusivos.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.unique(Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})">
          <source>An element that is not unique will be removed from the container.</source>
          <target state="translated">Um elemento que não é exclusivo será removido do contêiner.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.IList`1.unique(Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})">
          <source>Removes adjacent elements that pass a specified test.</source>
          <target state="translated">Remove elementos adjacentes que são passados a um teste especificado.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualC.StlClr.IList`1.unique(Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})">
          <source>For more information, see <bpt id="p1">[</bpt>list::unique (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/c3a29e4e-0ec1-4472-b050-7a9511037132)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>List:: Unique (STL/CLR)<ept id="p1">](http://msdn.microsoft.com/library/c3a29e4e-0ec1-4472-b050-7a9511037132)</ept>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>