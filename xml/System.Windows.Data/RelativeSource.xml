<Type Name="RelativeSource" FullName="System.Windows.Data.RelativeSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bd6c9c7cfd340e12f61f2e0caf502cbee1793d6c" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37521516" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RelativeSource : System.Windows.Markup.MarkupExtension, System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RelativeSource extends System.Windows.Markup.MarkupExtension implements class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.RelativeSource" />
  <TypeSignature Language="VB.NET" Value="Public Class RelativeSource&#xA;Inherits MarkupExtension&#xA;Implements ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class RelativeSource : System::Windows::Markup::MarkupExtension, System::ComponentModel::ISupportInitialize" />
  <TypeSignature Language="F#" Value="type RelativeSource = class&#xA;    inherit MarkupExtension&#xA;    interface ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Markup.MarkupExtension</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.MarkupExtensionReturnType(typeof(System.Windows.Data.RelativeSource))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Implements a markup extension that describes the location of the binding source relative to the position of the binding target.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Uma das maneiras de especificar uma origem da associação é usar o <xref:System.Windows.Data.Binding.RelativeSource%2A?displayProperty=nameWithType> propriedade. Esse é o tipo de propriedade da propriedade. <xref:System.Windows.Data.RelativeSource> ao mesmo tempo é uma implementação de extensão de marcação e um objeto de dados. Quando a extensão retorna propriamente dito (consulte <xref:System.Windows.Data.RelativeSource.ProvideValue%2A>), as informações relevantes estão contidas nos dados. A principal finalidade da extensão de marcação é permitir que uma sintaxe do construtor de argumento variável no formulário de atributo, para que o <xref:System.Windows.Data.RelativeSourceMode.FindAncestor> modo pode ser definidas embutidas com os dois argumentos extras para o tipo de ancestral e nível que não exigem os outros modos.  
  
 Para [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] informações, consulte [RelativeSource MarkupExtension](~/docs/framework/wpf/advanced/relativesource-markupextension.md).  
  
## Examples  
 O exemplo a seguir mostra um gatilho de estilo que cria um <xref:System.Windows.Controls.ToolTip> que relata uma mensagem de erro de validação. Usando o <xref:System.Windows.Data.Binding.RelativeSource%2A> o valor do setter de propriedade, associa o conteúdo de erro do atual <xref:System.Windows.Controls.TextBox> (o <xref:System.Windows.Controls.TextBox> usando o estilo). Para obter mais informações sobre este exemplo, consulte [como: implementar validação de associação](~/docs/framework/wpf/data/how-to-implement-binding-validation.md).  
  
 [!code-xaml[BindValidation#5](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml#5)]  
  
 A exemplo a seguir mostra a <xref:System.Windows.Style> definição de um controle personalizado chamado `NumericUpDown`. O <xref:System.Windows.Controls.TextBlock.Text%2A> propriedade do <xref:System.Windows.Controls.TextBlock> está associado ao `Value` do objeto que é o `TemplatedParent`, que é o `NumericUpDown` controlar que este <xref:System.Windows.Style> nesse caso é aplicado a.  
  
 [!code-xaml[CustomControlNumericUpDown#RelativeSource](~/samples/snippets/csharp/VS_Snippets_Wpf/CustomControlNumericUpDown/CSharp/CustomControlLibrary/themes/generic.xaml#relativesource)]  
  
 Para o exemplo completo, consulte [controle personalizado NumericUpDown com tema e amostra de suporte de automação de interface do usuário](http://go.microsoft.com/fwlink/?LinkID=160025).  
  
 A seguir retorna o segundo <xref:System.Windows.Controls.ItemsControl> encontrado no caminho para cima, começando no elemento de destino da associação.  
  
 [!code-csharp[BindConversion#RelativeSource](~/samples/snippets/csharp/VS_Snippets_Wpf/BindConversion/CSharp/Window1.xaml.cs#relativesource)]
 [!code-vb[BindConversion#RelativeSource](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindConversion/visualbasic/window1.xaml.vb#relativesource)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Data.RelativeSource" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.RelativeSource" /> class.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelativeSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.RelativeSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RelativeSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.RelativeSource" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelativeSource (System.Windows.Data.RelativeSourceMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Data.RelativeSourceMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.RelativeSource.#ctor(System.Windows.Data.RelativeSourceMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mode As RelativeSourceMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RelativeSource(System::Windows::Data::RelativeSourceMode mode);" />
      <MemberSignature Language="F#" Value="new System.Windows.Data.RelativeSource : System.Windows.Data.RelativeSourceMode -&gt; System.Windows.Data.RelativeSource" Usage="new System.Windows.Data.RelativeSource mode" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mode" Type="System.Windows.Data.RelativeSourceMode" />
      </Parameters>
      <Docs>
        <param name="mode">One of the <see cref="T:System.Windows.Data.RelativeSourceMode" /> values.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.RelativeSource" /> class with an initial mode.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelativeSource (System.Windows.Data.RelativeSourceMode mode, Type ancestorType, int ancestorLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Data.RelativeSourceMode mode, class System.Type ancestorType, int32 ancestorLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.RelativeSource.#ctor(System.Windows.Data.RelativeSourceMode,System.Type,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mode As RelativeSourceMode, ancestorType As Type, ancestorLevel As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RelativeSource(System::Windows::Data::RelativeSourceMode mode, Type ^ ancestorType, int ancestorLevel);" />
      <MemberSignature Language="F#" Value="new System.Windows.Data.RelativeSource : System.Windows.Data.RelativeSourceMode * Type * int -&gt; System.Windows.Data.RelativeSource" Usage="new System.Windows.Data.RelativeSource (mode, ancestorType, ancestorLevel)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mode" Type="System.Windows.Data.RelativeSourceMode" />
        <Parameter Name="ancestorType" Type="System.Type" />
        <Parameter Name="ancestorLevel" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="mode">One of the <see cref="T:System.Windows.Data.RelativeSourceMode" /> values. For this signature to be relevant, this should be <see cref="F:System.Windows.Data.RelativeSourceMode.FindAncestor" />.</param>
        <param name="ancestorType">The <see cref="T:System.Type" /> of ancestor to look for.</param>
        <param name="ancestorLevel">The ordinal position of the desired ancestor among all ancestors of the given type.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.RelativeSource" /> class with an initial mode and additional tree-walking qualifiers for finding the desired relative source.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `ancestorType` e `ancestorLevel` não têm relevância se fornecido como parâmetros para um `mode` diferente de <xref:System.Windows.Data.RelativeSourceMode.FindAncestor>. Não use esta assinatura para outra <xref:System.Windows.Data.RelativeSourceMode> valores.  
  
   
  
## Examples  
 A seguir retorna o segundo <xref:System.Windows.Controls.ItemsControl> encontrado no caminho para cima, começando no elemento de destino da associação.  
  
 [!code-csharp[BindConversion#RelativeSource](~/samples/snippets/csharp/VS_Snippets_Wpf/BindConversion/CSharp/Window1.xaml.cs#relativesource)]
 [!code-vb[BindConversion#RelativeSource](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindConversion/visualbasic/window1.xaml.vb#relativesource)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AncestorLevel">
      <MemberSignature Language="C#" Value="public int AncestorLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AncestorLevel" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.RelativeSource.AncestorLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property AncestorLevel As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AncestorLevel { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.AncestorLevel : int with get, set" Usage="System.Windows.Data.RelativeSource.AncestorLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the level of ancestor to look for, in <see cref="F:System.Windows.Data.RelativeSourceMode.FindAncestor" /> mode. Use 1 to indicate the one nearest to the binding target element.</summary>
        <value>O nível de ancestral. Use 1 para indicar o mais próximo ao elemento de destino da associação.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o <xref:System.Windows.Data.RelativeSource.Mode%2A> não está definida explicitamente, definindo o <xref:System.Windows.Data.RelativeSource.AncestorType%2A> ou o <xref:System.Windows.Data.RelativeSource.AncestorLevel%2A> propriedade implicitamente bloqueará o <xref:System.Windows.Data.RelativeSource.Mode%2A> valor da propriedade <xref:System.Windows.Data.RelativeSourceMode.FindAncestor>.  
  
<a name="xamlTextUsage_AncestorLevel"></a>   
## <a name="xaml-text-usage"></a>Uso de texto XAML  
 Para [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] informações, consulte [RelativeSource MarkupExtension](~/docs/framework/wpf/advanced/relativesource-markupextension.md).  
  
   
  
## Examples  
 A seguir retorna o segundo <xref:System.Windows.Controls.ItemsControl> encontrado no caminho para cima, começando no elemento de destino da associação.  
  
 [!code-csharp[BindConversion#RelativeSource](~/samples/snippets/csharp/VS_Snippets_Wpf/BindConversion/CSharp/Window1.xaml.cs#relativesource)]
 [!code-vb[BindConversion#RelativeSource](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindConversion/visualbasic/window1.xaml.vb#relativesource)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.RelativeSourceMode" />
        <altmember cref="T:System.Windows.Data.RelativeSource" />
      </Docs>
    </Member>
    <Member MemberName="AncestorType">
      <MemberSignature Language="C#" Value="public Type AncestorType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AncestorType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.RelativeSource.AncestorType" />
      <MemberSignature Language="VB.NET" Value="Public Property AncestorType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ AncestorType { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AncestorType : Type with get, set" Usage="System.Windows.Data.RelativeSource.AncestorType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the type of ancestor to look for.</summary>
        <value>O tipo de ancestral. O valor padrão é <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o <xref:System.Windows.Data.RelativeSource.Mode%2A> não está definida explicitamente, definindo o <xref:System.Windows.Data.RelativeSource.AncestorType%2A> ou o <xref:System.Windows.Data.RelativeSource.AncestorLevel%2A> propriedade implicitamente bloqueará o <xref:System.Windows.Data.RelativeSource.Mode%2A> valor da propriedade <xref:System.Windows.Data.RelativeSourceMode.FindAncestor>.  
  
<a name="xamlTextUsage_AncestorType"></a>   
## <a name="xaml-text-usage"></a>Uso de texto XAML  
 Para [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] informações, consulte [RelativeSource MarkupExtension](~/docs/framework/wpf/advanced/relativesource-markupextension.md).  
  
   
  
## Examples  
 A seguir retorna o segundo <xref:System.Windows.Controls.ItemsControl> encontrado no caminho para cima, começando no elemento de destino da associação.  
  
 [!code-csharp[BindConversion#RelativeSource](~/samples/snippets/csharp/VS_Snippets_Wpf/BindConversion/CSharp/Window1.xaml.cs#relativesource)]
 [!code-vb[BindConversion#RelativeSource](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindConversion/visualbasic/window1.xaml.vb#relativesource)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Data.RelativeSource" /> is not in the <see cref="F:System.Windows.Data.RelativeSourceMode.FindAncestor" /> mode.</exception>
        <altmember cref="T:System.Windows.Data.RelativeSourceMode" />
        <altmember cref="P:System.Windows.Data.RelativeSource.AncestorLevel" />
        <altmember cref="F:System.Windows.Data.RelativeSourceMode.FindAncestor" />
        <altmember cref="T:System.Windows.Data.RelativeSource" />
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public System.Windows.Data.RelativeSourceMode Mode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Data.RelativeSourceMode Mode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.RelativeSource.Mode" />
      <MemberSignature Language="VB.NET" Value="Public Property Mode As RelativeSourceMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::RelativeSourceMode Mode { System::Windows::Data::RelativeSourceMode get(); void set(System::Windows::Data::RelativeSourceMode value); };" />
      <MemberSignature Language="F#" Value="member this.Mode : System.Windows.Data.RelativeSourceMode with get, set" Usage="System.Windows.Data.RelativeSource.Mode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Markup.ConstructorArgument("mode")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.RelativeSourceMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a <see cref="T:System.Windows.Data.RelativeSourceMode" /> value that describes the location of the binding source relative to the position of the binding target.</summary>
        <value>Um dos valores de <see cref="T:System.Windows.Data.RelativeSourceMode" />. O valor padrão é <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa propriedade é somente leitura após a inicialização. Se essa propriedade não está definida explicitamente, configurando o <xref:System.Windows.Data.RelativeSource.AncestorType%2A> ou o <xref:System.Windows.Data.RelativeSource.AncestorType%2A> e o <xref:System.Windows.Data.RelativeSource.AncestorLevel%2A> propriedades implicitamente bloqueará esse valor da propriedade <xref:System.Windows.Data.RelativeSourceMode.FindAncestor>.  
  
<a name="xamlTextUsage_Mode"></a>   
## <a name="xaml-text-usage"></a>Uso de texto XAML  
 Para [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] informações, consulte [RelativeSource MarkupExtension](~/docs/framework/wpf/advanced/relativesource-markupextension.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">This property is immutable after initialization. Instead of changing the <see cref="P:System.Windows.Data.RelativeSource.Mode" /> on this instance, create a new <see cref="T:System.Windows.Data.RelativeSource" /> or use a different static instance.</exception>
        <altmember cref="T:System.Windows.Data.RelativeSourceMode" />
        <altmember cref="T:System.Windows.Data.RelativeSource" />
      </Docs>
    </Member>
    <Member MemberName="PreviousData">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.RelativeSource PreviousData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Data.RelativeSource PreviousData" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.RelativeSource.PreviousData" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PreviousData As RelativeSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Data::RelativeSource ^ PreviousData { System::Windows::Data::RelativeSource ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreviousData : System.Windows.Data.RelativeSource" Usage="System.Windows.Data.RelativeSource.PreviousData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.RelativeSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a static value that is used to return a <see cref="T:System.Windows.Data.RelativeSource" /> constructed for the <see cref="F:System.Windows.Data.RelativeSourceMode.PreviousData" /> mode.</summary>
        <value>Uma <see cref="T:System.Windows.Data.RelativeSource" /> estática.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Três dos quatro <xref:System.Windows.Data.RelativeSourceMode> valores <xref:System.Windows.Data.RelativeSourceMode.PreviousData>, <xref:System.Windows.Data.RelativeSourceMode.Self>, ou <xref:System.Windows.Data.RelativeSourceMode.TemplatedParent>, podem produzir um <xref:System.Windows.Data.RelativeSource> que é totalmente estático, que contém nenhum valor privada exclusivo. Todos os usos de propriedade estática podem compartilhar o mesmo objeto, eliminando a necessidade de alocar objetos separados para cada uso. Portanto, usando a propriedade estática reduz o uso de memória.  
  
<a name="xamlTextUsage_PreviousData"></a>   
## <a name="xaml-text-usage"></a>Uso de texto XAML  
 Para [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] informações, consulte [RelativeSource MarkupExtension](~/docs/framework/wpf/advanced/relativesource-markupextension.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.RelativeSourceMode" />
        <altmember cref="T:System.Windows.Data.RelativeSource" />
      </Docs>
    </Member>
    <Member MemberName="ProvideValue">
      <MemberSignature Language="C#" Value="public override object ProvideValue (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ProvideValue(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.RelativeSource.ProvideValue(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ProvideValue (serviceProvider As IServiceProvider) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ProvideValue(IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="override this.ProvideValue : IServiceProvider -&gt; obj" Usage="relativeSource.ProvideValue serviceProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">An object that can provide services for the markup extension. In this implementation, this parameter can be <see langword="null" />.</param>
        <summary>Returns an object that should be set as the value on the target object's property for this markup extension. For <see cref="T:System.Windows.Data.RelativeSource" />, this is another <see cref="T:System.Windows.Data.RelativeSource" />, using the appropriate source for the specified mode.</summary>
        <returns>Another <see cref="T:System.Windows.Data.RelativeSource" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Data.RelativeSource> ao mesmo tempo é uma implementação de extensão de marcação e um objeto de dados. Quando a extensão é retornado em si, as informações relevantes estão contidas nos dados. A principal finalidade da extensão de marcação é permitir que uma sintaxe do construtor de argumento variável no formulário de atributo para que o <xref:System.Windows.Data.RelativeSourceMode.FindAncestor> modo pode ser definidas embutidas, com os dois argumentos extras para o tipo de ancestral e nível que não exigem os outros modos.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Self">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.RelativeSource Self { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Data.RelativeSource Self" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.RelativeSource.Self" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Self As RelativeSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Data::RelativeSource ^ Self { System::Windows::Data::RelativeSource ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Self : System.Windows.Data.RelativeSource" Usage="System.Windows.Data.RelativeSource.Self" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.RelativeSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a static value that is used to return a <see cref="T:System.Windows.Data.RelativeSource" /> constructed for the <see cref="F:System.Windows.Data.RelativeSourceMode.Self" /> mode.</summary>
        <value>Uma <see cref="T:System.Windows.Data.RelativeSource" /> estática.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Três dos quatro <xref:System.Windows.Data.RelativeSourceMode> valores <xref:System.Windows.Data.RelativeSourceMode.PreviousData>, <xref:System.Windows.Data.RelativeSourceMode.Self>, ou <xref:System.Windows.Data.RelativeSourceMode.TemplatedParent>, podem produzir um <xref:System.Windows.Data.RelativeSource> que é totalmente estático, que contém nenhum valor privada exclusivo. Todos os usos de propriedade estática podem compartilhar o mesmo objeto, eliminando a necessidade de alocar objetos separados para cada uso. Portanto, usando a propriedade estática reduz o uso de memória.  
  
<a name="xamlTextUsage_Self"></a>   
## <a name="xaml-text-usage"></a>Uso de texto XAML  
 Para [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] informações, consulte [RelativeSource MarkupExtension](~/docs/framework/wpf/advanced/relativesource-markupextension.md).  
  
   
  
## Examples  
 O exemplo a seguir mostra um gatilho de estilo que cria um <xref:System.Windows.Controls.ToolTip> que relata uma mensagem de erro de validação. O valor do setter é associado ao conteúdo de erro do atual <xref:System.Windows.Controls.TextBox> (o <xref:System.Windows.Controls.TextBox> usando o estilo) usando o <xref:System.Windows.Data.Binding.RelativeSource%2A> propriedade. Ver [como: implementar validação de associação](~/docs/framework/wpf/data/how-to-implement-binding-validation.md) para obter mais informações sobre este exemplo.  
  
 [!code-xaml[BindValidation#5](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.RelativeSourceMode" />
        <altmember cref="T:System.Windows.Data.RelativeSource" />
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeAncestorLevel">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeAncestorLevel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeAncestorLevel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.RelativeSource.ShouldSerializeAncestorLevel" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeAncestorLevel () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeAncestorLevel();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeAncestorLevel : unit -&gt; bool" Usage="relativeSource.ShouldSerializeAncestorLevel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indicates whether the <see cref="P:System.Windows.Data.RelativeSource.AncestorLevel" /> property should be persisted.</summary>
        <returns>
          <see langword="true" /> if the property value has changed from its default; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Isso `ShouldSerialize` método é fornecido, pois o <xref:System.Windows.Data.RelativeSource.AncestorLevel%2A> propriedade não tem um valor padrão simples. Este método indica se a propriedade foi alterada do seu valor padrão. Normalmente você invoca esse método se você estiver desenvolvendo ou um designer para o <xref:System.Windows.Data.RelativeSource> ou desenvolver seu próprio controle incorporando o <xref:System.Windows.Data.RelativeSource>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeAncestorType">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeAncestorType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeAncestorType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.RelativeSource.ShouldSerializeAncestorType" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeAncestorType () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeAncestorType();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeAncestorType : unit -&gt; bool" Usage="relativeSource.ShouldSerializeAncestorType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indicates whether the <see cref="P:System.Windows.Data.RelativeSource.AncestorType" /> property should be persisted.</summary>
        <returns>
          <see langword="true" /> if the property value has changed from its default; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Isso `ShouldSerialize` método é fornecido, pois o <xref:System.Windows.Data.RelativeSource.AncestorType%2A> propriedade não tem um valor padrão simples. Este método indica se a propriedade foi alterada do seu valor padrão. Normalmente você invoca esse método se você estiver desenvolvendo ou um designer para o <xref:System.Windows.Data.RelativeSource> ou desenvolver seu próprio controle incorporando o <xref:System.Windows.Data.RelativeSource>.  
  
 Para obter mais informações, consulte [definindo valores padrão com os métodos ShouldSerialize e redefinir](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.BeginInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.RelativeSource.System#ComponentModel#ISupportInitialize#BeginInit" />
      <MemberSignature Language="VB.NET" Value="Sub BeginInit () Implements ISupportInitialize.BeginInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ISupportInitialize.BeginInit() = System::ComponentModel::ISupportInitialize::BeginInit;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.EndInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.RelativeSource.System#ComponentModel#ISupportInitialize#EndInit" />
      <MemberSignature Language="VB.NET" Value="Sub EndInit () Implements ISupportInitialize.EndInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ISupportInitialize.EndInit() = System::ComponentModel::ISupportInitialize::EndInit;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TemplatedParent">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.RelativeSource TemplatedParent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Data.RelativeSource TemplatedParent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.RelativeSource.TemplatedParent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TemplatedParent As RelativeSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Data::RelativeSource ^ TemplatedParent { System::Windows::Data::RelativeSource ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TemplatedParent : System.Windows.Data.RelativeSource" Usage="System.Windows.Data.RelativeSource.TemplatedParent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.RelativeSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a static value that is used to return a <see cref="T:System.Windows.Data.RelativeSource" /> constructed for the <see cref="F:System.Windows.Data.RelativeSourceMode.TemplatedParent" /> mode.</summary>
        <value>Uma <see cref="T:System.Windows.Data.RelativeSource" /> estática.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Três dos quatro <xref:System.Windows.Data.RelativeSourceMode> valores <xref:System.Windows.Data.RelativeSourceMode.PreviousData>, <xref:System.Windows.Data.RelativeSourceMode.Self>, ou <xref:System.Windows.Data.RelativeSourceMode.TemplatedParent>, podem produzir um <xref:System.Windows.Data.RelativeSource> que é totalmente estático, que contém nenhum valor privada exclusivo. Todos os usos de propriedade estática podem compartilhar o mesmo objeto, eliminando a necessidade de alocar objetos separados para cada uso. Portanto, usando a propriedade estática reduz o uso de memória.  
  
<a name="xamlTextUsage_TemplatedParent"></a>   
## <a name="xaml-text-usage"></a>Uso de texto XAML  
 Para [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] informações, consulte [RelativeSource MarkupExtension](~/docs/framework/wpf/advanced/relativesource-markupextension.md).  
  
   
  
## Examples  
 A exemplo a seguir mostra a <xref:System.Windows.Style> definição de um controle personalizado chamado `NumericUpDown`. O <xref:System.Windows.Controls.TextBlock.Text%2A> propriedade do <xref:System.Windows.Controls.TextBlock> está associado ao `Value` do objeto que é o `TemplatedParent`, que é o `NumericUpDown` controlar que este <xref:System.Windows.Style> nesse caso é aplicado a.  
  
 [!code-xaml[CustomControlNumericUpDown#RelativeSource](~/samples/snippets/csharp/VS_Snippets_Wpf/CustomControlNumericUpDown/CSharp/CustomControlLibrary/themes/generic.xaml#relativesource)]  
  
 Para o exemplo completo, consulte [controle personalizado NumericUpDown com tema e amostra de suporte de automação de interface do usuário](http://go.microsoft.com/fwlink/?LinkID=160025).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.RelativeSourceMode" />
        <altmember cref="T:System.Windows.Data.RelativeSource" />
      </Docs>
    </Member>
  </Members>
</Type>