<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="BindingOperations.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b6d6ad02d9cad5d3fea47f68a5d2f16bfb2f4a51.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b6d6ad02d9cad5d3fea47f68a5d2f16bfb2f4a51</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Data.BindingOperations">
          <source>Provides static methods to manipulate bindings, including <ph id="ph1">&lt;see cref="T:System.Windows.Data.Binding" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Windows.Data.MultiBinding" /&gt;</ph>, and <ph id="ph3">&lt;see cref="T:System.Windows.Data.PriorityBinding" /&gt;</ph> objects.</source>
          <target state="translated">Fornece métodos estáticos para manipular associações, incluindo objetos <ph id="ph1">&lt;see cref="T:System.Windows.Data.Binding" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Windows.Data.MultiBinding" /&gt;</ph> e <ph id="ph3">&lt;see cref="T:System.Windows.Data.PriorityBinding" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>This class exposes a set of static methods that serve as helper operations for data bindings.</source>
          <target state="translated">Essa classe expõe um conjunto de métodos estáticos que servem como operações de auxiliar para associações de dados.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.AccessCollection(System.Collections.IEnumerable,System.Action,System.Boolean)">
          <source>The collection to access.</source>
          <target state="translated">A coleção a ser acessada.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.AccessCollection(System.Collections.IEnumerable,System.Action,System.Boolean)">
          <source>The action to perform on the collection.</source>
          <target state="translated">A ação a ser executada na coleção.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.AccessCollection(System.Collections.IEnumerable,System.Action,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <bpt id="p1">&lt;c&gt;</bpt>accessMethod<ept id="p1">&lt;/c&gt;</ept> will write to the collection; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <bpt id="p1">&lt;c&gt;</bpt>accessMethod<ept id="p1">&lt;/c&gt;</ept> gravar na coleção; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.AccessCollection(System.Collections.IEnumerable,System.Action,System.Boolean)">
          <source>Provides access to a collection by using the synchronization mechanism that the application specified when it called EnableCollectionSynchronization.</source>
          <target state="translated">Fornece acesso a uma coleção usando o mecanismo de sincronização que o aplicativo especificou quando chamou EnableCollectionSynchronization.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.ClearAllBindings(System.Windows.DependencyObject)">
          <source>The object from which to remove bindings.</source>
          <target state="translated">O objeto do qual remover associações.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.ClearAllBindings(System.Windows.DependencyObject)">
          <source>Removes all bindings, including bindings of type <ph id="ph1">&lt;see cref="T:System.Windows.Data.Binding" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Windows.Data.MultiBinding" /&gt;</ph>, and <ph id="ph3">&lt;see cref="T:System.Windows.Data.PriorityBinding" /&gt;</ph>, from the specified <ph id="ph4">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph>.</source>
          <target state="translated">Remove todas as associações, incluindo associações dos tipos <ph id="ph1">&lt;see cref="T:System.Windows.Data.Binding" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Windows.Data.MultiBinding" /&gt;</ph> e <ph id="ph3">&lt;see cref="T:System.Windows.Data.PriorityBinding" /&gt;</ph>, do <ph id="ph4">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.ClearAllBindings(System.Windows.DependencyObject)">
          <source>If the specified object is not data-bound, this method has no effect.</source>
          <target state="translated">Se o objeto especificado não é associado a dados, esse método não terá efeito.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.ClearAllBindings(System.Windows.DependencyObject)">
          <source>If <ph id="ph1">&lt;paramref name="target" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Se <ph id="ph1">&lt;paramref name="target" /&gt;</ph> for <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.ClearBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The object from which to remove the binding.</source>
          <target state="translated">O objeto do qual remover a associação.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.ClearBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The dependency property from which to remove the binding.</source>
          <target state="translated">A propriedade de dependência da qual remover a associação.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.ClearBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>Removes the binding from a property if there is one.</source>
          <target state="translated">Remove a associação de uma propriedade, se houver.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.ClearBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>If the given property is data-bound with a <ph id="ph1">&lt;xref:System.Windows.Data.Binding&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Data.PriorityBinding&gt;</ph>, or <ph id="ph3">&lt;xref:System.Windows.Data.MultiBinding&gt;</ph>, this method removes the corresponding binding expression and restores the value of the property to what it was before any local value was set through the binding.</source>
          <target state="translated">Se a propriedade especificada está associado a dados com um <ph id="ph1">&lt;xref:System.Windows.Data.Binding&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Data.PriorityBinding&gt;</ph>, ou <ph id="ph3">&lt;xref:System.Windows.Data.MultiBinding&gt;</ph>, este método remove a expressão de associação e restaura o valor da propriedade ao que era antes de qualquer local valor foi definido por meio de associação correspondentes.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.ClearBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>If the given property is not data-bound, this method has no effect.</source>
          <target state="translated">Se a propriedade especificada não está associado a dados, esse método não terá efeito.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.ClearBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;paramref name="target" /&gt;</ph> and <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> parameters cannot be <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Os parâmetros <ph id="ph1">&lt;paramref name="target" /&gt;</ph> e <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> não podem ser <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="E:System.Windows.Data.BindingOperations.CollectionRegistering">
          <source>Occurs when the data-binding system notices a collection.</source>
          <target state="translated">Ocorre quando o sistema de associação de dados observa uma coleção.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="E:System.Windows.Data.BindingOperations.CollectionViewRegistering">
          <source>Occurs when the data-binding system notices a collection view.</source>
          <target state="translated">Ocorre quando o sistema de associação de dados observa uma exibição de coleção.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.DisableCollectionSynchronization(System.Collections.IEnumerable)">
          <source>The collection to remove synchronized access from.</source>
          <target state="translated">A coleção da qual remover o acesso sincronizado.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.DisableCollectionSynchronization(System.Collections.IEnumerable)">
          <source>Remove the synchronization registered for the specified collection.</source>
          <target state="translated">Remova a sincronização registrada na coleção especificada.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.BindingOperations.DisconnectedSource">
          <source>Gets an object that replaces the <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.DataContext" /&gt;</ph> when an item container is removed from the visual tree.</source>
          <target state="translated">Obtém um objeto que substitui o <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.DataContext" /&gt;</ph> quando um contêiner do item é removido da árvore visual.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingOperations.DisconnectedSource">
          <source>An object that replaces the <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.DataContext" /&gt;</ph> when an item container is removed from the visual tree.</source>
          <target state="translated">Um objeto que substitui o <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.DataContext" /&gt;</ph> quando um contêiner do item é removido da árvore visual.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingOperations.DisconnectedSource">
          <source>Use this property if you need to deal with the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> of an item container.</source>
          <target state="translated">Use essa propriedade se você precisa lidar com o <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> de um contêiner de itens.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingOperations.DisconnectedSource">
          <source>An item container is the UI element that displays an item in an <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>.</source>
          <target state="translated">Um contêiner de itens é o elemento de interface do usuário que exibe um item em uma <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingOperations.DisconnectedSource">
          <source>When an <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> is data bound to a collection, an item container is generated for each item.</source>
          <target state="translated">Quando um <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> dados associado a uma coleção, um contêiner de itens é gerado para cada item.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingOperations.DisconnectedSource">
          <source>In some cases, item containers are removed from the visual tree.</source>
          <target state="translated">Em alguns casos, os contêineres de itens são removidos da árvore visual.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingOperations.DisconnectedSource">
          <source>Two typical cases where an item container is removed are when an item is removed from the underlying collection and when virtualization is enabled on the <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>.</source>
          <target state="translated">São de dois casos comuns em que um contêiner do item é removido quando um item é removido da coleção subjacente e quando a opção de virtualização está ativada o <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingOperations.DisconnectedSource">
          <source>In these cases, the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> property of the item container will be set to the <ph id="ph2">&lt;xref:System.Windows.Data.BindingOperations.DisconnectedSource%2A&gt;</ph> property  You should check whether the <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> is equal to the <ph id="ph4">&lt;xref:System.Windows.Data.BindingOperations.DisconnectedSource%2A&gt;</ph> before accessing the <ph id="ph5">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> in the <ph id="ph6">&lt;xref:System.Windows.FrameworkElement.DataContextChanged&gt;</ph> event for item containers.</source>
          <target state="translated">Nesses casos, o <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> propriedade do item contêiner será definida como o <ph id="ph2">&lt;xref:System.Windows.Data.BindingOperations.DisconnectedSource%2A&gt;</ph> propriedade, você deve verificar se o <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> é igual ao <ph id="ph4">&lt;xref:System.Windows.Data.BindingOperations.DisconnectedSource%2A&gt;</ph> antes de acessar o <ph id="ph5">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> no <ph id="ph6">&lt;xref:System.Windows.FrameworkElement.DataContextChanged&gt;</ph> evento para contêineres de itens.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingOperations.DisconnectedSource">
          <source>For more information about item containers and virtualization, see the remarks in the <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt;</ph> class.</source>
          <target state="translated">Para obter mais informações sobre virtualização e contêineres de itens, consulte os comentários na <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="T:System.Windows.Data.BindingOperations">
          <source>Enables a <ph id="ph1">&lt;see cref="T:System.Windows.Data.CollectionView" /&gt;</ph> object to participate in synchronized access to a collection that is used on multiple threads.</source>
          <target state="translated">Permite que um objeto <ph id="ph1">&lt;see cref="T:System.Windows.Data.CollectionView" /&gt;</ph> participe do acesso sincronizado a uma coleção usada em vários threads.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>A WPF application can display a collection of data using an <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> or one of its subclasses (<ph id="ph2">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.DataGrid&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Controls.TreeView&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Controls.ListView&gt;</ph>, etc.).</source>
          <target state="translated">Um aplicativo WPF pode exibir um conjunto de dados usando um <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> ou uma de suas subclasses (<ph id="ph2">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.DataGrid&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Controls.TreeView&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Controls.ListView&gt;</ph>, etc.).</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>WPF channels all its access to the collection through a subclass of <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph>.</source>
          <target state="translated">WPF canais de todos os seu acesso à coleção por meio de uma subclasse de <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>Both the <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> and the <ph id="ph2">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> have affinity to the thread on which the <ph id="ph3">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> was created, meaning that using them on a different thread is forbidden and throws an exception.</source>
          <target state="translated">Tanto o <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> têm afinidade para o thread no qual o <ph id="ph3">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> foi criado, que significa que usá-las em um thread diferente é proibido e gera uma exceção.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>In effect, this restriction applies to the collection as well.</source>
          <target state="translated">Na verdade, essa restrição se aplica à coleção também.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>You may want to use the collection on multiple threads.</source>
          <target state="translated">Você talvez queira usar a coleção em vários threads.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>For example, you want to update the collection (add or remove items) on a "data-gathering" thread, while displaying the results on a "user interface" thread, so that the UI remains responsive while data-gathering is happening.</source>
          <target state="translated">Por exemplo, você deseja atualizar a coleção (Adicionar ou remover itens) em um thread de "coleta de dados", ao exibir os resultados em um thread de "interface do usuário", para que a interface do usuário permanece responsivo durante a coleta de dados está acontecendo.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>In such a situation, you are responsible for ensuring synchronized ("thread-safe") access to the collection.</source>
          <target state="translated">Em tal situação, você é responsável por garantir acesso sincronizado de ("thread-safe") para a coleção.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>This is typically done using either a simple lock mechanism or a more elaborate synchronization mechanism such as semaphores, reset events, etc.</source>
          <target state="translated">Isso geralmente é feito usando um mecanismo de bloqueio simples ou um mecanismo de sincronização mais elaborado como semáforos, redefinir os eventos, etc.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>While you must synchronize your application's access to the collection, you must also guarantee that access from WPF (specifically from <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph>) participates in the same synchronization mechanism.</source>
          <target state="translated">Enquanto você deve sincronizar o acesso do aplicativo à coleção, você também deve garantir que o acesso do WPF (especificamente de <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph>) participa o mesmo mecanismo de sincronização.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>You do this by calling the <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A&gt;</ph> method.</source>
          <target state="translated">Você pode fazer ao chamar o método <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>To use a collection on multiple threads, one of which is the UI thread that owns the <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>, an application has the following responsibilities:</source>
          <target state="translated">Para usar uma coleção em vários threads, um dos quais é o thread de interface do usuário que possui o <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>, um aplicativo tem as seguintes responsabilidades:</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>Choose a synchronization mechanism.</source>
          <target state="translated">Escolha um mecanismo de sincronização.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>Synchronize all access from the application to the collection using that mechanism.</source>
          <target state="translated">Sincronize todo o acesso do aplicativo à coleção usando esse mecanismo.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A&gt;</ph> to inform WPF of the mechanism.</source>
          <target state="translated">Chamar <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A&gt;</ph> para informar o WPF do mecanismo.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>The call must occur on the UI thread.</source>
          <target state="translated">A chamada deve ocorrer no thread da interface do usuário.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>The call must occur before using the collection on a different thread or before attaching the collection to the <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>, whichever is later.</source>
          <target state="translated">A chamada deve ocorrer antes de usar a coleção em um thread diferente ou antes de anexar a coleção para o <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>, o que for mais recente.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)&gt;</ph> overload if using a simple lock mechanism; call the <ph id="ph2">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)&gt;</ph> overload if using a more elaborate mechanism.</source>
          <target state="translated">Chamar o <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)&gt;</ph> sobrecarga se usando um mecanismo de bloqueio simples; a chamada a <ph id="ph2">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)&gt;</ph> sobrecarga se usando um mecanismo mais sofisticado.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>Ensure that a change to the collection and the notification of that change (through <ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged&gt;</ph>) are atomic; no access from other threads can intervene.</source>
          <target state="translated">Certifique-se de que uma alteração para a coleção e a notificação de alteração (por meio de <ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged&gt;</ph>) são atômicas; nenhum acesso de outros threads pode intervir.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>(This is usually free.</source>
          <target state="translated">(Isso é geralmente livre.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>For instance, <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> guarantees this, provided that all changes are protected by synchronization.)</source>
          <target state="translated">For Instance, <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> garante isso, desde que todas as alterações são protegidas por sincronização.)</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>If you call <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A&gt;</ph>, that call must also occur on the UI thread.</source>
          <target state="translated">Se você chamar <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A&gt;</ph>, que a chamada também deve ocorrer no thread da interface do usuário.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>If you want to use the same collection on multiple UI threads, you must call <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A&gt;</ph> (and <ph id="ph2">&lt;xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A&gt;</ph>, if needed) separately on each UI thread.</source>
          <target state="translated">Se você quiser usar a mesma coleção em vários threads de interface do usuário, você deve chamar <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A&gt;</ph> (e <ph id="ph2">&lt;xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A&gt;</ph>, se necessário) separadamente em cada thread de interface do usuário.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>Avoid deadlock.</source>
          <target state="translated">Evite deadlock.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>This is already the application's responsibility once it chooses to use synchronization, but it must also take into account WPF's participation in the synchronization, as discussed in the following paragraph.</source>
          <target state="translated">Isso é já responsabilidade do aplicativo quando ele opta por usar a sincronização, mas ele também deve levar em participação de conta do WPF em sincronização, conforme discutido no parágrafo a seguir.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>In return, WPF provides the following behavior:</source>
          <target state="translated">Em troca, WPF fornece o seguinte comportamento:</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> accesses the collection using the given synchronization mechanism.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> acessa a coleção usando o mecanismo de sincronização especificado.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> maintains a "shadow copy" of the collection for use on the UI thread.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> mantém uma "cópia de sombra" da coleção para uso no thread da interface do usuário.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source><ph id="ph1">&lt;xref:System.Windows.Data.CollectionView.CollectionChanged&gt;</ph> events are queued up as they arrive (on any thread).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Data.CollectionView.CollectionChanged&gt;</ph> eventos são enfileirados assim que elas chegam (em qualquer thread).</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>Pending events are applied to the shadow copy asynchronously on the UI thread when it has the opportunity to do so.</source>
          <target state="translated">Eventos pendentes são aplicadas a cópia de sombra de forma assíncrona no thread da interface do usuário quando ele tem a oportunidade de fazê-lo.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> won't directly use any other synchronization mechanism visible to the application.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> não usar qualquer outro mecanismo de sincronização visível para o aplicativo diretamente.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>This is WPF's way of helping to avoid deadlock (see the previous item 7).</source>
          <target state="translated">Essa é a forma do WPF de ajudar a evitar um deadlock (consulte o item anterior 7).</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>The net effect is that you can change the collection on any thread, and those changes eventually appear in the <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> when the UI thread has time to "catch up".</source>
          <target state="translated">O efeito líquido é que você pode alterar a coleção em qualquer thread, e essas alterações eventualmente aparecem no <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> quando o thread de interface do usuário tem tempo "atualizado".</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>The implementation has been tuned to throttle the rate that changes flow into the UI thread to keep background threads from saturating the UI thread and starving the response to normal user input.</source>
          <target state="translated">A implementação foi ajustada para limitar a taxa de fluxo de alterações para o thread de interface do usuário para manter o plano de fundo de threads de saturação de thread de interface do usuário e privar a resposta à entrada do usuário normal.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>The collection that needs synchronized access.</source>
          <target state="translated">A coleção que precisa de acesso sincronizado.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>The object to lock when accessing the collection.</source>
          <target state="translated">O objeto a ser bloqueado ao acessar a coleção.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>Enables a <ph id="ph1">&lt;see cref="T:System.Windows.Data.CollectionView" /&gt;</ph> object to participate in synchronized access to a collection used on multiple threads by using a simple locking mechanism.</source>
          <target state="translated">Permite que um objeto <ph id="ph1">&lt;see cref="T:System.Windows.Data.CollectionView" /&gt;</ph> participe do acesso sincronizado a uma coleção usada em vários threads usando um mecanismo de bloqueio simples.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>A WPF application can display a collection of data using an <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> or one of its subclasses (<ph id="ph2">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.DataGrid&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Controls.TreeView&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Controls.ListView&gt;</ph>, etc.).</source>
          <target state="translated">Um aplicativo WPF pode exibir um conjunto de dados usando um <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> ou uma de suas subclasses (<ph id="ph2">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.DataGrid&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Controls.TreeView&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Controls.ListView&gt;</ph>, etc.).</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>WPF channels all its access to the collection through a subclass of <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph>.</source>
          <target state="translated">WPF canais de todos os seu acesso à coleção por meio de uma subclasse de <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>Both the <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> and the <ph id="ph2">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> have affinity to the thread on which the <ph id="ph3">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> was created, meaning that using them on a different thread is forbidden and throws an exception.</source>
          <target state="translated">Tanto o <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> têm afinidade para o thread no qual o <ph id="ph3">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> foi criado, que significa que usá-las em um thread diferente é proibido e gera uma exceção.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>In effect, this restriction applies to the collection as well.</source>
          <target state="translated">Na verdade, essa restrição se aplica à coleção também.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>You may want to use the collection on multiple threads.</source>
          <target state="translated">Você talvez queira usar a coleção em vários threads.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>For example, you want to update the collection (add or remove items) on a "data-gathering" thread, while displaying the results on a "user interface" thread, so that the UI remains responsive while data-gathering is happening.</source>
          <target state="translated">Por exemplo, você deseja atualizar a coleção (Adicionar ou remover itens) em um thread de "coleta de dados", ao exibir os resultados em um thread de "interface do usuário", para que a interface do usuário permanece responsivo durante a coleta de dados está acontecendo.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>In such a situation, you are responsible for ensuring synchronized ("thread-safe") access to the collection and for guaranteeing that access from WPF (specifically from <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph>) participates in the same synchronization mechanism.</source>
          <target state="translated">Em tal situação, você é responsável por garantir o acesso de ("thread-safe") para a coleção e para garantir que o acesso do WPF sincronizado (especificamente de <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph>) participa o mesmo mecanismo de sincronização.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>By calling the <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)&gt;</ph> method, you can do this by using a simple lock mechanism.</source>
          <target state="translated">Chamando o <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)&gt;</ph> método, você pode fazer isso usando um mecanismo de bloqueio simples.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>To use a collection on multiple threads, one of which is the UI thread that owns the <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>, you must do the following:</source>
          <target state="translated">Para usar uma coleção em vários threads, um dos quais é o thread de interface do usuário que possui o <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>, você deve fazer o seguinte:</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>Instantiate an object to lock when accessing the collection.</source>
          <target state="translated">Criar uma instância de um objeto de bloqueio ao acessar a coleção.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>Synchronize all access from the application to the collection by locking that object.</source>
          <target state="translated">Sincronize todo o acesso do aplicativo para a coleção por meio do objeto de bloqueio.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)&gt;</ph> to inform WPF that you are using a simple lock mechanism.</source>
          <target state="translated">Chamar <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)&gt;</ph> para informar o WPF que você está usando um mecanismo de bloqueio simples.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>The call must occur on the UI thread.</source>
          <target state="translated">A chamada deve ocorrer no thread da interface do usuário.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>The call must occur before using the collection on a different thread or before attaching the collection to the <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>, whichever is later.</source>
          <target state="translated">A chamada deve ocorrer antes de usar a coleção em um thread diferente ou antes de anexar a coleção para o <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>, o que for mais recente.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>Ensure that a change to the collection and the notification of that change (through <ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged&gt;</ph>) are atomic; no access from other threads can intervene.</source>
          <target state="translated">Certifique-se de que uma alteração para a coleção e a notificação de alteração (por meio de <ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged&gt;</ph>) são atômicas; nenhum acesso de outros threads pode intervir.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>(This is usually free.</source>
          <target state="translated">(Isso é geralmente livre.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>For instance, <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> guarantees this, provided that all changes are protected by synchronization.)</source>
          <target state="translated">For Instance, <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> garante isso, desde que todas as alterações são protegidas por sincronização.)</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>If you call <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A&gt;</ph>, that call must also occur on the UI thread.</source>
          <target state="translated">Se você chamar <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A&gt;</ph>, que a chamada também deve ocorrer no thread da interface do usuário.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>If you want to use the same collection on multiple UI threads, you must call <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A&gt;</ph> (and <ph id="ph2">&lt;xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A&gt;</ph>, if needed) separately on each UI thread.</source>
          <target state="translated">Se você quiser usar a mesma coleção em vários threads de interface do usuário, você deve chamar <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A&gt;</ph> (e <ph id="ph2">&lt;xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A&gt;</ph>, se necessário) separadamente em cada thread de interface do usuário.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>Avoid deadlock.</source>
          <target state="translated">Evite deadlock.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>This is already the application's responsibility once it chooses to use synchronization, but it must also take into account WPF's participation in the synchronization.</source>
          <target state="translated">Isso já é responsabilidade do aplicativo quando ele opta por usar a sincronização, mas ele também deve levar em conta a participação na sincronização do WPF.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>(See more, below.)</source>
          <target state="translated">(Consulte mais informações, abaixo).</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>In return, WPF provides the following behavior:</source>
          <target state="translated">Em troca, WPF fornece o seguinte comportamento:</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> accesses the collection using the locking mechanism.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> acessa a coleção usando o mecanismo de bloqueio.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> maintains a "shadow copy" of the collection for use on the UI thread.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> mantém uma "cópia de sombra" da coleção para uso no thread da interface do usuário.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source><ph id="ph1">&lt;xref:System.Windows.Data.CollectionView.CollectionChanged&gt;</ph> events are queued up as they arrive (on any thread).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Data.CollectionView.CollectionChanged&gt;</ph> eventos são enfileirados assim que elas chegam (em qualquer thread).</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>Pending events are applied to the shadow copy asynchronously on the UI thread when it has the opportunity to do so.</source>
          <target state="translated">Eventos pendentes são aplicadas a cópia de sombra de forma assíncrona no thread da interface do usuário quando ele tem a oportunidade de fazê-lo.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> will not directly use any other synchronization mechanism visible to the application.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> não diretamente usará qualquer outro mecanismo de sincronização visível para o aplicativo.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>This is WPF's way of helping to avoid deadlock (see the previous item 7).</source>
          <target state="translated">Essa é a forma do WPF de ajudar a evitar um deadlock (consulte o item anterior 7).</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>The net effect is that you can change the collection on any thread, and those changes eventually appear in the <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> when the UI thread has time to "catch up".</source>
          <target state="translated">O efeito líquido é que você pode alterar a coleção em qualquer thread, e essas alterações eventualmente aparecem no <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> quando o thread de interface do usuário tem tempo "atualizado".</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>The implementation has been tuned to throttle the rate that changes flow into the UI thread to keep background threads from saturating the UI thread and starving the response to normal user input.</source>
          <target state="translated">A implementação foi ajustada para limitar a taxa de fluxo de alterações para o thread de interface do usuário para manter o plano de fundo de threads de saturação de thread de interface do usuário e privar a resposta à entrada do usuário normal.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>The collection that needs synchronized access.</source>
          <target state="translated">A coleção que precisa de acesso sincronizado.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>An object that is passed to the callback.</source>
          <target state="translated">Um objeto passado para o retorno de chamada.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>The callback that is invoked whenever access to the collection is required.</source>
          <target state="translated">O retorno de chamada invocado sempre que for necessário acessar a coleção.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>You can use it to ensure that the collection is accessed by one thread at a time.</source>
          <target state="translated">É possível usá-lo para garantir que a coleção seja acessada por um thread por vez.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>Enables a <ph id="ph1">&lt;see cref="T:System.Windows.Data.CollectionView" /&gt;</ph> object to participate in synchronized access to a collection used on multiple threads by using a mechanism other than a simple lock.</source>
          <target state="translated">Permite que um objeto <ph id="ph1">&lt;see cref="T:System.Windows.Data.CollectionView" /&gt;</ph> participe do acesso sincronizado a uma coleção usada em vários threads usando um mecanismo diferente de um bloqueio simples.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>A WPF application can display a collection of data using an <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> or one of its subclasses (<ph id="ph2">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.DataGrid&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Controls.TreeView&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Controls.ListView&gt;</ph>, etc.).</source>
          <target state="translated">Um aplicativo WPF pode exibir um conjunto de dados usando um <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> ou uma de suas subclasses (<ph id="ph2">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.DataGrid&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Controls.TreeView&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Controls.ListView&gt;</ph>, etc.).</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>WPF channels all its access to the collection through a subclass of <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph>.</source>
          <target state="translated">WPF canais de todos os seu acesso à coleção por meio de uma subclasse de <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>Both the <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> and the <ph id="ph2">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> have affinity to the thread on which the <ph id="ph3">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> was created, meaning that using them on a different thread is forbidden and throws an exception.</source>
          <target state="translated">Tanto o <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> têm afinidade para o thread no qual o <ph id="ph3">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> foi criado, que significa que usá-las em um thread diferente é proibido e gera uma exceção.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>In effect, this restriction applies to the collection as well.</source>
          <target state="translated">Na verdade, essa restrição se aplica à coleção também.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>You may want to use the collection on multiple threads.</source>
          <target state="translated">Você talvez queira usar a coleção em vários threads.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>For example, you want to update the collection (add or remove items) on a "data-gathering" thread, while displaying the results on a "user interface" thread, so that the UI remains responsive while data-gathering is happening.</source>
          <target state="translated">Por exemplo, você deseja atualizar a coleção (Adicionar ou remover itens) em um thread de "coleta de dados", ao exibir os resultados em um thread de "interface do usuário", para que a interface do usuário permanece responsivo durante a coleta de dados está acontecendo.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>In such a situation, you are responsible for ensuring synchronized ("thread-safe") access to the collection and for guaranteeing that access from WPF (specifically from <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph>) participates in the same synchronization mechanism.</source>
          <target state="translated">Em tal situação, você é responsável por garantir o acesso de ("thread-safe") para a coleção e para garantir que o acesso do WPF sincronizado (especificamente de <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph>) participa o mesmo mecanismo de sincronização.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>By calling the <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)&gt;</ph> method, you can do this by using a synchronization mechanism such as a semaphores, a reset event, etc.</source>
          <target state="translated">Chamando o <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)&gt;</ph> método, você pode fazer isso usando um mecanismo de sincronização como um semáforos, um evento de redefinição, etc.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>To use a collection on multiple threads, one of which is the UI thread that owns the <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>, you must do the following:</source>
          <target state="translated">Para usar uma coleção em vários threads, um dos quais é o thread de interface do usuário que possui o <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>, você deve fazer o seguinte:</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>Choose a synchronization mechanism.</source>
          <target state="translated">Escolha um mecanismo de sincronização.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>Synchronize all access from the application to the collection using that mechanism.</source>
          <target state="translated">Sincronize todo o acesso do aplicativo à coleção usando esse mecanismo.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)&gt;</ph> overload to inform WPF that you are using a mechanism other than simple locking.</source>
          <target state="translated">Chamar o <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)&gt;</ph> sobrecarga para informar o WPF que você está usando um mecanismo diferente de bloqueio simples.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>The call must occur on the UI thread.</source>
          <target state="translated">A chamada deve ocorrer no thread da interface do usuário.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>The call must occur before using the collection on a different thread or before attaching the collection to the <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>, whichever is later.</source>
          <target state="translated">A chamada deve ocorrer antes de usar a coleção em um thread diferente ou antes de anexar a coleção para o <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>, o que for mais recente.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>Ensure that a change to the collection and the notification of that change (through <ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged&gt;</ph>) are atomic; no access from other threads can intervene.</source>
          <target state="translated">Certifique-se de que uma alteração para a coleção e a notificação de alteração (por meio de <ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged&gt;</ph>) são atômicas; nenhum acesso de outros threads pode intervir.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>(This is usually free.</source>
          <target state="translated">(Isso é geralmente livre.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>For instance, <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> guarantees this, provided that all changes are protected by synchronization.)</source>
          <target state="translated">For Instance, <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> garante isso, desde que todas as alterações são protegidas por sincronização.)</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>If you call <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A&gt;</ph>, that call must also occur on the UI thread.</source>
          <target state="translated">Se você chamar <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A&gt;</ph>, que a chamada também deve ocorrer no thread da interface do usuário.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>If you want to use the same collection on multiple UI threads, you must call <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A&gt;</ph> (and <ph id="ph2">&lt;xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A&gt;</ph>, if needed) separately on each UI thread.</source>
          <target state="translated">Se você quiser usar a mesma coleção em vários threads de interface do usuário, você deve chamar <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A&gt;</ph> (e <ph id="ph2">&lt;xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A&gt;</ph>, se necessário) separadamente em cada thread de interface do usuário.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>Avoid deadlock.</source>
          <target state="translated">Evite deadlock.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>This is already the application's responsibility once it chooses to use synchronization, but it must also take into account WPF's participation in the synchronization.</source>
          <target state="translated">Isso já é responsabilidade do aplicativo quando ele opta por usar a sincronização, mas ele também deve levar em conta a participação na sincronização do WPF.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>(See more, below.)</source>
          <target state="translated">(Consulte mais informações, abaixo).</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>In return, WPF provides the following behavior:</source>
          <target state="translated">Em troca, WPF fornece o seguinte comportamento:</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> accesses the collection by calling the registered <ph id="ph2">&lt;xref:System.Windows.Data.CollectionSynchronizationCallback&gt;</ph> with the following arguments:</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> acessa a coleção, chamando registrado <ph id="ph2">&lt;xref:System.Windows.Data.CollectionSynchronizationCallback&gt;</ph> com os seguintes argumentos:</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source><ph id="ph1">`collection`</ph>: the collection of interest.</source>
          <target state="translated"><ph id="ph1">`collection`</ph>: a coleção de interesse.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source><ph id="ph1">`context`</ph>: the registered context object.</source>
          <target state="translated"><ph id="ph1">`context`</ph>: o objeto de contexto registrado.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source><ph id="ph1">`accessMethod`</ph>: a delegate that performs the actual access.</source>
          <target state="translated"><ph id="ph1">`accessMethod`</ph>: um delegado que executa o acesso real.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source><ph id="ph1">`writeAccess`</ph>: <ph id="ph2">`true`</ph> if the delegate will modify the collection; <ph id="ph3">`false`</ph> otherwise.</source>
          <target state="translated"><ph id="ph1">`writeAccess`</ph>: <ph id="ph2">`true`</ph> se o representante modificará a coleção; <ph id="ph3">`false`</ph> caso contrário.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>Your <ph id="ph1">&lt;xref:System.Windows.Data.CollectionSynchronizationCallback&gt;</ph> should establish synchronization on the collection (using the <ph id="ph2">`context`</ph> object and the <ph id="ph3">`writeAccess`</ph> value, as appropriate), call the <ph id="ph4">`accessMethod`</ph>, then release synchronization.</source>
          <target state="translated">Seu <ph id="ph1">&lt;xref:System.Windows.Data.CollectionSynchronizationCallback&gt;</ph> deve estabelecer a sincronização na coleção de (usando o <ph id="ph2">`context`</ph> objeto e o <ph id="ph3">`writeAccess`</ph> valor, conforme apropriado), chamar o <ph id="ph4">`accessMethod`</ph>, em seguida, solte a sincronização.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> maintains a "shadow copy" of the collection for use on the UI thread.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> mantém uma "cópia de sombra" da coleção para uso no thread da interface do usuário.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source><ph id="ph1">&lt;xref:System.Windows.Data.CollectionView.CollectionChanged&gt;</ph> events are queued up as they arrive (on any thread).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Data.CollectionView.CollectionChanged&gt;</ph> eventos são enfileirados assim que elas chegam (em qualquer thread).</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>Pending events are applied to the shadow copy asynchronously on the UI thread when it has the opportunity to do so.</source>
          <target state="translated">Eventos pendentes são aplicadas a cópia de sombra de forma assíncrona no thread da interface do usuário quando ele tem a oportunidade de fazê-lo.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> will not directly use any other synchronization mechanism visible to the application.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> não diretamente usará qualquer outro mecanismo de sincronização visível para o aplicativo.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>This is WPF's way of helping to avoid deadlock (see the previous item 7).</source>
          <target state="translated">Essa é a forma do WPF de ajudar a evitar um deadlock (consulte o item anterior 7).</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>The net effect is that you can change the collection on any thread, and those changes eventually appear in the <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> when the UI thread has time to "catch up".</source>
          <target state="translated">O efeito líquido é que você pode alterar a coleção em qualquer thread, e essas alterações eventualmente aparecem no <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> quando o thread de interface do usuário tem tempo "atualizado".</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>The implementation has been tuned to throttle the rate that changes flow into the UI thread to keep background threads from saturating the UI thread and starving the response to normal user input.</source>
          <target state="translated">A implementação foi ajustada para limitar a taxa de fluxo de alterações para o thread de interface do usuário para manter o plano de fundo de threads de saturação de thread de interface do usuário e privar a resposta à entrada do usuário normal.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>The <ph id="ph1">`context`</ph> parameter is an arbitrary object that is passed to the <ph id="ph2">`callback`</ph>.</source>
          <target state="translated">O <ph id="ph1">`context`</ph> parâmetro é um objeto arbitrário que é passado para o <ph id="ph2">`callback`</ph>.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>You can use it to determine the synchronization mechanism used to control access to <ph id="ph1">`collection`</ph>.</source>
          <target state="translated">Você pode usá-lo para determinar o mecanismo de sincronização usado para controlar o acesso a <ph id="ph1">`collection`</ph>.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source><ph id="ph1">`Context`</ph> can be <ph id="ph2">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`Context`</ph> pode ser <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The object where <bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept> is.</source>
          <target state="translated">O objeto em que <bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept> está.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The binding target property from which to retrieve the binding.</source>
          <target state="translated">A propriedade de destino de associação da qual a associação será recuperada.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>Retrieves the <ph id="ph1">&lt;see cref="T:System.Windows.Data.Binding" /&gt;</ph> object that is set on the specified property.</source>
          <target state="translated">Recupera o objeto <ph id="ph1">&lt;see cref="T:System.Windows.Data.Binding" /&gt;</ph> que é definido na propriedade especificada.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Data.Binding" /&gt;</ph> object set on the given property or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if no <ph id="ph3">&lt;see cref="T:System.Windows.Data.Binding" /&gt;</ph> object has been set.</source>
          <target state="translated">O objeto <ph id="ph1">&lt;see cref="T:System.Windows.Data.Binding" /&gt;</ph> definido na propriedade determinada ou em <ph id="ph2">&lt;see langword="null" /&gt;</ph> se nenhum objeto <ph id="ph3">&lt;see cref="T:System.Windows.Data.Binding" /&gt;</ph> tiver sido definido.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;paramref name="target" /&gt;</ph> and <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> parameters cannot be null.</source>
          <target state="translated">Os parâmetros <ph id="ph1">&lt;paramref name="target" /&gt;</ph> e <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> não podem ser nulos.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The object where <bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept> is.</source>
          <target state="translated">O objeto em que <bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept> está.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The binding target property from which to retrieve the <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingBase" /&gt;</ph> object.</source>
          <target state="translated">A propriedade de destino de associação da qual o objeto <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingBase" /&gt;</ph> será recuperado.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>Retrieves the <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingBase" /&gt;</ph> object that is set on the specified property.</source>
          <target state="translated">Recupera o objeto <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingBase" /&gt;</ph> que é definido na propriedade especificada.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingBase" /&gt;</ph> object that is set on the given property or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if no binding object has been set.</source>
          <target state="translated">O objeto <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingBase" /&gt;</ph> definido na propriedade fornecida ou <ph id="ph2">&lt;see langword="null" /&gt;</ph> se nenhum objeto de associação tiver sido definido.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase&gt;</ph> class is the common base class for the <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Data.PriorityBinding&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Data.MultiBinding&gt;</ph> classes.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase&gt;</ph> classe é a classe base comum para o <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Data.PriorityBinding&gt;</ph>, e <ph id="ph4">&lt;xref:System.Windows.Data.MultiBinding&gt;</ph> classes.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.GetBinding%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Data.BindingOperations.GetPriorityBinding%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Data.BindingOperations.GetMultiBinding%2A&gt;</ph> methods if you know in advance the type of binding that is set on the property.</source>
          <target state="translated">Você pode usar o <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.GetBinding%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Data.BindingOperations.GetPriorityBinding%2A&gt;</ph>, e <ph id="ph3">&lt;xref:System.Windows.Data.BindingOperations.GetMultiBinding%2A&gt;</ph> métodos se você souber com antecedência o tipo de associação que é definido na propriedade.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;paramref name="target" /&gt;</ph> and <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> parameters cannot be <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Os parâmetros <ph id="ph1">&lt;paramref name="target" /&gt;</ph> e <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> não podem ser <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The binding target object where <bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept> is.</source>
          <target state="translated">O objeto de destino da associação em que <bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept> está.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The binding target property from which to retrieve the <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpression" /&gt;</ph> object.</source>
          <target state="translated">A propriedade de destino de associação da qual o objeto <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpression" /&gt;</ph> será recuperado.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpression" /&gt;</ph> object associated with the specified binding target property on the specified object.</source>
          <target state="translated">Retorna o objeto <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpression" /&gt;</ph> associado à propriedade de destino de associação especificada no objeto determinado.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpression" /&gt;</ph> object associated with the given property or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if none exists.</source>
          <target state="translated">O objeto <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpression" /&gt;</ph> associado à propriedade determinada ou <ph id="ph2">&lt;see langword="null" /&gt;</ph> se não existir nenhuma.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>If a <ph id="ph1">&lt;see cref="T:System.Windows.Data.PriorityBindingExpression" /&gt;</ph> object is set on the property, the <ph id="ph2">&lt;see cref="P:System.Windows.Data.PriorityBindingExpression.ActiveBindingExpression" /&gt;</ph> is returned.</source>
          <target state="translated">Se um objeto <ph id="ph1">&lt;see cref="T:System.Windows.Data.PriorityBindingExpression" /&gt;</ph> for definido na propriedade, o <ph id="ph2">&lt;see cref="P:System.Windows.Data.PriorityBindingExpression.ActiveBindingExpression" /&gt;</ph> será retornado.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.BindingExpression&gt;</ph> object maintains the connection between the binding source and the binding target.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Data.BindingExpression&gt;</ph> objeto mantém a conexão entre a fonte de associação e o destino da associação.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>You can obtain the <ph id="ph1">&lt;xref:System.Windows.Data.BindingExpression&gt;</ph> object by calling this static method or by calling the <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.GetBindingExpression%2A&gt;</ph> method on a data-bound <ph id="ph3">&lt;xref:System.Windows.FrameworkElement&gt;</ph> or <ph id="ph4">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> object.</source>
          <target state="translated">Você pode obter o <ph id="ph1">&lt;xref:System.Windows.Data.BindingExpression&gt;</ph> objeto ao chamar este método estático ou chamando o <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.GetBindingExpression%2A&gt;</ph> método em uma associação de dados <ph id="ph3">&lt;xref:System.Windows.FrameworkElement&gt;</ph> ou <ph id="ph4">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The following example shows the implementation of a <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</ph> event handler that uses the <ph id="ph2">&lt;xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A&gt;</ph> method to obtain the <ph id="ph3">&lt;xref:System.Windows.Data.BindingExpression&gt;</ph> and then calls the <ph id="ph4">&lt;xref:System.Windows.Data.BindingExpression.DataItem%2A&gt;</ph> property to access the binding source object.</source>
          <target state="translated">O exemplo a seguir mostra a implementação de um <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</ph> manipulador de eventos que usa o <ph id="ph2">&lt;xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A&gt;</ph> método para obter o <ph id="ph3">&lt;xref:System.Windows.Data.BindingExpression&gt;</ph> e, em seguida, chama o <ph id="ph4">&lt;xref:System.Windows.Data.BindingExpression.DataItem%2A&gt;</ph> propriedade para acessar o objeto de origem de associação.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph><ph id="ph2">`SavingsText`</ph> is the binding target object and <ph id="ph3">&lt;xref:System.Windows.Controls.TextBlock.Text%2A&gt;</ph> is the binding target property.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> <ph id="ph2">`SavingsText`</ph> é o objeto de destino de associação e <ph id="ph3">&lt;xref:System.Windows.Controls.TextBlock.Text%2A&gt;</ph> é a propriedade de destino da associação.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;paramref name="target" /&gt;</ph> and <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> parameters cannot be <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Os parâmetros <ph id="ph1">&lt;paramref name="target" /&gt;</ph> e <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> não podem ser <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The object where <bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept> is.</source>
          <target state="translated">O objeto em que <bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept> está.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The binding target property from which to retrieve the <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph> object.</source>
          <target state="translated">A propriedade de destino de associação da qual o objeto <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph> será recuperado.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>Retrieves the <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph> object that is set on the specified property.</source>
          <target state="translated">Recupera o objeto <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph> que é definido na propriedade especificada.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph> object that is set on the given property or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if no binding object has been set.</source>
          <target state="translated">O objeto <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph> definido na propriedade fornecida ou <ph id="ph2">&lt;see langword="null" /&gt;</ph> se nenhum objeto de associação tiver sido definido.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.BindingExpressionBase&gt;</ph> class is the common base class for the <ph id="ph2">&lt;xref:System.Windows.Data.BindingExpression&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Data.PriorityBindingExpression&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Data.MultiBindingExpression&gt;</ph> classes.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Data.BindingExpressionBase&gt;</ph> classe é a classe base comum para o <ph id="ph2">&lt;xref:System.Windows.Data.BindingExpression&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Data.PriorityBindingExpression&gt;</ph>, e <ph id="ph4">&lt;xref:System.Windows.Data.MultiBindingExpression&gt;</ph> classes.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Data.BindingOperations.GetPriorityBindingExpression%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Data.BindingOperations.GetMultiBindingExpression%2A&gt;</ph> methods if you know in advance type of binding that is set on the property.</source>
          <target state="translated">Você pode usar o <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Data.BindingOperations.GetPriorityBindingExpression%2A&gt;</ph>, e <ph id="ph3">&lt;xref:System.Windows.Data.BindingOperations.GetMultiBindingExpression%2A&gt;</ph> métodos se você souber com antecedência o tipo de associação que é definido na propriedade.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;paramref name="target" /&gt;</ph> and <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> parameters cannot be null.</source>
          <target state="translated">Os parâmetros <ph id="ph1">&lt;paramref name="target" /&gt;</ph> e <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> não podem ser nulos.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetMultiBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The object where <bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept> is.</source>
          <target state="translated">O objeto em que <bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept> está.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetMultiBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The binding target property from which to retrieve the binding.</source>
          <target state="translated">A propriedade de destino de associação da qual a associação será recuperada.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetMultiBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>Retrieves the <ph id="ph1">&lt;see cref="T:System.Windows.Data.MultiBinding" /&gt;</ph> object that is set on the specified property.</source>
          <target state="translated">Recupera o objeto <ph id="ph1">&lt;see cref="T:System.Windows.Data.MultiBinding" /&gt;</ph> que é definido na propriedade especificada.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetMultiBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Data.MultiBinding" /&gt;</ph> object set on the given property or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if no <ph id="ph3">&lt;see cref="T:System.Windows.Data.MultiBinding" /&gt;</ph> object has been set.</source>
          <target state="translated">O objeto <ph id="ph1">&lt;see cref="T:System.Windows.Data.MultiBinding" /&gt;</ph> definido na propriedade determinada ou em <ph id="ph2">&lt;see langword="null" /&gt;</ph> se nenhum objeto <ph id="ph3">&lt;see cref="T:System.Windows.Data.MultiBinding" /&gt;</ph> tiver sido definido.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetMultiBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;paramref name="target" /&gt;</ph> and <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> parameters cannot be null.</source>
          <target state="translated">Os parâmetros <ph id="ph1">&lt;paramref name="target" /&gt;</ph> e <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> não podem ser nulos.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetMultiBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The binding target object where <bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept> is.</source>
          <target state="translated">O objeto de destino da associação em que <bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept> está.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetMultiBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The binding target property from which to retrieve the <ph id="ph1">&lt;see cref="T:System.Windows.Data.MultiBindingExpression" /&gt;</ph> object.</source>
          <target state="translated">A propriedade de destino de associação da qual o objeto <ph id="ph1">&lt;see cref="T:System.Windows.Data.MultiBindingExpression" /&gt;</ph> será recuperado.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetMultiBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.Windows.Data.MultiBindingExpression" /&gt;</ph> object associated with the specified binding target property on the specified object.</source>
          <target state="translated">Retorna o objeto <ph id="ph1">&lt;see cref="T:System.Windows.Data.MultiBindingExpression" /&gt;</ph> associado à propriedade de destino de associação especificada no objeto determinado.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetMultiBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Data.MultiBindingExpression" /&gt;</ph> object associated with the given property or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if none exists.</source>
          <target state="translated">O objeto <ph id="ph1">&lt;see cref="T:System.Windows.Data.MultiBindingExpression" /&gt;</ph> associado à propriedade determinada ou <ph id="ph2">&lt;see langword="null" /&gt;</ph> se não existir nenhuma.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.GetMultiBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.MultiBindingExpression&gt;</ph> object associated with the given property or <ph id="ph2">`null`</ph> if none exists.</source>
          <target state="translated">O objeto <ph id="ph1">&lt;xref:System.Windows.Data.MultiBindingExpression&gt;</ph> associado à propriedade determinada ou <ph id="ph2">`null`</ph> se não existir nenhuma.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetMultiBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;paramref name="target" /&gt;</ph> and <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> parameters cannot be <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Os parâmetros <ph id="ph1">&lt;paramref name="target" /&gt;</ph> e <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> não podem ser <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetPriorityBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The object where <bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept> is.</source>
          <target state="translated">O objeto em que <bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept> está.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetPriorityBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The binding target property from which to retrieve the binding.</source>
          <target state="translated">A propriedade de destino de associação da qual a associação será recuperada.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetPriorityBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>Retrieves the <ph id="ph1">&lt;see cref="T:System.Windows.Data.PriorityBinding" /&gt;</ph> object that is set on the specified property.</source>
          <target state="translated">Recupera o objeto <ph id="ph1">&lt;see cref="T:System.Windows.Data.PriorityBinding" /&gt;</ph> que é definido na propriedade especificada.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetPriorityBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Data.PriorityBinding" /&gt;</ph> object set on the given property or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if no <ph id="ph3">&lt;see cref="T:System.Windows.Data.PriorityBinding" /&gt;</ph> object has been set.</source>
          <target state="translated">O objeto <ph id="ph1">&lt;see cref="T:System.Windows.Data.PriorityBinding" /&gt;</ph> definido na propriedade determinada ou em <ph id="ph2">&lt;see langword="null" /&gt;</ph> se nenhum objeto <ph id="ph3">&lt;see cref="T:System.Windows.Data.PriorityBinding" /&gt;</ph> tiver sido definido.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetPriorityBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;paramref name="target" /&gt;</ph> and <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> parameters cannot be null.</source>
          <target state="translated">Os parâmetros <ph id="ph1">&lt;paramref name="target" /&gt;</ph> e <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> não podem ser nulos.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetPriorityBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The binding target object where <bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept> is.</source>
          <target state="translated">O objeto de destino da associação em que <bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept> está.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetPriorityBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The binding target property from which to retrieve the <ph id="ph1">&lt;see cref="T:System.Windows.Data.PriorityBindingExpression" /&gt;</ph> object.</source>
          <target state="translated">A propriedade de destino de associação da qual o objeto <ph id="ph1">&lt;see cref="T:System.Windows.Data.PriorityBindingExpression" /&gt;</ph> será recuperado.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetPriorityBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.Windows.Data.PriorityBindingExpression" /&gt;</ph> object associated with the specified binding target property on the specified object.</source>
          <target state="translated">Retorna o objeto <ph id="ph1">&lt;see cref="T:System.Windows.Data.PriorityBindingExpression" /&gt;</ph> associado à propriedade de destino de associação especificada no objeto determinado.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetPriorityBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Data.PriorityBindingExpression" /&gt;</ph> object associated with the given property or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if none exists.</source>
          <target state="translated">O objeto <ph id="ph1">&lt;see cref="T:System.Windows.Data.PriorityBindingExpression" /&gt;</ph> associado à propriedade determinada ou <ph id="ph2">&lt;see langword="null" /&gt;</ph> se não existir nenhuma.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetPriorityBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;paramref name="target" /&gt;</ph> and <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> parameters cannot be <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Os parâmetros <ph id="ph1">&lt;paramref name="target" /&gt;</ph> e <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> não podem ser <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups(System.Windows.DependencyObject)">
          <source>The root <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> to get binding groups for.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> raiz para o qual obter grupos de associação.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups(System.Windows.DependencyObject)">
          <source>This method returns <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph> objects that are associated with this element or its descendant elements.</source>
          <target state="translated">Este método retorna os objetos <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph> associados a esse elemento ou a seus elementos descendentes.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups(System.Windows.DependencyObject)">
          <source>Gets all <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph> objects that have invalid values or target values have not been updated the source.</source>
          <target state="translated">Obtém todos os objetos <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph> que têm valores inválidos ou cujos valores de destino não atualizaram a origem.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups(System.Windows.DependencyObject)">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph> objects that are associated with the specified element and have invalid values or target values have not been updated the source.</source>
          <target state="translated">Uma coleção de objetos <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph> associados ao elemento especificado e que têm valores inválidos ou cujos valores de destino não atualizaram a origem.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups(System.Windows.DependencyObject)">
          <source>If <ph id="ph1">`root`</ph> is <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups%2A&gt;</ph> returns all <ph id="ph4">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> objects that are invalid or have not been updated.</source>
          <target state="translated">Se <ph id="ph1">`root`</ph> é <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups%2A&gt;</ph> retorna todos os <ph id="ph4">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> objetos que são inválidos ou não foram atualizados.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindings(System.Windows.DependencyObject)">
          <source>The root <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> to get binding groups for.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> raiz para o qual obter grupos de associação.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindings(System.Windows.DependencyObject)">
          <source>This method returns <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph> objects that are associated with this element or its descendant elements.</source>
          <target state="translated">Este método retorna os objetos <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph> associados a esse elemento ou a seus elementos descendentes.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindings(System.Windows.DependencyObject)">
          <source>Gets all <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph> objects that have invalid values or target values have not been updated the source.</source>
          <target state="translated">Obtém todos os objetos <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph> que têm valores inválidos ou cujos valores de destino não atualizaram a origem.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindings(System.Windows.DependencyObject)">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph> objects that are associated with the specified element and have invalid values or target values have not been updated the source.</source>
          <target state="translated">Uma coleção de objetos <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph> associados ao elemento especificado e que têm valores inválidos ou cujos valores de destino não atualizaram a origem.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindings(System.Windows.DependencyObject)">
          <source>If <ph id="ph1">`root`</ph> is <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Windows.Data.BindingOperations.GetSourceUpdatingBindings%2A&gt;</ph> returns all <ph id="ph4">&lt;xref:System.Windows.Data.BindingExpressionBase&gt;</ph> objects that are invalid or have not been updated.</source>
          <target state="translated">Se <ph id="ph1">`root`</ph> é <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Windows.Data.BindingOperations.GetSourceUpdatingBindings%2A&gt;</ph> retorna todos os <ph id="ph4">&lt;xref:System.Windows.Data.BindingExpressionBase&gt;</ph> objetos que são inválidos ou não foram atualizados.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.IsDataBound(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The object where <bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept> is.</source>
          <target state="translated">O objeto em que <bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept> está.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.IsDataBound(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The dependency property to check.</source>
          <target state="translated">A propriedade de dependência a ser verificada.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.IsDataBound(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>Returns a value that indicates whether the specified property is currently data-bound.</source>
          <target state="translated">Retorna um valor que indica se a propriedade especificada está associada a dados no momento.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.IsDataBound(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified property is data-bound; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se a propriedade especificada estiver associada a dados; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.IsDataBound(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>If <ph id="ph1">&lt;paramref name="target" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Se <ph id="ph1">&lt;paramref name="target" /&gt;</ph> for <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
          <source>The binding target of the binding.</source>
          <target state="translated">O destino da associação.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
          <source>The target property of the binding.</source>
          <target state="translated">A propriedade de destino da associação.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingBase" /&gt;</ph> object that describes the binding.</source>
          <target state="translated">O objeto <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingBase" /&gt;</ph> que descreve a associação.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
          <source>Creates and associates a new instance of <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph> with the specified binding target property.</source>
          <target state="translated">Cria e associa uma nova instância de <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph> com a propriedade de destino da associação especificada.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
          <source>The instance of <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph> created for and associated with the specified property.</source>
          <target state="translated">A instância do <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph> associado à propriedade especificada e criado para ela.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph> class is the base class of <ph id="ph2">&lt;see cref="T:System.Windows.Data.BindingExpression" /&gt;</ph>, <ph id="ph3">&lt;see cref="T:System.Windows.Data.MultiBindingExpression" /&gt;</ph>, and <ph id="ph4">&lt;see cref="T:System.Windows.Data.PriorityBindingExpression" /&gt;</ph>.</source>
          <target state="translated">A classe <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph> é a classe base de <ph id="ph2">&lt;see cref="T:System.Windows.Data.BindingExpression" /&gt;</ph>, <ph id="ph3">&lt;see cref="T:System.Windows.Data.MultiBindingExpression" /&gt;</ph> e <ph id="ph4">&lt;see cref="T:System.Windows.Data.PriorityBindingExpression" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
          <source>This method creates a new instance of a <ph id="ph1">&lt;xref:System.Windows.Data.BindingExpressionBase&gt;</ph> and associates the instance with the given dependency property of the given object.</source>
          <target state="translated">Esse método cria uma nova instância de um <ph id="ph1">&lt;xref:System.Windows.Data.BindingExpressionBase&gt;</ph> e associa a instância com a propriedade de dependência do objeto especificado.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
          <source>This method is the way to attach a binding to an arbitrary <ph id="ph1">&lt;xref:System.Windows.DependencyObject&gt;</ph> that may not expose its own SetBinding method.</source>
          <target state="translated">Esse método é a maneira de anexar uma associação a um arbitrário <ph id="ph1">&lt;xref:System.Windows.DependencyObject&gt;</ph> que não pode expor seu próprio método SetBinding.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
          <source>The following example shows how to use this method to set a binding.</source>
          <target state="translated">O exemplo a seguir mostra como usar esse método para definir uma associação.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
          <source>In this example, <ph id="ph1">`myNewBindDef`</ph> is a <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph> object that describes the binding.</source>
          <target state="translated">Neste exemplo, <ph id="ph1">`myNewBindDef`</ph> é um <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph> objeto que descreve a associação.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
          <source>The binding target is <ph id="ph1">`myDateText`</ph>, an instance of the <ph id="ph2">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> class.</source>
          <target state="translated">O destino de associação é <ph id="ph1">`myDateText`</ph>, uma instância do <ph id="ph2">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
          <source>The <ph id="ph1">&lt;paramref name="binding" /&gt;</ph> parameter cannot be <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O parâmetro <ph id="ph1">&lt;paramref name="binding" /&gt;</ph> não pode ser <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>