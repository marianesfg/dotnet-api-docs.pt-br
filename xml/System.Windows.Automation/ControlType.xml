<Type Name="ControlType" FullName="System.Windows.Automation.ControlType">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="471c758568b4347d091cd56c9f37e8bf06f39201" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46667388" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ControlType : System.Windows.Automation.AutomationIdentifier" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ControlType extends System.Windows.Automation.AutomationIdentifier" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.ControlType" />
  <TypeSignature Language="VB.NET" Value="Public Class ControlType&#xA;Inherits AutomationIdentifier" />
  <TypeSignature Language="C++ CLI" Value="public ref class ControlType : System::Windows::Automation::AutomationIdentifier" />
  <TypeSignature Language="F#" Value="type ControlType = class&#xA;    inherit AutomationIdentifier" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationTypes</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Automation.AutomationIdentifier</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Identifica o tipo de um controle de interface do usuário.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.ControlType> herda de <xref:System.Windows.Automation.AutomationIdentifier> e é usado para identificar o tipo de um controle representado por um <xref:System.Windows.Automation.AutomationElement>. O tipo de controle é determinado pelo desenvolvedor do provedor de automação de interface do usuário.  
  
 Essa classe contém campos estáticos, que também são <xref:System.Windows.Automation.ControlType> objetos, para identificar os tipos padrão de controles. Também há um <xref:System.Windows.Automation.ControlType.Custom> tipo para controles que não correspondem a um dos tipos definidos.  
  
 O único caso em que o tipo de controle do controle pode mudar em tempo de execução é onde o controle suporta <xref:System.Windows.Automation.MultipleViewPattern>. Um exemplo é o [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] lista modo de exibição, que pode ser um <xref:System.Windows.Automation.ControlType.DataGrid> ou <xref:System.Windows.Automation.ControlType.List>, dependendo do modo de exibição atual.  
  
 Tipos de controle não têm uma equivalência individual para padrões de controle. Um controle pode ser de um único tipo, mas ele pode dar suporte a vários padrões ou não há padrões, dependendo da sua funcionalidade específica.  
  
 Para obter informações detalhadas sobre os vários tipos de controle, consulte [UI Automation Control Types](~/docs/framework/ui-automation/ui-automation-control-types.md).  
  
 ]]></format>
    </remarks>
    <related type="Article" href="http://msdn.microsoft.com/library/75159ef8-bd43-4d13-acb7-1f1fe9253160">Visão Geral dos Tipos de Controle de Automação de Interface do Usuário</related>
  </Docs>
  <Members>
    <Member MemberName="Button">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType Button;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType Button" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.Button" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Button As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ Button;" />
      <MemberSignature Language="F#" Value=" staticval mutable Button : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.Button" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica um controle de botão.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Botões de executam uma única ação quando clicado.  
  
 Um botão pode ser usado como um controle autônomo ou como um subcontrole em outro tipo de controle. Por exemplo, a seta suspensa em um controle de caixa de combinação é um botão. Quando usado como um subcontrole, um botão está no modo de exibição de controle do [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] árvore (não no modo de conteúdo).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/057c983a-da83-4c50-86c7-26fe381076a6">Suporte de Automação de Interface de Usuário para o Tipo de Controle Button</related>
      </Docs>
    </Member>
    <Member MemberName="Calendar">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType Calendar;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType Calendar" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.Calendar" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Calendar As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ Calendar;" />
      <MemberSignature Language="F#" Value=" staticval mutable Calendar : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.Calendar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica um controle de calendário, como um seletor de data.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/e91a7393-a7f9-4838-a1a6-857438b24bc9">Suporte de automação de interface de usuário para o Tipo de Controle Calendário</related>
      </Docs>
    </Member>
    <Member MemberName="CheckBox">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType CheckBox;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType CheckBox" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.CheckBox" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CheckBox As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ CheckBox;" />
      <MemberSignature Language="F#" Value=" staticval mutable CheckBox : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.CheckBox" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica um controle de caixa de seleção.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Uma caixa de seleção pode ser usada como um controle autônomo ou como um subcontrole em outro tipo de controle.  Por exemplo, uma caixa de seleção no início de uma linha em um controle de grade que é usado para selecionar a linha (usada para manipular o conteúdo) é exibida no modo de exibição de controle, mas não na exibição de conteúdo. No entanto, uma caixa de seleção rotulada em um formulário que representa os dados é os modos de exibição de conteúdo e controle.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/9c2a0e70-3a39-4ba9-96ea-a7fe531fae9f">Suporte de automação de interface de usuário para o tipo de controle CheckBox</related>
      </Docs>
    </Member>
    <Member MemberName="ComboBox">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType ComboBox;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType ComboBox" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.ComboBox" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ComboBox As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ ComboBox;" />
      <MemberSignature Language="F#" Value=" staticval mutable ComboBox : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.ComboBox" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica um controle de caixa de combinação.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Há duas variações de controles de caixa de combinação. Uma caixa de combinação simples apresenta uma lista que um usuário pode selecionar. Uma caixa de combinação editável apresenta uma lista de opções e também tem uma área de texto editável em que um usuário pode digitar em uma opção em vez ficar limitado a selecionar entre as opções na lista.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/bb321126-4770-41da-983a-67b7b89d45dd">Suporte de automação de interface de usuário para o tipo de controle ComboBox</related>
      </Docs>
    </Member>
    <Member MemberName="Custom">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType Custom;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType Custom" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.Custom" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Custom As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ Custom;" />
      <MemberSignature Language="F#" Value=" staticval mutable Custom : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.Custom" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica um controle que não é um dos tipos de controle definidos.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Automation.ControlType.Custom> tipo de controle indica um controle que não está identificado como um dos tipos predefinidos de controle (como <xref:System.Windows.Automation.ControlType.Button> ou <xref:System.Windows.Automation.ControlType.Calendar>).  
  
 Os desenvolvedores de controle devem verificar os outros tipos de controle antes de designar o seu controle como um <xref:System.Windows.Automation.ControlType.Custom> controlar o tipo para certificar-se de que seu controle não fornece a mesma funcionalidade que um dos tipos de controle definidos.  
  
 Um <xref:System.Windows.Automation.ControlType.Custom> tipo de controle requer trabalho adicional para o provedor a implementar [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]. Além disso, os produtos de cliente de automação de interface do usuário não poderá prever a estrutura de controle, interação do teclado e padrões de controle possíveis com base no tipo de controle do controle.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataGrid">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType DataGrid;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType DataGrid" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.DataGrid" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DataGrid As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ DataGrid;" />
      <MemberSignature Language="F#" Value=" staticval mutable DataGrid : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.DataGrid" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica um controle de grade de dados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando as células contêm somente texto, o tipo de controle deve ser <xref:System.Windows.Automation.ControlType.Table>.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/a3db4a3f-feb5-4e5f-9b42-aae7fa816e8a">Suporte de automação de interface de usuário para o tipo de controle DataGrid</related>
      </Docs>
    </Member>
    <Member MemberName="DataItem">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType DataItem;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType DataItem" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.DataItem" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DataItem As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ DataItem;" />
      <MemberSignature Language="F#" Value=" staticval mutable DataItem : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.DataItem" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica um controle de item de dados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um <xref:System.Windows.Automation.ControlType.DataItem> é um item complexo que pode conter muitos outros controles.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/181708fd-2595-4c43-9abd-75811627d64c">Suporte de automação de interface de usuário para o tipo de controle DataItem</related>
      </Docs>
    </Member>
    <Member MemberName="Document">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType Document;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType Document" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.Document" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Document As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ Document;" />
      <MemberSignature Language="F#" Value=" staticval mutable Document : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.Document" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica um controle de documento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um documento contém o conteúdo de texto de mais de uma linha.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/a79d594b-1ca0-4543-8dac-afd2c645201d">Suporte de automação de interface de usuário para o Tipo de Controle Document</related>
      </Docs>
    </Member>
    <Member MemberName="Edit">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType Edit;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType Edit" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.Edit" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Edit As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ Edit;" />
      <MemberSignature Language="F#" Value=" staticval mutable Edit : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.Edit" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica um controle de edição, como uma caixa de texto.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um <xref:System.Windows.Automation.ControlType.Edit> controle pode ser usado como um controle autônomo ou como um subcontrole em outro tipo de controle.  Por exemplo, a área em que um usuário pode digitar um valor em um controle de caixa de combinação é uma <xref:System.Windows.Automation.ControlType.Edit> controle, e nesse caso, o controle não faz parte da exibição de conteúdo.  
  
 <xref:System.Windows.Automation.ControlType.Edit> controles também podem representar controles que contêm as senhas. O <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsPassword%2A> propriedade permite que os produtos, como leitores de tela para saber se é revelar o conteúdo.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/6db9d231-c0a0-4e17-910e-ac80357f774f">Suporte de automação de interface de usuário para o Tipo de Controle Edit</related>
      </Docs>
    </Member>
    <Member MemberName="GetNeverSupportedPatterns">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationPattern[] GetNeverSupportedPatterns ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationPattern[] GetNeverSupportedPatterns() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.ControlType.GetNeverSupportedPatterns" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNeverSupportedPatterns () As AutomationPattern()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Windows::Automation::AutomationPattern ^&gt; ^ GetNeverSupportedPatterns();" />
      <MemberSignature Language="F#" Value="member this.GetNeverSupportedPatterns : unit -&gt; System.Windows.Automation.AutomationPattern[]" Usage="controlType.GetNeverSupportedPatterns " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationPattern[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera os identificadores de padrão que não são compatíveis com o tipo de controle.</summary>
        <returns>Uma matriz de identificadores de padrão [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)].</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método é útil para clientes de automação de interface do usuário, como estruturas de teste para uma implementação de provedor que precisa localizar todos os padrões de controle que não são permitidos neste tipo de controle.  
  
   
  
## Examples  
 A exemplo a seguir chama <xref:System.Windows.Automation.ControlType.GetNeverSupportedPatterns%2A> em todos os tipos de <xref:System.Windows.Automation.ControlType> contido como um campo estático no <xref:System.Windows.Automation.ControlType> classe.  
  
 [!code-csharp[UIAControlTypePatterns_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAControlTypePatterns_snip/CSharp/GetPatternsForm.cs#101)]
 [!code-vb[UIAControlTypePatterns_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAControlTypePatterns_snip/visualbasic/getpatternsform.vb#101)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRequiredPatternSets">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationPattern[][] GetRequiredPatternSets ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationPattern[][] GetRequiredPatternSets() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.ControlType.GetRequiredPatternSets" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRequiredPatternSets () As AutomationPattern()()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;cli::array &lt;System::Windows::Automation::AutomationPattern ^&gt; ^&gt; ^ GetRequiredPatternSets();" />
      <MemberSignature Language="F#" Value="member this.GetRequiredPatternSets : unit -&gt; System.Windows.Automation.AutomationPattern[][]" Usage="controlType.GetRequiredPatternSets " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationPattern[][]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera uma matriz de conjuntos de padrões necessários.</summary>
        <returns>Uma matriz de conjuntos de padrões necessários.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cada elemento da matriz contém uma matriz de padrões, e cada elemento que tem esse tipo de controle deve oferecer suporte a pelo menos um desses conjuntos.  
  
 Esse método é útil para clientes de automação de interface do usuário que precisam localizar todos os padrões possíveis, como testes de estruturas para uma implementação de provedor.  
  
   
  
## Examples  
 A exemplo a seguir chama <xref:System.Windows.Automation.ControlType.GetRequiredPatternSets%2A> em todos os tipos de <xref:System.Windows.Automation.ControlType> contido como um campo estático no <xref:System.Windows.Automation.ControlType> classe.  
  
 [!code-csharp[UIAControlTypePatterns_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAControlTypePatterns_snip/CSharp/GetPatternsForm.cs#101)]
 [!code-vb[UIAControlTypePatterns_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAControlTypePatterns_snip/visualbasic/getpatternsform.vb#101)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRequiredProperties">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationProperty[] GetRequiredProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationProperty[] GetRequiredProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.ControlType.GetRequiredProperties" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRequiredProperties () As AutomationProperty()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Windows::Automation::AutomationProperty ^&gt; ^ GetRequiredProperties();" />
      <MemberSignature Language="F#" Value="member this.GetRequiredProperties : unit -&gt; System.Windows.Automation.AutomationProperty[]" Usage="controlType.GetRequiredProperties " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera uma matriz de [!INCLUDE[TLA#tla_id#plural](~/includes/tlasharptla-idsharpplural-md.md)] da propriedade necessária para esse tipo de controle.</summary>
        <returns>Uma matriz de [!INCLUDE[TLA2#tla_id#plural](~/includes/tla2sharptla-idsharpplural-md.md)] de propriedade.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método é útil para clientes de automação de interface do usuário que precisam encontrar todas as propriedades possíveis, como testes de estruturas para uma implementação de provedor.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Group">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType Group;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType Group" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.Group" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Group As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ Group;" />
      <MemberSignature Language="F#" Value=" staticval mutable Group : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.Group" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica um controle de grupo, que atua como um contêiner para outros controles.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um grupo é um controle de contêiner que contém os diferentes tipos de controle e é usado para associar logicamente desses controles.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/18e01bab-01f8-4567-b867-88dce9c4a435">Suporte de automação de interface de usuário para o Tipo de Controle Grupo</related>
      </Docs>
    </Member>
    <Member MemberName="Header">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType Header;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType Header" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.Header" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Header As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ Header;" />
      <MemberSignature Language="F#" Value=" staticval mutable Header : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.Header" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica um controle de cabeçalho, que é um contêiner para os rótulos de linhas e colunas de informações.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/d2e48891-2dbe-409e-8655-2f753908e29b">Suporte de automação de interface de usuário para o Tipo de Controle Header</related>
      </Docs>
    </Member>
    <Member MemberName="HeaderItem">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType HeaderItem;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType HeaderItem" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.HeaderItem" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HeaderItem As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ HeaderItem;" />
      <MemberSignature Language="F#" Value=" staticval mutable HeaderItem : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.HeaderItem" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica um item de cabeçalho, que é o rótulo de uma linha ou coluna de informações.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/09ce1310-ee31-493c-a71e-010bafc42fcf">Suporte de automação de interface de usuário para o tipo de controle HeaderItem</related>
      </Docs>
    </Member>
    <Member MemberName="Hyperlink">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType Hyperlink;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType Hyperlink" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.Hyperlink" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Hyperlink As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ Hyperlink;" />
      <MemberSignature Language="F#" Value=" staticval mutable Hyperlink : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.Hyperlink" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica um controle de hiperlink.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Navega de um controle de hiperlink para um especificados [!INCLUDE[TLA#tla_url](~/includes/tlasharptla-url-md.md)] quando um usuário clica no controle.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/110cceea-5932-4955-a1a6-13afc51422b2">Suporte de automação de interface de usuário para o Tipo de Controle Hyperlink</related>
      </Docs>
    </Member>
    <Member MemberName="Image">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType Image;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType Image" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.Image" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Image As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ Image;" />
      <MemberSignature Language="F#" Value=" staticval mutable Image : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.Image" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica um controle de imagem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um <xref:System.Windows.Automation.ControlType.Image> tipo de controle pode ser usado como um controle autônomo ou como um subcontrole em outro tipo de controle.  Por exemplo, um botão pode usar uma imagem em vez de texto para indicar sua funcionalidade para o usuário.  
  
 Quando usado apenas para fins de decorativos, a imagem é exibida na exibição do controle a [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] árvore (não no modo de conteúdo).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/4e0eeefb-e09b-46d2-b83b-0a7e35543ab8">Suporte de automação de interface de usuário para o Tipo de Controle Image</related>
      </Docs>
    </Member>
    <Member MemberName="List">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType List;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType List" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.List" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly List As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ List;" />
      <MemberSignature Language="F#" Value=" staticval mutable List : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.List" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica um controle de lista, como uma caixa de listagem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um <xref:System.Windows.Automation.ControlType.List> é um tipo de controle que contém <xref:System.Windows.Automation.ControlType.ListItem> e (talvez) <xref:System.Windows.Automation.ControlType.Group> tipos de controle.  
  
 Um <xref:System.Windows.Automation.ControlType.List> controle pode ser usado como um controle autônomo ou como um subcontrole em outro tipo de controle. Por exemplo, uma caixa de combinação tem um <xref:System.Windows.Automation.ControlType.List> controle que contém opções que aparecem quando se clica no botão de menu suspenso. Quando usado como um subcontrole, uma <xref:System.Windows.Automation.ControlType.List> está apenas na exibição de controle de [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] árvore (não no modo de exibição de conteúdo).  
  
 Quando usado como um subcontrole, uma <xref:System.Windows.Automation.ControlType.List> não tem um `Name` propriedade atribuída.  
  
 Um <xref:System.Windows.Automation.ControlType.List> pode conter <xref:System.Windows.Automation.ControlType.DataItem> controles.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/0e959fcb-50f2-413b-948d-7167d279bc11">Suporte de automação de interface do usuário para o tipo de controle List</related>
      </Docs>
    </Member>
    <Member MemberName="ListItem">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType ListItem;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType ListItem" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.ListItem" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ListItem As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ ListItem;" />
      <MemberSignature Language="F#" Value=" staticval mutable ListItem : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.ListItem" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica um controle de item de lista, que é um item filho de um controle de lista.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um <xref:System.Windows.Automation.ControlType.Header> também pode ser um filho de um controle de lista.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/34f533bf-fc14-4e78-8fee-fb7107345fab">Suporte de automação de interface de usuário para o tipo de controle ListItem</related>
      </Docs>
    </Member>
    <Member MemberName="LocalizedControlType">
      <MemberSignature Language="C#" Value="public string LocalizedControlType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalizedControlType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.ControlType.LocalizedControlType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocalizedControlType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LocalizedControlType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalizedControlType : string" Usage="System.Windows.Automation.ControlType.LocalizedControlType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma descrição do tipo de controle.</summary>
        <value>Uma descrição localizada do tipo de controle, como "botão".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 No exemplo a seguir, todos os tipos de controle são encontrados por reflexão e seus <xref:System.Windows.Automation.ControlType.LocalizedControlType%2A> propriedades serão exibidas juntamente com outras informações.  
  
 [!code-csharp[UIAControlTypePatterns_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAControlTypePatterns_snip/CSharp/GetPatternsForm.cs#101)]
 [!code-vb[UIAControlTypePatterns_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAControlTypePatterns_snip/visualbasic/getpatternsform.vb#101)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupById">
      <MemberSignature Language="C#" Value="public static System.Windows.Automation.ControlType LookupById (int id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Automation.ControlType LookupById(int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.ControlType.LookupById(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LookupById (id As Integer) As ControlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Automation::ControlType ^ LookupById(int id);" />
      <MemberSignature Language="F#" Value="static member LookupById : int -&gt; System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.LookupById id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="id">O identificador da classe do controle.</param>
        <summary>Recupera um <see cref="T:System.Windows.Automation.ControlType" /> que encapsula um identificador numérico especificado.</summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalmente, o tipo de um controle é identificado por um <xref:System.Windows.Automation.ControlType> objeto. Esse método permite que você construir esse objeto quando apenas o identificador numérico é conhecido.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Menu">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType Menu;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType Menu" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.Menu" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Menu As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ Menu;" />
      <MemberSignature Language="F#" Value=" staticval mutable Menu : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.Menu" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica um controle de menu, como um menu de nível superior em uma janela do aplicativo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um menu é um contêiner para uma coleção de itens de menu; Por exemplo, o controle que aparece abaixo **arquivo** quando você clicar nele e que contém **New**, **abrir**e assim por diante.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/016323cb-f800-4938-b77b-2eb25d646090">Suporte de Automação de Interface de Usuário para o Tipo de Controle Menu</related>
      </Docs>
    </Member>
    <Member MemberName="MenuBar">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType MenuBar;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType MenuBar" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.MenuBar" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MenuBar As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ MenuBar;" />
      <MemberSignature Language="F#" Value=" staticval mutable MenuBar : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.MenuBar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica um controle de barra de menus, que geralmente contém um conjunto de menus de nível superior.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um <xref:System.Windows.Automation.ControlType.MenuBar> tipo de controle representa o contêiner para o conjunto de menus de nível superior de um aplicativo.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/c1202b21-c1f0-4560-853c-7b99bd73ad97">Suporte de automação de interface de usuário para o tipo de controle MenuBar</related>
      </Docs>
    </Member>
    <Member MemberName="MenuItem">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType MenuItem;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType MenuItem" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.MenuItem" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MenuItem As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ MenuItem;" />
      <MemberSignature Language="F#" Value=" staticval mutable MenuItem : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.MenuItem" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica um controle de item de menu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um <xref:System.Windows.Automation.ControlType.MenuItem> é um filho de um <xref:System.Windows.Automation.ControlType.Menu> ou <xref:System.Windows.Automation.ControlType.MenuBar> controle.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/54bce311-3d23-40b9-ba90-1bdbdaf8fbba">Suporte de automação de interface de usuário para o tipo de controle MenuItem</related>
      </Docs>
    </Member>
    <Member MemberName="Pane">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType Pane;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType Pane" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.Pane" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Pane As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ Pane;" />
      <MemberSignature Language="F#" Value=" staticval mutable Pane : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.Pane" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica um controle do painel.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um <xref:System.Windows.Automation.ControlType.Pane> é usado para separar visualmente o conteúdo dentro de um <xref:System.Windows.Automation.ControlType.Window>. Normalmente, o usuário navega entre os painéis pressionando TAB, F6 ou CTRL + TAB, dependendo do contexto.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/79761191-4449-4630-899c-9cbdb8867d3f">Suporte de automação de interface de usuário para o Tipo de Controle Pane</related>
      </Docs>
    </Member>
    <Member MemberName="ProgressBar">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType ProgressBar;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType ProgressBar" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.ProgressBar" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ProgressBar As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ ProgressBar;" />
      <MemberSignature Language="F#" Value=" staticval mutable ProgressBar : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.ProgressBar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica um controle de barra de progresso, que indica visualmente o progresso de uma operação demorada.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/302e778c-24b0-4789-814a-c8d37cf53a5f">Suporte de automação de interface de usuário para o tipo de controle ProgressBar</related>
      </Docs>
    </Member>
    <Member MemberName="RadioButton">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType RadioButton;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType RadioButton" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.RadioButton" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RadioButton As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ RadioButton;" />
      <MemberSignature Language="F#" Value=" staticval mutable RadioButton : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.RadioButton" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica um controle de botão de opção, que é um mecanismo de seleção que permite exatamente um item selecionado em um grupo.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/87170464-7857-41f1-bcf7-bb41be31cb53">Suporte de automação de interface de usuário para o tipo de controle RadioButton</related>
      </Docs>
    </Member>
    <Member MemberName="ScrollBar">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType ScrollBar;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType ScrollBar" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.ScrollBar" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ScrollBar As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ ScrollBar;" />
      <MemberSignature Language="F#" Value=" staticval mutable ScrollBar : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.ScrollBar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica um controle de barra de rolagem, como uma barra de rolagem em uma janela do aplicativo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um <xref:System.Windows.Automation.ControlType.ScrollBar> tipo de controle contém um conjunto de botões e um controle thumb que permitem que um usuário usando um mouse para rolar o conteúdo de um contêiner de janela ou item.  
  
 Use o <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A> propriedade para diferenciar entre o <xref:System.Windows.Automation.ControlType.Button> elementos que correspondem aos botões grandes incremento, decremento grande, pequeno incremento e decremento pequeno.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/329891d7-b609-49e6-920a-09ea8a627d07">Suporte de automação de interface de usuário para o tipo de controle ScrollBar</related>
      </Docs>
    </Member>
    <Member MemberName="Separator">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType Separator;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType Separator" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.Separator" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Separator As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ Separator;" />
      <MemberSignature Language="F#" Value=" staticval mutable Separator : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.Separator" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica um separador, que cria uma divisão visual em controles como menus e barras de ferramentas.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/89f42247-c699-4afa-91e1-2baaf0d86c9d">Suporte de Automação de Interface de Usuário para o Tipo de Controle Separator</related>
      </Docs>
    </Member>
    <Member MemberName="Slider">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType Slider;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType Slider" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.Slider" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Slider As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ Slider;" />
      <MemberSignature Language="F#" Value=" staticval mutable Slider : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.Slider" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica um controle deslizante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um <xref:System.Windows.Automation.ControlType.Slider> tipo de controle consiste em um conjunto de botões associados com um <xref:System.Windows.Automation.ControlType.Edit> controle que permitem ao usuário selecionar em um conjunto de itens ou definir um valor numérico de dentro de um intervalo.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/045ea62f-7b50-46cf-a5a9-8eb97704355f">Suporte de automação de interface de usuário para o Tipo de Controle Deslizante</related>
      </Docs>
    </Member>
    <Member MemberName="Spinner">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType Spinner;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType Spinner" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.Spinner" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Spinner As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ Spinner;" />
      <MemberSignature Language="F#" Value=" staticval mutable Spinner : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.Spinner" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica um controle giratório.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um <xref:System.Windows.Automation.ControlType.Spinner> tipo de controle consiste em um conjunto de botões que permitem que um usuário selecionar em um conjunto de itens ou definir um valor numérico de dentro de um intervalo.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/3a29d185-65d8-42e3-bcc3-7f43e96f40c5">Suporte de automação de interface do usuário para o tipo de controle Spinner</related>
      </Docs>
    </Member>
    <Member MemberName="SplitButton">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType SplitButton;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType SplitButton" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.SplitButton" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SplitButton As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ SplitButton;" />
      <MemberSignature Language="F#" Value=" staticval mutable SplitButton : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.SplitButton" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica um botão de divisão, que é um botão que executa uma ação padrão e também pode se expandir para uma lista de outras ações possíveis.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/14b05ccf-bcd8-4045-9bae-f7679cd98711">Suporte de automação de interface de usuário para o tipo de controle SplitButton</related>
      </Docs>
    </Member>
    <Member MemberName="StatusBar">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType StatusBar;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType StatusBar" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.StatusBar" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StatusBar As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ StatusBar;" />
      <MemberSignature Language="F#" Value=" staticval mutable StatusBar : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.StatusBar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica um controle de barra de status.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.ControlType.StatusBar> tipos de controle são geralmente subcontroles dos <xref:System.Windows.Automation.ControlType.Window> tipo de controle [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] elementos.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/48dee94a-5119-4939-a4c7-ffeaf794c732">Suporte de automação de interface de usuário para o tipo de controle StatusBar</related>
      </Docs>
    </Member>
    <Member MemberName="Tab">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType Tab;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType Tab" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.Tab" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Tab As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ Tab;" />
      <MemberSignature Language="F#" Value=" staticval mutable Tab : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.Tab" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica um controle guia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um <xref:System.Windows.Automation.ControlType.Tab> é um tipo de controle que contém pelo menos um <xref:System.Windows.Automation.ControlType.TabItem> controle filho.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/f8be2732-836d-4e4d-85e2-73aa39479bf4">Suporte de automação de interface do usuário para o tipo de controle de tabela</related>
      </Docs>
    </Member>
    <Member MemberName="TabItem">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType TabItem;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType TabItem" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.TabItem" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TabItem As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ TabItem;" />
      <MemberSignature Language="F#" Value=" staticval mutable TabItem : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.TabItem" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica um controle de item de guia, que representa uma página de um controle guia.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/9b21160d-e1c2-468b-9275-26e4369ae40d">Suporte de automação de interface de usuário para o tipo de controle TabItem</related>
      </Docs>
    </Member>
    <Member MemberName="Table">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType Table;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType Table" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.Table" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Table As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ Table;" />
      <MemberSignature Language="F#" Value=" staticval mutable Table : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.Table" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica uma tabela.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um <xref:System.Windows.Automation.ControlType.Table> tipo de controle é semelhante a um <xref:System.Windows.Automation.ControlType.DataGrid> , mas contém somente texto. Tabelas também podem conter <xref:System.Windows.Automation.ControlType.Header> tipos de controle.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/9050dde5-6469-4c83-abb7-f861c24ff985">Suporte de Automação de Interface de Usuário para o Tipo de Controle de Tabela</related>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType Text;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType Text" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.Text" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Text As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ Text;" />
      <MemberSignature Language="F#" Value=" staticval mutable Text : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.Text" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica um controle de edição, como uma caixa de texto ou caixa de rich text.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um <xref:System.Windows.Automation.ControlType.Text> controle pode ser usado como um controle autônomo, como uma <xref:System.Windows.Automation.ControlType.Edit> controle, ou como um subcomponente, como a área de um <xref:System.Windows.Automation.ControlType.ComboBox> em que um usuário pode digitar um valor.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/ab0d0ada-8a71-4547-9c03-aadf675938f2">Suporte da automação de interface do usuário para o tipo de controle Text</related>
      </Docs>
    </Member>
    <Member MemberName="Thumb">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType Thumb;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType Thumb" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.Thumb" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Thumb As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ Thumb;" />
      <MemberSignature Language="F#" Value=" staticval mutable Thumb : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.Thumb" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica o controle em uma barra de rolagem que pode ser arrastada para uma posição diferente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um <xref:System.Windows.Automation.ControlType.Thumb> controle é usado como um subcontrole em um <xref:System.Windows.Automation.ControlType.ScrollBar> tipo de controle. Como um subcontrole, uma <xref:System.Windows.Automation.ControlType.Thumb> não tem um <xref:System.Windows.Automation.AutomationElement.NameProperty>.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/13636338-e320-4355-b071-ede20a3fb1de">Suporte de automação de interface de usuário para o Tipo de Controle Thumb</related>
      </Docs>
    </Member>
    <Member MemberName="TitleBar">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType TitleBar;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType TitleBar" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.TitleBar" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TitleBar As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ TitleBar;" />
      <MemberSignature Language="F#" Value=" staticval mutable TitleBar : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.TitleBar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica a barra de legenda em uma janela.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/3b7a4e13-0305-45d5-bc33-1f4133c50782">Suporte de automação de interface de usuário para o tipo de controle TitleBar</related>
      </Docs>
    </Member>
    <Member MemberName="ToolBar">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType ToolBar;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType ToolBar" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.ToolBar" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ToolBar As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ ToolBar;" />
      <MemberSignature Language="F#" Value=" staticval mutable ToolBar : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.ToolBar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica uma barra de ferramentas, como o controle que contém um conjunto de botões de comando em uma janela do aplicativo.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/85152efd-f4c5-430c-8878-3371cc598616">Suporte de automação de interface de usuário para o tipo de controle ToolBar</related>
      </Docs>
    </Member>
    <Member MemberName="ToolTip">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType ToolTip;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType ToolTip" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.ToolTip" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ToolTip As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ ToolTip;" />
      <MemberSignature Language="F#" Value=" staticval mutable ToolTip : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.ToolTip" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica um controle de dica de ferramenta, uma janela informativa exibida como resultado de mover o ponteiro sobre um controle ou, às vezes, quando com a tecla Tab até um controle usando o teclado.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/c3779d78-3164-43ae-8dae-bfaeafffdd65">Suporte de automação de interface de usuário para o tipo de controle ToolTip</related>
      </Docs>
    </Member>
    <Member MemberName="Tree">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType Tree;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType Tree" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.Tree" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Tree As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ Tree;" />
      <MemberSignature Language="F#" Value=" staticval mutable Tree : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.Tree" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica um controle de árvore.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um <xref:System.Windows.Automation.ControlType.Tree> tipo de controle é um contêiner para uma organização hierárquica de <xref:System.Windows.Automation.ControlType.TreeItem> ou <xref:System.Windows.Automation.ControlType.DataItem> tipos de controle.  
  
 Cada nó de uma árvore pode conter outros nós.  Um nó que contém o filho de nós podem ser exibidos como expandidos ou recolhidos.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/312dd04d-a86b-4072-8b12-2beeabdff5e3">Suporte de automação de interface de usuário para o Tipo de Controle de Árvore</related>
      </Docs>
    </Member>
    <Member MemberName="TreeItem">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType TreeItem;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType TreeItem" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.TreeItem" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TreeItem As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ TreeItem;" />
      <MemberSignature Language="F#" Value=" staticval mutable TreeItem : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.TreeItem" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica um nó em um controle <see cref="F:System.Windows.Automation.ControlType.TreeItem" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um <xref:System.Windows.Automation.ControlType.TreeItem> tipo de controle pode ser usado apenas como um subcontrole de um <xref:System.Windows.Automation.ControlType.Tree> controle.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/229f341a-477f-434e-b877-4db9973068eb">Suporte de automação de interface de usuário para o tipo de controle TreeItem</related>
      </Docs>
    </Member>
    <Member MemberName="Window">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType Window;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType Window" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.Window" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Window As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ Window;" />
      <MemberSignature Language="F#" Value=" staticval mutable Window : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.Window" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica um quadro de janela, que contém objetos filho.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Suportam a controles desse tipo sempre <xref:System.Windows.Automation.WindowPattern>.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/53be78a6-cdcc-4af3-a464-5927d19c54e8">Suporte de Automação de Interface de Usuário para o Tipo de Controle Window</related>
      </Docs>
    </Member>
  </Members>
</Type>