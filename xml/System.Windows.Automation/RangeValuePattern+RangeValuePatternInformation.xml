<Type Name="RangeValuePattern+RangeValuePatternInformation" FullName="System.Windows.Automation.RangeValuePattern+RangeValuePatternInformation">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c660a085f411dd9d163ff6b81a37ea7074d96a37" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46593987" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct RangeValuePattern.RangeValuePatternInformation" />
  <TypeSignature Language="ILAsm" Value=".class nested public sequential ansi sealed beforefieldinit RangeValuePattern/RangeValuePatternInformation extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation" />
  <TypeSignature Language="VB.NET" Value="Public Structure RangeValuePattern.RangeValuePatternInformation" />
  <TypeSignature Language="C++ CLI" Value="public: value class RangeValuePattern::RangeValuePatternInformation" />
  <TypeSignature Language="F#" Value="type RangeValuePattern.RangeValuePatternInformation = struct" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationClient</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornece acesso aos valores de propriedade de um objeto <see cref="T:System.Windows.Automation.RangeValuePattern" /> usando os próprios acessadores <see cref="P:System.Windows.Automation.TransformPattern.Current" /> ou <see cref="P:System.Windows.Automation.TransformPattern.Cached" />.</summary>
    <remarks>To be added.</remarks>
    <altmember cref="T:System.Windows.Automation.Provider.IRangeValueProvider" />
    <related type="Article" href="~/docs/framework/ui-automation/ui-automation-control-patterns-overview.md">Visão Geral de Padrões de Controle de Automação de Interface de Usuário</related>
    <related type="Article" href="~/docs/framework/ui-automation/ui-automation-control-patterns-for-clients.md">Padrões de Controle para Clientes de Automação de IU</related>
    <related type="Article" href="http://msdn.microsoft.com/library/ec722dff-6009-4279-b86a-e18d3fa94ebf">Usar armazenamento em cache em automação de interface do usuário</related>
  </Docs>
  <Members>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que especifica se o valor de um elemento [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] é somente leitura.</summary>
        <value>
          <see langword="true" /> Se o valor for somente leitura; <see langword="false" /> se ele pode ser modificado. O padrão é <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um controle deve ter sua <xref:System.Windows.Automation.AutomationElement.IsEnabledProperty> definido como `true` e seu <xref:System.Windows.Automation.ValuePattern.IsReadOnlyProperty> definido como `false` antes da criação de um <xref:System.Windows.Automation.RangeValuePattern> objeto.  
  
   
  
## Examples  
 No exemplo a seguir, uma <xref:System.Windows.Automation.AutomationElement> que dá suporte a <xref:System.Windows.Automation.RangeValuePattern> padrão de controle tem seu valor incrementado ou decrementado pelo específicos do controle <xref:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.LargeChange%2A> valor.  
  
 [!code-csharp[UIARangeValuePattern_snip#103LargeChange](~/samples/snippets/csharp/VS_Snippets_Wpf/UIARangeValuePattern_snip/CSharp/UIARangeValuePattern_snippets.cs#103largechange)]
 [!code-vb[UIARangeValuePattern_snip#103LargeChange](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIARangeValuePattern_snip/VisualBasic/UIARangeValuePattern_snippets.vb#103largechange)]  
[!code-csharp[UIARangeValuePattern_snip#103](~/samples/snippets/csharp/VS_Snippets_Wpf/UIARangeValuePattern_snip/CSharp/UIARangeValuePattern_snippets.cs#103)]
[!code-vb[UIARangeValuePattern_snip#103](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIARangeValuePattern_snip/VisualBasic/UIARangeValuePattern_snippets.vb#103)]  
[!code-csharp[UIARangeValuePattern_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIARangeValuePattern_snip/CSharp/UIARangeValuePattern_snippets.cs#101)]
[!code-vb[UIARangeValuePattern_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIARangeValuePattern_snip/VisualBasic/UIARangeValuePattern_snippets.vb#101)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LargeChange">
      <MemberSignature Language="C#" Value="public double LargeChange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 LargeChange" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.LargeChange" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LargeChange As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double LargeChange { double get(); };" />
      <MemberSignature Language="F#" Value="member this.LargeChange : double" Usage="System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.LargeChange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o valor de grande alteração específica do controle que é adicionado ou subtraído da propriedade <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" />.</summary>
        <value>O valor de grande alteração ou <see langword="null" /> se o elemento não dá suporte <see cref="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.LargeChange" />. O valor padrão é 0,0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 No exemplo a seguir, uma <xref:System.Windows.Automation.AutomationElement> que dá suporte a <xref:System.Windows.Automation.RangeValuePattern> padrão de controle tem seu valor incrementado ou decrementado pelo específicos do controle <xref:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.LargeChange%2A> valor.  
  
 [!code-csharp[UIARangeValuePattern_snip#103LargeChange](~/samples/snippets/csharp/VS_Snippets_Wpf/UIARangeValuePattern_snip/CSharp/UIARangeValuePattern_snippets.cs#103largechange)]
 [!code-vb[UIARangeValuePattern_snip#103LargeChange](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIARangeValuePattern_snip/VisualBasic/UIARangeValuePattern_snippets.vb#103largechange)]  
[!code-csharp[UIARangeValuePattern_snip#103](~/samples/snippets/csharp/VS_Snippets_Wpf/UIARangeValuePattern_snip/CSharp/UIARangeValuePattern_snippets.cs#103)]
[!code-vb[UIARangeValuePattern_snip#103](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIARangeValuePattern_snip/VisualBasic/UIARangeValuePattern_snippets.vb#103)]  
[!code-csharp[UIARangeValuePattern_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIARangeValuePattern_snip/CSharp/UIARangeValuePattern_snippets.cs#101)]
[!code-vb[UIARangeValuePattern_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIARangeValuePattern_snip/VisualBasic/UIARangeValuePattern_snippets.vb#101)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.SmallChange" />
      </Docs>
    </Member>
    <Member MemberName="Maximum">
      <MemberSignature Language="C#" Value="public double Maximum { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Maximum" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.Maximum" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Maximum As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Maximum { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Maximum : double" Usage="System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.Maximum" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o valor de intervalo máximo aceito pelo elemento [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)].</summary>
        <value>O valor máximo compatível com o [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] elemento ou <see langword="null" /> se o elemento não dá suporte <see cref="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.Maximum" />. O valor padrão é 0,0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 No exemplo a seguir, uma <xref:System.Windows.Automation.AutomationElement> que dá suporte a <xref:System.Windows.Automation.RangeValuePattern> padrão de controle tem seu valor definido como o valor máximo do controle específico.  
  
 [!code-csharp[UIARangeValuePattern_snip#104Maximum](~/samples/snippets/csharp/VS_Snippets_Wpf/UIARangeValuePattern_snip/CSharp/UIARangeValuePattern_snippets.cs#104maximum)]
 [!code-vb[UIARangeValuePattern_snip#104Maximum](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIARangeValuePattern_snip/VisualBasic/UIARangeValuePattern_snippets.vb#104maximum)]  
[!code-csharp[UIARangeValuePattern_snip#104](~/samples/snippets/csharp/VS_Snippets_Wpf/UIARangeValuePattern_snip/CSharp/UIARangeValuePattern_snippets.cs#104)]
[!code-vb[UIARangeValuePattern_snip#104](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIARangeValuePattern_snip/VisualBasic/UIARangeValuePattern_snippets.vb#104)]  
[!code-csharp[UIARangeValuePattern_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIARangeValuePattern_snip/CSharp/UIARangeValuePattern_snippets.cs#101)]
[!code-vb[UIARangeValuePattern_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIARangeValuePattern_snip/VisualBasic/UIARangeValuePattern_snippets.vb#101)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.Minimum" />
      </Docs>
    </Member>
    <Member MemberName="Minimum">
      <MemberSignature Language="C#" Value="public double Minimum { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Minimum" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.Minimum" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Minimum As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Minimum { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Minimum : double" Usage="System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.Minimum" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o valor de intervalo mínimo aceito pelo elemento [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)].</summary>
        <value>O valor mínimo compatível com o [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] elemento ou <see langword="null" /> se o elemento não dá suporte <see cref="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.Minimum" />. O valor padrão é 0,0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 No exemplo a seguir, uma <xref:System.Windows.Automation.AutomationElement> que dá suporte a <xref:System.Windows.Automation.RangeValuePattern> padrão de controle tem seu valor definido como o valor mínimo do controle específico.  
  
 [!code-csharp[UIARangeValuePattern_snip#104Minimum](~/samples/snippets/csharp/VS_Snippets_Wpf/UIARangeValuePattern_snip/CSharp/UIARangeValuePattern_snippets.cs#104minimum)]
 [!code-vb[UIARangeValuePattern_snip#104Minimum](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIARangeValuePattern_snip/VisualBasic/UIARangeValuePattern_snippets.vb#104minimum)]  
[!code-csharp[UIARangeValuePattern_snip#104](~/samples/snippets/csharp/VS_Snippets_Wpf/UIARangeValuePattern_snip/CSharp/UIARangeValuePattern_snippets.cs#104)]
[!code-vb[UIARangeValuePattern_snip#104](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIARangeValuePattern_snip/VisualBasic/UIARangeValuePattern_snippets.vb#104)]  
[!code-csharp[UIARangeValuePattern_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIARangeValuePattern_snip/CSharp/UIARangeValuePattern_snippets.cs#101)]
[!code-vb[UIARangeValuePattern_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIARangeValuePattern_snip/VisualBasic/UIARangeValuePattern_snippets.vb#101)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.Maximum" />
      </Docs>
    </Member>
    <Member MemberName="SmallChange">
      <MemberSignature Language="C#" Value="public double SmallChange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SmallChange" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.SmallChange" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmallChange As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double SmallChange { double get(); };" />
      <MemberSignature Language="F#" Value="member this.SmallChange : double" Usage="System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.SmallChange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o valor de pequena alteração, exclusivo para o elemento [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)], que é adicionado ou subtraído da propriedade <see cref="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.Value" /> dos elementos.</summary>
        <value>O valor de pequena alteração exclusivo para o [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] elemento ou <see langword="null" /> se o elemento não dá suporte <see cref="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.SmallChange" />. O valor padrão é 0,0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 No exemplo a seguir, uma <xref:System.Windows.Automation.AutomationElement> que dá suporte a <xref:System.Windows.Automation.RangeValuePattern> padrão de controle tem seu valor incrementado ou decrementado pelo específicos do controle <xref:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.SmallChange%2A> valor.  
  
 [!code-csharp[UIARangeValuePattern_snip#103SmallChange](~/samples/snippets/csharp/VS_Snippets_Wpf/UIARangeValuePattern_snip/CSharp/UIARangeValuePattern_snippets.cs#103smallchange)]
 [!code-vb[UIARangeValuePattern_snip#103SmallChange](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIARangeValuePattern_snip/VisualBasic/UIARangeValuePattern_snippets.vb#103smallchange)]  
[!code-csharp[UIARangeValuePattern_snip#103](~/samples/snippets/csharp/VS_Snippets_Wpf/UIARangeValuePattern_snip/CSharp/UIARangeValuePattern_snippets.cs#103)]
[!code-vb[UIARangeValuePattern_snip#103](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIARangeValuePattern_snip/VisualBasic/UIARangeValuePattern_snippets.vb#103)]  
[!code-csharp[UIARangeValuePattern_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIARangeValuePattern_snip/CSharp/UIARangeValuePattern_snippets.cs#101)]
[!code-vb[UIARangeValuePattern_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIARangeValuePattern_snip/VisualBasic/UIARangeValuePattern_snippets.vb#101)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.LargeChange" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public double Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Value { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : double" Usage="System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o valor atual do elemento [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)].</summary>
        <value>O valor atual de [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] elemento ou <see langword="null" /> se o elemento não dá suporte <see cref="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.Value" />. O valor padrão é 0,0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 No exemplo a seguir, uma <xref:System.Windows.Automation.RangeValuePattern> obtido de um controle de destino do objeto é passado para uma função que recupera atual <xref:System.Windows.Automation.RangeValuePattern> valores de propriedade.  
  
 [!code-csharp[UIARangeValuePattern_snip#102](~/samples/snippets/csharp/VS_Snippets_Wpf/UIARangeValuePattern_snip/CSharp/UIARangeValuePattern_snippets.cs#102)]
 [!code-vb[UIARangeValuePattern_snip#102](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIARangeValuePattern_snip/VisualBasic/UIARangeValuePattern_snippets.vb#102)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.RangeValuePattern.SetValue(System.Double)" />
      </Docs>
    </Member>
  </Members>
</Type>