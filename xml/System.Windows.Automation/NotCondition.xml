<Type Name="NotCondition" FullName="System.Windows.Automation.NotCondition">
  <TypeSignature Language="C#" Value="public class NotCondition : System.Windows.Automation.Condition" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NotCondition extends System.Windows.Automation.Condition" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.NotCondition" />
  <TypeSignature Language="VB.NET" Value="Public Class NotCondition&#xA;Inherits Condition" />
  <TypeSignature Language="C++ CLI" Value="public ref class NotCondition : System::Windows::Automation::Condition" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationClient</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Automation.Condition</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="ef11d-101">Representa um <see cref="T:System.Windows.Automation.Condition" /> que é o negativo do <see cref="T:System.Windows.Automation.Condition" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="ef11d-101">Represents a <see cref="T:System.Windows.Automation.Condition" /> that is the negative of a specified <see cref="T:System.Windows.Automation.Condition" />.</span></span></summary>
    <remarks>To be added.</remarks>
    <altmember cref="T:System.Windows.Automation.AndCondition" />
    <altmember cref="T:System.Windows.Automation.OrCondition" />
    <altmember cref="T:System.Windows.Automation.Condition" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NotCondition (System.Windows.Automation.Condition condition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Automation.Condition condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.NotCondition.#ctor(System.Windows.Automation.Condition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NotCondition(System::Windows::Automation::Condition ^ condition);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="condition" Type="System.Windows.Automation.Condition" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="ef11d-102">A condição a ser negada.</span><span class="sxs-lookup"><span data-stu-id="ef11d-102">The condition to negate.</span></span></param>
        <summary><span data-ttu-id="ef11d-103">Inicializa uma nova instância da classe <see cref="T:System.Windows.Automation.NotCondition" />.</span><span class="sxs-lookup"><span data-stu-id="ef11d-103">Initializes a new instance of the <see cref="T:System.Windows.Automation.NotCondition" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ef11d-104">No exemplo a seguir, uma <xref:System.Windows.Automation.NotCondition> é usado para recuperar todos os elementos que não foram recuperados usando outro <xref:System.Windows.Automation.Condition>.</span><span class="sxs-lookup"><span data-stu-id="ef11d-104">In the following example, a <xref:System.Windows.Automation.NotCondition> is used to retrieve all elements that were not retrieved using another <xref:System.Windows.Automation.Condition>.</span></span>  
  
 [!code-csharp[UIAClient_snip#177](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ConditionSnips.cs#177)]
 [!code-vb[UIAClient_snip#177](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ConditionSnips.vb#177)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Condition">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Condition Condition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Automation.Condition Condition" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.NotCondition.Condition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Condition As Condition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::Condition ^ Condition { System::Windows::Automation::Condition ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Condition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ef11d-105">Obtém o <see cref="T:System.Windows.Automation.Condition" /> negado por este <see cref="T:System.Windows.Automation.NotCondition" />.</span><span class="sxs-lookup"><span data-stu-id="ef11d-105">Gets the <see cref="T:System.Windows.Automation.Condition" /> that this <see cref="T:System.Windows.Automation.NotCondition" /> negates.</span></span></summary>
        <value><span data-ttu-id="ef11d-106">O <see cref="T:System.Windows.Automation.Condition" /> que este <see cref="T:System.Windows.Automation.NotCondition" /> nega.</span><span class="sxs-lookup"><span data-stu-id="ef11d-106">The <see cref="T:System.Windows.Automation.Condition" /> that this <see cref="T:System.Windows.Automation.NotCondition" /> negates.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>