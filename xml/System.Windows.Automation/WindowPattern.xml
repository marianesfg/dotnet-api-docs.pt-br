<Type Name="WindowPattern" FullName="System.Windows.Automation.WindowPattern">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4e4e1a745f1628928afb920a97042dd00336f5d4" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37524943" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WindowPattern : System.Windows.Automation.BasePattern" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WindowPattern extends System.Windows.Automation.BasePattern" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.WindowPattern" />
  <TypeSignature Language="VB.NET" Value="Public Class WindowPattern&#xA;Inherits BasePattern" />
  <TypeSignature Language="C++ CLI" Value="public ref class WindowPattern : System::Windows::Automation::BasePattern" />
  <TypeSignature Language="F#" Value="type WindowPattern = class&#xA;    inherit BasePattern" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationClient</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Automation.BasePattern</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa um controle que fornece funcionalidade baseada em janela fundamental dentro de uma GUI (interface gráfica do usuário) tradicional.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Exemplos de controles que dão suporte a esse padrão de controle incluem janelas de aplicativos de nível superior, [!INCLUDE[TLA#tla_mdi](~/includes/tlasharptla-mdi-md.md)] janelas filho, caixas de diálogo modais e balão de ajudam do windows.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Automation.Provider.IWindowProvider" />
  </Docs>
  <Members>
    <Member MemberName="Cached">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.WindowPattern.WindowPatternInformation Cached { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.WindowPattern/WindowPatternInformation Cached" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.WindowPattern.Cached" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cached As WindowPattern.WindowPatternInformation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::WindowPattern::WindowPatternInformation Cached { System::Windows::Automation::WindowPattern::WindowPatternInformation get(); };" />
      <MemberSignature Language="F#" Value="member this.Cached : System.Windows.Automation.WindowPattern.WindowPatternInformation" Usage="System.Windows.Automation.WindowPattern.Cached" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.WindowPattern+WindowPatternInformation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém os valores de propriedade [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] armazenados em cache para este <see cref="T:System.Windows.Automation.WindowPattern" />.</summary>
        <value>Uma estrutura que contém o armazenados em cache [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] valores de propriedade para o padrão de controle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Valores de propriedade em cache devem ter sido solicitados anteriormente por usando um <xref:System.Windows.Automation.CacheRequest>. Use <xref:System.Windows.Automation.WindowPattern.Current%2A> para obter o valor atual de uma propriedade.  
  
 Para obter informações sobre as propriedades disponíveis e seu uso, consulte <xref:System.Windows.Automation.WindowPattern.WindowPatternInformation>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">A propriedade solicitada não está armazenada no cache.</exception>
      </Docs>
    </Member>
    <Member MemberName="CanMaximizeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty CanMaximizeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty CanMaximizeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.WindowPattern.CanMaximizeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CanMaximizeProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ CanMaximizeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CanMaximizeProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.WindowPattern.CanMaximizeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica a propriedade <see cref="P:System.Windows.Automation.WindowPattern.WindowPatternInformation.CanMaximize" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse identificador é usado por aplicativos cliente de automação de interface do usuário. Provedores de automação de interface do usuário devem usar o campo equivalente no <xref:System.Windows.Automation.WindowPatternIdentifiers>.  
  
   
  
## Examples  
 No exemplo a seguir, um elemento raiz é passado para uma função que retorna uma coleção de elementos de automação que são descendentes da raiz e atendem a um conjunto de condições de propriedade.  
  
 [!code-csharp[UIAWindowPattern_snip#100](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAWindowPattern_snip/CSharp/UIAWindowPattern_snippets.cs#100)]
 [!code-vb[UIAWindowPattern_snip#100](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAWindowPattern_snip/VisualBasic/UIAWindowPattern_snippets.vb#100)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanMinimizeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty CanMinimizeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty CanMinimizeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.WindowPattern.CanMinimizeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CanMinimizeProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ CanMinimizeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CanMinimizeProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.WindowPattern.CanMinimizeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica a propriedade <see cref="P:System.Windows.Automation.WindowPattern.WindowPatternInformation.CanMinimize" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse identificador é usado por aplicativos cliente de automação de interface do usuário. Provedores de automação de interface do usuário devem usar o campo equivalente no <xref:System.Windows.Automation.WindowPatternIdentifiers>.  
  
   
  
## Examples  
 No exemplo a seguir, um elemento raiz é passado para uma função que retorna uma coleção de elementos de automação que são descendentes da raiz e atendem a um conjunto de condições de propriedade.  
  
 [!code-csharp[UIAWindowPattern_snip#100](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAWindowPattern_snip/CSharp/UIAWindowPattern_snippets.cs#100)]
 [!code-vb[UIAWindowPattern_snip#100](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAWindowPattern_snip/VisualBasic/UIAWindowPattern_snippets.vb#100)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.WindowPattern.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="windowPattern.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tenta fechar a janela atual.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando chamado em um controle de painel dividido, esse método será fechar o painel e remover a divisão associada. Esse método também pode fechar todos os outros painéis dependendo da implementação.  
  
   
  
## Examples  
 No exemplo a seguir, uma <xref:System.Windows.Automation.WindowPattern> padrão de controle é obtido de um <xref:System.Windows.Automation.AutomationElement> e, posteriormente, é usado para fechar o <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIAWindowPattern_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAWindowPattern_snip/CSharp/UIAWindowPattern_snippets.cs#101)]
 [!code-vb[UIAWindowPattern_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAWindowPattern_snip/VisualBasic/UIAWindowPattern_snippets.vb#101)]  
[!code-csharp[UIAWindowPattern_snip#102](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAWindowPattern_snip/CSharp/UIAWindowPattern_snippets.cs#102)]
[!code-vb[UIAWindowPattern_snip#102](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAWindowPattern_snip/VisualBasic/UIAWindowPattern_snippets.vb#102)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">O controle não pode executar a ação solicitada.</exception>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">Quando o controle não está mais disponível.</exception>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.WindowPattern.WindowPatternInformation Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.WindowPattern/WindowPatternInformation Current" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.WindowPattern.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As WindowPattern.WindowPatternInformation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::WindowPattern::WindowPatternInformation Current { System::Windows::Automation::WindowPattern::WindowPatternInformation get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : System.Windows.Automation.WindowPattern.WindowPatternInformation" Usage="System.Windows.Automation.WindowPattern.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.WindowPattern+WindowPatternInformation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém os valores da propriedade [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] atual deste <see cref="T:System.Windows.Automation.WindowPattern" />.</summary>
        <value>Uma estrutura que contém atual [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] valores de propriedade para o padrão de controle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse padrão deve ser de um <xref:System.Windows.Automation.AutomationElement> com um <xref:System.Windows.Automation.AutomationElementMode.Full> referência para obter os valores atuais. Se o <xref:System.Windows.Automation.AutomationElement> foi obtido usando <xref:System.Windows.Automation.AutomationElementMode.None>, ela contém apenas dados armazenados em cache e a tentativa de obter o valor atual de qualquer propriedade gera uma exceção. Use <xref:System.Windows.Automation.WindowPattern.Cached%2A> para obter o valor armazenado em cache de uma propriedade que tenha sido especificado usando um <xref:System.Windows.Automation.CacheRequest>.  
  
 Para obter informações sobre as propriedades disponíveis e seu uso, consulte <xref:System.Windows.Automation.WindowPattern.WindowPatternInformation>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsModalProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsModalProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsModalProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.WindowPattern.IsModalProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsModalProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsModalProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsModalProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.WindowPattern.IsModalProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica a propriedade <see cref="P:System.Windows.Automation.WindowPattern.WindowPatternInformation.IsModal" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse identificador é usado por aplicativos cliente de automação de interface do usuário. Provedores de automação de interface do usuário devem usar o campo equivalente no <xref:System.Windows.Automation.WindowPatternIdentifiers>.  
  
   
  
## Examples  
 No exemplo a seguir, um elemento raiz é passado para uma função que retorna uma coleção de elementos de automação que são descendentes da raiz e atendem a um conjunto de condições de propriedade.  
  
 [!code-csharp[UIAWindowPattern_snip#100](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAWindowPattern_snip/CSharp/UIAWindowPattern_snippets.cs#100)]
 [!code-vb[UIAWindowPattern_snip#100](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAWindowPattern_snip/VisualBasic/UIAWindowPattern_snippets.vb#100)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTopmostProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsTopmostProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsTopmostProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.WindowPattern.IsTopmostProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsTopmostProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsTopmostProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsTopmostProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.WindowPattern.IsTopmostProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica a propriedade <see cref="P:System.Windows.Automation.WindowPattern.WindowPatternInformation.IsTopmost" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse identificador é usado por aplicativos cliente de automação de interface do usuário. Provedores de automação de interface do usuário devem usar o campo equivalente no <xref:System.Windows.Automation.WindowPatternIdentifiers>.  
  
   
  
## Examples  
 No exemplo a seguir, um elemento raiz é passado para uma função que retorna uma coleção de elementos de automação que são descendentes da raiz e atendem a um conjunto de condições de propriedade.  
  
 [!code-csharp[UIAWindowPattern_snip#100](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAWindowPattern_snip/CSharp/UIAWindowPattern_snippets.cs#100)]
 [!code-vb[UIAWindowPattern_snip#100](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAWindowPattern_snip/VisualBasic/UIAWindowPattern_snippets.vb#100)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pattern">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationPattern Pattern;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationPattern Pattern" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.WindowPattern.Pattern" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Pattern As AutomationPattern " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationPattern ^ Pattern;" />
      <MemberSignature Language="F#" Value=" staticval mutable Pattern : System.Windows.Automation.AutomationPattern" Usage="System.Windows.Automation.WindowPattern.Pattern" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationPattern</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica o padrão de controle <see cref="T:System.Windows.Automation.WindowPattern" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse identificador é usado por aplicativos cliente de automação de interface do usuário. Provedores de automação de interface do usuário devem usar o campo equivalente no <xref:System.Windows.Automation.WindowPatternIdentifiers>.  
  
 O identificador padrão é passado a métodos como <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A> para recuperar o padrão de controle de interesse de especificado <xref:System.Windows.Automation.AutomationElement>.  
  
   
  
## Examples  
 No exemplo a seguir, uma <xref:System.Windows.Automation.WindowPattern> padrão de controle é obtido de um <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIAWindowPattern_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAWindowPattern_snip/CSharp/UIAWindowPattern_snippets.cs#101)]
 [!code-vb[UIAWindowPattern_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAWindowPattern_snip/VisualBasic/UIAWindowPattern_snippets.vb#101)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWindowVisualState">
      <MemberSignature Language="C#" Value="public void SetWindowVisualState (System.Windows.Automation.WindowVisualState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetWindowVisualState(valuetype System.Windows.Automation.WindowVisualState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.WindowPattern.SetWindowVisualState(System.Windows.Automation.WindowVisualState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetWindowVisualState (state As WindowVisualState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetWindowVisualState(System::Windows::Automation::WindowVisualState state);" />
      <MemberSignature Language="F#" Value="member this.SetWindowVisualState : System.Windows.Automation.WindowVisualState -&gt; unit" Usage="windowPattern.SetWindowVisualState state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Windows.Automation.WindowVisualState" />
      </Parameters>
      <Docs>
        <param name="state">O <see cref="T:System.Windows.Automation.WindowVisualState" /> solicitado da janela.</param>
        <summary>Altera o <see cref="T:System.Windows.Automation.WindowVisualState" /> da janela.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 No exemplo a seguir, uma <xref:System.Windows.Automation.WindowPattern> padrão de controle é obtido de um <xref:System.Windows.Automation.AutomationElement> e, posteriormente, é usado para especificar o estado visual da <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIAWindowPattern_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAWindowPattern_snip/CSharp/UIAWindowPattern_snippets.cs#101)]
 [!code-vb[UIAWindowPattern_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAWindowPattern_snip/VisualBasic/UIAWindowPattern_snippets.vb#101)]  
[!code-csharp[UIAWindowPattern_snip#103](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAWindowPattern_snip/CSharp/UIAWindowPattern_snippets.cs#103)]
[!code-vb[UIAWindowPattern_snip#103](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAWindowPattern_snip/VisualBasic/UIAWindowPattern_snippets.vb#103)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Um controle não é compatível com um comportamento solicitado.</exception>
      </Docs>
    </Member>
    <Member MemberName="WaitForInputIdle">
      <MemberSignature Language="C#" Value="public bool WaitForInputIdle (int milliseconds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool WaitForInputIdle(int32 milliseconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.WindowPattern.WaitForInputIdle(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitForInputIdle (milliseconds As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool WaitForInputIdle(int milliseconds);" />
      <MemberSignature Language="F#" Value="member this.WaitForInputIdle : int -&gt; bool" Usage="windowPattern.WaitForInputIdle milliseconds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="milliseconds" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="milliseconds">O período de tempo, em milissegundos, para esperar que o processo associado fique ocioso. O máximo é <see cref="F:System.Int32.MaxValue" />.</param>
        <summary>Faz com que o código de chamada bloqueie pelo tempo especificado ou até que o processo associado entre em um estado ocioso, aquele que for concluído primeiro.</summary>
        <returns>
          <see langword="true" /> se a janela entrou no estado ocioso, <see langword="false" /> se o tempo limite foi alcançado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método é normalmente usado em conjunto com a manipulação de um <xref:System.Windows.Automation.WindowPatternIdentifiers.WindowOpenedEvent>.  
  
 A implementação é dependente de estrutura de aplicativo subjacente; Portanto, esse método pode retornar algum tempo depois que a janela está pronta para a entrada do usuário. O código de chamada não deve depender desse método para determinar exatamente quando a janela se torne ociosa.  
  
   
  
## Examples  
 No exemplo a seguir, uma <xref:System.Windows.Automation.WindowPattern> padrão de controle é obtido de um <xref:System.Windows.Automation.AutomationElement> e usa <xref:System.Windows.Automation.WindowPattern.WaitForInputIdle%2A> para confirmar se o elemento está pronto para interação do usuário em um período razoável de tempo.  
  
 [!code-csharp[UIAWindowPattern_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAWindowPattern_snip/CSharp/UIAWindowPattern_snippets.cs#101)]
 [!code-vb[UIAWindowPattern_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAWindowPattern_snip/VisualBasic/UIAWindowPattern_snippets.vb#101)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">O parâmetro passado não é um número válido.</exception>
      </Docs>
    </Member>
    <Member MemberName="WindowClosedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent WindowClosedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent WindowClosedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.WindowPattern.WindowClosedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly WindowClosedEvent As AutomationEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationEvent ^ WindowClosedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable WindowClosedEvent : System.Windows.Automation.AutomationEvent" Usage="System.Windows.Automation.WindowPattern.WindowClosedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica o evento acionado quando uma janela é fechada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um aplicativo cliente precisa escutar <xref:System.Windows.Automation.WindowPattern.WindowClosedEvent> de um objeto armazenado em cache, pois uma janela é removida do [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] controlar o modo de exibição de estrutura imediatamente após o que está sendo fechado.  
  
 Esse identificador é usado por aplicativos cliente de automação de interface do usuário. Provedores de automação de interface do usuário devem usar o campo equivalente no <xref:System.Windows.Automation.WindowPatternIdentifiers>.  
  
   
  
## Examples  
 No exemplo a seguir, os ouvintes de eventos são declarados e um <xref:System.Windows.Automation.AutomationEventHandler> delegado é especificado para <xref:System.Windows.Automation.WindowPattern.WindowOpenedEvent> e <xref:System.Windows.Automation.WindowPattern.WindowClosedEvent> eventos.  
  
 [!code-csharp[UIAWindowPattern_snip#104](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAWindowPattern_snip/CSharp/UIAWindowPattern_snippets.cs#104)]
 [!code-vb[UIAWindowPattern_snip#104](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAWindowPattern_snip/VisualBasic/UIAWindowPattern_snippets.vb#104)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.WindowClosedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="WindowInteractionStateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty WindowInteractionStateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty WindowInteractionStateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.WindowPattern.WindowInteractionStateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly WindowInteractionStateProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ WindowInteractionStateProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable WindowInteractionStateProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.WindowPattern.WindowInteractionStateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica a propriedade <see cref="P:System.Windows.Automation.WindowPattern.WindowPatternInformation.WindowInteractionState" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse identificador é usado por aplicativos cliente de automação de interface do usuário. Provedores de automação de interface do usuário devem usar o campo equivalente no <xref:System.Windows.Automation.WindowPatternIdentifiers>.  
  
   
  
## Examples  
 No exemplo a seguir, um elemento raiz é passado para uma função que retorna uma coleção de elementos de automação que são descendentes da raiz e atendem a um conjunto de condições de propriedade.  
  
 [!code-csharp[UIAWindowPattern_snip#100](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAWindowPattern_snip/CSharp/UIAWindowPattern_snippets.cs#100)]
 [!code-vb[UIAWindowPattern_snip#100](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAWindowPattern_snip/VisualBasic/UIAWindowPattern_snippets.vb#100)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowOpenedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent WindowOpenedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent WindowOpenedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.WindowPattern.WindowOpenedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly WindowOpenedEvent As AutomationEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationEvent ^ WindowOpenedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable WindowOpenedEvent : System.Windows.Automation.AutomationEvent" Usage="System.Windows.Automation.WindowPattern.WindowOpenedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica o evento gerado quando uma janela é aberta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse identificador é usado por aplicativos cliente de automação de interface do usuário. Provedores de automação de interface do usuário devem usar o campo equivalente no <xref:System.Windows.Automation.WindowPatternIdentifiers>.  
  
   
  
## Examples  
 No exemplo a seguir, os ouvintes de eventos são declarados e um <xref:System.Windows.Automation.AutomationEventHandler> delegado é especificado para <xref:System.Windows.Automation.WindowPattern.WindowOpenedEvent> e <xref:System.Windows.Automation.WindowPattern.WindowClosedEvent> eventos.  
  
 [!code-csharp[UIAWindowPattern_snip#104](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAWindowPattern_snip/CSharp/UIAWindowPattern_snippets.cs#104)]
 [!code-vb[UIAWindowPattern_snip#104](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAWindowPattern_snip/VisualBasic/UIAWindowPattern_snippets.vb#104)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowVisualStateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty WindowVisualStateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty WindowVisualStateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.WindowPattern.WindowVisualStateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly WindowVisualStateProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ WindowVisualStateProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable WindowVisualStateProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.WindowPattern.WindowVisualStateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica a propriedade <see cref="P:System.Windows.Automation.WindowPattern.WindowPatternInformation.WindowVisualState" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse identificador é usado por aplicativos cliente de automação de interface do usuário. Provedores de automação de interface do usuário devem usar o campo equivalente no <xref:System.Windows.Automation.WindowPatternIdentifiers>.  
  
   
  
## Examples  
 No exemplo a seguir, um elemento raiz é passado para uma função que retorna uma coleção de elementos de automação que são descendentes da raiz e atendem a um conjunto de condições de propriedade.  
  
 [!code-csharp[UIAWindowPattern_snip#100](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAWindowPattern_snip/CSharp/UIAWindowPattern_snippets.cs#100)]
 [!code-vb[UIAWindowPattern_snip#100](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAWindowPattern_snip/VisualBasic/UIAWindowPattern_snippets.vb#100)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>