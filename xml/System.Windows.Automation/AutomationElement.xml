<Type Name="AutomationElement" FullName="System.Windows.Automation.AutomationElement">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d18e221734e24d0f168e86f09a37ff102544f39f" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37583637" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class AutomationElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AutomationElement extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.AutomationElement" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AutomationElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class AutomationElement sealed" />
  <TypeSignature Language="F#" Value="type AutomationElement = class" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationClient</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents a UI Automation element in the UI Automation tree, and contains values used as identifiers by UI Automation client applications.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Uma <xref:System.Windows.Automation.AutomationElement> corresponde a uma parte dos [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)], independentemente da implementação subjacente (como [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] ou [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AcceleratorKeyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty AcceleratorKeyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty AcceleratorKeyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AcceleratorKeyProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ AcceleratorKeyProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AcceleratorKeyProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.AcceleratorKeyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.AcceleratorKey" /> property.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse identificador é usado por aplicativos cliente de automação de interface do usuário. Provedores de automação de interface do usuário devem usar o identificador equivalente no <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Essa propriedade também pode ser recuperada do <xref:System.Windows.Automation.AutomationElement.Current%2A> ou <xref:System.Windows.Automation.AutomationElement.Cached%2A> propriedades.  
  
 Combinações de teclas de aceleração invocar uma ação. Por exemplo, CTRL + O geralmente é usado para chamar o **abrir** caixa de diálogo comum de arquivo. Uma <xref:System.Windows.Automation.AutomationElement> que tenha a propriedade de chave de acelerador definida sempre implementa o <xref:System.Windows.Automation.InvokePattern> classe.  
  
 Valores de retorno da propriedade são do tipo <xref:System.String>. O valor padrão para a propriedade é uma cadeia de caracteres vazia.  
  
   
  
## Examples  
 O exemplo a seguir recupera o valor atual da propriedade. O valor padrão será retornado se o elemento não fornecer um.  
  
 [!code-csharp[UIAClient_snip#124](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#124)]
 [!code-vb[UIAClient_snip#124](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#124)]  
  
 O exemplo a seguir recupera o valor atual da propriedade, mas Especifica que, se o elemento em si não fornecer um valor para a propriedade <xref:System.Windows.Automation.AutomationElement.NotSupported> deve ser retornado em vez de um valor padrão.  
  
 [!code-csharp[UIAClient_snip#125](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#125)]
 [!code-vb[UIAClient_snip#125](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#125)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessKeyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty AccessKeyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty AccessKeyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.AccessKeyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AccessKeyProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ AccessKeyProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AccessKeyProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.AccessKeyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.AccessKey" /> property.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse identificador é usado por aplicativos cliente de automação de interface do usuário. Provedores de automação de interface do usuário devem usar o identificador equivalente no <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Essa propriedade também pode ser recuperada do <xref:System.Windows.Automation.AutomationElement.Current%2A> ou <xref:System.Windows.Automation.AutomationElement.Cached%2A> propriedades.  
  
 Uma chave de acesso é um caractere no texto de um menu, item de menu ou rótulo de um controle como um botão que ativa a função de menu anexados. Por exemplo, a letra "O" geralmente é usada para chamar o **abrir arquivo** caixa de diálogo comum de uma **arquivo** menu.  
  
 Os valores de chave de acesso são do tipo <xref:System.String> e conter o caractere registrado como a chave de acesso para o elemento. O valor padrão para a cadeia de caracteres é uma cadeia de caracteres vazia.  
  
   
  
## Examples  
 O exemplo a seguir recupera o valor atual da propriedade. O valor padrão será retornado se o elemento não fornecer um.  
  
 [!code-csharp[UIAClient_snip#127](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#127)]
 [!code-vb[UIAClient_snip#127](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#127)]  
  
 O exemplo a seguir recupera o valor atual da propriedade, mas Especifica que, se o elemento em si não fornecer um valor para a propriedade <xref:System.Windows.Automation.AutomationElement.NotSupported> deve ser retornado em vez de um valor padrão.  
  
 [!code-csharp[UIAClient_snip#128](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#128)]
 [!code-vb[UIAClient_snip#128](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#128)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncContentLoadedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent AsyncContentLoadedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent AsyncContentLoadedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.AsyncContentLoadedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AsyncContentLoadedEvent As AutomationEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationEvent ^ AsyncContentLoadedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable AsyncContentLoadedEvent : System.Windows.Automation.AutomationEvent" Usage="System.Windows.Automation.AutomationElement.AsyncContentLoadedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies an event raised during asynchronous content-loading.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse identificador é usado por aplicativos cliente de automação de interface do usuário. Provedores de automação de interface do usuário devem usar o identificador equivalente no <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Esse evento é usado principalmente por provedores para indicar que ocorreram eventos assíncronos de carregamento de conteúdo.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.AsyncContentLoadedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="AutomationFocusChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent AutomationFocusChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent AutomationFocusChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.AutomationFocusChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AutomationFocusChangedEvent As AutomationEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationEvent ^ AutomationFocusChangedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable AutomationFocusChangedEvent : System.Windows.Automation.AutomationEvent" Usage="System.Windows.Automation.AutomationElement.AutomationFocusChangedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies an event that is raised when the focus has changed.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse identificador é usado por aplicativos cliente de automação de interface do usuário. Provedores de automação de interface do usuário devem usar o identificador equivalente no <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.AutomationFocusChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="AutomationIdProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty AutomationIdProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty AutomationIdProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.AutomationIdProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AutomationIdProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ AutomationIdProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AutomationIdProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.AutomationIdProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId" /> property, which is used to identify elements.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse identificador é usado por aplicativos cliente de automação de interface do usuário. Provedores de automação de interface do usuário devem usar o identificador equivalente no <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Essa propriedade também pode ser recuperada do <xref:System.Windows.Automation.AutomationElement.Current%2A> ou <xref:System.Windows.Automation.AutomationElement.Cached%2A> propriedades.  
  
 Valores de retorno da propriedade são do tipo <xref:System.String>. O valor padrão para a propriedade é uma cadeia de caracteres vazia.  
  
 Quando ele está disponível a <xref:System.Windows.Automation.AutomationElement.AutomationIdProperty> de um elemento deve sempre ser o mesmo em qualquer instância do aplicativo, independentemente do idioma local. O valor deve ser exclusivo entre os elementos irmãos, mas não necessariamente exclusiva em toda a área de trabalho. Por exemplo, várias instâncias de um aplicativo ou vários modos de exibição de pasta no Microsoft Windows Explorer, podem conter elementos com o mesmo <xref:System.Windows.Automation.AutomationElement.AutomationIdProperty>, como "SystemMenuBar".  
  
 Embora o suporte de um <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A> é sempre recomendado para melhor testabilidade, essa propriedade não é obrigatória. Quando ele é compatível, um <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A> é útil para criar automação de teste de scripts que são executados independentemente do idioma da interface do usuário. Os clientes não devem fazer nenhuma suposição sobre o <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A>s expostos por outros aplicativos. Um <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A> não é necessariamente garantida sejam estáveis em todas as diferentes versões ou compilações de um aplicativo.  
  
 Instâncias do [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] elementos são identificados exclusivamente na área de trabalho por seus <xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty> propriedades.  
  
> [!NOTE]
>  <xref:System.Windows.Automation.AutomationElement.AutomationIdProperty> é compatível com todos os elementos de automação de interface do usuário na exibição de controle, exceto windows do aplicativo de nível superior, elementos de automação de interface do usuário derivados de [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] controles que não têm uma ID ou X:UID e elementos de automação de interface do usuário derivados de [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] controles que não tem uma ID de controle.  
  
   
  
## Examples  
 O exemplo a seguir recupera o valor atual da propriedade. O valor padrão será retornado se o elemento não fornecer um.  
  
 [!code-csharp[UIAClient_snip#129](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#129)]
 [!code-vb[UIAClient_snip#129](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#129)]  
  
 O exemplo a seguir recupera o valor atual da propriedade, mas Especifica que, se o elemento em si não fornecer um valor para a propriedade <xref:System.Windows.Automation.AutomationElement.NotSupported> deve ser retornado em vez de um valor padrão.  
  
 [!code-csharp[UIAClient_snip#130](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#130)]
 [!code-vb[UIAClient_snip#130](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#130)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Automation.AutomationElement.RuntimeIdProperty" />
      </Docs>
    </Member>
    <Member MemberName="AutomationPropertyChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent AutomationPropertyChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent AutomationPropertyChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.AutomationPropertyChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AutomationPropertyChangedEvent As AutomationEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationEvent ^ AutomationPropertyChangedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable AutomationPropertyChangedEvent : System.Windows.Automation.AutomationEvent" Usage="System.Windows.Automation.AutomationElement.AutomationPropertyChangedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies a property-changed event.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse identificador é usado por aplicativos cliente de automação de interface do usuário. Provedores de automação de interface do usuário devem usar o identificador equivalente no <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.AutomationPropertyChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="BoundingRectangleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty BoundingRectangleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty BoundingRectangleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.BoundingRectangleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BoundingRectangleProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ BoundingRectangleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable BoundingRectangleProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.BoundingRectangleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.BoundingRectangle" /> property.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse identificador é usado por aplicativos cliente de automação de interface do usuário. Provedores de automação de interface do usuário devem usar o identificador equivalente no <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Essa propriedade também pode ser recuperada do <xref:System.Windows.Automation.AutomationElement.Current%2A> ou <xref:System.Windows.Automation.AutomationElement.Cached%2A> propriedades.  
  
 Retângulos delimitadores são do tipo <xref:System.Windows.Rect>. O retângulo retornado está em coordenadas da tela física. O valor padrão é <xref:System.Windows.Rect.Empty%2A>. <xref:System.Windows.Rect.Empty%2A> será retornado se o item não está exibindo no momento um [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].  
  
 O retângulo retornado pode conter pontos que não são clicáveis. As instâncias em que isso pode acontecer incluem quando o [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] o item tem uma forma irregular ou a região que pode ser clicado ou obscurecida por outros [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] elementos.  
  
   
  
## Examples  
 O exemplo a seguir recupera o valor atual da propriedade. O valor padrão será retornado se o elemento não fornecer um.  
  
 [!code-csharp[UIAClient_snip#131](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#131)]
 [!code-vb[UIAClient_snip#131](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#131)]  
  
 O exemplo a seguir recupera o valor atual da propriedade, mas Especifica que, se o elemento em si não fornecer um valor para a propriedade <xref:System.Windows.Automation.AutomationElement.NotSupported> deve ser retornado em vez de um valor padrão.  
  
 [!code-csharp[UIAClient_snip#132](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#132)]
 [!code-vb[UIAClient_snip#132](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#132)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cached">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement.AutomationElementInformation Cached { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.AutomationElement/AutomationElementInformation Cached" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.Cached" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cached As AutomationElement.AutomationElementInformation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::AutomationElement::AutomationElementInformation Cached { System::Windows::Automation::AutomationElement::AutomationElementInformation get(); };" />
      <MemberSignature Language="F#" Value="member this.Cached : System.Windows.Automation.AutomationElement.AutomationElementInformation" Usage="System.Windows.Automation.AutomationElement.Cached" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement+AutomationElementInformation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the cached [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] property values for this <see cref="T:System.Windows.Automation.AutomationElement" /> object.</summary>
        <value>Uma estrutura que contém os valores da propriedade armazenada em cache para o <see cref="T:System.Windows.Automation.AutomationElement" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Os acessadores para [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] propriedades são representadas como propriedades da estrutura retornada pelo <xref:System.Windows.Automation.AutomationElement.Cached%2A>. Você não precisará recuperar na estrutura. Você pode acessar seus membros diretamente, como no exemplo a seguir. Para obter informações específicas sobre as propriedades disponíveis e seu uso, consulte <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation>.  
  
 Para obter o valor atual da [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] propriedades neste elemento, use o <xref:System.Windows.Automation.AutomationElement.Current%2A> propriedade.  
  
   
  
## Examples  
 A exemplo a seguir mostra como o <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.Name%2A> propriedade pode ser armazenado em cache e, em seguida, recuperada por meio de <xref:System.Windows.Automation.AutomationElement.Cached%2A> propriedade.  
  
 [!code-csharp[UIAClient_snip#119](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#119)]
 [!code-vb[UIAClient_snip#119](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#119)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">There are no cached properties.</exception>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">The UI for the <see cref="T:System.Windows.Automation.AutomationElement" /> no longer exists.</exception>
      </Docs>
    </Member>
    <Member MemberName="CachedChildren">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElementCollection CachedChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Automation.AutomationElementCollection CachedChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.CachedChildren" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CachedChildren As AutomationElementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::AutomationElementCollection ^ CachedChildren { System::Windows::Automation::AutomationElementCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CachedChildren : System.Windows.Automation.AutomationElementCollection" Usage="System.Windows.Automation.AutomationElement.CachedChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElementCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the cached child elements of this <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <value>A coleção de elementos filho. Essa coleção pode estar vazia se o elemento não tem filhos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O modo de exibição da coleção retornada é determinado pelo <xref:System.Windows.Automation.CacheRequest.TreeFilter%2A> condição do <xref:System.Windows.Automation.CacheRequest> que estava ativo quando isso <xref:System.Windows.Automation.AutomationElement> objeto foi obtido.  
  
 Filhos são armazenados em cache somente se o escopo do <xref:System.Windows.Automation.CacheRequest> incluídos <xref:System.Windows.Automation.TreeScope.Subtree>, <xref:System.Windows.Automation.TreeScope.Children>, ou <xref:System.Windows.Automation.TreeScope.Descendants>.  
  
 Se o <xref:System.Windows.Automation.CacheRequest> especificado que filhos foram armazenados em cache nesse nível, mas não há filhos, o valor dessa propriedade é 0. No entanto, se nenhuma solicitação foi feita para filhos de cache nesse nível, uma tentativa de recuperar a propriedade gerará uma exceção.  
  
   
  
## Examples  
 No exemplo a seguir, um elemento de caixa de listagem é obtido do elemento de janela pai, enquanto um <xref:System.Windows.Automation.CacheRequest> está ativo e <xref:System.Windows.Automation.CacheRequest.TreeScope%2A> é <xref:System.Windows.Automation.TreeScope.Children>. As propriedades especificadas dos elementos filho (ou seja, os itens da lista) são armazenadas em cache e podem ser recuperadas do <xref:System.Windows.Automation.AutomationElement.CachedChildren%2A> da caixa de listagem.  
  
 [!code-csharp[UIAClient_snip#119](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#119)]
 [!code-vb[UIAClient_snip#119](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#119)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">The UI for the <see cref="T:System.Windows.Automation.AutomationElement" /> no longer exists.</exception>
        <exception cref="T:System.InvalidOperationException">No request was made to cache the children of this element.</exception>
      </Docs>
    </Member>
    <Member MemberName="CachedParent">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement CachedParent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Automation.AutomationElement CachedParent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.CachedParent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CachedParent As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::AutomationElement ^ CachedParent { System::Windows::Automation::AutomationElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CachedParent : System.Windows.Automation.AutomationElement" Usage="System.Windows.Automation.AutomationElement.CachedParent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the cached parent of this <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <value>O elemento pai. O valor de retorno pode ser <see langword="null" /> se o elemento especificado não tem nenhum pai — por exemplo, se esse elemento é o nó raiz.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 No exemplo a seguir, o <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.Name%2A> propriedades de uma caixa de listagem e seus itens de lista são armazenados em cache. O elemento de caixa de listagem está disponível no <xref:System.Windows.Automation.AutomationElement.CachedParent%2A> propriedade de cada elemento do item de lista.  
  
 [!code-csharp[UIAClient_snip#119](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#119)]
 [!code-vb[UIAClient_snip#119](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#119)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">No parent element is cached.</exception>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">The UI for the <see cref="T:System.Windows.Automation.AutomationElement" /> no longer exists.</exception>
      </Docs>
    </Member>
    <Member MemberName="ClassNameProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty ClassNameProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty ClassNameProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.ClassNameProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClassNameProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ ClassNameProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ClassNameProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.ClassNameProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ClassName" /> property.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse identificador é usado por aplicativos cliente de automação de interface do usuário. Provedores de automação de interface do usuário devem usar o identificador equivalente no <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Essa propriedade também pode ser recuperada do <xref:System.Windows.Automation.AutomationElement.Current%2A> ou <xref:System.Windows.Automation.AutomationElement.Cached%2A> propriedades.  
  
 O nome de classe depende da implementação do provedor de automação de interface do usuário e, portanto, não pode ser contado após estar em um formato padrão. No entanto, se você souber o nome da classe você pode usá-lo para verificar se seu aplicativo está funcionando com o esperado [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] elemento.  
  
 Valores de retorno da propriedade são do tipo <xref:System.String>. O valor padrão é uma cadeia de caracteres vazia.  
  
   
  
## Examples  
 O exemplo a seguir recupera o valor atual da propriedade. O valor padrão será retornado se o elemento não fornecer um.  
  
 [!code-csharp[UIAClient_snip#133](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#133)]
 [!code-vb[UIAClient_snip#133](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#133)]  
  
 O exemplo a seguir recupera o valor atual da propriedade, mas Especifica que, se o elemento em si não fornecer um valor para a propriedade <xref:System.Windows.Automation.AutomationElement.NotSupported> deve ser retornado em vez de um valor padrão.  
  
 [!code-csharp[UIAClient_snip#134](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#134)]
 [!code-vb[UIAClient_snip#134](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#134)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClickablePointProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty ClickablePointProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty ClickablePointProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.ClickablePointProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClickablePointProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ ClickablePointProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ClickablePointProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.ClickablePointProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the clickable point property.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse identificador é usado por aplicativos cliente de automação de interface do usuário. Provedores de automação de interface do usuário devem usar o identificador equivalente no <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Um <xref:System.Windows.Automation.AutomationElement> não é clicável se ela é completamente obscurecida por outra janela.  
  
 Valores de retorno da propriedade são do tipo <xref:System.Windows.Point>. O valor padrão é `null`.  
  
 O valor retornado está em coordenadas da tela física.  
  
   
  
## Examples  
 O exemplo a seguir recupera o valor atual da propriedade.  
  
 [!code-csharp[UIAClient_snip#135](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#135)]
 [!code-vb[UIAClient_snip#135](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#135)]  
  
 O exemplo a seguir recupera o valor atual da propriedade, mas Especifica que, se o elemento em si não fornecer um valor para a propriedade <xref:System.Windows.Automation.AutomationElement.NotSupported> deve ser retornado em vez de um valor padrão.  
  
 [!code-csharp[UIAClient_snip#166](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#166)]
 [!code-vb[UIAClient_snip#166](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#166)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.TryGetClickablePoint(System.Windows.Point@)" />
        <altmember cref="M:System.Windows.Automation.AutomationElement.GetClickablePoint" />
      </Docs>
    </Member>
    <Member MemberName="ControlTypeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty ControlTypeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty ControlTypeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.ControlTypeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ControlTypeProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ ControlTypeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ControlTypeProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.ControlTypeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ControlType" /> property.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse identificador é usado por aplicativos cliente de automação de interface do usuário. Provedores de automação de interface do usuário devem usar o identificador equivalente no <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Essa propriedade também pode ser recuperada do <xref:System.Windows.Automation.AutomationElement.Current%2A> ou <xref:System.Windows.Automation.AutomationElement.Cached%2A> propriedades.  
  
 O valor padrão para a propriedade é <xref:System.Windows.Automation.ControlType.Custom>  
  
   
  
## Examples  
 O exemplo a seguir recupera o valor atual da propriedade. O valor padrão será retornado se o elemento não fornecer um.  
  
 [!code-csharp[UIAClient_snip#136](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#136)]
 [!code-vb[UIAClient_snip#136](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#136)]  
  
 O exemplo a seguir recupera o valor atual da propriedade, mas Especifica que, se o elemento em si não fornecer um valor para a propriedade <xref:System.Windows.Automation.AutomationElement.NotSupported> deve ser retornado em vez de um valor padrão.  
  
 [!code-csharp[UIAClient_snip#137](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#137)]
 [!code-vb[UIAClient_snip#137](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#137)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CultureProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty CultureProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty CultureProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.CultureProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CultureProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ CultureProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CultureProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.CultureProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the culture property.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse identificador é usado por aplicativos cliente de automação de interface do usuário. Provedores de automação de interface do usuário devem usar o identificador equivalente no <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Dentro da estrutura do Windows Presentation Foundation (WPF), sempre será o valor padrão relatado `en-US` porque o .NET Framework é automaticamente padronizada para inglês. Para outras estruturas de interface do usuário do usuário, essa propriedade deve ser definida explicitamente ou ele não será exposto.  
  
 Essa propriedade pode existir em uma base por controle, mas normalmente está disponível somente no nível do aplicativo.  
  
 Valores de retorno da propriedade são do tipo <xref:System.Globalization.CultureInfo>.  
  
   
  
## Examples  
 O exemplo a seguir recupera o valor atual da propriedade.  
  
 [!code-csharp[UIAClient_snip#138](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#138)]
 [!code-vb[UIAClient_snip#138](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#138)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement.AutomationElementInformation Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.AutomationElement/AutomationElementInformation Current" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As AutomationElement.AutomationElementInformation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::AutomationElement::AutomationElementInformation Current { System::Windows::Automation::AutomationElement::AutomationElementInformation get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : System.Windows.Automation.AutomationElement.AutomationElementInformation" Usage="System.Windows.Automation.AutomationElement.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement+AutomationElementInformation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the current property values of the <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <value>Uma estrutura que contém os valores da propriedade atuais.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Os acessadores para [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] propriedades são representadas como propriedades da estrutura retornada pelo <xref:System.Windows.Automation.AutomationElement.Current%2A>. Você não precisará recuperar na estrutura. Você pode acessar seus membros diretamente, como no exemplo a seguir. Para obter informações específicas sobre as propriedades disponíveis e seu uso, consulte <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation>.  
  
 Para obter o valor armazenado em cache do [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] propriedades neste elemento, use o <xref:System.Windows.Automation.AutomationElement.Cached%2A> propriedade.  
  
   
  
## Examples  
 A exemplo a seguir mostra como o <xref:System.Windows.Automation.AutomationElement.Current%2A> propriedade é usada para recuperar o nome de um item que foi selecionado em uma lista.  
  
 [!code-csharp[UIAClient_snip#106](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#106)]
 [!code-vb[UIAClient_snip#106](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#106)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">The UI for the <see cref="T:System.Windows.Automation.AutomationElement" /> no longer exists.</exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="automationElement.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">An <see cref="T:System.Windows.Automation.AutomationElement" /> to compare.</param>
        <summary>Determines whether the specified <see cref="T:System.Windows.Automation.AutomationElement" /> has the same value as this <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <returns>
          <see langword="true" /> if the specified <see cref="T:System.Windows.Automation.AutomationElement" /> is equal to this <see cref="T:System.Windows.Automation.AutomationElement" />;otherwise <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dois elementos que são comparados como iguais podem conter informações armazenadas em cache diferentes em diferentes pontos no tempo. Verificação de igualdade somente testes que o <xref:System.Windows.Automation.AutomationElement> objetos se referirem ao mesmo elemento de interface de usuário subjacente, ou seja, se eles têm o mesmo identificador de tempo de execução.  
  
 Esse método é equivalente ao operador de igualdade, que também comparar identificadores de tempo de execução.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.op_Equality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)" />
        <altmember cref="M:System.Windows.Automation.Automation.Compare(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)" />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~AutomationElement ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!AutomationElement ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="automationElement.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindAll">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElementCollection FindAll (System.Windows.Automation.TreeScope scope, System.Windows.Automation.Condition condition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationElementCollection FindAll(valuetype System.Windows.Automation.TreeScope scope, class System.Windows.Automation.Condition condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.FindAll(System.Windows.Automation.TreeScope,System.Windows.Automation.Condition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::AutomationElementCollection ^ FindAll(System::Windows::Automation::TreeScope scope, System::Windows::Automation::Condition ^ condition);" />
      <MemberSignature Language="F#" Value="member this.FindAll : System.Windows.Automation.TreeScope * System.Windows.Automation.Condition -&gt; System.Windows.Automation.AutomationElementCollection" Usage="automationElement.FindAll (scope, condition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElementCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Windows.Automation.TreeScope" />
        <Parameter Name="condition" Type="System.Windows.Automation.Condition" />
      </Parameters>
      <Docs>
        <param name="scope">A bitwise combination of values that specifies the scope of the search.</param>
        <param name="condition">The object containing the criteria to match.</param>
        <summary>Returns all <see cref="T:System.Windows.Automation.AutomationElement" /> objects that satisfy the specified condition.</summary>
        <returns>A collection of objects that satisfies the specified condition. If there are no matches, an empty collection is returned.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O escopo da pesquisa é relativo ao elemento no qual o método é chamado. Elementos são retornados na ordem em que elas foram encontradas na árvore.  
  
 Ao procurar por janelas de nível superior na área de trabalho, certifique-se de especificar <xref:System.Windows.Automation.TreeScope.Children> na `scope`, e não <xref:System.Windows.Automation.TreeScope.Descendants>. Uma pesquisa a subárvore inteira da área de trabalho pode iterar por meio de milhares de itens e levar a um estouro de pilha.  
  
 Se seu aplicativo cliente pode tentar localizar elementos em sua própria interface do usuário, você deve fazer todas as [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] chama em um thread separado.  
  
   
  
## Examples  
 O exemplo a seguir mostra como usar <xref:System.Windows.Automation.AutomationElement.FindAll%2A> para localizar todos habilitados botões em uma janela.  
  
 [!code-csharp[UIAClient_snip#116](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#116)]
 [!code-vb[UIAClient_snip#116](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#116)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.FindFirst(System.Windows.Automation.TreeScope,System.Windows.Automation.Condition)" />
      </Docs>
    </Member>
    <Member MemberName="FindFirst">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement FindFirst (System.Windows.Automation.TreeScope scope, System.Windows.Automation.Condition condition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationElement FindFirst(valuetype System.Windows.Automation.TreeScope scope, class System.Windows.Automation.Condition condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.FindFirst(System.Windows.Automation.TreeScope,System.Windows.Automation.Condition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::AutomationElement ^ FindFirst(System::Windows::Automation::TreeScope scope, System::Windows::Automation::Condition ^ condition);" />
      <MemberSignature Language="F#" Value="member this.FindFirst : System.Windows.Automation.TreeScope * System.Windows.Automation.Condition -&gt; System.Windows.Automation.AutomationElement" Usage="automationElement.FindFirst (scope, condition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Windows.Automation.TreeScope" />
        <Parameter Name="condition" Type="System.Windows.Automation.Condition" />
      </Parameters>
      <Docs>
        <param name="scope">A bitwise combination of values that specifies the scope of the search.</param>
        <param name="condition">The object containing the criteria to match.</param>
        <summary>Returns the first child or descendant element that matches the specified condition.</summary>
        <returns>The first element that satisfies the condition, or <see langword="null" /> if no match is found.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O escopo da pesquisa é relativo ao elemento no qual o método é chamado.  
  
 Ao procurar por uma janela de nível superior na área de trabalho, certifique-se de especificar <xref:System.Windows.Automation.TreeScope.Children> na `scope`, e não <xref:System.Windows.Automation.TreeScope.Descendants>. Uma pesquisa a subárvore inteira da área de trabalho pode iterar por meio de milhares de itens e levar a um estouro de pilha.  
  
 Se seu aplicativo cliente pode tentar localizar elementos em sua própria interface do usuário, você deve fazer todas as [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] chama em um thread separado.  
  
   
  
## Examples  
 O exemplo a seguir mostra como localizar uma janela filho de seu identificador.  
  
 [!code-csharp[UIAClient_snip#110](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#110)]
 [!code-vb[UIAClient_snip#110](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#110)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.FindAll(System.Windows.Automation.TreeScope,System.Windows.Automation.Condition)" />
      </Docs>
    </Member>
    <Member MemberName="FocusedElement">
      <MemberSignature Language="C#" Value="public static System.Windows.Automation.AutomationElement FocusedElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Automation.AutomationElement FocusedElement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.FocusedElement" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property FocusedElement As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Automation::AutomationElement ^ FocusedElement { System::Windows::Automation::AutomationElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FocusedElement : System.Windows.Automation.AutomationElement" Usage="System.Windows.Automation.AutomationElement.FocusedElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.Automation.AutomationElement" /> that currently has focus.</summary>
        <value>O foco [! Elemento include[TLA2#tla_ui](~/Includes/tla2sharptla-UI-MD.MD)].</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se seu aplicativo cliente pode tentar localizar elementos em sua própria interface do usuário, você deve fazer todas as [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] chama em um thread separado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FrameworkIdProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty FrameworkIdProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty FrameworkIdProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.FrameworkIdProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FrameworkIdProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ FrameworkIdProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FrameworkIdProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.FrameworkIdProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.FrameworkId" /> property.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse identificador é usado por aplicativos cliente de automação de interface do usuário. Provedores de automação de interface do usuário devem usar o identificador equivalente no <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Valores de retorno da propriedade são do tipo <xref:System.String>. O valor padrão é uma cadeia de caracteres vazia.  
  
 Essa propriedade permite que aplicativos aplicam casos especiais às estruturas de interface do usuário inteiras. Exemplos de valores de propriedade são "Win32", "WinForm" e "DirectUI".  
  
   
  
## Examples  
 O exemplo a seguir recupera o valor atual da propriedade.  
  
 [!code-csharp[UIAClient_snip#139](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#139)]
 [!code-vb[UIAClient_snip#139](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#139)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromHandle">
      <MemberSignature Language="C#" Value="public static System.Windows.Automation.AutomationElement FromHandle (IntPtr hwnd);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Automation.AutomationElement FromHandle(native int hwnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.FromHandle(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHandle (hwnd As IntPtr) As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Automation::AutomationElement ^ FromHandle(IntPtr hwnd);" />
      <MemberSignature Language="F#" Value="static member FromHandle : nativeint -&gt; System.Windows.Automation.AutomationElement" Usage="System.Windows.Automation.AutomationElement.FromHandle hwnd" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hwnd" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hwnd">The handle of the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] element.</param>
        <summary>Retrieves a new <see cref="T:System.Windows.Automation.AutomationElement" /> object for the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] item referenced by the specified window handle.</summary>
        <returns>An <see cref="T:System.Windows.Automation.AutomationElement" /> for the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] item identified by <paramref name="hwnd" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.FromPoint(System.Windows.Point)" />
      </Docs>
    </Member>
    <Member MemberName="FromLocalProvider">
      <MemberSignature Language="C#" Value="public static System.Windows.Automation.AutomationElement FromLocalProvider (System.Windows.Automation.Provider.IRawElementProviderSimple localImpl);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Automation.AutomationElement FromLocalProvider(class System.Windows.Automation.Provider.IRawElementProviderSimple localImpl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.FromLocalProvider(System.Windows.Automation.Provider.IRawElementProviderSimple)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromLocalProvider (localImpl As IRawElementProviderSimple) As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Automation::AutomationElement ^ FromLocalProvider(System::Windows::Automation::Provider::IRawElementProviderSimple ^ localImpl);" />
      <MemberSignature Language="F#" Value="static member FromLocalProvider : System.Windows.Automation.Provider.IRawElementProviderSimple -&gt; System.Windows.Automation.AutomationElement" Usage="System.Windows.Automation.AutomationElement.FromLocalProvider localImpl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localImpl" Type="System.Windows.Automation.Provider.IRawElementProviderSimple" />
      </Parameters>
      <Docs>
        <param name="localImpl">The provider object.</param>
        <summary>Retrieves a new <see cref="T:System.Windows.Automation.AutomationElement" /> object from a local <see cref="T:System.Windows.Automation.Provider.IRawElementProviderSimple" /> implementation.</summary>
        <returns>An <see cref="T:System.Windows.Automation.AutomationElement" /> that represents the element served by the provider object.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método pode ser usado por uma biblioteca do auxiliar de cliente para habilitar os chamadores acessem seu próprio tipo de elemento nativo. Por exemplo, [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] usa esse método internamente para que ele possa retornar um <xref:System.Windows.Automation.AutomationElement> aos clientes que desejam obter uma [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] elemento diretamente de um <xref:System.Windows.UIElement>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromPoint">
      <MemberSignature Language="C#" Value="public static System.Windows.Automation.AutomationElement FromPoint (System.Windows.Point pt);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Automation.AutomationElement FromPoint(valuetype System.Windows.Point pt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.FromPoint(System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromPoint (pt As Point) As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Automation::AutomationElement ^ FromPoint(System::Windows::Point pt);" />
      <MemberSignature Language="F#" Value="static member FromPoint : System.Windows.Point -&gt; System.Windows.Automation.AutomationElement" Usage="System.Windows.Automation.AutomationElement.FromPoint pt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="pt">The physical screen coordinates on the desktop at which to locate the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] element.</param>
        <summary>Retrieves a new <see cref="T:System.Windows.Automation.AutomationElement" /> object for the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] item at specified point on the desktop.</summary>
        <returns>The [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] item at the specified point.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement.FromPoint%2A> Retorna o elemento na árvore lógica que está mais próximo ao elemento raiz.  
  
 Se seu aplicativo cliente pode tentar localizar elementos em sua própria interface do usuário, você deve fazer todas as [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] chama em um thread separado.  
  
 Embora o ponto está dentro do retângulo delimitador do retornado <xref:System.Windows.Automation.AutomationElement>, ele não é necessariamente uma parte clicável do controle. Por exemplo, um botão redondo pode não ser clicável perto de um dos cantos de seu retângulo delimitador.  
  
   
  
## Examples  
 O exemplo a seguir recupera o <xref:System.Windows.Automation.AutomationElement> no local do cursor do sistema.  
  
 [!code-csharp[UIAClient_snip#181](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#181)]
 [!code-vb[UIAClient_snip#181](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#181)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.FromHandle(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="GetCachedPattern">
      <MemberSignature Language="C#" Value="public object GetCachedPattern (System.Windows.Automation.AutomationPattern pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetCachedPattern(class System.Windows.Automation.AutomationPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetCachedPattern(System.Windows.Automation.AutomationPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCachedPattern (pattern As AutomationPattern) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetCachedPattern(System::Windows::Automation::AutomationPattern ^ pattern);" />
      <MemberSignature Language="F#" Value="member this.GetCachedPattern : System.Windows.Automation.AutomationPattern -&gt; obj" Usage="automationElement.GetCachedPattern pattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.Windows.Automation.AutomationPattern" />
      </Parameters>
      <Docs>
        <param name="pattern">The identifier of the pattern to retrieve.</param>
        <summary>Retrieves the specified pattern from the cache of this <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <returns>An object representing the specified pattern. If there are no matching patterns, <see langword="null" /> is returned.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement.GetCachedPattern%2A> recupera o padrão especificado do cache. Para recuperar o objeto atual para o padrão especificado, chame <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A>.  
  
 Esse método gera uma exceção se o padrão solicitado não foi em cache anteriormente.  
  
   
  
## Examples  
 O exemplo a seguir mostra como armazenar em cache e recuperar um padrão.  
  
 [!code-csharp[UIAClient_snip#108](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#108)]
 [!code-vb[UIAClient_snip#108](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#108)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The requested pattern is not in the cache or is not supported by the element.</exception>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">The UI for the <see cref="T:System.Windows.Automation.AutomationElement" /> no longer exists.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCachedPropertyValue">
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Retrieves the cached value of the specified property from an <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A> recupera a propriedade especificada do cache do <xref:System.Windows.Automation.AutomationElement>. Para recuperar a propriedade atual, chame <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Automation.AutomationElement.Cached" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCachedPropertyValue">
      <MemberSignature Language="C#" Value="public object GetCachedPropertyValue (System.Windows.Automation.AutomationProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetCachedPropertyValue(class System.Windows.Automation.AutomationProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetCachedPropertyValue(System.Windows.Automation.AutomationProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCachedPropertyValue (property As AutomationProperty) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetCachedPropertyValue(System::Windows::Automation::AutomationProperty ^ property);" />
      <MemberSignature Language="F#" Value="member this.GetCachedPropertyValue : System.Windows.Automation.AutomationProperty -&gt; obj" Usage="automationElement.GetCachedPropertyValue property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Windows.Automation.AutomationProperty" />
      </Parameters>
      <Docs>
        <param name="property">The identifier of the property to retrieve.</param>
        <summary>Retrieves the value of the specified property from the cache of this <see cref="T:System.Windows.Automation.AutomationElement" />. An appropriate default value for the property type is returned for properties not explicitly supported by the target [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] element.</summary>
        <returns>An object containing the value of the specified property.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o provedor de automação de interface do usuário para o próprio elemento oferece suporte à propriedade, o valor da propriedade é retornado. Caso contrário, uma propriedade padrão especificado pelo [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] será retornado. Para obter informações sobre as propriedades padrão, consulte os campos de identificador de propriedade de <xref:System.Windows.Automation.AutomationElement>, tais como <xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty>.  
  
 <xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A> recupera a propriedade especificada do <xref:System.Windows.Automation.AutomationElement>do cache. Para recuperar o objeto atual para a chamada de propriedade especificada <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>.  
  
 Esse método gera uma exceção se a propriedade solicitada não estava em cache anteriormente.  
  
   
  
## Examples  
 O exemplo a seguir mostra como esse método pode ser usado para recuperar uma propriedade em cache.  
  
 [!code-csharp[UIAClient_snip#108](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#108)]
 [!code-vb[UIAClient_snip#108](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#108)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The requested property is not in the cache.</exception>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">The [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] for the <see cref="T:System.Windows.Automation.AutomationElement" /> no longer exists.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCachedPropertyValue">
      <MemberSignature Language="C#" Value="public object GetCachedPropertyValue (System.Windows.Automation.AutomationProperty property, bool ignoreDefaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetCachedPropertyValue(class System.Windows.Automation.AutomationProperty property, bool ignoreDefaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetCachedPropertyValue(System.Windows.Automation.AutomationProperty,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCachedPropertyValue (property As AutomationProperty, ignoreDefaultValue As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetCachedPropertyValue(System::Windows::Automation::AutomationProperty ^ property, bool ignoreDefaultValue);" />
      <MemberSignature Language="F#" Value="member this.GetCachedPropertyValue : System.Windows.Automation.AutomationProperty * bool -&gt; obj" Usage="automationElement.GetCachedPropertyValue (property, ignoreDefaultValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Windows.Automation.AutomationProperty" />
        <Parameter Name="ignoreDefaultValue" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="property">The identifier of the property to retrieve.</param>
        <param name="ignoreDefaultValue">A value that specifies whether a default value should be ignored if the specified property is not supported.</param>
        <summary>Retrieves the value of the specified property from the cache of this <see cref="T:System.Windows.Automation.AutomationElement" />, optionally ignoring any default property.</summary>
        <returns>An object containing the value of the specified property, or <see cref="F:System.Windows.Automation.AutomationElement.NotSupported" /> if the element does not supply a value and <paramref name="ignoreDefaultValue" /> is <see langword="true" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A> recupera a propriedade especificada do cache para o <xref:System.Windows.Automation.AutomationElement>. Para recuperar a propriedade atual, chame <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>.  
  
 Passando `false` na `ignoreDefaultValue` é equivalente a chamar <xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%28System.Windows.Automation.AutomationProperty%29?displayProperty=nameWithType>.  
  
 Se o provedor de automação de interface do usuário para o próprio elemento oferece suporte à propriedade, o valor da propriedade é retornado. Caso contrário, se `ignoreDefaultValue` está `false`, uma propriedade padrão especificada pelo [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] será retornado. Para obter informações sobre as propriedades padrão, consulte os campos de identificador de propriedade de <xref:System.Windows.Automation.AutomationElement>, tais como <xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty>.  
  
 Esse método gera uma exceção se a propriedade solicitada não estava em cache anteriormente.  
  
   
  
## Examples  
 O exemplo a seguir mostra como esse método pode ser usado para recuperar uma propriedade em cache.  
  
 [!code-csharp[UIAClient_snip#108](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#108)]
 [!code-vb[UIAClient_snip#108](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#108)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The requested property is not in the cache.</exception>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">The UI for the <see cref="T:System.Windows.Automation.AutomationElement" /> no longer exists.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetClickablePoint">
      <MemberSignature Language="C#" Value="public System.Windows.Point GetClickablePoint ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Point GetClickablePoint() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetClickablePoint" />
      <MemberSignature Language="VB.NET" Value="Public Function GetClickablePoint () As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Point GetClickablePoint();" />
      <MemberSignature Language="F#" Value="member this.GetClickablePoint : unit -&gt; System.Windows.Point" Usage="automationElement.GetClickablePoint " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieves a point on the <see cref="T:System.Windows.Automation.AutomationElement" /> that can be clicked.</summary>
        <returns>The physical screen coordinates of a point that can be used by a client to click on this element.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um <xref:System.Windows.Automation.AutomationElement> não é clicável se ela é completamente obscurecida por outra janela.  
  
 Um <xref:System.Windows.Automation.AutomationElement> é clicável quando ele satisfaz as seguintes condições:  
  
-   É por meio de programação visível e disponível com o [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] árvore.  
  
-   Ele é rolado totalmente para a exibição em seu contêiner pai, se houver. Se o elemento é recortado, não há nenhuma garantia de que ele é clicável.  
  
-   O elemento não é obscurecido por qualquer outro elemento de interface do usuário. Se o elemento é parcialmente obscurecido por algum elemento de interface do usuário que não sejam seus ancestrais, talvez não seja clicável.  
  
-   A janela que contém o elemento deve ser clicável. Por exemplo, a janela não é clicável, se a janela é completamente transparente. Cliques do mouse serão clique para a janela abaixo, portanto, todos os controles dentro da janela transparente não retornará pontos clicáveis.  
  
-   Se o elemento é um contêiner (por exemplo, o modo de exibição de lista ou árvore), ele deve ter um ponto que, quando clicado irá fazer com que o plano de fundo do controle para se concentrar. Se todas as partes do controle de contêiner está ocupada por um elemento filho, não é clicável.  
  
 Não há nenhuma garantia de que um controle fará nada quando clica em um ponto definido como clicável pelo provedor de automação de interface do usuário. Considere usar padrões de controle para executar ações em controles.  
  
   
  
## Examples  
 O código a seguir recupera um ponto clicável para um controle e move o cursor do sistema para esse ponto.  
  
 [!code-csharp[UIAClient_snip#179](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#179)]
 [!code-vb[UIAClient_snip#179](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#179)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.NoClickablePointException">There is no clickable point.</exception>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">The UI for the <see cref="T:System.Windows.Automation.AutomationElement" /> no longer exists.</exception>
        <altmember cref="M:System.Windows.Automation.AutomationElement.TryGetClickablePoint(System.Windows.Point@)" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentPattern">
      <MemberSignature Language="C#" Value="public object GetCurrentPattern (System.Windows.Automation.AutomationPattern pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetCurrentPattern(class System.Windows.Automation.AutomationPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetCurrentPattern(System.Windows.Automation.AutomationPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentPattern (pattern As AutomationPattern) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetCurrentPattern(System::Windows::Automation::AutomationPattern ^ pattern);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentPattern : System.Windows.Automation.AutomationPattern -&gt; obj" Usage="automationElement.GetCurrentPattern pattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.Windows.Automation.AutomationPattern" />
      </Parameters>
      <Docs>
        <param name="pattern">The identifier of the pattern to retrieve.</param>
        <summary>Retrieves the specified pattern object on this <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <returns>The pattern object, if the specified pattern is currently supported by the <see cref="T:System.Windows.Automation.AutomationElement" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A> Obtém o padrão especificado com base em sua disponibilidade no momento da chamada.  
  
 Para algumas formas de [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)], esse método incorrerão em sobrecarga desempenho de processo cruzado. Aplicativos podem se concentrar sobrecarga por padrões de cache e, em seguida, recuperá-los usando <xref:System.Windows.Automation.AutomationElement.GetCachedPattern%2A>.  
  
   
  
## Examples  
 O exemplo a seguir mostra como usar esse método para recuperar um <xref:System.Windows.Automation.SelectionItemPattern>, que é usado para selecionar um item em uma caixa de listagem.  
  
 [!code-csharp[UIAClient_snip#103](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#103)]
 [!code-vb[UIAClient_snip#103](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#103)]  
  
> [!NOTE]
>  Para tarefas repetidas com frequência, como o exemplo, seria mais eficiente para armazenar em cache o padrão e usar <xref:System.Windows.Automation.AutomationElement.GetCachedPattern%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The pattern is not supported by the element.</exception>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">The UI for the <see cref="T:System.Windows.Automation.AutomationElement" /> no longer exists.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrentPropertyValue">
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Retrieves the current value of the specified property from an <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O valor retornado pelo <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A> é o método atual no momento em que ele é chamado. O valor pode ser alterado posteriormente por outros aplicativos que interagem com o [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].  
  
 Para algumas formas de [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)], esse método incorrerão em sobrecarga desempenho de processo cruzado. Aplicativos podem se concentrar sobrecarga por propriedades de cache e, em seguida, recuperá-los usando <xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Automation.AutomationElement.Current" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrentPropertyValue">
      <MemberSignature Language="C#" Value="public object GetCurrentPropertyValue (System.Windows.Automation.AutomationProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetCurrentPropertyValue(class System.Windows.Automation.AutomationProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue(System.Windows.Automation.AutomationProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentPropertyValue (property As AutomationProperty) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetCurrentPropertyValue(System::Windows::Automation::AutomationProperty ^ property);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentPropertyValue : System.Windows.Automation.AutomationProperty -&gt; obj" Usage="automationElement.GetCurrentPropertyValue property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Windows.Automation.AutomationProperty" />
      </Parameters>
      <Docs>
        <param name="property">The [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] property identifier specifying which property to retrieve.</param>
        <summary>Retrieves the value of the specified property on this <see cref="T:System.Windows.Automation.AutomationElement" />. An appropriate default value for the property type is returned for properties not explicitly supported by the target [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] element.</summary>
        <returns>An object containing the value of the specified property.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O valor retornado pelo <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A> é o método atual no momento em que ele é chamado. O valor pode ser alterado posteriormente por outros aplicativos que interagem com o [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].  
  
 Se o provedor de automação de interface do usuário para o próprio elemento oferece suporte à propriedade, o valor da propriedade é retornado. Caso contrário, uma propriedade padrão especificado pelo [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] será retornado. Para obter informações sobre as propriedades padrão, consulte os campos de identificador de propriedade de <xref:System.Windows.Automation.AutomationElement>, tais como <xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty>.  
  
 Para algumas formas de [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)], esse método incorrerão em sobrecarga desempenho de processo cruzado. Concentre-se a sobrecarga por propriedades de cache e, em seguida, recuperá-los usando <xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A>.  
  
   
  
## Examples  
 O exemplo a seguir recupera o valor atual do <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.HelpText%2A> propriedade. O valor padrão será retornado se o elemento não fornecer um.  
  
 [!code-csharp[UIAClient_snip#126](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#126)]
 [!code-vb[UIAClient_snip#126](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#126)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">The UI for the <see cref="T:System.Windows.Automation.AutomationElement" /> no longer exists.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentPropertyValue">
      <MemberSignature Language="C#" Value="public object GetCurrentPropertyValue (System.Windows.Automation.AutomationProperty property, bool ignoreDefaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetCurrentPropertyValue(class System.Windows.Automation.AutomationProperty property, bool ignoreDefaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue(System.Windows.Automation.AutomationProperty,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentPropertyValue (property As AutomationProperty, ignoreDefaultValue As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetCurrentPropertyValue(System::Windows::Automation::AutomationProperty ^ property, bool ignoreDefaultValue);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentPropertyValue : System.Windows.Automation.AutomationProperty * bool -&gt; obj" Usage="automationElement.GetCurrentPropertyValue (property, ignoreDefaultValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Windows.Automation.AutomationProperty" />
        <Parameter Name="ignoreDefaultValue" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="property">The [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] property identifier specifying which property to retrieve.</param>
        <param name="ignoreDefaultValue">A value that specifies whether a default value should be ignored if the specified property is supported.</param>
        <summary>Retrieves the value of the specified property on this <see cref="T:System.Windows.Automation.AutomationElement" />, optionally ignoring any default property.</summary>
        <returns>An object containing the value of the specified property, or <see cref="F:System.Windows.Automation.AutomationElement.NotSupported" /> if the element does not supply a value and <paramref name="ignoreDefaultValue" /> is <see langword="true" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Passando `false` na `ignoreDefaultValue` é equivalente a chamar <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%28System.Windows.Automation.AutomationProperty%29?displayProperty=nameWithType>.  
  
 Se o provedor de automação de interface do usuário para o próprio elemento oferece suporte à propriedade, o valor da propriedade é retornado. Caso contrário, se `ignoreDefaultValue` está `false`, uma propriedade padrão especificada pelo [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] será retornado. Para obter informações sobre as propriedades padrão, consulte os campos de identificador de propriedade de <xref:System.Windows.Automation.AutomationElement>, tais como <xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty>.  
  
 O valor retornado pelo <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A> é o método atual no momento em que ele é chamado. O valor pode ser alterado posteriormente por outros aplicativos que interagem com o [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].  
  
 Para algumas formas de [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)], esse método incorrerão em sobrecarga desempenho de processo cruzado. Aplicativos podem se concentrar sobrecarga por propriedades de cache e, em seguida, recuperá-los usando <xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A>.  
  
   
  
## Examples  
 O exemplo a seguir recupera o valor atual do <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.HelpText%2A> propriedade, mas Especifica que, se o elemento em si não fornecer um valor para a propriedade <xref:System.Windows.Automation.AutomationElement.NotSupported> deve ser retornado em vez de um valor padrão.  
  
 [!code-csharp[UIAClient_snip#123](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#123)]
 [!code-vb[UIAClient_snip#123](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#123)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">The UI for the <see cref="T:System.Windows.Automation.AutomationElement" /> no longer exists.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="automationElement.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieves the hash code for this <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <returns>The 32-bit signed integer hash code.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeId">
      <MemberSignature Language="C#" Value="public int[] GetRuntimeId ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32[] GetRuntimeId() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetRuntimeId" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRuntimeId () As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;int&gt; ^ GetRuntimeId();" />
      <MemberSignature Language="F#" Value="member this.GetRuntimeId : unit -&gt; int[]" Usage="automationElement.GetRuntimeId " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieves the unique identifier assigned to the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] item.</summary>
        <returns>An array of integers representing the run-time identifier.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O identificador é garantido somente para ser exclusivo para o [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] da área de trabalho no qual ele foi gerado. Identificadores podem ser reutilizados ao longo do tempo.  
  
 O formato de identificadores de tempo de execução pode mudar em versões futuras. O identificador retornado deve ser tratado como um valor opaco e usado apenas para comparação. Por exemplo, para determinar se um <xref:System.Windows.Automation.AutomationElement> estiver no cache.  
  
   
  
## Examples  
 O exemplo a seguir mostra como recuperar o identificador de tempo de execução de um <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIAClient_snip#111](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#111)]
 [!code-vb[UIAClient_snip#111](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#111)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">The UI for the <see cref="T:System.Windows.Automation.AutomationElement" /> no longer exists.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSupportedPatterns">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationPattern[] GetSupportedPatterns ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationPattern[] GetSupportedPatterns() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetSupportedPatterns" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSupportedPatterns () As AutomationPattern()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Windows::Automation::AutomationPattern ^&gt; ^ GetSupportedPatterns();" />
      <MemberSignature Language="F#" Value="member this.GetSupportedPatterns : unit -&gt; System.Windows.Automation.AutomationPattern[]" Usage="automationElement.GetSupportedPatterns " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationPattern[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieves the control patterns that this <see cref="T:System.Windows.Automation.AutomationElement" /> supports.</summary>
        <returns>An array of <see cref="T:System.Windows.Automation.AutomationPattern" /> objects that represent the supported control patterns.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método costumam ser usado para depuração. Chamando-o exige uma grande quantidade de processamento, pois ele consulta o <xref:System.Windows.Automation.AutomationElement> para cada padrão de possíveis. Normalmente você usaria <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A> para recuperar um padrão de controle específico de um <xref:System.Windows.Automation.AutomationElement>. Para determinar se um padrão específico tem suporte, verifique a propriedade apropriada; Por exemplo, <xref:System.Windows.Automation.AutomationElement.IsWindowPatternAvailableProperty>.  
  
   
  
## Examples  
 O exemplo a seguir mostra como recuperar os padrões de controle com suporte por um <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIAClient_snip#114](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#114)]
 [!code-vb[UIAClient_snip#114](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#114)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSupportedProperties">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationProperty[] GetSupportedProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationProperty[] GetSupportedProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetSupportedProperties" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSupportedProperties () As AutomationProperty()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Windows::Automation::AutomationProperty ^&gt; ^ GetSupportedProperties();" />
      <MemberSignature Language="F#" Value="member this.GetSupportedProperties : unit -&gt; System.Windows.Automation.AutomationProperty[]" Usage="automationElement.GetSupportedProperties " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieves the identifiers of properties supported by the element.</summary>
        <returns>An array of supported property identifiers.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A matriz retornada identifica todas as propriedades suportadas por esse elemento; No entanto, ele também pode conter entradas duplicadas ou propriedades que contêm `null` ou valores vazios. Para a maioria das finalidades, é melhor usar <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A> para determinar se uma propriedade no momento tem suporte e obter seu valor atual.  
  
   
  
## Examples  
 O exemplo a seguir mostra como recuperar as propriedades com suporte por um <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIAClient_snip#115](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#115)]
 [!code-vb[UIAClient_snip#115](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#115)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUpdatedCache">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement GetUpdatedCache (System.Windows.Automation.CacheRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationElement GetUpdatedCache(class System.Windows.Automation.CacheRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetUpdatedCache(System.Windows.Automation.CacheRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUpdatedCache (request As CacheRequest) As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::AutomationElement ^ GetUpdatedCache(System::Windows::Automation::CacheRequest ^ request);" />
      <MemberSignature Language="F#" Value="member this.GetUpdatedCache : System.Windows.Automation.CacheRequest -&gt; System.Windows.Automation.AutomationElement" Usage="automationElement.GetUpdatedCache request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Windows.Automation.CacheRequest" />
      </Parameters>
      <Docs>
        <param name="request">The patterns and properties to include in the updated cache.</param>
        <summary>Retrieves a new <see cref="T:System.Windows.Automation.AutomationElement" /> with an updated cache.</summary>
        <returns>A new <see cref="T:System.Windows.Automation.AutomationElement" /> that has an updated cache.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Original <xref:System.Windows.Automation.AutomationElement> é alterado. <xref:System.Windows.Automation.AutomationElement.GetUpdatedCache%2A> Retorna um novo <xref:System.Windows.Automation.AutomationElement>, que se refere à mesma [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] e tem o mesmo <xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty>.  
  
   
  
## Examples  
 O exemplo a seguir demonstra como um cache pode ser atualizado sempre que a seleção em uma caixa de combinação é alterada.  
  
 [!code-csharp[UIAClient_snip#109](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#109)]
 [!code-vb[UIAClient_snip#109](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#109)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasKeyboardFocusProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty HasKeyboardFocusProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty HasKeyboardFocusProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.HasKeyboardFocusProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HasKeyboardFocusProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ HasKeyboardFocusProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable HasKeyboardFocusProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.HasKeyboardFocusProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.HasKeyboardFocus" /> property.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse identificador é usado por aplicativos cliente de automação de interface do usuário. Provedores de automação de interface do usuário devem usar o identificador equivalente no <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Essa propriedade também pode ser recuperada do <xref:System.Windows.Automation.AutomationElement.Current%2A> ou <xref:System.Windows.Automation.AutomationElement.Cached%2A> propriedades.  
  
 Valores de retorno da propriedade são do tipo <xref:System.Boolean>. O valor padrão para a propriedade é `false`.  
  
   
  
## Examples  
 O exemplo a seguir recupera o valor atual da propriedade. O valor padrão será retornado se o elemento não fornecer um.  
  
 [!code-csharp[UIAClient_snip#140](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#140)]
 [!code-vb[UIAClient_snip#140](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#140)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HelpTextProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty HelpTextProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty HelpTextProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.HelpTextProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HelpTextProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ HelpTextProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable HelpTextProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.HelpTextProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.HelpText" /> property.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse identificador é usado por aplicativos cliente de automação de interface do usuário. Provedores de automação de interface do usuário devem usar o identificador equivalente no <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Essa propriedade também pode ser recuperada do <xref:System.Windows.Automation.AutomationElement.Current%2A> ou <xref:System.Windows.Automation.AutomationElement.Cached%2A> propriedades.  
  
 Normalmente, essas informações são obtidas nas dicas de ferramenta especificada pelos provedores.  
  
 Valores de retorno da propriedade são do tipo <xref:System.String>. O valor padrão para a propriedade é uma cadeia de caracteres vazia.  
  
   
  
## Examples  
 O exemplo a seguir recupera o valor atual da propriedade. O valor padrão será retornado se o elemento não fornecer um.  
  
 [!code-csharp[UIAClient_snip#126](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#126)]
 [!code-vb[UIAClient_snip#126](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#126)]  
  
 O exemplo a seguir recupera o valor atual da propriedade, mas Especifica que, se o elemento em si não fornecer um valor para a propriedade <xref:System.Windows.Automation.AutomationElement.NotSupported> deve ser retornado em vez de um valor padrão.  
  
 [!code-csharp[UIAClient_snip#123](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#123)]
 [!code-vb[UIAClient_snip#123](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#123)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsContentElementProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsContentElementProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsContentElementProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsContentElementProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsContentElementProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsContentElementProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsContentElementProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsContentElementProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsContentElement" /> property.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse identificador é usado por aplicativos cliente de automação de interface do usuário. Provedores de automação de interface do usuário devem usar o identificador equivalente no <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Essa propriedade também pode ser recuperada do <xref:System.Windows.Automation.AutomationElement.Current%2A> ou <xref:System.Windows.Automation.AutomationElement.Cached%2A> propriedades.  
  
 Exibição de conteúdo a [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] árvore fornece uma exibição do [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] que contenha apenas elementos que representam os dados dentro do [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].  
  
 Um elemento deve ser um controle para ser capaz de manter o conteúdo.  
  
 Valores de retorno da propriedade são do tipo <xref:System.Boolean>. O valor padrão para a propriedade é `true`.  
  
   
  
## Examples  
 O exemplo a seguir recupera o valor atual da propriedade. O valor padrão será retornado se o elemento não fornecer um.  
  
 [!code-csharp[UIAClient_snip#141](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#141)]
 [!code-vb[UIAClient_snip#141](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#141)]  
  
 O exemplo a seguir recupera o valor atual da propriedade, mas Especifica que, se o elemento em si não fornecer um valor para a propriedade <xref:System.Windows.Automation.AutomationElement.NotSupported> deve ser retornado em vez de um valor padrão.  
  
 [!code-csharp[UIAClient_snip#142](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#142)]
 [!code-vb[UIAClient_snip#142](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#142)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Automation.Automation.ContentViewCondition" />
      </Docs>
    </Member>
    <Member MemberName="IsControlElementProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsControlElementProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsControlElementProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsControlElementProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsControlElementProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsControlElementProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsControlElementProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsControlElementProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsControlElement" /> property.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse identificador é usado por aplicativos cliente de automação de interface do usuário. Provedores de automação de interface do usuário devem usar o identificador equivalente no <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Essa propriedade também pode ser recuperada do <xref:System.Windows.Automation.AutomationElement.Current%2A> ou <xref:System.Windows.Automation.AutomationElement.Cached%2A> propriedades.  
  
 Os controles são elementos que um usuário percebe como interativas ou que contém informações de [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].  
  
 Valores de retorno da propriedade são do tipo <xref:System.Boolean>. O valor padrão para a propriedade é `true`.  
  
   
  
## Examples  
 O exemplo a seguir recupera o valor atual da propriedade. O valor padrão será retornado se o elemento não fornecer um.  
  
 [!code-csharp[UIAClient_snip#143](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#143)]
 [!code-vb[UIAClient_snip#143](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#143)]  
  
 O exemplo a seguir recupera o valor atual da propriedade, mas Especifica que, se o elemento em si não fornecer um valor para a propriedade <xref:System.Windows.Automation.AutomationElement.NotSupported> deve ser retornado em vez de um valor padrão.  
  
 [!code-csharp[UIAClient_snip#144](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#144)]
 [!code-vb[UIAClient_snip#144](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#144)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Automation.Automation.ControlViewCondition" />
      </Docs>
    </Member>
    <Member MemberName="IsDockPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsDockPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsDockPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsDockPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsDockPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsDockPatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsDockPatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsDockPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the property that indicates whether the <see cref="T:System.Windows.Automation.DockPattern" /> control pattern is available on this <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse identificador é usado por aplicativos cliente de automação de interface do usuário. Provedores de automação de interface do usuário devem usar o identificador equivalente no <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Valores de retorno da propriedade são do tipo <xref:System.Boolean>. O valor padrão para a propriedade é `false`.  
  
   
  
## Examples  
 O exemplo a seguir ascertains se um padrão de controle especificado é compatível com um <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsEnabledProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsEnabledProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsEnabledProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled" /> property, which specifies whether the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] item referenced by the <see cref="T:System.Windows.Automation.AutomationElement" /> is enabled.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse identificador é usado por aplicativos cliente de automação de interface do usuário. Provedores de automação de interface do usuário devem usar o identificador equivalente no <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Essa propriedade também pode ser recuperada do <xref:System.Windows.Automation.AutomationElement.Current%2A> ou <xref:System.Windows.Automation.AutomationElement.Cached%2A> propriedades.  
  
 Valores de retorno da propriedade são do tipo <xref:System.Boolean>. O valor padrão para a propriedade é `false`.  
  
 Quando o estado ativado de um controle é `false`, supõe-se que os controles filho também não estão habilitados. Você não deve esperar eventos com propriedade alterada de elementos filho quando o estado do pai é alterado.  
  
   
  
## Examples  
 O exemplo a seguir recupera o valor atual da propriedade. O valor padrão será retornado se o elemento não fornecer um.  
  
 [!code-csharp[UIAClient_snip#146](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#146)]
 [!code-vb[UIAClient_snip#146](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#146)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsExpandCollapsePatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsExpandCollapsePatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsExpandCollapsePatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsExpandCollapsePatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsExpandCollapsePatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsExpandCollapsePatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsExpandCollapsePatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsExpandCollapsePatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the property that indicates whether the <see cref="T:System.Windows.Automation.ExpandCollapsePattern" /> control pattern is available on this <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse identificador é usado por aplicativos cliente de automação de interface do usuário. Provedores de automação de interface do usuário devem usar o identificador equivalente no <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Valores de retorno da propriedade são do tipo <xref:System.Boolean>. O valor padrão para a propriedade é `false`.  
  
   
  
## Examples  
 O exemplo a seguir recupera um valor que especifica se um padrão de controle especificado é compatível com um <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsGridItemPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsGridItemPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsGridItemPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsGridItemPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsGridItemPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsGridItemPatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsGridItemPatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsGridItemPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the property that indicates whether the <see cref="T:System.Windows.Automation.GridItemPattern" /> control pattern is available on this <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse identificador é usado por aplicativos cliente de automação de interface do usuário. Provedores de automação de interface do usuário devem usar o identificador equivalente no <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Valores de retorno da propriedade são do tipo <xref:System.Boolean>. O valor padrão para a propriedade é `false`.  
  
   
  
## Examples  
 O exemplo a seguir ascertains se um padrão de controle especificado é compatível com um <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsGridPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsGridPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsGridPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsGridPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsGridPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsGridPatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsGridPatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsGridPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the property that indicates whether the <see cref="T:System.Windows.Automation.GridPattern" /> control pattern is available on this <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse identificador é usado por aplicativos cliente de automação de interface do usuário. Provedores de automação de interface do usuário devem usar o identificador equivalente no <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Valores de retorno da propriedade são do tipo <xref:System.Boolean>. O valor padrão para a propriedade é `false`.  
  
   
  
## Examples  
 O exemplo a seguir ascertains se um padrão de controle especificado é compatível com um <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInvokePatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsInvokePatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsInvokePatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsInvokePatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsInvokePatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsInvokePatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsInvokePatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsInvokePatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the property that indicates whether the <see cref="T:System.Windows.Automation.InvokePattern" /> control pattern is available on this <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse identificador é usado por aplicativos cliente de automação de interface do usuário. Provedores de automação de interface do usuário devem usar o identificador equivalente no <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Valores de retorno da propriedade são do tipo <xref:System.Boolean>. O valor padrão para a propriedade é `false`.  
  
   
  
## Examples  
 O exemplo a seguir ascertains se um padrão de controle especificado é compatível com um <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsItemContainerPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsItemContainerPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsItemContainerPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsItemContainerPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsItemContainerPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsItemContainerPatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsItemContainerPatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsItemContainerPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the property that indicates whether the <see cref="T:System.Windows.Automation.ItemContainerPattern" /> control pattern is available on this <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsKeyboardFocusableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsKeyboardFocusableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsKeyboardFocusableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsKeyboardFocusableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsKeyboardFocusableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsKeyboardFocusableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsKeyboardFocusableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsKeyboardFocusable" /> property.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse identificador é usado por aplicativos cliente de automação de interface do usuário. Provedores de automação de interface do usuário devem usar o identificador equivalente no <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Essa propriedade também pode ser recuperada do <xref:System.Windows.Automation.AutomationElement.Current%2A> ou <xref:System.Windows.Automation.AutomationElement.Cached%2A> propriedades.  
  
 A propriedade fornece informações necessárias para o funcionamento adequado do <xref:System.Windows.Automation.AutomationElement.SetFocus%2A> método.  
  
 Valores de retorno da propriedade são do tipo <xref:System.Boolean>. O valor padrão para a propriedade é `false`.  
  
   
  
## Examples  
 O exemplo a seguir recupera o valor atual da propriedade. O valor padrão será retornado se o elemento não fornecer um.  
  
 [!code-csharp[UIAClient_snip#147](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#147)]
 [!code-vb[UIAClient_snip#147](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#147)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMultipleViewPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsMultipleViewPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsMultipleViewPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsMultipleViewPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMultipleViewPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsMultipleViewPatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMultipleViewPatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsMultipleViewPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the property that indicates whether the <see cref="T:System.Windows.Automation.MultipleViewPattern" /> control pattern is available on this <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse identificador é usado por aplicativos cliente de automação de interface do usuário. Provedores de automação de interface do usuário devem usar o identificador equivalente no <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Valores de retorno da propriedade são do tipo <xref:System.Boolean>. O valor padrão para a propriedade é `false`.  
  
   
  
## Examples  
 O exemplo a seguir ascertains se um padrão de controle especificado é compatível com um <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOffscreenProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsOffscreenProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsOffscreenProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsOffscreenProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsOffscreenProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsOffscreenProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsOffscreenProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsOffscreenProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsOffscreen" /> property, which indicates whether the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] item is visible on the screen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse identificador é usado por aplicativos cliente de automação de interface do usuário. Provedores de automação de interface do usuário devem usar o identificador equivalente no <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Essa propriedade também pode ser recuperada do <xref:System.Windows.Automation.AutomationElement.Current%2A> ou <xref:System.Windows.Automation.AutomationElement.Cached%2A> propriedades.  
  
 O valor retornado é do tipo <xref:System.Boolean>, e o valor padrão é `false`.  
  
 Para obter mais informações sobre quando essa propriedade estará `true`, consulte <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsOffscreen%2A>.  
  
   
  
## Examples  
 O exemplo a seguir recupera o valor atual da propriedade. O valor padrão será retornado se o elemento não fornecer um.  
  
 [!code-csharp[UIAClient_snip#148](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#148)]
 [!code-vb[UIAClient_snip#148](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#148)]  
  
 O exemplo a seguir recupera o valor atual da propriedade, mas Especifica que, se o elemento em si não fornecer um valor para a propriedade <xref:System.Windows.Automation.AutomationElement.NotSupported> deve ser retornado em vez de um valor padrão.  
  
 [!code-csharp[UIAClient_snip#149](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#149)]
 [!code-vb[UIAClient_snip#149](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#149)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPasswordProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsPasswordProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsPasswordProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsPasswordProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsPasswordProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsPasswordProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsPasswordProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsPasswordProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsPassword" /> property.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse identificador é usado por aplicativos cliente de automação de interface do usuário. Provedores de automação de interface do usuário devem usar o identificador equivalente no <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Essa propriedade também pode ser recuperada do <xref:System.Windows.Automation.AutomationElement.Current%2A> ou <xref:System.Windows.Automation.AutomationElement.Cached%2A> propriedades.  
  
 O valor retornado para essa propriedade é um <xref:System.Boolean>. Ele retorna `true` para indicar que o conteúdo é protegido; caso contrário `false`.  
  
   
  
## Examples  
 O exemplo a seguir recupera o valor atual da propriedade.  
  
 [!code-csharp[UIAClient_snip#150](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#150)]
 [!code-vb[UIAClient_snip#150](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#150)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRangeValuePatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsRangeValuePatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsRangeValuePatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsRangeValuePatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsRangeValuePatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsRangeValuePatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsRangeValuePatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsRangeValuePatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the property that indicates whether the <see cref="T:System.Windows.Automation.RangeValuePattern" /> control pattern is available on this <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse identificador é usado por aplicativos cliente de automação de interface do usuário. Provedores de automação de interface do usuário devem usar o identificador equivalente no <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Valores de retorno da propriedade são do tipo <xref:System.Boolean>. O valor padrão para a propriedade é `false`.  
  
   
  
## Examples  
 O exemplo a seguir ascertains se um padrão de controle especificado é compatível com um <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRequiredForFormProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsRequiredForFormProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsRequiredForFormProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsRequiredForFormProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsRequiredForFormProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsRequiredForFormProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsRequiredForFormProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsRequiredForFormProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsRequiredForForm" /> property.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse identificador é usado por aplicativos cliente de automação de interface do usuário. Provedores de automação de interface do usuário devem usar o identificador equivalente no <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Essa propriedade também pode ser recuperada do <xref:System.Windows.Automation.AutomationElement.Current%2A> ou <xref:System.Windows.Automation.AutomationElement.Cached%2A> propriedades.  
  
 O valor de retorno para essa propriedade é do tipo <xref:System.Boolean>, e o valor padrão é `false`.  
  
   
  
## Examples  
 O exemplo a seguir recupera o valor atual da propriedade. O valor padrão será retornado se o elemento não fornecer um.  
  
 [!code-csharp[UIAClient_snip#151](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#151)]
 [!code-vb[UIAClient_snip#151](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#151)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsScrollItemPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsScrollItemPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsScrollItemPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsScrollItemPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsScrollItemPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsScrollItemPatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsScrollItemPatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsScrollItemPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the property that indicates whether the <see cref="T:System.Windows.Automation.ScrollItemPattern" /> control pattern is available for this <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse identificador é usado por aplicativos cliente de automação de interface do usuário. Provedores de automação de interface do usuário devem usar o identificador equivalente no <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Valores de retorno da propriedade são do tipo <xref:System.Boolean>. O valor padrão para a propriedade é `false`.  
  
   
  
## Examples  
 O exemplo a seguir ascertains se um padrão de controle especificado é compatível com um <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsScrollPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsScrollPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsScrollPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsScrollPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsScrollPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsScrollPatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsScrollPatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsScrollPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the property that indicates whether the <see cref="T:System.Windows.Automation.ScrollPattern" /> control pattern is available on this <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse identificador é usado por aplicativos cliente de automação de interface do usuário. Provedores de automação de interface do usuário devem usar o identificador equivalente no <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Valores de retorno da propriedade são do tipo <xref:System.Boolean>. O valor padrão para a propriedade é `false`.  
  
   
  
## Examples  
 O exemplo a seguir ascertains se um padrão de controle especificado é compatível com um <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSelectionItemPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsSelectionItemPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsSelectionItemPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsSelectionItemPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsSelectionItemPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsSelectionItemPatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsSelectionItemPatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsSelectionItemPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the property that indicates whether the <see cref="T:System.Windows.Automation.SelectionItemPattern" /> control pattern is available on this <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse identificador é usado por aplicativos cliente de automação de interface do usuário. Provedores de automação de interface do usuário devem usar o identificador equivalente no <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Valores de retorno da propriedade são do tipo <xref:System.Boolean>. O valor padrão para a propriedade é `false`.  
  
   
  
## Examples  
 O exemplo a seguir ascertains se um padrão de controle especificado é compatível com um <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSelectionPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsSelectionPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsSelectionPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsSelectionPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsSelectionPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsSelectionPatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsSelectionPatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsSelectionPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the property that indicates whether the <see cref="T:System.Windows.Automation.SelectionPattern" /> control pattern is available on this <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse identificador é usado por aplicativos cliente de automação de interface do usuário. Provedores de automação de interface do usuário devem usar o identificador equivalente no <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Valores de retorno da propriedade são do tipo <xref:System.Boolean>. O valor padrão para a propriedade é `false`.  
  
   
  
## Examples  
 O exemplo a seguir ascertains se um padrão de controle especificado é compatível com um <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronizedInputPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsSynchronizedInputPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsSynchronizedInputPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsSynchronizedInputPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsSynchronizedInputPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsSynchronizedInputPatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsSynchronizedInputPatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsSynchronizedInputPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the property that indicates whether the <see cref="T:System.Windows.Automation.SynchronizedInputPattern" /> control pattern is available on this <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTableItemPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsTableItemPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsTableItemPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsTableItemPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsTableItemPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsTableItemPatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsTableItemPatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsTableItemPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the property that indicates whether the <see cref="T:System.Windows.Automation.TableItemPattern" /> control pattern is available on this <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse identificador é usado por aplicativos cliente de automação de interface do usuário. Provedores de automação de interface do usuário devem usar o identificador equivalente no <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Valores de retorno da propriedade são do tipo <xref:System.Boolean>. O valor padrão para a propriedade é `false`.  
  
   
  
## Examples  
 O exemplo a seguir ascertains se um padrão de controle especificado é compatível com um <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTablePatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsTablePatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsTablePatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsTablePatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsTablePatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsTablePatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsTablePatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsTablePatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the property that indicates whether the <see cref="T:System.Windows.Automation.TablePattern" /> control pattern is available on this <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse identificador é usado por aplicativos cliente de automação de interface do usuário. Provedores de automação de interface do usuário devem usar o identificador equivalente no <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Valores de retorno da propriedade são do tipo <xref:System.Boolean>. O valor padrão para a propriedade é `false`.  
  
   
  
## Examples  
 O exemplo a seguir ascertains se um padrão de controle especificado é compatível com um <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTextPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsTextPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsTextPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsTextPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsTextPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsTextPatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsTextPatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsTextPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the property that indicates whether the <see cref="T:System.Windows.Automation.TextPattern" /> control pattern is available on this <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse identificador é usado por aplicativos cliente de automação de interface do usuário. Provedores de automação de interface do usuário devem usar o identificador equivalente no <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Valores de retorno da propriedade são do tipo <xref:System.Boolean>. O valor padrão para a propriedade é `false`.  
  
   
  
## Examples  
 O exemplo a seguir ascertains se um padrão de controle especificado é compatível com um <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTogglePatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsTogglePatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsTogglePatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsTogglePatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsTogglePatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsTogglePatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsTogglePatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsTogglePatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the property that indicates whether the <see cref="T:System.Windows.Automation.TogglePattern" /> control pattern is available on this <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse identificador é usado por aplicativos cliente de automação de interface do usuário. Provedores de automação de interface do usuário devem usar o identificador equivalente no <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Valores de retorno da propriedade são do tipo <xref:System.Boolean>. O valor padrão para a propriedade é `false`.  
  
   
  
## Examples  
 O exemplo a seguir ascertains se um padrão de controle especificado é compatível com um <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTransformPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsTransformPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsTransformPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsTransformPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsTransformPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsTransformPatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsTransformPatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsTransformPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the property that indicates whether the <see cref="T:System.Windows.Automation.TransformPattern" /> control pattern is available on this <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse identificador é usado por aplicativos cliente de automação de interface do usuário. Provedores de automação de interface do usuário devem usar o identificador equivalente no <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Valores de retorno da propriedade são do tipo <xref:System.Boolean>. O valor padrão para a propriedade é `false`.  
  
   
  
## Examples  
 O exemplo a seguir ascertains se um padrão de controle especificado é compatível com um <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValuePatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsValuePatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsValuePatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsValuePatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsValuePatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsValuePatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsValuePatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsValuePatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the property that indicates whether the <see cref="T:System.Windows.Automation.ValuePattern" /> control pattern is available on this <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse identificador é usado por aplicativos cliente de automação de interface do usuário. Provedores de automação de interface do usuário devem usar o identificador equivalente no <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Valores de retorno da propriedade são do tipo <xref:System.Boolean>. O valor padrão para a propriedade é `false`.  
  
   
  
## Examples  
 O exemplo a seguir ascertains se um padrão de controle especificado é compatível com um <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVirtualizedItemPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsVirtualizedItemPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsVirtualizedItemPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsVirtualizedItemPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsVirtualizedItemPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsVirtualizedItemPatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsVirtualizedItemPatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsVirtualizedItemPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the property that indicates whether the <see cref="T:System.Windows.Automation.VirtualizedItemPattern" /> control pattern is available on this <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWindowPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsWindowPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsWindowPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsWindowPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsWindowPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsWindowPatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsWindowPatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsWindowPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the property that indicates whether the <see cref="T:System.Windows.Automation.WindowPattern" /> control pattern is available on this <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse identificador é usado por aplicativos cliente de automação de interface do usuário. Provedores de automação de interface do usuário devem usar o identificador equivalente no <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Valores de retorno da propriedade são do tipo <xref:System.Boolean>. O valor padrão para a propriedade é `false`.  
  
   
  
## Examples  
 O exemplo a seguir ascertains se um padrão de controle especificado é compatível com um <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemStatusProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty ItemStatusProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty ItemStatusProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.ItemStatusProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ItemStatusProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ ItemStatusProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ItemStatusProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.ItemStatusProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ItemStatus" /> property, which specifies the status of the visual representation of a complex item.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse identificador é usado por aplicativos cliente de automação de interface do usuário. Provedores de automação de interface do usuário devem usar o identificador equivalente no <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 O valor retornado é um controle definido <xref:System.String>. O valor padrão é uma cadeia de caracteres vazia.  
  
   
  
## Examples  
 O exemplo a seguir recupera o valor atual da propriedade. O valor padrão será retornado se o elemento não fornecer um.  
  
 [!code-csharp[UIAClient_snip#152](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#152)]
 [!code-vb[UIAClient_snip#152](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#152)]  
  
 O exemplo a seguir recupera o valor atual da propriedade, mas Especifica que, se o elemento em si não fornecer um valor para a propriedade <xref:System.Windows.Automation.AutomationElement.NotSupported> deve ser retornado em vez de um valor padrão.  
  
 [!code-csharp[UIAClient_snip#153](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#153)]
 [!code-vb[UIAClient_snip#153](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#153)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemTypeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty ItemTypeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty ItemTypeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.ItemTypeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ItemTypeProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ ItemTypeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ItemTypeProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.ItemTypeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ItemType" /> property.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse identificador é usado por aplicativos cliente de automação de interface do usuário. Provedores de automação de interface do usuário devem usar o identificador equivalente no <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Essa propriedade também pode ser recuperada do <xref:System.Windows.Automation.AutomationElement.Current%2A> ou <xref:System.Windows.Automation.AutomationElement.Cached%2A> propriedades.  
  
 O valor retornado é um controle definido <xref:System.String>. O valor padrão é uma cadeia de caracteres vazia.  
  
   
  
## Examples  
 O exemplo a seguir recupera o valor atual da propriedade. O valor padrão será retornado se o elemento não fornecer um.  
  
 [!code-csharp[UIAClient_snip#154](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#154)]
 [!code-vb[UIAClient_snip#154](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#154)]  
  
 O exemplo a seguir recupera o valor atual da propriedade, mas Especifica que, se o elemento em si não fornecer um valor para a propriedade, é uma cadeia de caracteres definida pelo aplicativo a ser retornado em vez de um valor padrão.  
  
 [!code-csharp[UIAClient_snip#155](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#155)]
 [!code-vb[UIAClient_snip#155](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#155)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LabeledByProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty LabeledByProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty LabeledByProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.LabeledByProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LabeledByProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ LabeledByProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable LabeledByProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.LabeledByProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.LabeledBy" /> property, which identifies the label associated with a control.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse identificador é usado por aplicativos cliente de automação de interface do usuário. Provedores de automação de interface do usuário devem usar o identificador equivalente no <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Essa propriedade também pode ser recuperada do <xref:System.Windows.Automation.AutomationElement.Current%2A> ou <xref:System.Windows.Automation.AutomationElement.Cached%2A> propriedades.  
  
 Valores de retorno da propriedade são do tipo <xref:System.Windows.Automation.AutomationElement>. O valor padrão para a propriedade é `null`.  
  
   
  
## Examples  
 O exemplo a seguir recupera o valor atual da propriedade. O valor padrão será retornado se o elemento não fornecer um.  
  
 [!code-csharp[UIAClient_snip#156](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#156)]
 [!code-vb[UIAClient_snip#156](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#156)]  
  
 O exemplo a seguir recupera o valor atual da propriedade, mas Especifica que, se o elemento em si não fornecer um valor para a propriedade <xref:System.Windows.Automation.AutomationElement.NotSupported> deve ser retornado em vez de um valor padrão.  
  
 [!code-csharp[UIAClient_snip#157](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#157)]
 [!code-vb[UIAClient_snip#157](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#157)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LayoutInvalidatedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent LayoutInvalidatedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent LayoutInvalidatedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.LayoutInvalidatedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LayoutInvalidatedEvent As AutomationEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationEvent ^ LayoutInvalidatedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LayoutInvalidatedEvent : System.Windows.Automation.AutomationEvent" Usage="System.Windows.Automation.AutomationElement.LayoutInvalidatedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the event that is raised when the layout is invalidated.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse identificador é usado por aplicativos cliente de automação de interface do usuário. Provedores de automação de interface do usuário devem usar o identificador equivalente no <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Esse evento é gerado por um contêiner de elementos, sempre que as informações de visibilidade de vários elementos é alterado.  Esse evento é usado pelo cliente como um indicador de que ele precisa para atualizar o <xref:System.Windows.Automation.AutomationElement.BoundingRectangleProperty> e <xref:System.Windows.Automation.AutomationElement.IsOffscreenProperty> informações que ele pode ter em cache para elementos dentro da árvore. O número recomendado de alterações que dispara este evento é 25.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.AutomationEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="LocalizedControlTypeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty LocalizedControlTypeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty LocalizedControlTypeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.LocalizedControlTypeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LocalizedControlTypeProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ LocalizedControlTypeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable LocalizedControlTypeProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.LocalizedControlTypeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.LocalizedControlType" /> property in the local language.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse identificador é usado por aplicativos cliente de automação de interface do usuário. Provedores de automação de interface do usuário devem usar o identificador equivalente no <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Essa propriedade também pode ser recuperada do <xref:System.Windows.Automation.AutomationElement.Current%2A> ou <xref:System.Windows.Automation.AutomationElement.Cached%2A> propriedades.  
  
 Um provedor é necessário para expor essa propriedade quando ela representa um controle personalizado que não tem um tipo de controle bem definido.  
  
 Valores de retorno da propriedade são do tipo <xref:System.String>. O valor padrão para a propriedade é uma cadeia de caracteres vazia.  
  
   
  
## Examples  
 O exemplo a seguir recupera o valor atual da propriedade. O valor padrão será retornado se o elemento não fornecer um.  
  
 [!code-csharp[UIAClient_snip#158](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#158)]
 [!code-vb[UIAClient_snip#158](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#158)]  
  
 O exemplo a seguir recupera o valor atual da propriedade, mas Especifica que, se o elemento em si não fornecer um valor para a propriedade <xref:System.Windows.Automation.AutomationElement.NotSupported> deve ser retornado em vez de um valor padrão.  
  
 [!code-csharp[UIAClient_snip#159](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#159)]
 [!code-vb[UIAClient_snip#159](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#159)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuClosedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent MenuClosedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent MenuClosedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.MenuClosedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MenuClosedEvent As AutomationEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationEvent ^ MenuClosedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MenuClosedEvent : System.Windows.Automation.AutomationEvent" Usage="System.Windows.Automation.AutomationElement.MenuClosedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the event that is raised when a menu is closed.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse identificador é usado por aplicativos cliente de automação de interface do usuário. Provedores de automação de interface do usuário devem usar o identificador equivalente no <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.AutomationEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MenuOpenedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent MenuOpenedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent MenuOpenedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.MenuOpenedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MenuOpenedEvent As AutomationEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationEvent ^ MenuOpenedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MenuOpenedEvent : System.Windows.Automation.AutomationEvent" Usage="System.Windows.Automation.AutomationElement.MenuOpenedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the event that is raised when a menu is opened.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse identificador é usado por aplicativos cliente de automação de interface do usuário. Provedores de automação de interface do usuário devem usar o identificador equivalente no <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.AutomationEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="NameProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty NameProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty NameProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.NameProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NameProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ NameProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable NameProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.NameProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.Name" /> property.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse identificador é usado por aplicativos cliente de automação de interface do usuário. Provedores de automação de interface do usuário devem usar o identificador equivalente no <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Essa propriedade também pode ser recuperada do <xref:System.Windows.Automation.AutomationElement.Current%2A> ou <xref:System.Windows.Automation.AutomationElement.Cached%2A> propriedades.  
  
 Valores de retorno da propriedade são do tipo <xref:System.String>. O valor padrão para a propriedade é uma cadeia de caracteres vazia.  
  
   
  
## Examples  
 O exemplo a seguir recupera o valor atual da propriedade. O valor padrão será retornado se o elemento não fornecer um.  
  
 [!code-csharp[UIAClient_snip#160](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#160)]
 [!code-vb[UIAClient_snip#160](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#160)]  
  
 O exemplo a seguir recupera o valor atual da propriedade, mas Especifica que, se o elemento em si não fornecer um valor para a propriedade <xref:System.Windows.Automation.AutomationElement.NotSupported> deve ser retornado em vez de um valor padrão.  
  
 [!code-csharp[UIAClient_snip#161](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#161)]
 [!code-vb[UIAClient_snip#161](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#161)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NativeWindowHandleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty NativeWindowHandleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty NativeWindowHandleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.NativeWindowHandleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NativeWindowHandleProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ NativeWindowHandleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable NativeWindowHandleProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.NativeWindowHandleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.NativeWindowHandle" /> property.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse identificador é usado por aplicativos cliente de automação de interface do usuário. Provedores de automação de interface do usuário devem usar o identificador equivalente no <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Essa propriedade também pode ser recuperada do <xref:System.Windows.Automation.AutomationElement.Current%2A> ou <xref:System.Windows.Automation.AutomationElement.Cached%2A> propriedades.  
  
 Valores de retorno da propriedade são do tipo <xref:System.Int32>. O valor padrão para a propriedade é 0.  
  
   
  
## Examples  
 O exemplo a seguir recupera o valor atual da propriedade. O valor padrão será retornado se o elemento não fornecer um.  
  
 [!code-csharp[UIAClient_snip#162](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#162)]
 [!code-vb[UIAClient_snip#162](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#162)]  
  
 O exemplo a seguir recupera o valor atual da propriedade, mas Especifica que, se o elemento em si não fornecer um valor para a propriedade <xref:System.Windows.Automation.AutomationElement.NotSupported> deve ser retornado em vez de um valor padrão.  
  
 [!code-csharp[UIAClient_snip#163](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#163)]
 [!code-vb[UIAClient_snip#163](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#163)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotSupported">
      <MemberSignature Language="C#" Value="public static readonly object NotSupported;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly object NotSupported" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.NotSupported" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NotSupported As Object " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Object ^ NotSupported;" />
      <MemberSignature Language="F#" Value=" staticval mutable NotSupported : obj" Usage="System.Windows.Automation.AutomationElement.NotSupported" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates that a property is not supported.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse identificador é usado por aplicativos cliente de automação de interface do usuário. Provedores de automação de interface do usuário devem usar o identificador equivalente no <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
   
  
## Examples  
 O exemplo a seguir recupera a propriedade de texto de ajuda para um <xref:System.Windows.Automation.AutomationElement>, especificando que <xref:System.Windows.Automation.AutomationElement.NotSupported> deve ser retornado se o controle não dá suporte a essa propriedade.  
  
 [!code-csharp[UIAClient_snip#123](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#123)]
 [!code-vb[UIAClient_snip#123](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#123)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Automation.AutomationElement left, System.Windows.Automation.AutomationElement right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Windows.Automation.AutomationElement left, class System.Windows.Automation.AutomationElement right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.op_Equality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As AutomationElement, right As AutomationElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Automation::AutomationElement ^ left, System::Windows::Automation::AutomationElement ^ right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Windows.Automation.AutomationElement * System.Windows.Automation.AutomationElement -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.Automation.AutomationElement" />
        <Parameter Name="right" Type="System.Windows.Automation.AutomationElement" />
      </Parameters>
      <Docs>
        <param name="left">The first <see cref="T:System.Windows.Automation.AutomationElement" /> to compare.</param>
        <param name="right">The second <see cref="T:System.Windows.Automation.AutomationElement" /> to compare.</param>
        <summary>Returns a value indicating whether the specified <see cref="T:System.Windows.Automation.AutomationElement" /> objects refer to the same [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] element.</summary>
        <returns>
          <see langword="true" /> if the two <see cref="T:System.Windows.Automation.AutomationElement" /> objects refer to the same [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] element; otherwise <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dois <xref:System.Windows.Automation.AutomationElement> objetos comparam como iguais podem conter informações armazenadas em cache diferentes em diferentes pontos no tempo. <xref:System.Windows.Automation.AutomationElement.op_Equality%2A> somente testes que os objetos se referirem ao mesmo subjacente [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] elemento.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.op_Inequality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)" />
        <altmember cref="M:System.Windows.Automation.AutomationElement.Equals(System.Object)" />
        <altmember cref="M:System.Windows.Automation.Automation.Compare(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Automation.AutomationElement left, System.Windows.Automation.AutomationElement right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Windows.Automation.AutomationElement left, class System.Windows.Automation.AutomationElement right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.op_Inequality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As AutomationElement, right As AutomationElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Automation::AutomationElement ^ left, System::Windows::Automation::AutomationElement ^ right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Windows.Automation.AutomationElement * System.Windows.Automation.AutomationElement -&gt; bool" Usage="System.Windows.Automation.AutomationElement.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.Automation.AutomationElement" />
        <Parameter Name="right" Type="System.Windows.Automation.AutomationElement" />
      </Parameters>
      <Docs>
        <param name="left">The first <see cref="T:System.Windows.Automation.AutomationElement" /> to compare.</param>
        <param name="right">The second <see cref="T:System.Windows.Automation.AutomationElement" /> to compare.</param>
        <summary>Returns a value indicating whether the specified <see cref="T:System.Windows.Automation.AutomationElement" /> objects refer to different [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] elements.</summary>
        <returns>
          <see langword="true" /> if the two objects refer to different [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] elements; otherwise <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.op_Equality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)" />
        <altmember cref="M:System.Windows.Automation.AutomationElement.Equals(System.Object)" />
        <altmember cref="M:System.Windows.Automation.Automation.Compare(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)" />
      </Docs>
    </Member>
    <Member MemberName="OrientationProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty OrientationProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty OrientationProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.OrientationProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OrientationProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ OrientationProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable OrientationProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.OrientationProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.Orientation" /> property.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse identificador é usado por aplicativos cliente de automação de interface do usuário. Provedores de automação de interface do usuário devem usar o identificador equivalente no <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Essa propriedade também pode ser recuperada do <xref:System.Windows.Automation.AutomationElement.Current%2A> ou <xref:System.Windows.Automation.AutomationElement.Cached%2A> propriedades.  
  
 O valor da propriedade é do tipo <xref:System.Windows.Automation.OrientationType>. O valor padrão é <xref:System.Windows.Automation.OrientationType.None>.  
  
   
  
## Examples  
 O exemplo a seguir recupera o valor atual da propriedade. O valor padrão será retornado se o elemento não fornecer um.  
  
 [!code-csharp[UIAClient_snip#164](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#164)]
 [!code-vb[UIAClient_snip#164](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#164)]  
  
 O exemplo a seguir recupera o valor atual da propriedade, mas Especifica que, se o elemento em si não fornecer um valor para a propriedade <xref:System.Windows.Automation.AutomationElement.NotSupported> deve ser retornado em vez de um valor padrão.  
  
 [!code-csharp[UIAClient_snip#165](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#165)]
 [!code-vb[UIAClient_snip#165](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#165)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessIdProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty ProcessIdProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty ProcessIdProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.ProcessIdProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ProcessIdProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ ProcessIdProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ProcessIdProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.ProcessIdProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ProcessId" /> property.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse identificador é usado por aplicativos cliente de automação de interface do usuário. Provedores de automação de interface do usuário devem usar o identificador equivalente no <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Essa propriedade também pode ser recuperada do <xref:System.Windows.Automation.AutomationElement.Current%2A> ou <xref:System.Windows.Automation.AutomationElement.Cached%2A> propriedades.  
  
 Valores de retorno da propriedade são do tipo <xref:System.Int32>. O valor padrão para a propriedade é 0.  
  
   
  
## Examples  
 O exemplo a seguir recupera o valor atual da propriedade. O valor padrão será retornado se o elemento não fornecer um.  
  
 [!code-csharp[UIAClient_snip#167](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#167)]
 [!code-vb[UIAClient_snip#167](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#167)]  
  
 O exemplo a seguir recupera o valor atual da propriedade, mas Especifica que, se o elemento em si não fornecer um valor para a propriedade <xref:System.Windows.Automation.AutomationElement.NotSupported> deve ser retornado em vez de um valor padrão.  
  
 [!code-csharp[UIAClient_snip#168](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#168)]
 [!code-vb[UIAClient_snip#168](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#168)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootElement">
      <MemberSignature Language="C#" Value="public static System.Windows.Automation.AutomationElement RootElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Automation.AutomationElement RootElement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.RootElement" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property RootElement As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Automation::AutomationElement ^ RootElement { System::Windows::Automation::AutomationElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RootElement : System.Windows.Automation.AutomationElement" Usage="System.Windows.Automation.AutomationElement.RootElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the root <see cref="T:System.Windows.Automation.AutomationElement" /> for the current desktop.</summary>
        <value>O elemento raiz.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode usar o elemento raiz como um ponto de partida para localizar outros elementos, usando o <xref:System.Windows.Automation.AutomationElement.FindAll%2A> e <xref:System.Windows.Automation.AutomationElement.FindFirst%2A> métodos.  
  
 Ao pesquisar do elemento raiz, certifique-se de especificar <xref:System.Windows.Automation.TreeScope.Children> no escopo da pesquisa, não <xref:System.Windows.Automation.TreeScope.Descendants>. Uma pesquisa a subárvore inteira da área de trabalho pode iterar por meio de milhares de itens e levar a um estouro de pilha.  
  
   
  
## Examples  
 O exemplo de código a seguir recupera uma coleção de todos os filhos imediatos da área de trabalho.  
  
 [!code-csharp[UIAClient_snip#201](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#201)]
 [!code-vb[UIAClient_snip#201](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#201)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RuntimeIdProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty RuntimeIdProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty RuntimeIdProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.RuntimeIdProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RuntimeIdProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ RuntimeIdProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable RuntimeIdProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.RuntimeIdProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the property that contains the runtime identifier of the element.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse identificador é usado por aplicativos cliente de automação de interface do usuário. Provedores de automação de interface do usuário devem usar o identificador equivalente no <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 A propriedade de ID de tempo de execução Especifica uma ID para um <xref:System.Windows.Automation.AutomationElement> que é exclusivo na área de trabalho.  
  
 O valor retornado da propriedade é uma matriz do tipo <xref:System.Int32>. Nenhum valor padrão.  
  
   
  
## Examples  
 O exemplo a seguir recupera o valor atual da propriedade.  
  
 [!code-csharp[UIAClient_snip#169](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#169)]
 [!code-vb[UIAClient_snip#169](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#169)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.GetRuntimeId" />
        <altmember cref="M:System.Windows.Automation.WindowClosedEventArgs.GetRuntimeId" />
        <altmember cref="M:System.Windows.Automation.StructureChangedEventArgs.GetRuntimeId" />
        <altmember cref="F:System.Windows.Automation.AutomationElement.AutomationIdProperty" />
      </Docs>
    </Member>
    <Member MemberName="SetFocus">
      <MemberSignature Language="C#" Value="public void SetFocus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFocus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.SetFocus" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFocus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFocus();" />
      <MemberSignature Language="F#" Value="member this.SetFocus : unit -&gt; unit" Usage="automationElement.SetFocus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sets focus on the <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O comportamento desse método depende a implementação pelo provedor de automação de interface do usuário para o elemento. Definindo o foco não necessariamente colocar o elemento de primeiro plano ou torná-la visível.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">The UI for the <see cref="T:System.Windows.Automation.AutomationElement" /> no longer exists.</exception>
      </Docs>
    </Member>
    <Member MemberName="StructureChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent StructureChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent StructureChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.StructureChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StructureChangedEvent As AutomationEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationEvent ^ StructureChangedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StructureChangedEvent : System.Windows.Automation.AutomationEvent" Usage="System.Windows.Automation.AutomationElement.StructureChangedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the event that is raised when the [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] tree structure is changed.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse identificador é usado por aplicativos cliente de automação de interface do usuário. Provedores de automação de interface do usuário devem usar o identificador equivalente no <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.AutomationEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="ToolTipClosedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent ToolTipClosedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent ToolTipClosedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.ToolTipClosedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ToolTipClosedEvent As AutomationEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationEvent ^ ToolTipClosedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ToolTipClosedEvent : System.Windows.Automation.AutomationEvent" Usage="System.Windows.Automation.AutomationElement.ToolTipClosedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the event that is raised when a tooltip is closed.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse identificador é usado por aplicativos cliente de automação de interface do usuário. Provedores de automação de interface do usuário devem usar o identificador equivalente no <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.AutomationEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="ToolTipOpenedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent ToolTipOpenedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent ToolTipOpenedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.ToolTipOpenedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ToolTipOpenedEvent As AutomationEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationEvent ^ ToolTipOpenedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ToolTipOpenedEvent : System.Windows.Automation.AutomationEvent" Usage="System.Windows.Automation.AutomationElement.ToolTipOpenedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the event that is raised when a tooltip is opened.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse identificador é usado por aplicativos cliente de automação de interface do usuário. Provedores de automação de interface do usuário devem usar o identificador equivalente no <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Dicas de ferramenta são transitórias na área de trabalho e a dica de ferramenta pode ter fechado no momento em que o cliente recebe o evento.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.AutomationEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="TryGetCachedPattern">
      <MemberSignature Language="C#" Value="public bool TryGetCachedPattern (System.Windows.Automation.AutomationPattern pattern, out object patternObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetCachedPattern(class System.Windows.Automation.AutomationPattern pattern, [out] object&amp; patternObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.TryGetCachedPattern(System.Windows.Automation.AutomationPattern,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetCachedPattern (pattern As AutomationPattern, ByRef patternObject As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetCachedPattern(System::Windows::Automation::AutomationPattern ^ pattern, [Runtime::InteropServices::Out] System::Object ^ % patternObject);" />
      <MemberSignature Language="F#" Value="member this.TryGetCachedPattern : System.Windows.Automation.AutomationPattern *  -&gt; bool" Usage="automationElement.TryGetCachedPattern (pattern, patternObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.Windows.Automation.AutomationPattern" />
        <Parameter Name="patternObject" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pattern">The identifier of the control pattern to retrieve.</param>
        <param name="patternObject">On return, contains the pattern if it is in the cache; otherwise <see langword="null" />.</param>
        <summary>Retrieves a control pattern from the cache.</summary>
        <returns>
          <see langword="true" /> if the pattern is in the cache; <see langword="false" /> if it is not in the cache or not supported.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir mostra como armazenar em cache e recuperar um padrão de controle.  
  
 [!code-csharp[UIAClient_snip#107](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#107)]
 [!code-vb[UIAClient_snip#107](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#107)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.GetCachedPattern(System.Windows.Automation.AutomationPattern)" />
        <altmember cref="M:System.Windows.Automation.AutomationElement.TryGetCurrentPattern(System.Windows.Automation.AutomationPattern,System.Object@)" />
      </Docs>
    </Member>
    <Member MemberName="TryGetClickablePoint">
      <MemberSignature Language="C#" Value="public bool TryGetClickablePoint (out System.Windows.Point pt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetClickablePoint([out] valuetype System.Windows.Point&amp; pt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.TryGetClickablePoint(System.Windows.Point@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetClickablePoint (ByRef pt As Point) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetClickablePoint([Runtime::InteropServices::Out] System::Windows::Point % pt);" />
      <MemberSignature Language="F#" Value="member this.TryGetClickablePoint :  -&gt; bool" Usage="automationElement.TryGetClickablePoint pt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Windows.Point&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pt">When this method returns, contains the physical screen coordinates of a clickable point.</param>
        <summary>Retrieves a point within the element that can be clicked.</summary>
        <returns>
          <see langword="true" /> if there is a point that is clickable; otherwise <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um <xref:System.Windows.Automation.AutomationElement> não é clicável se ela é completamente obscurecida por outra janela.  
  
   
  
## Examples  
 O exemplo a seguir tenta recuperar um ponto clicável em um <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIAClient_snip#112](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#112)]
 [!code-vb[UIAClient_snip#112](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#112)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.GetClickablePoint" />
      </Docs>
    </Member>
    <Member MemberName="TryGetCurrentPattern">
      <MemberSignature Language="C#" Value="public bool TryGetCurrentPattern (System.Windows.Automation.AutomationPattern pattern, out object patternObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetCurrentPattern(class System.Windows.Automation.AutomationPattern pattern, [out] object&amp; patternObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.TryGetCurrentPattern(System.Windows.Automation.AutomationPattern,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetCurrentPattern (pattern As AutomationPattern, ByRef patternObject As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetCurrentPattern(System::Windows::Automation::AutomationPattern ^ pattern, [Runtime::InteropServices::Out] System::Object ^ % patternObject);" />
      <MemberSignature Language="F#" Value="member this.TryGetCurrentPattern : System.Windows.Automation.AutomationPattern *  -&gt; bool" Usage="automationElement.TryGetCurrentPattern (pattern, patternObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.Windows.Automation.AutomationPattern" />
        <Parameter Name="patternObject" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pattern">The identifier of the control pattern to retrieve.</param>
        <param name="patternObject">On return, the control pattern if it is supported; otherwise <see langword="null" />.</param>
        <summary>Retrieves an object that implements a control pattern.</summary>
        <returns>
          <see langword="true" /> if the pattern is supported; otherwise <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para algumas formas de [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)], esse método incorrerão em sobrecarga desempenho de processo cruzado. Aplicativos podem se concentrar sobrecarga por padrões de cache e, em seguida, recuperá-los usando <xref:System.Windows.Automation.AutomationElement.GetCachedPattern%2A>.  
  
   
  
## Examples  
 O exemplo a seguir mostra como usar esse método para recuperar um padrão de controle.  
  
 [!code-csharp[UIAClient_snip#113](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#113)]
 [!code-vb[UIAClient_snip#113](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#113)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.GetCurrentPattern(System.Windows.Automation.AutomationPattern)" />
        <altmember cref="M:System.Windows.Automation.AutomationElement.TryGetCachedPattern(System.Windows.Automation.AutomationPattern,System.Object@)" />
      </Docs>
    </Member>
  </Members>
</Type>