<Type Name="ITaskFactory" FullName="Microsoft.Build.Framework.ITaskFactory">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="84afcbecce72a3d529398cf359ba9a373967539a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ITaskFactory" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITaskFactory" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Framework.ITaskFactory" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITaskFactory" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITaskFactory" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Framework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="02b89-101">Interface que uma instância de fábrica de tarefas deve implementar.</span>
      <span class="sxs-lookup">
        <span data-stu-id="02b89-101">Interface that a task factory Instance should implement.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CleanupTask">
      <MemberSignature Language="C#" Value="public void CleanupTask (Microsoft.Build.Framework.ITask task);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CleanupTask(class Microsoft.Build.Framework.ITask task) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Framework.ITaskFactory.CleanupTask(Microsoft.Build.Framework.ITask)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CleanupTask (task As ITask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CleanupTask(Microsoft::Build::Framework::ITask ^ task);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="task" Type="Microsoft.Build.Framework.ITask" />
      </Parameters>
      <Docs>
        <param name="task">
          <span data-ttu-id="02b89-102">A tarefa a ser limpa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b89-102">The task to clean up.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="02b89-103">Limpa qualquer contexto ou estado que pode ter sido criado para uma determinada tarefa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b89-103">Cleans up any context or state that may have been built up for a given task.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTask">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITask CreateTask (Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Build.Framework.ITask CreateTask(class Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Framework.ITaskFactory.CreateTask(Microsoft.Build.Framework.IBuildEngine)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateTask (taskFactoryLoggingHost As IBuildEngine) As ITask" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Framework::ITask ^ CreateTask(Microsoft::Build::Framework::IBuildEngine ^ taskFactoryLoggingHost);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="taskFactoryLoggingHost" Type="Microsoft.Build.Framework.IBuildEngine" />
      </Parameters>
      <Docs>
        <param name="taskFactoryLoggingHost">
          <span data-ttu-id="02b89-104">O host de registro em log para a fábrica de tarefas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b89-104">The logging host for the task factory.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="02b89-105">Cria uma instância da tarefa a ser usada em um lote.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b89-105">Creates an instance of the task to be used in a batch.</span>
          </span>
          <span data-ttu-id="02b89-106">O host de registro em log da fábrica de tarefas registrará em log mensagens no contexto da tarefa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b89-106">The task factory logging host will log messages in the context of the task.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="02b89-107">Retorna uma instância da tarefa a ser usada em um lote.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b89-107">Returns an instance of the task to be used in a batch.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FactoryName">
      <MemberSignature Language="C#" Value="public string FactoryName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FactoryName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Framework.ITaskFactory.FactoryName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FactoryName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FactoryName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="02b89-108">Obtém o nome da fábrica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b89-108">Gets the name of the factory.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="02b89-109">O nome da fábrica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b89-109">The name of the factory.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTaskParameters">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.TaskPropertyInfo[] GetTaskParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Build.Framework.TaskPropertyInfo[] GetTaskParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Framework.ITaskFactory.GetTaskParameters" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTaskParameters () As TaskPropertyInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;Microsoft::Build::Framework::TaskPropertyInfo ^&gt; ^ GetTaskParameters();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.TaskPropertyInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="02b89-110">Obtém as descrições de todos os parâmetros da tarefa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b89-110">Get the descriptions for all the task's parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="02b89-111">Uma matriz não nula de descrições de propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b89-111">A non-null array of property descriptions.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public bool Initialize (string taskName, System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Framework.TaskPropertyInfo&gt; parameterGroup, string taskBody, Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Initialize(string taskName, class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Framework.TaskPropertyInfo&gt; parameterGroup, string taskBody, class Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Framework.ITaskFactory.Initialize(System.String,System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Framework.TaskPropertyInfo},System.String,Microsoft.Build.Framework.IBuildEngine)" />
      <MemberSignature Language="VB.NET" Value="Public Function Initialize (taskName As String, parameterGroup As IDictionary(Of String, TaskPropertyInfo), taskBody As String, taskFactoryLoggingHost As IBuildEngine) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Initialize(System::String ^ taskName, System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Framework::TaskPropertyInfo ^&gt; ^ parameterGroup, System::String ^ taskBody, Microsoft::Build::Framework::IBuildEngine ^ taskFactoryLoggingHost);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="taskName" Type="System.String" />
        <Parameter Name="parameterGroup" Type="System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Framework.TaskPropertyInfo&gt;" />
        <Parameter Name="taskBody" Type="System.String" />
        <Parameter Name="taskFactoryLoggingHost" Type="Microsoft.Build.Framework.IBuildEngine" />
      </Parameters>
      <Docs>
        <param name="taskName">
          <span data-ttu-id="02b89-112">Nome da tarefa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b89-112">Name of the task.</span>
          </span>
        </param>
        <param name="parameterGroup">
          <span data-ttu-id="02b89-113">O grupo de parâmetros.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b89-113">The parameter group.</span>
          </span>
        </param>
        <param name="taskBody">
          <span data-ttu-id="02b89-114">O corpo da tarefa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b89-114">The task body.</span>
          </span>
        </param>
        <param name="taskFactoryLoggingHost">
          <span data-ttu-id="02b89-115">O host de registro em log da fábrica de tarefa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b89-115">The task factory logging host.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="02b89-116">Inicializa essa fábrica para instanciar tarefas com um bloco de tarefas específico embutido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b89-116">Initializes this factory for instantiating tasks with a particular inline task block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="02b89-117">Um valor que indica se a inicialização foi bem-sucedida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b89-117">A value indicating whether initialization was successful.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02b89-118">O mecanismo MSBuild chama esse método para inicializar a fábrica.</span><span class="sxs-lookup"><span data-stu-id="02b89-118">The MSBuild engine calls this method to initialize the factory.</span></span> <span data-ttu-id="02b89-119">Após a inicialização, a fábrica pode ser feita ou não os nomes de tarefas podem ser criados pela fábrica.</span><span class="sxs-lookup"><span data-stu-id="02b89-119">After initialization, the factory can be asked whether or not task names can be created by the factory.</span></span>  
  
 <span data-ttu-id="02b89-120">O `taskFactoryLoggingHost` registrará em log mensagens no contexto de destino em que a tarefa é usada pela primeira vez.</span><span class="sxs-lookup"><span data-stu-id="02b89-120">The `taskFactoryLoggingHost` will log messages in the context of the target where the task is first used.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TaskType">
      <MemberSignature Language="C#" Value="public Type TaskType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type TaskType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Framework.ITaskFactory.TaskType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TaskType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ TaskType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="02b89-121">Obtém o tipo da tarefa que essa fábrica instanciará.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b89-121">Gets the type of the task this factory will instantiate.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="02b89-122">O tipo de tarefa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="02b89-122">The type of task.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>