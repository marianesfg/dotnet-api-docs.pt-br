<Type Name="SpeechSynthesizer" FullName="System.Speech.Synthesis.SpeechSynthesizer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="af9cb5af32e1bb68a286a636790f4f7e7fff362b" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37610142" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SpeechSynthesizer : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SpeechSynthesizer extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Synthesis.SpeechSynthesizer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SpeechSynthesizer&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SpeechSynthesizer sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type SpeechSynthesizer = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="d8236-101">Fornece acesso à funcionalidade de um mecanismo de síntese de fala instalado.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d8236-101">Provides access to the functionality of an installed speech synthesis engine.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8236-102">Quando você cria um novo <xref:System.Speech.Synthesis.SpeechSynthesizer> do objeto, ele usa a voz de sistema padrão.</span><span class="sxs-lookup"><span data-stu-id="d8236-102">When you create a new <xref:System.Speech.Synthesis.SpeechSynthesizer> object, it uses the default system voice.</span></span> <span data-ttu-id="d8236-103">Para configurar o <xref:System.Speech.Synthesis.SpeechSynthesizer> para usar um das vozes de síntese (fala) de fala instalados, use o <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> ou <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> método.</span><span class="sxs-lookup"><span data-stu-id="d8236-103">To configure the <xref:System.Speech.Synthesis.SpeechSynthesizer> to use one of the installed speech synthesis (text-to-speech) voices, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> or <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> method.</span></span> <span data-ttu-id="d8236-104">Para obter informações sobre o qual as vozes são instaladas, use o <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> método e o <xref:System.Speech.Synthesis.VoiceInfo> classe.</span><span class="sxs-lookup"><span data-stu-id="d8236-104">To get information about which voices are installed, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and the <xref:System.Speech.Synthesis.VoiceInfo> class.</span></span>  
  
 <span data-ttu-id="d8236-105">Essa classe também fornece controle sobre os seguintes aspectos de síntese de fala:</span><span class="sxs-lookup"><span data-stu-id="d8236-105">This class also provides control over the following aspects of speech synthesis:</span></span>  
  
-   <span data-ttu-id="d8236-106">Para configurar a saída para o <xref:System.Speech.Synthesis.SpeechSynthesizer> do objeto, use o <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, e <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="d8236-106">To configure the output for the <xref:System.Speech.Synthesis.SpeechSynthesizer> object, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> methods.</span></span>  
  
-   <span data-ttu-id="d8236-107">Para gerar fala, use o <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, ou <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> método.</span><span class="sxs-lookup"><span data-stu-id="d8236-107">To generate speech, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> method.</span></span> <span data-ttu-id="d8236-108">O <xref:System.Speech.Synthesis.SpeechSynthesizer> pode produzir fala do texto, uma <xref:System.Speech.Synthesis.Prompt> ou <xref:System.Speech.Synthesis.PromptBuilder> objeto, ou de [Speech Synthesis Markup Language (SSML) versão 1.0](http://go.microsoft.com/fwlink/?LinkId=201763).</span><span class="sxs-lookup"><span data-stu-id="d8236-108">The <xref:System.Speech.Synthesis.SpeechSynthesizer> can produce speech from text, a <xref:System.Speech.Synthesis.Prompt> or <xref:System.Speech.Synthesis.PromptBuilder> object, or from [Speech Synthesis Markup Language (SSML) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201763).</span></span>  
  
-   <span data-ttu-id="d8236-109">Para pausar e retomar a síntese de fala, use o <xref:System.Speech.Synthesis.SpeechSynthesizer.Pause%2A> e <xref:System.Speech.Synthesis.SpeechSynthesizer.Resume%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="d8236-109">To pause and resume speech synthesis, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Pause%2A> and <xref:System.Speech.Synthesis.SpeechSynthesizer.Resume%2A> methods.</span></span>  
  
-   <span data-ttu-id="d8236-110">Para adicionar ou remover dicionários, use o <xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A> e <xref:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="d8236-110">To add or remove lexicons, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A> and <xref:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon%2A> methods.</span></span> <span data-ttu-id="d8236-111">O <xref:System.Speech.Synthesis.SpeechSynthesizer> pode usar um ou mais dicionários para orientar sua pronúncia de palavras.</span><span class="sxs-lookup"><span data-stu-id="d8236-111">The <xref:System.Speech.Synthesis.SpeechSynthesizer> can use one or more lexicons to guide its pronunciation of words.</span></span>  
  
-   <span data-ttu-id="d8236-112">Para modificar a entrega de saída de fala, use o <xref:System.Speech.Synthesis.SpeechSynthesizer.Rate%2A> e <xref:System.Speech.Synthesis.SpeechSynthesizer.Volume%2A> propriedades.</span><span class="sxs-lookup"><span data-stu-id="d8236-112">To modify the delivery of speech output, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Rate%2A> and <xref:System.Speech.Synthesis.SpeechSynthesizer.Volume%2A> properties.</span></span>  
  
 <span data-ttu-id="d8236-113">O <xref:System.Speech.Synthesis.SpeechSynthesizer> gera eventos quando ele encontra determinados recursos nos prompts: (<xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>, <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>, <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>, e <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>).</span><span class="sxs-lookup"><span data-stu-id="d8236-113">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises events when it encounters certain features in prompts: (<xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>, <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>, <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>).</span></span> <span data-ttu-id="d8236-114">Ele também gera eventos que relatam de início (<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>) e de término (<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>) de falar de operações e sobre a alteração da voz de fala (<xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>).</span><span class="sxs-lookup"><span data-stu-id="d8236-114">It also raises events that report on the start (<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>) and end (<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>) of speak operations and on the change of the speaking voice (<xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d8236-115">Sempre chamar <xref:System.Speech.Synthesis.SpeechSynthesizer.Dispose%2A> antes de liberar sua última referência para o <xref:System.Speech.Synthesis.SpeechSynthesizer>.</span><span class="sxs-lookup"><span data-stu-id="d8236-115">Always call <xref:System.Speech.Synthesis.SpeechSynthesizer.Dispose%2A> before you release your last reference to the <xref:System.Speech.Synthesis.SpeechSynthesizer>.</span></span> <span data-ttu-id="d8236-116">Caso contrário, os recursos que ele está usando não serão liberados até que o coletor de lixo chame o <xref:System.Speech.Synthesis.SpeechSynthesizer> do objeto <xref:System.Object.Finalize%2A> método.</span><span class="sxs-lookup"><span data-stu-id="d8236-116">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Speech.Synthesis.SpeechSynthesizer> object's <xref:System.Object.Finalize%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8236-117">O exemplo a seguir é parte de um aplicativo de console que inicializa um <xref:System.Speech.Synthesis.SpeechSynthesizer> do objeto e uma cadeia de caracteres de fala.</span><span class="sxs-lookup"><span data-stu-id="d8236-117">The following example is part of a console application that initializes a <xref:System.Speech.Synthesis.SpeechSynthesizer> object and speaks a string.</span></span>  
  
```csharp  
  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Speak a string.  
      synth.Speak("This example demonstrates a basic use of Speech Synthesizer");  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Synthesis.InstalledVoice" />
    <altmember cref="T:System.Speech.Synthesis.Prompt" />
    <altmember cref="T:System.Speech.Synthesis.PromptBuilder" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SpeechSynthesizer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SpeechSynthesizer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d8236-118">Inicializa uma nova instância da classe <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-118">Initializes a new instance of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8236-119">Quando você inicializa um novo <xref:System.Speech.Synthesis.SpeechSynthesizer> instância, ele usa a voz de sistema padrão.</span><span class="sxs-lookup"><span data-stu-id="d8236-119">When you initialize a new <xref:System.Speech.Synthesis.SpeechSynthesizer> instance, it uses the default system voice.</span></span> <span data-ttu-id="d8236-120">Para configurar o <xref:System.Speech.Synthesis.SpeechSynthesizer> para usar um das vozes de síntese (fala) de fala instalados, use o <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> ou <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> método.</span><span class="sxs-lookup"><span data-stu-id="d8236-120">To configure the <xref:System.Speech.Synthesis.SpeechSynthesizer> to use one of the installed speech synthesis (text-to-speech) voices, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> or <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> method.</span></span> <span data-ttu-id="d8236-121">Para obter informações sobre o qual as vozes são instaladas, use o <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> método e o <xref:System.Speech.Synthesis.VoiceInfo> classe.</span><span class="sxs-lookup"><span data-stu-id="d8236-121">To get information about which voices are installed, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and the <xref:System.Speech.Synthesis.VoiceInfo> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.InstalledVoice" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
      </Docs>
    </Member>
    <Member MemberName="AddLexicon">
      <MemberSignature Language="C#" Value="public void AddLexicon (Uri uri, string mediaType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLexicon(class System.Uri uri, string mediaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon(System.Uri,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLexicon(Uri ^ uri, System::String ^ mediaType);" />
      <MemberSignature Language="F#" Value="member this.AddLexicon : Uri * string -&gt; unit" Usage="speechSynthesizer.AddLexicon (uri, mediaType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="mediaType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">
          <span data-ttu-id="d8236-122">O local das informações de léxico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-122">The location of the lexicon information.</span>
          </span>
        </param>
        <param name="mediaType">
          <span data-ttu-id="d8236-123">O tipo de mídia do léxico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-123">The media type of the lexicon.</span>
          </span>
          <span data-ttu-id="d8236-124">Os valores de tipo de mídia não diferenciam maiúsculas e minúsculas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-124">Media type values are not case sensitive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8236-125">Adiciona um léxico ao objeto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-125">Adds a lexicon to the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8236-126">Um léxico pronúncia é uma coleção de palavras ou frases junto com seu pronúncia, que consistem em letras e caracteres de um alfabeto fonético com suporte.</span><span class="sxs-lookup"><span data-stu-id="d8236-126">A pronunciation lexicon is a collection of words or phrases together with their pronunciations, which consist of letters and characters from a supported phonetic alphabet.</span></span> <span data-ttu-id="d8236-127">Você pode usar um léxico para especificar a pronúncia personalizada para o vocabulário especializado em seu aplicativo.</span><span class="sxs-lookup"><span data-stu-id="d8236-127">You can use a lexicon to specify custom pronunciations for specialized vocabulary in your application.</span></span>  
  
 <span data-ttu-id="d8236-128">Pronúncia especificada em um arquivo de léxico externo têm precedência sobre a pronúncia do léxico interno ou o dicionário do sintetizador de fala.</span><span class="sxs-lookup"><span data-stu-id="d8236-128">Pronunciations specified in an external lexicon file take precedence over the pronunciations of the speech synthesizer's internal lexicon or dictionary.</span></span> <span data-ttu-id="d8236-129">No entanto, o pronúncia especificadas embutidas em prompts criados com qualquer um dos <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>, ou <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A> métodos têm precedência sobre pronúncia especificada em qualquer léxico.</span><span class="sxs-lookup"><span data-stu-id="d8236-129">However, pronunciations specified inline in prompts created with any of the <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>, or <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A> methods take precedence over pronunciations specified in any lexicon.</span></span> <span data-ttu-id="d8236-130">Pronúncia embutidos se aplicam somente a uma única ocorrência de uma palavra.</span><span class="sxs-lookup"><span data-stu-id="d8236-130">Inline pronunciations apply only to a single occurrence of a word.</span></span> <span data-ttu-id="d8236-131">Ver [dicionários e alfabetos fonéticos](http://msdn.microsoft.com/library/435e3c6f-6834-4e5a-b0f6-c17b2275dc51) para obter mais informações.</span><span class="sxs-lookup"><span data-stu-id="d8236-131">See [Lexicons and Phonetic Alphabets](http://msdn.microsoft.com/library/435e3c6f-6834-4e5a-b0f6-c17b2275dc51) for more information.</span></span>  
  
 <span data-ttu-id="d8236-132">Você pode adicionar vários dicionários para um <xref:System.Speech.Synthesis.SpeechSynthesizer> objeto. Atualmente, há suporte para dois valores para o `mediaType` parâmetro:</span><span class="sxs-lookup"><span data-stu-id="d8236-132">You can add multiple lexicons to a <xref:System.Speech.Synthesis.SpeechSynthesizer> object.Two values are currently supported for the `mediaType` parameter:</span></span>  
  
-   <span data-ttu-id="d8236-133">O valor `application/pls+xml` indica que o léxico está de acordo com o [pronúncia léxico especificação (PLS) versão 1.0](http://go.microsoft.com/fwlink/?LinkId=201766).</span><span class="sxs-lookup"><span data-stu-id="d8236-133">The value `application/pls+xml` indicates that the lexicon conforms to the [Pronunciation Lexicon Specification (PLS) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201766).</span></span> <span data-ttu-id="d8236-134">Este é o formato preferencial para usar.</span><span class="sxs-lookup"><span data-stu-id="d8236-134">This is the preferred format to use.</span></span>  
  
-   <span data-ttu-id="d8236-135">O valor `application/vdn.ms-sapi-lex` indica que o formato de léxico é descompactado léxico, que é um formato de propriedade da Microsoft.</span><span class="sxs-lookup"><span data-stu-id="d8236-135">The value `application/vdn.ms-sapi-lex` indicates that the lexicon format is Uncompressed Lexicon, which is a Microsoft-proprietary format.</span></span> <span data-ttu-id="d8236-136">Este é um formato herdado e é recomendável que você use o formato PLS descrito acima.</span><span class="sxs-lookup"><span data-stu-id="d8236-136">This is a legacy format and we recommend that you use the PLS format described above.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8236-137">O exemplo a seguir demonstra o efeito de adicionar e remover um léxico que contém uma pronúncia personalizada para a palavra "blue".</span><span class="sxs-lookup"><span data-stu-id="d8236-137">The following example demonstrates the effect of adding and removing a lexicon that contains a custom pronunciation for the word "blue".</span></span> <span data-ttu-id="d8236-138">O léxico define a pronúncia de "blue" a soar como "bleep".</span><span class="sxs-lookup"><span data-stu-id="d8236-138">The lexicon defines the pronunciation of "blue" to sound like "bleep".</span></span> <span data-ttu-id="d8236-139">Enquanto o léxico é carregado, o sintetizador de fala usa a pronúncia definida em léxico.</span><span class="sxs-lookup"><span data-stu-id="d8236-139">While the lexicon is loaded, the speech synthesizer uses the pronunciation defined in the lexicon.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Speak the prompt.  
        synth.Speak("My favorite color is blue.");  
  
        // Add a lexicon that changes the pronunciation of "blue".  
        synth.AddLexicon(new Uri("C:\\test\\Blue.pls"), "application/pls+xml");  
  
        // Speak the prompt.  
        synth.Speak("My favorite color is blue.");  
  
        // Remove the lexicon.  
        synth.RemoveLexicon(new Uri("C:\\test\\Blue.pls"));  
  
        // Speak the prompt.  
        synth.Speak("My favorite color is blue.");  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 <span data-ttu-id="d8236-140">Este é o conteúdo do arquivo léxico Blue.pls:</span><span class="sxs-lookup"><span data-stu-id="d8236-140">Following are the contents of the lexicon file Blue.pls:</span></span>  
  
```xml  
<?xml version="1.0" encoding="UTF-8"?>  
  
<lexicon version="1.0"   
      xmlns="http://www.w3.org/2005/01/pronunciation-lexicon"  
      alphabet="x-microsoft-ups" xml:lang="en-US">  
  
  <lexeme>  
    <grapheme> blue </grapheme>  
    <phoneme> B L I P </phoneme>  
  </lexeme>  
  
</lexicon>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="BookmarkReached">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.BookmarkReachedEventArgs&gt; BookmarkReached;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.BookmarkReachedEventArgs&gt; BookmarkReached" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BookmarkReached As EventHandler(Of BookmarkReachedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::BookmarkReachedEventArgs ^&gt; ^ BookmarkReached;" />
      <MemberSignature Language="F#" Value="member this.BookmarkReached : EventHandler&lt;System.Speech.Synthesis.BookmarkReachedEventArgs&gt; " Usage="member this.BookmarkReached : System.EventHandler&lt;System.Speech.Synthesis.BookmarkReachedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.BookmarkReachedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8236-141">Acionado quando o <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> encontra um indicador em um prompt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-141">Raised when the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> encounters a bookmark in a prompt.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8236-142">O <xref:System.Speech.Synthesis.SpeechSynthesizer> gera esse evento durante o processamento de qualquer um dos <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, ou <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="d8236-142">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises this event while processing any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> methods.</span></span> <span data-ttu-id="d8236-143">Para obter informações sobre os dados associados ao evento, consulte <xref:System.Speech.Synthesis.BookmarkReachedEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="d8236-143">For information about data associated with the event, see <xref:System.Speech.Synthesis.BookmarkReachedEventArgs>.</span></span>  
  
 <span data-ttu-id="d8236-144">Você pode adicionar marcadores usando os <xref:System.Speech.Synthesis.PromptBuilder.AppendBookmark%2A> método.</span><span class="sxs-lookup"><span data-stu-id="d8236-144">You can add bookmarks using the <xref:System.Speech.Synthesis.PromptBuilder.AppendBookmark%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8236-145">O exemplo a seguir cria um prompt que inclui os dois indicadores e envia a saída para um arquivo WAV para reprodução.</span><span class="sxs-lookup"><span data-stu-id="d8236-145">The following example creates a prompt that includes two bookmarks and sends the output to a WAV file for playback.</span></span> <span data-ttu-id="d8236-146">O manipulador para o <xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached> do evento que grava o nome do indicador e sua posição no fluxo de áudio, quando o evento foi gerado para o console.</span><span class="sxs-lookup"><span data-stu-id="d8236-146">The handler for the <xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached> event writes the name of the bookmark and its position in the audio stream when the event was raised to the console.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToWaveFile(@"C:\test\weather.wav");  
  
        // Create a SoundPlayer instance to play the output audio file.  
        System.Media.SoundPlayer m_SoundPlayer =  
          new System.Media.SoundPlayer(@"C:\test\weather.wav");  
  
        // Build a prompt and append bookmarks.  
        PromptBuilder builder = new PromptBuilder(  
          new System.Globalization.CultureInfo("en-US"));  
        builder.AppendText(  
          "The weather forecast for today is partly cloudy with some sun breaks.");  
        builder.AppendBookmark("Daytime forecast");  
        builder.AppendText(  
          "Tonight's weather will be cloudy with a 30% chance of showers.");  
        builder.AppendBookmark("Nightime forecast");  
  
        // Add a handler for the BookmarkReached event.  
        synth.BookmarkReached +=  
          new EventHandler<BookmarkReachedEventArgs>(synth_BookmarkReached);  
  
        // Speak the prompt and play back the output file.  
        synth.Speak(builder);  
        m_SoundPlayer.Play();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Write the name and position of the bookmark to the console.  
    static void synth_BookmarkReached(object sender, BookmarkReachedEventArgs e)  
    {  
      Console.WriteLine("Bookmark ({0}) reached at: {1} ",  
        e.Bookmark, e.AudioPosition);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="speechSynthesizer.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d8236-147">Descarta o objeto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> e libera os recursos usados durante a sessão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-147">Disposes the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object and releases resources used during the session.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~SpeechSynthesizer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!SpeechSynthesizer ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="speechSynthesizer.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d8236-148">Atua como uma proteção para limpar os recursos no caso em que o método <see cref="M:System.Speech.Synthesis.SpeechSynthesizer.Dispose" /> não é chamado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-148">Acts as a safeguard to clean up resources in the event that the <see cref="M:System.Speech.Synthesis.SpeechSynthesizer.Dispose" /> method is not called.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentlySpokenPrompt">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.Prompt GetCurrentlySpokenPrompt ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Synthesis.Prompt GetCurrentlySpokenPrompt() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.GetCurrentlySpokenPrompt" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentlySpokenPrompt () As Prompt" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Synthesis::Prompt ^ GetCurrentlySpokenPrompt();" />
      <MemberSignature Language="F#" Value="member this.GetCurrentlySpokenPrompt : unit -&gt; System.Speech.Synthesis.Prompt" Usage="speechSynthesizer.GetCurrentlySpokenPrompt " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.Prompt</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d8236-149">Obtém o prompt de que o <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> está falando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-149">Gets the prompt that the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> is speaking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8236-150">Retorna o objeto de prompt que está sendo falado no momento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-150">Returns the prompt object that is currently being spoken.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
  
```csharp  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInstalledVoices">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d8236-151">Retorna a coleção de vozes de síntese de fala (conversão de texto em fala) que estão atualmente instaladas no sistema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-151">Returns the collection of speech synthesis (text-to-speech) voices that are currently installed on the system.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8236-152">Quando um aplicativo chama <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, o método verifica que cada uma das vozes (mecanismos de texto em fala) encontrados na atende registro certos critérios mínimos.</span><span class="sxs-lookup"><span data-stu-id="d8236-152">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices (engines for text-to-speech) it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="d8236-153">Para qualquer que falha na verificação, voz <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> define seu <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propriedade `False`.</span><span class="sxs-lookup"><span data-stu-id="d8236-153">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="d8236-154">Um aplicativo não é possível selecionar uma voz cujos <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> é de propriedade `False`.</span><span class="sxs-lookup"><span data-stu-id="d8236-154">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="d8236-155">Normalmente, aplicativos não definirá uma voz <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="d8236-155">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInstalledVoices">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt; GetInstalledVoices ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Speech.Synthesis.InstalledVoice&gt; GetInstalledVoices() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInstalledVoices () As ReadOnlyCollection(Of InstalledVoice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Speech::Synthesis::InstalledVoice ^&gt; ^ GetInstalledVoices();" />
      <MemberSignature Language="F#" Value="member this.GetInstalledVoices : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt;" Usage="speechSynthesizer.GetInstalledVoices " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d8236-156">Retorna todas as vozes de síntese (conversão de texto em fala) de fala instalados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-156">Returns all of the installed speech synthesis (text-to-speech) voices.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8236-157">Retorna uma coleção somente leitura das vozes atualmente instaladas no sistema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-157">Returns a read-only collection of the voices currently installed on the system.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8236-158">Uma voz é um mecanismo de síntese de fala (texto em fala ou TTS) que é instalado no sistema.</span><span class="sxs-lookup"><span data-stu-id="d8236-158">A voice is an engine for speech synthesis (text-to-speech or TTS) that is installed on the system.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8236-159">O exemplo a seguir é parte de um aplicativo de console que inicializa um <xref:System.Speech.Synthesis.SpeechSynthesizer> do objeto e gera como saída para o console de uma lista das vozes instaladas (mecanismos para síntese de fala) e demonstra as informações que estão disponíveis para cada voz.</span><span class="sxs-lookup"><span data-stu-id="d8236-159">The following example is part of a console application that initializes a <xref:System.Speech.Synthesis.SpeechSynthesizer> object and outputs to the console a list of the installed voices (engines for speech synthesis) and demonstrates the information that is available for each voice.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
using System.Speech.AudioFormat;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Output information about all of the installed voices.   
        Console.WriteLine("Installed voices -");  
        foreach (InstalledVoice voice in synth.GetInstalledVoices())  
        {  
          VoiceInfo info = voice.VoiceInfo;  
          string AudioFormats = "";  
          foreach (SpeechAudioFormatInfo fmt in info.SupportedAudioFormats)  
          {  
            AudioFormats += String.Format("{0}\n",  
            fmt.EncodingFormat.ToString());  
          }  
  
          Console.WriteLine(" Name:          " + info.Name);  
          Console.WriteLine(" Culture:       " + info.Culture);  
          Console.WriteLine(" Age:           " + info.Age);  
          Console.WriteLine(" Gender:        " + info.Gender);  
          Console.WriteLine(" Description:   " + info.Description);  
          Console.WriteLine(" ID:            " + info.Id);  
          Console.WriteLine(" Enabled:       " + voice.Enabled);  
          if (info.SupportedAudioFormats.Count != 0)  
          {  
            Console.WriteLine( " Audio formats: " + AudioFormats);  
          }  
          else  
          {  
            Console.WriteLine(" No supported audio formats found");  
          }  
  
          string AdditionalInfo = "";  
          foreach (string key in info.AdditionalInfo.Keys)  
          {  
            AdditionalInfo += String.Format("  {0}: {1}\n", key, info.AdditionalInfo[key]);  
          }  
  
          Console.WriteLine(" Additional Info - " + AdditionalInfo);  
          Console.WriteLine();  
        }  
      }  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.InstalledVoice" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
        <altmember cref="Overload:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints" />
        <altmember cref="Overload:System.Speech.Synthesis.PromptBuilder.StartVoice" />
      </Docs>
    </Member>
    <Member MemberName="GetInstalledVoices">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt; GetInstalledVoices (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Speech.Synthesis.InstalledVoice&gt; GetInstalledVoices(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInstalledVoices (culture As CultureInfo) As ReadOnlyCollection(Of InstalledVoice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Speech::Synthesis::InstalledVoice ^&gt; ^ GetInstalledVoices(System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="member this.GetInstalledVoices : System.Globalization.CultureInfo -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt;" Usage="speechSynthesizer.GetInstalledVoices culture" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture">
          <span data-ttu-id="d8236-160">A localidade a que a voz deve dar suporte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-160">The locale that the voice must support.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8236-161">Retorna todas as vozes de sintetização de fala (conversão de texto em fala) instaladas que dão suporte a uma localidade específica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-161">Returns all of the installed speech synthesis  (text-to-speech) voices that support a specific locale.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8236-162">Retorna uma coleção somente leitura das vozes instaladas atualmente no sistema que dão suporte a uma localidade específica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-162">Returns a read-only collection of the voices currently installed on the system that support the specified locale.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8236-163">Se nenhuma das vozes instaladas suporte a localidade especificada, esse método retorna uma coleção vazia.</span><span class="sxs-lookup"><span data-stu-id="d8236-163">If none of the installed voices support the specified locale, this method returns an empty collection.</span></span>  
  
 <span data-ttu-id="d8236-164">Microsoft Windows e a API de System. Speech aceitam todos os códigos de idioma-país válidos.</span><span class="sxs-lookup"><span data-stu-id="d8236-164">Microsoft Windows and the System.Speech API accept all valid language-country codes.</span></span> <span data-ttu-id="d8236-165">Para executar o texto em fala usando o idioma especificado na propriedade de cultura, um mecanismo de síntese de fala que dá suporte a esse código de idioma-país deve ser instalado.</span><span class="sxs-lookup"><span data-stu-id="d8236-165">To perform text-to-speech using the language specified in the Culture property, a speech synthesis engine that supports that language-country code must be installed.</span></span> <span data-ttu-id="d8236-166">Os mecanismos de síntese de fala que acompanha o Microsoft Windows 7 funcionam com os seguintes códigos de idioma-país:</span><span class="sxs-lookup"><span data-stu-id="d8236-166">The speech synthesis engines that shipped with Microsoft Windows 7 work with the following language-country codes:</span></span>  
  
-   <span data-ttu-id="d8236-167">en-US.</span><span class="sxs-lookup"><span data-stu-id="d8236-167">en-US.</span></span> <span data-ttu-id="d8236-168">Inglês (Estados Unidos)</span><span class="sxs-lookup"><span data-stu-id="d8236-168">English (United States)</span></span>  
  
-   <span data-ttu-id="d8236-169">zh-CN.</span><span class="sxs-lookup"><span data-stu-id="d8236-169">zh-CN.</span></span> <span data-ttu-id="d8236-170">Chinês (China)</span><span class="sxs-lookup"><span data-stu-id="d8236-170">Chinese (China)</span></span>  
  
-   <span data-ttu-id="d8236-171">zh-TW.</span><span class="sxs-lookup"><span data-stu-id="d8236-171">zh-TW.</span></span> <span data-ttu-id="d8236-172">Chinês (Taiwan)</span><span class="sxs-lookup"><span data-stu-id="d8236-172">Chinese (Taiwan)</span></span>  
  
 <span data-ttu-id="d8236-173">Códigos de idioma de duas letras, como "en" também são permitidos.</span><span class="sxs-lookup"><span data-stu-id="d8236-173">Two-letter language codes such as "en" are also permitted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8236-174">O exemplo a seguir é parte de um aplicativo de console que inicializa um <xref:System.Speech.Synthesis.SpeechSynthesizer> de objeto e gera como saída para o console de uma lista das vozes instaladas que dão suporte a localidade en-US.</span><span class="sxs-lookup"><span data-stu-id="d8236-174">The following example is part of a console application that initializes a <xref:System.Speech.Synthesis.SpeechSynthesizer> object and outputs to the console a list of the installed voices that support the en-US locale.</span></span>  
  
```csharp  
using System;  
using System.Globalization;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the speech synthesizer.  
      using (SpeechSynthesizer synthesizer = new SpeechSynthesizer())  
      {  
  
        // Output information about all of the installed voices that  
        // support the en-US locacale.   
        Console.WriteLine("Installed voices for the en-US locale:");  
        foreach (InstalledVoice voice in  
          synthesizer.GetInstalledVoices(new CultureInfo("en-US")))  
        {  
          VoiceInfo info = voice.VoiceInfo;  
          OutputVoiceInfo(info);  
        }  
  
        // Output information about the current voice.  
        Console.WriteLine();  
        Console.WriteLine("Current voice:");  
        OutputVoiceInfo(synthesizer.Voice);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Display information about a synthesizer voice.  
    private static void OutputVoiceInfo(VoiceInfo info)  
    {  
      Console.WriteLine("  Name: {0}, culture: {1}, gender: {2}, age: {3}.",  
        info.Name, info.Culture, info.Gender, info.Age);  
      Console.WriteLine("    Description: {0}", info.Description);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.InstalledVoice" />
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Pause" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pause ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pause();" />
      <MemberSignature Language="F#" Value="member this.Pause : unit -&gt; unit" Usage="speechSynthesizer.Pause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d8236-175">Pausa o objeto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-175">Pauses the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.Resume" />
        <altmember cref="P:System.Speech.Synthesis.SpeechSynthesizer.State" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" />
      </Docs>
    </Member>
    <Member MemberName="PhonemeReached">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.PhonemeReachedEventArgs&gt; PhonemeReached;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.PhonemeReachedEventArgs&gt; PhonemeReached" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PhonemeReached As EventHandler(Of PhonemeReachedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::PhonemeReachedEventArgs ^&gt; ^ PhonemeReached;" />
      <MemberSignature Language="F#" Value="member this.PhonemeReached : EventHandler&lt;System.Speech.Synthesis.PhonemeReachedEventArgs&gt; " Usage="member this.PhonemeReached : System.EventHandler&lt;System.Speech.Synthesis.PhonemeReachedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.PhonemeReachedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8236-176">Acionado quando um fonema é alcançado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-176">Raised when a phoneme is reached.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8236-177">Um fonema é um componente básico do idioma escrito, normalmente com uma letra de um alfabeto (ou a combinação de duas letras) que representa um ou mais sons distintos.</span><span class="sxs-lookup"><span data-stu-id="d8236-177">A phoneme is a basic component of written language, typically a letter of an alphabet (or the combination of two letters) that represents one or more distinct sounds.</span></span> <span data-ttu-id="d8236-178">Por exemplo, a letra "c" é um fonema que pode parecer como o "s" em "concreto", ou como o "k" em "catch".</span><span class="sxs-lookup"><span data-stu-id="d8236-178">For example, the letter "c" is a phoneme that may sound like "s" in "cinder", or like "k" in "catch".</span></span> <span data-ttu-id="d8236-179">Uma palavra escrita é um assemblage de fonemas.</span><span class="sxs-lookup"><span data-stu-id="d8236-179">A written word is an assemblage of phonemes.</span></span> <span data-ttu-id="d8236-180">Alterar um fonema em uma palavra alterará a ortografia.</span><span class="sxs-lookup"><span data-stu-id="d8236-180">Changing a phoneme in a word will alter its spelling.</span></span>  
  
 <span data-ttu-id="d8236-181">Um <xref:System.Speech.Synthesis.SpeechSynthesizer> instância gera um <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> evento para cada parte de uma palavra que constitui um fonema.</span><span class="sxs-lookup"><span data-stu-id="d8236-181">A <xref:System.Speech.Synthesis.SpeechSynthesizer> instance generates a <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> event for each portion of a word that constitutes a phoneme.</span></span> <span data-ttu-id="d8236-182">Por exemplo, para a palavra "tema" geraria três <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> eventos, uma para o som "th", um para o som "e" e outro para o som de "m" (me).</span><span class="sxs-lookup"><span data-stu-id="d8236-182">For example, for the word "theme" would generate three <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> events; one for the "th" sound, one for the "e" sound, and one for the "m" sound (me).</span></span>  
  
 <span data-ttu-id="d8236-183">Para obter um exemplo e informações sobre os dados associados ao evento, consulte <xref:System.Speech.Synthesis.PhonemeReachedEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="d8236-183">For an example and information about data associated with the event, see <xref:System.Speech.Synthesis.PhonemeReachedEventArgs>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Rate">
      <MemberSignature Language="C#" Value="public int Rate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Rate" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeechSynthesizer.Rate" />
      <MemberSignature Language="VB.NET" Value="Public Property Rate As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Rate { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Rate : int with get, set" Usage="System.Speech.Synthesis.SpeechSynthesizer.Rate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8236-184">Obtém ou define a taxa de fala do objeto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-184">Gets or sets the speaking rate of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d8236-185">Retorna a taxa de fala do objeto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />, que vai de -10 a 10.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-185">Returns the speaking rate of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object, from -10 through 10.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d8236-186">O exemplo a seguir está ligado a uma cadeia de caracteres com a taxa de fala definida como -2.</span><span class="sxs-lookup"><span data-stu-id="d8236-186">The following example speaks a string with the speaking rate set to -2.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Set a value for the speaking rate.  
      synth.Rate = -2;  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Speak a text string synchronously.  
      synth.Speak("This example speaks a string with the speaking rate set to -2.");  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }     
  }    
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.PromptStyle" />
        <altmember cref="T:System.Speech.Synthesis.PromptRate" />
      </Docs>
    </Member>
    <Member MemberName="RemoveLexicon">
      <MemberSignature Language="C#" Value="public void RemoveLexicon (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveLexicon(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveLexicon(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="member this.RemoveLexicon : Uri -&gt; unit" Usage="speechSynthesizer.RemoveLexicon uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">
          <span data-ttu-id="d8236-187">O local do documento léxico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-187">The location of the lexicon document.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8236-188">Remove um léxico do objeto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-188">Removes a lexicon from the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8236-189">Para ver um exemplo, consulte <xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A>.</span><span class="sxs-lookup"><span data-stu-id="d8236-189">See <xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A> for an example.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon(System.Uri,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Resume" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume();" />
      <MemberSignature Language="F#" Value="member this.Resume : unit -&gt; unit" Usage="speechSynthesizer.Resume " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d8236-190">Retoma o objeto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> depois que ele está em pausa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-190">Resumes the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object after it has been paused.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.Pause" />
        <altmember cref="P:System.Speech.Synthesis.SpeechSynthesizer.State" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" />
      </Docs>
    </Member>
    <Member MemberName="SelectVoice">
      <MemberSignature Language="C#" Value="public void SelectVoice (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoice(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoice (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoice(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.SelectVoice : string -&gt; unit" Usage="speechSynthesizer.SelectVoice name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="d8236-191">O nome da voz a ser selecionada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-191">The name of the voice to select.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8236-192">Seleciona uma voz específica por nome.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-192">Selects a specific voice by name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8236-193">Use o <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> método e <xref:System.Speech.Synthesis.VoiceInfo> instalado de classe para obter os nomes das vozes de texto em fala (TTS) que você pode selecionar.</span><span class="sxs-lookup"><span data-stu-id="d8236-193">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names of installed text-to-speech (TTS) voices that you can select.</span></span> <span data-ttu-id="d8236-194">Para selecionar uma voz, passar todo o conteúdo a <xref:System.Speech.Synthesis.VoiceInfo.Name%2A> propriedade como o argumento para o <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> método.</span><span class="sxs-lookup"><span data-stu-id="d8236-194">To select a voice, pass the entire contents of the <xref:System.Speech.Synthesis.VoiceInfo.Name%2A> property as the argument for the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method.</span></span> <span data-ttu-id="d8236-195">O <xref:System.Speech.Synthesis.SpeechSynthesizer> objeto seleciona a primeira voz instalada que contém `name` na voz <xref:System.Speech.Synthesis.VoiceInfo.Name%2A?displayProperty=nameWithType> propriedade.</span><span class="sxs-lookup"><span data-stu-id="d8236-195">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object selects the first installed voice that contains `name` in the voice's <xref:System.Speech.Synthesis.VoiceInfo.Name%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="d8236-196">O <xref:System.Speech.Synthesis.SpeechSynthesizer> executa uma comparação de subcadeia de caracteres diferencia maiusculas de minúsculas, para determinar se a voz corresponde a `name`.</span><span class="sxs-lookup"><span data-stu-id="d8236-196">The <xref:System.Speech.Synthesis.SpeechSynthesizer> performs a case-sensitive, substring comparison to determine if the voice matches the `name`.</span></span>  
  
 <span data-ttu-id="d8236-197">Quando um aplicativo chama <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, o método verifica que cada uma das vozes encontra no registro atende a determinados critérios mínimos.</span><span class="sxs-lookup"><span data-stu-id="d8236-197">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="d8236-198">Para qualquer que falha na verificação, voz <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> define seu <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propriedade `False`.</span><span class="sxs-lookup"><span data-stu-id="d8236-198">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="d8236-199">Um aplicativo não é possível selecionar uma voz cujos <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> é de propriedade `False`.</span><span class="sxs-lookup"><span data-stu-id="d8236-199">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="d8236-200">Normalmente, aplicativos não definirá uma voz <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="d8236-200">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="d8236-201">Para selecionar uma voz por gênero, idade ou localidade, use um do <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="d8236-201">To select a voice by gender, age, or locale, use one of the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SelectVoiceByHints">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d8236-202">Seleciona uma voz com características específicas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-202">Selects a voice with specific characteristics.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8236-203">Use o <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> método e <xref:System.Speech.Synthesis.VoiceInfo> instalado de classe para obter os nomes das vozes de texto em fala (TTS) que você pode selecionar.</span><span class="sxs-lookup"><span data-stu-id="d8236-203">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names of installed text-to-speech (TTS) voices that you can select.</span></span> <span data-ttu-id="d8236-204">O <xref:System.Speech.Synthesis.SpeechSynthesizer> objeto seleciona a primeira voz instalada que coincide com as características especificadas.</span><span class="sxs-lookup"><span data-stu-id="d8236-204">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object selects the first installed voice that matches the specified characteristics.</span></span>  
  
 <span data-ttu-id="d8236-205">Quando um aplicativo chama <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, o método verifica que cada uma das vozes encontra no registro atende a determinados critérios mínimos.</span><span class="sxs-lookup"><span data-stu-id="d8236-205">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="d8236-206">Para qualquer que falha na verificação, voz <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> define seu <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propriedade `False`.</span><span class="sxs-lookup"><span data-stu-id="d8236-206">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="d8236-207">Um aplicativo não é possível selecionar uma voz cujos <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> é de propriedade `False`.</span><span class="sxs-lookup"><span data-stu-id="d8236-207">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="d8236-208">Normalmente, aplicativos não definirá uma voz <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="d8236-208">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="d8236-209">Para selecionar uma voz por nome, use o <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> método</span><span class="sxs-lookup"><span data-stu-id="d8236-209">To select a voice by name, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SelectVoiceByHints">
      <MemberSignature Language="C#" Value="public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoiceByHints(valuetype System.Speech.Synthesis.VoiceGender gender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoiceByHints (gender As VoiceGender)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoiceByHints(System::Speech::Synthesis::VoiceGender gender);" />
      <MemberSignature Language="F#" Value="member this.SelectVoiceByHints : System.Speech.Synthesis.VoiceGender -&gt; unit" Usage="speechSynthesizer.SelectVoiceByHints gender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
      </Parameters>
      <Docs>
        <param name="gender">
          <span data-ttu-id="d8236-210">O sexo da voz a ser selecionada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-210">The gender of the voice to select.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8236-211">Seleciona uma voz com um gênero específico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-211">Selects a voice with a specific gender.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8236-212">Use o <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> método e <xref:System.Speech.Synthesis.VoiceInfo> instalado de classe para obter os nomes das vozes de texto em fala (TTS) que você pode selecionar.</span><span class="sxs-lookup"><span data-stu-id="d8236-212">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names of installed text-to-speech (TTS) voices that you can select.</span></span> <span data-ttu-id="d8236-213">O <xref:System.Speech.Synthesis.SpeechSynthesizer> objeto seleciona a primeira voz instalada cuja <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> correspondências de propriedade a `gender` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="d8236-213">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object selects the first installed voice whose <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> property matches the `gender` parameter.</span></span>  
  
 <span data-ttu-id="d8236-214">Quando um aplicativo chama <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, o método verifica que cada uma das vozes encontra no registro atende a determinados critérios mínimos.</span><span class="sxs-lookup"><span data-stu-id="d8236-214">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="d8236-215">Para qualquer que falha na verificação, voz <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> define seu <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propriedade `False`.</span><span class="sxs-lookup"><span data-stu-id="d8236-215">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="d8236-216">Um aplicativo não é possível selecionar uma voz cujos <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> é de propriedade `False`.</span><span class="sxs-lookup"><span data-stu-id="d8236-216">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="d8236-217">Normalmente, aplicativos não definirá uma voz <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="d8236-217">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="d8236-218">Para selecionar uma voz com base em outras características, consulte o outro <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="d8236-218">To select a voice based on other characteristics, see the other <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> methods.</span></span>  
  
 <span data-ttu-id="d8236-219">Para selecionar uma voz por nome, use o <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> método.</span><span class="sxs-lookup"><span data-stu-id="d8236-219">To select a voice by name, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.VoiceGender" />
        <altmember cref="T:System.Speech.Synthesis.VoiceInfo" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SelectVoiceByHints">
      <MemberSignature Language="C#" Value="public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender, System.Speech.Synthesis.VoiceAge age);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoiceByHints(valuetype System.Speech.Synthesis.VoiceGender gender, valuetype System.Speech.Synthesis.VoiceAge age) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoiceByHints (gender As VoiceGender, age As VoiceAge)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoiceByHints(System::Speech::Synthesis::VoiceGender gender, System::Speech::Synthesis::VoiceAge age);" />
      <MemberSignature Language="F#" Value="member this.SelectVoiceByHints : System.Speech.Synthesis.VoiceGender * System.Speech.Synthesis.VoiceAge -&gt; unit" Usage="speechSynthesizer.SelectVoiceByHints (gender, age)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
        <Parameter Name="age" Type="System.Speech.Synthesis.VoiceAge" />
      </Parameters>
      <Docs>
        <param name="gender">
          <span data-ttu-id="d8236-220">O sexo da voz a ser selecionada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-220">The gender of the voice to select.</span>
          </span>
        </param>
        <param name="age">
          <span data-ttu-id="d8236-221">A idade da voz a ser selecionada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-221">The age of the voice to select.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8236-222">Seleciona uma voz com um gênero e uma idade específicos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-222">Selects a voice with a specific gender and age.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8236-223">Use o <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> método e <xref:System.Speech.Synthesis.VoiceInfo> instalado de classe para obter os nomes das vozes de texto em fala (TTS) que você pode selecionar.</span><span class="sxs-lookup"><span data-stu-id="d8236-223">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names of installed text-to-speech (TTS) voices that you can select.</span></span> <span data-ttu-id="d8236-224">O <xref:System.Speech.Synthesis.SpeechSynthesizer> objeto seleciona a voz instalada primeiro cujos <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> e <xref:System.Speech.Synthesis.VoiceInfo.Age%2A> propriedades de correspondência a `gender` e `age` parâmetros.</span><span class="sxs-lookup"><span data-stu-id="d8236-224">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object selects the first installed voice whose <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> and <xref:System.Speech.Synthesis.VoiceInfo.Age%2A> properties match the `gender` and `age` parameters.</span></span>  
  
 <span data-ttu-id="d8236-225">Quando um aplicativo chama <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, o método verifica que cada uma das vozes encontra no registro atende a determinados critérios mínimos.</span><span class="sxs-lookup"><span data-stu-id="d8236-225">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="d8236-226">Para qualquer que falha na verificação, voz <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> define seu <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propriedade `False`.</span><span class="sxs-lookup"><span data-stu-id="d8236-226">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="d8236-227">Um aplicativo não é possível selecionar uma voz cujos <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> é de propriedade `False`.</span><span class="sxs-lookup"><span data-stu-id="d8236-227">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="d8236-228">Normalmente, aplicativos não definirá uma voz <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="d8236-228">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="d8236-229">Para selecionar uma voz com base em outras características, consulte o outro <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="d8236-229">To select a voice based on other characteristics, see the other <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> methods.</span></span>  
  
 <span data-ttu-id="d8236-230">Para selecionar uma voz por nome, use o <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> método.</span><span class="sxs-lookup"><span data-stu-id="d8236-230">To select a voice by name, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.VoiceAge" />
        <altmember cref="T:System.Speech.Synthesis.VoiceGender" />
        <altmember cref="T:System.Speech.Synthesis.VoiceInfo" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SelectVoiceByHints">
      <MemberSignature Language="C#" Value="public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender, System.Speech.Synthesis.VoiceAge age, int voiceAlternate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoiceByHints(valuetype System.Speech.Synthesis.VoiceGender gender, valuetype System.Speech.Synthesis.VoiceAge age, int32 voiceAlternate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoiceByHints (gender As VoiceGender, age As VoiceAge, voiceAlternate As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoiceByHints(System::Speech::Synthesis::VoiceGender gender, System::Speech::Synthesis::VoiceAge age, int voiceAlternate);" />
      <MemberSignature Language="F#" Value="member this.SelectVoiceByHints : System.Speech.Synthesis.VoiceGender * System.Speech.Synthesis.VoiceAge * int -&gt; unit" Usage="speechSynthesizer.SelectVoiceByHints (gender, age, voiceAlternate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
        <Parameter Name="age" Type="System.Speech.Synthesis.VoiceAge" />
        <Parameter Name="voiceAlternate" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="gender">
          <span data-ttu-id="d8236-231">O sexo da voz a ser selecionada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-231">The gender of the voice to select.</span>
          </span>
        </param>
        <param name="age">
          <span data-ttu-id="d8236-232">A idade da voz a ser selecionada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-232">The age of the voice to select.</span>
          </span>
        </param>
        <param name="voiceAlternate">
          <span data-ttu-id="d8236-233">A posição da voz a ser selecionada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-233">The position of the voice to select.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8236-234">Seleciona uma voz com um sexo e idade específicos, com base na posição na qual as vozes são ordenadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-234">Selects a voice with a specific gender and age, based on the position in which the voices are ordered.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8236-235">Use o <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> método e <xref:System.Speech.Synthesis.VoiceInfo> instalado de classe para obter os nomes das vozes de texto em fala (TTS) que você pode selecionar.</span><span class="sxs-lookup"><span data-stu-id="d8236-235">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names of installed text-to-speech (TTS) voices that you can select.</span></span> <span data-ttu-id="d8236-236">O <xref:System.Speech.Synthesis.SpeechSynthesizer> objeto encontra instalada vozes cuja <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> e <xref:System.Speech.Synthesis.VoiceInfo.Age%2A> propriedades de correspondência a `gender` e `age` parâmetros.</span><span class="sxs-lookup"><span data-stu-id="d8236-236">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object finds installed voices whose <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> and <xref:System.Speech.Synthesis.VoiceInfo.Age%2A> properties match the `gender` and `age` parameters.</span></span> <span data-ttu-id="d8236-237">O <xref:System.Speech.Synthesis.SpeechSynthesizer> conta as correspondências que localiza e retorna a voz quando a contagem for igual a `voiceAlternate` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="d8236-237">The <xref:System.Speech.Synthesis.SpeechSynthesizer> counts the matches it finds, and returns the voice when the count equals the `voiceAlternate` parameter.</span></span>  
  
 <span data-ttu-id="d8236-238">Quando um aplicativo chama <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, o método verifica que cada uma das vozes encontra no registro atende a determinados critérios mínimos.</span><span class="sxs-lookup"><span data-stu-id="d8236-238">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="d8236-239">Para qualquer que falha na verificação, voz <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> define seu <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propriedade `False`.</span><span class="sxs-lookup"><span data-stu-id="d8236-239">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="d8236-240">Um aplicativo não é possível selecionar uma voz cujos <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> é de propriedade `False`.</span><span class="sxs-lookup"><span data-stu-id="d8236-240">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="d8236-241">Normalmente, aplicativos não definirá uma voz <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="d8236-241">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="d8236-242">Para selecionar uma voz com base em outras características, consulte o outro <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> sobrecargas.</span><span class="sxs-lookup"><span data-stu-id="d8236-242">To select a voice based on other characteristics, see the other <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> overloads.</span></span>  
  
 <span data-ttu-id="d8236-243">Para selecionar uma voz por nome, use o <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> método.</span><span class="sxs-lookup"><span data-stu-id="d8236-243">To select a voice by name, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.VoiceAge" />
        <altmember cref="T:System.Speech.Synthesis.VoiceGender" />
        <altmember cref="T:System.Speech.Synthesis.VoiceInfo" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SelectVoiceByHints">
      <MemberSignature Language="C#" Value="public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender, System.Speech.Synthesis.VoiceAge age, int voiceAlternate, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoiceByHints(valuetype System.Speech.Synthesis.VoiceGender gender, valuetype System.Speech.Synthesis.VoiceAge age, int32 voiceAlternate, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoiceByHints (gender As VoiceGender, age As VoiceAge, voiceAlternate As Integer, culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoiceByHints(System::Speech::Synthesis::VoiceGender gender, System::Speech::Synthesis::VoiceAge age, int voiceAlternate, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="member this.SelectVoiceByHints : System.Speech.Synthesis.VoiceGender * System.Speech.Synthesis.VoiceAge * int * System.Globalization.CultureInfo -&gt; unit" Usage="speechSynthesizer.SelectVoiceByHints (gender, age, voiceAlternate, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
        <Parameter Name="age" Type="System.Speech.Synthesis.VoiceAge" />
        <Parameter Name="voiceAlternate" Type="System.Int32" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="gender">
          <span data-ttu-id="d8236-244">O sexo da voz a ser selecionada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-244">The gender of the voice to select.</span>
          </span>
        </param>
        <param name="age">
          <span data-ttu-id="d8236-245">A idade da voz a ser selecionada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-245">The age of the voice to select.</span>
          </span>
        </param>
        <param name="voiceAlternate">
          <span data-ttu-id="d8236-246">A posição da voz a ser selecionada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-246">The position of the voice to select.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="d8236-247">A localidade da voz a ser selecionada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-247">The locale of the voice to select.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8236-248">Seleciona uma voz com um sexo, idade e localidade específicos, com base na posição na qual as vozes são ordenadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-248">Selects a voice with a specific gender, age, and locale, based on the position in which the voices are ordered.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8236-249">O <xref:System.Speech.Synthesis.SpeechSynthesizer> objeto encontra vozes cuja <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A>, <xref:System.Speech.Synthesis.VoiceInfo.Age%2A>, e <xref:System.Speech.Synthesis.VoiceInfo.Culture%2A> correspondência de propriedades de `gender`, `age`, e `culture` parâmetros.</span><span class="sxs-lookup"><span data-stu-id="d8236-249">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object finds voices whose <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A>, <xref:System.Speech.Synthesis.VoiceInfo.Age%2A>, and <xref:System.Speech.Synthesis.VoiceInfo.Culture%2A> properties match the `gender`, `age`, and `culture` parameters.</span></span> <span data-ttu-id="d8236-250">O <xref:System.Speech.Synthesis.SpeechSynthesizer> conta as correspondências que localiza e retorna a voz quando a contagem for igual a `voiceAlternate` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="d8236-250">The <xref:System.Speech.Synthesis.SpeechSynthesizer> counts the matches it finds, and returns the voice when the count equals the `voiceAlternate` parameter.</span></span>  
  
 <span data-ttu-id="d8236-251">Microsoft Windows e a API de System. Speech aceitam todos os códigos de idioma-país válidos.</span><span class="sxs-lookup"><span data-stu-id="d8236-251">Microsoft Windows and the System.Speech API accept all valid language-country codes.</span></span> <span data-ttu-id="d8236-252">Para executar usando o idioma especificado em texto para fala a `culture` parâmetro, um mecanismo de síntese de fala que dá suporte a que o código de idioma-país deve ser instalado.</span><span class="sxs-lookup"><span data-stu-id="d8236-252">To perform text-to-speech using the language specified in the `culture` parameter, a speech synthesis engine that supports that language-country code must be installed.</span></span> <span data-ttu-id="d8236-253">Os mecanismos de síntese de fala que acompanha o Microsoft Windows 7 funcionam com os seguintes códigos de idioma-país:</span><span class="sxs-lookup"><span data-stu-id="d8236-253">The speech synthesis engines that shipped with Microsoft Windows 7 work with the following language-country codes:</span></span>  
  
-   <span data-ttu-id="d8236-254">en-US.</span><span class="sxs-lookup"><span data-stu-id="d8236-254">en-US.</span></span> <span data-ttu-id="d8236-255">Inglês (Estados Unidos)</span><span class="sxs-lookup"><span data-stu-id="d8236-255">English (United States)</span></span>  
  
-   <span data-ttu-id="d8236-256">zh-CN.</span><span class="sxs-lookup"><span data-stu-id="d8236-256">zh-CN.</span></span> <span data-ttu-id="d8236-257">Chinês (China)</span><span class="sxs-lookup"><span data-stu-id="d8236-257">Chinese (China)</span></span>  
  
-   <span data-ttu-id="d8236-258">zh-TW.</span><span class="sxs-lookup"><span data-stu-id="d8236-258">zh-TW.</span></span> <span data-ttu-id="d8236-259">Chinês (Taiwan)</span><span class="sxs-lookup"><span data-stu-id="d8236-259">Chinese (Taiwan)</span></span>  
  
 <span data-ttu-id="d8236-260">Códigos de idioma de duas letras, como "en" também são permitidos.</span><span class="sxs-lookup"><span data-stu-id="d8236-260">Two-letter language codes such as "en" are also permitted.</span></span>  
  
 <span data-ttu-id="d8236-261">Quando um aplicativo chama <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, o método verifica que cada uma das vozes encontra no registro atende a determinados critérios mínimos.</span><span class="sxs-lookup"><span data-stu-id="d8236-261">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="d8236-262">Para qualquer que falha na verificação, voz <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> define seu <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propriedade `False`.</span><span class="sxs-lookup"><span data-stu-id="d8236-262">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="d8236-263">Um aplicativo não é possível selecionar uma voz cujos <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> é de propriedade `False`.</span><span class="sxs-lookup"><span data-stu-id="d8236-263">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="d8236-264">Normalmente, aplicativos não definirá uma voz <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="d8236-264">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="d8236-265">Para selecionar uma voz com base em outras características, consulte o outro <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> sobrecargas.</span><span class="sxs-lookup"><span data-stu-id="d8236-265">To select a voice based on other characteristics, see the other <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> overloads.</span></span>  
  
 <span data-ttu-id="d8236-266">Para selecionar uma voz por nome, use o <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> método.</span><span class="sxs-lookup"><span data-stu-id="d8236-266">To select a voice by name, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Speech.Synthesis.VoiceAge" />
        <altmember cref="T:System.Speech.Synthesis.VoiceGender" />
        <altmember cref="T:System.Speech.Synthesis.VoiceInfo" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetOutputToAudioStream">
      <MemberSignature Language="C#" Value="public void SetOutputToAudioStream (System.IO.Stream audioDestination, System.Speech.AudioFormat.SpeechAudioFormatInfo formatInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToAudioStream(class System.IO.Stream audioDestination, class System.Speech.AudioFormat.SpeechAudioFormatInfo formatInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToAudioStream (audioDestination As Stream, formatInfo As SpeechAudioFormatInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToAudioStream(System::IO::Stream ^ audioDestination, System::Speech::AudioFormat::SpeechAudioFormatInfo ^ formatInfo);" />
      <MemberSignature Language="F#" Value="member this.SetOutputToAudioStream : System.IO.Stream * System.Speech.AudioFormat.SpeechAudioFormatInfo -&gt; unit" Usage="speechSynthesizer.SetOutputToAudioStream (audioDestination, formatInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioDestination" Type="System.IO.Stream" />
        <Parameter Name="formatInfo" Type="System.Speech.AudioFormat.SpeechAudioFormatInfo" />
      </Parameters>
      <Docs>
        <param name="audioDestination">
          <span data-ttu-id="d8236-267">O fluxo ao qual a saída de síntese será acrescentada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-267">The stream to which to append synthesis output.</span>
          </span>
        </param>
        <param name="formatInfo">
          <span data-ttu-id="d8236-268">O formato a ser usado para a saída da síntese.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-268">The format to use for the synthesis output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8236-269">Configura o objeto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> para acrescentar a saída a um fluxo de áudio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-269">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to an audio stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8236-270">Chame <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A> para liberar o <xref:System.Speech.Synthesis.SpeechSynthesizer>da referência ao fluxo.</span><span class="sxs-lookup"><span data-stu-id="d8236-270">Call <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A> to release the <xref:System.Speech.Synthesis.SpeechSynthesizer>’s  reference to the stream.</span></span>  
  
 <span data-ttu-id="d8236-271">Para obter outras opções de configuração de saída, consulte o <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, e <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="d8236-271">For other output configuration options, see the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOutputToDefaultAudioDevice">
      <MemberSignature Language="C#" Value="public void SetOutputToDefaultAudioDevice ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToDefaultAudioDevice() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToDefaultAudioDevice ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToDefaultAudioDevice();" />
      <MemberSignature Language="F#" Value="member this.SetOutputToDefaultAudioDevice : unit -&gt; unit" Usage="speechSynthesizer.SetOutputToDefaultAudioDevice " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d8236-272">Configura o objeto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> para enviar a saída para o dispositivo de áudio padrão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-272">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to send output to the default audio device.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8236-273">Você pode usar o **som** janela no Windows **painel de controle** para configurar o dispositivo de áudio padrão para o computador.</span><span class="sxs-lookup"><span data-stu-id="d8236-273">You can use the  **Sound** window in the Windows **Control Panel** to configure the default audio device for the computer.</span></span>  
  
 <span data-ttu-id="d8236-274">Para obter outras opções de configuração de saída, consulte o <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, e <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="d8236-274">For other output configuration options, see the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8236-275">O exemplo a seguir usa o sintetizador dizer uma frase para a saída de áudio padrão.</span><span class="sxs-lookup"><span data-stu-id="d8236-275">The following example uses the synthesizer to speak a phrase to the default audio output.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the speech synthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the synthesizer to send output to the default audio device.  
        synth.SetOutputToDefaultAudioDevice();  
  
        // Speak a phrase.  
        synth.Speak("This is sample text-to-speech output.");  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOutputToNull">
      <MemberSignature Language="C#" Value="public void SetOutputToNull ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToNull() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToNull ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToNull();" />
      <MemberSignature Language="F#" Value="member this.SetOutputToNull : unit -&gt; unit" Usage="speechSynthesizer.SetOutputToNull " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d8236-276">Configura o objeto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> para não enviar a saída de operações de síntese para um dispositivo, arquivo ou fluxo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-276">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to not send output from synthesis operations to a device, file, or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8236-277">Use esse método para liberar o <xref:System.Speech.Synthesis.SpeechSynthesizer> da referência a um arquivo ou fluxo.</span><span class="sxs-lookup"><span data-stu-id="d8236-277">Use this method to release the <xref:System.Speech.Synthesis.SpeechSynthesizer> ‘s reference to a file or stream.</span></span> <span data-ttu-id="d8236-278">Para ver um exemplo, consulte <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A>.</span><span class="sxs-lookup"><span data-stu-id="d8236-278">See <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> for an example.</span></span>  
  
 <span data-ttu-id="d8236-279">Para obter outras opções de configuração de saída, consulte o <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, e <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="d8236-279">For other output configuration options, see the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetOutputToWaveFile">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d8236-280">Configura o objeto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> para acrescentar a saída a um arquivo de formato de áudio de forma de onda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-280">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to a Waveform audio format file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8236-281">Para liberar o <xref:System.Speech.Synthesis.SpeechSynthesizer>referência para o arquivo, reconfigure o <xref:System.Speech.Synthesis.SpeechSynthesizer>da saída, por exemplo, chamando <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>.</span><span class="sxs-lookup"><span data-stu-id="d8236-281">To release the <xref:System.Speech.Synthesis.SpeechSynthesizer>’s  reference to the file, reconfigure the <xref:System.Speech.Synthesis.SpeechSynthesizer>’s output, for example, by calling <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>.</span></span>  
  
 <span data-ttu-id="d8236-282">Para obter outras opções de configuração de saída, consulte o <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, e <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="d8236-282">For other output configuration options, see the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetOutputToWaveFile">
      <MemberSignature Language="C#" Value="public void SetOutputToWaveFile (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToWaveFile(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToWaveFile (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToWaveFile(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.SetOutputToWaveFile : string -&gt; unit" Usage="speechSynthesizer.SetOutputToWaveFile path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="d8236-283">O caminho para o arquivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-283">The path to the file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8236-284">Configura o objeto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> para acrescentar a saída a um arquivo que contém o áudio do formato Waveform.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-284">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to a file that contains Waveform format audio.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8236-285">Para configurar a saída e especificar o formato de áudio, use o <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> método.</span><span class="sxs-lookup"><span data-stu-id="d8236-285">To configure the output and specify the audio format, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8236-286">O exemplo a seguir usa uma instância de <xref:System.Media.SoundPlayer> para reproduzir um prompt que tem sido a saída para um arquivo. wav.</span><span class="sxs-lookup"><span data-stu-id="d8236-286">The following example uses an instance of <xref:System.Media.SoundPlayer> to play a prompt that has been output to a .wav file.</span></span> <span data-ttu-id="d8236-287">Porque o <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> chamada é assíncrona, o <xref:System.Media.SoundPlayer> instância é criada (e o <xref:System.Media.SoundPlayer.Play%2A> método invocado) no manipulador para o <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> eventos.</span><span class="sxs-lookup"><span data-stu-id="d8236-287">Because the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> call is asynchronous, the <xref:System.Media.SoundPlayer> instance is created (and the <xref:System.Media.SoundPlayer.Play%2A> method invoked) in the handler for the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToWaveFile(@"C:\Test\Sample.wav");  
  
      // Register for the SpeakCompleted event.  
      synth.SpeakCompleted += new EventHandler<SpeakCompletedEventArgs>(synth_SpeakCompleted);  
  
      // Build a prompt.  
      PromptBuilder builder = new PromptBuilder();  
      builder.AppendText("This sample asynchronously speaks a prompt to a WAVE file.");  
  
      // Speak the string asynchronously.  
      synth.SpeakAsync(builder);  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Handle the SpeakCompleted event.  
    static void synth_SpeakCompleted(object sender, SpeakCompletedEventArgs e)  
    {  
  
      // Create a SoundPlayer instance to play the output audio file.  
      System.Media.SoundPlayer m_SoundPlayer =  
        new System.Media.SoundPlayer(@"C:\Test\Sample.wav");  
  
      //  Play the output file.  
      m_SoundPlayer.Play();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream(System.IO.Stream)" />
      </Docs>
    </Member>
    <Member MemberName="SetOutputToWaveFile">
      <MemberSignature Language="C#" Value="public void SetOutputToWaveFile (string path, System.Speech.AudioFormat.SpeechAudioFormatInfo formatInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToWaveFile(string path, class System.Speech.AudioFormat.SpeechAudioFormatInfo formatInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(System.String,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToWaveFile (path As String, formatInfo As SpeechAudioFormatInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToWaveFile(System::String ^ path, System::Speech::AudioFormat::SpeechAudioFormatInfo ^ formatInfo);" />
      <MemberSignature Language="F#" Value="member this.SetOutputToWaveFile : string * System.Speech.AudioFormat.SpeechAudioFormatInfo -&gt; unit" Usage="speechSynthesizer.SetOutputToWaveFile (path, formatInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="formatInfo" Type="System.Speech.AudioFormat.SpeechAudioFormatInfo" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="d8236-288">O caminho para o arquivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-288">The path to the file.</span>
          </span>
        </param>
        <param name="formatInfo">
          <span data-ttu-id="d8236-289">As informações de formato de áudio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-289">The audio format information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8236-290">Configura o objeto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> para acrescentar a saída a um arquivo de formato de áudio de forma de onda em um formato especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-290">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to a Waveform audio format file in a specified format.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d8236-291">O exemplo a seguir especifica o formato da saída de síntese de fala e envia-os para um arquivo WAV.</span><span class="sxs-lookup"><span data-stu-id="d8236-291">The following example specifies the format of the output of speech synthesis and sends it to a WAV file.</span></span>  
  
```csharp  
using System;  
using System.IO;  
using System.Speech.Synthesis;  
using System.Speech.AudioFormat;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToWaveFile(@"C:\temp\test.wav",   
          new SpeechAudioFormatInfo(32000, AudioBitsPerSample.Sixteen, AudioChannel.Mono));  
  
        // Create a SoundPlayer instance to play output audio file.  
        System.Media.SoundPlayer m_SoundPlayer =   
          new System.Media.SoundPlayer(@"C:\temp\test.wav");  
  
        // Build a prompt.  
        PromptBuilder builder = new PromptBuilder();  
        builder.AppendText("This is sample output to a WAVE file.");  
  
        // Speak the prompt.  
        synth.Speak(builder);  
        m_SoundPlayer.Play();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream(System.IO.Stream)" />
      </Docs>
    </Member>
    <Member MemberName="SetOutputToWaveStream">
      <MemberSignature Language="C#" Value="public void SetOutputToWaveStream (System.IO.Stream audioDestination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToWaveStream(class System.IO.Stream audioDestination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToWaveStream (audioDestination As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToWaveStream(System::IO::Stream ^ audioDestination);" />
      <MemberSignature Language="F#" Value="member this.SetOutputToWaveStream : System.IO.Stream -&gt; unit" Usage="speechSynthesizer.SetOutputToWaveStream audioDestination" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioDestination" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="audioDestination">
          <span data-ttu-id="d8236-292">O fluxo ao qual a saída de síntese será acrescentada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-292">The stream to which to append synthesis output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8236-293">Configura o objeto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> para acrescentar a saída a um fluxo que contém o áudio em formato de forma de onda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-293">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to a stream that contains Waveform format audio.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8236-294">Para liberar o <xref:System.Speech.Synthesis.SpeechSynthesizer>referência para o fluxo, reconfigure o sintetizador a saída, por exemplo, chamando <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>.</span><span class="sxs-lookup"><span data-stu-id="d8236-294">To release the <xref:System.Speech.Synthesis.SpeechSynthesizer>’s reference to the stream, reconfigure the synthesizer's output, for example, by calling <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>.</span></span>  
  
 <span data-ttu-id="d8236-295">Para obter outras opções de configuração de saída, consulte o <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, e <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="d8236-295">For other output configuration options, see the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8236-296">O exemplo a seguir gera uma frase em um fluxo WAV.</span><span class="sxs-lookup"><span data-stu-id="d8236-296">The following example outputs a phrase to a WAV stream.</span></span>  
  
```csharp  
using System;  
using System.IO;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the speech synthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      using (MemoryStream stream = new MemoryStream())  
      {  
  
        // Create a SoundPlayer instance to play the output audio file.  
        MemoryStream streamAudio = new MemoryStream();  
        System.Media.SoundPlayer m_SoundPlayer = new System.Media.SoundPlayer();  
  
        // Configure the synthesizer to output to an audio stream.  
        synth.SetOutputToWaveStream(streamAudio);  
  
        // Speak a phrase.  
        synth.Speak("This is sample text-to-speech output.");  
        streamAudio.Position = 0;  
        m_SoundPlayer.Stream = streamAudio;  
        m_SoundPlayer.Play();  
  
        // Set the synthesizer output to null to release the stream.   
        synth.SetOutputToNull();  
  
        // Insert code to persist or process the stream contents here.  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Speak">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d8236-297">Gera a saída de fala de forma síncrona de uma cadeia de caracteres, um objeto <see cref="T:System.Speech.Synthesis.Prompt" /> ou um objeto <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-297">Generates speech output synchronously from a string, a <see cref="T:System.Speech.Synthesis.Prompt" /> object, or a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8236-298">O <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> métodos geram fala de forma síncrona.</span><span class="sxs-lookup"><span data-stu-id="d8236-298">The <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> methods generate speech synchronously.</span></span> <span data-ttu-id="d8236-299">Os métodos não retornará até que o conteúdo a <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> instância já falou completamente.</span><span class="sxs-lookup"><span data-stu-id="d8236-299">The methods do not return until the content of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> instance has been completely spoken.</span></span> <span data-ttu-id="d8236-300">Essa é a maneira mais simples para gerar fala.</span><span class="sxs-lookup"><span data-stu-id="d8236-300">This is the simplest way to generate speech.</span></span> <span data-ttu-id="d8236-301">No entanto, se seu aplicativo precisa executar tarefas durante a fala, por exemplo realçar texto, Lata de animação, controles do monitor ou outras tarefas, usam o <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> métodos ou o <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> método para gerar fala de forma assíncrona.</span><span class="sxs-lookup"><span data-stu-id="d8236-301">However, if your application needs to perform tasks while speaking, for example highlight text, paint animation, monitor controls, or other tasks, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> methods or the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> method to generate speech asynchronously.</span></span>  
  
 <span data-ttu-id="d8236-302">Durante uma chamada para esse método, o <xref:System.Speech.Synthesis.SpeechSynthesizer> pode gerar eventos a seguir:</span><span class="sxs-lookup"><span data-stu-id="d8236-302">During a call to this method, the <xref:System.Speech.Synthesis.SpeechSynthesizer> can raise the following events:</span></span>  
  
-   <span data-ttu-id="d8236-303"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span><span class="sxs-lookup"><span data-stu-id="d8236-303"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span></span> <span data-ttu-id="d8236-304">Gerado quando muda o estado do sintetizador de falando.</span><span class="sxs-lookup"><span data-stu-id="d8236-304">Raised when the speaking state of the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="d8236-305"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span><span class="sxs-lookup"><span data-stu-id="d8236-305"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span></span> <span data-ttu-id="d8236-306">Gerado quando o sintetizador começa a gerar a fala.</span><span class="sxs-lookup"><span data-stu-id="d8236-306">Raised when the synthesizer begins generating speech.</span></span>  
  
-   <span data-ttu-id="d8236-307"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span><span class="sxs-lookup"><span data-stu-id="d8236-307"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span></span> <span data-ttu-id="d8236-308">Gerado sempre que o sintetizador atinge uma letra ou uma combinação de letras que constituem um som discreto de fala em um idioma.</span><span class="sxs-lookup"><span data-stu-id="d8236-308">Raised each time the synthesizer reaches a letter or combination of letters that constitute a discreet sound of speech in a language.</span></span>  
  
-   <span data-ttu-id="d8236-309"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span><span class="sxs-lookup"><span data-stu-id="d8236-309"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span></span> <span data-ttu-id="d8236-310">Gerado sempre que o sintetizador conclui falando em uma palavra.</span><span class="sxs-lookup"><span data-stu-id="d8236-310">Raised each time the synthesizer completes speaking a word.</span></span>  
  
-   <span data-ttu-id="d8236-311"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span><span class="sxs-lookup"><span data-stu-id="d8236-311"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span></span> <span data-ttu-id="d8236-312">Gerado sempre que a saída falada exige uma alteração na posição da boca ou os músculos faciais usados para gerar fala.</span><span class="sxs-lookup"><span data-stu-id="d8236-312">Raised each time spoken output requires a change in the position of the mouth or the facial muscles used to produce speech.</span></span>  
  
-   <span data-ttu-id="d8236-313"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span><span class="sxs-lookup"><span data-stu-id="d8236-313"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span></span> <span data-ttu-id="d8236-314">Gerado quando o sintetizador encontra um indicador em um prompt.</span><span class="sxs-lookup"><span data-stu-id="d8236-314">Raised when the synthesizer encounters a bookmark in a prompt.</span></span>  
  
-   <span data-ttu-id="d8236-315"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span><span class="sxs-lookup"><span data-stu-id="d8236-315"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span></span> <span data-ttu-id="d8236-316">Gerado quando a voz para o sintetizador de fala é alterado.</span><span class="sxs-lookup"><span data-stu-id="d8236-316">Raised when the speaking voice for the synthesizer changes.</span></span>  
  
 <span data-ttu-id="d8236-317">O <xref:System.Speech.Synthesis.SpeechSynthesizer> não dispara o <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> eventos durante o processamento de qualquer um do <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="d8236-317">The <xref:System.Speech.Synthesis.SpeechSynthesizer> does not raise the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event while processing any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Speak">
      <MemberSignature Language="C#" Value="public void Speak (System.Speech.Synthesis.Prompt prompt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Speak(class System.Speech.Synthesis.Prompt prompt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.Speech.Synthesis.Prompt)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Speak(System::Speech::Synthesis::Prompt ^ prompt);" />
      <MemberSignature Language="F#" Value="member this.Speak : System.Speech.Synthesis.Prompt -&gt; unit" Usage="speechSynthesizer.Speak prompt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prompt" Type="System.Speech.Synthesis.Prompt" />
      </Parameters>
      <Docs>
        <param name="prompt">
          <span data-ttu-id="d8236-318">O conteúdo a ser falado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-318">The content to speak.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8236-319">Fala assincronamente o conteúdo de um objeto <see cref="T:System.Speech.Synthesis.Prompt" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-319">Synchronously speaks the contents of a <see cref="T:System.Speech.Synthesis.Prompt" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8236-320">Para falar assincronamente o conteúdo de um <xref:System.Speech.Synthesis.Prompt> do objeto, use <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>.</span><span class="sxs-lookup"><span data-stu-id="d8236-320">To asynchronously speak the contents of a <xref:System.Speech.Synthesis.Prompt> object, use <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8236-321">O exemplo a seguir cria uma <xref:System.Speech.Synthesis.Prompt> objeto a partir de uma cadeia de caracteres e passa o objeto como um argumento para o <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> método.</span><span class="sxs-lookup"><span data-stu-id="d8236-321">The following example creates a <xref:System.Speech.Synthesis.Prompt> object from a string and passes the object as an argument to the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a prompt from a string.  
        Prompt color = new Prompt("What is your favorite color?");  
  
        // Speak the contents of the prompt synchronously.  
        synth.Speak(color);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Speak">
      <MemberSignature Language="C#" Value="public void Speak (System.Speech.Synthesis.PromptBuilder promptBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Speak(class System.Speech.Synthesis.PromptBuilder promptBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.Speech.Synthesis.PromptBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Speak(System::Speech::Synthesis::PromptBuilder ^ promptBuilder);" />
      <MemberSignature Language="F#" Value="member this.Speak : System.Speech.Synthesis.PromptBuilder -&gt; unit" Usage="speechSynthesizer.Speak promptBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="promptBuilder" Type="System.Speech.Synthesis.PromptBuilder" />
      </Parameters>
      <Docs>
        <param name="promptBuilder">
          <span data-ttu-id="d8236-322">O conteúdo a ser falado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-322">The content to speak.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8236-323">Fala assincronamente o conteúdo de um objeto <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-323">Synchronously speaks the contents of a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8236-324">Para falar assincronamente o conteúdo de um <xref:System.Speech.Synthesis.PromptBuilder> do objeto, use <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>.</span><span class="sxs-lookup"><span data-stu-id="d8236-324">To asynchronously speak the contents of a <xref:System.Speech.Synthesis.PromptBuilder> object, use <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8236-325">O exemplo a seguir cria uma <xref:System.Speech.Synthesis.PromptBuilder> objeto a partir de uma cadeia de caracteres e passa o objeto como um argumento para o <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> método.</span><span class="sxs-lookup"><span data-stu-id="d8236-325">The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> object from a string and passes the object as an argument to the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a PromptBuilder object and append a text string.  
        PromptBuilder song = new PromptBuilder();  
        song.AppendText("Say the name of the song you want to hear");  
  
        // Speak the contents of the prompt synchronously.  
        synth.Speak(song);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Speak">
      <MemberSignature Language="C#" Value="public void Speak (string textToSpeak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Speak(string textToSpeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Speak (textToSpeak As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Speak(System::String ^ textToSpeak);" />
      <MemberSignature Language="F#" Value="member this.Speak : string -&gt; unit" Usage="speechSynthesizer.Speak textToSpeak" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak">
          <span data-ttu-id="d8236-326">O texto para falar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-326">The text to speak.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8236-327">Fala assincronamente o conteúdo de uma cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-327">Synchronously speaks the contents of a string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8236-328">Para falar a uma cadeia de caracteres que contém marcação SSML de forma síncrona, use o <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> método.</span><span class="sxs-lookup"><span data-stu-id="d8236-328">To synchronously speak a string that contains SSML markup, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> method.</span></span> <span data-ttu-id="d8236-329">Para falar assincronamente o conteúdo de uma cadeia de caracteres, use o <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> método.</span><span class="sxs-lookup"><span data-stu-id="d8236-329">To asynchronously speak the contents of a string, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8236-330">Conforme mostrado no exemplo a seguir, o <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> método fornece os meios mais simples para gerar fala de forma síncrona de saída.</span><span class="sxs-lookup"><span data-stu-id="d8236-330">As shown in the following example, the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method provides the simplest means to generate speech output synchronously.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Speak a string synchronously.  
        synth.Speak("What is your favorite color?");  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SpeakAsync">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d8236-331">Gera a saída de fala de forma assíncrona de uma cadeia de caracteres, um objeto <see cref="T:System.Speech.Synthesis.Prompt" /> ou um objeto <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-331">Generates speech output asynchronously from a string, a <see cref="T:System.Speech.Synthesis.Prompt" /> object, or a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8236-332">O <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> métodos geram fala de forma assíncrona.</span><span class="sxs-lookup"><span data-stu-id="d8236-332">The <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> methods generate speech asynchronously.</span></span> <span data-ttu-id="d8236-333">Os métodos retornam imediatamente sem esperar que o conteúdo a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> objeto para terminar de falar.</span><span class="sxs-lookup"><span data-stu-id="d8236-333">The methods return immediately without waiting for the content of the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> object to finish speaking.</span></span> <span data-ttu-id="d8236-334">Use <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> se seu aplicativo precisa para executar tarefas durante a fala, por exemplo, realçar texto, pintar a animação, controles do monitor ou outras tarefas.</span><span class="sxs-lookup"><span data-stu-id="d8236-334">Use <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> if your application needs to perform tasks while speaking, for example highlight text, paint animation, monitor controls, or other tasks.</span></span>  
  
 <span data-ttu-id="d8236-335">Durante uma chamada para esse método, o <xref:System.Speech.Synthesis.SpeechSynthesizer> pode gerar eventos a seguir:</span><span class="sxs-lookup"><span data-stu-id="d8236-335">During a call to this method, the <xref:System.Speech.Synthesis.SpeechSynthesizer> can raise the following events:</span></span>  
  
-   <span data-ttu-id="d8236-336"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span><span class="sxs-lookup"><span data-stu-id="d8236-336"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span></span> <span data-ttu-id="d8236-337">Gerado quando muda o estado do sintetizador de falando.</span><span class="sxs-lookup"><span data-stu-id="d8236-337">Raised when the speaking state of the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="d8236-338"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span><span class="sxs-lookup"><span data-stu-id="d8236-338"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span></span> <span data-ttu-id="d8236-339">Gerado quando o sintetizador começa a gerar a fala.</span><span class="sxs-lookup"><span data-stu-id="d8236-339">Raised when the synthesizer begins generating speech.</span></span>  
  
-   <span data-ttu-id="d8236-340"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span><span class="sxs-lookup"><span data-stu-id="d8236-340"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span></span> <span data-ttu-id="d8236-341">Gerado sempre que o sintetizador atinge uma letra ou uma combinação de letras que constituem um som discreto de fala em um idioma.</span><span class="sxs-lookup"><span data-stu-id="d8236-341">Raised each time the synthesizer reaches a letter or combination of letters that constitute a discreet sound of speech in a language.</span></span>  
  
-   <span data-ttu-id="d8236-342"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span><span class="sxs-lookup"><span data-stu-id="d8236-342"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span></span> <span data-ttu-id="d8236-343">Gerado sempre que o sintetizador conclui falando em uma palavra.</span><span class="sxs-lookup"><span data-stu-id="d8236-343">Raised each time the synthesizer completes speaking a word.</span></span>  
  
-   <span data-ttu-id="d8236-344"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span><span class="sxs-lookup"><span data-stu-id="d8236-344"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span></span> <span data-ttu-id="d8236-345">Gerado sempre que a saída falada exige uma alteração na posição da boca ou os músculos faciais usados para gerar fala.</span><span class="sxs-lookup"><span data-stu-id="d8236-345">Raised each time spoken output requires a change in the position of the mouth or the facial muscles used to produce speech.</span></span>  
  
-   <span data-ttu-id="d8236-346"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span><span class="sxs-lookup"><span data-stu-id="d8236-346"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span></span> <span data-ttu-id="d8236-347">Gerado quando o sintetizador encontra um indicador em um prompt.</span><span class="sxs-lookup"><span data-stu-id="d8236-347">Raised when the synthesizer encounters a bookmark in a prompt.</span></span>  
  
-   <span data-ttu-id="d8236-348"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span><span class="sxs-lookup"><span data-stu-id="d8236-348"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span></span> <span data-ttu-id="d8236-349">Gerado quando a voz para o sintetizador de fala é alterado.</span><span class="sxs-lookup"><span data-stu-id="d8236-349">Raised when the speaking voice for the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="d8236-350"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>.</span><span class="sxs-lookup"><span data-stu-id="d8236-350"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>.</span></span> <span data-ttu-id="d8236-351">Gerado quando o sintetizador termina um <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> operação.</span><span class="sxs-lookup"><span data-stu-id="d8236-351">Raised when the synthesizer finishes a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> operation.</span></span>  
  
 <span data-ttu-id="d8236-352">Se seu aplicativo não precisa realizar tarefas durante a fala, você pode usar o <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> métodos ou o <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> método para gerar fala de forma síncrona.</span><span class="sxs-lookup"><span data-stu-id="d8236-352">If your application does not need to perform tasks while speaking, you can use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> methods or the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> method to generate speech synchronously.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SpeakAsync">
      <MemberSignature Language="C#" Value="public void SpeakAsync (System.Speech.Synthesis.Prompt prompt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SpeakAsync(class System.Speech.Synthesis.Prompt prompt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.Speech.Synthesis.Prompt)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SpeakAsync(System::Speech::Synthesis::Prompt ^ prompt);" />
      <MemberSignature Language="F#" Value="member this.SpeakAsync : System.Speech.Synthesis.Prompt -&gt; unit" Usage="speechSynthesizer.SpeakAsync prompt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prompt" Type="System.Speech.Synthesis.Prompt" />
      </Parameters>
      <Docs>
        <param name="prompt">
          <span data-ttu-id="d8236-353">O conteúdo a ser falado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-353">The content to speak.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8236-354">Fala o conteúdo de um objeto <see cref="T:System.Speech.Synthesis.Prompt" /> de forma assíncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-354">Asynchronously speaks the contents of a <see cref="T:System.Speech.Synthesis.Prompt" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8236-355">Você pode cancelar a fala assíncrona de um prompt com o <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> ou o <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> método.</span><span class="sxs-lookup"><span data-stu-id="d8236-355">You can cancel the asynchronous speaking of a prompt with the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> or the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> method.</span></span>  
  
 <span data-ttu-id="d8236-356">Para falar forma síncrona o conteúdo de um <xref:System.Speech.Synthesis.Prompt> do objeto, use <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>.</span><span class="sxs-lookup"><span data-stu-id="d8236-356">To synchronously speak the contents of a <xref:System.Speech.Synthesis.Prompt> object, use <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8236-357">O exemplo a seguir cria uma <xref:System.Speech.Synthesis.Prompt> objeto a partir de uma cadeia de caracteres e passa o objeto como um argumento para o <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> método.</span><span class="sxs-lookup"><span data-stu-id="d8236-357">The following example creates a <xref:System.Speech.Synthesis.Prompt> object from a string and passes the object as an argument to the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Create a prompt from a string.  
      Prompt color = new Prompt("What is your favorite color?");  
  
      // Speak the contents of the prompt asynchronously.  
      synth.SpeakAsync(color);  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakAsync">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.Prompt SpeakAsync (System.Speech.Synthesis.PromptBuilder promptBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Synthesis.Prompt SpeakAsync(class System.Speech.Synthesis.PromptBuilder promptBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.Speech.Synthesis.PromptBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Synthesis::Prompt ^ SpeakAsync(System::Speech::Synthesis::PromptBuilder ^ promptBuilder);" />
      <MemberSignature Language="F#" Value="member this.SpeakAsync : System.Speech.Synthesis.PromptBuilder -&gt; System.Speech.Synthesis.Prompt" Usage="speechSynthesizer.SpeakAsync promptBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.Prompt</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="promptBuilder" Type="System.Speech.Synthesis.PromptBuilder" />
      </Parameters>
      <Docs>
        <param name="promptBuilder">
          <span data-ttu-id="d8236-358">O conteúdo a ser falado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-358">The content to speak.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8236-359">Fala o conteúdo de um objeto <see cref="T:System.Speech.Synthesis.PromptBuilder" /> de forma assíncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-359">Asynchronously speaks the contents of a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8236-360">Retorna o objeto que contém o conteúdo para fala.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-360">Returns the object that contains the content to speak.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8236-361">Para falar forma síncrona o conteúdo de um <xref:System.Speech.Synthesis.PromptBuilder> do objeto, use <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>.</span><span class="sxs-lookup"><span data-stu-id="d8236-361">To synchronously speak the contents of a <xref:System.Speech.Synthesis.PromptBuilder> object, use <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8236-362">O exemplo a seguir cria uma <xref:System.Speech.Synthesis.PromptBuilder> objeto a partir de uma cadeia de caracteres e passa o objeto como um argumento para o <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> método.</span><span class="sxs-lookup"><span data-stu-id="d8236-362">The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> object from a string and passes the object as an argument to the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Create a PromptBuilder object and append a text string.  
      PromptBuilder song = new PromptBuilder();  
      song.AppendText("Say the name of the song you want to hear");  
  
      // Speak the contents of the prompt asynchronously.  
      synth.SpeakAsync(song);  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakAsync">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.Prompt SpeakAsync (string textToSpeak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Synthesis.Prompt SpeakAsync(string textToSpeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SpeakAsync (textToSpeak As String) As Prompt" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Synthesis::Prompt ^ SpeakAsync(System::String ^ textToSpeak);" />
      <MemberSignature Language="F#" Value="member this.SpeakAsync : string -&gt; System.Speech.Synthesis.Prompt" Usage="speechSynthesizer.SpeakAsync textToSpeak" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.Prompt</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak">
          <span data-ttu-id="d8236-363">O texto para falar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-363">The text to speak.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8236-364">Fala assincronamente o conteúdo de uma cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-364">Asynchronously speaks the contents of a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8236-365">Retorna o objeto que contém o conteúdo para fala.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-365">Returns the object that contains the content to speak.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8236-366">Para falar a uma cadeia de caracteres que contém marcação SSML de forma assíncrona, use o <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> método.</span><span class="sxs-lookup"><span data-stu-id="d8236-366">To asynchronously speak a string that contains SSML markup, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> method.</span></span> <span data-ttu-id="d8236-367">De forma síncrona fala o conteúdo de uma cadeia de caracteres, use o <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> método.</span><span class="sxs-lookup"><span data-stu-id="d8236-367">To synchronously speak the contents of a string, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method.</span></span> <span data-ttu-id="d8236-368">Você pode cancelar a fala assíncrona de um prompt com o <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> ou o <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> método.</span><span class="sxs-lookup"><span data-stu-id="d8236-368">You can cancel the asynchronous speaking of a prompt with the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> or the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8236-369">Conforme mostrado no exemplo a seguir, o <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> método fornece os meios mais simples para gerar fala de forma assíncrona de saída.</span><span class="sxs-lookup"><span data-stu-id="d8236-369">As shown in the following example, the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> method provides the simplest means to generate speech output asynchronously.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Speak a string asynchronously.  
      synth.SpeakAsync("What is your favorite color?");  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Speech.Synthesis.SpeechSynthesizer.Speak" />
      </Docs>
    </Member>
    <Member MemberName="SpeakAsyncCancel">
      <MemberSignature Language="C#" Value="public void SpeakAsyncCancel (System.Speech.Synthesis.Prompt prompt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SpeakAsyncCancel(class System.Speech.Synthesis.Prompt prompt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel(System.Speech.Synthesis.Prompt)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SpeakAsyncCancel(System::Speech::Synthesis::Prompt ^ prompt);" />
      <MemberSignature Language="F#" Value="member this.SpeakAsyncCancel : System.Speech.Synthesis.Prompt -&gt; unit" Usage="speechSynthesizer.SpeakAsyncCancel prompt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prompt" Type="System.Speech.Synthesis.Prompt" />
      </Parameters>
      <Docs>
        <param name="prompt">
          <span data-ttu-id="d8236-370">O conteúdo para o qual uma operação de fala é cancelada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-370">The content for which to cancel a speak operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8236-371">Cancela a operação de síntese assíncrona de um prompt na fila.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-371">Cancels the asynchronous synthesis operation for a queued prompt.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8236-372">Você também pode usar esse método para cancelar assíncrona falar de operação para os seguintes itens:</span><span class="sxs-lookup"><span data-stu-id="d8236-372">You can also use this method to cancel an asynchronous speak operation for the following:</span></span>  
  
-   <span data-ttu-id="d8236-373">O conteúdo de um <xref:System.String> especificado por um <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="d8236-373">The contents of a <xref:System.String> specified by a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
-   <span data-ttu-id="d8236-374">O conteúdo de um <xref:System.Speech.Synthesis.PromptBuilder> especificado por um <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="d8236-374">The contents of a <xref:System.Speech.Synthesis.PromptBuilder> specified by a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
-   <span data-ttu-id="d8236-375">O conteúdo de um <xref:System.String> contendo SSML especificado por um <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> método.</span><span class="sxs-lookup"><span data-stu-id="d8236-375">The contents of a <xref:System.String> containing SSML specified by a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> method.</span></span>  
  
 <span data-ttu-id="d8236-376">Quando você chama <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType>, ou <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>, System. Speech cria um <xref:System.Speech.Synthesis.Prompt> do objeto e preenche-o com o conteúdo do parâmetro do método e retorna o <xref:System.Speech.Synthesis.Prompt> objeto.</span><span class="sxs-lookup"><span data-stu-id="d8236-376">When you call <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>, System.Speech creates a <xref:System.Speech.Synthesis.Prompt> object and populates it with the contents of the method's parameter, and returns the <xref:System.Speech.Synthesis.Prompt> object.</span></span> <span data-ttu-id="d8236-377">Se você mantiver uma cópia do retornado <xref:System.Speech.Synthesis.Prompt>, você pode passá-lo em <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> para cancelar o conteúdo de falando especificado em um <xref:System.String> ou um <xref:System.Speech.Synthesis.PromptBuilder> objeto.</span><span class="sxs-lookup"><span data-stu-id="d8236-377">If you retain a copy of the returned <xref:System.Speech.Synthesis.Prompt>, you can pass it into <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> to cancel speaking content specified in a <xref:System.String> or a <xref:System.Speech.Synthesis.PromptBuilder> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakAsyncCancelAll">
      <MemberSignature Language="C#" Value="public void SpeakAsyncCancelAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SpeakAsyncCancelAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub SpeakAsyncCancelAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SpeakAsyncCancelAll();" />
      <MemberSignature Language="F#" Value="member this.SpeakAsyncCancelAll : unit -&gt; unit" Usage="speechSynthesizer.SpeakAsyncCancelAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d8236-378">Cancela todas as operações na fila, assíncronas e de sintetização de voz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-378">Cancels all queued, asynchronous, speech synthesis operations.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d8236-379">O exemplo a seguir mostra um uso de <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> para cancelar a fala assíncrona de um prompt para que um novo prompt pode ser falado.</span><span class="sxs-lookup"><span data-stu-id="d8236-379">The following example show a use of <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> to cancel the asynchronous speaking of a prompt, so that a new prompt can be spoken.</span></span> <span data-ttu-id="d8236-380">Observe que o <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> evento é acionado quando um <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> operação está cancelada.</span><span class="sxs-lookup"><span data-stu-id="d8236-380">Note that the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event fires when a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> operation is cancelled.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
using System.Threading;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Subscribe to the StateChanged event.  
      synth.StateChanged += new EventHandler<StateChangedEventArgs>(synth_StateChanged);  
  
      // Subscribe to the SpeakProgress event.  
      synth.SpeakProgress += new EventHandler<SpeakProgressEventArgs>(synth_SpeakProgress);  
  
      // Subscribe to the SpeakCompleted event.  
      synth.SpeakCompleted += new EventHandler<SpeakCompletedEventArgs>(synth_SpeakCompleted);  
  
      // Begin speaking a text string asynchronously.  
      synth.SpeakAsync("Speech is an effective and natural way for people to interact with applications, " +  
        "complementing or even replacing the use of mice, keyboards, controllers, and gestures.");  
  
      // Speak for four seconds.  
      Thread.Sleep(4000);  
  
      // Cancel the SpeakAsync operation and wait one second.  
      synth.SpeakAsyncCancelAll();  
      Thread.Sleep(1000);  
  
      // Speak a new text string.  
      synth.Speak("An urgent email message has arrived. Do you want to hear it?");  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Write to the console when the SpeakAsync operation has been cancelled.  
    static void synth_SpeakCompleted(object sender, SpeakCompletedEventArgs e)  
    {  
      Console.WriteLine("\nThe SpeakAsync operation was cancelled!!");  
    }  
  
    // When it changes, write the state of the SpeechSynthesizer to the console.  
    static void synth_StateChanged(object sender, StateChangedEventArgs e)  
    {  
      Console.WriteLine("\nSynthesizer State: {0}    Previous State: {1}\n", e.State, e.PreviousState);  
    }  
  
    // Write the text being spoken by the SpeechSynthesizer to the console.  
    static void synth_SpeakProgress(object sender, SpeakProgressEventArgs e)  
    {  
      Console.WriteLine(e.Text);  
    }      
  }    
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.SpeakCompletedEventArgs&gt; SpeakCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.SpeakCompletedEventArgs&gt; SpeakCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SpeakCompleted As EventHandler(Of SpeakCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::SpeakCompletedEventArgs ^&gt; ^ SpeakCompleted;" />
      <MemberSignature Language="F#" Value="member this.SpeakCompleted : EventHandler&lt;System.Speech.Synthesis.SpeakCompletedEventArgs&gt; " Usage="member this.SpeakCompleted : System.EventHandler&lt;System.Speech.Synthesis.SpeakCompletedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.SpeakCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8236-381">Gerado quando o <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> conclui a fala com base em um prompt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-381">Raised when the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> completes the speaking of a prompt.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8236-382">O <xref:System.Speech.Synthesis.SpeechSynthesizer> gera a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> evento após a conclusão de qualquer um dos <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> ou <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="d8236-382">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event at the completion of any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> or  <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> methods.</span></span>  
  
 <span data-ttu-id="d8236-383">O <xref:System.Speech.Synthesis.SpeakCompletedEventArgs> não tem nenhuma propriedade de classe e não retorna dados do <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> eventos.</span><span class="sxs-lookup"><span data-stu-id="d8236-383">The <xref:System.Speech.Synthesis.SpeakCompletedEventArgs> class has no properties, and does not return data from the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event.</span></span> <span data-ttu-id="d8236-384">Ele é fornecido para habilitar os autores do aplicativo gravar manipuladores de eventos para o <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> eventos.</span><span class="sxs-lookup"><span data-stu-id="d8236-384">It is provided to enable application authors to write event handlers for the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.SpeakCompletedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="SpeakProgress">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.SpeakProgressEventArgs&gt; SpeakProgress;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.SpeakProgressEventArgs&gt; SpeakProgress" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SpeakProgress As EventHandler(Of SpeakProgressEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::SpeakProgressEventArgs ^&gt; ^ SpeakProgress;" />
      <MemberSignature Language="F#" Value="member this.SpeakProgress : EventHandler&lt;System.Speech.Synthesis.SpeakProgressEventArgs&gt; " Usage="member this.SpeakProgress : System.EventHandler&lt;System.Speech.Synthesis.SpeakProgressEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.SpeakProgressEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8236-385">Gerado depois que <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> fala cada palavra individual de um prompt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-385">Raised after the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> speaks each individual word of a prompt.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8236-386">O <xref:System.Speech.Synthesis.SpeechSynthesizer> gera esse evento para cada nova palavra que participa como palestrante em um prompt usando qualquer um dos <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, ou <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="d8236-386">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises this event for each new word that it speaks in a prompt using any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> methods.</span></span> <span data-ttu-id="d8236-387">Para obter um exemplo e obter mais informações sobre os dados associados ao evento, consulte <xref:System.Speech.Synthesis.SpeakProgressEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="d8236-387">For an example and more information about data associated with the event, see <xref:System.Speech.Synthesis.SpeakProgressEventArgs>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakSsml">
      <MemberSignature Language="C#" Value="public void SpeakSsml (string textToSpeak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SpeakSsml(string textToSpeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SpeakSsml (textToSpeak As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SpeakSsml(System::String ^ textToSpeak);" />
      <MemberSignature Language="F#" Value="member this.SpeakSsml : string -&gt; unit" Usage="speechSynthesizer.SpeakSsml textToSpeak" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak">
          <span data-ttu-id="d8236-388">A cadeia de caracteres SSML a ser falada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-388">The SSML string to speak.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8236-389">Fala de forma síncrona uma <see cref="T:System.String" /> que contém marcação SSML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-389">Synchronously speaks a <see cref="T:System.String" /> that contains SSML markup.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8236-390">O conteúdo do `textToSpeak` parâmetro deve incluir uma `speak` elemento e deve estar em conformidade com as [Speech Synthesis Markup Language (SSML) versão 1.0](http://go.microsoft.com/fwlink/?LinkId=201763).</span><span class="sxs-lookup"><span data-stu-id="d8236-390">The contents of the `textToSpeak` parameter must include a `speak` element and must conform to the [Speech Synthesis Markup Language (SSML) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201763).</span></span> <span data-ttu-id="d8236-391">Para obter mais informações, consulte [referência de linguagem de marcação de síntese de fala](http://msdn.microsoft.com/library/0c51279e-84d2-4f73-a924-8832039abf94).</span><span class="sxs-lookup"><span data-stu-id="d8236-391">For more information, see [Speech Synthesis Markup Language Reference](http://msdn.microsoft.com/library/0c51279e-84d2-4f73-a924-8832039abf94).</span></span>  
  
 <span data-ttu-id="d8236-392">Para falar a uma cadeia de caracteres que contém marcação SSML de forma assíncrona, use o <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> método.</span><span class="sxs-lookup"><span data-stu-id="d8236-392">To asynchronously speak a string that contains SSML markup, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> method.</span></span> <span data-ttu-id="d8236-393">Você pode usar <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> para iniciar a fala síncrona de uma cadeia de caracteres que não contém marcação SSML.</span><span class="sxs-lookup"><span data-stu-id="d8236-393">You can use <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> to initiate the synchronous speaking of a string that does not contain SSML markup.</span></span>  
  
 <span data-ttu-id="d8236-394">Durante uma chamada para esse método, o <xref:System.Speech.Synthesis.SpeechSynthesizer> pode gerar eventos a seguir:</span><span class="sxs-lookup"><span data-stu-id="d8236-394">During a call to this method, the <xref:System.Speech.Synthesis.SpeechSynthesizer> can raise the following events:</span></span>  
  
-   <span data-ttu-id="d8236-395"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span><span class="sxs-lookup"><span data-stu-id="d8236-395"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span></span> <span data-ttu-id="d8236-396">Gerado quando muda o estado do sintetizador de falando.</span><span class="sxs-lookup"><span data-stu-id="d8236-396">Raised when the speaking state of the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="d8236-397"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span><span class="sxs-lookup"><span data-stu-id="d8236-397"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span></span> <span data-ttu-id="d8236-398">Gerado quando o sintetizador começa a gerar a fala.</span><span class="sxs-lookup"><span data-stu-id="d8236-398">Raised when the synthesizer begins generating speech.</span></span>  
  
-   <span data-ttu-id="d8236-399"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span><span class="sxs-lookup"><span data-stu-id="d8236-399"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span></span> <span data-ttu-id="d8236-400">Gerado sempre que o sintetizador atinge uma letra ou uma combinação de letras que constituem um som discreto de fala em um idioma.</span><span class="sxs-lookup"><span data-stu-id="d8236-400">Raised each time the synthesizer reaches a letter or combination of letters that constitute a discreet sound of speech in a language.</span></span>  
  
-   <span data-ttu-id="d8236-401"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span><span class="sxs-lookup"><span data-stu-id="d8236-401"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span></span> <span data-ttu-id="d8236-402">Gerado sempre que o sintetizador conclui falando em uma palavra.</span><span class="sxs-lookup"><span data-stu-id="d8236-402">Raised each time the synthesizer completes speaking a word.</span></span>  
  
-   <span data-ttu-id="d8236-403"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span><span class="sxs-lookup"><span data-stu-id="d8236-403"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span></span> <span data-ttu-id="d8236-404">Gerado sempre que a saída falada exige uma alteração na posição da boca ou os músculos faciais usados para gerar fala.</span><span class="sxs-lookup"><span data-stu-id="d8236-404">Raised each time spoken output requires a change in the position of the mouth or the facial muscles used to produce speech.</span></span>  
  
-   <span data-ttu-id="d8236-405"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span><span class="sxs-lookup"><span data-stu-id="d8236-405"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span></span> <span data-ttu-id="d8236-406">Gerado quando o sintetizador encontra um indicador em um prompt.</span><span class="sxs-lookup"><span data-stu-id="d8236-406">Raised when the synthesizer encounters a bookmark in a prompt.</span></span>  
  
-   <span data-ttu-id="d8236-407"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span><span class="sxs-lookup"><span data-stu-id="d8236-407"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span></span> <span data-ttu-id="d8236-408">Gerado quando a voz para o sintetizador de fala é alterado.</span><span class="sxs-lookup"><span data-stu-id="d8236-408">Raised when the speaking voice for the synthesizer changes.</span></span>  
  
 <span data-ttu-id="d8236-409">O <xref:System.Speech.Synthesis.SpeechSynthesizer> não dispara o <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> eventos durante o processamento de <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> método.</span><span class="sxs-lookup"><span data-stu-id="d8236-409">The <xref:System.Speech.Synthesis.SpeechSynthesizer> does not raise the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event while processing the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8236-410">O exemplo a seguir renderiza a data de 29/1/2009, como uma data, no mês, dia, a ordem de ano.</span><span class="sxs-lookup"><span data-stu-id="d8236-410">The following example renders the date 1/29/2009 as a date, in month, day, year order.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Build an SSML prompt in a string.  
      string str = "<speak version=\"1.0\"";  
      str += " xmlns=\"http://www.w3.org/2001/10/synthesis\"";  
      str += " xml:lang=\"en-US\">";  
      str += "<say-as type=\"date:mdy\"> 1/29/2009 </say-as>";  
      str += "</speak>";  
  
      // Speak the contents of the prompt asynchronously.  
      synth.SpeakSsml(str);  
  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakSsmlAsync">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.Prompt SpeakSsmlAsync (string textToSpeak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Synthesis.Prompt SpeakSsmlAsync(string textToSpeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SpeakSsmlAsync (textToSpeak As String) As Prompt" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Synthesis::Prompt ^ SpeakSsmlAsync(System::String ^ textToSpeak);" />
      <MemberSignature Language="F#" Value="member this.SpeakSsmlAsync : string -&gt; System.Speech.Synthesis.Prompt" Usage="speechSynthesizer.SpeakSsmlAsync textToSpeak" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.Prompt</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak">
          <span data-ttu-id="d8236-411">A marcação SMML para falar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-411">The SMML markup to speak.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8236-412">Fala de forma síncrona uma <see cref="T:System.String" /> que contém marcação SSML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-412">Asynchronously speaks a <see cref="T:System.String" /> that contains SSML markup.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8236-413">O conteúdo do `textToSpeak` parâmetro deve incluir uma `speak` elemento e deve estar em conformidade com as [Speech Synthesis Markup Language (SSML) versão 1.0](http://go.microsoft.com/fwlink/?LinkId=201763).</span><span class="sxs-lookup"><span data-stu-id="d8236-413">The contents of the `textToSpeak` parameter must include a `speak` element and must conform to the [Speech Synthesis Markup Language (SSML) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201763).</span></span> <span data-ttu-id="d8236-414">Para obter mais informações, consulte [referência de linguagem de marcação de síntese de fala](http://msdn.microsoft.com/library/0c51279e-84d2-4f73-a924-8832039abf94).</span><span class="sxs-lookup"><span data-stu-id="d8236-414">For more information, see [Speech Synthesis Markup Language Reference](http://msdn.microsoft.com/library/0c51279e-84d2-4f73-a924-8832039abf94).</span></span>  
  
 <span data-ttu-id="d8236-415">Para falar a uma cadeia de caracteres que contém marcação SSML de forma síncrona, use o <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> método.</span><span class="sxs-lookup"><span data-stu-id="d8236-415">To synchronously speak a string that contains SSML markup, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> method.</span></span> <span data-ttu-id="d8236-416">Você pode usar <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> para iniciar a fala assíncrono de uma cadeia de caracteres que não contém marcação SSML.</span><span class="sxs-lookup"><span data-stu-id="d8236-416">You can use <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> to initiate the asynchronous speaking of a string that does not contain SSML markup.</span></span>  
  
 <span data-ttu-id="d8236-417">Durante uma chamada para esse método, o <xref:System.Speech.Synthesis.SpeechSynthesizer> pode gerar eventos a seguir:</span><span class="sxs-lookup"><span data-stu-id="d8236-417">During a call to this method, the <xref:System.Speech.Synthesis.SpeechSynthesizer> can raise the following events:</span></span>  
  
-   <span data-ttu-id="d8236-418"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span><span class="sxs-lookup"><span data-stu-id="d8236-418"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span></span> <span data-ttu-id="d8236-419">Gerado quando muda o estado do sintetizador de falando.</span><span class="sxs-lookup"><span data-stu-id="d8236-419">Raised when the speaking state of the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="d8236-420"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span><span class="sxs-lookup"><span data-stu-id="d8236-420"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span></span> <span data-ttu-id="d8236-421">Gerado quando o sintetizador começa a gerar a fala.</span><span class="sxs-lookup"><span data-stu-id="d8236-421">Raised when the synthesizer begins generating speech.</span></span>  
  
-   <span data-ttu-id="d8236-422"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span><span class="sxs-lookup"><span data-stu-id="d8236-422"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span></span> <span data-ttu-id="d8236-423">Gerado sempre que o sintetizador atinge uma letra ou uma combinação de letras que constituem um som discreto de fala em um idioma.</span><span class="sxs-lookup"><span data-stu-id="d8236-423">Raised each time the synthesizer reaches a letter or combination of letters that constitute a discreet sound of speech in a language.</span></span>  
  
-   <span data-ttu-id="d8236-424"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span><span class="sxs-lookup"><span data-stu-id="d8236-424"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span></span> <span data-ttu-id="d8236-425">Gerado sempre que o sintetizador conclui falando em uma palavra.</span><span class="sxs-lookup"><span data-stu-id="d8236-425">Raised each time the synthesizer completes speaking a word.</span></span>  
  
-   <span data-ttu-id="d8236-426"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span><span class="sxs-lookup"><span data-stu-id="d8236-426"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span></span> <span data-ttu-id="d8236-427">Gerado sempre que a saída falada exige uma alteração na posição da boca ou os músculos faciais usados para gerar fala.</span><span class="sxs-lookup"><span data-stu-id="d8236-427">Raised each time spoken output requires a change in the position of the mouth or the facial muscles used to produce speech.</span></span>  
  
-   <span data-ttu-id="d8236-428"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span><span class="sxs-lookup"><span data-stu-id="d8236-428"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span></span> <span data-ttu-id="d8236-429">Gerado quando o sintetizador encontra um indicador em um prompt.</span><span class="sxs-lookup"><span data-stu-id="d8236-429">Raised when the synthesizer encounters a bookmark in a prompt.</span></span>  
  
-   <span data-ttu-id="d8236-430"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span><span class="sxs-lookup"><span data-stu-id="d8236-430"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span></span> <span data-ttu-id="d8236-431">Gerado quando a voz para o sintetizador de fala é alterado.</span><span class="sxs-lookup"><span data-stu-id="d8236-431">Raised when the speaking voice for the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="d8236-432"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>.</span><span class="sxs-lookup"><span data-stu-id="d8236-432"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>.</span></span> <span data-ttu-id="d8236-433">Gerado quando o sintetizador termina o processamento um <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> operação.</span><span class="sxs-lookup"><span data-stu-id="d8236-433">Raised when the synthesizer finishes processing a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> operation.</span></span>  
  
 <span data-ttu-id="d8236-434">Se não precisam dos seu aplicativo executar tarefas durante a fala, você pode usar o <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> ou o <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> método para gerar fala de forma síncrona.</span><span class="sxs-lookup"><span data-stu-id="d8236-434">If your application dos not need to perform tasks while speaking, you can use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> or the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> method to generate speech synchronously.</span></span>  
  
   
  
## Examples  
  
```  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Build an SSML prompt in a string.  
      string str = "<speak version=\"1.0\"";  
      str += " xmlns=\"http://www.w3.org/2001/10/synthesis\"";  
      str += " xml:lang=\"en-US\">";  
      str += "<say-as type=\"date:mdy\"> 1/29/2009 </say-as>";  
      str += "</speak>";  
  
      // Speak the contents of the prompt asynchronously.  
      synth.SpeakSsmlAsync(str);  
  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakStarted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.SpeakStartedEventArgs&gt; SpeakStarted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.SpeakStartedEventArgs&gt; SpeakStarted" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SpeakStarted As EventHandler(Of SpeakStartedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::SpeakStartedEventArgs ^&gt; ^ SpeakStarted;" />
      <MemberSignature Language="F#" Value="member this.SpeakStarted : EventHandler&lt;System.Speech.Synthesis.SpeakStartedEventArgs&gt; " Usage="member this.SpeakStarted : System.EventHandler&lt;System.Speech.Synthesis.SpeakStartedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.SpeakStartedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8236-435">Gerado quando o <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> começa a falar com base em um prompt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-435">Raised when the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> begins the speaking of a prompt.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8236-436">O <xref:System.Speech.Synthesis.SpeechSynthesizer> gera esse evento quando ele inicia o processamento de um prompt usando qualquer um dos <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, ou <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="d8236-436">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises this event when it begins processing a prompt using any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> methods.</span></span>  
  
 <span data-ttu-id="d8236-437">O <xref:System.Speech.Synthesis.SpeakStartedEventArgs> não tem nenhuma propriedade de classe e não retorna dados do <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted> eventos.</span><span class="sxs-lookup"><span data-stu-id="d8236-437">The <xref:System.Speech.Synthesis.SpeakStartedEventArgs> class has no properties, and does not return data from the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted> event.</span></span> <span data-ttu-id="d8236-438">Ele é fornecido para habilitar os autores do aplicativo gravar manipuladores de eventos para o <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted> eventos.</span><span class="sxs-lookup"><span data-stu-id="d8236-438">It is provided to enable application authors to write event handlers for the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.SynthesizerState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Speech.Synthesis.SynthesizerState State" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeechSynthesizer.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As SynthesizerState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Synthesis::SynthesizerState State { System::Speech::Synthesis::SynthesizerState get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Speech.Synthesis.SynthesizerState" Usage="System.Speech.Synthesis.SpeechSynthesizer.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.SynthesizerState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8236-439">Obtém o estado de atual de fala do objeto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-439">Gets the current speaking state of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d8236-440">Retorna o estado atual de fala do objeto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-440">Returns the current speaking state of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8236-441">Para obter o novo estado do <xref:System.Speech.Synthesis.SpeechSynthesizer> depois que ele for alterado, use o <xref:System.Speech.Synthesis.StateChangedEventArgs.State%2A> propriedade do <xref:System.Speech.Synthesis.StateChangedEventArgs> classe.</span><span class="sxs-lookup"><span data-stu-id="d8236-441">To get the new state of the <xref:System.Speech.Synthesis.SpeechSynthesizer> after it changes, use the <xref:System.Speech.Synthesis.StateChangedEventArgs.State%2A> property of the <xref:System.Speech.Synthesis.StateChangedEventArgs> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8236-442">O exemplo a seguir ilustra o estado do <xref:System.Speech.Synthesis.SpeechSynthesizer> antes, durante e depois de conversar um prompt.</span><span class="sxs-lookup"><span data-stu-id="d8236-442">The following example illustrates the state of the <xref:System.Speech.Synthesis.SpeechSynthesizer> before, during, and after speaking a prompt.</span></span>  
  
```csharp  
using System;  
using System.Threading;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer() ;  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Subscribe to the SpeakProgress event.         
      synth.SpeakProgress += new EventHandler<SpeakProgressEventArgs>(synth_SpeakProgress);  
  
      // Write the state of the SpeechSynthesizer to the console.  
      Console.WriteLine("Current Synthesizer state: " + synth.State + "\n");  
  
      // Speak a string asynchronously.  
      synth.SpeakAsync("What is your favorite color?");  
  
      // Write the state of the SpeechSynthesizer to the console while it is speaking.  
      Thread.Sleep(1000);  
      Console.WriteLine("\n - Current Synthesizer state: " + synth.State + " - \n");  
  
      // Write the state of the SpeechSynthesizer to the console after it is done speaking.  
      Thread.Sleep(2000);  
      Console.WriteLine("\nCurrent Synthesizer state: " + synth.State);  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    static void synth_SpeakProgress(object sender, SpeakProgressEventArgs e)  
    {  
      Console.WriteLine(e.Text);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StateChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.StateChangedEventArgs&gt; StateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.StateChangedEventArgs&gt; StateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StateChanged As EventHandler(Of StateChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::StateChangedEventArgs ^&gt; ^ StateChanged;" />
      <MemberSignature Language="F#" Value="member this.StateChanged : EventHandler&lt;System.Speech.Synthesis.StateChangedEventArgs&gt; " Usage="member this.StateChanged : System.EventHandler&lt;System.Speech.Synthesis.StateChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.StateChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8236-443">Gerado quando o estado do <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> é alterado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-443">Raised when the state of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8236-444">O <xref:System.Speech.Synthesis.SpeechSynthesizer> gera esse evento quando seu falando <xref:System.Speech.Synthesis.SpeechSynthesizer.State%2A> alterações.</span><span class="sxs-lookup"><span data-stu-id="d8236-444">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises this event when its speaking <xref:System.Speech.Synthesis.SpeechSynthesizer.State%2A> changes.</span></span> <span data-ttu-id="d8236-445">Para obter um exemplo e obter mais informações sobre os dados associados ao evento, consulte <xref:System.Speech.Synthesis.StateChangedEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="d8236-445">For an example and more information about data associated with the event, see <xref:System.Speech.Synthesis.StateChangedEventArgs>.</span></span>  
  
 <span data-ttu-id="d8236-446">Para pausar e retomar a síntese de fala, use o <xref:System.Speech.Synthesis.SpeechSynthesizer.Pause%2A> e <xref:System.Speech.Synthesis.SpeechSynthesizer.Resume%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="d8236-446">To pause and resume speech synthesis, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Pause%2A> and <xref:System.Speech.Synthesis.SpeechSynthesizer.Resume%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="VisemeReached">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.VisemeReachedEventArgs&gt; VisemeReached;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.VisemeReachedEventArgs&gt; VisemeReached" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event VisemeReached As EventHandler(Of VisemeReachedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::VisemeReachedEventArgs ^&gt; ^ VisemeReached;" />
      <MemberSignature Language="F#" Value="member this.VisemeReached : EventHandler&lt;System.Speech.Synthesis.VisemeReachedEventArgs&gt; " Usage="member this.VisemeReached : System.EventHandler&lt;System.Speech.Synthesis.VisemeReachedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.VisemeReachedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8236-447">Acionado quando um visema é alcançado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-447">Raised when a viseme is reached.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8236-448">Um visema é a posição básica da boca e face ao pronunciar um fonema.</span><span class="sxs-lookup"><span data-stu-id="d8236-448">A viseme is the basic position of the mouth and face when pronouncing a phoneme.</span></span> <span data-ttu-id="d8236-449">Visemes são representações visuais dos fonemas.</span><span class="sxs-lookup"><span data-stu-id="d8236-449">Visemes are visual representations of phonemes.</span></span>  
  
 <span data-ttu-id="d8236-450">System. Speech suporta 21 visemes para inglês (EUA), cada um dos quais corresponde a um ou mais fonemas.</span><span class="sxs-lookup"><span data-stu-id="d8236-450">System.Speech supports 21 visemes for US English, each of which corresponds to one or more phonemes.</span></span>  <span data-ttu-id="d8236-451"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> eventos são gerados quando um fonema novo atingido tem um visema correspondente diferente que o fonema anterior atingido.</span><span class="sxs-lookup"><span data-stu-id="d8236-451"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> events are raised when a new phoneme reached has a different corresponding viseme than the previous phoneme reached.</span></span> <span data-ttu-id="d8236-452">Como alguns visemes representam mais de um fonema, um <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> evento não será gerado se o fonema próxima atingido corresponde ao mesmo viseme como fonema anterior.</span><span class="sxs-lookup"><span data-stu-id="d8236-452">Since some visemes represent more than one phoneme, a <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> event is not generated if the next phoneme reached corresponds to the same viseme as the previous phoneme.</span></span> <span data-ttu-id="d8236-453">Por exemplo, para as palavras faladas "nessa zona", um <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> é gerado para o "s" em "this" e "z" em "zone".</span><span class="sxs-lookup"><span data-stu-id="d8236-453">For example, for the spoken words "this zone", a <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> event is raised for the "s" in "this" and the "z" in "zone".</span></span> <span data-ttu-id="d8236-454">No entanto, um <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> evento não é gerado para o "z" em "zone" porque ele corresponde ao mesmo viseme como o "s" em "this".</span><span class="sxs-lookup"><span data-stu-id="d8236-454">However, a <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> event is not raised for the "z" in "zone" because it corresponds to the same viseme as the "s" in "this".</span></span>  
  
 <span data-ttu-id="d8236-455">O exemplo a seguir é uma lista dos fonemas do SAPI 21 e grupos do fonema que correspondem a um visema em inglês dos EUA.</span><span class="sxs-lookup"><span data-stu-id="d8236-455">The following is a list of the 21 SAPI phonemes and phoneme groups that correspond to a viseme in US English.</span></span>  
  
|<span data-ttu-id="d8236-456">Viseme</span><span class="sxs-lookup"><span data-stu-id="d8236-456">Viseme</span></span>|<span data-ttu-id="d8236-457">Phoneme(s)</span><span class="sxs-lookup"><span data-stu-id="d8236-457">Phoneme(s)</span></span>|  
|------------|------------------|  
|<span data-ttu-id="d8236-458">0</span><span class="sxs-lookup"><span data-stu-id="d8236-458">0</span></span>|<span data-ttu-id="d8236-459">silêncio</span><span class="sxs-lookup"><span data-stu-id="d8236-459">silence</span></span>|  
|<span data-ttu-id="d8236-460">1</span><span class="sxs-lookup"><span data-stu-id="d8236-460">1</span></span>|<span data-ttu-id="d8236-461">o AE, ax, ah</span><span class="sxs-lookup"><span data-stu-id="d8236-461">ae, ax, ah</span></span>|  
|<span data-ttu-id="d8236-462">2</span><span class="sxs-lookup"><span data-stu-id="d8236-462">2</span></span>|<span data-ttu-id="d8236-463">aa</span><span class="sxs-lookup"><span data-stu-id="d8236-463">aa</span></span>|  
|<span data-ttu-id="d8236-464">3</span><span class="sxs-lookup"><span data-stu-id="d8236-464">3</span></span>|<span data-ttu-id="d8236-465">sol</span><span class="sxs-lookup"><span data-stu-id="d8236-465">ao</span></span>|  
|<span data-ttu-id="d8236-466">4</span><span class="sxs-lookup"><span data-stu-id="d8236-466">4</span></span>|<span data-ttu-id="d8236-467">a EY, eh, OH</span><span class="sxs-lookup"><span data-stu-id="d8236-467">ey, eh, uh</span></span>|  
|<span data-ttu-id="d8236-468">5</span><span class="sxs-lookup"><span data-stu-id="d8236-468">5</span></span>|<span data-ttu-id="d8236-469">ER</span><span class="sxs-lookup"><span data-stu-id="d8236-469">er</span></span>|  
|<span data-ttu-id="d8236-470">6</span><span class="sxs-lookup"><span data-stu-id="d8236-470">6</span></span>|<span data-ttu-id="d8236-471">y, iy, ih, ix</span><span class="sxs-lookup"><span data-stu-id="d8236-471">y, iy, ih, ix</span></span>|  
|<span data-ttu-id="d8236-472">7</span><span class="sxs-lookup"><span data-stu-id="d8236-472">7</span></span>|<span data-ttu-id="d8236-473">w, USP</span><span class="sxs-lookup"><span data-stu-id="d8236-473">w, uw</span></span>|  
|<span data-ttu-id="d8236-474">8</span><span class="sxs-lookup"><span data-stu-id="d8236-474">8</span></span>|<span data-ttu-id="d8236-475">omo</span><span class="sxs-lookup"><span data-stu-id="d8236-475">ow</span></span>|  
|<span data-ttu-id="d8236-476">9</span><span class="sxs-lookup"><span data-stu-id="d8236-476">9</span></span>|<span data-ttu-id="d8236-477">AW</span><span class="sxs-lookup"><span data-stu-id="d8236-477">aw</span></span>|  
|<span data-ttu-id="d8236-478">10</span><span class="sxs-lookup"><span data-stu-id="d8236-478">10</span></span>|<span data-ttu-id="d8236-479">Oy</span><span class="sxs-lookup"><span data-stu-id="d8236-479">oy</span></span>|  
|<span data-ttu-id="d8236-480">11</span><span class="sxs-lookup"><span data-stu-id="d8236-480">11</span></span>|<span data-ttu-id="d8236-481">AA</span><span class="sxs-lookup"><span data-stu-id="d8236-481">ay</span></span>|  
|<span data-ttu-id="d8236-482">12</span><span class="sxs-lookup"><span data-stu-id="d8236-482">12</span></span>|<span data-ttu-id="d8236-483">h</span><span class="sxs-lookup"><span data-stu-id="d8236-483">h</span></span>|  
|<span data-ttu-id="d8236-484">13</span><span class="sxs-lookup"><span data-stu-id="d8236-484">13</span></span>|<span data-ttu-id="d8236-485">r</span><span class="sxs-lookup"><span data-stu-id="d8236-485">r</span></span>|  
|<span data-ttu-id="d8236-486">14</span><span class="sxs-lookup"><span data-stu-id="d8236-486">14</span></span>|<span data-ttu-id="d8236-487">l</span><span class="sxs-lookup"><span data-stu-id="d8236-487">l</span></span>|  
|<span data-ttu-id="d8236-488">15</span><span class="sxs-lookup"><span data-stu-id="d8236-488">15</span></span>|<span data-ttu-id="d8236-489">s, z</span><span class="sxs-lookup"><span data-stu-id="d8236-489">s, z</span></span>|  
|<span data-ttu-id="d8236-490">16</span><span class="sxs-lookup"><span data-stu-id="d8236-490">16</span></span>|<span data-ttu-id="d8236-491">sh, ch, jh, zh</span><span class="sxs-lookup"><span data-stu-id="d8236-491">sh, ch, jh, zh</span></span>|  
|<span data-ttu-id="d8236-492">17</span><span class="sxs-lookup"><span data-stu-id="d8236-492">17</span></span>|<span data-ttu-id="d8236-493">th, dh</span><span class="sxs-lookup"><span data-stu-id="d8236-493">th, dh</span></span>|  
|<span data-ttu-id="d8236-494">18</span><span class="sxs-lookup"><span data-stu-id="d8236-494">18</span></span>|<span data-ttu-id="d8236-495">f, v</span><span class="sxs-lookup"><span data-stu-id="d8236-495">f, v</span></span>|  
|<span data-ttu-id="d8236-496">19</span><span class="sxs-lookup"><span data-stu-id="d8236-496">19</span></span>|<span data-ttu-id="d8236-497">d, t, n</span><span class="sxs-lookup"><span data-stu-id="d8236-497">d, t, n</span></span>|  
|<span data-ttu-id="d8236-498">20</span><span class="sxs-lookup"><span data-stu-id="d8236-498">20</span></span>|<span data-ttu-id="d8236-499">k, g, ng</span><span class="sxs-lookup"><span data-stu-id="d8236-499">k, g, ng</span></span>|  
|<span data-ttu-id="d8236-500">21</span><span class="sxs-lookup"><span data-stu-id="d8236-500">21</span></span>|<span data-ttu-id="d8236-501">p, b, m</span><span class="sxs-lookup"><span data-stu-id="d8236-501">p, b, m</span></span>|  
  
 <span data-ttu-id="d8236-502">Para obter informações sobre os dados associados a `VisemeReached` eventos, consulte <xref:System.Speech.Synthesis.VisemeReachedEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="d8236-502">For information about data associated with the `VisemeReached` event, see <xref:System.Speech.Synthesis.VisemeReachedEventArgs>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Voice">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.VoiceInfo Voice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Speech.Synthesis.VoiceInfo Voice" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeechSynthesizer.Voice" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Voice As VoiceInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Synthesis::VoiceInfo ^ Voice { System::Speech::Synthesis::VoiceInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Voice : System.Speech.Synthesis.VoiceInfo" Usage="System.Speech.Synthesis.SpeechSynthesizer.Voice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.VoiceInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8236-503">Obtém informações sobre a voz atual do objeto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-503">Gets information about the current voice of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d8236-504">Retorna informações sobre a voz atual do objeto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-504">Returns information about the current voice of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8236-505">Quando você inicializa um novo <xref:System.Speech.Synthesis.SpeechSynthesizer>, ele usa a voz de sistema padrão.</span><span class="sxs-lookup"><span data-stu-id="d8236-505">When you initialize a new <xref:System.Speech.Synthesis.SpeechSynthesizer>, it uses the default system voice.</span></span> <span data-ttu-id="d8236-506">Para configurar o <xref:System.Speech.Synthesis.SpeechSynthesizer> objeto para usar um das vozes de síntese de fala instalados, use o <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> ou <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> método.</span><span class="sxs-lookup"><span data-stu-id="d8236-506">To configure the <xref:System.Speech.Synthesis.SpeechSynthesizer> object to use one of the installed speech synthesis voices, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> or <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> method.</span></span> <span data-ttu-id="d8236-507">Para obter informações sobre o qual as vozes são instaladas, use o <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> método e o <xref:System.Speech.Synthesis.VoiceInfo> classe.</span><span class="sxs-lookup"><span data-stu-id="d8236-507">To get information about which voices are installed, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and the <xref:System.Speech.Synthesis.VoiceInfo> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8236-508">O exemplo a seguir inicializa uma instância de <xref:System.Speech.Synthesis.SpeechSynthesizer> e obtém informações sobre a voz atual.</span><span class="sxs-lookup"><span data-stu-id="d8236-508">The following example initializes an instance of <xref:System.Speech.Synthesis.SpeechSynthesizer> and gets information about the current voice.</span></span>  
  
```csharp  
using System;  
using System.IO;  
using System.Speech.Synthesis;  
using System.Speech.AudioFormat;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Get information about supported audio formats.  
        string AudioFormats = "";  
        foreach (SpeechAudioFormatInfo fmt in synth.Voice.SupportedAudioFormats)  
        {  
          AudioFormats += String.Format("{0}\n",  
          fmt.EncodingFormat.ToString());  
        }  
  
        // Write information about the voice to the console.  
        Console.WriteLine(" Name:          " + synth.Voice.Name);  
        Console.WriteLine(" Culture:       " + synth.Voice.Culture);  
        Console.WriteLine(" Age:           " + synth.Voice.Age);  
        Console.WriteLine(" Gender:        " + synth.Voice.Gender);  
        Console.WriteLine(" Description:   " + synth.Voice.Description);  
        Console.WriteLine(" ID:            " + synth.Voice.Id);  
        if (synth.Voice.SupportedAudioFormats.Count != 0)  
        {  
          Console.WriteLine(" Audio formats: " + AudioFormats);  
        }  
        else  
        {  
          Console.WriteLine(" No supported audio formats found");  
        }  
  
        // Get additional information about the voice.  
        string AdditionalInfo = "";  
        foreach (string key in synth.Voice.AdditionalInfo.Keys)  
        {  
          AdditionalInfo += String.Format("  {0}: {1}\n",  
            key, synth.Voice.AdditionalInfo[key]);  
        }  
  
        Console.WriteLine(" Additional Info - " + AdditionalInfo);  
        Console.WriteLine();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange" />
      </Docs>
    </Member>
    <Member MemberName="VoiceChange">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.VoiceChangeEventArgs&gt; VoiceChange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.VoiceChangeEventArgs&gt; VoiceChange" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event VoiceChange As EventHandler(Of VoiceChangeEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::VoiceChangeEventArgs ^&gt; ^ VoiceChange;" />
      <MemberSignature Language="F#" Value="member this.VoiceChange : EventHandler&lt;System.Speech.Synthesis.VoiceChangeEventArgs&gt; " Usage="member this.VoiceChange : System.EventHandler&lt;System.Speech.Synthesis.VoiceChangeEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.VoiceChangeEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8236-509">Acionado quando a voz do <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> é alterada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-509">Raised when the voice of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8236-510">Para obter um exemplo e informações sobre os dados associados ao evento, consulte <xref:System.Speech.Synthesis.VoiceChangeEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="d8236-510">For an example and information about data associated with the event, see <xref:System.Speech.Synthesis.VoiceChangeEventArgs>.</span></span>  
  
 <span data-ttu-id="d8236-511">Você pode alterar a voz que o <xref:System.Speech.Synthesis.SpeechSynthesizer> usa com qualquer um dos <xref:System.Speech.Synthesis.PromptBuilder>do <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> métodos ou o <xref:System.Speech.Synthesis.SpeechSynthesizer>do <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> ou <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="d8236-511">You can change the voice that the <xref:System.Speech.Synthesis.SpeechSynthesizer> uses with any of the <xref:System.Speech.Synthesis.PromptBuilder>'s <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> methods or the <xref:System.Speech.Synthesis.SpeechSynthesizer>'s <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> or <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Volume">
      <MemberSignature Language="C#" Value="public int Volume { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Volume" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeechSynthesizer.Volume" />
      <MemberSignature Language="VB.NET" Value="Public Property Volume As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Volume { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Volume : int with get, set" Usage="System.Speech.Synthesis.SpeechSynthesizer.Volume" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8236-512">Obtém ou define o volume de saída do objeto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-512">Get or sets the output volume of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d8236-513">Retorna o volume do <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />, de 0 a 100.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8236-513">Returns the volume of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />, from 0 through 100.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d8236-514">O exemplo a seguir define o volume do <xref:System.Speech.Synthesis.SpeechSynthesizer>do áudio de saída para o arquivo WAV e de voz sintetizada.</span><span class="sxs-lookup"><span data-stu-id="d8236-514">The following example sets the volume of the <xref:System.Speech.Synthesis.SpeechSynthesizer>'s audio output for the synthesized voice and the WAV file.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Set the volume of the SpeechSynthesizer's ouput.  
        synth.Volume = 60;  
  
        // Build a prompt containing recorded audio and synthesized speech.  
        PromptBuilder builder = new PromptBuilder(  
          new System.Globalization.CultureInfo("en-US"));  
        builder.AppendAudio("C:\\Test\\WelcomeToContosoRadio.wav");  
        builder.AppendText(  
          "The weather forecast for today is partly cloudy with some sun breaks.");  
  
        // Speak the prompt.  
        synth.Speak(builder);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>