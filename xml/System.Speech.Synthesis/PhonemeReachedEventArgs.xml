<Type Name="PhonemeReachedEventArgs" FullName="System.Speech.Synthesis.PhonemeReachedEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bb89ba9f1ffa435178825aafe0c336a4f104c1e6" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37755194" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PhonemeReachedEventArgs : System.Speech.Synthesis.PromptEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PhonemeReachedEventArgs extends System.Speech.Synthesis.PromptEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Synthesis.PhonemeReachedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class PhonemeReachedEventArgs&#xA;Inherits PromptEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class PhonemeReachedEventArgs : System::Speech::Synthesis::PromptEventArgs" />
  <TypeSignature Language="F#" Value="type PhonemeReachedEventArgs = class&#xA;    inherit PromptEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Speech.Synthesis.PromptEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Retorna os dados do evento <see cref="E:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um fonema é um componente básico do idioma escrito. Para obter mais informações sobre fonemas, consulte <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.  
  
   
  
## Examples  
 O exemplo a seguir é parte de um aplicativo Windows Forms que grava as informações retornadas pelo <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> evento para uma caixa de texto. Os fonemas são caracteres da [alfabeto fonético internacional (IPA)](http://go.microsoft.com/fwlink/?LinkID=207686).  
  
> [!NOTE]
>  Os primeiro e último caracteres retornados por <xref:System.Speech.Synthesis.PhonemeReachedEventArgs> são de abertura e fechamento de caracteres que incluem, mas não representam fonemas que constituem uma palavra ou frase. Este exemplo retorna os cinco caracteres, mas somente os caracteres de três intermediários são fonemas que representam a palavra "tema": uma para o som "th", um para o som "e" e outra para o som de "m".  
  
```csharp  
using System;  
using System.Collections.Generic;  
using System.ComponentModel;  
using System.Data;  
using System.Drawing;  
using System.Linq;  
using System.Text;  
using System.Windows.Forms;  
using System.Speech.Synthesis;  
  
namespace PhonemeReached  
{  
  public partial class Form1 : Form  
  {  
  
    public Form1()  
    {  
      InitializeComponent();  
      textBox1.Text = "";  
    }  
  
    public void button1_Click(object sender, EventArgs e)  
    {  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Register for the PhonemeReached event.  
      synth.PhonemeReached += new EventHandler<PhonemeReachedEventArgs>(synth_PhonemeReached);  
  
      // Speak the contents of a string.  
      synth.Speak("Theme");  
    }  
  
    // Write information about each phoneme as it is reached.  
    private void synth_PhonemeReached(object sender, PhonemeReachedEventArgs e)  
    {textBox1.AppendText(string.Format(  
  
        "  Phoneme reached summary:" + Environment.NewLine +  
        "    Phoneme:                 {0}" + Environment.NewLine +    
        "    Audio Position:         {1} mSec" + Environment.NewLine +  
        "    Duration:                  {2} mSec" + Environment.NewLine +  
        "    Emphasis:                {3}" + Environment.NewLine +  
        "    Next Phoneme:         {4}" + Environment.NewLine + Environment.NewLine,   
        e.Phoneme,  
        e.AudioPosition,  
        e.Duration,  
        e.Emphasis,  
        e.NextPhoneme));  
    }  
  }  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AudioPosition">
      <MemberSignature Language="C#" Value="public TimeSpan AudioPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan AudioPosition" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.PhonemeReachedEventArgs.AudioPosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AudioPosition As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan AudioPosition { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.AudioPosition : TimeSpan" Usage="System.Speech.Synthesis.PhonemeReachedEventArgs.AudioPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a posição de áudio do fonema.</summary>
        <value>Um <see langword="TimeSpan" /> objeto que indica a posição de áudio.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Duration">
      <MemberSignature Language="C#" Value="public TimeSpan Duration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan Duration" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.PhonemeReachedEventArgs.Duration" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Duration As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan Duration { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.Duration : TimeSpan" Usage="System.Speech.Synthesis.PhonemeReachedEventArgs.Duration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a duração do fonema.</summary>
        <value>Um <see langword="TimeSpan" /> indicando a duração do objeto.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Emphasis">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.SynthesizerEmphasis Emphasis { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Speech.Synthesis.SynthesizerEmphasis Emphasis" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.PhonemeReachedEventArgs.Emphasis" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Emphasis As SynthesizerEmphasis" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Synthesis::SynthesizerEmphasis Emphasis { System::Speech::Synthesis::SynthesizerEmphasis get(); };" />
      <MemberSignature Language="F#" Value="member this.Emphasis : System.Speech.Synthesis.SynthesizerEmphasis" Usage="System.Speech.Synthesis.PhonemeReachedEventArgs.Emphasis" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.SynthesizerEmphasis</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a ênfase do fonema.</summary>
        <value>Um <see langword="SynthesizerEmphasis" /> membro que indica o nível de ênfase.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NextPhoneme">
      <MemberSignature Language="C#" Value="public string NextPhoneme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NextPhoneme" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.PhonemeReachedEventArgs.NextPhoneme" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NextPhoneme As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NextPhoneme { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NextPhoneme : string" Usage="System.Speech.Synthesis.PhonemeReachedEventArgs.NextPhoneme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o fonema que vem após o fonema associado ao evento <see cref="E:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached" />.</summary>
        <value>Uma cadeia de caracteres que contém o fonema Avançar.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Phoneme">
      <MemberSignature Language="C#" Value="public string Phoneme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Phoneme" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.PhonemeReachedEventArgs.Phoneme" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Phoneme As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Phoneme { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Phoneme : string" Usage="System.Speech.Synthesis.PhonemeReachedEventArgs.Phoneme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>O fonema associado ao evento <see cref="E:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached" />.</summary>
        <value>Uma cadeia de caracteres que contém o fonema.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>