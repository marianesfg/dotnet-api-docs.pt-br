<Type Name="WorkflowViewElement" FullName="System.Activities.Presentation.WorkflowViewElement">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e35b80bcc8d4d4da7eff8b665048dad138368fef" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39743627" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WorkflowViewElement : System.Windows.Controls.ContentControl, System.Activities.Presentation.ICompositeViewEvents" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WorkflowViewElement extends System.Windows.Controls.ContentControl implements class System.Activities.Presentation.ICompositeViewEvents" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.WorkflowViewElement" />
  <TypeSignature Language="VB.NET" Value="Public Class WorkflowViewElement&#xA;Inherits ContentControl&#xA;Implements ICompositeViewEvents" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowViewElement : System::Windows::Controls::ContentControl, System::Activities::Presentation::ICompositeViewEvents" />
  <TypeSignature Language="F#" Value="type WorkflowViewElement = class&#xA;    inherit ContentControl&#xA;    interface ICompositeViewEvents" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.ContentControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Activities.Presentation.ICompositeViewEvents</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="4ef9d-101">Especifica a classe base para qualquer elemento de interface do usuário que é exibido na tela do designer do Windows Workflow Foundation e que representa visualmente uma instância de um item atômico que pode ser editado.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4ef9d-101">Specifies the base class for any UI element that appears on the Windows Workflow Foundation designer canvas and that visually represents an instance of an atomic item that can be edited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ef9d-102">Exemplos de itens representados por uma <xref:System.Activities.Presentation.WorkflowViewElement> incluem <xref:System.Activities.Activity> e <xref:System.Activities.Statements.FlowNode>.</span><span class="sxs-lookup"><span data-stu-id="4ef9d-102">Examples of items represented by a <xref:System.Activities.Presentation.WorkflowViewElement> include <xref:System.Activities.Activity> and <xref:System.Activities.Statements.FlowNode>.</span></span> <span data-ttu-id="4ef9d-103">`WorkflowViewElement` Fornece um contrato comum que o designer usa para renderizar o elemento visual na superfície do designer e interagir com ele por meio de várias ações de edição.</span><span class="sxs-lookup"><span data-stu-id="4ef9d-103">`WorkflowViewElement` provides a common contract that the designer uses to render the visual element onto the designer surface and to interact with it through the various editing actions.</span></span>  
  
 <span data-ttu-id="4ef9d-104">Se você estiver criando um designer para uma <xref:System.Activities.Activity>, você deve usar o <xref:System.Activities.Presentation.ActivityDesigner> tipo base.</span><span class="sxs-lookup"><span data-stu-id="4ef9d-104">If you are building a designer for an <xref:System.Activities.Activity>, you should use the <xref:System.Activities.Presentation.ActivityDesigner> base type.</span></span> <span data-ttu-id="4ef9d-105">Se houver elementos não são de atividade que precisam ser tratados como itens de primeira classe na tela de designer, como um item de caixa de ferramentas que precisa ser arrastado em toda a tela ou para cenários de recortar e colar, usam `WorkflowViewElement` como a classe base.</span><span class="sxs-lookup"><span data-stu-id="4ef9d-105">If there are non-activity elements that need to be treated as first class items on the designer canvas, such as a toolbox item that needs to be draggable throughout the canvas, or for cut-and-paste scenarios, use `WorkflowViewElement` as the base class.</span></span> <span data-ttu-id="4ef9d-106">Se você não quiser usar o chrome atividade padrão para um designer de atividade, `WorkflowViewElement` deve ser usado como o tipo base para fornecer mais flexibilidade.</span><span class="sxs-lookup"><span data-stu-id="4ef9d-106">If you do not want to use the standard activity chrome for an activity designer, `WorkflowViewElement` should be used as the base type to provide the most flexibility.</span></span>  
  
 <span data-ttu-id="4ef9d-107">Um <xref:System.Activities.Presentation.WorkflowViewElement> representa uma <xref:System.Activities.Presentation.Model.ModelItem> na interface do usuário e fornece acesso de código para o item de modelo e um <xref:System.Activities.Presentation.EditingContext> que permite que alterações sejam feitas.</span><span class="sxs-lookup"><span data-stu-id="4ef9d-107">A <xref:System.Activities.Presentation.WorkflowViewElement> represents a <xref:System.Activities.Presentation.Model.ModelItem> in the UI and provides code access to the model item and an <xref:System.Activities.Presentation.EditingContext> that allows changes to be made.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4ef9d-108">Para obter um exemplo de código que mostra como criar um novo <xref:System.Activities.Activity> e uma <xref:System.Activities.Presentation.ActivityDesigner>e, em seguida, como associá-los, consulte o exemplo no <xref:System.Activities.Presentation.ActivityDesigner> documentação.</span><span class="sxs-lookup"><span data-stu-id="4ef9d-108">For a code sample showing how to create a new <xref:System.Activities.Activity> and an <xref:System.Activities.Presentation.ActivityDesigner>, and then how to associate them, see the sample in the <xref:System.Activities.Presentation.ActivityDesigner> documentation.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowViewElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowViewElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4ef9d-109">Inicializa uma nova instância da classe <see cref="T:System.Activities.Presentation.WorkflowViewElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-109">Initializes a new instance of the <see cref="T:System.Activities.Presentation.WorkflowViewElement" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ef9d-110">O <xref:System.Activities.Presentation.WorkflowViewElement.Collapsible%2A> estiver definida como `false` por padrão.</span><span class="sxs-lookup"><span data-stu-id="4ef9d-110">The <xref:System.Activities.Presentation.WorkflowViewElement.Collapsible%2A> property is set to `false` by default.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Collapsible">
      <MemberSignature Language="C#" Value="public bool Collapsible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Collapsible" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowViewElement.Collapsible" />
      <MemberSignature Language="VB.NET" Value="Public Property Collapsible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Collapsible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Collapsible : bool with get, set" Usage="System.Activities.Presentation.WorkflowViewElement.Collapsible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ef9d-111">Obtém ou define um valor que indica se o elemento pode ser recolhido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-111">Gets or sets a value that indicates whether the element can be collapsed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4ef9d-112">
            <see langword="true" /> Se o elemento pode ser recolhido; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-112">
              <see langword="true" /> if the element can be collapsed; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompositeViews">
      <MemberSignature Language="C#" Value="protected System.Collections.Generic.IList&lt;System.Activities.Presentation.ICompositeView&gt; CompositeViews { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Activities.Presentation.ICompositeView&gt; CompositeViews" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowViewElement.CompositeViews" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property CompositeViews As IList(Of ICompositeView)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Generic::IList&lt;System::Activities::Presentation::ICompositeView ^&gt; ^ CompositeViews { System::Collections::Generic::IList&lt;System::Activities::Presentation::ICompositeView ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CompositeViews : System.Collections.Generic.IList&lt;System.Activities.Presentation.ICompositeView&gt;" Usage="System.Activities.Presentation.WorkflowViewElement.CompositeViews" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Activities.Presentation.ICompositeView&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ef9d-113">Obtém a lista de todas as exibições de composição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-113">Gets the list of all composite views.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4ef9d-114">A lista de todas as exibições de composição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-114">The list of all composite views.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.Activities.Presentation.EditingContext Context { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.EditingContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowViewElement.Context" />
      <MemberSignature Language="VB.NET" Value="Public Property Context As EditingContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Presentation::EditingContext ^ Context { System::Activities::Presentation::EditingContext ^ get(); void set(System::Activities::Presentation::EditingContext ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.Activities.Presentation.EditingContext with get, set" Usage="System.Activities.Presentation.WorkflowViewElement.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.EditingContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ef9d-115">Obtém ou define o contexto de edição que é compartilhado por todos os elementos contidos em um designer de fluxo de trabalho.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-115">Gets or sets the editing context that is shared by all elements contained in a workflow designer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4ef9d-116">O <see cref="T:System.Activities.Presentation.EditingContext" /> objeto para o designer de fluxo de trabalho que contém o elemento de exibição do fluxo de trabalho.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-116">The <see cref="T:System.Activities.Presentation.EditingContext" /> object for the workflow designer that contains the workflow view element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ef9d-117">O <xref:System.Activities.Presentation.EditingContext> objeto é uma coleção de serviços compartilhados entre todos os elementos contidos no designer e usados para interagir entre o host e o designer.</span><span class="sxs-lookup"><span data-stu-id="4ef9d-117">The <xref:System.Activities.Presentation.EditingContext> object is a collection of services shared between all elements contained in the designer and used to interact between the host and the designer.</span></span> <span data-ttu-id="4ef9d-118">Os serviços são publicados e solicitados por meio de <xref:System.Activities.Presentation.EditingContext>.</span><span class="sxs-lookup"><span data-stu-id="4ef9d-118">Services are published and requested through the <xref:System.Activities.Presentation.EditingContext>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ContextProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ContextProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.WorkflowViewElement.ContextProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ContextProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ContextProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ContextProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.WorkflowViewElement.ContextProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ef9d-119">Identifica a propriedade de dependência <see cref="P:System.Activities.Presentation.WorkflowViewElement.Context" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-119">Identifies the <see cref="P:System.Activities.Presentation.WorkflowViewElement.Context" /> dependency property.</span>
          </span>
          <span data-ttu-id="4ef9d-120">Este é um campo somente leitura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-120">This is a read-only field.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultCompositeView">
      <MemberSignature Language="C#" Value="protected System.Activities.Presentation.ICompositeView DefaultCompositeView { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.ICompositeView DefaultCompositeView" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowViewElement.DefaultCompositeView" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property DefaultCompositeView As ICompositeView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Activities::Presentation::ICompositeView ^ DefaultCompositeView { System::Activities::Presentation::ICompositeView ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCompositeView : System.Activities.Presentation.ICompositeView" Usage="System.Activities.Presentation.WorkflowViewElement.DefaultCompositeView" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.ICompositeView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ef9d-121">Obtém a exibição de composição padrão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-121">Gets the default composite view.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4ef9d-122">A exibição de composição padrão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-122">The default composite view.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Designer">
      <MemberSignature Language="C#" Value="protected internal System.Activities.Presentation.View.DesignerView Designer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.View.DesignerView Designer" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowViewElement.Designer" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property Designer As DesignerView" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Activities::Presentation::View::DesignerView ^ Designer { System::Activities::Presentation::View::DesignerView ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Designer : System.Activities.Presentation.View.DesignerView" Usage="System.Activities.Presentation.WorkflowViewElement.Designer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.View.DesignerView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ef9d-123">Obtém o designer associado ao elemento de exibição do fluxo de trabalho.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-123">Gets the designer associated with the workflow view element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4ef9d-124">O designer associado ao elemento de exibição do fluxo de trabalho.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-124">The designer associated with the workflow view element.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DragHandle">
      <MemberSignature Language="C#" Value="public System.Windows.FrameworkElement DragHandle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.FrameworkElement DragHandle" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowViewElement.DragHandle" />
      <MemberSignature Language="VB.NET" Value="Public Property DragHandle As FrameworkElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::FrameworkElement ^ DragHandle { System::Windows::FrameworkElement ^ get(); void set(System::Windows::FrameworkElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DragHandle : System.Windows.FrameworkElement with get, set" Usage="System.Activities.Presentation.WorkflowViewElement.DragHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FrameworkElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ef9d-125">Obtém ou define o identificador de arrastar para o elemento de exibição do fluxo de trabalho.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-125">Gets or sets the drag handle for the workflow view element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4ef9d-126">Manipular a operação de arrastar para o elemento de exibição do fluxo de trabalho.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-126">The drag handle for the workflow view element.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpandState">
      <MemberSignature Language="C#" Value="public bool ExpandState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExpandState" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowViewElement.ExpandState" />
      <MemberSignature Language="VB.NET" Value="Public Property ExpandState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExpandState { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExpandState : bool with get, set" Usage="System.Activities.Presentation.WorkflowViewElement.ExpandState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ef9d-127">Obtém ou define um valor que indica se o estado da exibição do elemento está expandido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-127">Gets or sets a value that indicates whether the view state of the element is expanded.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4ef9d-128">
            <see langword="true" /> Se o estado de exibição do elemento é expandido; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-128">
              <see langword="true" /> if the view state of the element is expanded; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpandStateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ExpandStateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ExpandStateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.WorkflowViewElement.ExpandStateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ExpandStateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ExpandStateProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ExpandStateProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.WorkflowViewElement.ExpandStateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ef9d-129">Identifica a propriedade de dependência <see cref="P:System.Activities.Presentation.WorkflowViewElement.ExpandState" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-129">Identifies the <see cref="P:System.Activities.Presentation.WorkflowViewElement.ExpandState" /> dependency property.</span>
          </span>
          <span data-ttu-id="4ef9d-130">Este é um campo somente leitura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-130">This is a read-only field.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationHelpText">
      <MemberSignature Language="C#" Value="protected virtual string GetAutomationHelpText ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetAutomationHelpText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.GetAutomationHelpText" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetAutomationHelpText () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetAutomationHelpText();" />
      <MemberSignature Language="F#" Value="abstract member GetAutomationHelpText : unit -&gt; string&#xA;override this.GetAutomationHelpText : unit -&gt; string" Usage="workflowViewElement.GetAutomationHelpText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4ef9d-131">Quando implementado em uma classe derivada, recupera o texto de ajuda de automação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-131">When implemented in a derived class, retrieves the automation help text.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ef9d-132">A implementação padrão é retornar uma <see cref="T:System.String" /> vazia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-132">The default implementation is to return an empty <see cref="T:System.String" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ef9d-133">Implemente este método em sua classe derivada para adicionar seu próprio tratamento.</span><span class="sxs-lookup"><span data-stu-id="4ef9d-133">Implement this method in your derived class to add your own handling.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationIdMemberName">
      <MemberSignature Language="C#" Value="protected virtual string GetAutomationIdMemberName ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetAutomationIdMemberName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.GetAutomationIdMemberName" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetAutomationIdMemberName () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetAutomationIdMemberName();" />
      <MemberSignature Language="F#" Value="abstract member GetAutomationIdMemberName : unit -&gt; string&#xA;override this.GetAutomationIdMemberName : unit -&gt; string" Usage="workflowViewElement.GetAutomationIdMemberName " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4ef9d-134">Quando implementado em uma classe derivada, obtém o nome de uma propriedade do item de modelo associado ao elemento que é usado como a ID de automação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-134">When implemented in a derived class, gets the name of a property of the model item associated with the element that is used as automation ID.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ef9d-135">O nome a ser usado como a ID de automação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-135">The name to use as automation ID.</span>
          </span>
          <span data-ttu-id="4ef9d-136">A classe base sempre retorna <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-136">The base class always returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ef9d-137">Implemente este método em sua classe derivada para adicionar seu próprio tratamento que especifica uma propriedade de um item de modelo a ser usado para identificar o item de modelo para a automação.</span><span class="sxs-lookup"><span data-stu-id="4ef9d-137">Implement this method in your derived class to add your own handling that specifies a property of a model item to be used to identify the model item to automation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationItemStatus">
      <MemberSignature Language="C#" Value="protected internal virtual string GetAutomationItemStatus ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string GetAutomationItemStatus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.GetAutomationItemStatus" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetAutomationItemStatus () As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ GetAutomationItemStatus();" />
      <MemberSignature Language="F#" Value="abstract member GetAutomationItemStatus : unit -&gt; string&#xA;override this.GetAutomationItemStatus : unit -&gt; string" Usage="workflowViewElement.GetAutomationItemStatus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4ef9d-138">Quando implementado em uma classe derivada, recupera o status do item de automação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-138">When implemented in a derived class, retrieves the automation item status.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ef9d-139">A implementação padrão é retornar uma <see cref="T:System.String" /> vazia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-139">The default implementation is to return an empty <see cref="T:System.String" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="protected bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowViewElement.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Activities.Presentation.WorkflowViewElement.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ef9d-140">Obtém ou define um valor que indica se o elemento de exibição do fluxo de trabalho é somente leitura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-140">Gets or sets a value that indicates whether the workflow view element is read only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4ef9d-141">
            <see langword="true" /> Se o elemento for somente leitura; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-141">
              <see langword="true" /> if the element is read only; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRootDesigner">
      <MemberSignature Language="C#" Value="public bool IsRootDesigner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRootDesigner" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowViewElement.IsRootDesigner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRootDesigner As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRootDesigner { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsRootDesigner : bool" Usage="System.Activities.Presentation.WorkflowViewElement.IsRootDesigner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ef9d-142">Obtém ou define um valor que indica se o designer especificado é o designer raiz para este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-142">Gets or sets a value that indicates whether the specified designer is the root designer for this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4ef9d-143">
            <see langword="true" /> Se o designer especificado é o designer raiz; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-143">
              <see langword="true" /> if the specified designer is the root designer; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModelItem">
      <MemberSignature Language="C#" Value="public System.Activities.Presentation.Model.ModelItem ModelItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.Model.ModelItem ModelItem" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowViewElement.ModelItem" />
      <MemberSignature Language="VB.NET" Value="Public Property ModelItem As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Presentation::Model::ModelItem ^ ModelItem { System::Activities::Presentation::Model::ModelItem ^ get(); void set(System::Activities::Presentation::Model::ModelItem ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ModelItem : System.Activities.Presentation.Model.ModelItem with get, set" Usage="System.Activities.Presentation.WorkflowViewElement.ModelItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ef9d-144">Obtém ou define o objeto <see cref="T:System.Activities.Presentation.Model.ModelItem" /> subjacente associado ao elemento de exibição do fluxo de trabalho.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-144">Gets or sets the underlying <see cref="T:System.Activities.Presentation.Model.ModelItem" /> object associated with the workflow view element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4ef9d-145">Um <see cref="T:System.Activities.Presentation.Model.ModelItem" /> objeto que é um wrapper em torno de uma instância de modelo ou uma representação na memória do fluxo de trabalho subjacente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-145">A <see cref="T:System.Activities.Presentation.Model.ModelItem" /> object that is a wrapper around a model instance or an in-memory representation of the underlying workflow.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ef9d-146">O <xref:System.Activities.Presentation.Model.ModelItem> objeto fornece notificação de alterações, mesmo se a instância de modelo não fornecem notificação de alteração.</span><span class="sxs-lookup"><span data-stu-id="4ef9d-146">The <xref:System.Activities.Presentation.Model.ModelItem> object provides notification of changes even if the model instance does not provide change notification.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ModelItemProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ModelItemProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ModelItemProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.WorkflowViewElement.ModelItemProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ModelItemProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ModelItemProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ModelItemProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.WorkflowViewElement.ModelItemProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ef9d-147">Identifica a propriedade de dependência <see cref="P:System.Activities.Presentation.WorkflowViewElement.ModelItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-147">Identifies the <see cref="P:System.Activities.Presentation.WorkflowViewElement.ModelItem" /> dependency property.</span>
          </span>
          <span data-ttu-id="4ef9d-148">Este é um campo somente leitura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-148">This is a read-only field.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnContextMenuLoaded">
      <MemberSignature Language="C#" Value="protected virtual void OnContextMenuLoaded (System.Windows.Controls.ContextMenu menu);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContextMenuLoaded(class System.Windows.Controls.ContextMenu menu) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnContextMenuLoaded(System.Windows.Controls.ContextMenu)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContextMenuLoaded (menu As ContextMenu)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContextMenuLoaded(System::Windows::Controls::ContextMenu ^ menu);" />
      <MemberSignature Language="F#" Value="abstract member OnContextMenuLoaded : System.Windows.Controls.ContextMenu -&gt; unit&#xA;override this.OnContextMenuLoaded : System.Windows.Controls.ContextMenu -&gt; unit" Usage="workflowViewElement.OnContextMenuLoaded menu" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="menu" Type="System.Windows.Controls.ContextMenu" />
      </Parameters>
      <Docs>
        <param name="menu">
          <span data-ttu-id="4ef9d-149">O <see cref="T:System.Windows.Controls.ContextMenu" /> que é carregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-149">The <see cref="T:System.Windows.Controls.ContextMenu" /> that is loaded.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ef9d-150">Invocado quando o menu de contexto é carregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-150">Invoked when the context menu is loaded.</span>
          </span>
          <span data-ttu-id="4ef9d-151">Implemente este método em uma classe derivada para manipular este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-151">Implement this method in a derived class to handle this event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="workflowViewElement.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4ef9d-152">Retorna uma implementação <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> específica do <see cref="T:System.Activities.Presentation.WorkflowViewElement" /> para a infraestrutura do WPF (Windows Presentation Foundation).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-152">Returns a <see cref="T:System.Activities.Presentation.WorkflowViewElement" />-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation for the Windows Presentation Foundation (WPF) infrastructure.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ef9d-153">A implementação de <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> específica ao tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-153">The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragEnter">
      <MemberSignature Language="C#" Value="protected override void OnDragEnter (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDragEnter(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnDragEnter(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDragEnter (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDragEnter(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnDragEnter : System.Windows.DragEventArgs -&gt; unit" Usage="workflowViewElement.OnDragEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="4ef9d-154">O <see cref="T:System.Windows.DragEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-154">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ef9d-155">Aciona o evento <see cref="E:System.Windows.UIElement.DragEnter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-155">Raises the <see cref="E:System.Windows.UIElement.DragEnter" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragOver">
      <MemberSignature Language="C#" Value="protected override void OnDragOver (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDragOver(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnDragOver(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDragOver (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDragOver(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnDragOver : System.Windows.DragEventArgs -&gt; unit" Usage="workflowViewElement.OnDragOver e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="4ef9d-156">O <see cref="T:System.Windows.DragEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-156">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ef9d-157">Aciona o evento <see cref="E:System.Windows.UIElement.DragOver" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-157">Raises the <see cref="E:System.Windows.UIElement.DragOver" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEditAnnotation">
      <MemberSignature Language="C#" Value="protected internal virtual void OnEditAnnotation ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnEditAnnotation() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnEditAnnotation" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnEditAnnotation ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnEditAnnotation();" />
      <MemberSignature Language="F#" Value="abstract member OnEditAnnotation : unit -&gt; unit&#xA;override this.OnEditAnnotation : unit -&gt; unit" Usage="workflowViewElement.OnEditAnnotation " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4ef9d-158">Ocorre quando a anotação é editada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-158">Occurs when the annotation is edited.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnGotKeyboardFocus">
      <MemberSignature Language="C#" Value="protected override void OnGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnGotKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnGotKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnGotKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="workflowViewElement.OnGotKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="4ef9d-159">O <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-159">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ef9d-160">Invocado quando um elemento recebe o foco do teclado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-160">Invoked when an element receives keyboard focus.</span>
          </span>
          <span data-ttu-id="4ef9d-161">Implemente este método em uma classe derivada para manipular este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-161">Implement this method in a derived class to handle this event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInitialized">
      <MemberSignature Language="C#" Value="protected override void OnInitialized (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnInitialized(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnInitialized(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnInitialized (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnInitialized(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInitialized : EventArgs -&gt; unit" Usage="workflowViewElement.OnInitialized e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="4ef9d-162">O <see cref="T:System.EventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-162">The <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ef9d-163">Aciona o evento <see cref="E:System.Windows.FrameworkElement.Initialized" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-163">Raises the <see cref="E:System.Windows.FrameworkElement.Initialized" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ef9d-164">A implementação padrão desse método virtual gera o evento, conforme descrito acima.</span><span class="sxs-lookup"><span data-stu-id="4ef9d-164">The default implementation of this virtual method raises the event as described above.</span></span> <span data-ttu-id="4ef9d-165">Substituições devem chamar a implementação base para preservar esse comportamento.</span><span class="sxs-lookup"><span data-stu-id="4ef9d-165">Overrides should call the base implementation to preserve this behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnModelItemChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnModelItemChanged (object newItem);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnModelItemChanged(object newItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnModelItemChanged(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnModelItemChanged (newItem As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnModelItemChanged(System::Object ^ newItem);" />
      <MemberSignature Language="F#" Value="abstract member OnModelItemChanged : obj -&gt; unit&#xA;override this.OnModelItemChanged : obj -&gt; unit" Usage="workflowViewElement.OnModelItemChanged newItem" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="newItem">
          <span data-ttu-id="4ef9d-166">Um <see cref="T:System.Object" /> que representa o estado de alteração do item de modelo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-166">An <see cref="T:System.Object" /> that represents the changed state of the model item.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ef9d-167">Invocado quando o item de modelo subjacente é alterado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-167">Invoked when the underlying model item is changed.</span>
          </span>
          <span data-ttu-id="4ef9d-168">Implemente este método em uma classe derivada para manipular este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-168">Implement this method in a derived class to handle this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ef9d-169">Não há nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="4ef9d-169">There is no default implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected override void OnMouseDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="workflowViewElement.OnMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="4ef9d-170">A instância <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-170">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> instance that contains the event data.</span>
          </span>
          <span data-ttu-id="4ef9d-171">Estes dados do evento relatam detalhes sobre o botão do mouse que foi pressionado e o estado manipulado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-171">This event data reports details about the mouse button that was pressed and the state handled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ef9d-172">Invocado quando o botão do mouse é pressionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-172">Invoked when the mouse button is pressed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected override void OnMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="workflowViewElement.OnMouseMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="4ef9d-173">A instância <see cref="T:System.Windows.Input.MouseEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-173">The <see cref="T:System.Windows.Input.MouseEventArgs" /> instance that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ef9d-174">Invocado quando o mouse é movido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-174">Invoked when the mouse is moved.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="workflowViewElement.OnMouseUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="4ef9d-175">A instância <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-175">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> instance that contains the event data.</span>
          </span>
          <span data-ttu-id="4ef9d-176">Os dados do evento relatam que o botão do mouse foi liberado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-176">The event data reports that the mouse button was released.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ef9d-177">Invocado quando o botão do mouse é liberado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-177">Invoked when the mouse button is released.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragEnter">
      <MemberSignature Language="C#" Value="protected override void OnPreviewDragEnter (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreviewDragEnter(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnPreviewDragEnter(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPreviewDragEnter (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPreviewDragEnter(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreviewDragEnter : System.Windows.DragEventArgs -&gt; unit" Usage="workflowViewElement.OnPreviewDragEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="4ef9d-178">O <see cref="T:System.Windows.DragEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-178">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ef9d-179">Invocado quando uma operação de arrastar sem tratamento anexada ao evento especificado entra em um elemento em sua rota que é derivado desta classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-179">Invoked when an unhandled drag attached to the specified event enters an element in its route that is derived from this class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragLeave">
      <MemberSignature Language="C#" Value="protected override void OnPreviewDragLeave (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreviewDragLeave(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnPreviewDragLeave(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPreviewDragLeave (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPreviewDragLeave(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreviewDragLeave : System.Windows.DragEventArgs -&gt; unit" Usage="workflowViewElement.OnPreviewDragLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="4ef9d-180">O <see cref="T:System.Windows.DragEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-180">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ef9d-181">Invocado quando uma operação de arrastar sem tratamento anexada ao evento especificado sai de um elemento em sua rota que é derivado desta classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-181">Invoked when an unhandled drag attached to the specified event leaves an element in its route that is derived from this class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseUp">
      <MemberSignature Language="C#" Value="protected override void OnPreviewMouseUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreviewMouseUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPreviewMouseUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPreviewMouseUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreviewMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="workflowViewElement.OnPreviewMouseUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="4ef9d-182">O <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-182">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="4ef9d-183">Os dados de evento informam que um ou mais botões do mouse foram soltos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-183">The event data reports that one or more mouse buttons were released.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ef9d-184">Invocado quando uma liberação do mouse sem tratamento anexada ao evento especificado acessa um elemento em sua rota que é derivado desta classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-184">Invoked when an unhandled mouse release attached to the specified event reaches an element in its route that is derived from this class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnReadOnlyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnReadOnlyChanged (bool isReadOnly);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnReadOnlyChanged(bool isReadOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnReadOnlyChanged(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnReadOnlyChanged (isReadOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnReadOnlyChanged(bool isReadOnly);" />
      <MemberSignature Language="F#" Value="abstract member OnReadOnlyChanged : bool -&gt; unit&#xA;override this.OnReadOnlyChanged : bool -&gt; unit" Usage="workflowViewElement.OnReadOnlyChanged isReadOnly" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isReadOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isReadOnly">
          <span data-ttu-id="4ef9d-185">
            <see langword="true" /> para indicar que o elemento é somente leitura; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-185">
              <see langword="true" /> to indicate that the element is read-only; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ef9d-186">Invocado quando a propriedade somente leitura é alterada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-186">Invoked when the read-only property is changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ef9d-187">Não há nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="4ef9d-187">There is no default implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnShowExpandedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnShowExpandedChanged (bool newValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnShowExpandedChanged(bool newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.OnShowExpandedChanged(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnShowExpandedChanged (newValue As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnShowExpandedChanged(bool newValue);" />
      <MemberSignature Language="F#" Value="abstract member OnShowExpandedChanged : bool -&gt; unit&#xA;override this.OnShowExpandedChanged : bool -&gt; unit" Usage="workflowViewElement.OnShowExpandedChanged newValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newValue" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="newValue">
          <span data-ttu-id="4ef9d-188">
            <see langword="true" /> para indicar que o valor da propriedade Mostrar expandido foi alterado; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-188">
              <see langword="true" /> to indicate that the value of the show expanded property is changed; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ef9d-189">Invocado quando a propriedade Mostrar expandido é alterada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-189">Invoked when the show expanded property is changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ef9d-190">Não há nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="4ef9d-190">There is no default implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PinState">
      <MemberSignature Language="C#" Value="public bool PinState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PinState" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowViewElement.PinState" />
      <MemberSignature Language="VB.NET" Value="Public Property PinState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PinState { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PinState : bool with get, set" Usage="System.Activities.Presentation.WorkflowViewElement.PinState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ef9d-191">Obtém ou define um valor que indica se a propriedade <see cref="P:System.Activities.Presentation.WorkflowViewElement.ExpandState" /> deverá ter precedência sobre outros estados que podem ser usados para expandir ou recolher o <see cref="T:System.Activities.Presentation.WorkflowViewElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-191">Gets or sets a value that indicates whether the <see cref="P:System.Activities.Presentation.WorkflowViewElement.ExpandState" /> property should take precedence over other states that can be used to expand or collapse the <see cref="T:System.Activities.Presentation.WorkflowViewElement" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4ef9d-192">
            <see langword="true" /> Se o <see cref="P:System.Activities.Presentation.WorkflowViewElement.ExpandState" /> propriedade deve ser usada para expandir ou recolher a <see cref="T:System.Activities.Presentation.WorkflowViewElement" /> do objeto; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-192">
              <see langword="true" /> if the <see cref="P:System.Activities.Presentation.WorkflowViewElement.ExpandState" /> property should be used to expand or collapse the <see cref="T:System.Activities.Presentation.WorkflowViewElement" /> object; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PinStateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PinStateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PinStateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.WorkflowViewElement.PinStateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PinStateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PinStateProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PinStateProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.WorkflowViewElement.PinStateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ef9d-193">Identifica a propriedade de dependência <see cref="P:System.Activities.Presentation.WorkflowViewElement.PinState" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-193">Identifies the <see cref="P:System.Activities.Presentation.WorkflowViewElement.PinState" /> dependency property.</span>
          </span>
          <span data-ttu-id="4ef9d-194">Este é um campo somente leitura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-194">This is a read-only field.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterCompositeView">
      <MemberSignature Language="C#" Value="public void RegisterCompositeView (System.Activities.Presentation.ICompositeView container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterCompositeView(class System.Activities.Presentation.ICompositeView container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.RegisterCompositeView(System.Activities.Presentation.ICompositeView)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterCompositeView (container As ICompositeView)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterCompositeView(System::Activities::Presentation::ICompositeView ^ container);" />
      <MemberSignature Language="F#" Value="abstract member RegisterCompositeView : System.Activities.Presentation.ICompositeView -&gt; unit&#xA;override this.RegisterCompositeView : System.Activities.Presentation.ICompositeView -&gt; unit" Usage="workflowViewElement.RegisterCompositeView container" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Activities.Presentation.ICompositeViewEvents.RegisterCompositeView(System.Activities.Presentation.ICompositeView)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Activities.Presentation.ICompositeView" />
      </Parameters>
      <Docs>
        <param name="container">
          <span data-ttu-id="4ef9d-195">A exibição de composição a ser registrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-195">The composite view to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ef9d-196">Adiciona à exibição de composição especificada à lista de exibições de composição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-196">Adds the specified composite view to the list of composite views.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterDefaultCompositeView">
      <MemberSignature Language="C#" Value="public void RegisterDefaultCompositeView (System.Activities.Presentation.ICompositeView container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterDefaultCompositeView(class System.Activities.Presentation.ICompositeView container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.RegisterDefaultCompositeView(System.Activities.Presentation.ICompositeView)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterDefaultCompositeView (container As ICompositeView)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterDefaultCompositeView(System::Activities::Presentation::ICompositeView ^ container);" />
      <MemberSignature Language="F#" Value="abstract member RegisterDefaultCompositeView : System.Activities.Presentation.ICompositeView -&gt; unit&#xA;override this.RegisterDefaultCompositeView : System.Activities.Presentation.ICompositeView -&gt; unit" Usage="workflowViewElement.RegisterDefaultCompositeView container" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Activities.Presentation.ICompositeViewEvents.RegisterDefaultCompositeView(System.Activities.Presentation.ICompositeView)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Activities.Presentation.ICompositeView" />
      </Parameters>
      <Docs>
        <param name="container">
          <span data-ttu-id="4ef9d-197">A exibição de composição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-197">The composite view.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ef9d-198">Adiciona à exibição de composição especificada como a exibição de composição padrão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-198">Adds the specified composite view as the default composite view.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowExpanded">
      <MemberSignature Language="C#" Value="public bool ShowExpanded { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowExpanded" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowViewElement.ShowExpanded" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ShowExpanded As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowExpanded { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ShowExpanded : bool" Usage="System.Activities.Presentation.WorkflowViewElement.ShowExpanded" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ef9d-199">Obtém um valor que indica se o elemento de exibição do fluxo de trabalho é mostrado em uma exibição expandida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-199">Gets a value that indicates whether the workflow view element is shown in an expanded view.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4ef9d-200">
            <see langword="true" /> Se o elemento é mostrado em uma exibição expandida; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-200">
              <see langword="true" /> if the element is shown in an expanded view; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowExpandedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ShowExpandedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ShowExpandedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.WorkflowViewElement.ShowExpandedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ShowExpandedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ShowExpandedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ShowExpandedProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.WorkflowViewElement.ShowExpandedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ef9d-201">Identifica a propriedade de dependência <see cref="P:System.Activities.Presentation.WorkflowViewElement.ShowExpanded" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-201">Identifies the <see cref="P:System.Activities.Presentation.WorkflowViewElement.ShowExpanded" /> dependency property.</span>
          </span>
          <span data-ttu-id="4ef9d-202">Este é um campo somente leitura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-202">This is a read-only field.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterCompositeView">
      <MemberSignature Language="C#" Value="public void UnregisterCompositeView (System.Activities.Presentation.ICompositeView container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterCompositeView(class System.Activities.Presentation.ICompositeView container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.UnregisterCompositeView(System.Activities.Presentation.ICompositeView)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnregisterCompositeView (container As ICompositeView)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UnregisterCompositeView(System::Activities::Presentation::ICompositeView ^ container);" />
      <MemberSignature Language="F#" Value="abstract member UnregisterCompositeView : System.Activities.Presentation.ICompositeView -&gt; unit&#xA;override this.UnregisterCompositeView : System.Activities.Presentation.ICompositeView -&gt; unit" Usage="workflowViewElement.UnregisterCompositeView container" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Activities.Presentation.ICompositeViewEvents.UnregisterCompositeView(System.Activities.Presentation.ICompositeView)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Activities.Presentation.ICompositeView" />
      </Parameters>
      <Docs>
        <param name="container">
          <span data-ttu-id="4ef9d-203">A exibição de composição a ter o registro cancelado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-203">The composite view to unregister.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ef9d-204">Remove a exibição de composição especificada da lista de exibições de composição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-204">Removes the specified composite view from the list of composite views.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterDefaultCompositeView">
      <MemberSignature Language="C#" Value="public void UnregisterDefaultCompositeView (System.Activities.Presentation.ICompositeView container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterDefaultCompositeView(class System.Activities.Presentation.ICompositeView container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowViewElement.UnregisterDefaultCompositeView(System.Activities.Presentation.ICompositeView)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnregisterDefaultCompositeView (container As ICompositeView)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UnregisterDefaultCompositeView(System::Activities::Presentation::ICompositeView ^ container);" />
      <MemberSignature Language="F#" Value="abstract member UnregisterDefaultCompositeView : System.Activities.Presentation.ICompositeView -&gt; unit&#xA;override this.UnregisterDefaultCompositeView : System.Activities.Presentation.ICompositeView -&gt; unit" Usage="workflowViewElement.UnregisterDefaultCompositeView container" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Activities.Presentation.ICompositeViewEvents.UnregisterDefaultCompositeView(System.Activities.Presentation.ICompositeView)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Activities.Presentation.ICompositeView" />
      </Parameters>
      <Docs>
        <param name="container">
          <span data-ttu-id="4ef9d-205">A exibição de composição a ser removida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-205">The composite view to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ef9d-206">Remove a exibição de composição padrão especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-206">Removes the specified default composite view.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewService">
      <MemberSignature Language="C#" Value="protected internal System.Activities.Presentation.Services.ViewService ViewService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.Services.ViewService ViewService" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowViewElement.ViewService" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property ViewService As ViewService" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Activities::Presentation::Services::ViewService ^ ViewService { System::Activities::Presentation::Services::ViewService ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ViewService : System.Activities.Presentation.Services.ViewService" Usage="System.Activities.Presentation.WorkflowViewElement.ViewService" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Services.ViewService</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ef9d-207">Obtém o <see cref="T:System.Activities.Presentation.Services.ViewService" /> associado ao elemento de exibição do fluxo de trabalho.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-207">Gets the <see cref="T:System.Activities.Presentation.Services.ViewService" /> associated with the workflow view element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4ef9d-208">O serviço de modo de exibição associado ao elemento de exibição do fluxo de trabalho.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-208">The view service associated with the workflow view element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ef9d-209">Essa propriedade também pode ser acessada com o <xref:System.Activities.Presentation.EditingContext.Services%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="4ef9d-209">This property can also be accessed with the <xref:System.Activities.Presentation.EditingContext.Services%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewStateService">
      <MemberSignature Language="C#" Value="protected internal System.Activities.Presentation.View.ViewStateService ViewStateService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.View.ViewStateService ViewStateService" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowViewElement.ViewStateService" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property ViewStateService As ViewStateService" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Activities::Presentation::View::ViewStateService ^ ViewStateService { System::Activities::Presentation::View::ViewStateService ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ViewStateService : System.Activities.Presentation.View.ViewStateService" Usage="System.Activities.Presentation.WorkflowViewElement.ViewStateService" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.View.ViewStateService</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ef9d-210">Obtém o <see cref="T:System.Activities.Presentation.View.ViewStateService" /> definido no <see cref="T:System.Activities.Presentation.EditingContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-210">Gets the <see cref="T:System.Activities.Presentation.View.ViewStateService" /> defined in the <see cref="T:System.Activities.Presentation.EditingContext" />.</span>
          </span>
          <span data-ttu-id="4ef9d-211">Um atalho para essa propriedade é por meio do acesso a <see cref="P:System.Activities.Presentation.EditingContext.Services" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-211">A shortcut to this property is by accessing <see cref="P:System.Activities.Presentation.EditingContext.Services" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4ef9d-212">O <see cref="T:System.Activities.Presentation.View.ViewStateService" /> definido no <see cref="T:System.Activities.Presentation.EditingContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ef9d-212">The <see cref="T:System.Activities.Presentation.View.ViewStateService" /> defined in the <see cref="T:System.Activities.Presentation.EditingContext" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>