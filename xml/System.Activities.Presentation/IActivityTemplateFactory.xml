<Type Name="IActivityTemplateFactory" FullName="System.Activities.Presentation.IActivityTemplateFactory">
  <Metadata><Meta Name="ms.openlocfilehash" Value="453768f9dc573fccf4d6777fd4535e743d75edf9" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39516454" /></Metadata><TypeSignature Language="C#" Value="public interface IActivityTemplateFactory" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IActivityTemplateFactory" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.IActivityTemplateFactory" />
  <TypeSignature Language="VB.NET" Value="Public Interface IActivityTemplateFactory" />
  <TypeSignature Language="C++ CLI" Value="public interface class IActivityTemplateFactory" />
  <TypeSignature Language="F#" Value="type IActivityTemplateFactory = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Define o método de fábrica implementado por uma classe para criar um modelo que encapsula objetos <see cref="T:System.Activities.Activity" /> de “espaço reservado”.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Modelos personalizados de atividade devem implementar <xref:System.Activities.Presentation.IActivityTemplateFactory>. Modelos de atividade personalizados são usados para personalizar a configuração de atividades, incluindo atividades compostas personalizadas, para que os usuários não precisam criar cada uma das atividades individualmente e configurar todas as suas propriedades e outras configurações manualmente.  
  
   
  
## Examples  
  
```csharp  
  
public sealed class MyDelayActivity : IActivityTemplateFactory  
  
{  
     public Activity Create(DependencyObject target)  
     {  
         return new System.Activities.Statements.Delay  
         {  
             DisplayName = "DelayActivityTemplate",  
             Duration = new TimeSpan(0,0,10)  
  
         };  
     }  
 }  
  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public System.Activities.Activity Create (System.Windows.DependencyObject target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Activities.Activity Create(class System.Windows.DependencyObject target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.IActivityTemplateFactory.Create(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create (target As DependencyObject) As Activity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::Activity ^ Create(System::Windows::DependencyObject ^ target);" />
      <MemberSignature Language="F#" Value="abstract member Create : System.Windows.DependencyObject -&gt; System.Activities.Activity" Usage="iActivityTemplateFactory.Create target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="target">O objeto de dependência usado por esta instância de um <see cref="T:System.Activities.Presentation.IActivityTemplateFactory" />.</param>
        <summary>Cria uma instância da classe <see cref="T:System.Activities.Activity" /> que representa um padrão de design predefinido para o objeto de destino especificado.</summary>
        <returns>Um <see cref="T:System.Activities.Activity" /> de fluxo de trabalho.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use isso para criar e configurar as instâncias de atividade usadas em um modelo de atividade personalizada.  
  
   
  
## Examples  
 Crie um modelo que configura uma atividade de atraso com um período de dez segundos.  
  
```csharp  
  
public sealed class MyDelayActivity : IActivityTemplateFactory  
  
{  
     public Activity Create(DependencyObject target)  
     {  
         return new System.Activities.Statements.Delay  
         {  
             DisplayName = "DelayActivityTemplate",  
             Duration = new TimeSpan(0,0,10)  
  
         };  
     }  
 }  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>