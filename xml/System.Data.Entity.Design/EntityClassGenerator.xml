<Type Name="EntityClassGenerator" FullName="System.Data.Entity.Design.EntityClassGenerator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a475579d92164b3eb95f0c0077c44c6194b665a2" /><Meta Name="ms.sourcegitcommit" Value="1bb00d2f4343e73ae8d58668f02297a3cf10a4c1" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="06/15/2019" /><Meta Name="ms.locfileid" Value="63895559" /></Metadata><TypeSignature Language="C#" Value="public sealed class EntityClassGenerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EntityClassGenerator extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.Design.EntityClassGenerator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EntityClassGenerator" />
  <TypeSignature Language="C++ CLI" Value="public ref class EntityClassGenerator sealed" />
  <TypeSignature Language="F#" Value="type EntityClassGenerator = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity.Design</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Gera as classes de contexto de objeto e entidade (código de camada de objeto) com base nos arquivos CSDL (linguagem de definição de esquema conceitual).</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.Entity.Design.EntityClassGenerator" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityClassGenerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.EntityClassGenerator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityClassGenerator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.Entity.Design.EntityClassGenerator" /> com uma opção de idioma <see cref="F:System.Data.Entity.Design.LanguageOption.GenerateCSharpCode" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityClassGenerator (System.Data.Entity.Design.LanguageOption languageOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Data.Entity.Design.LanguageOption languageOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.EntityClassGenerator.#ctor(System.Data.Entity.Design.LanguageOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityClassGenerator(System::Data::Entity::Design::LanguageOption languageOption);" />
      <MemberSignature Language="F#" Value="new System.Data.Entity.Design.EntityClassGenerator : System.Data.Entity.Design.LanguageOption -&gt; System.Data.Entity.Design.EntityClassGenerator" Usage="new System.Data.Entity.Design.EntityClassGenerator languageOption" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="languageOption" Type="System.Data.Entity.Design.LanguageOption" />
      </Parameters>
      <Docs>
        <param name="languageOption">Um valor <see cref="T:System.Data.Entity.Design.LanguageOption" /> que especifica a linguagem do código gerado. A linguagem padrão é C#.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.Entity.Design.EntityClassGenerator" /> com o <see cref="T:System.Data.Entity.Design.LanguageOption" /> especificado.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EdmToObjectNamespaceMap">
      <MemberSignature Language="C#" Value="public System.Data.Entity.Design.EdmToObjectNamespaceMap EdmToObjectNamespaceMap { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Entity.Design.EdmToObjectNamespaceMap EdmToObjectNamespaceMap" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Design.EntityClassGenerator.EdmToObjectNamespaceMap" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EdmToObjectNamespaceMap As EdmToObjectNamespaceMap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Entity::Design::EdmToObjectNamespaceMap ^ EdmToObjectNamespaceMap { System::Data::Entity::Design::EdmToObjectNamespaceMap ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EdmToObjectNamespaceMap : System.Data.Entity.Design.EdmToObjectNamespaceMap" Usage="System.Data.Entity.Design.EntityClassGenerator.EdmToObjectNamespaceMap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Design.EdmToObjectNamespaceMap</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um <see cref="T:System.Data.Entity.Design.EdmToObjectNamespaceMap" /> que contém a CSDL (linguagem de definição de esquema conceitual) para mapeamentos de namespace de código.</summary>
        <value>A CSDL para mapeamentos de namespace de código.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mapeamentos de Namespace podem ser usados para especificar um namespace de código diferente para a geração de código do que o que é especificado no arquivo CSDL. Os mapeamentos de namespace são consultados quando uma referência a um tipo deve ser gerado. Se uma entrada for encontrada, o valor será usado para gerar a referência qualificada para o tipo; Caso contrário, o namespace CSDL será usado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GenerateCode">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gera um arquivo de código-fonte que contém os objetos gerados com base no arquivo CSDL (linguagem de definição de esquema conceitual).</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GenerateCode">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Data.Metadata.Edm.EdmSchemaError&gt; GenerateCode (string sourceEdmSchemaFilePath, string targetFilePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class System.Data.Metadata.Edm.EdmSchemaError&gt; GenerateCode(string sourceEdmSchemaFilePath, string targetFilePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.EntityClassGenerator.GenerateCode(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateCode (sourceEdmSchemaFilePath As String, targetFilePath As String) As IList(Of EdmSchemaError)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;System::Data::Metadata::Edm::EdmSchemaError ^&gt; ^ GenerateCode(System::String ^ sourceEdmSchemaFilePath, System::String ^ targetFilePath);" />
      <MemberSignature Language="F#" Value="member this.GenerateCode : string * string -&gt; System.Collections.Generic.IList&lt;System.Data.Metadata.Edm.EdmSchemaError&gt;" Usage="entityClassGenerator.GenerateCode (sourceEdmSchemaFilePath, targetFilePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Data.Metadata.Edm.EdmSchemaError&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceEdmSchemaFilePath" Type="System.String" />
        <Parameter Name="targetFilePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceEdmSchemaFilePath">O caminho do arquivo CSDL.</param>
        <param name="targetFilePath">O caminho do arquivo do código-fonte gerado.</param>
        <summary>Gera um arquivo de código-fonte que contém os objetos que foram gerados com base no arquivo CSDL (linguagem de definição de esquema conceitual) especificado.</summary>
        <returns>Um <see cref="T:System.Collections.IList" /> de <see cref="T:System.Data.Metadata.Edm.EdmSchemaError" /> que contém os erros gerados.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateCode">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Data.Metadata.Edm.EdmSchemaError&gt; GenerateCode (System.Xml.XmlReader sourceEdmSchema, System.IO.TextWriter target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class System.Data.Metadata.Edm.EdmSchemaError&gt; GenerateCode(class System.Xml.XmlReader sourceEdmSchema, class System.IO.TextWriter target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.EntityClassGenerator.GenerateCode(System.Xml.XmlReader,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateCode (sourceEdmSchema As XmlReader, target As TextWriter) As IList(Of EdmSchemaError)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;System::Data::Metadata::Edm::EdmSchemaError ^&gt; ^ GenerateCode(System::Xml::XmlReader ^ sourceEdmSchema, System::IO::TextWriter ^ target);" />
      <MemberSignature Language="F#" Value="member this.GenerateCode : System.Xml.XmlReader * System.IO.TextWriter -&gt; System.Collections.Generic.IList&lt;System.Data.Metadata.Edm.EdmSchemaError&gt;" Usage="entityClassGenerator.GenerateCode (sourceEdmSchema, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Data.Metadata.Edm.EdmSchemaError&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceEdmSchema" Type="System.Xml.XmlReader" />
        <Parameter Name="target" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="sourceEdmSchema">Um <see cref="T:System.Xml.XmlReader" /> que contém o arquivo CSDL.</param>
        <param name="target">O <see cref="T:System.IO.TextWriter" /> no qual o código-fonte é gravado.</param>
        <summary>Gera código-fonte usando o arquivo CSDL (linguagem de definição de esquema conceitual) contido no objeto <see cref="T:System.Xml.XmlReader" /> e produz o código-fonte gerado para um <see cref="T:System.IO.TextWriter" />.</summary>
        <returns>Um <see cref="T:System.Collections.IList" /> de <see cref="T:System.Data.Metadata.Edm.EdmSchemaError" /> que contém os erros gerados.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateCode">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Data.Metadata.Edm.EdmSchemaError&gt; GenerateCode (string sourceEdmSchemaFilePath, string targetPath, System.Collections.Generic.IEnumerable&lt;string&gt; additionalEdmSchemaFilePaths);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class System.Data.Metadata.Edm.EdmSchemaError&gt; GenerateCode(string sourceEdmSchemaFilePath, string targetPath, class System.Collections.Generic.IEnumerable`1&lt;string&gt; additionalEdmSchemaFilePaths) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.EntityClassGenerator.GenerateCode(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateCode (sourceEdmSchemaFilePath As String, targetPath As String, additionalEdmSchemaFilePaths As IEnumerable(Of String)) As IList(Of EdmSchemaError)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;System::Data::Metadata::Edm::EdmSchemaError ^&gt; ^ GenerateCode(System::String ^ sourceEdmSchemaFilePath, System::String ^ targetPath, System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ additionalEdmSchemaFilePaths);" />
      <MemberSignature Language="F#" Value="member this.GenerateCode : string * string * seq&lt;string&gt; -&gt; System.Collections.Generic.IList&lt;System.Data.Metadata.Edm.EdmSchemaError&gt;" Usage="entityClassGenerator.GenerateCode (sourceEdmSchemaFilePath, targetPath, additionalEdmSchemaFilePaths)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Data.Metadata.Edm.EdmSchemaError&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceEdmSchemaFilePath" Type="System.String" />
        <Parameter Name="targetPath" Type="System.String" />
        <Parameter Name="additionalEdmSchemaFilePaths" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="sourceEdmSchemaFilePath">O caminho do arquivo CSDL.</param>
        <param name="targetPath">O caminho do arquivo do código-fonte gerado.</param>
        <param name="additionalEdmSchemaFilePaths">Uma lista de caminhos de arquivo de esquema que podem ser usados para resolver as referências no esquema de origem (o arquivo CSDL). Se o esquema de origem não tiver nenhuma dependência, passe uma lista vazia.</param>
        <summary>Gera código-fonte usando o arquivo CSDL (linguagem de definição de esquema conceitual) especificado. A lista de caminhos de arquivo de esquema é usada para resolver as referências contidas no arquivo CSDL.</summary>
        <returns>Um <see cref="T:System.Collections.IList" /> de objetos <see cref="T:System.Data.Metadata.Edm.EdmSchemaError" /> que contém os erros gerados.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateCode">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Data.Metadata.Edm.EdmSchemaError&gt; GenerateCode (System.Xml.XmlReader sourceEdmSchema, System.IO.TextWriter target, System.Collections.Generic.IEnumerable&lt;System.Xml.XmlReader&gt; additionalEdmSchemas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class System.Data.Metadata.Edm.EdmSchemaError&gt; GenerateCode(class System.Xml.XmlReader sourceEdmSchema, class System.IO.TextWriter target, class System.Collections.Generic.IEnumerable`1&lt;class System.Xml.XmlReader&gt; additionalEdmSchemas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.EntityClassGenerator.GenerateCode(System.Xml.XmlReader,System.IO.TextWriter,System.Collections.Generic.IEnumerable{System.Xml.XmlReader})" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateCode (sourceEdmSchema As XmlReader, target As TextWriter, additionalEdmSchemas As IEnumerable(Of XmlReader)) As IList(Of EdmSchemaError)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;System::Data::Metadata::Edm::EdmSchemaError ^&gt; ^ GenerateCode(System::Xml::XmlReader ^ sourceEdmSchema, System::IO::TextWriter ^ target, System::Collections::Generic::IEnumerable&lt;System::Xml::XmlReader ^&gt; ^ additionalEdmSchemas);" />
      <MemberSignature Language="F#" Value="member this.GenerateCode : System.Xml.XmlReader * System.IO.TextWriter * seq&lt;System.Xml.XmlReader&gt; -&gt; System.Collections.Generic.IList&lt;System.Data.Metadata.Edm.EdmSchemaError&gt;" Usage="entityClassGenerator.GenerateCode (sourceEdmSchema, target, additionalEdmSchemas)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Data.Metadata.Edm.EdmSchemaError&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceEdmSchema" Type="System.Xml.XmlReader" />
        <Parameter Name="target" Type="System.IO.TextWriter" />
        <Parameter Name="additionalEdmSchemas" Type="System.Collections.Generic.IEnumerable&lt;System.Xml.XmlReader&gt;" />
      </Parameters>
      <Docs>
        <param name="sourceEdmSchema">Um <see cref="T:System.Xml.XmlReader" /> que contém o arquivo CSDL.</param>
        <param name="target">O <see cref="T:System.IO.TextWriter" /> para o qual você deseja produzir o código-fonte gerado.</param>
        <param name="additionalEdmSchemas">A lista de objetos <see cref="T:System.Xml.XmlReader" /> que contém esquemas que são referenciados pelo esquema de origem (o arquivo CSDL). Se o esquema de origem não tiver nenhuma dependência, passe um objeto <see cref="T:System.Collections.IList" /> vazio.</param>
        <summary>Gera o código-fonte com base no arquivo CSDL (linguagem de definição de esquema conceitual) no objeto <see cref="T:System.Xml.XmlReader" /> e, em seguida, produz o código-fonte gerado para um <see cref="T:System.IO.TextWriter" />. Um <see cref="T:System.Collections.IList" /> de objetos <see cref="T:System.Xml.XmlReader" /> é usado para resolver as referências contidas no arquivo CSDL.</summary>
        <returns>Uma lista de objetos <see cref="T:System.Data.Metadata.Edm.EdmSchemaError" /> que contém os erros gerados.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LanguageOption">
      <MemberSignature Language="C#" Value="public System.Data.Entity.Design.LanguageOption LanguageOption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Entity.Design.LanguageOption LanguageOption" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Design.EntityClassGenerator.LanguageOption" />
      <MemberSignature Language="VB.NET" Value="Public Property LanguageOption As LanguageOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Entity::Design::LanguageOption LanguageOption { System::Data::Entity::Design::LanguageOption get(); void set(System::Data::Entity::Design::LanguageOption value); };" />
      <MemberSignature Language="F#" Value="member this.LanguageOption : System.Data.Entity.Design.LanguageOption with get, set" Usage="System.Data.Entity.Design.EntityClassGenerator.LanguageOption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Design.LanguageOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor <see cref="T:System.Data.Entity.Design.LanguageOption" /> que indica a linguagem do código gerado.</summary>
        <value>Um dos valores de <see cref="T:System.Data.Entity.Design.LanguageOption" />. O padrão é <see cref="F:System.Data.Entity.Design.LanguageOption.GenerateCSharpCode" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyGenerated">
      <MemberSignature Language="C#" Value="public event System.Data.Entity.Design.PropertyGeneratedEventHandler OnPropertyGenerated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.Entity.Design.PropertyGeneratedEventHandler OnPropertyGenerated" />
      <MemberSignature Language="DocId" Value="E:System.Data.Entity.Design.EntityClassGenerator.OnPropertyGenerated" />
      <MemberSignature Language="VB.NET" Value="Public Event OnPropertyGenerated As PropertyGeneratedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::Entity::Design::PropertyGeneratedEventHandler ^ OnPropertyGenerated;" />
      <MemberSignature Language="F#" Value="member this.OnPropertyGenerated : System.Data.Entity.Design.PropertyGeneratedEventHandler " Usage="member this.OnPropertyGenerated : System.Data.Entity.Design.PropertyGeneratedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Design.PropertyGeneratedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando uma propriedade foi alterada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTypeGenerated">
      <MemberSignature Language="C#" Value="public event System.Data.Entity.Design.TypeGeneratedEventHandler OnTypeGenerated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.Entity.Design.TypeGeneratedEventHandler OnTypeGenerated" />
      <MemberSignature Language="DocId" Value="E:System.Data.Entity.Design.EntityClassGenerator.OnTypeGenerated" />
      <MemberSignature Language="VB.NET" Value="Public Event OnTypeGenerated As TypeGeneratedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::Entity::Design::TypeGeneratedEventHandler ^ OnTypeGenerated;" />
      <MemberSignature Language="F#" Value="member this.OnTypeGenerated : System.Data.Entity.Design.TypeGeneratedEventHandler " Usage="member this.OnTypeGenerated : System.Data.Entity.Design.TypeGeneratedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Design.TypeGeneratedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando as informações de tipo mudaram.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>