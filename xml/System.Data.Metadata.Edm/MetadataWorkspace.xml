<Type Name="MetadataWorkspace" FullName="System.Data.Metadata.Edm.MetadataWorkspace">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1dd865efb9ee6f0748235aba9d99984e681542f6" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55324770" /></Metadata><TypeSignature Language="C#" Value="public sealed class MetadataWorkspace" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MetadataWorkspace extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Metadata.Edm.MetadataWorkspace" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MetadataWorkspace" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetadataWorkspace sealed" />
  <TypeSignature Language="F#" Value="type MetadataWorkspace = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="8ea07-101">Representa o componente de serviço de tempo de execução de metadados ADO.NET que fornece suporte para recuperar metadados de várias fontes.</span><span class="sxs-lookup"><span data-stu-id="8ea07-101">Represents the ADO.NET metadata runtime service component that provides support for retrieving metadata from various sources.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ea07-102">O <xref:System.Data.Metadata.Edm.MetadataWorkspace> classe fornece um componente de serviço de tempo de execução central que você pode usar para interagir com os metadados de modelo conceitual no contexto de um determinado aplicativo.</span><span class="sxs-lookup"><span data-stu-id="8ea07-102">The <xref:System.Data.Metadata.Edm.MetadataWorkspace> class provides a central runtime service component that you can use to interact with conceptual model metadata in the context of a given application.</span></span> <span data-ttu-id="8ea07-103">Para obter mais informações, consulte [espaço de trabalho de metadados](https://msdn.microsoft.com/library/601aee56-3eda-4caa-9082-a01df76c5e84).</span><span class="sxs-lookup"><span data-stu-id="8ea07-103">For more information, see [Metadata Workspace](https://msdn.microsoft.com/library/601aee56-3eda-4caa-9082-a01df76c5e84).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8ea07-104">Inicializa uma nova instância da classe <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" />.</span><span class="sxs-lookup"><span data-stu-id="8ea07-104">Initializes a new instance of the <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetadataWorkspace ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MetadataWorkspace();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8ea07-105">Inicializa uma nova instância da classe <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" />.</span><span class="sxs-lookup"><span data-stu-id="8ea07-105">Initializes a new instance of the <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetadataWorkspace (System.Collections.Generic.IEnumerable&lt;string&gt; paths, System.Collections.Generic.IEnumerable&lt;System.Reflection.Assembly&gt; assembliesToConsider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;string&gt; paths, class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.Assembly&gt; assembliesToConsider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.Reflection.Assembly})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (paths As IEnumerable(Of String), assembliesToConsider As IEnumerable(Of Assembly))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MetadataWorkspace(System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ paths, System::Collections::Generic::IEnumerable&lt;System::Reflection::Assembly ^&gt; ^ assembliesToConsider);" />
      <MemberSignature Language="F#" Value="new System.Data.Metadata.Edm.MetadataWorkspace : seq&lt;string&gt; * seq&lt;System.Reflection.Assembly&gt; -&gt; System.Data.Metadata.Edm.MetadataWorkspace" Usage="new System.Data.Metadata.Edm.MetadataWorkspace (paths, assembliesToConsider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="paths" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="assembliesToConsider" Type="System.Collections.Generic.IEnumerable&lt;System.Reflection.Assembly&gt;" />
      </Parameters>
      <Docs>
        <param name="paths"><span data-ttu-id="8ea07-106">Os caminhos para os metadados de workspace.</span><span class="sxs-lookup"><span data-stu-id="8ea07-106">The paths to workspace metadata.</span></span></param>
        <param name="assembliesToConsider"><span data-ttu-id="8ea07-107">Os nomes dos assemblies usados para construir o workspace.</span><span class="sxs-lookup"><span data-stu-id="8ea07-107">The names of assemblies used to construct workspace.</span></span></param>
        <summary><span data-ttu-id="8ea07-108">Inicializa uma nova instância da classe <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> usando os caminhos e assemblies especificados.</span><span class="sxs-lookup"><span data-stu-id="8ea07-108">Initializes a new instance of the <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> class using the specified paths and assemblies.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearCache">
      <MemberSignature Language="C#" Value="public static void ClearCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearCache() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.ClearCache" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearCache ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearCache();" />
      <MemberSignature Language="F#" Value="static member ClearCache : unit -&gt; unit" Usage="System.Data.Metadata.Edm.MetadataWorkspace.ClearCache " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8ea07-109">Limpa todas as entradas de cache de metadados.</span><span class="sxs-lookup"><span data-stu-id="8ea07-109">Clears all the metadata cache entries.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateEntitySqlParser">
      <MemberSignature Language="C#" Value="public System.Data.Common.EntitySql.EntitySqlParser CreateEntitySqlParser ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.EntitySql.EntitySqlParser CreateEntitySqlParser() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.CreateEntitySqlParser" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateEntitySqlParser () As EntitySqlParser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::EntitySql::EntitySqlParser ^ CreateEntitySqlParser();" />
      <MemberSignature Language="F#" Value="member this.CreateEntitySqlParser : unit -&gt; System.Data.Common.EntitySql.EntitySqlParser" Usage="metadataWorkspace.CreateEntitySqlParser " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.EntitySql.EntitySqlParser</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8ea07-110">Cria um <see cref="T:System.Data.Common.EntitySql.EntitySqlParser" /> configurado para usar o espaço de dados <see cref="F:System.Data.Metadata.Edm.DataSpace.CSpace" />.</span><span class="sxs-lookup"><span data-stu-id="8ea07-110">Creates an <see cref="T:System.Data.Common.EntitySql.EntitySqlParser" /> configured to use the <see cref="F:System.Data.Metadata.Edm.DataSpace.CSpace" /> data space.</span></span></summary>
        <returns><span data-ttu-id="8ea07-111">O objeto de analisador criado.</span><span class="sxs-lookup"><span data-stu-id="8ea07-111">The created parser object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateQueryCommandTree">
      <MemberSignature Language="C#" Value="public System.Data.Common.CommandTrees.DbQueryCommandTree CreateQueryCommandTree (System.Data.Common.CommandTrees.DbExpression query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.CommandTrees.DbQueryCommandTree CreateQueryCommandTree(class System.Data.Common.CommandTrees.DbExpression query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.CreateQueryCommandTree(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateQueryCommandTree (query As DbExpression) As DbQueryCommandTree" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::CommandTrees::DbQueryCommandTree ^ CreateQueryCommandTree(System::Data::Common::CommandTrees::DbExpression ^ query);" />
      <MemberSignature Language="F#" Value="member this.CreateQueryCommandTree : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbQueryCommandTree" Usage="metadataWorkspace.CreateQueryCommandTree query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbQueryCommandTree</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="query"><span data-ttu-id="8ea07-112">Um <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> que define a consulta.</span><span class="sxs-lookup"><span data-stu-id="8ea07-112">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that defines the query.</span></span></param>
        <summary><span data-ttu-id="8ea07-113">Cria um novo <see cref="T:System.Data.Common.CommandTrees.DbQueryCommandTree" /> associado a este workspace de metadados com base na expressão de consulta especificada.</span><span class="sxs-lookup"><span data-stu-id="8ea07-113">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbQueryCommandTree" /> bound to this metadata workspace based on the specified query expression.</span></span></summary>
        <returns><span data-ttu-id="8ea07-114">Um novo <see cref="T:System.Data.Common.CommandTrees.DbQueryCommandTree" /> com a expressão especificada como sua propriedade <see cref="P:System.Data.Common.CommandTrees.DbQueryCommandTree.Query" />.</span><span class="sxs-lookup"><span data-stu-id="8ea07-114">A new <see cref="T:System.Data.Common.CommandTrees.DbQueryCommandTree" /> with the specified expression as it's <see cref="P:System.Data.Common.CommandTrees.DbQueryCommandTree.Query" /> property.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="query" /></exception>
        <exception cref="T:System.ArgumentException"><paramref name="query" /></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEdmSpaceType">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8ea07-115">Retorna um objeto <see cref="T:System.Data.Metadata.Edm.StructuralType" /> que representa o <see cref="T:System.Data.Metadata.Edm.EdmType" /> que corresponde ao tipo fornecido pelo parâmetro <paramref name="objectSpaceType" />.</span><span class="sxs-lookup"><span data-stu-id="8ea07-115">Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" /> that matches the type supplied by the parameter <paramref name="objectSpaceType" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEdmSpaceType">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EnumType GetEdmSpaceType (System.Data.Metadata.Edm.EnumType objectSpaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.EnumType GetEdmSpaceType(class System.Data.Metadata.Edm.EnumType objectSpaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetEdmSpaceType(System.Data.Metadata.Edm.EnumType)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEdmSpaceType (objectSpaceType As EnumType) As EnumType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::EnumType ^ GetEdmSpaceType(System::Data::Metadata::Edm::EnumType ^ objectSpaceType);" />
      <MemberSignature Language="F#" Value="member this.GetEdmSpaceType : System.Data.Metadata.Edm.EnumType -&gt; System.Data.Metadata.Edm.EnumType" Usage="metadataWorkspace.GetEdmSpaceType objectSpaceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EnumType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectSpaceType" Type="System.Data.Metadata.Edm.EnumType" />
      </Parameters>
      <Docs>
        <param name="objectSpaceType"><span data-ttu-id="8ea07-116">Um <see cref="T:System.Data.Metadata.Edm.EnumType" /> que fornece o tipo no espaço de objeto.</span><span class="sxs-lookup"><span data-stu-id="8ea07-116">A <see cref="T:System.Data.Metadata.Edm.EnumType" /> that supplies the type in the object space.</span></span></param>
        <summary><span data-ttu-id="8ea07-117">Retorna um objeto <see cref="T:System.Data.Metadata.Edm.StructuralType" /> que representa o <see cref="T:System.Data.Metadata.Edm.EdmType" /> que corresponde ao tipo fornecido pelo parâmetro <paramref name="objectSpaceType" />.</span><span class="sxs-lookup"><span data-stu-id="8ea07-117">Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" /> that matches the type supplied by the parameter <paramref name="objectSpaceType" />.</span></span></summary>
        <returns><span data-ttu-id="8ea07-118">Um objeto <see cref="T:System.Data.Metadata.Edm.StructuralType" /> que representa o <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span><span class="sxs-lookup"><span data-stu-id="8ea07-118">A <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span></span> <span data-ttu-id="8ea07-119">Se não houver nenhum tipo correspondente, este método retornará nulo.</span><span class="sxs-lookup"><span data-stu-id="8ea07-119">If there is no matched type, this method returns null.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEdmSpaceType">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.StructuralType GetEdmSpaceType (System.Data.Metadata.Edm.StructuralType objectSpaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.StructuralType GetEdmSpaceType(class System.Data.Metadata.Edm.StructuralType objectSpaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetEdmSpaceType(System.Data.Metadata.Edm.StructuralType)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEdmSpaceType (objectSpaceType As StructuralType) As StructuralType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::StructuralType ^ GetEdmSpaceType(System::Data::Metadata::Edm::StructuralType ^ objectSpaceType);" />
      <MemberSignature Language="F#" Value="member this.GetEdmSpaceType : System.Data.Metadata.Edm.StructuralType -&gt; System.Data.Metadata.Edm.StructuralType" Usage="metadataWorkspace.GetEdmSpaceType objectSpaceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.StructuralType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectSpaceType" Type="System.Data.Metadata.Edm.StructuralType" />
      </Parameters>
      <Docs>
        <param name="objectSpaceType"><span data-ttu-id="8ea07-120">Um <see cref="T:System.Data.Metadata.Edm.StructuralType" /> que fornece o tipo no espaço de objeto.</span><span class="sxs-lookup"><span data-stu-id="8ea07-120">A <see cref="T:System.Data.Metadata.Edm.StructuralType" /> that supplies the type in the object space.</span></span></param>
        <summary><span data-ttu-id="8ea07-121">Retorna um objeto <see cref="T:System.Data.Metadata.Edm.StructuralType" /> que representa o <see cref="T:System.Data.Metadata.Edm.EdmType" /> que corresponde ao tipo fornecido pelo parâmetro <paramref name="objectSpaceType" />.</span><span class="sxs-lookup"><span data-stu-id="8ea07-121">Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" /> that matches the type supplied by the parameter <paramref name="objectSpaceType" />.</span></span></summary>
        <returns><span data-ttu-id="8ea07-122">Um objeto <see cref="T:System.Data.Metadata.Edm.StructuralType" /> que representa o <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span><span class="sxs-lookup"><span data-stu-id="8ea07-122">A <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span></span> <span data-ttu-id="8ea07-123">Se não houver nenhum tipo correspondente, este método retornará nulo.</span><span class="sxs-lookup"><span data-stu-id="8ea07-123">If there is no matched type, this method returns null.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEntityContainer">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8ea07-124">Retorna um objeto <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> usando o nome do contêiner de entidade especificado e o modelo de dados.</span><span class="sxs-lookup"><span data-stu-id="8ea07-124">Returns an <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> object by using the specified entity container name and the data model.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEntityContainer">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EntityContainer GetEntityContainer (string name, System.Data.Metadata.Edm.DataSpace dataSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.EntityContainer GetEntityContainer(string name, valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetEntityContainer(System.String,System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::EntityContainer ^ GetEntityContainer(System::String ^ name, System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberSignature Language="F#" Value="member this.GetEntityContainer : string * System.Data.Metadata.Edm.DataSpace -&gt; System.Data.Metadata.Edm.EntityContainer" Usage="metadataWorkspace.GetEntityContainer (name, dataSpace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EntityContainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="8ea07-125">O nome do contêiner de entidade.</span><span class="sxs-lookup"><span data-stu-id="8ea07-125">The name of the entity container.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="8ea07-126">O modelo conceitual no qual o contêiner de entidade é pesquisado.</span><span class="sxs-lookup"><span data-stu-id="8ea07-126">The conceptual model on which the entity container is searched.</span></span></param>
        <summary><span data-ttu-id="8ea07-127">Retorna um objeto <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> usando o nome do contêiner de entidade especificado e o modelo de dados.</span><span class="sxs-lookup"><span data-stu-id="8ea07-127">Returns an <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> object by using the specified entity container name and the data model.</span></span></summary>
        <returns><span data-ttu-id="8ea07-128">Se não houver nenhum contêiner de entidade, esse método retornará nulo, caso contrário, ele retorna o primeiro contêiner de entidade.</span><span class="sxs-lookup"><span data-stu-id="8ea07-128">If there is no entity container, this method returns null; otherwise, it returns the first entity container.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEntityContainer">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EntityContainer GetEntityContainer (string name, bool ignoreCase, System.Data.Metadata.Edm.DataSpace dataSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.EntityContainer GetEntityContainer(string name, bool ignoreCase, valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetEntityContainer(System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::EntityContainer ^ GetEntityContainer(System::String ^ name, bool ignoreCase, System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberSignature Language="F#" Value="member this.GetEntityContainer : string * bool * System.Data.Metadata.Edm.DataSpace -&gt; System.Data.Metadata.Edm.EntityContainer" Usage="metadataWorkspace.GetEntityContainer (name, ignoreCase, dataSpace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EntityContainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="8ea07-129">O nome do contêiner de entidade.</span><span class="sxs-lookup"><span data-stu-id="8ea07-129">The name of the entity container.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="8ea07-130"><see langword="true" /> para realizar a pesquisa que não diferencia maiúsculas de minúsculas; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8ea07-130"><see langword="true" /> to perform the case-insensitive search; otherwise, <see langword="false" />.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="8ea07-131">O modelo conceitual no qual o contêiner de entidade é pesquisado.</span><span class="sxs-lookup"><span data-stu-id="8ea07-131">The conceptual model on which the entity container is searched.</span></span></param>
        <summary><span data-ttu-id="8ea07-132">Retorna um objeto <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> usando o nome do contêiner de entidade especificado e o modelo de dados.</span><span class="sxs-lookup"><span data-stu-id="8ea07-132">Returns an <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> object by using the specified entity container name and the data model.</span></span></summary>
        <returns><span data-ttu-id="8ea07-133">Se não houver nenhum contêiner de entidade, esse método retornará nulo, caso contrário, ele retorna o primeiro contêiner de entidade.</span><span class="sxs-lookup"><span data-stu-id="8ea07-133">If there is no entity container, this method returns null; otherwise, it returns the first entity container.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFunctions">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8ea07-134">Retorna todas as sobrecargas de funções usando o nome, o nome do namespace e o modelo de dados especificados.</span><span class="sxs-lookup"><span data-stu-id="8ea07-134">Returns all the overloads of the functions by using the specified name, namespace name, and data model.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFunctions">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt; GetFunctions (string name, string namespaceName, System.Data.Metadata.Edm.DataSpace dataSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Metadata.Edm.EdmFunction&gt; GetFunctions(string name, string namespaceName, valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetFunctions(System.String,System.String,System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Metadata::Edm::EdmFunction ^&gt; ^ GetFunctions(System::String ^ name, System::String ^ namespaceName, System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberSignature Language="F#" Value="member this.GetFunctions : string * string * System.Data.Metadata.Edm.DataSpace -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt;" Usage="metadataWorkspace.GetFunctions (name, namespaceName, dataSpace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="8ea07-135">O nome da função.</span><span class="sxs-lookup"><span data-stu-id="8ea07-135">The name of the function.</span></span></param>
        <param name="namespaceName"><span data-ttu-id="8ea07-136">O namespace da função.</span><span class="sxs-lookup"><span data-stu-id="8ea07-136">The namespace of the function.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="8ea07-137">O modelo conceitual em que as funções são pesquisadas.</span><span class="sxs-lookup"><span data-stu-id="8ea07-137">The conceptual model in which the functions are searched.</span></span></param>
        <summary><span data-ttu-id="8ea07-138">Retorna todas as sobrecargas de funções usando o nome, o nome do namespace e o modelo de dados especificados.</span><span class="sxs-lookup"><span data-stu-id="8ea07-138">Returns all the overloads of the functions by using the specified name, namespace name, and data model.</span></span></summary>
        <returns><span data-ttu-id="8ea07-139">Uma coleção de tipo <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> que contém todas as funções que correspondem ao nome especificado em um determinado namespace e um modelo de dados.</span><span class="sxs-lookup"><span data-stu-id="8ea07-139">A collection of type <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> that contains all the functions that match the specified name in a given namespace and a data model.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFunctions">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt; GetFunctions (string name, string namespaceName, System.Data.Metadata.Edm.DataSpace dataSpace, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Metadata.Edm.EdmFunction&gt; GetFunctions(string name, string namespaceName, valuetype System.Data.Metadata.Edm.DataSpace dataSpace, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetFunctions(System.String,System.String,System.Data.Metadata.Edm.DataSpace,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Metadata::Edm::EdmFunction ^&gt; ^ GetFunctions(System::String ^ name, System::String ^ namespaceName, System::Data::Metadata::Edm::DataSpace dataSpace, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="member this.GetFunctions : string * string * System.Data.Metadata.Edm.DataSpace * bool -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt;" Usage="metadataWorkspace.GetFunctions (name, namespaceName, dataSpace, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="8ea07-140">O nome da função.</span><span class="sxs-lookup"><span data-stu-id="8ea07-140">The name of the function.</span></span></param>
        <param name="namespaceName"><span data-ttu-id="8ea07-141">O namespace da função.</span><span class="sxs-lookup"><span data-stu-id="8ea07-141">The namespace of the function.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="8ea07-142">O modelo conceitual em que as funções são pesquisadas.</span><span class="sxs-lookup"><span data-stu-id="8ea07-142">The conceptual model in which the functions are searched.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="8ea07-143"><see langword="true" /> para realizar a pesquisa que não diferencia maiúsculas de minúsculas; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8ea07-143"><see langword="true" /> to perform the case-insensitive search; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="8ea07-144">Retorna todas as sobrecargas de funções usando o nome, o nome do namespace e o modelo de dados especificados.</span><span class="sxs-lookup"><span data-stu-id="8ea07-144">Returns all the overloads of the functions by using the specified name, namespace name, and data model.</span></span></summary>
        <returns><span data-ttu-id="8ea07-145">Uma coleção de tipo <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> que contém todas as funções que correspondem ao nome especificado em um determinado namespace e um modelo de dados.</span><span class="sxs-lookup"><span data-stu-id="8ea07-145">A collection of type <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> that contains all the functions that match the specified name in a given namespace and a data model.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetItem&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8ea07-146">Retorna um item usando a identidade especificada e o modelo de dados.</span><span class="sxs-lookup"><span data-stu-id="8ea07-146">Returns an item by using the specified identity and the data model.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetItem&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetItem&lt;T&gt; (string identity, System.Data.Metadata.Edm.DataSpace dataSpace) where T : System.Data.Metadata.Edm.GlobalItem;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T GetItem&lt;(class System.Data.Metadata.Edm.GlobalItem) T&gt;(string identity, valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetItem``1(System.String,System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::Metadata::Edm::GlobalItem T GetItem(System::String ^ identity, System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberSignature Language="F#" Value="member this.GetItem : string * System.Data.Metadata.Edm.DataSpace -&gt; 'T (requires 'T :&gt; System.Data.Metadata.Edm.GlobalItem)" Usage="metadataWorkspace.GetItem (identity, dataSpace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.Metadata.Edm.GlobalItem</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="8ea07-147">O tipo retornado pelo método.</span><span class="sxs-lookup"><span data-stu-id="8ea07-147">The type returned by the method.</span></span></typeparam>
        <param name="identity"><span data-ttu-id="8ea07-148">A identidade do item.</span><span class="sxs-lookup"><span data-stu-id="8ea07-148">The identity of the item.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="8ea07-149">O modelo conceitual em que o item é pesquisado.</span><span class="sxs-lookup"><span data-stu-id="8ea07-149">The conceptual model in which the item is searched.</span></span></param>
        <summary><span data-ttu-id="8ea07-150">Retorna um item usando a identidade especificada e o modelo de dados.</span><span class="sxs-lookup"><span data-stu-id="8ea07-150">Returns an item by using the specified identity and the data model.</span></span></summary>
        <returns><span data-ttu-id="8ea07-151">O item que corresponda à identidade fornecida no modelo de dados especificado.</span><span class="sxs-lookup"><span data-stu-id="8ea07-151">The item that matches the given identity in the specified data model.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItem&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetItem&lt;T&gt; (string identity, bool ignoreCase, System.Data.Metadata.Edm.DataSpace dataSpace) where T : System.Data.Metadata.Edm.GlobalItem;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T GetItem&lt;(class System.Data.Metadata.Edm.GlobalItem) T&gt;(string identity, bool ignoreCase, valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetItem``1(System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::Metadata::Edm::GlobalItem T GetItem(System::String ^ identity, bool ignoreCase, System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberSignature Language="F#" Value="member this.GetItem : string * bool * System.Data.Metadata.Edm.DataSpace -&gt; 'T (requires 'T :&gt; System.Data.Metadata.Edm.GlobalItem)" Usage="metadataWorkspace.GetItem (identity, ignoreCase, dataSpace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.Metadata.Edm.GlobalItem</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="8ea07-152">O tipo retornado pelo método.</span><span class="sxs-lookup"><span data-stu-id="8ea07-152">The type returned by the method.</span></span></typeparam>
        <param name="identity"><span data-ttu-id="8ea07-153">A identidade do item.</span><span class="sxs-lookup"><span data-stu-id="8ea07-153">The identity of the item.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="8ea07-154"><see langword="true" /> para realizar a pesquisa que não diferencia maiúsculas de minúsculas; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8ea07-154"><see langword="true" /> to perform the case-insensitive search; otherwise, <see langword="false" />.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="8ea07-155">O modelo conceitual em que o item é pesquisado.</span><span class="sxs-lookup"><span data-stu-id="8ea07-155">The conceptual model on which the item is searched.</span></span></param>
        <summary><span data-ttu-id="8ea07-156">Retorna um item usando a identidade especificada e o modelo de dados.</span><span class="sxs-lookup"><span data-stu-id="8ea07-156">Returns an item by using the specified identity and the data model.</span></span></summary>
        <returns><span data-ttu-id="8ea07-157">O item que corresponda à identidade fornecida no modelo de dados especificado.</span><span class="sxs-lookup"><span data-stu-id="8ea07-157">The item that matches the given identity in the specified data model.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemCollection">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.ItemCollection GetItemCollection (System.Data.Metadata.Edm.DataSpace dataSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.ItemCollection GetItemCollection(valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetItemCollection(System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::ItemCollection ^ GetItemCollection(System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberSignature Language="F#" Value="member this.GetItemCollection : System.Data.Metadata.Edm.DataSpace -&gt; System.Data.Metadata.Edm.ItemCollection" Usage="metadataWorkspace.GetItemCollection dataSpace" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.ItemCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <param name="dataSpace"><span data-ttu-id="8ea07-158">O <see cref="T:System.Data.Metadata.Edm.DataSpace" /> do qual recuperar itens.</span><span class="sxs-lookup"><span data-stu-id="8ea07-158">The <see cref="T:System.Data.Metadata.Edm.DataSpace" /> from which to retrieve items.</span></span></param>
        <summary><span data-ttu-id="8ea07-159">Obtém itens <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" />.</span><span class="sxs-lookup"><span data-stu-id="8ea07-159">Gets <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> items.</span></span></summary>
        <returns><span data-ttu-id="8ea07-160">Os itens <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" />.</span><span class="sxs-lookup"><span data-stu-id="8ea07-160">The <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> items.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItems">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.GlobalItem&gt; GetItems (System.Data.Metadata.Edm.DataSpace dataSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Metadata.Edm.GlobalItem&gt; GetItems(valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetItems(System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Metadata::Edm::GlobalItem ^&gt; ^ GetItems(System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberSignature Language="F#" Value="member this.GetItems : System.Data.Metadata.Edm.DataSpace -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.GlobalItem&gt;" Usage="metadataWorkspace.GetItems dataSpace" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.GlobalItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <param name="dataSpace"><span data-ttu-id="8ea07-161">O modelo conceitual para o qual a lista de itens é necessária.</span><span class="sxs-lookup"><span data-stu-id="8ea07-161">The conceptual model for which the list of items is needed.</span></span></param>
        <summary><span data-ttu-id="8ea07-162">Obtém todos os itens no modelo de dados especificado.</span><span class="sxs-lookup"><span data-stu-id="8ea07-162">Gets all the items in the specified data model.</span></span></summary>
        <returns><span data-ttu-id="8ea07-163">Uma coleção de tipo <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> que contém todos os itens no modelo de dados especificado.</span><span class="sxs-lookup"><span data-stu-id="8ea07-163">A collection of type <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> that contains all the items in the specified data model.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItems&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt; GetItems&lt;T&gt; (System.Data.Metadata.Edm.DataSpace dataSpace) where T : System.Data.Metadata.Edm.GlobalItem;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;!!T&gt; GetItems&lt;(class System.Data.Metadata.Edm.GlobalItem) T&gt;(valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetItems``1(System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::Metadata::Edm::GlobalItem System::Collections::ObjectModel::ReadOnlyCollection&lt;T&gt; ^ GetItems(System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberSignature Language="F#" Value="member this.GetItems : System.Data.Metadata.Edm.DataSpace -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;'T (requires 'T :&gt; System.Data.Metadata.Edm.GlobalItem)&gt; (requires 'T :&gt; System.Data.Metadata.Edm.GlobalItem)" Usage="metadataWorkspace.GetItems dataSpace" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.Metadata.Edm.GlobalItem</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="8ea07-164">O tipo retornado pelo método.</span><span class="sxs-lookup"><span data-stu-id="8ea07-164">The type returned by the method.</span></span></typeparam>
        <param name="dataSpace"><span data-ttu-id="8ea07-165">O modelo conceitual para o qual a lista de itens é necessária.</span><span class="sxs-lookup"><span data-stu-id="8ea07-165">The conceptual model for which the list of items is needed.</span></span></param>
        <summary><span data-ttu-id="8ea07-166">Obtém todos os itens no modelo de dados especificado.</span><span class="sxs-lookup"><span data-stu-id="8ea07-166">Gets all the items in the specified data model.</span></span></summary>
        <returns><span data-ttu-id="8ea07-167">Uma coleção de tipo <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> que contém todos os itens no modelo de dados especificado.</span><span class="sxs-lookup"><span data-stu-id="8ea07-167">A collection of type <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> that contains all the items in the specified data model.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetObjectSpaceType">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8ea07-168">Retorna um objeto <see cref="T:System.Data.Metadata.Edm.StructuralType" /> que representa o tipo de espaço de objeto que corresponde ao tipo fornecido pelo parâmetro <paramref name="edmSpaceType" />.</span><span class="sxs-lookup"><span data-stu-id="8ea07-168">Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the object space type that matches the type supplied by the parameter <paramref name="edmSpaceType" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetObjectSpaceType">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EnumType GetObjectSpaceType (System.Data.Metadata.Edm.EnumType edmSpaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.EnumType GetObjectSpaceType(class System.Data.Metadata.Edm.EnumType edmSpaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetObjectSpaceType(System.Data.Metadata.Edm.EnumType)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetObjectSpaceType (edmSpaceType As EnumType) As EnumType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::EnumType ^ GetObjectSpaceType(System::Data::Metadata::Edm::EnumType ^ edmSpaceType);" />
      <MemberSignature Language="F#" Value="member this.GetObjectSpaceType : System.Data.Metadata.Edm.EnumType -&gt; System.Data.Metadata.Edm.EnumType" Usage="metadataWorkspace.GetObjectSpaceType edmSpaceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EnumType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="edmSpaceType" Type="System.Data.Metadata.Edm.EnumType" />
      </Parameters>
      <Docs>
        <param name="edmSpaceType"><span data-ttu-id="8ea07-169">Um objeto <see cref="T:System.Data.Metadata.Edm.EnumType" /> que representa o <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span><span class="sxs-lookup"><span data-stu-id="8ea07-169">A <see cref="T:System.Data.Metadata.Edm.EnumType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span></span></param>
        <summary><span data-ttu-id="8ea07-170">Retorna um objeto <see cref="T:System.Data.Metadata.Edm.StructuralType" /> que representa o tipo de espaço de objeto que corresponde ao tipo fornecido pelo parâmetro <paramref name="edmSpaceType" />.</span><span class="sxs-lookup"><span data-stu-id="8ea07-170">Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the object space type that matches the type supplied by the parameter <paramref name="edmSpaceType" />.</span></span></summary>
        <returns><span data-ttu-id="8ea07-171">Um objeto <see cref="T:System.Data.Metadata.Edm.StructuralType" /> que representa o tipo de espaço de objeto.</span><span class="sxs-lookup"><span data-stu-id="8ea07-171">A <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the Object space type.</span></span> <span data-ttu-id="8ea07-172">Se não houver nenhum tipo correspondente, este método retornará nulo.</span><span class="sxs-lookup"><span data-stu-id="8ea07-172">If there is no matched type, this method returns null.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectSpaceType">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.StructuralType GetObjectSpaceType (System.Data.Metadata.Edm.StructuralType edmSpaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.StructuralType GetObjectSpaceType(class System.Data.Metadata.Edm.StructuralType edmSpaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetObjectSpaceType(System.Data.Metadata.Edm.StructuralType)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetObjectSpaceType (edmSpaceType As StructuralType) As StructuralType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::StructuralType ^ GetObjectSpaceType(System::Data::Metadata::Edm::StructuralType ^ edmSpaceType);" />
      <MemberSignature Language="F#" Value="member this.GetObjectSpaceType : System.Data.Metadata.Edm.StructuralType -&gt; System.Data.Metadata.Edm.StructuralType" Usage="metadataWorkspace.GetObjectSpaceType edmSpaceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.StructuralType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="edmSpaceType" Type="System.Data.Metadata.Edm.StructuralType" />
      </Parameters>
      <Docs>
        <param name="edmSpaceType"><span data-ttu-id="8ea07-173">Um objeto <see cref="T:System.Data.Metadata.Edm.StructuralType" /> que representa o <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span><span class="sxs-lookup"><span data-stu-id="8ea07-173">A <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span></span></param>
        <summary><span data-ttu-id="8ea07-174">Retorna um objeto <see cref="T:System.Data.Metadata.Edm.StructuralType" /> que representa o tipo de espaço de objeto que corresponde ao tipo fornecido pelo parâmetro <paramref name="edmSpaceType" />.</span><span class="sxs-lookup"><span data-stu-id="8ea07-174">Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the object space type that matches the type supplied by the parameter <paramref name="edmSpaceType" />.</span></span></summary>
        <returns><span data-ttu-id="8ea07-175">Um objeto <see cref="T:System.Data.Metadata.Edm.StructuralType" /> que representa o tipo de espaço de objeto.</span><span class="sxs-lookup"><span data-stu-id="8ea07-175">A <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the Object space type.</span></span> <span data-ttu-id="8ea07-176">Se não houver nenhum tipo correspondente, este método retornará nulo.</span><span class="sxs-lookup"><span data-stu-id="8ea07-176">If there is no matched type, this method returns null.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrimitiveTypes">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.PrimitiveType&gt; GetPrimitiveTypes (System.Data.Metadata.Edm.DataSpace dataSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Metadata.Edm.PrimitiveType&gt; GetPrimitiveTypes(valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetPrimitiveTypes(System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Metadata::Edm::PrimitiveType ^&gt; ^ GetPrimitiveTypes(System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberSignature Language="F#" Value="member this.GetPrimitiveTypes : System.Data.Metadata.Edm.DataSpace -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.PrimitiveType&gt;" Usage="metadataWorkspace.GetPrimitiveTypes dataSpace" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.PrimitiveType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <param name="dataSpace"><span data-ttu-id="8ea07-177">O modelo de dados para o qual você precisa a lista de tipos primitivos.</span><span class="sxs-lookup"><span data-stu-id="8ea07-177">The data model for which you need the list of primitive types.</span></span></param>
        <summary><span data-ttu-id="8ea07-178">Retorna a lista de tipos primitivos no modelo de dados especificado.</span><span class="sxs-lookup"><span data-stu-id="8ea07-178">Returns the list of primitive types in the specified data model.</span></span></summary>
        <returns><span data-ttu-id="8ea07-179">Uma coleção de tipo <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> que contém todos os tipos primitivos no modelo de dados especificado.</span><span class="sxs-lookup"><span data-stu-id="8ea07-179">A collection of type <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> that contains all the primitive types in the specified data model.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRelevantMembersForUpdate">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmMember&gt; GetRelevantMembersForUpdate (System.Data.Metadata.Edm.EntitySetBase entitySet, System.Data.Metadata.Edm.EntityTypeBase entityType, bool partialUpdateSupported);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Metadata.Edm.EdmMember&gt; GetRelevantMembersForUpdate(class System.Data.Metadata.Edm.EntitySetBase entitySet, class System.Data.Metadata.Edm.EntityTypeBase entityType, bool partialUpdateSupported) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetRelevantMembersForUpdate(System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.EntityTypeBase,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelevantMembersForUpdate (entitySet As EntitySetBase, entityType As EntityTypeBase, partialUpdateSupported As Boolean) As ReadOnlyCollection(Of EdmMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Metadata::Edm::EdmMember ^&gt; ^ GetRelevantMembersForUpdate(System::Data::Metadata::Edm::EntitySetBase ^ entitySet, System::Data::Metadata::Edm::EntityTypeBase ^ entityType, bool partialUpdateSupported);" />
      <MemberSignature Language="F#" Value="member this.GetRelevantMembersForUpdate : System.Data.Metadata.Edm.EntitySetBase * System.Data.Metadata.Edm.EntityTypeBase * bool -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmMember&gt;" Usage="metadataWorkspace.GetRelevantMembersForUpdate (entitySet, entityType, partialUpdateSupported)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySetBase" />
        <Parameter Name="entityType" Type="System.Data.Metadata.Edm.EntityTypeBase" />
        <Parameter Name="partialUpdateSupported" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="entitySet"><span data-ttu-id="8ea07-180">Um <see cref="T:System.Data.Metadata.Edm.EntitySet" /> pertencente ao C-Space.</span><span class="sxs-lookup"><span data-stu-id="8ea07-180">An <see cref="T:System.Data.Metadata.Edm.EntitySet" /> belonging to the C-Space.</span></span></param>
        <param name="entityType"><span data-ttu-id="8ea07-181">Um <see cref="T:System.Data.Metadata.Edm.EntityType" /> que participa do <see cref="T:System.Data.Metadata.Edm.EntitySet" /> determinado.</span><span class="sxs-lookup"><span data-stu-id="8ea07-181">An <see cref="T:System.Data.Metadata.Edm.EntityType" /> that participates in the given <see cref="T:System.Data.Metadata.Edm.EntitySet" />.</span></span></param>
        <param name="partialUpdateSupported"><span data-ttu-id="8ea07-182"><see langword="true" /> se as entidades puderem ser atualizadas parcialmente, caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8ea07-182"><see langword="true" /> if entities may be updated partially; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="8ea07-183">Retorna membros de um determinado <see cref="T:System.Data.Metadata.Edm.EntitySet" />/<see cref="T:System.Data.Metadata.Edm.EntityType" /> para o qual os valores originais são necessários ao modificar uma entidade.</span><span class="sxs-lookup"><span data-stu-id="8ea07-183">Returns members of a given <see cref="T:System.Data.Metadata.Edm.EntitySet" />/<see cref="T:System.Data.Metadata.Edm.EntityType" /> for which original values are needed when modifying an entity.</span></span></summary>
        <returns><span data-ttu-id="8ea07-184">Os <see cref="T:System.Data.Metadata.Edm.EdmMember" />s para os quais o valor original é necessário.</span><span class="sxs-lookup"><span data-stu-id="8ea07-184">The <see cref="T:System.Data.Metadata.Edm.EdmMember" />s for which original value is required.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRequiredOriginalValueMembers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Data.Metadata.Edm.EdmMember&gt; GetRequiredOriginalValueMembers (System.Data.Metadata.Edm.EntitySetBase entitySet, System.Data.Metadata.Edm.EntityTypeBase entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Metadata.Edm.EdmMember&gt; GetRequiredOriginalValueMembers(class System.Data.Metadata.Edm.EntitySetBase entitySet, class System.Data.Metadata.Edm.EntityTypeBase entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetRequiredOriginalValueMembers(System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.EntityTypeBase)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRequiredOriginalValueMembers (entitySet As EntitySetBase, entityType As EntityTypeBase) As IEnumerable(Of EdmMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Data::Metadata::Edm::EdmMember ^&gt; ^ GetRequiredOriginalValueMembers(System::Data::Metadata::Edm::EntitySetBase ^ entitySet, System::Data::Metadata::Edm::EntityTypeBase ^ entityType);" />
      <MemberSignature Language="F#" Value="member this.GetRequiredOriginalValueMembers : System.Data.Metadata.Edm.EntitySetBase * System.Data.Metadata.Edm.EntityTypeBase -&gt; seq&lt;System.Data.Metadata.Edm.EdmMember&gt;" Usage="metadataWorkspace.GetRequiredOriginalValueMembers (entitySet, entityType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Use MetadataWorkspace.GetRelevantMembersForUpdate(EntitySetBase, EntityTypeBase, bool) instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Data.Metadata.Edm.EdmMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySetBase" />
        <Parameter Name="entityType" Type="System.Data.Metadata.Edm.EntityTypeBase" />
      </Parameters>
      <Docs>
        <param name="entitySet"><span data-ttu-id="8ea07-185">O conjunto de entidades do qual recuperar os valores originais.</span><span class="sxs-lookup"><span data-stu-id="8ea07-185">The entity set from which to retrieve original values.</span></span></param>
        <param name="entityType"><span data-ttu-id="8ea07-186">O tipo de entidade do qual recuperar os valores originais.</span><span class="sxs-lookup"><span data-stu-id="8ea07-186">The entity type of which to retrieve original values.</span></span></param>
        <summary><span data-ttu-id="8ea07-187">Obtém os membros do valor original de um conjunto de entidades e tipo de entidade.</span><span class="sxs-lookup"><span data-stu-id="8ea07-187">Gets original value members from an entity set and entity type.</span></span></summary>
        <returns><span data-ttu-id="8ea07-188">Os membros do valor original de um conjunto de entidades e tipo de entidade.</span><span class="sxs-lookup"><span data-stu-id="8ea07-188">The original value members from an entity set and entity type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetType">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8ea07-189">Retorna os metadados do tipo que é descrito por meio de um objeto <see cref="T:System.Data.Metadata.Edm.EdmType" /> usando o nome do tipo, o nome do namespace e o modelo de dados especificados.</span><span class="sxs-lookup"><span data-stu-id="8ea07-189">Returns the type metadata that is described via an <see cref="T:System.Data.Metadata.Edm.EdmType" /> object by using the specified type name, the namespace name, and the data model.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EdmType GetType (string name, string namespaceName, System.Data.Metadata.Edm.DataSpace dataSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.EdmType GetType(string name, string namespaceName, valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetType(System.String,System.String,System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::EdmType ^ GetType(System::String ^ name, System::String ^ namespaceName, System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberSignature Language="F#" Value="override this.GetType : string * string * System.Data.Metadata.Edm.DataSpace -&gt; System.Data.Metadata.Edm.EdmType" Usage="metadataWorkspace.GetType (name, namespaceName, dataSpace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EdmType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="8ea07-190">O nome do tipo.</span><span class="sxs-lookup"><span data-stu-id="8ea07-190">The name of the type.</span></span></param>
        <param name="namespaceName"><span data-ttu-id="8ea07-191">O namespace do tipo.</span><span class="sxs-lookup"><span data-stu-id="8ea07-191">The namespace of the type.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="8ea07-192">O modelo conceitual em que o tipo é pesquisado.</span><span class="sxs-lookup"><span data-stu-id="8ea07-192">The conceptual model on which the type is searched.</span></span></param>
        <summary><span data-ttu-id="8ea07-193">Retorna um objeto <see cref="T:System.Data.Metadata.Edm.EdmType" /> usando o nome de tipo, o nome de namespace e o modelo de dados especificados.</span><span class="sxs-lookup"><span data-stu-id="8ea07-193">Returns an <see cref="T:System.Data.Metadata.Edm.EdmType" /> object by using the specified type name, namespace name, and data model.</span></span></summary>
        <returns><span data-ttu-id="8ea07-194">Um objeto <see cref="T:System.Data.Metadata.Edm.EdmType" /> que representa o tipo que corresponde ao nome de tipo e ao nome de namespace determinados no modelo de dados especificado.</span><span class="sxs-lookup"><span data-stu-id="8ea07-194">An <see cref="T:System.Data.Metadata.Edm.EdmType" /> object that represents the type that matches the given type name and the namespace name in the specified data model.</span></span> <span data-ttu-id="8ea07-195">Se não houver nenhum tipo correspondente, este método retornará nulo.</span><span class="sxs-lookup"><span data-stu-id="8ea07-195">If there is no matched type, this method returns null.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EdmType GetType (string name, string namespaceName, bool ignoreCase, System.Data.Metadata.Edm.DataSpace dataSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.EdmType GetType(string name, string namespaceName, bool ignoreCase, valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetType(System.String,System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::EdmType ^ GetType(System::String ^ name, System::String ^ namespaceName, bool ignoreCase, System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberSignature Language="F#" Value="override this.GetType : string * string * bool * System.Data.Metadata.Edm.DataSpace -&gt; System.Data.Metadata.Edm.EdmType" Usage="metadataWorkspace.GetType (name, namespaceName, ignoreCase, dataSpace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EdmType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="8ea07-196">O nome do tipo.</span><span class="sxs-lookup"><span data-stu-id="8ea07-196">The name of the type.</span></span></param>
        <param name="namespaceName"><span data-ttu-id="8ea07-197">O namespace do tipo.</span><span class="sxs-lookup"><span data-stu-id="8ea07-197">The namespace of the type.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="8ea07-198"><see langword="true" /> para realizar a pesquisa que não diferencia maiúsculas de minúsculas; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8ea07-198"><see langword="true" /> to perform the case-insensitive search; otherwise, <see langword="false" />.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="8ea07-199">O modelo conceitual em que o tipo é pesquisado.</span><span class="sxs-lookup"><span data-stu-id="8ea07-199">The conceptual model on which the type is searched.</span></span></param>
        <summary><span data-ttu-id="8ea07-200">Retorna um objeto <see cref="T:System.Data.Metadata.Edm.EdmType" /> usando o nome de tipo, o nome de namespace e o modelo de dados especificados.</span><span class="sxs-lookup"><span data-stu-id="8ea07-200">Returns an <see cref="T:System.Data.Metadata.Edm.EdmType" /> object by using the specified type name, namespace name, and data model.</span></span></summary>
        <returns><span data-ttu-id="8ea07-201">Um objeto <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span><span class="sxs-lookup"><span data-stu-id="8ea07-201">An <see cref="T:System.Data.Metadata.Edm.EdmType" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadFromAssembly">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8ea07-202">Carrega os metadados de um assembly.</span><span class="sxs-lookup"><span data-stu-id="8ea07-202">Loads metadata from an assembly.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadFromAssembly">
      <MemberSignature Language="C#" Value="public void LoadFromAssembly (System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadFromAssembly(class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.LoadFromAssembly(System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadFromAssembly(System::Reflection::Assembly ^ assembly);" />
      <MemberSignature Language="F#" Value="member this.LoadFromAssembly : System.Reflection.Assembly -&gt; unit" Usage="metadataWorkspace.LoadFromAssembly assembly" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="assembly"><span data-ttu-id="8ea07-203">O assembly do qual os metadados serão carregados.</span><span class="sxs-lookup"><span data-stu-id="8ea07-203">The assembly from which the metadata will be loaded.</span></span></param>
        <summary><span data-ttu-id="8ea07-204">Carrega os metadados do assembly determinado.</span><span class="sxs-lookup"><span data-stu-id="8ea07-204">Loads metadata from the given assembly.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadFromAssembly">
      <MemberSignature Language="C#" Value="public void LoadFromAssembly (System.Reflection.Assembly assembly, Action&lt;string&gt; logLoadMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadFromAssembly(class System.Reflection.Assembly assembly, class System.Action`1&lt;string&gt; logLoadMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.LoadFromAssembly(System.Reflection.Assembly,System.Action{System.String})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadFromAssembly(System::Reflection::Assembly ^ assembly, Action&lt;System::String ^&gt; ^ logLoadMessage);" />
      <MemberSignature Language="F#" Value="member this.LoadFromAssembly : System.Reflection.Assembly * Action&lt;string&gt; -&gt; unit" Usage="metadataWorkspace.LoadFromAssembly (assembly, logLoadMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
        <Parameter Name="logLoadMessage" Type="System.Action&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="assembly"><span data-ttu-id="8ea07-205">O assembly do qual os metadados serão carregados.</span><span class="sxs-lookup"><span data-stu-id="8ea07-205">The assembly from which the metadata will be loaded.</span></span></param>
        <param name="logLoadMessage"><span data-ttu-id="8ea07-206">O delegado para registrar em log as mensagens de carga.</span><span class="sxs-lookup"><span data-stu-id="8ea07-206">The delegate for logging the load messages.</span></span></param>
        <summary><span data-ttu-id="8ea07-207">Carrega os metadados do assembly determinado.</span><span class="sxs-lookup"><span data-stu-id="8ea07-207">Loads metadata from the given assembly.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumEdmVersionSupported">
      <MemberSignature Language="C#" Value="public static readonly double MaximumEdmVersionSupported;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly float64 MaximumEdmVersionSupported" />
      <MemberSignature Language="DocId" Value="F:System.Data.Metadata.Edm.MetadataWorkspace.MaximumEdmVersionSupported" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaximumEdmVersionSupported As Double " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly double MaximumEdmVersionSupported;" />
      <MemberSignature Language="F#" Value=" staticval mutable MaximumEdmVersionSupported : double" Usage="System.Data.Metadata.Edm.MetadataWorkspace.MaximumEdmVersionSupported" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8ea07-208">Representa a versão do EDM (Modelo de Dados de Entidade) com suporte pelo tempo de execução do Entity Framework.</span><span class="sxs-lookup"><span data-stu-id="8ea07-208">Represents the maximum Entity Data Model (EDM) version supported by the Entity Framework runtime.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterItemCollection">
      <MemberSignature Language="C#" Value="public void RegisterItemCollection (System.Data.Metadata.Edm.ItemCollection collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterItemCollection(class System.Data.Metadata.Edm.ItemCollection collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.RegisterItemCollection(System.Data.Metadata.Edm.ItemCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterItemCollection (collection As ItemCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterItemCollection(System::Data::Metadata::Edm::ItemCollection ^ collection);" />
      <MemberSignature Language="F#" Value="member this.RegisterItemCollection : System.Data.Metadata.Edm.ItemCollection -&gt; unit" Usage="metadataWorkspace.RegisterItemCollection collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Metadata.Edm.ItemCollection" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="8ea07-209">A coleção de parâmetros de saída que precisa ser preenchida.</span><span class="sxs-lookup"><span data-stu-id="8ea07-209">The output parameter collection that needs to be filled up.</span></span></param>
        <summary><span data-ttu-id="8ea07-210">Registra a coleção de itens com cada modelo de dados associado.</span><span class="sxs-lookup"><span data-stu-id="8ea07-210">Registers the item collection with each associated data model.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8ea07-211">O argumento de coleção é nulo.</span><span class="sxs-lookup"><span data-stu-id="8ea07-211">The collection argument is null.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8ea07-212">O modelo de dados especificado já registrou uma coleção de itens.</span><span class="sxs-lookup"><span data-stu-id="8ea07-212">The specified data model has already a registered an item collection.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryGetEdmSpaceType">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8ea07-213">Retorna um objeto <see cref="T:System.Data.Metadata.Edm.StructuralType" /> ou <see cref="T:System.Data.Metadata.Edm.EnumType" /> por meio do parâmetro de saída <paramref name="edmSpaceType" /> que representa o <see cref="T:System.Data.Metadata.Edm.EdmType" /> que corresponde ao tipo fornecido pelo parâmetro <paramref name="objectSpaceType" />.</span><span class="sxs-lookup"><span data-stu-id="8ea07-213">Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> or <see cref="T:System.Data.Metadata.Edm.EnumType" /> object via the out parameter <paramref name="edmSpaceType" /> that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" /> that matches the type supplied by the parameter <paramref name="objectSpaceType" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryGetEdmSpaceType">
      <MemberSignature Language="C#" Value="public bool TryGetEdmSpaceType (System.Data.Metadata.Edm.EnumType objectSpaceType, out System.Data.Metadata.Edm.EnumType edmSpaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetEdmSpaceType(class System.Data.Metadata.Edm.EnumType objectSpaceType, [out] class System.Data.Metadata.Edm.EnumType&amp; edmSpaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetEdmSpaceType(System.Data.Metadata.Edm.EnumType,System.Data.Metadata.Edm.EnumType@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetEdmSpaceType (objectSpaceType As EnumType, ByRef edmSpaceType As EnumType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetEdmSpaceType(System::Data::Metadata::Edm::EnumType ^ objectSpaceType, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::EnumType ^ % edmSpaceType);" />
      <MemberSignature Language="F#" Value="member this.TryGetEdmSpaceType : System.Data.Metadata.Edm.EnumType *  -&gt; bool" Usage="metadataWorkspace.TryGetEdmSpaceType (objectSpaceType, edmSpaceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectSpaceType" Type="System.Data.Metadata.Edm.EnumType" />
        <Parameter Name="edmSpaceType" Type="System.Data.Metadata.Edm.EnumType" RefType="out" />
      </Parameters>
      <Docs>
        <param name="objectSpaceType"><span data-ttu-id="8ea07-214">Um objeto <see cref="T:System.Data.Metadata.Edm.EnumType" /> que representa o tipo de espaço de objeto.</span><span class="sxs-lookup"><span data-stu-id="8ea07-214">A <see cref="T:System.Data.Metadata.Edm.EnumType" /> object that represents the object space type.</span></span></param>
        <param name="edmSpaceType"><span data-ttu-id="8ea07-215">Quando este método retorna, ele contém um objeto <see cref="T:System.Data.Metadata.Edm.EnumType" /> que representa o <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span><span class="sxs-lookup"><span data-stu-id="8ea07-215">When this method returns, contains a <see cref="T:System.Data.Metadata.Edm.EnumType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span></span> <span data-ttu-id="8ea07-216">Este parâmetro é passado não inicializado.</span><span class="sxs-lookup"><span data-stu-id="8ea07-216">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="8ea07-217">Retorna um objeto <see cref="T:System.Data.Metadata.Edm.EnumType" /> por meio do parâmetro de saída <paramref name="edmSpaceType" /> que representa o <see cref="T:System.Data.Metadata.Edm.EdmType" /> que corresponde ao tipo fornecido pelo parâmetro <paramref name="objectSpaceType" />.</span><span class="sxs-lookup"><span data-stu-id="8ea07-217">Returns a <see cref="T:System.Data.Metadata.Edm.EnumType" /> object via the out parameter <paramref name="edmSpaceType" /> that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" /> that matches the type supplied by the parameter <paramref name="objectSpaceType" />.</span></span></summary>
        <returns><span data-ttu-id="8ea07-218"><see langword="true" /> em caso de êxito, <see langword="false" /> em caso de falha.</span><span class="sxs-lookup"><span data-stu-id="8ea07-218"><see langword="true" /> on success, <see langword="false" /> on failure.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetEdmSpaceType">
      <MemberSignature Language="C#" Value="public bool TryGetEdmSpaceType (System.Data.Metadata.Edm.StructuralType objectSpaceType, out System.Data.Metadata.Edm.StructuralType edmSpaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetEdmSpaceType(class System.Data.Metadata.Edm.StructuralType objectSpaceType, [out] class System.Data.Metadata.Edm.StructuralType&amp; edmSpaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetEdmSpaceType(System.Data.Metadata.Edm.StructuralType,System.Data.Metadata.Edm.StructuralType@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetEdmSpaceType (objectSpaceType As StructuralType, ByRef edmSpaceType As StructuralType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetEdmSpaceType(System::Data::Metadata::Edm::StructuralType ^ objectSpaceType, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::StructuralType ^ % edmSpaceType);" />
      <MemberSignature Language="F#" Value="member this.TryGetEdmSpaceType : System.Data.Metadata.Edm.StructuralType *  -&gt; bool" Usage="metadataWorkspace.TryGetEdmSpaceType (objectSpaceType, edmSpaceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectSpaceType" Type="System.Data.Metadata.Edm.StructuralType" />
        <Parameter Name="edmSpaceType" Type="System.Data.Metadata.Edm.StructuralType" RefType="out" />
      </Parameters>
      <Docs>
        <param name="objectSpaceType"><span data-ttu-id="8ea07-219">Um objeto <see cref="T:System.Data.Metadata.Edm.StructuralType" /> que representa o tipo de espaço de objeto.</span><span class="sxs-lookup"><span data-stu-id="8ea07-219">A <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the object space type.</span></span></param>
        <param name="edmSpaceType"><span data-ttu-id="8ea07-220">Quando este método retorna, ele contém um objeto <see cref="T:System.Data.Metadata.Edm.StructuralType" /> que representa o <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span><span class="sxs-lookup"><span data-stu-id="8ea07-220">When this method returns, contains a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span></span> <span data-ttu-id="8ea07-221">Este parâmetro é passado não inicializado.</span><span class="sxs-lookup"><span data-stu-id="8ea07-221">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="8ea07-222">Retorna um objeto <see cref="T:System.Data.Metadata.Edm.StructuralType" /> por meio do parâmetro de saída <paramref name="edmSpaceType" /> que representa o <see cref="T:System.Data.Metadata.Edm.EdmType" /> que corresponde ao tipo fornecido pelo parâmetro <paramref name="objectSpaceType" />.</span><span class="sxs-lookup"><span data-stu-id="8ea07-222">Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object via the out parameter <paramref name="edmSpaceType" /> that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" /> that matches the type supplied by the parameter <paramref name="objectSpaceType" />.</span></span></summary>
        <returns><span data-ttu-id="8ea07-223"><see langword="true" /> se houver um tipo que corresponde aos critérios de pesquisa; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8ea07-223"><see langword="true" /> if there is a type that matches the search criteria; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryGetEntityContainer">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8ea07-224">Retorna um objeto <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> usando o nome do contêiner de entidade especificado e o modelo de dados.</span><span class="sxs-lookup"><span data-stu-id="8ea07-224">Returns an <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> object by using the specified entity container name and the data model.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryGetEntityContainer">
      <MemberSignature Language="C#" Value="public bool TryGetEntityContainer (string name, System.Data.Metadata.Edm.DataSpace dataSpace, out System.Data.Metadata.Edm.EntityContainer entityContainer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetEntityContainer(string name, valuetype System.Data.Metadata.Edm.DataSpace dataSpace, [out] class System.Data.Metadata.Edm.EntityContainer&amp; entityContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetEntityContainer(System.String,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.EntityContainer@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetEntityContainer(System::String ^ name, System::Data::Metadata::Edm::DataSpace dataSpace, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::EntityContainer ^ % entityContainer);" />
      <MemberSignature Language="F#" Value="member this.TryGetEntityContainer : string * System.Data.Metadata.Edm.DataSpace *  -&gt; bool" Usage="metadataWorkspace.TryGetEntityContainer (name, dataSpace, entityContainer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
        <Parameter Name="entityContainer" Type="System.Data.Metadata.Edm.EntityContainer" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="8ea07-225">O nome do contêiner de entidade.</span><span class="sxs-lookup"><span data-stu-id="8ea07-225">The name of the entity container.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="8ea07-226">O modelo conceitual no qual o contêiner de entidade é pesquisado.</span><span class="sxs-lookup"><span data-stu-id="8ea07-226">The conceptual model on which the entity container is searched.</span></span></param>
        <param name="entityContainer"><span data-ttu-id="8ea07-227">Quando este método retorna, ele contém um objeto <see cref="T:System.Data.Metadata.Edm.EntityContainer" />.</span><span class="sxs-lookup"><span data-stu-id="8ea07-227">When this method returns, contains an <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> object.</span></span> <span data-ttu-id="8ea07-228">Se não houver nenhum contêiner de entidade, esse parâmetro de saída conterá nulo, caso contrário, retornará o primeiro contêiner de entidade.</span><span class="sxs-lookup"><span data-stu-id="8ea07-228">If there is no entity container, this output parameter contains null; otherwise, it returns the first entity container.</span></span> <span data-ttu-id="8ea07-229">Este parâmetro é passado não inicializado.</span><span class="sxs-lookup"><span data-stu-id="8ea07-229">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="8ea07-230">Retorna um objeto <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> usando o nome do contêiner de entidade especificado e o modelo de dados.</span><span class="sxs-lookup"><span data-stu-id="8ea07-230">Returns an <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> object by using the specified entity container name and the data model.</span></span></summary>
        <returns><span data-ttu-id="8ea07-231"><see langword="true" /> se houver um contêiner de entidade que corresponde aos critérios de pesquisa; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8ea07-231"><see langword="true" /> if there is an entity container that matches the search criteria; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetEntityContainer">
      <MemberSignature Language="C#" Value="public bool TryGetEntityContainer (string name, bool ignoreCase, System.Data.Metadata.Edm.DataSpace dataSpace, out System.Data.Metadata.Edm.EntityContainer entityContainer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetEntityContainer(string name, bool ignoreCase, valuetype System.Data.Metadata.Edm.DataSpace dataSpace, [out] class System.Data.Metadata.Edm.EntityContainer&amp; entityContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetEntityContainer(System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.EntityContainer@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetEntityContainer(System::String ^ name, bool ignoreCase, System::Data::Metadata::Edm::DataSpace dataSpace, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::EntityContainer ^ % entityContainer);" />
      <MemberSignature Language="F#" Value="member this.TryGetEntityContainer : string * bool * System.Data.Metadata.Edm.DataSpace *  -&gt; bool" Usage="metadataWorkspace.TryGetEntityContainer (name, ignoreCase, dataSpace, entityContainer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
        <Parameter Name="entityContainer" Type="System.Data.Metadata.Edm.EntityContainer" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="8ea07-232">O nome do contêiner de entidade.</span><span class="sxs-lookup"><span data-stu-id="8ea07-232">The name of the entity container.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="8ea07-233"><see langword="true" /> para realizar a pesquisa que não diferencia maiúsculas de minúsculas; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8ea07-233"><see langword="true" /> to perform the case-insensitive search; otherwise, <see langword="false" />.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="8ea07-234">O modelo conceitual no qual o contêiner de entidade é pesquisado.</span><span class="sxs-lookup"><span data-stu-id="8ea07-234">The conceptual model on which the entity container is searched.</span></span></param>
        <param name="entityContainer"><span data-ttu-id="8ea07-235">Quando este método retorna, ele contém um objeto <see cref="T:System.Data.Metadata.Edm.EntityContainer" />.</span><span class="sxs-lookup"><span data-stu-id="8ea07-235">When this method returns, contains an <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> object.</span></span> <span data-ttu-id="8ea07-236">Se não houver nenhum contêiner de entidade, esse parâmetro de saída conterá nulo, caso contrário, retornará o primeiro contêiner de entidade.</span><span class="sxs-lookup"><span data-stu-id="8ea07-236">If there is no entity container, this output parameter contains null; otherwise, it returns the first entity container.</span></span> <span data-ttu-id="8ea07-237">Este parâmetro é passado não inicializado.</span><span class="sxs-lookup"><span data-stu-id="8ea07-237">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="8ea07-238">Retorna um objeto <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> usando o nome do contêiner de entidade especificado e o modelo de dados.</span><span class="sxs-lookup"><span data-stu-id="8ea07-238">Returns an <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> object by using the specified entity container name and the data model.</span></span></summary>
        <returns><span data-ttu-id="8ea07-239"><see langword="true" /> se houver um contêiner de entidade que corresponde aos critérios de pesquisa; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8ea07-239"><see langword="true" /> if there is an entity container that matches the search criteria; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryGetItem&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8ea07-240">Retorna um item usando a identidade especificada e o modelo de dados.</span><span class="sxs-lookup"><span data-stu-id="8ea07-240">Returns an item by using the specified identity and the data model.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryGetItem&lt;T&gt;">
      <MemberSignature Language="C#" Value="public bool TryGetItem&lt;T&gt; (string identity, System.Data.Metadata.Edm.DataSpace space, out T item) where T : System.Data.Metadata.Edm.GlobalItem;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetItem&lt;(class System.Data.Metadata.Edm.GlobalItem) T&gt;(string identity, valuetype System.Data.Metadata.Edm.DataSpace space, [out] !!T&amp; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetItem``1(System.String,System.Data.Metadata.Edm.DataSpace,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetItem(Of T As GlobalItem) (identity As String, space As DataSpace, ByRef item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::Metadata::Edm::GlobalItem bool TryGetItem(System::String ^ identity, System::Data::Metadata::Edm::DataSpace space, [Runtime::InteropServices::Out] T % item);" />
      <MemberSignature Language="F#" Value="member this.TryGetItem : string * System.Data.Metadata.Edm.DataSpace *  -&gt; bool (requires 'T :&gt; System.Data.Metadata.Edm.GlobalItem)" Usage="metadataWorkspace.TryGetItem (identity, space, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.Metadata.Edm.GlobalItem</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="space" Type="System.Data.Metadata.Edm.DataSpace" />
        <Parameter Name="item" Type="T" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="8ea07-241">O tipo retornado pelo método.</span><span class="sxs-lookup"><span data-stu-id="8ea07-241">The type returned by the method.</span></span></typeparam>
        <param name="identity"><span data-ttu-id="8ea07-242">O modelo conceitual em que o item é pesquisado.</span><span class="sxs-lookup"><span data-stu-id="8ea07-242">The conceptual model on which the item is searched.</span></span></param>
        <param name="space"><span data-ttu-id="8ea07-243">O modelo conceitual em que o item é pesquisado.</span><span class="sxs-lookup"><span data-stu-id="8ea07-243">The conceptual model on which the item is searched.</span></span></param>
        <param name="item"><span data-ttu-id="8ea07-244">Quando este método retorna, ele contém um objeto <see cref="T:System.Data.Metadata.Edm.GlobalItem" />.</span><span class="sxs-lookup"><span data-stu-id="8ea07-244">When this method returns, contains a <see cref="T:System.Data.Metadata.Edm.GlobalItem" /> object.</span></span> <span data-ttu-id="8ea07-245">Este parâmetro é passado não inicializado.</span><span class="sxs-lookup"><span data-stu-id="8ea07-245">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="8ea07-246">Retorna um item usando a identidade especificada e o modelo de dados.</span><span class="sxs-lookup"><span data-stu-id="8ea07-246">Returns an item by using the specified identity and the data model.</span></span></summary>
        <returns><span data-ttu-id="8ea07-247"><see langword="true" /> se houver um item que corresponde aos critérios de pesquisa; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8ea07-247"><see langword="true" /> if there is an item that matches the search criteria; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetItem&lt;T&gt;">
      <MemberSignature Language="C#" Value="public bool TryGetItem&lt;T&gt; (string identity, bool ignoreCase, System.Data.Metadata.Edm.DataSpace dataSpace, out T item) where T : System.Data.Metadata.Edm.GlobalItem;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetItem&lt;(class System.Data.Metadata.Edm.GlobalItem) T&gt;(string identity, bool ignoreCase, valuetype System.Data.Metadata.Edm.DataSpace dataSpace, [out] !!T&amp; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetItem``1(System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace,``0@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::Metadata::Edm::GlobalItem bool TryGetItem(System::String ^ identity, bool ignoreCase, System::Data::Metadata::Edm::DataSpace dataSpace, [Runtime::InteropServices::Out] T % item);" />
      <MemberSignature Language="F#" Value="member this.TryGetItem : string * bool * System.Data.Metadata.Edm.DataSpace *  -&gt; bool (requires 'T :&gt; System.Data.Metadata.Edm.GlobalItem)" Usage="metadataWorkspace.TryGetItem (identity, ignoreCase, dataSpace, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.Metadata.Edm.GlobalItem</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
        <Parameter Name="item" Type="T" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="8ea07-248">O tipo retornado pelo método.</span><span class="sxs-lookup"><span data-stu-id="8ea07-248">The type returned by the method.</span></span></typeparam>
        <param name="identity"><span data-ttu-id="8ea07-249">O modelo conceitual em que o item é pesquisado.</span><span class="sxs-lookup"><span data-stu-id="8ea07-249">The conceptual model on which the item is searched.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="8ea07-250"><see langword="true" /> para realizar a pesquisa que não diferencia maiúsculas de minúsculas; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8ea07-250"><see langword="true" /> to perform the case-insensitive search; otherwise, <see langword="false" />.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="8ea07-251">O modelo conceitual em que o item é pesquisado.</span><span class="sxs-lookup"><span data-stu-id="8ea07-251">The conceptual model on which the item is searched.</span></span></param>
        <param name="item"><span data-ttu-id="8ea07-252">Quando este método retorna, ele contém um objeto <see cref="T:System.Data.Metadata.Edm.GlobalItem" />.</span><span class="sxs-lookup"><span data-stu-id="8ea07-252">When this method returns, contains a <see cref="T:System.Data.Metadata.Edm.GlobalItem" /> object.</span></span> <span data-ttu-id="8ea07-253">Este parâmetro é passado não inicializado.</span><span class="sxs-lookup"><span data-stu-id="8ea07-253">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="8ea07-254">Retorna um item usando a identidade especificada e o modelo de dados.</span><span class="sxs-lookup"><span data-stu-id="8ea07-254">Returns an item by using the specified identity and the data model.</span></span></summary>
        <returns><span data-ttu-id="8ea07-255"><see langword="true" /> se houver um item que corresponde aos critérios de pesquisa; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8ea07-255"><see langword="true" /> if there is an item that matches the search criteria; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetItemCollection">
      <MemberSignature Language="C#" Value="public bool TryGetItemCollection (System.Data.Metadata.Edm.DataSpace dataSpace, out System.Data.Metadata.Edm.ItemCollection collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetItemCollection(valuetype System.Data.Metadata.Edm.DataSpace dataSpace, [out] class System.Data.Metadata.Edm.ItemCollection&amp; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetItemCollection(System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.ItemCollection@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetItemCollection(System::Data::Metadata::Edm::DataSpace dataSpace, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::ItemCollection ^ % collection);" />
      <MemberSignature Language="F#" Value="member this.TryGetItemCollection : System.Data.Metadata.Edm.DataSpace *  -&gt; bool" Usage="metadataWorkspace.TryGetItemCollection (dataSpace, collection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
        <Parameter Name="collection" Type="System.Data.Metadata.Edm.ItemCollection" RefType="out" />
      </Parameters>
      <Docs>
        <param name="dataSpace"><span data-ttu-id="8ea07-256">O <see cref="T:System.Data.Metadata.Edm.DataSpace" /> do qual tentar a recuperação de <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" />.</span><span class="sxs-lookup"><span data-stu-id="8ea07-256">The <see cref="T:System.Data.Metadata.Edm.DataSpace" /> from which to attempt retrieval of <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" />.</span></span></param>
        <param name="collection"><span data-ttu-id="8ea07-257">Quando este método retorna, ele contém a coleção de itens.</span><span class="sxs-lookup"><span data-stu-id="8ea07-257">When this method returns, contains the item collection.</span></span> <span data-ttu-id="8ea07-258">Este parâmetro é passado não inicializado.</span><span class="sxs-lookup"><span data-stu-id="8ea07-258">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="8ea07-259">Testa a recuperação de <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" />.</span><span class="sxs-lookup"><span data-stu-id="8ea07-259">Tests the retrieval of <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" />.</span></span></summary>
        <returns><span data-ttu-id="8ea07-260"><see langword="true" /> se a recuperação for bem-sucedida, caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8ea07-260"><see langword="true" /> if the retrieval was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryGetObjectSpaceType">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8ea07-261">Retorna um objeto <see cref="T:System.Data.Metadata.Edm.StructuralType" /> ou <see cref="T:System.Data.Metadata.Edm.EnumType" /> por meio do parâmetro de saída <paramref name="objectSpaceType" /> que representa o tipo que corresponde ao <see cref="T:System.Data.Metadata.Edm.EdmType" /> fornecido pelo parâmetro <paramref name="edmSpaceType" />.</span><span class="sxs-lookup"><span data-stu-id="8ea07-261">Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> or <see cref="T:System.Data.Metadata.Edm.EnumType" /> object via the out parameter <paramref name="objectSpaceType" /> that represents the type that matches the <see cref="T:System.Data.Metadata.Edm.EdmType" /> supplied by the parameter <paramref name="edmSpaceType" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryGetObjectSpaceType">
      <MemberSignature Language="C#" Value="public bool TryGetObjectSpaceType (System.Data.Metadata.Edm.EnumType edmSpaceType, out System.Data.Metadata.Edm.EnumType objectSpaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetObjectSpaceType(class System.Data.Metadata.Edm.EnumType edmSpaceType, [out] class System.Data.Metadata.Edm.EnumType&amp; objectSpaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetObjectSpaceType(System.Data.Metadata.Edm.EnumType,System.Data.Metadata.Edm.EnumType@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetObjectSpaceType (edmSpaceType As EnumType, ByRef objectSpaceType As EnumType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetObjectSpaceType(System::Data::Metadata::Edm::EnumType ^ edmSpaceType, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::EnumType ^ % objectSpaceType);" />
      <MemberSignature Language="F#" Value="member this.TryGetObjectSpaceType : System.Data.Metadata.Edm.EnumType *  -&gt; bool" Usage="metadataWorkspace.TryGetObjectSpaceType (edmSpaceType, objectSpaceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="edmSpaceType" Type="System.Data.Metadata.Edm.EnumType" />
        <Parameter Name="objectSpaceType" Type="System.Data.Metadata.Edm.EnumType" RefType="out" />
      </Parameters>
      <Docs>
        <param name="edmSpaceType"><span data-ttu-id="8ea07-262">Um objeto <see cref="T:System.Data.Metadata.Edm.EnumType" /> que representa o <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span><span class="sxs-lookup"><span data-stu-id="8ea07-262">A <see cref="T:System.Data.Metadata.Edm.EnumType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span></span></param>
        <param name="objectSpaceType"><span data-ttu-id="8ea07-263">Quando este método retorna, ele contém um objeto <see cref="T:System.Data.Metadata.Edm.EnumType" /> que representa o tipo de espaço de objeto.</span><span class="sxs-lookup"><span data-stu-id="8ea07-263">When this method returns, contains a <see cref="T:System.Data.Metadata.Edm.EnumType" /> object that represents the Object space type.</span></span> <span data-ttu-id="8ea07-264">Este parâmetro é passado não inicializado.</span><span class="sxs-lookup"><span data-stu-id="8ea07-264">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="8ea07-265">Retorna um objeto <see cref="T:System.Data.Metadata.Edm.EnumType" /> por meio do parâmetro de saída <paramref name="objectSpaceType" /> que representa o tipo que corresponde ao <see cref="T:System.Data.Metadata.Edm.EdmType" /> fornecido pelo parâmetro <paramref name="edmSpaceType" />.</span><span class="sxs-lookup"><span data-stu-id="8ea07-265">Returns a <see cref="T:System.Data.Metadata.Edm.EnumType" /> object via the out parameter <paramref name="objectSpaceType" /> that represents the type that matches the <see cref="T:System.Data.Metadata.Edm.EdmType" /> supplied by the parameter <paramref name="edmSpaceType" />.</span></span></summary>
        <returns><span data-ttu-id="8ea07-266"><see langword="true" /> se houver um tipo que corresponde aos critérios de pesquisa; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8ea07-266"><see langword="true" /> if there is a type that matches the search criteria; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetObjectSpaceType">
      <MemberSignature Language="C#" Value="public bool TryGetObjectSpaceType (System.Data.Metadata.Edm.StructuralType edmSpaceType, out System.Data.Metadata.Edm.StructuralType objectSpaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetObjectSpaceType(class System.Data.Metadata.Edm.StructuralType edmSpaceType, [out] class System.Data.Metadata.Edm.StructuralType&amp; objectSpaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetObjectSpaceType(System.Data.Metadata.Edm.StructuralType,System.Data.Metadata.Edm.StructuralType@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetObjectSpaceType (edmSpaceType As StructuralType, ByRef objectSpaceType As StructuralType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetObjectSpaceType(System::Data::Metadata::Edm::StructuralType ^ edmSpaceType, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::StructuralType ^ % objectSpaceType);" />
      <MemberSignature Language="F#" Value="member this.TryGetObjectSpaceType : System.Data.Metadata.Edm.StructuralType *  -&gt; bool" Usage="metadataWorkspace.TryGetObjectSpaceType (edmSpaceType, objectSpaceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="edmSpaceType" Type="System.Data.Metadata.Edm.StructuralType" />
        <Parameter Name="objectSpaceType" Type="System.Data.Metadata.Edm.StructuralType" RefType="out" />
      </Parameters>
      <Docs>
        <param name="edmSpaceType"><span data-ttu-id="8ea07-267">Um objeto <see cref="T:System.Data.Metadata.Edm.StructuralType" /> que representa o <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span><span class="sxs-lookup"><span data-stu-id="8ea07-267">A <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span></span></param>
        <param name="objectSpaceType"><span data-ttu-id="8ea07-268">Quando este método retorna, ele contém um objeto <see cref="T:System.Data.Metadata.Edm.StructuralType" /> que representa o tipo de espaço de objeto.</span><span class="sxs-lookup"><span data-stu-id="8ea07-268">When this method returns, contains a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the Object space type.</span></span> <span data-ttu-id="8ea07-269">Este parâmetro é passado não inicializado.</span><span class="sxs-lookup"><span data-stu-id="8ea07-269">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="8ea07-270">Retorna um objeto <see cref="T:System.Data.Metadata.Edm.StructuralType" /> por meio do parâmetro de saída <paramref name="objectSpaceType" /> que representa o tipo que corresponde ao <see cref="T:System.Data.Metadata.Edm.EdmType" /> fornecido pelo parâmetro <paramref name="edmSpaceType" />.</span><span class="sxs-lookup"><span data-stu-id="8ea07-270">Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object via the out parameter <paramref name="objectSpaceType" /> that represents the type that matches the <see cref="T:System.Data.Metadata.Edm.EdmType" /> supplied by the parameter <paramref name="edmSpaceType" />.</span></span></summary>
        <returns><span data-ttu-id="8ea07-271"><see langword="true" /> se houver um tipo que corresponde aos critérios de pesquisa; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8ea07-271"><see langword="true" /> if there is a type that matches the search criteria; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryGetType">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8ea07-272">Retorna um objeto <see cref="T:System.Data.Metadata.Edm.EdmType" /> usando o nome de tipo, o nome de namespace e o modelo de dados especificados.</span><span class="sxs-lookup"><span data-stu-id="8ea07-272">Returns an <see cref="T:System.Data.Metadata.Edm.EdmType" /> object by using the specified type name, namespace name, and data model.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryGetType">
      <MemberSignature Language="C#" Value="public bool TryGetType (string name, string namespaceName, System.Data.Metadata.Edm.DataSpace dataSpace, out System.Data.Metadata.Edm.EdmType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetType(string name, string namespaceName, valuetype System.Data.Metadata.Edm.DataSpace dataSpace, [out] class System.Data.Metadata.Edm.EdmType&amp; type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetType(System.String,System.String,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.EdmType@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetType(System::String ^ name, System::String ^ namespaceName, System::Data::Metadata::Edm::DataSpace dataSpace, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::EdmType ^ % type);" />
      <MemberSignature Language="F#" Value="member this.TryGetType : string * string * System.Data.Metadata.Edm.DataSpace *  -&gt; bool" Usage="metadataWorkspace.TryGetType (name, namespaceName, dataSpace, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
        <Parameter Name="type" Type="System.Data.Metadata.Edm.EdmType" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="8ea07-273">O nome do tipo.</span><span class="sxs-lookup"><span data-stu-id="8ea07-273">The name of the type.</span></span></param>
        <param name="namespaceName"><span data-ttu-id="8ea07-274">O namespace do tipo.</span><span class="sxs-lookup"><span data-stu-id="8ea07-274">The namespace of the type.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="8ea07-275">O modelo conceitual em que o tipo é pesquisado.</span><span class="sxs-lookup"><span data-stu-id="8ea07-275">The conceptual model on which the type is searched.</span></span></param>
        <param name="type"><span data-ttu-id="8ea07-276">Quando este método retorna, ele contém um objeto <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span><span class="sxs-lookup"><span data-stu-id="8ea07-276">When this method returns, contains an <see cref="T:System.Data.Metadata.Edm.EdmType" /> object.</span></span> <span data-ttu-id="8ea07-277">Este parâmetro é passado não inicializado.</span><span class="sxs-lookup"><span data-stu-id="8ea07-277">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="8ea07-278">Retorna um objeto <see cref="T:System.Data.Metadata.Edm.EdmType" /> usando o nome de tipo, o nome de namespace e o modelo de dados especificados.</span><span class="sxs-lookup"><span data-stu-id="8ea07-278">Returns an <see cref="T:System.Data.Metadata.Edm.EdmType" /> object by using the specified type name, namespace name, and data model.</span></span></summary>
        <returns><span data-ttu-id="8ea07-279"><see langword="true" /> se houver um tipo que corresponde aos critérios de pesquisa; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8ea07-279"><see langword="true" /> if there is a type that matches the search criteria; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetType">
      <MemberSignature Language="C#" Value="public bool TryGetType (string name, string namespaceName, bool ignoreCase, System.Data.Metadata.Edm.DataSpace dataSpace, out System.Data.Metadata.Edm.EdmType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetType(string name, string namespaceName, bool ignoreCase, valuetype System.Data.Metadata.Edm.DataSpace dataSpace, [out] class System.Data.Metadata.Edm.EdmType&amp; type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetType(System.String,System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.EdmType@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetType(System::String ^ name, System::String ^ namespaceName, bool ignoreCase, System::Data::Metadata::Edm::DataSpace dataSpace, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::EdmType ^ % type);" />
      <MemberSignature Language="F#" Value="member this.TryGetType : string * string * bool * System.Data.Metadata.Edm.DataSpace *  -&gt; bool" Usage="metadataWorkspace.TryGetType (name, namespaceName, ignoreCase, dataSpace, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
        <Parameter Name="type" Type="System.Data.Metadata.Edm.EdmType" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="8ea07-280">O nome do tipo.</span><span class="sxs-lookup"><span data-stu-id="8ea07-280">The name of the type.</span></span></param>
        <param name="namespaceName"><span data-ttu-id="8ea07-281">O namespace do tipo.</span><span class="sxs-lookup"><span data-stu-id="8ea07-281">The namespace of the type.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="8ea07-282"><see langword="true" /> para realizar a pesquisa que não diferencia maiúsculas de minúsculas; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8ea07-282"><see langword="true" /> to perform the case-insensitive search; otherwise, <see langword="false" />.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="8ea07-283">O modelo conceitual em que o tipo é pesquisado.</span><span class="sxs-lookup"><span data-stu-id="8ea07-283">The conceptual model on which the type is searched.</span></span></param>
        <param name="type"><span data-ttu-id="8ea07-284">Quando este método retorna, ele contém um objeto <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span><span class="sxs-lookup"><span data-stu-id="8ea07-284">When this method returns, contains an <see cref="T:System.Data.Metadata.Edm.EdmType" /> object.</span></span> <span data-ttu-id="8ea07-285">Este parâmetro é passado não inicializado.</span><span class="sxs-lookup"><span data-stu-id="8ea07-285">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="8ea07-286">Retorna um objeto <see cref="T:System.Data.Metadata.Edm.EdmType" /> usando o nome de tipo, o nome de namespace e o modelo de dados especificados.</span><span class="sxs-lookup"><span data-stu-id="8ea07-286">Returns an <see cref="T:System.Data.Metadata.Edm.EdmType" /> object by using the specified type name, namespace name, and data model.</span></span></summary>
        <returns><span data-ttu-id="8ea07-287"><see langword="true" /> se houver um tipo que corresponde aos critérios de pesquisa; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8ea07-287"><see langword="true" /> if there is a type that matches the search criteria; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>