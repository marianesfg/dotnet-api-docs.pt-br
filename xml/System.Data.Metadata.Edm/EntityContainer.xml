<Type Name="EntityContainer" FullName="System.Data.Metadata.Edm.EntityContainer">
  <TypeSignature Language="C#" Value="public sealed class EntityContainer : System.Data.Metadata.Edm.GlobalItem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EntityContainer extends System.Data.Metadata.Edm.GlobalItem" />
  <TypeSignature Language="DocId" Value="T:System.Data.Metadata.Edm.EntityContainer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EntityContainer&#xA;Inherits GlobalItem" />
  <TypeSignature Language="C++ CLI" Value="public ref class EntityContainer sealed : System::Data::Metadata::Edm::GlobalItem" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Metadata.Edm.GlobalItem</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a8417-101">Representa um contêiner de entidade em um modelo conceitual.</span><span class="sxs-lookup"><span data-stu-id="a8417-101">Represents an entity container in a conceptual model.</span></span> <span data-ttu-id="a8417-102">Um <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> é um agrupamento lógico de conjuntos de entidades e de associações.</span><span class="sxs-lookup"><span data-stu-id="a8417-102">An <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> is a logical grouping of entity sets and association sets.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8417-103">No nível conceitual, o <xref:System.Data.Metadata.Edm.EntityContainer> classe representa um contêiner que será mapeado para um objeto de banco de dados no esquema de metadados de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="a8417-103">On the conceptual level, the <xref:System.Data.Metadata.Edm.EntityContainer> class represents a container that will be mapped to a database object in the storage metadata schema.</span></span> <span data-ttu-id="a8417-104">No nível de armazenamento, a <xref:System.Data.Metadata.Edm.EntityContainer> classe representa uma descrição das relações de tabela e/ou a chave que persistir dados para aplicativos baseados no modelo.</span><span class="sxs-lookup"><span data-stu-id="a8417-104">In the storage level, the <xref:System.Data.Metadata.Edm.EntityContainer> class represents a description of the table and/or key relationships that persist data for applications built on the model.</span></span> <span data-ttu-id="a8417-105">Para obter mais informações sobre os contêineres de entidade em um modelo conceitual, consulte [contêineres de entidade (EDM)](http://msdn.microsoft.com/library/9afa762f-59b8-4a70-b76d-89d90760144c).</span><span class="sxs-lookup"><span data-stu-id="a8417-105">For more information about the entity containers in a conceptual model, see [Entity Containers (EDM)](http://msdn.microsoft.com/library/9afa762f-59b8-4a70-b76d-89d90760144c).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8417-106">O exemplo de código a seguir demonstra como obter um espaço de trabalho de metadados da conexão e, em seguida, usar esse espaço de trabalho de metadados para recuperar informações sobre os contêineres de entidade no modelo de dados especificado.</span><span class="sxs-lookup"><span data-stu-id="a8417-106">The following code sample demonstrates how to get a metadata workspace from the connection and then use that metadata workspace to retrieve information about the entity containers in the specified data model.</span></span> <span data-ttu-id="a8417-107">Observe que o espaço de trabalho de metadados é um componente de serviço de tempo de execução que oferece suporte para recuperação de metadados.</span><span class="sxs-lookup"><span data-stu-id="a8417-107">Note that the metadata workspace is a runtime service component that provides support for retrieving metadata.</span></span>  
  
 <span data-ttu-id="a8417-108">O exemplo de código usa um <xref:System.Data.Metadata.Edm.DataSpace.CSpace> e um <xref:System.Data.Metadata.Edm.DataSpace.SSpace> para especificar o modelo.</span><span class="sxs-lookup"><span data-stu-id="a8417-108">The code sample uses a <xref:System.Data.Metadata.Edm.DataSpace.CSpace> and a <xref:System.Data.Metadata.Edm.DataSpace.SSpace> to specify the model.</span></span> <span data-ttu-id="a8417-109">O <xref:System.Data.Metadata.Edm.DataSpace.CSpace> representa o nome padrão para o modelo conceitual.</span><span class="sxs-lookup"><span data-stu-id="a8417-109">The <xref:System.Data.Metadata.Edm.DataSpace.CSpace> represents the default name for the conceptual model.</span></span> <span data-ttu-id="a8417-110">O <xref:System.Data.Metadata.Edm.DataSpace.SSpace> representa o nome padrão para o modelo de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="a8417-110">The <xref:System.Data.Metadata.Edm.DataSpace.SSpace> represents the default name for the storage model.</span></span>  
  
 <span data-ttu-id="a8417-111">O `GetEntityContainers` método obtém uma coleção de contêineres de entidade e, em seguida, itera através da coleção para obter cada conjunto de entidades e associação definida no contêiner especificado.</span><span class="sxs-lookup"><span data-stu-id="a8417-111">The `GetEntityContainers` method gets a collection of entity containers and then iterates through the collection to get each entity set and association set in the specified container.</span></span> <span data-ttu-id="a8417-112">O exemplo de código usa o modelo AdventureWorks que é fornecido no [Adventure Works EDM (modelo)](http://msdn.microsoft.com/library/da87d29e-8c89-4310-bbac-5cbd062930a7)tópico.</span><span class="sxs-lookup"><span data-stu-id="a8417-112">The code sample uses the AdventureWorks Model that is provided in the [Adventure Works Model (EDM)](http://msdn.microsoft.com/library/da87d29e-8c89-4310-bbac-5cbd062930a7)topic.</span></span> <span data-ttu-id="a8417-113">Para obter um exemplo do arquivo de configuração do aplicativo, consulte [modelo de objeto do Adventure Works em aplicativos (EDM)](http://msdn.microsoft.com/library/84c01270-90ba-467b-ad24-df10c1ca8f45).</span><span class="sxs-lookup"><span data-stu-id="a8417-113">For an example of the application config file, see [Adventure Works Object Model in Applications (EDM)](http://msdn.microsoft.com/library/84c01270-90ba-467b-ad24-df10c1ca8f45).</span></span>  
  
```csharp  
using System;  
using System.Data;  
using System.Data.EntityClient;  
using System.Data.Metadata.Edm;  
using System.Collections.ObjectModel;  
  
class GetEntityContainerExample  
{  
  static void Main()  
  {  
    try  
    {  
       // Establish a connection to the underlying data provider by   
       // using the connection string specified in the config file.  
       using (EntityConnection connection =  
          new EntityConnection("Name=AdventureWorksEntities"))  
       {  
         // Open the connection.  
         connection.Open();  
  
         // Access the metadata workspace.  
         MetadataWorkspace workspace =   
            connection.GetMetadataWorkspace();  
  
         // Get the entity containers in the conceptual model.  
         GetEntityContainers(workspace, DataSpace.CSpace);  
  
         // Get the entity containers in the storage model.  
             GetEntityContainers(workspace, DataSpace.SSpace);  
       }  
    }  
    catch (MetadataException exceptionMetadata)  
    {  
      Console.WriteLine("MetadataException: {0}",   
                       exceptionMetadata.Message);  
    }  
    catch (System.Data.MappingException exceptionMapping)  
    {  
      Console.WriteLine("MappingException: {0}",  
                       exceptionMapping.Message);  
    }  
  }  
  
  public static void GetEntityContainers(  
      MetadataWorkspace workspace, DataSpace model)  
  {  
    // Get a collection of the entity containers.  
    ReadOnlyCollection<EntityContainer> containers =   
         workspace.GetItems<EntityContainer>(model);  
  
    // Iterate through the collection to get each entity container.  
    foreach (EntityContainer container in containers)  
    {  
       Console.WriteLine("EntityContainer Name: {0} ",   
                        container.Name);  
  
       // EntitySetBase is a super type for   
       // EntitySets and RelationshipSets.   
       // Iterate through the collection to get each EntitySetBase.  
       foreach (EntitySetBase baseSet in container.BaseEntitySets)  
       {  
          // Check if this instance is an EntitySet.  
          if (baseSet is EntitySet)  
          {  
             Console.WriteLine(  
                "  EntitySet Name: {0} , EntityType Name: {1} ",  
                baseSet.Name, baseSet.ElementType.FullName);  
          }  
  
         // RelationshipSet is a super type for AssociationSet.  
         // Check if this instance is an AssociationSet.  
         if (baseSet is AssociationSet)  
         {  
            Console.WriteLine(  
               "  AssociationSet Name: {0} , " +  
               "AssociationType Name: {1} ",  
                baseSet.Name, baseSet.ElementType.FullName);  
  
            // Get the AssociationSet.  
            AssociationSet associationSet =   
                  baseSet as AssociationSet;  
  
            // Iterate through the collection to get   
            // each AssociatedSetEnd.  
            foreach (AssociationSetEnd end in   
               associationSet.AssociationSetEnds)  
            {  
               Console.WriteLine(  
                  "   EntitySet Name: {0} , Name: {1} ",  
                  end.EntitySet, end.Name);  
            }  
         }  
      }  
    }  
  }  
}  
```  
  
```vb  
Imports System  
Imports System.Collections.ObjectModel  
Imports System.Data  
Imports System.Data.EntityClient  
Imports System.Data.Metadata.Edm  
  
Class GetEntityContainerExample  
  Public Shared Sub Main()  
    Try  
      ' Establish a connection to the underlying data provider by   
      ' using the connection string specified in the config file.  
      Using connection As EntityConnection = _  
        New EntityConnection("Name=AdventureWorksEntities")  
  
        ' Open the conection.  
        connection.Open()  
  
        ' Access the metadata workspace.  
        Dim workspace As MetadataWorkspace = _  
           connection.GetMetadataWorkspace  
  
        ' Get the entity containers in the conceptual model.  
        GetEntityContainers(workspace, DataSpace.CSpace)  
  
        ' Get the entity containers in the storage model.  
        GetEntityContainers(workspace, DataSpace.SSpace)  
      End Using  
    Catch exceptionMetadata As MetadataException  
       Console.WriteLine("MetadataException: {0}", _  
          exceptionMetadata.Message)  
    Catch exceptionMapping As MappingException  
       Console.WriteLine("MappingException: {0}", _  
          exceptionMapping.Message)  
     End Try  
  End Sub  
  
  Public Shared Sub GetEntityContainers( _  
    ByVal workspace As MetadataWorkspace, ByVal model As DataSpace)  
  
    ' Get a collection of the entity containers.  
    Dim containers As ReadOnlyCollection(Of EntityContainer) = _  
       workspace.GetItems(Of EntityContainer)(model)  
  
    ' Iterate through the collection to get each entity container.  
    Dim container As EntityContainer  
    For Each container In containers  
      Console.WriteLine("EntityContainer Name: {0} ", container.Name)  
  
      ' EntitySetBase is a super type for   
      ' EntitySets and RelationshipSets.   
      ' Iterate through the collection to get each EntitySetBase.  
      Dim baseSet As EntitySetBase  
      For Each baseSet In container.BaseEntitySets  
         ' Check if this instance is an EntitySet.  
         If TypeOf baseSet Is EntitySet Then  
           Console.WriteLine( _  
              "  EntitySet Name: {0} , EntityType Name: {1} ", _  
              baseSet.Name, baseSet.ElementType.FullName)  
          End If  
  
          ' RelationshipSet is a super type for AssociationSet.  
          ' Check if this instance is an AssociationSet.  
          If TypeOf baseSet Is AssociationSet Then  
            Console.WriteLine( _  
              "  AssociationSet Name: {0} , " + _  
              "AssociationType Name: {1} ", _  
              baseSet.Name, baseSet.ElementType.FullName)  
  
            ' Get the AssociationSet.  
            Dim associationSet As AssociationSet = _  
               TryCast(baseSet, AssociationSet)  
  
            ' Iterate through the collection to get   
            '  each AssociatedSetEnd.  
            Dim endMember As AssociationSetEnd  
            For Each endMember In associationSet.AssociationSetEnds  
              Console.WriteLine( _  
                 "   EntitySet Name: {0} , Name: {1} ", _  
                 endMember.EntitySet, endMember.Name)  
            Next  
          End If  
      Next  
    Next  
  End Sub  
End Class  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BaseEntitySets">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.ReadOnlyMetadataCollection&lt;System.Data.Metadata.Edm.EntitySetBase&gt; BaseEntitySets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1&lt;class System.Data.Metadata.Edm.EntitySetBase&gt; BaseEntitySets" />
      <MemberSignature Language="DocId" Value="P:System.Data.Metadata.Edm.EntityContainer.BaseEntitySets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseEntitySets As ReadOnlyMetadataCollection(Of EntitySetBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Metadata::Edm::ReadOnlyMetadataCollection&lt;System::Data::Metadata::Edm::EntitySetBase ^&gt; ^ BaseEntitySets { System::Data::Metadata::Edm::ReadOnlyMetadataCollection&lt;System::Data::Metadata::Edm::EntitySetBase ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.ReadOnlyMetadataCollection&lt;System.Data.Metadata.Edm.EntitySetBase&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8417-114">Obtém uma lista de conjuntos de entidades e de associação que este <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> inclui.</span><span class="sxs-lookup"><span data-stu-id="a8417-114">Gets a list of entity sets and association sets that this <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> includes.</span></span></summary>
        <value><span data-ttu-id="a8417-115">Um <see cref="T:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1" /> que contém uma lista de conjuntos de entidades e associação de conjuntos de objetos que isso <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> inclui.</span><span class="sxs-lookup"><span data-stu-id="a8417-115">A <see cref="T:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1" /> object that contains a list of entity sets and association sets that this <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> includes.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuiltInTypeKind">
      <MemberSignature Language="C#" Value="public override System.Data.Metadata.Edm.BuiltInTypeKind BuiltInTypeKind { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Metadata.Edm.BuiltInTypeKind BuiltInTypeKind" />
      <MemberSignature Language="DocId" Value="P:System.Data.Metadata.Edm.EntityContainer.BuiltInTypeKind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property BuiltInTypeKind As BuiltInTypeKind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::Metadata::Edm::BuiltInTypeKind BuiltInTypeKind { System::Data::Metadata::Edm::BuiltInTypeKind get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.BuiltInTypeKind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8417-116">Obtém a variante do tipo interno para este <see cref="T:System.Data.Metadata.Edm.EntityContainer" />.</span><span class="sxs-lookup"><span data-stu-id="a8417-116">Gets the built-in type kind for this <see cref="T:System.Data.Metadata.Edm.EntityContainer" />.</span></span></summary>
        <value><span data-ttu-id="a8417-117">Um <see cref="T:System.Data.Metadata.Edm.BuiltInTypeKind" /> objeto que representa o tipo do tipo interno para este <see cref="T:System.Data.Metadata.Edm.EntityContainer" />.</span><span class="sxs-lookup"><span data-stu-id="a8417-117">A <see cref="T:System.Data.Metadata.Edm.BuiltInTypeKind" /> object that represents the built-in type kind for this <see cref="T:System.Data.Metadata.Edm.EntityContainer" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FunctionImports">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.ReadOnlyMetadataCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt; FunctionImports { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1&lt;class System.Data.Metadata.Edm.EdmFunction&gt; FunctionImports" />
      <MemberSignature Language="DocId" Value="P:System.Data.Metadata.Edm.EntityContainer.FunctionImports" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FunctionImports As ReadOnlyMetadataCollection(Of EdmFunction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Metadata::Edm::ReadOnlyMetadataCollection&lt;System::Data::Metadata::Edm::EdmFunction ^&gt; ^ FunctionImports { System::Data::Metadata::Edm::ReadOnlyMetadataCollection&lt;System::Data::Metadata::Edm::EdmFunction ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.ReadOnlyMetadataCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8417-118">Especifica uma coleção de elementos <see cref="T:System.Data.Metadata.Edm.EdmFunction" />.</span><span class="sxs-lookup"><span data-stu-id="a8417-118">Specifies a collection of <see cref="T:System.Data.Metadata.Edm.EdmFunction" /> elements.</span></span> <span data-ttu-id="a8417-119">Cada função contém os detalhes de um procedimento armazenado que existe no banco de dados ou <c>CommandText</c> equivalente que é mapeado para uma entidade e suas propriedades.</span><span class="sxs-lookup"><span data-stu-id="a8417-119">Each function contains the details of a stored procedure that exists in the database or equivalent <c>CommandText</c> that is mapped to an entity and its properties.</span></span></summary>
        <value><span data-ttu-id="a8417-120">Um <see cref="T:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1" /> que contém <see cref="T:System.Data.Metadata.Edm.EdmFunction" /> elementos.</span><span class="sxs-lookup"><span data-stu-id="a8417-120">A <see cref="T:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1" /> that contains <see cref="T:System.Data.Metadata.Edm.EdmFunction" /> elements.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEntitySetByName">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EntitySet GetEntitySetByName (string name, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.EntitySet GetEntitySetByName(string name, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.EntityContainer.GetEntitySetByName(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEntitySetByName (name As String, ignoreCase As Boolean) As EntitySet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::EntitySet ^ GetEntitySetByName(System::String ^ name, bool ignoreCase);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EntitySet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="a8417-121">O nome do conjunto de entidades pesquisado.</span><span class="sxs-lookup"><span data-stu-id="a8417-121">The name of the entity set that is searched for.</span></span></param>
        <param name="ignoreCase">
          <span data-ttu-id="a8417-122"><see langword="true" /> para realizar a pesquisa que não diferencia maiúsculas de minúsculas; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a8417-122"><see langword="true" /> to perform the case-insensitive search; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="a8417-123">Retorna um objeto <see cref="T:System.Data.Metadata.Edm.EntitySet" /> usando o nome especificado para o conjunto de entidades.</span><span class="sxs-lookup"><span data-stu-id="a8417-123">Returns an <see cref="T:System.Data.Metadata.Edm.EntitySet" /> object by using the specified name for the entity set.</span></span></summary>
        <returns><span data-ttu-id="a8417-124">Um objeto <see cref="T:System.Data.Metadata.Edm.EntitySet" /> que representa o conjunto de entidades com o nome especificado.</span><span class="sxs-lookup"><span data-stu-id="a8417-124">An <see cref="T:System.Data.Metadata.Edm.EntitySet" /> object that represents the entity set that has the specified name.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRelationshipSetByName">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.RelationshipSet GetRelationshipSetByName (string name, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.RelationshipSet GetRelationshipSetByName(string name, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.EntityContainer.GetRelationshipSetByName(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelationshipSetByName (name As String, ignoreCase As Boolean) As RelationshipSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::RelationshipSet ^ GetRelationshipSetByName(System::String ^ name, bool ignoreCase);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.RelationshipSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="a8417-125">O nome do conjunto de relações pesquisado.</span><span class="sxs-lookup"><span data-stu-id="a8417-125">The name of the relationship set that is searched for.</span></span></param>
        <param name="ignoreCase">
          <span data-ttu-id="a8417-126"><see langword="true" /> para realizar a pesquisa que não diferencia maiúsculas de minúsculas; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a8417-126"><see langword="true" /> to perform the case-insensitive search; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="a8417-127">Retorna um objeto <see cref="T:System.Data.Metadata.Edm.RelationshipSet" /> usando o nome especificado para o conjunto de relações.</span><span class="sxs-lookup"><span data-stu-id="a8417-127">Returns a <see cref="T:System.Data.Metadata.Edm.RelationshipSet" /> object by using the specified name for the relationship set.</span></span></summary>
        <returns><span data-ttu-id="a8417-128">Um objeto <see cref="T:System.Data.Metadata.Edm.RelationshipSet" /> que representa o conjunto de relações com o nome especificado.</span><span class="sxs-lookup"><span data-stu-id="a8417-128">An <see cref="T:System.Data.Metadata.Edm.RelationshipSet" /> object that represents the relationship set that has the specified name.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Data.Metadata.Edm.EntityContainer.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8417-129">Obtém o nome deste <see cref="T:System.Data.Metadata.Edm.EntityContainer" />.</span><span class="sxs-lookup"><span data-stu-id="a8417-129">Gets the name of this <see cref="T:System.Data.Metadata.Edm.EntityContainer" />.</span></span></summary>
        <value><span data-ttu-id="a8417-130">O nome deste <see cref="T:System.Data.Metadata.Edm.EntityContainer" />.</span><span class="sxs-lookup"><span data-stu-id="a8417-130">The name of this <see cref="T:System.Data.Metadata.Edm.EntityContainer" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.EntityContainer.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a8417-131">Retorna o nome deste <see cref="T:System.Data.Metadata.Edm.EntityContainer" />.</span><span class="sxs-lookup"><span data-stu-id="a8417-131">Returns the name of this <see cref="T:System.Data.Metadata.Edm.EntityContainer" />.</span></span></summary>
        <returns><span data-ttu-id="a8417-132">O nome deste <see cref="T:System.Data.Metadata.Edm.EntityContainer" />.</span><span class="sxs-lookup"><span data-stu-id="a8417-132">The name of this <see cref="T:System.Data.Metadata.Edm.EntityContainer" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetEntitySetByName">
      <MemberSignature Language="C#" Value="public bool TryGetEntitySetByName (string name, bool ignoreCase, out System.Data.Metadata.Edm.EntitySet entitySet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetEntitySetByName(string name, bool ignoreCase, [out] class System.Data.Metadata.Edm.EntitySet&amp; entitySet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.EntityContainer.TryGetEntitySetByName(System.String,System.Boolean,System.Data.Metadata.Edm.EntitySet@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetEntitySetByName (name As String, ignoreCase As Boolean, ByRef entitySet As EntitySet) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetEntitySetByName(System::String ^ name, bool ignoreCase, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::EntitySet ^ % entitySet);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySet&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="a8417-133">O nome do conjunto de entidades pesquisado.</span><span class="sxs-lookup"><span data-stu-id="a8417-133">The name of the entity set that is searched for.</span></span></param>
        <param name="ignoreCase">
          <span data-ttu-id="a8417-134"><see langword="true" /> para realizar a pesquisa que não diferencia maiúsculas de minúsculas; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a8417-134"><see langword="true" /> to perform the case-insensitive search; otherwise, <see langword="false" />.</span></span></param>
        <param name="entitySet"><span data-ttu-id="a8417-135">Quando este método retorna, ele contém um objeto <see cref="T:System.Data.Metadata.Edm.EntitySet" />.</span><span class="sxs-lookup"><span data-stu-id="a8417-135">When this method returns, contains an <see cref="T:System.Data.Metadata.Edm.EntitySet" /> object.</span></span> <span data-ttu-id="a8417-136">Se não houver nenhum conjunto de entidades, esse parâmetro de saída conterá nulo.</span><span class="sxs-lookup"><span data-stu-id="a8417-136">If there is no entity set, this output parameter contains null.</span></span></param>
        <summary><span data-ttu-id="a8417-137">Retorna um objeto <see cref="T:System.Data.Metadata.Edm.EntitySet" /> usando o nome especificado para o conjunto de entidades.</span><span class="sxs-lookup"><span data-stu-id="a8417-137">Returns an <see cref="T:System.Data.Metadata.Edm.EntitySet" /> object by using the specified name for the entity set.</span></span></summary>
        <returns>
          <span data-ttu-id="a8417-138"><see langword="true" /> se houver um conjunto de entidades que corresponde aos critérios de pesquisa; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a8417-138"><see langword="true" /> if there is an entity set that matches the search criteria; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetRelationshipSetByName">
      <MemberSignature Language="C#" Value="public bool TryGetRelationshipSetByName (string name, bool ignoreCase, out System.Data.Metadata.Edm.RelationshipSet relationshipSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetRelationshipSetByName(string name, bool ignoreCase, [out] class System.Data.Metadata.Edm.RelationshipSet&amp; relationshipSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.EntityContainer.TryGetRelationshipSetByName(System.String,System.Boolean,System.Data.Metadata.Edm.RelationshipSet@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetRelationshipSetByName (name As String, ignoreCase As Boolean, ByRef relationshipSet As RelationshipSet) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetRelationshipSetByName(System::String ^ name, bool ignoreCase, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::RelationshipSet ^ % relationshipSet);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="relationshipSet" Type="System.Data.Metadata.Edm.RelationshipSet&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="a8417-139">O nome do conjunto de relações pesquisado.</span><span class="sxs-lookup"><span data-stu-id="a8417-139">The name of the relationship set that is searched for.</span></span></param>
        <param name="ignoreCase">
          <span data-ttu-id="a8417-140"><see langword="true" /> para realizar a pesquisa que não diferencia maiúsculas de minúsculas; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a8417-140"><see langword="true" /> to perform the case-insensitive search; otherwise, <see langword="false" />.</span></span></param>
        <param name="relationshipSet"><span data-ttu-id="a8417-141">Quando este método retorna, ele contém um objeto <see cref="T:System.Data.Metadata.Edm.RelationshipSet" />.</span><span class="sxs-lookup"><span data-stu-id="a8417-141">When this method returns, contains a <see cref="T:System.Data.Metadata.Edm.RelationshipSet" /> object.</span></span></param>
        <summary><span data-ttu-id="a8417-142">Retorna um objeto <see cref="T:System.Data.Metadata.Edm.RelationshipSet" /> usando o nome especificado para o conjunto de relações.</span><span class="sxs-lookup"><span data-stu-id="a8417-142">Returns a <see cref="T:System.Data.Metadata.Edm.RelationshipSet" /> object by using the specified name for the relationship set.</span></span></summary>
        <returns>
          <span data-ttu-id="a8417-143"><see langword="true" /> se houver um conjunto de relações que corresponde aos critérios de pesquisa; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a8417-143"><see langword="true" /> if there is a relationship set that matches the search criteria; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>