<Type Name="ParameterTypeSemantics" FullName="System.Data.Metadata.Edm.ParameterTypeSemantics">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="985e9f6efd6153aca744bc1149697df4b9dd1ea8" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36687839" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum ParameterTypeSemantics" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ParameterTypeSemantics extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Data.Metadata.Edm.ParameterTypeSemantics" />
  <TypeSignature Language="VB.NET" Value="Public Enum ParameterTypeSemantics" />
  <TypeSignature Language="C++ CLI" Value="public enum class ParameterTypeSemantics" />
  <TypeSignature Language="F#" Value="type ParameterTypeSemantics = " />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Especifica a semântica do tipo usada para resolver as sobrecargas de função. <span data-ttu-id="0f144-102">Cada provedor de repositório deve usar esses sinalizadores de enumeração no arquivo de manifesto de provedor para cada definição de função.</span><span class="sxs-lookup"><span data-stu-id="0f144-102">Each store provider must use these enumeration flags in the provider manifest file for every function definition.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f144-103">O <xref:System.Data.Metadata.Edm.ParameterTypeSemantics> classe especifica a semântica de tipo para promotability, a conversão implícita e a conversão explícita para os tipos primitivos do provedor.</span><span class="sxs-lookup"><span data-stu-id="0f144-103">The <xref:System.Data.Metadata.Edm.ParameterTypeSemantics> class specifies type semantics for promotability, implicit conversion, and explicit conversion for the provider primitive types.</span></span> [!INCLUDE[vstecado](~/includes/vstecado-md.md)]<span data-ttu-id="0f144-104"> lê informações do arquivo de manifesto do provedor de armazenamento para o <xref:System.Data.Metadata.Edm.ParameterTypeSemantics> classe.</span><span class="sxs-lookup"><span data-stu-id="0f144-104"> reads this information from the storage provider manifest file into the <xref:System.Data.Metadata.Edm.ParameterTypeSemantics> class.</span></span> <span data-ttu-id="0f144-105">Em seguida, [!INCLUDE[vstecado](~/includes/vstecado-md.md)] usa o <xref:System.Data.Metadata.Edm.ParameterTypeSemantics> classe para determinar as definições de função apropriada com base nos tipos de parâmetro.</span><span class="sxs-lookup"><span data-stu-id="0f144-105">Then, [!INCLUDE[vstecado](~/includes/vstecado-md.md)] uses the <xref:System.Data.Metadata.Edm.ParameterTypeSemantics> class to determine the appropriate function definitions based on the parameter types.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AllowImplicitConversion">
      <MemberSignature Language="C#" Value="AllowImplicitConversion" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.Metadata.Edm.ParameterTypeSemantics AllowImplicitConversion = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Data.Metadata.Edm.ParameterTypeSemantics.AllowImplicitConversion" />
      <MemberSignature Language="VB.NET" Value="AllowImplicitConversion" />
      <MemberSignature Language="C++ CLI" Value="AllowImplicitConversion" />
      <MemberSignature Language="F#" Value="AllowImplicitConversion = 0" Usage="System.Data.Metadata.Edm.ParameterTypeSemantics.AllowImplicitConversion" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.ParameterTypeSemantics</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="0f144-106">Um sinalizador que indica a conversão implícita entre os tipos de argumentos formais e os fornecidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f144-106">A flag indicating the implicit conversion between the given and the formal argument types.</span>
          </span>
          <span data-ttu-id="0f144-107">Esse é o tipo de conversão padrão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f144-107">This is the default conversion type.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="AllowImplicitPromotion">
      <MemberSignature Language="C#" Value="AllowImplicitPromotion" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.Metadata.Edm.ParameterTypeSemantics AllowImplicitPromotion = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Data.Metadata.Edm.ParameterTypeSemantics.AllowImplicitPromotion" />
      <MemberSignature Language="VB.NET" Value="AllowImplicitPromotion" />
      <MemberSignature Language="C++ CLI" Value="AllowImplicitPromotion" />
      <MemberSignature Language="F#" Value="AllowImplicitPromotion = 1" Usage="System.Data.Metadata.Edm.ParameterTypeSemantics.AllowImplicitPromotion" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.ParameterTypeSemantics</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="0f144-108">Um sinalizador que indica a promoção de tipos entre os tipos de argumentos formais e fornecidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f144-108">A flag indicating the type promotion between the given and the formal argument types.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="ExactMatchOnly">
      <MemberSignature Language="C#" Value="ExactMatchOnly" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.Metadata.Edm.ParameterTypeSemantics ExactMatchOnly = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Data.Metadata.Edm.ParameterTypeSemantics.ExactMatchOnly" />
      <MemberSignature Language="VB.NET" Value="ExactMatchOnly" />
      <MemberSignature Language="C++ CLI" Value="ExactMatchOnly" />
      <MemberSignature Language="F#" Value="ExactMatchOnly = 2" Usage="System.Data.Metadata.Edm.ParameterTypeSemantics.ExactMatchOnly" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.ParameterTypeSemantics</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="0f144-109">Um sinalizador que indica o uso apenas de equivalência estrita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f144-109">A flag indicating the usage of strict equivalence only.</span>
          </span>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>