<Type Name="PropertyKind" FullName="System.Data.Metadata.Edm.PropertyKind">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cee26385fbdb46b79ef1496465ea7c482c3aa256" />
    <Meta Name="ms.sourcegitcommit" Value="eccec77340eb3a642e6ad8d4fa59099403a695b6" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/29/2018" />
    <Meta Name="ms.locfileid" Value="43179328" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum PropertyKind" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed PropertyKind extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Data.Metadata.Edm.PropertyKind" />
  <TypeSignature Language="VB.NET" Value="Public Enum PropertyKind" />
  <TypeSignature Language="C++ CLI" Value="public enum class PropertyKind" />
  <TypeSignature Language="F#" Value="type PropertyKind = " />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Especifica os tipos de atributos de item no modelo conceitual.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obter mais informações, consulte [propriedade estendida (CSDL)](http://msdn.microsoft.com/library/697e2fb1-8977-4aa6-a1ef-236950e91fd1).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como obter um espaço de trabalho de metadados da conexão e, em seguida, usar esse espaço de trabalho de metadados para recuperar informações sobre as propriedades estendidas no modelo de dados especificado. Observe que o espaço de trabalho de metadados é um componente de serviço de tempo de execução que fornece suporte para recuperação de metadados.  
  
 O exemplo de código usa um <xref:System.Data.Metadata.Edm.DataSpace.CSpace> para especificar o modelo. O <xref:System.Data.Metadata.Edm.DataSpace.CSpace> representa o nome padrão para o modelo conceitual. O exemplo de código usa o modelo AdventureWorks que é fornecido na [AdventureWorks EDM (modelo)](http://msdn.microsoft.com/library/da87d29e-8c89-4310-bbac-5cbd062930a7) tópico. Para obter um exemplo do arquivo de configuração do aplicativo, consulte [modelo de objeto do AdventureWorks em aplicativos (EDM)](http://msdn.microsoft.com/library/84c01270-90ba-467b-ad24-df10c1ca8f45).  
  
```csharp  
using System;  
using System.Data;  
using System.Data.EntityClient;  
using System.Collections.ObjectModel;  
using System.Data.Metadata.Edm;  
  
class UsePropertyKindExample  
{  
   static void Main(string[] args)  
   {  
     try  
     {  
       // Establish a connection to the underlying data provider by   
       // using the connection string specified in the config file.  
       using (EntityConnection connection =  
           new EntityConnection("Name=AdventureworksContext"))  
       {  
          // Open the connection.  
          connection.Open();  
  
          // Access the metadata workspace.  
          MetadataWorkspace workspace =   
             connection.GetMetadataWorkspace();  
  
          // Display the extended properties in the conceptual model.  
          DisplayProperties(workspace, DataSpace.CSpace);  
       }  
     }  
     catch (MetadataException exceptionMetadata)  
     {  
         Console.WriteLine("MetadataException: {0}",  
                         exceptionMetadata.Message);  
     }  
     catch (System.Data.MappingException exceptionMapping)  
     {  
         Console.WriteLine("MappingException: {0}",  
                          exceptionMapping.Message);  
     }  
   }  
  
   public static void DisplayProperties(  
        MetadataWorkspace workspace, DataSpace model)  
   {  
      // Get a collection of the entity containers.  
      ReadOnlyCollection<EntityContainer> containers =  
          workspace.GetItems<EntityContainer>(model);  
  
      // Iterate through the collection to get each entity container.  
      foreach (EntityContainer container in containers)  
      {  
          // Display the extended properties for the entity container.  
          DisplayExtendedProperties(container);  
  
          // Iterate through the collection to get each entity set.  
          foreach (EntitySetBase baseSet in container.BaseEntitySets)  
          {  
              // Check whether this instance is an EntitySet.  
              if (baseSet is EntitySet)  
              {  
                 // Display the extended properties for the entity set.  
                 DisplayExtendedProperties(baseSet);  
              }  
          }  
      }  
  
      // Get a collection of the entity types.  
      ReadOnlyCollection<EntityType> entities =   
             workspace.GetItems<EntityType>(model);  
  
      // Iterate through the collection to get each entity type.  
      foreach (EntityType entity in entities)  
      {  
         // Display the extended properties for the entity type.  
         DisplayExtendedProperties(entity);  
      }  
   }  
  
   private static void DisplayExtendedProperties(MetadataItem item)  
   {  
     foreach (MetadataProperty property in item.MetadataProperties)  
     {  
         if (property.PropertyKind == PropertyKind.Extended)  
           Console.WriteLine(string.Format("\t{0}\t{1}\t{2}",   
             item.GetType().Name, property.Name, property.Value));  
     }  
   }  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Extended">
      <MemberSignature Language="C#" Value="Extended" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.Metadata.Edm.PropertyKind Extended = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Data.Metadata.Edm.PropertyKind.Extended" />
      <MemberSignature Language="VB.NET" Value="Extended" />
      <MemberSignature Language="C++ CLI" Value="Extended" />
      <MemberSignature Language="F#" Value="Extended = 1" Usage="System.Data.Metadata.Edm.PropertyKind.Extended" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.PropertyKind</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Um membro de enumeração que indica que um atributo de item é <c>Extended</c>.</summary>
      </Docs>
    </Member>
    <Member MemberName="System">
      <MemberSignature Language="C#" Value="System" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.Metadata.Edm.PropertyKind System = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Data.Metadata.Edm.PropertyKind.System" />
      <MemberSignature Language="VB.NET" Value="System" />
      <MemberSignature Language="C++ CLI" Value="System" />
      <MemberSignature Language="F#" Value="System = 0" Usage="System.Data.Metadata.Edm.PropertyKind.System" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.PropertyKind</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Um membro de enumeração que indica que um atributo de item é <c>System</c>.</summary>
      </Docs>
    </Member>
  </Members>
</Type>