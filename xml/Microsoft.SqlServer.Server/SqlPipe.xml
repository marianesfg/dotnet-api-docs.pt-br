<Type Name="SqlPipe" FullName="Microsoft.SqlServer.Server.SqlPipe">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f715fd742165d7d4ffbc7cb2e9be3f2dfa6d157e" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37715742" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SqlPipe" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlPipe extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.SqlPipe" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlPipe" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlPipe sealed" />
  <TypeSignature Language="F#" Value="type SqlPipe = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="531f3-101">Permite que procedimentos armazenados gerenciados em execução no processo em um banco de dados do SQL Server retornem resultados para o chamador.</span>
      <span class="sxs-lookup">
        <span data-stu-id="531f3-101">Allows managed stored procedures running in-process on a SQL Server database to return results back to the caller.</span>
      </span>
      <span data-ttu-id="531f3-102">Essa classe não pode ser herdada.</span>
      <span class="sxs-lookup">
        <span data-stu-id="531f3-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="531f3-103">Uma instância dessa classe é disponibilizada para procedimentos armazenados gerenciados por meio de <xref:Microsoft.SqlServer.Server.SqlContext.Pipe%2A> propriedade do <xref:Microsoft.SqlServer.Server.SqlContext> classe.</span><span class="sxs-lookup"><span data-stu-id="531f3-103">An instance of this class is made available to managed stored procedures through the <xref:Microsoft.SqlServer.Server.SqlContext.Pipe%2A> property of the <xref:Microsoft.SqlServer.Server.SqlContext> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="531f3-104">O exemplo a seguir usa <xref:System.Data.SqlClient.SqlConnection> e <xref:System.Data.SqlClient.SqlCommand> para selecionar linhas de uma fonte de dados em um procedimento armazenado.</span><span class="sxs-lookup"><span data-stu-id="531f3-104">The following example uses <xref:System.Data.SqlClient.SqlConnection> and <xref:System.Data.SqlClient.SqlCommand> to select rows from a data source in a stored procedure.</span></span> <span data-ttu-id="531f3-105">O exemplo usa um <xref:Microsoft.SqlServer.Server.SqlPipe> para executar o comando e enviar os resultados ao cliente.</span><span class="sxs-lookup"><span data-stu-id="531f3-105">The example then uses a <xref:Microsoft.SqlServer.Server.SqlPipe> to execute the command and send the results back to the client.</span></span>  
  
 [!code-csharp[DataWorks SqlPipe#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ExecuteAndSend">
      <MemberSignature Language="C#" Value="public void ExecuteAndSend (System.Data.SqlClient.SqlCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExecuteAndSend(class System.Data.SqlClient.SqlCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.ExecuteAndSend(System.Data.SqlClient.SqlCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExecuteAndSend (command As SqlCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExecuteAndSend(System::Data::SqlClient::SqlCommand ^ command);" />
      <MemberSignature Language="F#" Value="member this.ExecuteAndSend : System.Data.SqlClient.SqlCommand -&gt; unit" Usage="sqlPipe.ExecuteAndSend command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.SqlClient.SqlCommand" />
      </Parameters>
      <Docs>
        <param name="command">
          <span data-ttu-id="531f3-106">O objeto <see cref="T:System.Data.SqlClient.SqlCommand" /> a ser executado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="531f3-106">The <see cref="T:System.Data.SqlClient.SqlCommand" /> object to be executed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="531f3-107">Executa o comando passado como um parâmetro e envia os resultados para o cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="531f3-107">Executes the command passed as a parameter and sends the results to the client.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="531f3-108">Além de quaisquer resultados reais, os outros erros e mensagens também são enviados diretamente ao cliente.</span><span class="sxs-lookup"><span data-stu-id="531f3-108">In addition to any actual results, other messages and errors are also sent directly to the client.</span></span>  
  
 <span data-ttu-id="531f3-109">Parâmetros de saída e valores de retorno não são enviados para o cliente; eles estão disponíveis para o chamador, por meio da coleção de parâmetros do objeto command.</span><span class="sxs-lookup"><span data-stu-id="531f3-109">Output parameters and return values are not sent to the client; these are available to the caller, through the parameters collection of the command object.</span></span>  
  
 <span data-ttu-id="531f3-110">Se o comando não está associado a uma conexão em processo, um <xref:System.InvalidOperationException> é gerada.</span><span class="sxs-lookup"><span data-stu-id="531f3-110">If the command is not bound to an in-process connection, an <xref:System.InvalidOperationException> is thrown.</span></span> <span data-ttu-id="531f3-111">Não há suporte para esse método em comandos associados a conexões fora do processo.</span><span class="sxs-lookup"><span data-stu-id="531f3-111">This method is not supported on commands bound to out-of-process connections.</span></span>  
  
 <span data-ttu-id="531f3-112">Se houver erros no <xref:System.Data.SqlClient.SqlCommand> objeto que foi enviado, as exceções são enviadas ao pipe, mas uma cópia também é enviada ao chamar código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="531f3-112">If there are errors in the <xref:System.Data.SqlClient.SqlCommand> object that was submitted, exceptions are sent to the pipe, but a copy is also sent to calling managed code.</span></span> <span data-ttu-id="531f3-113">Se o código de chamada não captura a exceção, ele se propagar até a pilha no código Transact-SQL e aparecer duas vezes na saída.</span><span class="sxs-lookup"><span data-stu-id="531f3-113">If the calling code doesn't catch the exception, it will propagate up the stack to the Transact-SQL code and appear in the output twice.</span></span> <span data-ttu-id="531f3-114">Se o código de chamada capturar a exceção, o consumidor de pipe ainda verá o erro, mas não haverá um erro de duplicação.</span><span class="sxs-lookup"><span data-stu-id="531f3-114">If the calling code does catch the exception, the pipe consumer will still see the error, but there will not be a duplicate error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="531f3-115">O exemplo a seguir usa <xref:System.Data.SqlClient.SqlConnection> e <xref:System.Data.SqlClient.SqlCommand> para selecionar linhas de uma fonte de dados em um procedimento armazenado.</span><span class="sxs-lookup"><span data-stu-id="531f3-115">The following example uses <xref:System.Data.SqlClient.SqlConnection> and <xref:System.Data.SqlClient.SqlCommand> to select rows from a data source in a stored procedure.</span></span> <span data-ttu-id="531f3-116">O exemplo usa um <xref:Microsoft.SqlServer.Server.SqlPipe> para executar o comando e enviar os resultados ao cliente.</span><span class="sxs-lookup"><span data-stu-id="531f3-116">The example then uses a <xref:Microsoft.SqlServer.Server.SqlPipe> to execute the command and send the results back to the client.</span></span>  
  
 [!code-csharp[DataWorks SqlPipe.ExecuteAndSend#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe.ExecuteAndSend/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe.ExecuteAndSend#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe.ExecuteAndSend/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="531f3-117">O <paramref name="command" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="531f3-117">The <paramref name="command" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="531f3-118">Não há suporte para esse método em comandos associados a conexões fora do processo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="531f3-118">This method is not supported on commands bound to out-of-process connections.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsSendingResults">
      <MemberSignature Language="C#" Value="public bool IsSendingResults { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSendingResults" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlPipe.IsSendingResults" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSendingResults As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSendingResults { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSendingResults : bool" Usage="Microsoft.SqlServer.Server.SqlPipe.IsSendingResults" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="531f3-119">Obtém um valor que indica se o <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> está no modo de enviar conjuntos de resultados únicos de volta ao cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="531f3-119">Gets a value that indicates whether the <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> is in the mode of sending single result sets back to the client.</span>
          </span>
          <span data-ttu-id="531f3-120">Esta propriedade é somente para leitura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="531f3-120">This property is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="531f3-121">
            <see langword="true" /> Se o <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> método foi chamado e o <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> está no modo de envio de conjuntos de resultados únicos para o cliente; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="531f3-121">
              <see langword="true" /> if the <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> method has been called and the <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> is in the mode of sending single result sets back to the client; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Send">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="531f3-122">Envia os resultados diretamente ao cliente ou ao consumidor de saída atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="531f3-122">Sends results directly to the client or current output consumer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="531f3-123">O **enviar** método envia dados diretamente ao cliente ou chamador.</span><span class="sxs-lookup"><span data-stu-id="531f3-123">The **Send** method sends data straight to the client or caller.</span></span> <span data-ttu-id="531f3-124">Ele geralmente é o cliente que consome a saída do **Pipe** método, mas, no caso do CLR aninhada procedimentos armazenados do consumidor de saída também pode ser um procedimento armazenado.</span><span class="sxs-lookup"><span data-stu-id="531f3-124">It is usually the client that consumes the output from the **Pipe** method, but in the case of nested CLR stored procedures the output consumer can also be a stored procedure.</span></span> <span data-ttu-id="531f3-125">Por exemplo, Procedure1 chama <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> com o texto do comando "EXEC Procedure2".</span><span class="sxs-lookup"><span data-stu-id="531f3-125">For example, Procedure1 calls <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> with the command text "EXEC Procedure2".</span></span> <span data-ttu-id="531f3-126">Procedure2 também é um procedimento armazenado gerenciado.</span><span class="sxs-lookup"><span data-stu-id="531f3-126">Procedure2 is also a managed stored procedure.</span></span> <span data-ttu-id="531f3-127">Se Procedure2 chamar agora <xref:Microsoft.SqlServer.Server.SqlPipe.Send%2A>, a linha é enviada ao leitor de Procedure1, não ao cliente.</span><span class="sxs-lookup"><span data-stu-id="531f3-127">If Procedure2 now calls <xref:Microsoft.SqlServer.Server.SqlPipe.Send%2A>, the row is sent to Procedure1's reader, not to the client.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (Microsoft.SqlServer.Server.SqlDataRecord record);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(class Microsoft.SqlServer.Server.SqlDataRecord record) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.Send(Microsoft.SqlServer.Server.SqlDataRecord)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (record As SqlDataRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(Microsoft::SqlServer::Server::SqlDataRecord ^ record);" />
      <MemberSignature Language="F#" Value="member this.Send : Microsoft.SqlServer.Server.SqlDataRecord -&gt; unit" Usage="sqlPipe.Send record" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="Microsoft.SqlServer.Server.SqlDataRecord" />
      </Parameters>
      <Docs>
        <param name="record">
          <span data-ttu-id="531f3-128">O conjunto de resultados de linha única enviado ao cliente: um objeto <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="531f3-128">The single-row result set sent to the client: a <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="531f3-129">Envia um conjunto de resultados de linha única diretamente ao cliente ou ao consumidor de saída atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="531f3-129">Sends a single-row result set directly to the client or current output consumer.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="531f3-130">O <paramref name="record" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="531f3-130">The <paramref name="record" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (System.Data.SqlClient.SqlDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(class System.Data.SqlClient.SqlDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.Send(System.Data.SqlClient.SqlDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (reader As SqlDataReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::Data::SqlClient::SqlDataReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.Send : System.Data.SqlClient.SqlDataReader -&gt; unit" Usage="sqlPipe.Send reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.SqlClient.SqlDataReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="531f3-131">O conjunto de resultados multilinha a ser enviado ao cliente: um objeto <see cref="T:System.Data.SqlClient.SqlDataReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="531f3-131">The multirow result set to be sent to the client: a <see cref="T:System.Data.SqlClient.SqlDataReader" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="531f3-132">Envia um conjunto de resultados multilinha diretamente para o cliente ou para o consumidor de saída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="531f3-132">Sends a multirow result set directly to the client or current output consumer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="531f3-133">Se o <xref:System.Data.SqlClient.SqlDataReader> objeto passada como um parâmetro está ocultando colunas, essas colunas não são propagadas para o conjunto de resultados enviado ao cliente.</span><span class="sxs-lookup"><span data-stu-id="531f3-133">If the <xref:System.Data.SqlClient.SqlDataReader> object passed in as a parameter has hidden columns, those columns are not propagated to the result set sent to the client.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="531f3-134">O <paramref name="reader" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="531f3-134">The <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.Send(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::String ^ message);" />
      <MemberSignature Language="F#" Value="member this.Send : string -&gt; unit" Usage="sqlPipe.Send message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="531f3-135">A cadeia de caracteres de mensagem a ser enviada ao cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="531f3-135">The message string to be sent to the client.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="531f3-136">Envia uma mensagem de cadeia de caracteres diretamente ao cliente ou ao consumidor de saída atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="531f3-136">Sends a string message directly to the client or current output consumer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="531f3-137">A cadeia de caracteres de mensagem é enviada como uma mensagem informativa para o cliente.</span><span class="sxs-lookup"><span data-stu-id="531f3-137">The message string is sent as an informational message to the client.</span></span> <span data-ttu-id="531f3-138">Aplicativos cliente podem ouvir as mensagens por meio de mecanismos diferentes, dependendo da data access application interface de programação (API) que eles usam.</span><span class="sxs-lookup"><span data-stu-id="531f3-138">Client applications can listen to messages through different mechanisms, depending on the data access application programming interface (API) that they use.</span></span> <span data-ttu-id="531f3-139">Por exemplo, se o cliente está usando o ADO.NET, as mensagens de transmissão por meio de <xref:System.Data.SqlClient.SqlConnection.InfoMessage> eventos.</span><span class="sxs-lookup"><span data-stu-id="531f3-139">For example, if the client is using ADO.NET, the messages transmit through the <xref:System.Data.SqlClient.SqlConnection.InfoMessage> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="531f3-140">O exemplo a seguir usa o <xref:Microsoft.SqlServer.Server.SqlPipe.Send%2A> método para enviar uma cadeia de caracteres de mensagem diretamente para o cliente.</span><span class="sxs-lookup"><span data-stu-id="531f3-140">The following example uses the <xref:Microsoft.SqlServer.Server.SqlPipe.Send%2A> method to send a message string directly to the client.</span></span>  
  
 [!code-csharp[DataWorks SqlPipe.Send#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe.Send/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe.Send#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe.Send/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="531f3-141">A <paramref name="message" /> tem mais de 4.000 caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="531f3-141">The <paramref name="message" /> is greater than 4,000 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="531f3-142">O <paramref name="message" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="531f3-142">The <paramref name="message" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SendResultsEnd">
      <MemberSignature Language="C#" Value="public void SendResultsEnd ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendResultsEnd() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendResultsEnd ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendResultsEnd();" />
      <MemberSignature Language="F#" Value="member this.SendResultsEnd : unit -&gt; unit" Usage="sqlPipe.SendResultsEnd " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="531f3-143">Marca o fim de um conjunto de resultados e retorna a instância <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> de volta ao estado inicial.</span>
          <span class="sxs-lookup">
            <span data-stu-id="531f3-143">Marks the end of a result set, and returns the <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> instance back to the initial state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="531f3-144">Procedimentos armazenados gerenciados podem enviar conjuntos de resultados para os clientes que não estiver implementando um <xref:System.Data.SqlClient.SqlDataReader>.</span><span class="sxs-lookup"><span data-stu-id="531f3-144">Managed stored procedures can send result sets to clients that are not implementing a <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="531f3-145">Esse método, junto com <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> e <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>, permitir que os procedimentos armazenados enviem conjuntos de resultados personalizados ao cliente.</span><span class="sxs-lookup"><span data-stu-id="531f3-145">This method, along with <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> and <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>, allow stored procedures to send custom result sets to the client.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="531f3-146">O exemplo a seguir cria um novo <xref:Microsoft.SqlServer.Server.SqlDataRecord> e seu <xref:Microsoft.SqlServer.Server.SqlMetaData>.</span><span class="sxs-lookup"><span data-stu-id="531f3-146">The following example creates a new <xref:Microsoft.SqlServer.Server.SqlDataRecord> and its <xref:Microsoft.SqlServer.Server.SqlMetaData>.</span></span> <span data-ttu-id="531f3-147">O exemplo, em seguida, marca o início de um conjunto de resultados usando o <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> método, envia registros com os dados de exemplo para o cliente usando o <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> método e marca o final do resultado definido com o <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> método.</span><span class="sxs-lookup"><span data-stu-id="531f3-147">The example then marks the beginning of a result set using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> method, sends records with example data back to the client using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method, and marks the end of the result set with the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> method.</span></span>  
  
 [!code-csharp[DataWorks SqlPipe.SendResultsEnd#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsEnd/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe.SendResultsEnd#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsEnd/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="531f3-148">O método <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> não foi chamado anteriormente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="531f3-148">The <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> method was not previously called.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)" />
        <altmember cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" />
      </Docs>
    </Member>
    <Member MemberName="SendResultsRow">
      <MemberSignature Language="C#" Value="public void SendResultsRow (Microsoft.SqlServer.Server.SqlDataRecord record);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendResultsRow(class Microsoft.SqlServer.Server.SqlDataRecord record) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendResultsRow (record As SqlDataRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendResultsRow(Microsoft::SqlServer::Server::SqlDataRecord ^ record);" />
      <MemberSignature Language="F#" Value="member this.SendResultsRow : Microsoft.SqlServer.Server.SqlDataRecord -&gt; unit" Usage="sqlPipe.SendResultsRow record" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="Microsoft.SqlServer.Server.SqlDataRecord" />
      </Parameters>
      <Docs>
        <param name="record">
          <span data-ttu-id="531f3-149">Um objeto <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> com os valores de coluna para a linha a ser enviada ao cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="531f3-149">A <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> object with the column values for the row to be sent to the client.</span>
          </span>
          <span data-ttu-id="531f3-150">O esquema para o registro deve corresponder ao esquema descrito pelos metadados do <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> passado para o método <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="531f3-150">The schema for the record must match the schema described by the metadata of the <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> passed to the <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="531f3-151">Envia uma única linha de dados de volta ao cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="531f3-151">Sends a single row of data back to the client.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="531f3-152">Procedimentos armazenados gerenciados podem enviar conjuntos de resultados para os clientes que não estiver implementando um <xref:System.Data.SqlClient.SqlDataReader>.</span><span class="sxs-lookup"><span data-stu-id="531f3-152">Managed stored procedures can send result sets to clients that are not implementing a <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="531f3-153">Esse método, junto com <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> e <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>, permite que procedimentos armazenados enviem conjuntos de resultados personalizados ao cliente.</span><span class="sxs-lookup"><span data-stu-id="531f3-153">This method, along with <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> and <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>, allows stored procedures to send custom result sets to the client.</span></span>  
  
 <span data-ttu-id="531f3-154">O <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> método envia uma única linha de dados de volta ao cliente.</span><span class="sxs-lookup"><span data-stu-id="531f3-154">The <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method sends a single row of data back to the client.</span></span> <span data-ttu-id="531f3-155">Linhas, posteriormente, podem ser retornadas ao chamador por meio da chamada <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>, uma vez para cada linha que está sendo enviada.</span><span class="sxs-lookup"><span data-stu-id="531f3-155">Rows can subsequently be returned to the caller by calling <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>, one time for each row being sent.</span></span> <span data-ttu-id="531f3-156">Depois que todas as linhas forem enviadas, uma chamada para o <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> método é necessário para marcar o final do conjunto de resultados.</span><span class="sxs-lookup"><span data-stu-id="531f3-156">After all the rows have been sent, a call to the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> method is required to mark the end of the result set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="531f3-157">O exemplo a seguir cria um novo <xref:Microsoft.SqlServer.Server.SqlDataRecord> e seu <xref:Microsoft.SqlServer.Server.SqlMetaData>.</span><span class="sxs-lookup"><span data-stu-id="531f3-157">The following example creates a new <xref:Microsoft.SqlServer.Server.SqlDataRecord> and its <xref:Microsoft.SqlServer.Server.SqlMetaData>.</span></span> <span data-ttu-id="531f3-158">O exemplo, em seguida, marca o início de um conjunto de resultados usando o <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> método, envia registros com os dados de exemplo para o cliente usando o <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> método e marca o final do resultado definido com o <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> método.</span><span class="sxs-lookup"><span data-stu-id="531f3-158">The example then marks the beginning of a result set using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> method, sends records with example data back to the client using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method, and marks the end of the result set with the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> method.</span></span>  
  
 [!code-csharp[DataWorks SqlPipe.SendResultsRow#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsRow/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe.SendResultsRow#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsRow/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="531f3-159">O <paramref name="record" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="531f3-159">The <paramref name="record" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="531f3-160">O método <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> não foi chamado anteriormente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="531f3-160">The <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> method was not previously called.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" />
        <altmember cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd" />
      </Docs>
    </Member>
    <Member MemberName="SendResultsStart">
      <MemberSignature Language="C#" Value="public void SendResultsStart (Microsoft.SqlServer.Server.SqlDataRecord record);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendResultsStart(class Microsoft.SqlServer.Server.SqlDataRecord record) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendResultsStart (record As SqlDataRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendResultsStart(Microsoft::SqlServer::Server::SqlDataRecord ^ record);" />
      <MemberSignature Language="F#" Value="member this.SendResultsStart : Microsoft.SqlServer.Server.SqlDataRecord -&gt; unit" Usage="sqlPipe.SendResultsStart record" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="Microsoft.SqlServer.Server.SqlDataRecord" />
      </Parameters>
      <Docs>
        <param name="record">
          <span data-ttu-id="531f3-161">Um objeto <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> do qual os metadados são extraídos e usados para descrever o conjunto de resultados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="531f3-161">A <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> object from which metadata is extracted and used to describe the result set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="531f3-162">Marca o início de um conjunto de resultados a ser enviado de volta para o cliente e usa o parâmetro de registro para criar os metadados que descrevem o conjunto de resultados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="531f3-162">Marks the beginning of a result set to be sent back to the client, and uses the record parameter to construct the metadata that describes the result set.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="531f3-163">Procedimentos armazenados gerenciados podem enviar conjuntos de resultados para os clientes que não estiver implementando um <xref:System.Data.SqlClient.SqlDataReader>.</span><span class="sxs-lookup"><span data-stu-id="531f3-163">Managed stored procedures can send result sets to clients that are not implementing a <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="531f3-164">Esse método, junto com <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> e <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>, permitir que os procedimentos armazenados enviem conjuntos de resultados personalizados ao cliente.</span><span class="sxs-lookup"><span data-stu-id="531f3-164">This method, along with <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> and <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>, allow stored procedures to send custom result sets to the client.</span></span>  
  
 <span data-ttu-id="531f3-165">O <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> método marca o início de um conjunto de resultados e usa o parâmetro de registro para construir os metadados que descrevem o conjunto de resultados.</span><span class="sxs-lookup"><span data-stu-id="531f3-165">The <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> method marks the beginning of a result set, and uses the record parameter to construct the metadata that describes the result set.</span></span> <span data-ttu-id="531f3-166">Todas as linhas subsequentes, enviadas usando o <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> método, deve corresponder àquela definição de metadados.</span><span class="sxs-lookup"><span data-stu-id="531f3-166">All the subsequent rows, sent using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method, must match that metadata definition.</span></span>  
  
 <span data-ttu-id="531f3-167">Observe que a chamada após <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A>, somente <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> e <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> pode ser chamado.</span><span class="sxs-lookup"><span data-stu-id="531f3-167">Note that after calling <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A>, only <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> and <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> can be called.</span></span> <span data-ttu-id="531f3-168">Qualquer outro método na mesma instância do <xref:Microsoft.SqlServer.Server.SqlPipe> lança um <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="531f3-168">Any other method in the same instance of <xref:Microsoft.SqlServer.Server.SqlPipe> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="531f3-169"><xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> define <xref:Microsoft.SqlServer.Server.SqlPipe> volta para o estado inicial no qual outros métodos podem ser chamados.</span><span class="sxs-lookup"><span data-stu-id="531f3-169"><xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> sets <xref:Microsoft.SqlServer.Server.SqlPipe> back to the initial state where other methods can be called.</span></span>  
  
 <span data-ttu-id="531f3-170">Depois que o controle retorna para o Transact-SQL de execução de CLR, não tente usar uma variável estática ou local inicializada para a memória do CLR.</span><span class="sxs-lookup"><span data-stu-id="531f3-170">After control returns to Transact-SQL from CLR execution, do not attempt to use a static or local variable initialized to CLR memory.</span></span> <span data-ttu-id="531f3-171">Por exemplo, armazenamento de não classe, por exemplo de uma instância de um processo em `SQLDataRecord`, que será usado depois que o controle retorna de CLR.</span><span class="sxs-lookup"><span data-stu-id="531f3-171">For example, do not store an instance of an in process class, for example `SQLDataRecord`, which will be used after control returns from CLR.</span></span> <span data-ttu-id="531f3-172">Uma exceção é o `SQLMetaData` na classe process.</span><span class="sxs-lookup"><span data-stu-id="531f3-172">One exception is the `SQLMetaData` in process class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="531f3-173">O exemplo a seguir cria um novo <xref:Microsoft.SqlServer.Server.SqlDataRecord> e seu <xref:Microsoft.SqlServer.Server.SqlMetaData>.</span><span class="sxs-lookup"><span data-stu-id="531f3-173">The following example creates a new <xref:Microsoft.SqlServer.Server.SqlDataRecord> and its <xref:Microsoft.SqlServer.Server.SqlMetaData>.</span></span> <span data-ttu-id="531f3-174">O exemplo, em seguida, marca o início de um conjunto de resultados usando o <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> método, envia registros com os dados de exemplo para o cliente usando o <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> método e marca o final do resultado definido com o <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> método.</span><span class="sxs-lookup"><span data-stu-id="531f3-174">The example then marks the beginning of a result set using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> method, sends records with example data back to the client using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method, and marks the end of the result set with the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> method.</span></span>  
  
 [!code-csharp[DataWorks SqlPipe.SendResultsStart#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsStart/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe.SendResultsStart#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsStart/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="531f3-175">O <paramref name="record" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="531f3-175">The <paramref name="record" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="531f3-176">O <paramref name="record" /> não tem colunas ou não foi inicializado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="531f3-176">The <paramref name="record" /> has no columns or has not been initialized.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="531f3-177">Um método diferente de <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)" /> ou <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd" /> foi chamado após o método <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="531f3-177">A method other than <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)" /> or <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd" /> was called after the <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> method.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)" />
        <altmember cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd" />
      </Docs>
    </Member>
  </Members>
</Type>