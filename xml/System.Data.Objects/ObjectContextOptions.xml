<Type Name="ObjectContextOptions" FullName="System.Data.Objects.ObjectContextOptions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ec633e2f32776ba7f89513e2120370126073af80" /><Meta Name="ms.sourcegitcommit" Value="e3904cb57bb8e1854a7de1615afac7a569a2064b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="01/14/2019" /><Meta Name="ms.locfileid" Value="54251979" /></Metadata><TypeSignature Language="C#" Value="public sealed class ObjectContextOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ObjectContextOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.ObjectContextOptions" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ObjectContextOptions" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectContextOptions sealed" />
  <TypeSignature Language="F#" Value="type ObjectContextOptions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="52ad9-101">Define opções que afetam o comportamento do <see cref="T:System.Data.Objects.ObjectContext" />.</span><span class="sxs-lookup"><span data-stu-id="52ad9-101">Defines options that affect the behavior of the <see cref="T:System.Data.Objects.ObjectContext" />.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="LazyLoadingEnabled">
      <MemberSignature Language="C#" Value="public bool LazyLoadingEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LazyLoadingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectContextOptions.LazyLoadingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property LazyLoadingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LazyLoadingEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.LazyLoadingEnabled : bool with get, set" Usage="System.Data.Objects.ObjectContextOptions.LazyLoadingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52ad9-102">Obtém ou define um valor booliano que determina se objetos relacionados são carregados automaticamente quando uma propriedade de navegação é acessada.</span><span class="sxs-lookup"><span data-stu-id="52ad9-102">Gets or sets a Boolean value that determines whether related objects are loaded automatically when a navigation property is accessed.</span></span></summary>
        <value><span data-ttu-id="52ad9-103"><see langword="true" /> se o carregamento lento estiver habilitado; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="52ad9-103"><see langword="true" /> if lazy loading is enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProxyCreationEnabled">
      <MemberSignature Language="C#" Value="public bool ProxyCreationEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProxyCreationEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectContextOptions.ProxyCreationEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property ProxyCreationEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProxyCreationEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ProxyCreationEnabled : bool with get, set" Usage="System.Data.Objects.ObjectContextOptions.ProxyCreationEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52ad9-104">Obtém ou define um valor booliano que determina se as instâncias de proxy são criadas para classes de dados personalizados que são ignorados com persistência.</span><span class="sxs-lookup"><span data-stu-id="52ad9-104">Gets or sets a Boolean value that determines whether proxy instances are created for custom data classes that are persistence ignorant.</span></span></summary>
        <value><span data-ttu-id="52ad9-105"><see langword="true" /> se os proxies são criados; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="52ad9-105"><see langword="true" /> if proxies are created; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="52ad9-106">O valor padrão é <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="52ad9-106">The default value is <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseConsistentNullReferenceBehavior">
      <MemberSignature Language="C#" Value="public bool UseConsistentNullReferenceBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseConsistentNullReferenceBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectContextOptions.UseConsistentNullReferenceBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property UseConsistentNullReferenceBehavior As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseConsistentNullReferenceBehavior { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseConsistentNullReferenceBehavior : bool with get, set" Usage="System.Data.Objects.ObjectContextOptions.UseConsistentNullReferenceBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52ad9-107">Obtém ou define um valor booliano que determina se deve-se usar o comportamento NullReference consistente.</span><span class="sxs-lookup"><span data-stu-id="52ad9-107">Gets or sets a Boolean value that determines whether to use the consistent NullReference behavior.</span></span></summary>
        <value><span data-ttu-id="52ad9-108"><see langword="true" /> Se o comportamento NullReference consistente deve ser usado; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="52ad9-108"><see langword="true" /> if the consistent NullReference behavior should be used; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52ad9-109">Se esse sinalizador é definido como `false`, em seguida, definindo a propriedade Value do <xref:System.Data.Objects.DataClasses.EntityReference%601> para uma relação FK como nulo quando ele já é nulo não terá efeito.</span><span class="sxs-lookup"><span data-stu-id="52ad9-109">If this flag is set to `false`, then setting the Value property of the <xref:System.Data.Objects.DataClasses.EntityReference%601> for an FK relationship to null when it is already null will have no effect.</span></span> <span data-ttu-id="52ad9-110">Quando esse sinalizador é definido como `true`, em seguida, definindo o valor como nulo sempre causa a FK ser anulada e a relação a ser excluído, mesmo se o valor for nulo no momento.</span><span class="sxs-lookup"><span data-stu-id="52ad9-110">When this flag is set to `true`, then setting the value to null will always cause the FK to be nulled and the relationship to be deleted even if the value is currently null.</span></span> <span data-ttu-id="52ad9-111">O valor padrão é `false` ao usar o ObjectContext e `true` ao usar o DbContext.</span><span class="sxs-lookup"><span data-stu-id="52ad9-111">The default value is `false` when using ObjectContext and `true` when using DbContext.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseCSharpNullComparisonBehavior">
      <MemberSignature Language="C#" Value="public bool UseCSharpNullComparisonBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseCSharpNullComparisonBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectContextOptions.UseCSharpNullComparisonBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property UseCSharpNullComparisonBehavior As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseCSharpNullComparisonBehavior { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseCSharpNullComparisonBehavior : bool with get, set" Usage="System.Data.Objects.ObjectContextOptions.UseCSharpNullComparisonBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52ad9-112">Obtém ou define um valor booliano que determina se deve-se usar o comportamento NullComparison de C#.</span><span class="sxs-lookup"><span data-stu-id="52ad9-112">Gets or sets a Boolean value that determines whether to use the C# NullComparison behavior.</span></span></summary>
        <value><span data-ttu-id="52ad9-113"><see langword="true" /> se o comportamento NullComparison de C# deve ser usado, caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="52ad9-113"><see langword="true" /> if the C# NullComparison behavior should be used; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseLegacyPreserveChangesBehavior">
      <MemberSignature Language="C#" Value="public bool UseLegacyPreserveChangesBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseLegacyPreserveChangesBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectContextOptions.UseLegacyPreserveChangesBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property UseLegacyPreserveChangesBehavior As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseLegacyPreserveChangesBehavior { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseLegacyPreserveChangesBehavior : bool with get, set" Usage="System.Data.Objects.ObjectContextOptions.UseLegacyPreserveChangesBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52ad9-114">Obtém ou define um valor booliano que determina se deve-se usar o comportamento PreserveChanges herdado.</span><span class="sxs-lookup"><span data-stu-id="52ad9-114">Gets or sets a Boolean value that determines whether to use the legacy PreserveChanges behavior.</span></span></summary>
        <value><span data-ttu-id="52ad9-115"><see langword="true" /> Se o comportamento PreserveChanges herdado deve ser usado; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="52ad9-115"><see langword="true" /> if the legacy PreserveChanges behavior should be used; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>