<Type Name="ObjectParameterCollection" FullName="System.Data.Objects.ObjectParameterCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ca0418821dec425ad2f9fbdbe7650ceef7e32ea3" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37677649" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ObjectParameterCollection : System.Collections.Generic.ICollection&lt;System.Data.Objects.ObjectParameter&gt;, System.Collections.Generic.IEnumerable&lt;System.Data.Objects.ObjectParameter&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ObjectParameterCollection extends System.Object implements class System.Collections.Generic.ICollection`1&lt;class System.Data.Objects.ObjectParameter&gt;, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Objects.ObjectParameter&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.ObjectParameterCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ObjectParameterCollection&#xA;Implements ICollection(Of ObjectParameter), IEnumerable(Of ObjectParameter)" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectParameterCollection sealed : System::Collections::Generic::ICollection&lt;System::Data::Objects::ObjectParameter ^&gt;, System::Collections::Generic::IEnumerable&lt;System::Data::Objects::ObjectParameter ^&gt;" />
  <TypeSignature Language="F#" Value="type ObjectParameterCollection = class&#xA;    interface ICollection&lt;ObjectParameter&gt;&#xA;    interface seq&lt;ObjectParameter&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Data.Objects.ObjectParameter&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Data.Objects.ObjectParameter&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="93368-101">Represents the query parameters as <see cref="T:System.Data.Objects.ObjectParameter" /> objects that are defined in an <see cref="T:System.Data.Objects.ObjectQuery`1" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="93368-101">Represents the query parameters as <see cref="T:System.Data.Objects.ObjectParameter" /> objects that are defined in an <see cref="T:System.Data.Objects.ObjectQuery`1" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93368-102">Representa os parâmetros de consulta como <xref:System.Data.Objects.ObjectParameter> objetos definidos em um <xref:System.Data.Objects.ObjectQuery%601>.</span><span class="sxs-lookup"><span data-stu-id="93368-102">Represents the query parameters as <xref:System.Data.Objects.ObjectParameter> objects defined in an <xref:System.Data.Objects.ObjectQuery%601>.</span></span>  
  
 <span data-ttu-id="93368-103">Essa classe não pode ser herdada.</span><span class="sxs-lookup"><span data-stu-id="93368-103">This class cannot be inherited.</span></span>  
  
 <span data-ttu-id="93368-104">Os parâmetros que são passados para métodos do construtor de consulta são agregados por instâncias sucessivas de uma <xref:System.Data.Objects.ObjectQuery%601> na sequência.</span><span class="sxs-lookup"><span data-stu-id="93368-104">The parameters that are passed to query builder methods are aggregated by successive instances of an <xref:System.Data.Objects.ObjectQuery%601> in the sequence.</span></span> <span data-ttu-id="93368-105">Eles podem ser acessados usando o <xref:System.Data.Objects.ObjectQuery.Parameters%2A> propriedade, que retorna o <xref:System.Data.Objects.ObjectParameterCollection>.</span><span class="sxs-lookup"><span data-stu-id="93368-105">They can be accessed by using the <xref:System.Data.Objects.ObjectQuery.Parameters%2A> property, which returns the <xref:System.Data.Objects.ObjectParameterCollection>.</span></span> <span data-ttu-id="93368-106">Depois de adicionar parâmetros, eles poderão ser removidos da coleção e a coleção pode ser limpa, desde que a consulta não foi compilada ou executada.</span><span class="sxs-lookup"><span data-stu-id="93368-106">After parameters have been added, they can be removed from the collection and the collection can be cleared, as long as the query has not been compiled or executed.</span></span> <span data-ttu-id="93368-107">Nomes de parâmetro não podem ser alterados, mas valores podem ser alterados a qualquer momento.</span><span class="sxs-lookup"><span data-stu-id="93368-107">Parameter names cannot be changed, but values can be changed at any time.</span></span>  
  
 <span data-ttu-id="93368-108">Os parâmetros devem ser exclusivos no <xref:System.Data.Objects.ObjectParameterCollection>.</span><span class="sxs-lookup"><span data-stu-id="93368-108">Parameters must be unique in the <xref:System.Data.Objects.ObjectParameterCollection>.</span></span> <span data-ttu-id="93368-109">Não pode haver dois parâmetros na coleção com o mesmo nome.</span><span class="sxs-lookup"><span data-stu-id="93368-109">There cannot be two parameters in the collection with the same name.</span></span>  
  
 <span data-ttu-id="93368-110">Ao usar os métodos de composição, como <xref:System.Data.Objects.ObjectQuery%601.Union%2A>, <xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A>, <xref:System.Data.Objects.ObjectQuery%601.Intersect%2A> e <xref:System.Data.Objects.ObjectQuery%601.Except%2A>, os parâmetros são mesclados.</span><span class="sxs-lookup"><span data-stu-id="93368-110">When using composition methods, such as <xref:System.Data.Objects.ObjectQuery%601.Union%2A>, <xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A>, <xref:System.Data.Objects.ObjectQuery%601.Intersect%2A> and <xref:System.Data.Objects.ObjectQuery%601.Except%2A>, the parameters are merged.</span></span> <span data-ttu-id="93368-111">Uma exceção é lançada quando os conjuntos de parâmetros são incompatíveis ou incompleta.</span><span class="sxs-lookup"><span data-stu-id="93368-111">An exception is thrown when the sets of parameters are incompatible or incomplete.</span></span> <span data-ttu-id="93368-112">Para obter mais informações, consulte [métodos de construtor de consulta](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).</span><span class="sxs-lookup"><span data-stu-id="93368-112">For more information, see [Query Builder Methods](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93368-113">O exemplo neste tópico se baseia a [modelo de vendas AdventureWorks](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="93368-113">The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="93368-114">O exemplo adiciona novos parâmetros à coleção e obtém a contagem dos parâmetros na coleção.</span><span class="sxs-lookup"><span data-stu-id="93368-114">The example adds new parameters to the collection and gets the count of the parameters in the collection.</span></span> <span data-ttu-id="93368-115">Em seguida, ele itera por meio de <xref:System.Data.Objects.ObjectParameterCollection> e exibe o nome, tipo e valor de cada parâmetro na coleção.</span><span class="sxs-lookup"><span data-stu-id="93368-115">Then it iterates through the <xref:System.Data.Objects.ObjectParameterCollection> and displays the name, type, and value of each parameter in the collection.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectParameterCollection_Count_Add_Indexer](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectparametercollection_count_add_indexer)]
 [!code-vb[DP ObjectServices Concepts#ObjectParameterCollection_Count_Add_Indexer](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectparametercollection_count_add_indexer)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Data.Objects.ObjectParameter parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(class System.Data.Objects.ObjectParameter parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameterCollection.Add(System.Data.Objects.ObjectParameter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (parameter As ObjectParameter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::Data::Objects::ObjectParameter ^ parameter);" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Data.Objects.ObjectParameter -&gt; unit&#xA;override this.Add : System.Data.Objects.ObjectParameter -&gt; unit" Usage="objectParameterCollection.Add parameter" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Data.Objects.ObjectParameter" />
      </Parameters>
      <Docs>
        <param name="parameter">
          <span data-ttu-id="93368-116">The parameter to add to the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93368-116">The parameter to add to the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93368-117">Adds the specified <see cref="T:System.Data.Objects.ObjectParameter" /> to the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93368-117">Adds the specified <see cref="T:System.Data.Objects.ObjectParameter" /> to the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93368-118">Depois de adicionar parâmetros, eles poderão ser removidos da coleção e a coleção pode ser limpa, desde que a consulta não foi compilada ou executada.</span><span class="sxs-lookup"><span data-stu-id="93368-118">After parameters have been added, they can be removed from the collection and the collection can be cleared, as long as the query has not been compiled or executed.</span></span> <span data-ttu-id="93368-119">Nomes de parâmetro não podem ser alterados, mas valores podem ser alterados a qualquer momento.</span><span class="sxs-lookup"><span data-stu-id="93368-119">Parameter names cannot be changed, but values can be changed at any time.</span></span>  
  
 <span data-ttu-id="93368-120">Os parâmetros devem ser exclusivos no <xref:System.Data.Objects.ObjectParameterCollection>.</span><span class="sxs-lookup"><span data-stu-id="93368-120">Parameters must be unique in the <xref:System.Data.Objects.ObjectParameterCollection>.</span></span> <span data-ttu-id="93368-121">Não pode haver dois parâmetros na coleção com o mesmo nome.</span><span class="sxs-lookup"><span data-stu-id="93368-121">There cannot be two parameters in the collection with the same name.</span></span> <span data-ttu-id="93368-122">Para obter mais informações, consulte [métodos de construtor de consulta](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).</span><span class="sxs-lookup"><span data-stu-id="93368-122">For more information, see [Query Builder Methods](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93368-123">O exemplo neste tópico se baseia a [modelo de vendas AdventureWorks](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="93368-123">The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="93368-124">O exemplo adiciona novos parâmetros à coleção.</span><span class="sxs-lookup"><span data-stu-id="93368-124">The example adds new parameters to the collection.</span></span> <span data-ttu-id="93368-125">Ele itera por meio de <xref:System.Data.Objects.ObjectParameterCollection> e exibe o nome, tipo e valor de cada parâmetro na coleção.</span><span class="sxs-lookup"><span data-stu-id="93368-125">It iterates through the <xref:System.Data.Objects.ObjectParameterCollection> and displays the name, type, and value of each parameter in the collection.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectParameterCollection_Count_Add_Indexer](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectparametercollection_count_add_indexer)]
 [!code-vb[DP ObjectServices Concepts#ObjectParameterCollection_Count_Add_Indexer](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectparametercollection_count_add_indexer)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="93368-126">The <paramref name="parameter" /> argument is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93368-126">The <paramref name="parameter" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="93368-127">The <paramref name="parameter" /> argument already exists in the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93368-127">The <paramref name="parameter" /> argument already exists in the collection.</span>
          </span>
          <span data-ttu-id="93368-128">This behavior differs from that of most collections that allow duplicate entries.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93368-128">This behavior differs from that of most collections that allow duplicate entries.</span>
          </span>
          <span data-ttu-id="93368-129">-or-  Another parameter with the same name as the <paramref name="parameter" /> argument already exists in the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93368-129">-or-  Another parameter with the same name as the <paramref name="parameter" /> argument already exists in the collection.</span>
          </span>
          <span data-ttu-id="93368-130">Note that the lookup is case-insensitive.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93368-130">Note that the lookup is case-insensitive.</span>
          </span>
          <span data-ttu-id="93368-131">This behavior differs from that of most collections, and is more like that of a <see cref="T:System.Collections.Generic.Dictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93368-131">This behavior differs from that of most collections, and is more like that of a <see cref="T:System.Collections.Generic.Dictionary`2" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="93368-132">The type of the <paramref name="parameter" /> is not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93368-132">The type of the <paramref name="parameter" /> is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameterCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="objectParameterCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="93368-133">Deletes all <see cref="T:System.Data.Objects.ObjectParameter" /> instances from the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93368-133">Deletes all <see cref="T:System.Data.Objects.ObjectParameter" /> instances from the collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Contains">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="93368-134">Checks for the existence of a specified <see cref="T:System.Data.Objects.ObjectParameter" /> in the collection by reference.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93368-134">Checks for the existence of a specified <see cref="T:System.Data.Objects.ObjectParameter" /> in the collection by reference.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Data.Objects.ObjectParameter parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(class System.Data.Objects.ObjectParameter parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameterCollection.Contains(System.Data.Objects.ObjectParameter)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (parameter As ObjectParameter) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Data::Objects::ObjectParameter ^ parameter);" />
      <MemberSignature Language="F#" Value="abstract member Contains : System.Data.Objects.ObjectParameter -&gt; bool&#xA;override this.Contains : System.Data.Objects.ObjectParameter -&gt; bool" Usage="objectParameterCollection.Contains parameter" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Data.Objects.ObjectParameter" />
      </Parameters>
      <Docs>
        <param name="parameter">
          <span data-ttu-id="93368-135">The <see cref="T:System.Data.Objects.ObjectParameter" /> to find in the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93368-135">The <see cref="T:System.Data.Objects.ObjectParameter" /> to find in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93368-136">Checks for the existence of a specified <see cref="T:System.Data.Objects.ObjectParameter" /> in the collection by reference.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93368-136">Checks for the existence of a specified <see cref="T:System.Data.Objects.ObjectParameter" /> in the collection by reference.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93368-137">Returns <see langword="true" /> if the parameter object was found in the collection; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93368-137">Returns <see langword="true" /> if the parameter object was found in the collection; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93368-138">Essa é uma verificação de base de referência.</span><span class="sxs-lookup"><span data-stu-id="93368-138">This is a reference-based check.</span></span> <span data-ttu-id="93368-139">Ou seja, se um <xref:System.Data.Objects.ObjectParameter> for especificado que contém o mesmo nome que um objeto de parâmetro na coleção, esse método retornará apenas `true` se ele é o mesmo objeto.</span><span class="sxs-lookup"><span data-stu-id="93368-139">That is, if an <xref:System.Data.Objects.ObjectParameter> is specified that contains the same name as a parameter object in the collection, this method will only return `true` if it is the same object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="93368-140">The <paramref name="parameter" /> argument is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93368-140">The <paramref name="parameter" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameterCollection.Contains(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.Contains : string -&gt; bool" Usage="objectParameterCollection.Contains name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="93368-141">The name of the parameter to look for in the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93368-141">The name of the parameter to look for in the collection.</span>
          </span>
          <span data-ttu-id="93368-142">This name should not include the "@" parameter marker that is used in the [!INCLUDE[esql](~/includes/esql-md.md)] statements, only the actual name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93368-142">This name should not include the "@" parameter marker that is used in the [!INCLUDE[esql](~/includes/esql-md.md)] statements, only the actual name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93368-143">Determines whether an <see cref="T:System.Data.Objects.ObjectParameter" /> with the specified name is in the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93368-143">Determines whether an <see cref="T:System.Data.Objects.ObjectParameter" /> with the specified name is in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93368-144">Returns <see langword="true" /> if a parameter with the specified name was found in the collection; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93368-144">Returns <see langword="true" /> if a parameter with the specified name was found in the collection; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93368-145">O exemplo neste tópico se baseia a [modelo de vendas AdventureWorks](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="93368-145">The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="93368-146">O exemplo usa o <xref:System.Data.Objects.ObjectParameterCollection.Contains%2A> método para determinar se o parâmetro especificado está na coleção.</span><span class="sxs-lookup"><span data-stu-id="93368-146">The example uses the <xref:System.Data.Objects.ObjectParameterCollection.Contains%2A> method to determine whether the specified parameter is in the collection.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectParameterCollection_StringArg](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectparametercollection_stringarg)]
 [!code-vb[DP ObjectServices Concepts#ObjectParameterCollection_StringArg](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectparametercollection_stringarg)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="93368-147">The <paramref name="name" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93368-147">The <paramref name="name" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Data.Objects.ObjectParameter[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Data.Objects.ObjectParameter[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameterCollection.CopyTo(System.Data.Objects.ObjectParameter[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As ObjectParameter(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;System::Data::Objects::ObjectParameter ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : System.Data.Objects.ObjectParameter[] * int -&gt; unit&#xA;override this.CopyTo : System.Data.Objects.ObjectParameter[] * int -&gt; unit" Usage="objectParameterCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Data.Objects.ObjectParameter[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="93368-148">The array into which to copy the parameters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93368-148">The array into which to copy the parameters.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="93368-149">The index in the array at which to start copying the parameters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93368-149">The index in the array at which to start copying the parameters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93368-150">Allows the parameters in the collection to be copied into a supplied array, starting with the object at the specified index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93368-150">Allows the parameters in the collection to be copied into a supplied array, starting with the object at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93368-151">O exemplo neste tópico se baseia a [modelo de vendas AdventureWorks](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="93368-151">The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="93368-152">O exemplo copia os parâmetros na matriz especificada.</span><span class="sxs-lookup"><span data-stu-id="93368-152">The example copies the parameters into the specified array.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectParameterCollection_CopyTo](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectparametercollection_copyto)]
 [!code-vb[DP ObjectServices Concepts#ObjectParameterCollection_CopyTo](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectparametercollection_copyto)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectParameterCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Data.Objects.ObjectParameterCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="93368-153">Gets the number of parameters currently in the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93368-153">Gets the number of parameters currently in the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="93368-154">O número de <see cref="T:System.Data.Objects.ObjectParameter" /> objetos que estão atualmente na coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93368-154">The number of <see cref="T:System.Data.Objects.ObjectParameter" /> objects that are currently in the collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93368-155">O exemplo neste tópico se baseia a [modelo de vendas AdventureWorks](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="93368-155">The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="93368-156">O exemplo adiciona novos parâmetros à coleção e obtém a contagem dos parâmetros na coleção.</span><span class="sxs-lookup"><span data-stu-id="93368-156">The example adds new parameters to the collection and gets the count of the parameters in the collection.</span></span> <span data-ttu-id="93368-157">Em seguida, ele itera por meio de <xref:System.Data.Objects.ObjectParameterCollection> e exibe o nome, tipo e valor de cada parâmetro na coleção.</span><span class="sxs-lookup"><span data-stu-id="93368-157">Then it iterates through the <xref:System.Data.Objects.ObjectParameterCollection> and displays the name, type, and value of each parameter in the collection.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectParameterCollection_Count_Add_Indexer](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectparametercollection_count_add_indexer)]
 [!code-vb[DP ObjectServices Concepts#ObjectParameterCollection_Count_Add_Indexer](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectparametercollection_count_add_indexer)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectParameter this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Objects.ObjectParameter Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectParameterCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(name As String) As ObjectParameter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Objects::ObjectParameter ^ default[System::String ^] { System::Data::Objects::ObjectParameter ^ get(System::String ^ name); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Data.Objects.ObjectParameter" Usage="System.Data.Objects.ObjectParameterCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectParameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="93368-158">The name of the parameter to find.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93368-158">The name of the parameter to find.</span>
          </span>
          <span data-ttu-id="93368-159">This name should not include the "@" parameter marker that is used in the [!INCLUDE[esql](~/includes/esql-md.md)] statements, only the actual name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93368-159">This name should not include the "@" parameter marker that is used in the [!INCLUDE[esql](~/includes/esql-md.md)] statements, only the actual name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93368-160">Provides an indexer that allows callers to retrieve parameters by name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93368-160">Provides an indexer that allows callers to retrieve parameters by name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="93368-161">A instância <see cref="T:System.Data.Objects.ObjectParameter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93368-161">The <see cref="T:System.Data.Objects.ObjectParameter" /> instance.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="93368-162">No parameter with the specified name is found in the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93368-162">No parameter with the specified name is found in the collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (System.Data.Objects.ObjectParameter parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(class System.Data.Objects.ObjectParameter parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameterCollection.Remove(System.Data.Objects.ObjectParameter)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (parameter As ObjectParameter) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(System::Data::Objects::ObjectParameter ^ parameter);" />
      <MemberSignature Language="F#" Value="abstract member Remove : System.Data.Objects.ObjectParameter -&gt; bool&#xA;override this.Remove : System.Data.Objects.ObjectParameter -&gt; bool" Usage="objectParameterCollection.Remove parameter" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Data.Objects.ObjectParameter" />
      </Parameters>
      <Docs>
        <param name="parameter">
          <span data-ttu-id="93368-163">An object to remove from the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93368-163">An object to remove from the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93368-164">Removes an instance of an <see cref="T:System.Data.Objects.ObjectParameter" /> from the collection by reference if it exists in the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93368-164">Removes an instance of an <see cref="T:System.Data.Objects.ObjectParameter" /> from the collection by reference if it exists in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93368-165">Returns <see langword="true" /> if the parameter object was found and removed from the collection; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93368-165">Returns <see langword="true" /> if the parameter object was found and removed from the collection; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93368-166">Esta é uma comparação de referência com base no.</span><span class="sxs-lookup"><span data-stu-id="93368-166">This is a reference-based comparison.</span></span> <span data-ttu-id="93368-167">Ou seja, se um objeto de parâmetro de consulta for especificado, que contém o mesmo nome que um objeto de parâmetro na coleção, o parâmetro na coleção será removido somente se ele é o mesmo objeto.</span><span class="sxs-lookup"><span data-stu-id="93368-167">That is, if a query parameter object is specified that contains the same name as a parameter object in the collection, the parameter in the collection will only be removed if it is the same object.</span></span> <span data-ttu-id="93368-168">Para remover um objeto por nome, primeiro use o indexador para recuperar a instância de parâmetro e removê-la usando esse método.</span><span class="sxs-lookup"><span data-stu-id="93368-168">To remove an object by name, first use the indexer to retrieve the parameter instance, then remove it by using this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93368-169">O exemplo neste tópico se baseia a [modelo de vendas AdventureWorks](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="93368-169">The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="93368-170">O exemplo adiciona dois parâmetros à coleção e, em seguida, remove os parâmetros.</span><span class="sxs-lookup"><span data-stu-id="93368-170">The example adds two parameters to the collection and then removes the parameters.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectParameterCollection_Remove](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectparametercollection_remove)]
 [!code-vb[DP ObjectServices Concepts#ObjectParameterCollection_Remove](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectparametercollection_remove)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="93368-171">The <paramref name="parameter" /> argument is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93368-171">The <paramref name="parameter" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Data.Objects.ObjectParameter&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;System.Data.Objects.ObjectParameter&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;System.Data.Objects.ObjectParameter&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectParameterCollection.System#Collections#Generic#ICollection&lt;System#Data#Objects#ObjectParameter&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of ObjectParameter).IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.Generic.ICollection&lt;System.Data.Objects.ObjectParameter&gt;.IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Data.Objects.ObjectParameterCollection.System.Collections.Generic.ICollection&lt;System.Data.Objects.ObjectParameter&gt;.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="93368-172">Gets a value that indicates whether the collection is read-only or can be modified.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93368-172">Gets a value that indicates whether the collection is read-only or can be modified.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="93368-173">Um valor booliano que será <see langword="true" /> se a coleção é somente leitura e <see langword="false" /> da coleção pode ser modificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93368-173">A Boolean value that is <see langword="true" /> if the collection is read-only and <see langword="false" /> of the collection can be modified.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93368-174">Essa coleção é sempre de leitura/gravação; parâmetros podem ser adicionados, removidos e modificados.</span><span class="sxs-lookup"><span data-stu-id="93368-174">This collection is always read/write; parameters can be added, removed, and modified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Data.Objects.ObjectParameter&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;System.Data.Objects.ObjectParameter&gt; IEnumerable&lt;ObjectParameter&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class System.Data.Objects.ObjectParameter&gt; System.Collections.Generic.IEnumerable&lt;System.Data.Objects.ObjectParameter&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameterCollection.System#Collections#Generic#IEnumerable&lt;System#Data#Objects#ObjectParameter&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of ObjectParameter) Implements IEnumerable(Of ObjectParameter).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;System::Data::Objects::ObjectParameter ^&gt; ^ System.Collections.Generic.IEnumerable&lt;System.Data.Objects.ObjectParameter&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;System::Data::Objects::ObjectParameter ^&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Data.Objects.ObjectParameter&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="93368-175">Returns a typed enumerator over the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93368-175">Returns a typed enumerator over the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93368-176">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> of type <see cref="T:System.Data.Objects.ObjectParameter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93368-176">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> of type <see cref="T:System.Data.Objects.ObjectParameter" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93368-177">Retorna uma instância de <xref:System.Collections.Generic.IEnumerator%601>.</span><span class="sxs-lookup"><span data-stu-id="93368-177">Returns an <xref:System.Collections.Generic.IEnumerator%601> instance.</span></span> <span data-ttu-id="93368-178">Isso permite que a coleção a ser iterado por meio e percorrido.</span><span class="sxs-lookup"><span data-stu-id="93368-178">This allows the collection to be iterated through and traversed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameterCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="93368-179">Returns an untyped enumerator over the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93368-179">Returns an untyped enumerator over the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93368-180">An <see cref="T:System.Collections.IEnumerator" /> instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93368-180">An <see cref="T:System.Collections.IEnumerator" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93368-181">Retorna um enumerador não tipado pela coleção.</span><span class="sxs-lookup"><span data-stu-id="93368-181">Returns an untyped enumerator over the collection.</span></span> <span data-ttu-id="93368-182">Isso permite que a coleção a ser iterado por meio e percorrido.</span><span class="sxs-lookup"><span data-stu-id="93368-182">This allows the collection to be iterated through and traversed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>