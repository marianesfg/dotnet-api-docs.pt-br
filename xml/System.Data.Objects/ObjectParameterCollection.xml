<Type Name="ObjectParameterCollection" FullName="System.Data.Objects.ObjectParameterCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="00f0b6365bb0246d880a744f02843764781db673" />
    <Meta Name="ms.sourcegitcommit" Value="d40b35262cbc997b79bf76da3a39ccf59b738efc" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="12/05/2018" />
    <Meta Name="ms.locfileid" Value="52910334" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ObjectParameterCollection : System.Collections.Generic.ICollection&lt;System.Data.Objects.ObjectParameter&gt;, System.Collections.Generic.IEnumerable&lt;System.Data.Objects.ObjectParameter&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ObjectParameterCollection extends System.Object implements class System.Collections.Generic.ICollection`1&lt;class System.Data.Objects.ObjectParameter&gt;, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Objects.ObjectParameter&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.ObjectParameterCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ObjectParameterCollection&#xA;Implements ICollection(Of ObjectParameter), IEnumerable(Of ObjectParameter)" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectParameterCollection sealed : System::Collections::Generic::ICollection&lt;System::Data::Objects::ObjectParameter ^&gt;, System::Collections::Generic::IEnumerable&lt;System::Data::Objects::ObjectParameter ^&gt;" />
  <TypeSignature Language="F#" Value="type ObjectParameterCollection = class&#xA;    interface ICollection&lt;ObjectParameter&gt;&#xA;    interface seq&lt;ObjectParameter&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Data.Objects.ObjectParameter&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Data.Objects.ObjectParameter&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="72c5d-101">Representa os parâmetros de consulta como objetos <see cref="T:System.Data.Objects.ObjectParameter" /> que são definidos em um <see cref="T:System.Data.Objects.ObjectQuery`1" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="72c5d-101">Represents the query parameters as <see cref="T:System.Data.Objects.ObjectParameter" /> objects that are defined in an <see cref="T:System.Data.Objects.ObjectQuery`1" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72c5d-102">Representa os parâmetros de consulta como <xref:System.Data.Objects.ObjectParameter> objetos definidos em um <xref:System.Data.Objects.ObjectQuery%601>.</span><span class="sxs-lookup"><span data-stu-id="72c5d-102">Represents the query parameters as <xref:System.Data.Objects.ObjectParameter> objects defined in an <xref:System.Data.Objects.ObjectQuery%601>.</span></span>  
  
 <span data-ttu-id="72c5d-103">Essa classe não pode ser herdada.</span><span class="sxs-lookup"><span data-stu-id="72c5d-103">This class cannot be inherited.</span></span>  
  
 <span data-ttu-id="72c5d-104">Os parâmetros que são passados para métodos do construtor de consulta são agregados por instâncias sucessivas de uma <xref:System.Data.Objects.ObjectQuery%601> na sequência.</span><span class="sxs-lookup"><span data-stu-id="72c5d-104">The parameters that are passed to query builder methods are aggregated by successive instances of an <xref:System.Data.Objects.ObjectQuery%601> in the sequence.</span></span> <span data-ttu-id="72c5d-105">Eles podem ser acessados usando o <xref:System.Data.Objects.ObjectQuery.Parameters%2A> propriedade, que retorna o <xref:System.Data.Objects.ObjectParameterCollection>.</span><span class="sxs-lookup"><span data-stu-id="72c5d-105">They can be accessed by using the <xref:System.Data.Objects.ObjectQuery.Parameters%2A> property, which returns the <xref:System.Data.Objects.ObjectParameterCollection>.</span></span> <span data-ttu-id="72c5d-106">Depois de adicionar parâmetros, eles poderão ser removidos da coleção e a coleção pode ser limpa, desde que a consulta não foi compilada ou executada.</span><span class="sxs-lookup"><span data-stu-id="72c5d-106">After parameters have been added, they can be removed from the collection and the collection can be cleared, as long as the query has not been compiled or executed.</span></span> <span data-ttu-id="72c5d-107">Nomes de parâmetro não podem ser alterados, mas valores podem ser alterados a qualquer momento.</span><span class="sxs-lookup"><span data-stu-id="72c5d-107">Parameter names cannot be changed, but values can be changed at any time.</span></span>  
  
 <span data-ttu-id="72c5d-108">Os parâmetros devem ser exclusivos no <xref:System.Data.Objects.ObjectParameterCollection>.</span><span class="sxs-lookup"><span data-stu-id="72c5d-108">Parameters must be unique in the <xref:System.Data.Objects.ObjectParameterCollection>.</span></span> <span data-ttu-id="72c5d-109">Não pode haver dois parâmetros na coleção com o mesmo nome.</span><span class="sxs-lookup"><span data-stu-id="72c5d-109">There cannot be two parameters in the collection with the same name.</span></span>  
  
 <span data-ttu-id="72c5d-110">Ao usar os métodos de composição, como <xref:System.Data.Objects.ObjectQuery%601.Union%2A>, <xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A>, <xref:System.Data.Objects.ObjectQuery%601.Intersect%2A> e <xref:System.Data.Objects.ObjectQuery%601.Except%2A>, os parâmetros são mesclados.</span><span class="sxs-lookup"><span data-stu-id="72c5d-110">When using composition methods, such as <xref:System.Data.Objects.ObjectQuery%601.Union%2A>, <xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A>, <xref:System.Data.Objects.ObjectQuery%601.Intersect%2A> and <xref:System.Data.Objects.ObjectQuery%601.Except%2A>, the parameters are merged.</span></span> <span data-ttu-id="72c5d-111">Uma exceção é lançada quando os conjuntos de parâmetros são incompatíveis ou incompleta.</span><span class="sxs-lookup"><span data-stu-id="72c5d-111">An exception is thrown when the sets of parameters are incompatible or incomplete.</span></span> <span data-ttu-id="72c5d-112">Para obter mais informações, consulte [métodos de construtor de consulta](https://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).</span><span class="sxs-lookup"><span data-stu-id="72c5d-112">For more information, see [Query Builder Methods](https://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72c5d-113">O exemplo neste tópico se baseia a [modelo de vendas AdventureWorks](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="72c5d-113">The example in this topic is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="72c5d-114">O exemplo adiciona novos parâmetros à coleção e obtém a contagem dos parâmetros na coleção.</span><span class="sxs-lookup"><span data-stu-id="72c5d-114">The example adds new parameters to the collection and gets the count of the parameters in the collection.</span></span> <span data-ttu-id="72c5d-115">Em seguida, ele itera por meio de <xref:System.Data.Objects.ObjectParameterCollection> e exibe o nome, tipo e valor de cada parâmetro na coleção.</span><span class="sxs-lookup"><span data-stu-id="72c5d-115">Then it iterates through the <xref:System.Data.Objects.ObjectParameterCollection> and displays the name, type, and value of each parameter in the collection.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectParameterCollection_Count_Add_Indexer](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectparametercollection_count_add_indexer)]
 [!code-vb[DP ObjectServices Concepts#ObjectParameterCollection_Count_Add_Indexer](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectparametercollection_count_add_indexer)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md">
      <span data-ttu-id="72c5d-116">Consultando dados como objetos e formatação de resultados (Entity Framework)</span>
      <span class="sxs-lookup">
        <span data-stu-id="72c5d-116">Querying Data as Objects and Shaping Results (Entity Framework)</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Data.Objects.ObjectParameter parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(class System.Data.Objects.ObjectParameter parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameterCollection.Add(System.Data.Objects.ObjectParameter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (parameter As ObjectParameter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::Data::Objects::ObjectParameter ^ parameter);" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Data.Objects.ObjectParameter -&gt; unit&#xA;override this.Add : System.Data.Objects.ObjectParameter -&gt; unit" Usage="objectParameterCollection.Add parameter" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Data.Objects.ObjectParameter" />
      </Parameters>
      <Docs>
        <param name="parameter">
          <span data-ttu-id="72c5d-117">O parâmetro a adicionar à coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72c5d-117">The parameter to add to the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72c5d-118">Adiciona o <see cref="T:System.Data.Objects.ObjectParameter" /> especificado à coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72c5d-118">Adds the specified <see cref="T:System.Data.Objects.ObjectParameter" /> to the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72c5d-119">Depois de adicionar parâmetros, eles poderão ser removidos da coleção e a coleção pode ser limpa, desde que a consulta não foi compilada ou executada.</span><span class="sxs-lookup"><span data-stu-id="72c5d-119">After parameters have been added, they can be removed from the collection and the collection can be cleared, as long as the query has not been compiled or executed.</span></span> <span data-ttu-id="72c5d-120">Nomes de parâmetro não podem ser alterados, mas valores podem ser alterados a qualquer momento.</span><span class="sxs-lookup"><span data-stu-id="72c5d-120">Parameter names cannot be changed, but values can be changed at any time.</span></span>  
  
 <span data-ttu-id="72c5d-121">Os parâmetros devem ser exclusivos no <xref:System.Data.Objects.ObjectParameterCollection>.</span><span class="sxs-lookup"><span data-stu-id="72c5d-121">Parameters must be unique in the <xref:System.Data.Objects.ObjectParameterCollection>.</span></span> <span data-ttu-id="72c5d-122">Não pode haver dois parâmetros na coleção com o mesmo nome.</span><span class="sxs-lookup"><span data-stu-id="72c5d-122">There cannot be two parameters in the collection with the same name.</span></span> <span data-ttu-id="72c5d-123">Para obter mais informações, consulte [métodos de construtor de consulta](https://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).</span><span class="sxs-lookup"><span data-stu-id="72c5d-123">For more information, see [Query Builder Methods](https://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72c5d-124">O exemplo neste tópico se baseia a [modelo de vendas AdventureWorks](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="72c5d-124">The example in this topic is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="72c5d-125">O exemplo adiciona novos parâmetros à coleção.</span><span class="sxs-lookup"><span data-stu-id="72c5d-125">The example adds new parameters to the collection.</span></span> <span data-ttu-id="72c5d-126">Ele itera por meio de <xref:System.Data.Objects.ObjectParameterCollection> e exibe o nome, tipo e valor de cada parâmetro na coleção.</span><span class="sxs-lookup"><span data-stu-id="72c5d-126">It iterates through the <xref:System.Data.Objects.ObjectParameterCollection> and displays the name, type, and value of each parameter in the collection.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectParameterCollection_Count_Add_Indexer](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectparametercollection_count_add_indexer)]
 [!code-vb[DP ObjectServices Concepts#ObjectParameterCollection_Count_Add_Indexer](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectparametercollection_count_add_indexer)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="72c5d-127">O argumento <paramref name="parameter" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72c5d-127">The <paramref name="parameter" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="72c5d-128">O argumento <paramref name="parameter" /> já existe na coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72c5d-128">The <paramref name="parameter" /> argument already exists in the collection.</span>
          </span>
          <span data-ttu-id="72c5d-129">Esse comportamento é diferente da maioria das coleções que permitem entradas duplicadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72c5d-129">This behavior differs from that of most collections that allow duplicate entries.</span>
          </span>
          <span data-ttu-id="72c5d-130">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="72c5d-130">-or-</span>
          </span>
          <span data-ttu-id="72c5d-131">Outro parâmetro com o mesmo nome que o argumento <paramref name="parameter" /> já existe na coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72c5d-131">Another parameter with the same name as the <paramref name="parameter" /> argument already exists in the collection.</span>
          </span>
          <span data-ttu-id="72c5d-132">Observe que a pesquisa não diferencia maiúsculas de minúsculas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72c5d-132">Note that the lookup is case-insensitive.</span>
          </span>
          <span data-ttu-id="72c5d-133">Esse comportamento é diferente daquele da maioria das coleções e é mais semelhante ao de um <see cref="T:System.Collections.Generic.Dictionary`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72c5d-133">This behavior differs from that of most collections, and is more like that of a <see cref="T:System.Collections.Generic.Dictionary`2" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="72c5d-134">O tipo do <paramref name="parameter" /> não é válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72c5d-134">The type of the <paramref name="parameter" /> is not valid.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md">
          <span data-ttu-id="72c5d-135">Consultando dados como objetos e formatação de resultados (Entity Framework)</span>
          <span class="sxs-lookup">
            <span data-stu-id="72c5d-135">Querying Data as Objects and Shaping Results (Entity Framework)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameterCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="objectParameterCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="72c5d-136">Exclui todas as instâncias <see cref="T:System.Data.Objects.ObjectParameter" /> da coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72c5d-136">Deletes all <see cref="T:System.Data.Objects.ObjectParameter" /> instances from the collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Contains">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="72c5d-137">Verifica a existência de um <see cref="T:System.Data.Objects.ObjectParameter" /> especificado na coleção por referência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72c5d-137">Checks for the existence of a specified <see cref="T:System.Data.Objects.ObjectParameter" /> in the collection by reference.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Data.Objects.ObjectParameter parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(class System.Data.Objects.ObjectParameter parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameterCollection.Contains(System.Data.Objects.ObjectParameter)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (parameter As ObjectParameter) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Data::Objects::ObjectParameter ^ parameter);" />
      <MemberSignature Language="F#" Value="abstract member Contains : System.Data.Objects.ObjectParameter -&gt; bool&#xA;override this.Contains : System.Data.Objects.ObjectParameter -&gt; bool" Usage="objectParameterCollection.Contains parameter" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Data.Objects.ObjectParameter" />
      </Parameters>
      <Docs>
        <param name="parameter">
          <span data-ttu-id="72c5d-138">O <see cref="T:System.Data.Objects.ObjectParameter" /> a ser localizado na coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72c5d-138">The <see cref="T:System.Data.Objects.ObjectParameter" /> to find in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72c5d-139">Verifica a existência de um <see cref="T:System.Data.Objects.ObjectParameter" /> especificado na coleção por referência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72c5d-139">Checks for the existence of a specified <see cref="T:System.Data.Objects.ObjectParameter" /> in the collection by reference.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="72c5d-140">Retornará <see langword="true" /> se o objeto de parâmetro tiver sido encontrado na coleção; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72c5d-140">Returns <see langword="true" /> if the parameter object was found in the collection; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72c5d-141">Essa é uma verificação de base de referência.</span><span class="sxs-lookup"><span data-stu-id="72c5d-141">This is a reference-based check.</span></span> <span data-ttu-id="72c5d-142">Ou seja, se um <xref:System.Data.Objects.ObjectParameter> for especificado que contém o mesmo nome que um objeto de parâmetro na coleção, esse método retornará apenas `true` se ele é o mesmo objeto.</span><span class="sxs-lookup"><span data-stu-id="72c5d-142">That is, if an <xref:System.Data.Objects.ObjectParameter> is specified that contains the same name as a parameter object in the collection, this method will only return `true` if it is the same object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="72c5d-143">O argumento <paramref name="parameter" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72c5d-143">The <paramref name="parameter" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameterCollection.Contains(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.Contains : string -&gt; bool" Usage="objectParameterCollection.Contains name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="72c5d-144">O nome do parâmetro a ser pesquisado na coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72c5d-144">The name of the parameter to look for in the collection.</span>
          </span>
          <span data-ttu-id="72c5d-145">Esse nome não deve incluir o marcador de parâmetro "@" que é usado em instruções Entity SQL, apenas o nome real.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72c5d-145">This name should not include the "@" parameter marker that is used in the Entity SQL statements, only the actual name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72c5d-146">Determina se um <see cref="T:System.Data.Objects.ObjectParameter" /> com o nome especificado está na coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72c5d-146">Determines whether an <see cref="T:System.Data.Objects.ObjectParameter" /> with the specified name is in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="72c5d-147">Retornará <see langword="true" /> se um parâmetro com o nome especificado tiver sido encontrado na coleção; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72c5d-147">Returns <see langword="true" /> if a parameter with the specified name was found in the collection; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="72c5d-148">O exemplo neste tópico se baseia a [modelo de vendas AdventureWorks](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="72c5d-148">The example in this topic is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="72c5d-149">O exemplo usa o <xref:System.Data.Objects.ObjectParameterCollection.Contains%2A> método para determinar se o parâmetro especificado está na coleção.</span><span class="sxs-lookup"><span data-stu-id="72c5d-149">The example uses the <xref:System.Data.Objects.ObjectParameterCollection.Contains%2A> method to determine whether the specified parameter is in the collection.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectParameterCollection_StringArg](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectparametercollection_stringarg)]
 [!code-vb[DP ObjectServices Concepts#ObjectParameterCollection_StringArg](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectparametercollection_stringarg)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="72c5d-150">O parâmetro <paramref name="name" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72c5d-150">The <paramref name="name" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Data.Objects.ObjectParameter[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Data.Objects.ObjectParameter[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameterCollection.CopyTo(System.Data.Objects.ObjectParameter[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As ObjectParameter(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;System::Data::Objects::ObjectParameter ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : System.Data.Objects.ObjectParameter[] * int -&gt; unit&#xA;override this.CopyTo : System.Data.Objects.ObjectParameter[] * int -&gt; unit" Usage="objectParameterCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Data.Objects.ObjectParameter[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="72c5d-151">A matriz na qual copiar os parâmetros.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72c5d-151">The array into which to copy the parameters.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="72c5d-152">O índice na matriz na qual iniciar a cópia dos parâmetros.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72c5d-152">The index in the array at which to start copying the parameters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72c5d-153">Permite que os parâmetros na coleção sejam copiados para uma matriz fornecida, começando com o objeto no índice especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72c5d-153">Allows the parameters in the collection to be copied into a supplied array, starting with the object at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="72c5d-154">O exemplo neste tópico se baseia a [modelo de vendas AdventureWorks](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="72c5d-154">The example in this topic is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="72c5d-155">O exemplo copia os parâmetros na matriz especificada.</span><span class="sxs-lookup"><span data-stu-id="72c5d-155">The example copies the parameters into the specified array.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectParameterCollection_CopyTo](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectparametercollection_copyto)]
 [!code-vb[DP ObjectServices Concepts#ObjectParameterCollection_CopyTo](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectparametercollection_copyto)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectParameterCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Data.Objects.ObjectParameterCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72c5d-156">Obtém o número de parâmetros que estão na coleção no momento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72c5d-156">Gets the number of parameters currently in the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72c5d-157">O número de <see cref="T:System.Data.Objects.ObjectParameter" /> objetos que estão atualmente na coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72c5d-157">The number of <see cref="T:System.Data.Objects.ObjectParameter" /> objects that are currently in the collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="72c5d-158">O exemplo neste tópico se baseia a [modelo de vendas AdventureWorks](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="72c5d-158">The example in this topic is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="72c5d-159">O exemplo adiciona novos parâmetros à coleção e obtém a contagem dos parâmetros na coleção.</span><span class="sxs-lookup"><span data-stu-id="72c5d-159">The example adds new parameters to the collection and gets the count of the parameters in the collection.</span></span> <span data-ttu-id="72c5d-160">Em seguida, ele itera por meio de <xref:System.Data.Objects.ObjectParameterCollection> e exibe o nome, tipo e valor de cada parâmetro na coleção.</span><span class="sxs-lookup"><span data-stu-id="72c5d-160">Then it iterates through the <xref:System.Data.Objects.ObjectParameterCollection> and displays the name, type, and value of each parameter in the collection.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectParameterCollection_Count_Add_Indexer](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectparametercollection_count_add_indexer)]
 [!code-vb[DP ObjectServices Concepts#ObjectParameterCollection_Count_Add_Indexer](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectparametercollection_count_add_indexer)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md">
          <span data-ttu-id="72c5d-161">Consultando dados como objetos e formatação de resultados (Entity Framework)</span>
          <span class="sxs-lookup">
            <span data-stu-id="72c5d-161">Querying Data as Objects and Shaping Results (Entity Framework)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectParameter this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Objects.ObjectParameter Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectParameterCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(name As String) As ObjectParameter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Objects::ObjectParameter ^ default[System::String ^] { System::Data::Objects::ObjectParameter ^ get(System::String ^ name); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Data.Objects.ObjectParameter" Usage="System.Data.Objects.ObjectParameterCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectParameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="72c5d-162">O nome do parâmetro a ser localizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72c5d-162">The name of the parameter to find.</span>
          </span>
          <span data-ttu-id="72c5d-163">Esse nome não deve incluir o marcador de parâmetro "@" que é usado em instruções Entity SQL, apenas o nome real.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72c5d-163">This name should not include the "@" parameter marker that is used in the Entity SQL statements, only the actual name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72c5d-164">Fornece um indexador que permite que os chamadores recuperem os parâmetros por nome.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72c5d-164">Provides an indexer that allows callers to retrieve parameters by name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72c5d-165">A instância <see cref="T:System.Data.Objects.ObjectParameter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72c5d-165">The <see cref="T:System.Data.Objects.ObjectParameter" /> instance.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="72c5d-166">Nenhum parâmetro com o nome especificado é encontrado na coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72c5d-166">No parameter with the specified name is found in the collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (System.Data.Objects.ObjectParameter parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(class System.Data.Objects.ObjectParameter parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameterCollection.Remove(System.Data.Objects.ObjectParameter)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (parameter As ObjectParameter) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(System::Data::Objects::ObjectParameter ^ parameter);" />
      <MemberSignature Language="F#" Value="abstract member Remove : System.Data.Objects.ObjectParameter -&gt; bool&#xA;override this.Remove : System.Data.Objects.ObjectParameter -&gt; bool" Usage="objectParameterCollection.Remove parameter" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Data.Objects.ObjectParameter" />
      </Parameters>
      <Docs>
        <param name="parameter">
          <span data-ttu-id="72c5d-167">Um objeto a ser removido da coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72c5d-167">An object to remove from the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72c5d-168">Remove uma instância de um <see cref="T:System.Data.Objects.ObjectParameter" /> da coleção fazendo referência a ele, se ele existir na coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72c5d-168">Removes an instance of an <see cref="T:System.Data.Objects.ObjectParameter" /> from the collection by reference if it exists in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="72c5d-169">Retornará <see langword="true" /> se o objeto de parâmetro tiver sido encontrado e removido da coleção; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72c5d-169">Returns <see langword="true" /> if the parameter object was found and removed from the collection; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72c5d-170">Esta é uma comparação de referência com base no.</span><span class="sxs-lookup"><span data-stu-id="72c5d-170">This is a reference-based comparison.</span></span> <span data-ttu-id="72c5d-171">Ou seja, se um objeto de parâmetro de consulta for especificado, que contém o mesmo nome que um objeto de parâmetro na coleção, o parâmetro na coleção será removido somente se ele é o mesmo objeto.</span><span class="sxs-lookup"><span data-stu-id="72c5d-171">That is, if a query parameter object is specified that contains the same name as a parameter object in the collection, the parameter in the collection will only be removed if it is the same object.</span></span> <span data-ttu-id="72c5d-172">Para remover um objeto por nome, primeiro use o indexador para recuperar a instância de parâmetro e removê-la usando esse método.</span><span class="sxs-lookup"><span data-stu-id="72c5d-172">To remove an object by name, first use the indexer to retrieve the parameter instance, then remove it by using this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72c5d-173">O exemplo neste tópico se baseia a [modelo de vendas AdventureWorks](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="72c5d-173">The example in this topic is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="72c5d-174">O exemplo adiciona dois parâmetros à coleção e, em seguida, remove os parâmetros.</span><span class="sxs-lookup"><span data-stu-id="72c5d-174">The example adds two parameters to the collection and then removes the parameters.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectParameterCollection_Remove](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectparametercollection_remove)]
 [!code-vb[DP ObjectServices Concepts#ObjectParameterCollection_Remove](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectparametercollection_remove)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="72c5d-175">O argumento <paramref name="parameter" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72c5d-175">The <paramref name="parameter" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Data.Objects.ObjectParameter&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;System.Data.Objects.ObjectParameter&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;System.Data.Objects.ObjectParameter&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectParameterCollection.System#Collections#Generic#ICollection&lt;System#Data#Objects#ObjectParameter&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of ObjectParameter).IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::Generic::ICollection&lt;System::Data::Objects::ObjectParameter&gt;::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.ICollection&lt;System.Data.Objects.ObjectParameter&gt;.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72c5d-176">Obtém um valor que indica se a coleção é somente leitura ou pode ser modificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72c5d-176">Gets a value that indicates whether the collection is read-only or can be modified.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72c5d-177">Um valor booliano que será <see langword="true" /> se a coleção é somente leitura e <see langword="false" /> da coleção pode ser modificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72c5d-177">A Boolean value that is <see langword="true" /> if the collection is read-only and <see langword="false" /> of the collection can be modified.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72c5d-178">Essa coleção é sempre de leitura/gravação; parâmetros podem ser adicionados, removidos e modificados.</span><span class="sxs-lookup"><span data-stu-id="72c5d-178">This collection is always read/write; parameters can be added, removed, and modified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Data.Objects.ObjectParameter&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;System.Data.Objects.ObjectParameter&gt; IEnumerable&lt;ObjectParameter&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class System.Data.Objects.ObjectParameter&gt; System.Collections.Generic.IEnumerable&lt;System.Data.Objects.ObjectParameter&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameterCollection.System#Collections#Generic#IEnumerable&lt;System#Data#Objects#ObjectParameter&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of ObjectParameter) Implements IEnumerable(Of ObjectParameter).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;System::Data::Objects::ObjectParameter ^&gt; ^ System.Collections.Generic.IEnumerable&lt;System.Data.Objects.ObjectParameter&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;System::Data::Objects::ObjectParameter ^&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Data.Objects.ObjectParameter&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="72c5d-179">Retorna um enumerador tipado pela coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72c5d-179">Returns a typed enumerator over the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="72c5d-180">Um <see cref="T:System.Collections.Generic.IEnumerator`1" /> do tipo <see cref="T:System.Data.Objects.ObjectParameter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72c5d-180">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> of type <see cref="T:System.Data.Objects.ObjectParameter" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72c5d-181">Retorna uma instância de <xref:System.Collections.Generic.IEnumerator%601>.</span><span class="sxs-lookup"><span data-stu-id="72c5d-181">Returns an <xref:System.Collections.Generic.IEnumerator%601> instance.</span></span> <span data-ttu-id="72c5d-182">Isso permite que a coleção a ser iterado por meio e percorrido.</span><span class="sxs-lookup"><span data-stu-id="72c5d-182">This allows the collection to be iterated through and traversed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameterCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="72c5d-183">Retorna um enumerador não tipado pela coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72c5d-183">Returns an untyped enumerator over the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="72c5d-184">Uma instância <see cref="T:System.Collections.IEnumerator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72c5d-184">An <see cref="T:System.Collections.IEnumerator" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72c5d-185">Retorna um enumerador não tipado pela coleção.</span><span class="sxs-lookup"><span data-stu-id="72c5d-185">Returns an untyped enumerator over the collection.</span></span> <span data-ttu-id="72c5d-186">Isso permite que a coleção a ser iterado por meio e percorrido.</span><span class="sxs-lookup"><span data-stu-id="72c5d-186">This allows the collection to be iterated through and traversed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>