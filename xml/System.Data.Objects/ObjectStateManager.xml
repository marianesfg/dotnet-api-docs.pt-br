<Type Name="ObjectStateManager" FullName="System.Data.Objects.ObjectStateManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ac1ba80e294bdf91b1aa64f1e025d3203ca1c927" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37678221" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ObjectStateManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ObjectStateManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.ObjectStateManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ObjectStateManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectStateManager" />
  <TypeSignature Language="F#" Value="type ObjectStateManager = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Mantém o estado de objeto e o gerenciamento de identidade para instâncias de relação e instâncias de tipo de entidade.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Objects.ObjectStateManager> rastreia os resultados da consulta e fornece a lógica para mesclar vários resultados de consulta sobrepostos. Ele também executa quando um usuário insere, exclui, ou modifica objetos e fornece o conjunto de atualizações de alterações de controle de alterações na memória. Esse conjunto de alterações é usado pelo processador de alteração para manter as modificações.  
  
 Essa classe é normalmente usada por <xref:System.Data.Objects.ObjectContext> e não diretamente em aplicativos.  
  
   
  
## Examples  
 Estes exemplos se baseiam os [modelo de vendas AdventureWorks](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).  
  
 O exemplo a seguir obtém a <xref:System.Data.Objects.ObjectStateManager> do <xref:System.Data.Objects.ObjectContext> e usa o Gerenciador de estado para acessar um objeto no contexto.  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectStateManager](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectstatemanager)]
 [!code-vb[DP ObjectServices Concepts#ObjectStateManager](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectstatemanager)]  
  
 O exemplo a seguir usa o <xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%28System.Data.EntityKey%2CSystem.Data.Objects.ObjectStateEntry%40%29> método no retornado <xref:System.Data.Objects.ObjectStateManager> para obter um objeto com base em sua chave de entidade.  
  
 [!code-csharp[DP ObjectServices Concepts#ApplyItemUpdates](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#applyitemupdates)]
 [!code-vb[DP ObjectServices Concepts#ApplyItemUpdates](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#applyitemupdates)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectStateManager (System.Data.Metadata.Edm.MetadataWorkspace metadataWorkspace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Metadata.Edm.MetadataWorkspace metadataWorkspace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.#ctor(System.Data.Metadata.Edm.MetadataWorkspace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectStateManager(System::Data::Metadata::Edm::MetadataWorkspace ^ metadataWorkspace);" />
      <MemberSignature Language="F#" Value="new System.Data.Objects.ObjectStateManager : System.Data.Metadata.Edm.MetadataWorkspace -&gt; System.Data.Objects.ObjectStateManager" Usage="new System.Data.Objects.ObjectStateManager metadataWorkspace" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="metadataWorkspace" Type="System.Data.Metadata.Edm.MetadataWorkspace" />
      </Parameters>
      <Docs>
        <param name="metadataWorkspace">O <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" />, que fornece informações de mapeamento e de metadados.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.Objects.ObjectStateManager" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeObjectState">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectStateEntry ChangeObjectState (object entity, System.Data.EntityState entityState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectStateEntry ChangeObjectState(object entity, valuetype System.Data.EntityState entityState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.ChangeObjectState(System.Object,System.Data.EntityState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectStateEntry ^ ChangeObjectState(System::Object ^ entity, System::Data::EntityState entityState);" />
      <MemberSignature Language="F#" Value="member this.ChangeObjectState : obj * System.Data.EntityState -&gt; System.Data.Objects.ObjectStateEntry" Usage="objectStateManager.ChangeObjectState (entity, entityState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectStateEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="entityState" Type="System.Data.EntityState" />
      </Parameters>
      <Docs>
        <param name="entity">O objeto para o qual o estado deve ser alterado.</param>
        <param name="entityState">O novo estado do objeto.</param>
        <summary>Altera o estado do <see cref="T:System.Data.Objects.ObjectStateEntry" /> para um objeto específico para o <paramref name="entityState" /> especificado.</summary>
        <returns>O <see cref="T:System.Data.Objects.ObjectStateEntry" /> para o <paramref name="entity" /> fornecido.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chamar o <xref:System.Data.Objects.ObjectStateManager.ChangeObjectState%2A> método para alterar o estado de um objeto para <xref:System.Data.EntityState.Deleted> não faz com que objetos relacionados em uma relação restrita a ser excluído.  
  
 Alterando o estado de um objeto não afeta os objetos relacionados no grafo de objeto.  
  
 Quando você altera a <xref:System.Data.EntityState> de uma entrada de objeto de entidade para <xref:System.Data.EntityState.Modified>, todas as propriedades do objeto são marcadas como modificadas, independentemente dos valores atuais ou originais.  
  
 Quando o <xref:System.Data.EntityState> de um objeto de entidade entrada é alterada para <xref:System.Data.EntityState.Added>, <xref:System.Data.EntityState.Deleted>, ou <xref:System.Data.EntityState.Detached>, as entradas de relação para o objeto também são atualizadas.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Quando <paramref name="entity" /> é <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Quando o objeto não é desanexado e não tem uma entrada no gerenciador de estado.  -ou-  Quando você tenta alterar o estado para <see cref="F:System.Data.EntityState.Detached" /> de qualquer outro <see cref="T:System.Data.EntityState" />  -ou-  Quando <paramref name="state" /> não é um valor <see cref="T:System.Data.EntityState" /> válido.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ChangeRelationshipState">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Altera o estado da relação especificada entre dois objetos de entidade.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método não tem suporte para relações com base em uma associação de chave estrangeira.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ChangeRelationshipState">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectStateEntry ChangeRelationshipState (object sourceEntity, object targetEntity, string navigationProperty, System.Data.EntityState relationshipState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectStateEntry ChangeRelationshipState(object sourceEntity, object targetEntity, string navigationProperty, valuetype System.Data.EntityState relationshipState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.ChangeRelationshipState(System.Object,System.Object,System.String,System.Data.EntityState)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChangeRelationshipState (sourceEntity As Object, targetEntity As Object, navigationProperty As String, relationshipState As EntityState) As ObjectStateEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectStateEntry ^ ChangeRelationshipState(System::Object ^ sourceEntity, System::Object ^ targetEntity, System::String ^ navigationProperty, System::Data::EntityState relationshipState);" />
      <MemberSignature Language="F#" Value="member this.ChangeRelationshipState : obj * obj * string * System.Data.EntityState -&gt; System.Data.Objects.ObjectStateEntry" Usage="objectStateManager.ChangeRelationshipState (sourceEntity, targetEntity, navigationProperty, relationshipState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectStateEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceEntity" Type="System.Object" />
        <Parameter Name="targetEntity" Type="System.Object" />
        <Parameter Name="navigationProperty" Type="System.String" />
        <Parameter Name="relationshipState" Type="System.Data.EntityState" />
      </Parameters>
      <Docs>
        <param name="sourceEntity">A instância do objeto ou <see cref="T:System.Data.EntityKey" /> da entidade de origem em uma extremidade da relação.</param>
        <param name="targetEntity">A instância do objeto ou <see cref="T:System.Data.EntityKey" /> da entidade de destino em uma extremidade da relação.</param>
        <param name="navigationProperty">O nome da propriedade de navegação na <c>origem</c> que retorna o <c>destino</c> especificado.</param>
        <param name="relationshipState">O <see cref="T:System.Data.EntityState" /> solicitado da relação especificada.</param>
        <summary>Altera o estado da relação entre dois objetos de entidade que é especificada com base nos dois objetos relacionados e no nome da propriedade de navegação.</summary>
        <returns>O <see cref="T:System.Data.Objects.ObjectStateEntry" /> para a relação que foi alterada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 As entradas para os objetos em ambas as extremidades da relação especificada devem existir no <xref:System.Data.Objects.ObjectStateManager>.  
  
> [!NOTE]
>  Esse método não tem suporte para relações com base em uma associação de chave estrangeira.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Quando <paramref name="source" /> ou <paramref name="target" /> é <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Ao tentar alterar o estado da relação para um estado diferente de <see cref="F:System.Data.EntityState.Deleted" /> ou <see cref="F:System.Data.EntityState.Detached" /> quando <paramref name="source" /> ou <paramref name="target" /> está em um estado <see cref="F:System.Data.EntityState.Deleted" />.  -ou-  Ao tentar alterar o estado da relação para um estado diferente de <see cref="F:System.Data.EntityState.Added" /> ou <see cref="F:System.Data.EntityState.Detached" /> quando <paramref name="source" /> ou <paramref name="target" /> está em um estado <see cref="F:System.Data.EntityState.Added" />.  -ou-  Quando <paramref name="state" /> não é um valor <see cref="T:System.Data.EntityState" /> válido.</exception>
      </Docs>
    </Member>
    <Member MemberName="ChangeRelationshipState">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectStateEntry ChangeRelationshipState (object sourceEntity, object targetEntity, string relationshipName, string targetRoleName, System.Data.EntityState relationshipState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectStateEntry ChangeRelationshipState(object sourceEntity, object targetEntity, string relationshipName, string targetRoleName, valuetype System.Data.EntityState relationshipState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.ChangeRelationshipState(System.Object,System.Object,System.String,System.String,System.Data.EntityState)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChangeRelationshipState (sourceEntity As Object, targetEntity As Object, relationshipName As String, targetRoleName As String, relationshipState As EntityState) As ObjectStateEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectStateEntry ^ ChangeRelationshipState(System::Object ^ sourceEntity, System::Object ^ targetEntity, System::String ^ relationshipName, System::String ^ targetRoleName, System::Data::EntityState relationshipState);" />
      <MemberSignature Language="F#" Value="member this.ChangeRelationshipState : obj * obj * string * string * System.Data.EntityState -&gt; System.Data.Objects.ObjectStateEntry" Usage="objectStateManager.ChangeRelationshipState (sourceEntity, targetEntity, relationshipName, targetRoleName, relationshipState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectStateEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceEntity" Type="System.Object" />
        <Parameter Name="targetEntity" Type="System.Object" />
        <Parameter Name="relationshipName" Type="System.String" />
        <Parameter Name="targetRoleName" Type="System.String" />
        <Parameter Name="relationshipState" Type="System.Data.EntityState" />
      </Parameters>
      <Docs>
        <param name="sourceEntity">A instância do objeto ou <see cref="T:System.Data.EntityKey" /> da entidade de origem em uma extremidade da relação.</param>
        <param name="targetEntity">A instância do objeto ou <see cref="T:System.Data.EntityKey" /> da entidade de destino em uma extremidade da relação.</param>
        <param name="relationshipName">O nome da relação.</param>
        <param name="targetRoleName">O nome da função na extremidade de <c>destino</c> da relação.</param>
        <param name="relationshipState">O <see cref="T:System.Data.EntityState" /> solicitado da relação especificada.</param>
        <summary>Altera o estado da relação entre dois objetos de entidade que é especificada com base nos dois objetos relacionados e nas propriedades da relação.</summary>
        <returns>O <see cref="T:System.Data.Objects.ObjectStateEntry" /> para a relação que foi alterada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 As entradas para os objetos em ambas as extremidades da relação especificada devem existir no <xref:System.Data.Objects.ObjectStateManager>.  
  
> [!NOTE]
>  Esse método não tem suporte para relações se baseiam em uma associação de chave estrangeira. Para obter mais informações, consulte [definindo e Gerenciando relações](http://msdn.microsoft.com/library/2c92c097-56bd-4145-989e-16d92475ecda)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Quando <paramref name="source" /> ou <paramref name="target" /> é <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Ao tentar alterar o estado da relação para um estado diferente de <see cref="F:System.Data.EntityState.Deleted" /> ou <see cref="F:System.Data.EntityState.Detached" /> quando <paramref name="source" /> ou <paramref name="target" /> está em um estado <see cref="F:System.Data.EntityState.Deleted" />.  -ou-  Ao tentar alterar o estado da relação para um estado diferente de <see cref="F:System.Data.EntityState.Added" /> ou <see cref="F:System.Data.EntityState.Detached" /> quando <paramref name="source" /> ou <paramref name="target" /> está em um estado <see cref="F:System.Data.EntityState.Added" />.  -ou-  Quando <paramref name="state" /> não é um valor <see cref="T:System.Data.EntityState" /> válido.</exception>
      </Docs>
    </Member>
    <Member MemberName="ChangeRelationshipState&lt;TEntity&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectStateEntry ChangeRelationshipState&lt;TEntity&gt; (TEntity sourceEntity, object targetEntity, System.Linq.Expressions.Expression&lt;Func&lt;TEntity,object&gt;&gt; navigationPropertySelector, System.Data.EntityState relationshipState) where TEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectStateEntry ChangeRelationshipState&lt;class TEntity&gt;(!!TEntity sourceEntity, object targetEntity, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TEntity, object&gt;&gt; navigationPropertySelector, valuetype System.Data.EntityState relationshipState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.ChangeRelationshipState``1(``0,System.Object,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Data.EntityState)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChangeRelationshipState(Of TEntity As Class) (sourceEntity As TEntity, targetEntity As Object, navigationPropertySelector As Expression(Of Func(Of TEntity, Object)), relationshipState As EntityState) As ObjectStateEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TEntity&gt;&#xA; where TEntity : class System::Data::Objects::ObjectStateEntry ^ ChangeRelationshipState(TEntity sourceEntity, System::Object ^ targetEntity, System::Linq::Expressions::Expression&lt;Func&lt;TEntity, System::Object ^&gt; ^&gt; ^ navigationPropertySelector, System::Data::EntityState relationshipState);" />
      <MemberSignature Language="F#" Value="member this.ChangeRelationshipState : 'Entity * obj * System.Linq.Expressions.Expression&lt;Func&lt;'Entity, obj&gt;&gt; * System.Data.EntityState -&gt; System.Data.Objects.ObjectStateEntry (requires 'Entity : null)" Usage="objectStateManager.ChangeRelationshipState (sourceEntity, targetEntity, navigationPropertySelector, relationshipState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectStateEntry</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="sourceEntity" Type="TEntity" />
        <Parameter Name="targetEntity" Type="System.Object" />
        <Parameter Name="navigationPropertySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TEntity,System.Object&gt;&gt;" />
        <Parameter Name="relationshipState" Type="System.Data.EntityState" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity">O tipo de entidade de <c>origem</c> objeto.</typeparam>
        <param name="sourceEntity">A instância do objeto ou <see cref="T:System.Data.EntityKey" /> da entidade de origem em uma extremidade da relação.</param>
        <param name="targetEntity">A instância do objeto ou <see cref="T:System.Data.EntityKey" /> da entidade de destino em uma extremidade da relação.</param>
        <param name="navigationPropertySelector">Uma expressão LINQ que seleciona propriedade de navegação na <c>origem</c> que retorna o <c>destino</c> especificado.</param>
        <param name="relationshipState">O <see cref="T:System.Data.EntityState" /> solicitado da relação especificada.</param>
        <summary>Altera o estado da relação entre dois objetos de entidade que é especificada com base nos dois objetos relacionados e em uma expressão LINQ que define a propriedade de navegação.</summary>
        <returns>O <see cref="T:System.Data.Objects.ObjectStateEntry" /> para a relação que foi alterada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 As entradas para os objetos em ambas as extremidades da relação especificada devem existir no <xref:System.Data.Objects.ObjectStateManager>.  
  
> [!NOTE]
>  Esse método não tem suporte para relações se baseiam em uma associação de chave estrangeira.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Quando <paramref name="source" />, <paramref name="target" /> ou <paramref name="selector" /> é <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="selector" /> está mal formado ou não pode retornar uma propriedade de navegação.</exception>
        <exception cref="T:System.InvalidOperationException">Ao tentar alterar o estado da relação para um estado diferente de <see cref="F:System.Data.EntityState.Deleted" /> ou <see cref="F:System.Data.EntityState.Detached" /> quando <paramref name="source" /> ou <paramref name="target" /> está em um estado <see cref="F:System.Data.EntityState.Deleted" />.  -ou-  Ao tentar alterar o estado da relação para um estado diferente de <see cref="F:System.Data.EntityState.Added" /> ou <see cref="F:System.Data.EntityState.Detached" /> quando <paramref name="source" /> ou <paramref name="target" /> está em um estado <see cref="F:System.Data.EntityState.Added" />.  -ou-  Quando <paramref name="state" /> não é um valor <see cref="T:System.Data.EntityState" /> válido.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetObjectStateEntries">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Data.Objects.ObjectStateEntry&gt; GetObjectStateEntries (System.Data.EntityState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Objects.ObjectStateEntry&gt; GetObjectStateEntries(valuetype System.Data.EntityState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.GetObjectStateEntries(System.Data.EntityState)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetObjectStateEntries (state As EntityState) As IEnumerable(Of ObjectStateEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Data::Objects::ObjectStateEntry ^&gt; ^ GetObjectStateEntries(System::Data::EntityState state);" />
      <MemberSignature Language="F#" Value="member this.GetObjectStateEntries : System.Data.EntityState -&gt; seq&lt;System.Data.Objects.ObjectStateEntry&gt;" Usage="objectStateManager.GetObjectStateEntries state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Data.Objects.ObjectStateEntry&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Data.EntityState" />
      </Parameters>
      <Docs>
        <param name="state">Um <see cref="T:System.Data.EntityState" /> usado para filtrar os objetos <see cref="T:System.Data.Objects.ObjectStateEntry" /> retornados.</param>
        <summary>Retorna uma coleção de objetos <see cref="T:System.Data.Objects.ObjectStateEntry" /> para objetos ou relacionamentos com o estado determinado.</summary>
        <returns>Uma coleção de objetos <see cref="T:System.Data.Objects.ObjectStateEntry" /> no <see cref="T:System.Data.EntityState" /> determinado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Data.EntityState> é um campo de bits, portanto, as entradas de estado de vários estados podem ser recuperadas em uma chamada ao fazer um bit a bit ou de mais de um <xref:System.Data.EntityState> valores.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Quando <paramref name="state" /> é <see cref="F:System.Data.EntityState.Detached" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetObjectStateEntry">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Retorna um <see cref="T:System.Data.Objects.ObjectStateEntry" /> para uma entrada de objeto ou relação específica.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetObjectStateEntry">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectStateEntry GetObjectStateEntry (System.Data.EntityKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectStateEntry GetObjectStateEntry(class System.Data.EntityKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.GetObjectStateEntry(System.Data.EntityKey)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetObjectStateEntry (key As EntityKey) As ObjectStateEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectStateEntry ^ GetObjectStateEntry(System::Data::EntityKey ^ key);" />
      <MemberSignature Language="F#" Value="member this.GetObjectStateEntry : System.Data.EntityKey -&gt; System.Data.Objects.ObjectStateEntry" Usage="objectStateManager.GetObjectStateEntry key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectStateEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Data.EntityKey" />
      </Parameters>
      <Docs>
        <param name="key">O <see cref="T:System.Data.EntityKey" />.</param>
        <summary>Retorna um <see cref="T:System.Data.Objects.ObjectStateEntry" /> para o objeto ou para a entrada de relação com a chave especificada.</summary>
        <returns>O <see cref="T:System.Data.Objects.ObjectStateEntry" /> correspondente para o <see cref="T:System.Data.EntityKey" /> fornecido.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%28System.Data.EntityKey%2CSystem.Data.Objects.ObjectStateEntry%40%29> método para retornar um <xref:System.Data.Objects.ObjectStateEntry> objeto sem ter que lidar com as <xref:System.InvalidOperationException> gerado pelo <xref:System.Data.Objects.ObjectStateManager.GetObjectStateEntry%28System.Data.EntityKey%29> método.  
  
   
  
## Examples  
 O exemplo neste tópico se baseia a [modelo de vendas AdventureWorks](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832). O exemplo obtém as <xref:System.Data.Objects.ObjectStateEntry> para a determinada <xref:System.Data.EntityKey> do <xref:System.Data.Objects.ObjectStateManager>. Em seguida, ele obtém o valor atual do `SalesOrderHeader.PurchaseOrderNumber` propriedade, altera o valor da propriedade e enumera através da coleção de propriedades modificadas.  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectStateEntry](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectstateentry)]
 [!code-vb[DP ObjectServices Concepts#ObjectStateEntry](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectstateentry)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Quando <paramref name="key" /> é <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Quando o <paramref name="key" /> especificado não pode ser encontrado no gerenciador de estado.</exception>
        <exception cref="T:System.InvalidOperationException">Nenhuma entidade com o <see cref="T:System.Data.EntityKey" /> especificado existe no <see cref="T:System.Data.Objects.ObjectStateManager" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetObjectStateEntry">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectStateEntry GetObjectStateEntry (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectStateEntry GetObjectStateEntry(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.GetObjectStateEntry(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetObjectStateEntry (entity As Object) As ObjectStateEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectStateEntry ^ GetObjectStateEntry(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.GetObjectStateEntry : obj -&gt; System.Data.Objects.ObjectStateEntry" Usage="objectStateManager.GetObjectStateEntry entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectStateEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">O <see cref="T:System.Object" /> ao qual o <see cref="T:System.Data.Objects.ObjectStateEntry" /> recuperado pertence.</param>
        <summary>Retorna um <see cref="T:System.Data.Objects.ObjectStateEntry" /> para o objeto especificado.</summary>
        <returns>O <see cref="T:System.Data.Objects.ObjectStateEntry" /> correspondente para o <see cref="T:System.Object" /> fornecido.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%28System.Object%2CSystem.Data.Objects.ObjectStateEntry%40%29> método para retornar um <xref:System.Data.Objects.ObjectStateEntry> objeto sem ter que lidar com as <xref:System.InvalidOperationException> gerado pelo <xref:System.Data.Objects.ObjectStateManager.GetObjectStateEntry%28System.Object%29> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Não existe nenhuma entidade com o <see cref="T:System.Object" /> especificado no <see cref="T:System.Data.Objects.ObjectStateManager" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRelationshipManager">
      <MemberSignature Language="C#" Value="public System.Data.Objects.DataClasses.RelationshipManager GetRelationshipManager (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.DataClasses.RelationshipManager GetRelationshipManager(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.GetRelationshipManager(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelationshipManager (entity As Object) As RelationshipManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::DataClasses::RelationshipManager ^ GetRelationshipManager(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.GetRelationshipManager : obj -&gt; System.Data.Objects.DataClasses.RelationshipManager" Usage="objectStateManager.GetRelationshipManager entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.DataClasses.RelationshipManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">O objeto para o qual retornar o <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" />.</param>
        <summary>Retorna o <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" /> que é usado pelo objeto especificado.</summary>
        <returns>O <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" /> para o objeto especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chamar o <xref:System.Data.Objects.ObjectStateManager.GetRelationshipManager%2A> método é o mesmo que chamar o <xref:System.Data.Objects.ObjectStateManager.TryGetRelationshipManager%2A> método, exceto pelo fato desse método gera uma exceção em vez de retornar `false`.  
  
 Chamar o <xref:System.Data.Objects.ObjectStateManager.TryGetRelationshipManager%2A> método para evitar o tratamento de <xref:System.InvalidOperationException> que ocorre quando um <xref:System.Data.Objects.DataClasses.RelationshipManager> puder ser retornado para a entidade fornecida.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Quando um <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" /> não pode ser retornado para o <paramref name="entity" /> especificado.</exception>
      </Docs>
    </Member>
    <Member MemberName="MetadataWorkspace">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.MetadataWorkspace MetadataWorkspace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Metadata.Edm.MetadataWorkspace MetadataWorkspace" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectStateManager.MetadataWorkspace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MetadataWorkspace As MetadataWorkspace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Metadata::Edm::MetadataWorkspace ^ MetadataWorkspace { System::Data::Metadata::Edm::MetadataWorkspace ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MetadataWorkspace : System.Data.Metadata.Edm.MetadataWorkspace" Usage="System.Data.Objects.ObjectStateManager.MetadataWorkspace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.MetadataWorkspace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> associado a esse gerenciador de estado.</summary>
        <value>O <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> associado a este <see cref="T:System.Data.Objects.ObjectStateManager" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Data.Metadata.Edm.MetadataWorkspace> classe é uma interface de programação central que você pode usar para interagir com os metadados de modelo de dados de entidade (EDM) em tempo de execução e no contexto de um aplicativo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ObjectStateManagerChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.CollectionChangeEventHandler ObjectStateManagerChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.CollectionChangeEventHandler ObjectStateManagerChanged" />
      <MemberSignature Language="DocId" Value="E:System.Data.Objects.ObjectStateManager.ObjectStateManagerChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectStateManagerChanged As CollectionChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::CollectionChangeEventHandler ^ ObjectStateManagerChanged;" />
      <MemberSignature Language="F#" Value="member this.ObjectStateManagerChanged : System.ComponentModel.CollectionChangeEventHandler " Usage="member this.ObjectStateManagerChanged : System.ComponentModel.CollectionChangeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.CollectionChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando entidades são adicionadas ou removidas do gerenciador de estado.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryGetObjectStateEntry">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Tenta retornar um objeto <see cref="T:System.Data.Objects.ObjectStateEntry" /> para uma entrada de objeto ou relação específica.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryGetObjectStateEntry">
      <MemberSignature Language="C#" Value="public bool TryGetObjectStateEntry (System.Data.EntityKey key, out System.Data.Objects.ObjectStateEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetObjectStateEntry(class System.Data.EntityKey key, [out] class System.Data.Objects.ObjectStateEntry&amp; entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry(System.Data.EntityKey,System.Data.Objects.ObjectStateEntry@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetObjectStateEntry (key As EntityKey, ByRef entry As ObjectStateEntry) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetObjectStateEntry(System::Data::EntityKey ^ key, [Runtime::InteropServices::Out] System::Data::Objects::ObjectStateEntry ^ % entry);" />
      <MemberSignature Language="F#" Value="member this.TryGetObjectStateEntry : System.Data.EntityKey *  -&gt; bool" Usage="objectStateManager.TryGetObjectStateEntry (key, entry)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Data.EntityKey" />
        <Parameter Name="entry" Type="System.Data.Objects.ObjectStateEntry&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">O <see cref="T:System.Data.EntityKey" /> determinado.</param>
        <param name="entry">Quando este método retorna, contém um <see cref="T:System.Data.Objects.ObjectStateEntry" /> para o <see cref="T:System.Data.EntityKey" /> determinado Esse parâmetro é passado como não inicializado.</param>
        <summary>Tenta recuperar o <see cref="T:System.Data.Objects.ObjectStateEntry" /> correspondente para o objeto ou a relação com o <see cref="T:System.Data.EntityKey" /> especificado.</summary>
        <returns>Um valor booliano que é <see langword="true" /> se houver um <see cref="T:System.Data.Objects.ObjectStateEntry" /> correspondente para o <see cref="T:System.Data.EntityKey" /> determinado; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use <xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%28System.Data.EntityKey%2CSystem.Data.Objects.ObjectStateEntry%40%29> para retornar um <xref:System.Data.Objects.ObjectStateEntry> sem ter que lidar com as <xref:System.InvalidOperationException> gerado pelo <xref:System.Data.Objects.ObjectStateManager.GetObjectStateEntry%28System.Data.EntityKey%29> método.  
  
   
  
## Examples  
 Os exemplos neste tópico se baseiam os [modelo de vendas AdventureWorks](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).  
  
 O exemplo tenta recuperar correspondente <xref:System.Data.Objects.ObjectStateEntry> para o determinado <xref:System.Data.EntityKey>.  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectStateManager](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectstatemanager)]
 [!code-vb[DP ObjectServices Concepts#ObjectStateManager](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectstatemanager)]  
  
 O exemplo a seguir usa o <xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%28System.Data.EntityKey%2CSystem.Data.Objects.ObjectStateEntry%40%29> método no retornado <xref:System.Data.Objects.ObjectStateManager> para obter um objeto com base em sua chave de entidade.  
  
 [!code-csharp[DP ObjectServices Concepts#ApplyItemUpdates](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#applyitemupdates)]
 [!code-vb[DP ObjectServices Concepts#ApplyItemUpdates](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#applyitemupdates)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Um valor de <see langword="null" /> (<see langword="Nothing" /> no Visual Basic) é fornecido para <paramref name="key" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetObjectStateEntry">
      <MemberSignature Language="C#" Value="public bool TryGetObjectStateEntry (object entity, out System.Data.Objects.ObjectStateEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetObjectStateEntry(object entity, [out] class System.Data.Objects.ObjectStateEntry&amp; entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry(System.Object,System.Data.Objects.ObjectStateEntry@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetObjectStateEntry (entity As Object, ByRef entry As ObjectStateEntry) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetObjectStateEntry(System::Object ^ entity, [Runtime::InteropServices::Out] System::Data::Objects::ObjectStateEntry ^ % entry);" />
      <MemberSignature Language="F#" Value="member this.TryGetObjectStateEntry : obj *  -&gt; bool" Usage="objectStateManager.TryGetObjectStateEntry (entity, entry)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="entry" Type="System.Data.Objects.ObjectStateEntry&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="entity">O <see cref="T:System.Object" /> ao qual o <see cref="T:System.Data.Objects.ObjectStateEntry" /> recuperado pertence.</param>
        <param name="entry">Quando é retornado, este método contém o <see cref="T:System.Data.Objects.ObjectStateEntry" /> para o <see cref="T:System.Data.EntityKey" /> determinado. Esse parâmetro é passado como não inicializado.</param>
        <summary>Tenta recuperar o <see cref="T:System.Data.Objects.ObjectStateEntry" /> correspondente para o <see cref="T:System.Object" /> especificado.</summary>
        <returns>Um valor booliano que é <see langword="true" /> se houver um <see cref="T:System.Data.Objects.ObjectStateEntry" /> correspondente para o objeto determinado; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%28System.Object%2CSystem.Data.Objects.ObjectStateEntry%40%29> método para retornar um <xref:System.Data.Objects.ObjectStateEntry> sem ter que lidar com as <xref:System.InvalidOperationException> gerado pelo <xref:System.Data.Objects.ObjectStateManager.GetObjectStateEntry%28System.Object%29> método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetRelationshipManager">
      <MemberSignature Language="C#" Value="public bool TryGetRelationshipManager (object entity, out System.Data.Objects.DataClasses.RelationshipManager relationshipManager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetRelationshipManager(object entity, [out] class System.Data.Objects.DataClasses.RelationshipManager&amp; relationshipManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.TryGetRelationshipManager(System.Object,System.Data.Objects.DataClasses.RelationshipManager@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetRelationshipManager (entity As Object, ByRef relationshipManager As RelationshipManager) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetRelationshipManager(System::Object ^ entity, [Runtime::InteropServices::Out] System::Data::Objects::DataClasses::RelationshipManager ^ % relationshipManager);" />
      <MemberSignature Language="F#" Value="member this.TryGetRelationshipManager : obj *  -&gt; bool" Usage="objectStateManager.TryGetRelationshipManager (entity, relationshipManager)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="relationshipManager" Type="System.Data.Objects.DataClasses.RelationshipManager&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="entity">O objeto para o qual retornar o <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" />.</param>
        <param name="relationshipManager">Quando é retornado, este método contém o <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" /> para a <c>entidade</c>.</param>
        <summary>Retorna o <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" /> que é usado pelo objeto especificado.</summary>
        <returns>
          <see langword="true" /> se uma instância de <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" /> foi retornada para o <paramref name="entity" /> fornecido; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Data.Objects.ObjectStateManager.GetRelationshipManager%2A> método é usado para obter o <xref:System.Data.Objects.DataClasses.RelationshipManager> para objetos que são ignorados com persistência. Quando objetos implementar <xref:System.Data.Objects.DataClasses.IEntityWithRelationships> ou herdar de <xref:System.Data.Objects.DataClasses.EntityObject>, o <xref:System.Data.Objects.DataClasses.RelationshipManager> é acessado a partir de <xref:System.Data.Objects.DataClasses.IEntityWithRelationships.RelationshipManager%2A> propriedade.  
  
 O <xref:System.Data.Objects.DataClasses.RelationshipManager> não pode ser retornado quando o objeto está em um <xref:System.Data.EntityState.Detached> estado.  
  
 Chamar o <xref:System.Data.Objects.ObjectStateManager.TryGetRelationshipManager%2A> método é o mesmo que chamar o <xref:System.Data.Objects.ObjectStateManager.GetRelationshipManager%2A> método, exceto pelo fato desse método retorna `false` em vez de gerar uma exceção.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>