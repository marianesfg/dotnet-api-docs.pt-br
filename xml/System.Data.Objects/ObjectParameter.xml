<Type Name="ObjectParameter" FullName="System.Data.Objects.ObjectParameter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="06efc60e5a1f7331a4df2519751005fb7125f2da" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30389280" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ObjectParameter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ObjectParameter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.ObjectParameter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ObjectParameter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectParameter sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa um parâmetro de consulta que é passado para uma consulta de objeto.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Representa um parâmetro de consulta que é passado para um <xref:System.Data.Objects.ObjectQuery%601> ou um método de construtor de consultas. Para obter mais informações, consulte [métodos do construtor de consulta](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).  
  
 Parâmetros de objeto consistem em um nome, um tipo e um valor.  
  
 Essa classe não pode ser herdada. Para obter mais informações, consulte <xref:System.Data.Objects.ObjectParameterCollection>.  
  
   
  
## Examples  
 O exemplo neste tópico se baseia o [modelo de vendas do AdventureWorks](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832). O exemplo adiciona novos parâmetros para a coleção. Ele itera por meio de <xref:System.Data.Objects.ObjectParameterCollection> e exibe o nome, tipo e valor de cada parâmetro na coleção.  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_parameters)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_parameters)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.Objects.ObjectParameter" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectParameter (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameter.#ctor(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectParameter(System::String ^ name, System::Object ^ value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">O nome do parâmetro. Esse nome não deve incluir o marcador de parâmetro “@” que é usado em instruções [!INCLUDE[esql](~/includes/esql-md.md)], apenas o nome real. O primeiro caractere da expressão deve ser uma letra. Quaisquer caracteres sucessivos na expressão devem ser letras, números ou um caractere de sublinhado (_).</param>
        <param name="value">O valor inicial (e, inerentemente, o tipo) do parâmetro.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.Objects.ObjectParameter" /> com o nome e valor especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este construtor cria um parâmetro do nome especificado e o valor. O tipo do parâmetro é inferido do valor.  
  
 Quando adicionada para o <xref:System.Data.Objects.ObjectParameterCollection>, o nome do parâmetro não pode ser alterado. O valor do parâmetro pode ser alterado por meio de <xref:System.Data.Objects.ObjectParameter.Value%2A> propriedade. Depois que a consulta foi compilada, o valor não pode ser alterado. Para obter mais informações, consulte [métodos do construtor de consulta](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).  
  
   
  
## Examples  
 O exemplo neste tópico se baseia o [modelo de vendas do AdventureWorks](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832). O exemplo adiciona novos parâmetros para a coleção. Ele itera por meio de <xref:System.Data.Objects.ObjectParameterCollection> e exibe o nome, o tipo e o valor de cada parâmetro na coleção.  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_parameters)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_parameters)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Se o valor de um dos argumentos for nulo.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Se o valor do argumento de nome não for válido. Os nomes de parâmetros devem começar com uma letra e só podem conter letras, números e sublinhados.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectParameter (string name, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameter.#ctor(System.String,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectParameter(System::String ^ name, Type ^ type);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="name">O nome do parâmetro. Esse nome não deve incluir o marcador de parâmetro "@" que é usado em instruções [!INCLUDE[esql](~/includes/esql-md.md)], apenas o nome real. O primeiro caractere da expressão deve ser uma letra. Quaisquer caracteres sucessivos na expressão devem ser letras, números ou um caractere de sublinhado (_).</param>
        <param name="type">O tipo CLR (Common Language Runtime) do parâmetro.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.Objects.ObjectParameter" /> com o nome e tipo especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando instanciado, o nome do parâmetro não pode ser alterado. O valor do parâmetro pode ser definido ou alterado por meio de <xref:System.Data.Objects.ObjectParameter.Value%2A> propriedade. Depois que a consulta foi compilada, o valor não pode ser alterado. Para obter mais informações, consulte [métodos do construtor de consulta](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Se o valor de um dos argumentos for nulo.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Se o valor do argumento de nome for inválido. Os nomes de parâmetros devem começar com uma letra e só podem conter letras, números e sublinhados.</exception>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectParameter.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o nome de parâmetro que só pode ser definido por meio de um construtor.</summary>
        <value>O nome do parâmetro que só pode ser definido por meio de um construtor.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando instanciado, o nome do parâmetro não pode ser alterado. O valor do parâmetro pode ser definido ou alterado por meio de <xref:System.Data.Objects.ObjectParameter.Value%2A> propriedade. Depois que a consulta foi compilada, o valor não pode ser alterado. Para obter mais informações, consulte [métodos do construtor de consulta](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).  
  
   
  
## Examples  
 O exemplo neste tópico se baseia o [modelo de vendas do AdventureWorks](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832). O exemplo adiciona novos parâmetros para a coleção. Ele itera por meio de <xref:System.Data.Objects.ObjectParameterCollection> e exibe o nome, tipo e valor de cada parâmetro na coleção.  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_parameters)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_parameters)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterType">
      <MemberSignature Language="C#" Value="public Type ParameterType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ParameterType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectParameter.ParameterType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParameterType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ParameterType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o tipo de parâmetro.</summary>
        <value>O <see cref="T:System.Type" /> do parâmetro.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O tipo de parâmetro só pode ser definido por meio de um construtor.  
  
   
  
## Examples  
 O exemplo neste tópico se baseia o [modelo de vendas do AdventureWorks](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832). O exemplo adiciona novos parâmetros para a coleção. Ele itera por meio de <xref:System.Data.Objects.ObjectParameterCollection> e exibe o nome, tipo e valor de cada parâmetro na coleção.  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_parameters)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_parameters)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectParameter.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o valor do parâmetro.</summary>
        <value>O valor do parâmetro.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Depois que a consulta foi compilada, o valor não pode ser alterado. Para obter mais informações, consulte [métodos do construtor de consulta](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).  
  
 Se o novo valor é incompatível com o tipo declarado no construtor, isso poderá causar uma exceção de tempo de execução. O provedor deve determinar se o valor é compatível com o tipo declarado. Por exemplo, se o tipo inicial é <xref:System.Int32> e o novo valor é <xref:System.Guid>, você poderá receber uma exceção.  
  
   
  
## Examples  
 O exemplo neste tópico se baseia o [modelo de vendas do AdventureWorks](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832). O exemplo adiciona novos parâmetros para a coleção. Ele itera por meio de <xref:System.Data.Objects.ObjectParameterCollection> e exibe o nome, o tipo e o valor de cada parâmetro na coleção.  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_parameters)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_parameters)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>