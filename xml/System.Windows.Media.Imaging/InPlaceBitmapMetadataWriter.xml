<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="InPlaceBitmapMetadataWriter.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5653fcb0ecfca3ea1b5360941f995dd13bf6890cf.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">653fcb0ecfca3ea1b5360941f995dd13bf6890cf</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Media.Imaging.InPlaceBitmapMetadataWriter">
          <source>Enables in-place updates to existing blocks of <ph id="ph1">&lt;see cref="T:System.Windows.Media.Imaging.BitmapMetadata" /&gt;</ph>.</source>
          <target state="translated">Permite atualizações in-loco de blocos existentes de <ph id="ph1">&lt;see cref="T:System.Windows.Media.Imaging.BitmapMetadata" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Imaging.InPlaceBitmapMetadataWriter">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.BitmapMetadata&gt;</ph> is not associated with a <ph id="ph2">&lt;xref:System.Windows.Media.Imaging.BitmapFrame&gt;</ph> that is obtained through a <ph id="ph3">&lt;xref:System.Windows.Media.Imaging.BitmapDecoder&gt;</ph>, the attempt to write metadata by using the in-place writer will fail.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.BitmapMetadata&gt;</ph> não está associado com um <ph id="ph2">&lt;xref:System.Windows.Media.Imaging.BitmapFrame&gt;</ph> que é obtido por meio de um <ph id="ph3">&lt;xref:System.Windows.Media.Imaging.BitmapDecoder&gt;</ph>, haverá falha na tentativa de gravar metadados usando o gravador de local.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Imaging.InPlaceBitmapMetadataWriter">
          <source>Successful write operations apply the metadata directly to the image stream by means of a decoder.</source>
          <target state="translated">Operações de gravação bem-sucedida se aplicam os metadados diretamente para o fluxo de imagem por meio de um decodificador.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Imaging.InPlaceBitmapMetadataWriter">
          <source>In-place metadata updates fail if an attempt is made to write metadata that a given bitmap format does not support.</source>
          <target state="translated">Atualizações in-loco metadados falharem se for feita uma tentativa de gravar metadados que não dão suporte a um formato de bitmap determinado.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Imaging.InPlaceBitmapMetadataWriter">
          <source>To perform in-place metadata edits, the bitmap must be decoded using either the <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.BitmapCacheOption.Default&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Media.Imaging.BitmapCacheOption.OnDemand&gt;</ph> cache options.</source>
          <target state="translated">Para executar edições de metadados no local, o bitmap deve ser decodificado usando o <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.BitmapCacheOption.Default&gt;</ph> ou <ph id="ph2">&lt;xref:System.Windows.Media.Imaging.BitmapCacheOption.OnDemand&gt;</ph> opções de cache.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Imaging.InPlaceBitmapMetadataWriter">
          <source><ph id="ph1">&lt;xref:System.Windows.Media.Imaging.BitmapCacheOption.OnLoad&gt;</ph> does not guarantee access to the metadata stream needed for in-place metadata edits.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.Imaging.BitmapCacheOption.OnLoad&gt;</ph> não garante o acesso ao fluxo de metadados necessário para as edições de metadados no local.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Imaging.InPlaceBitmapMetadataWriter">
          <source>This example shows how you can modify metadata within an image without having to re-encode the image.</source>
          <target state="translated">Este exemplo mostra como você pode modificar os metadados em uma imagem sem a necessidade de recodificar a imagem.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Imaging.InPlaceBitmapMetadataWriter">
          <source>The following example uses an <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.InPlaceBitmapMetadataWriter&gt;</ph> to write metadata into an image.</source>
          <target state="translated">O exemplo a seguir usa um <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.InPlaceBitmapMetadataWriter&gt;</ph> para gravar metadados em uma imagem.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.InPlaceBitmapMetadataWriter.Clone">
          <source>Creates a modifiable clone of this <ph id="ph1">&lt;see cref="T:System.Windows.Media.Imaging.InPlaceBitmapMetadataWriter" /&gt;</ph>, making deep copies of this object's values.</source>
          <target state="translated">Cria um clone modificável desse <ph id="ph1">&lt;see cref="T:System.Windows.Media.Imaging.InPlaceBitmapMetadataWriter" /&gt;</ph>, fazendo cópias em profundidade dos valores do objeto.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.InPlaceBitmapMetadataWriter.Clone">
          <source>When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</source>
          <target state="translated">Ao copiar as propriedades de dependência, esse método copia associações de dados e referências de recurso (mas eles não podem mais resolver), mas não animações ou seus valores atuais.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.InPlaceBitmapMetadataWriter.Clone">
          <source>A modifiable clone of the current object.</source>
          <target state="translated">Um clone modificável do objeto atual.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.InPlaceBitmapMetadataWriter.Clone">
          <source>The cloned object's <ph id="ph1">&lt;see cref="P:System.Windows.Freezable.IsFrozen" /&gt;</ph> property will be <ph id="ph2">&lt;see langword="false" /&gt;</ph> even if the source's <ph id="ph3">&lt;see cref="P:System.Windows.Freezable.IsFrozen" /&gt;</ph> property was <ph id="ph4">&lt;see langword="true." /&gt;</ph></source>
          <target state="translated">A propriedade <ph id="ph1">&lt;see cref="P:System.Windows.Freezable.IsFrozen" /&gt;</ph> do objeto clonado será <ph id="ph2">&lt;see langword="false" /&gt;</ph>, mesmo se a propriedade <ph id="ph3">&lt;see cref="P:System.Windows.Freezable.IsFrozen" /&gt;</ph> da origem tiver sido <ph id="ph4">&lt;see langword="true." /&gt;</ph></target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.InPlaceBitmapMetadataWriter.Clone">
          <source>This method is used to produce modifiable copies of frozen <ph id="ph1">&lt;xref:System.Windows.Freezable&gt;</ph> objects (or any <ph id="ph2">&lt;xref:System.Windows.Freezable&gt;</ph> object).</source>
          <target state="translated">Esse método é usado para produzir cópias modificáveis de congelada <ph id="ph1">&lt;xref:System.Windows.Freezable&gt;</ph> objetos (ou qualquer <ph id="ph2">&lt;xref:System.Windows.Freezable&gt;</ph> objeto).</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.InPlaceBitmapMetadataWriter.Clone">
          <source>For convenience, this method shadows the inherited version with a strongly typed implementation.</source>
          <target state="translated">Para sua conveniência, este método sombreia a versão herdada com uma implementação fortemente tipada.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.InPlaceBitmapMetadataWriter.Clone">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Para obter mais informações, consulte <ph id="ph1">&lt;xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.InPlaceBitmapMetadataWriter.TrySave">
          <source>Gets a value that indicates whether image metadata can be saved successfully.</source>
          <target state="translated">Obtém um valor que indica se os metadados de imagem podem ser salvos com êxito.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.InPlaceBitmapMetadataWriter.TrySave">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if bitmap metadata can be written successfully; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se os metadados de bitmap podem ser gravados com êxito; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.InPlaceBitmapMetadataWriter.TrySave">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.InPlaceBitmapMetadataWriter.TrySave%2A&gt;</ph> method to determine whether metadata can be written successfully to a <ph id="ph2">[!INCLUDE[TLA#tla_tiff](~/includes/tlasharptla-tiff-md.md)]</ph> image.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar o <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.InPlaceBitmapMetadataWriter.TrySave%2A&gt;</ph> método para determinar se metadados podem ser gravados com êxito em um <ph id="ph2">[!INCLUDE[TLA#tla_tiff](~/includes/tlasharptla-tiff-md.md)]</ph> imagem.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>