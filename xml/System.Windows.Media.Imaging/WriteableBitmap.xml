<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="WriteableBitmap.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d8faee124c2155a6b75d903b393c805332cebd28.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d8faee124c2155a6b75d903b393c805332cebd28</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Media.Imaging.WriteableBitmap">
          <source>Provides a <ph id="ph1">&lt;see cref="T:System.Windows.Media.Imaging.BitmapSource" /&gt;</ph> that can be written to and updated.</source>
          <target state="translated">Fornece um <ph id="ph1">&lt;see cref="T:System.Windows.Media.Imaging.BitmapSource" /&gt;</ph> que pode ser gravado e atualizado.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Imaging.WriteableBitmap">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap&gt;</ph> class to update and render a bitmap on a per-frame basis.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap&gt;</ph> classe para atualizar e renderizar um bitmap em uma base por quadro.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Imaging.WriteableBitmap">
          <source>This is useful for generating algorithmic content, such as a fractal image, and for data visualization, such as a music visualizer.</source>
          <target state="translated">Isso é útil para gerar o conteúdo de algoritmo, como uma imagem fractal e para visualização de dados, como um visualizador de música.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Imaging.WriteableBitmap">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap&gt;</ph> class uses two buffers.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap&gt;</ph> classe usa dois buffers.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Imaging.WriteableBitmap">
          <source>The <bpt id="p1">*</bpt>back buffer<ept id="p1">*</ept> is allocated in system memory and accumulates content that is not currently displayed.</source>
          <target state="translated">O <bpt id="p1">*</bpt>buffer de fundo<ept id="p1">*</ept> é alocado na memória do sistema e acumula conteúdo que não é exibido no momento.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Imaging.WriteableBitmap">
          <source>The <bpt id="p1">*</bpt>front buffer<ept id="p1">*</ept> is allocated in system memory and contains the content that is currently displayed.</source>
          <target state="translated">O <bpt id="p1">*</bpt>buffer frontal<ept id="p1">*</ept> é alocado na memória do sistema e contém o conteúdo que está sendo exibido.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Imaging.WriteableBitmap">
          <source>The rendering system copies the front buffer to video memory for display.</source>
          <target state="translated">O sistema de processamento copia front buffer de memória de vídeo para exibição.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Imaging.WriteableBitmap">
          <source>Two threads use these buffers.</source>
          <target state="translated">Dois threads usam esses buffers.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Imaging.WriteableBitmap">
          <source>The <bpt id="p1">*</bpt>user interface (UI) thread<ept id="p1">*</ept> generates the UI but does not present it to the screen.</source>
          <target state="translated">O <bpt id="p1">*</bpt>thread de interface do usuário<ept id="p1">*</ept> gera a interface do usuário, mas não o exibe na tela.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Imaging.WriteableBitmap">
          <source>The UI thread responds to user input, timers, and other events.</source>
          <target state="translated">O thread de interface do usuário responde à entrada do usuário, timers e outros eventos.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Imaging.WriteableBitmap">
          <source>An application can have multiple UI threads.</source>
          <target state="translated">Um aplicativo pode ter vários threads de interface do usuário.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Imaging.WriteableBitmap">
          <source>The <bpt id="p1">*</bpt>render thread<ept id="p1">*</ept> composes and renders changes from the UI thread.</source>
          <target state="translated">O <bpt id="p1">*</bpt>renderizar thread<ept id="p1">*</ept> compõe e processa as alterações do thread da interface do usuário.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Imaging.WriteableBitmap">
          <source>There is only one render thread per application.</source>
          <target state="translated">Há apenas uma renderização thread por aplicativo.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Imaging.WriteableBitmap">
          <source>The UI thread writes content to the back buffer.</source>
          <target state="translated">O thread de interface do usuário grava o conteúdo para o buffer de fundo.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Imaging.WriteableBitmap">
          <source>The render thread reads content from the front buffer and copies it to video memory.</source>
          <target state="translated">O thread de processamento lê o conteúdo do buffer frontal e copiá-lo para a memória de vídeo.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Imaging.WriteableBitmap">
          <source>Changes to the back buffer are tracked with changed rectangular regions.</source>
          <target state="translated">As alterações para o buffer de fundo são rastreadas com regiões retangulares alteradas.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Imaging.WriteableBitmap">
          <source>Call one of the <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%2A&gt;</ph> overloads to update and display content in the back buffer automatically.</source>
          <target state="translated">Chame um do <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%2A&gt;</ph> sobrecargas para atualizar e exibir o conteúdo de buffer de fundo automaticamente.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Imaging.WriteableBitmap">
          <source>For greater control over updates, and for multi-threaded access to the back buffer, use the following workflow.</source>
          <target state="translated">Para maior controle sobre atualizações e para acesso multithread para o buffer de fundo, use o seguinte fluxo de trabalho.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Imaging.WriteableBitmap">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.Lock%2A&gt;</ph> method to reserve the back buffer for updates.</source>
          <target state="translated">Chamar o <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.Lock%2A&gt;</ph> método para reservar o buffer de fundo para as atualizações.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Imaging.WriteableBitmap">
          <source>Obtain a pointer to the back buffer by accessing the <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.BackBuffer%2A&gt;</ph> property.</source>
          <target state="translated">Obter um ponteiro para o buffer de fundo, acessando o <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.BackBuffer%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Imaging.WriteableBitmap">
          <source>Write changes to the back buffer.</source>
          <target state="translated">Grave alterações para o buffer de fundo.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Imaging.WriteableBitmap">
          <source>Other threads may write changes to the back buffer when the <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap&gt;</ph> is locked.</source>
          <target state="translated">Outros threads podem gravar alterações para trás buffer quando o <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap&gt;</ph> está bloqueado.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Imaging.WriteableBitmap">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.AddDirtyRect%2A&gt;</ph> method to indicate areas that have changed.</source>
          <target state="translated">Chamar o <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.AddDirtyRect%2A&gt;</ph> método para indicar áreas que foram alterados.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Imaging.WriteableBitmap">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.Unlock%2A&gt;</ph> method to release the back buffer and allow presentation to the screen.</source>
          <target state="translated">Chamar o <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.Unlock%2A&gt;</ph> método para liberar o buffer de fundo e permitir a apresentação na tela.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Imaging.WriteableBitmap">
          <source>When updates are sent to the rendering thread, the rendering thread copies the changed rectangles from the back buffer to the front buffer.</source>
          <target state="translated">Quando as atualizações são enviadas para o thread de processamento, o thread de processamento copia os retângulos alterados do buffer de fundo no buffer frontal.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Imaging.WriteableBitmap">
          <source>The rendering system controls this exchange to avoid deadlocks and redraw artifacts, such as "tearing".</source>
          <target state="translated">O sistema de processamento controla essa troca para evitar deadlocks e redesenhar artefatos, como "divisão".</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Imaging.WriteableBitmap">
          <source>The following example demonstrates how a <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap&gt;</ph> can be used as the source of an <ph id="ph2">&lt;xref:System.Windows.Controls.Image&gt;</ph> to draw pixels when the mouse moves.</source>
          <target state="translated">O exemplo a seguir demonstra como um <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap&gt;</ph> pode ser usado como a origem de um <ph id="ph2">&lt;xref:System.Windows.Controls.Image&gt;</ph> para desenhar pixels quando o mouse é movido.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="T:System.Windows.Media.Imaging.WriteableBitmap">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Imaging.WriteableBitmap" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Windows.Media.Imaging.WriteableBitmap" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.#ctor(System.Windows.Media.Imaging.BitmapSource)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Imaging.BitmapSource" /&gt;</ph> to use for initialization.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.Windows.Media.Imaging.BitmapSource" /&gt;</ph> a ser usada para inicialização.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.#ctor(System.Windows.Media.Imaging.BitmapSource)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Imaging.WriteableBitmap" /&gt;</ph> class using the given <ph id="ph2">&lt;see cref="T:System.Windows.Media.Imaging.BitmapSource" /&gt;</ph>.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Windows.Media.Imaging.WriteableBitmap" /&gt;</ph> usando a <ph id="ph2">&lt;see cref="T:System.Windows.Media.Imaging.BitmapSource" /&gt;</ph> fornecida.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.WriteableBitmap.#ctor(System.Windows.Media.Imaging.BitmapSource)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Double%2CSystem.Double%2CSystem.Windows.Media.PixelFormat%2CSystem.Windows.Media.Imaging.BitmapPalette%29&gt;</ph> constructor is preferred over using this constructor.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Double%2CSystem.Double%2CSystem.Windows.Media.PixelFormat%2CSystem.Windows.Media.Imaging.BitmapPalette%29&gt;</ph> construtor é preferível usando este construtor.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.WriteableBitmap.#ctor(System.Windows.Media.Imaging.BitmapSource)">
          <source>If <ph id="ph1">`source`</ph> does not use a natively supported bitmap format, format conversions are applied for each frame update, which reduces performance.</source>
          <target state="translated">Se <ph id="ph1">`source`</ph> não usa um formato de bitmap suportados nativamente, formato conversões são aplicadas para cada atualização de quadro, o que reduz o desempenho.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.WriteableBitmap.#ctor(System.Windows.Media.Imaging.BitmapSource)">
          <source>for access to unmanaged resources.</source>
          <target state="translated">para acessar os recursos não gerenciados.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.WriteableBitmap.#ctor(System.Windows.Media.Imaging.BitmapSource)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">Ação de segurança: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.WriteableBitmap.#ctor(System.Windows.Media.Imaging.BitmapSource)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.#ctor(System.Int32,System.Int32,System.Double,System.Double,System.Windows.Media.PixelFormat,System.Windows.Media.Imaging.BitmapPalette)">
          <source>The desired width of the bitmap.</source>
          <target state="translated">A largura desejada do bitmap.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.#ctor(System.Int32,System.Int32,System.Double,System.Double,System.Windows.Media.PixelFormat,System.Windows.Media.Imaging.BitmapPalette)">
          <source>The desired height of the bitmap.</source>
          <target state="translated">A altura desejada do bitmap.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.#ctor(System.Int32,System.Int32,System.Double,System.Double,System.Windows.Media.PixelFormat,System.Windows.Media.Imaging.BitmapPalette)">
          <source>The horizontal <ph id="ph1">[!INCLUDE[TLA#tla_dpi](~/includes/tlasharptla-dpi-md.md)]</ph> of the bitmap.</source>
          <target state="translated">O <ph id="ph1">[!INCLUDE[TLA#tla_dpi](~/includes/tlasharptla-dpi-md.md)]</ph> horizontal do bitmap.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.#ctor(System.Int32,System.Int32,System.Double,System.Double,System.Windows.Media.PixelFormat,System.Windows.Media.Imaging.BitmapPalette)">
          <source>The vertical <ph id="ph1">[!INCLUDE[TLA#tla_dpi](~/includes/tlasharptla-dpi-md.md)]</ph> of the bitmap.</source>
          <target state="translated">O <ph id="ph1">[!INCLUDE[TLA#tla_dpi](~/includes/tlasharptla-dpi-md.md)]</ph> vertical do bitmap.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.#ctor(System.Int32,System.Int32,System.Double,System.Double,System.Windows.Media.PixelFormat,System.Windows.Media.Imaging.BitmapPalette)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.PixelFormat" /&gt;</ph> of the bitmap.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Windows.Media.PixelFormat" /&gt;</ph> do bitmap.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.#ctor(System.Int32,System.Int32,System.Double,System.Double,System.Windows.Media.PixelFormat,System.Windows.Media.Imaging.BitmapPalette)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Imaging.BitmapPalette" /&gt;</ph> of the bitmap.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Windows.Media.Imaging.BitmapPalette" /&gt;</ph> do bitmap.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.#ctor(System.Int32,System.Int32,System.Double,System.Double,System.Windows.Media.PixelFormat,System.Windows.Media.Imaging.BitmapPalette)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Imaging.WriteableBitmap" /&gt;</ph> class with the specified parameters.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Windows.Media.Imaging.WriteableBitmap" /&gt;</ph> com os parâmetros especificados.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.WriteableBitmap.#ctor(System.Int32,System.Int32,System.Double,System.Double,System.Windows.Media.PixelFormat,System.Windows.Media.Imaging.BitmapPalette)">
          <source>The preferred values for <ph id="ph1">`pixelFormat`</ph> are <ph id="ph2">&lt;xref:System.Windows.Media.PixelFormats.Bgr32%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Media.PixelFormats.Pbgra32%2A&gt;</ph>.</source>
          <target state="translated">Os valores preferenciais para <ph id="ph1">`pixelFormat`</ph> são <ph id="ph2">&lt;xref:System.Windows.Media.PixelFormats.Bgr32%2A&gt;</ph> e <ph id="ph3">&lt;xref:System.Windows.Media.PixelFormats.Pbgra32%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.WriteableBitmap.#ctor(System.Int32,System.Int32,System.Double,System.Double,System.Windows.Media.PixelFormat,System.Windows.Media.Imaging.BitmapPalette)">
          <source>These formats are natively supported and do not require a format conversion.</source>
          <target state="translated">Esses formatos são suportados nativamente e não exigem uma conversão de formato.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.WriteableBitmap.#ctor(System.Int32,System.Int32,System.Double,System.Double,System.Windows.Media.PixelFormat,System.Windows.Media.Imaging.BitmapPalette)">
          <source>Other <ph id="ph1">`pixelFormat`</ph> values require a format conversion for each frame update, which reduces performance.</source>
          <target state="translated">Outros <ph id="ph1">`pixelFormat`</ph> valores exigem uma conversão de formato para cada atualização de quadro, o que reduz o desempenho.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.WriteableBitmap.#ctor(System.Int32,System.Int32,System.Double,System.Double,System.Windows.Media.PixelFormat,System.Windows.Media.Imaging.BitmapPalette)">
          <source>for access to unmanaged resources.</source>
          <target state="translated">para acessar os recursos não gerenciados.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.WriteableBitmap.#ctor(System.Int32,System.Int32,System.Double,System.Double,System.Windows.Media.PixelFormat,System.Windows.Media.Imaging.BitmapPalette)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">Ação de segurança: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.WriteableBitmap.#ctor(System.Int32,System.Int32,System.Double,System.Double,System.Windows.Media.PixelFormat,System.Windows.Media.Imaging.BitmapPalette)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.AddDirtyRect(System.Windows.Int32Rect)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Int32Rect" /&gt;</ph> representing the area that changed.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Int32Rect" /&gt;</ph> que representa a área que foi alterada.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.AddDirtyRect(System.Windows.Int32Rect)">
          <source>Dimensions are in pixels.</source>
          <target state="translated">As dimensões estão em pixels.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.AddDirtyRect(System.Windows.Int32Rect)">
          <source>Specifies the area of the bitmap that changed.</source>
          <target state="translated">Especifica a área do bitmap que foi alterada.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.WriteableBitmap.AddDirtyRect(System.Windows.Int32Rect)">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.AddDirtyRect%2A&gt;</ph> method to indicate changes your code has made to the back buffer.</source>
          <target state="translated">Chamar o <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.AddDirtyRect%2A&gt;</ph> método para indicar as alterações que seu código tenha feito para o buffer de fundo.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.WriteableBitmap.AddDirtyRect(System.Windows.Int32Rect)">
          <source>When you call this method multiple times, the changed areas are accumulated in a sufficient, but not necessarily minimal, representation.</source>
          <target state="translated">Quando você chamar esse método várias vezes, as áreas alteradas são acumuladas em uma representação suficiente, mas não necessariamente mínima.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.WriteableBitmap.AddDirtyRect(System.Windows.Int32Rect)">
          <source>For efficiency, only the areas that are marked as dirty are guaranteed to be copied forward to the front buffer.</source>
          <target state="translated">Para eficiência, apenas as áreas que são marcadas como sujos são garantidas para ser copiado para a frente no buffer frontal.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.WriteableBitmap.AddDirtyRect(System.Windows.Int32Rect)">
          <source>However, any portion of the bitmap may be copied forward, so you must ensure that the entire back buffer is always valid.</source>
          <target state="translated">No entanto, qualquer parte do bitmap pode ser copiado para a frente, portanto certifique-se de que o buffer de fundo inteiro sempre será válido.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.WriteableBitmap.AddDirtyRect(System.Windows.Int32Rect)">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.AddDirtyRect%2A&gt;</ph> method only between calls to the <ph id="ph2">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.Lock%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.Unlock%2A&gt;</ph> methods, as described in the <ph id="ph4">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap&gt;</ph> class remarks.</source>
          <target state="translated">Chamar o <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.AddDirtyRect%2A&gt;</ph> método apenas entre as chamadas para o <ph id="ph2">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.Lock%2A&gt;</ph> e <ph id="ph3">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.Unlock%2A&gt;</ph> métodos, conforme descrito no <ph id="ph4">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap&gt;</ph> classe comentários.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.WriteableBitmap.AddDirtyRect(System.Windows.Int32Rect)">
          <source>The following code example shows how to specify the area of the back buffer that changed by using the <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.AddDirtyRect%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo de código a seguir mostra como especificar a área da parte de trás de buffers que foram alteradas usando o <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.AddDirtyRect%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.AddDirtyRect(System.Windows.Int32Rect)">
          <source>The bitmap has not been locked by a call to the <ph id="ph1">&lt;see cref="M:System.Windows.Media.Imaging.WriteableBitmap.Lock" /&gt;</ph> or <ph id="ph2">&lt;see cref="M:System.Windows.Media.Imaging.WriteableBitmap.TryLock(System.Windows.Duration)" /&gt;</ph> methods.</source>
          <target state="translated">O bitmap não foi bloqueado por uma chamada aos métodos <ph id="ph1">&lt;see cref="M:System.Windows.Media.Imaging.WriteableBitmap.Lock" /&gt;</ph> ou <ph id="ph2">&lt;see cref="M:System.Windows.Media.Imaging.WriteableBitmap.TryLock(System.Windows.Duration)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.AddDirtyRect(System.Windows.Int32Rect)">
          <source><ph id="ph1">&lt;paramref name="dirtyRect" /&gt;</ph> falls outside the bounds of the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Imaging.WriteableBitmap" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dirtyRect" /&gt;</ph> está fora dos limites do <ph id="ph2">&lt;see cref="T:System.Windows.Media.Imaging.WriteableBitmap" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.WriteableBitmap.AddDirtyRect(System.Windows.Int32Rect)">
          <source>for access to unmanaged resources.</source>
          <target state="translated">para acessar os recursos não gerenciados.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.WriteableBitmap.AddDirtyRect(System.Windows.Int32Rect)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">Ação de segurança: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.WriteableBitmap.AddDirtyRect(System.Windows.Int32Rect)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.Imaging.WriteableBitmap.BackBuffer">
          <source>Gets a pointer to the back buffer.</source>
          <target state="translated">Obtém um ponteiro para o buffer de fundo.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Imaging.WriteableBitmap.BackBuffer">
          <source>An <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> that points to the base address of the back buffer.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> que aponta para o endereço básico do buffer de fundo.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Imaging.WriteableBitmap.BackBuffer">
          <source>The back buffer contains the bitmap contents in the pixel format requested by the user.</source>
          <target state="translated">O buffer de fundo contém o conteúdo de bitmap no formato de pixel solicitado pelo usuário.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Imaging.WriteableBitmap.BackBuffer">
          <source>Update the back buffer only between calls to the <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.Lock%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.Unlock%2A&gt;</ph> methods.</source>
          <target state="translated">Atualizar o buffer de fundo somente entre as chamadas para o <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.Lock%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.Unlock%2A&gt;</ph> métodos.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Imaging.WriteableBitmap.BackBuffer">
          <source>If you do not follow the Lock/Unlock workflow described in the <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap&gt;</ph> class remarks, undefined behaviors, such as tearing, can occur.</source>
          <target state="translated">Se você não seguir o fluxo de trabalho de Bloquear/desbloquear descrito o <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap&gt;</ph> classe comentários indefinidos comportamentos, como divisão, podem ocorrer.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Imaging.WriteableBitmap.BackBuffer">
          <source>The address of the back buffer does not change.</source>
          <target state="translated">O endereço do buffer de fundo não é alterado.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Imaging.WriteableBitmap.BackBuffer">
          <source>Thread Safety</source>
          <target state="translated">Segurança de threads</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Imaging.WriteableBitmap.BackBuffer">
          <source>You can pass the <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.BackBuffer%2A&gt;</ph> pointer to external components and other threads for processing, but if you do, you must provide you own thread coordination.</source>
          <target state="translated">Você pode passar o <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.BackBuffer%2A&gt;</ph> ponteiro para componentes externos e outros threads de processamento, mas se você fizer isso, você deve fornecer você coordenação próprio thread.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Imaging.WriteableBitmap.BackBuffer">
          <source>In particular, you must ensure that the UI thread specifies changed areas by calling the <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.AddDirtyRect%2A&gt;</ph> method, and that the UI thread unlocks the buffer by calling the <ph id="ph2">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.Unlock%2A&gt;</ph> method.</source>
          <target state="translated">Em particular, você deve garantir que o thread de interface do usuário Especifica áreas alteradas chamando o <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.AddDirtyRect%2A&gt;</ph> método, e que o thread de interface do usuário desbloqueia o buffer ao chamar o <ph id="ph2">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.Unlock%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.Imaging.WriteableBitmap.BackBufferStride">
          <source>Gets a value indicating the number of bytes in a single row of pixel data.</source>
          <target state="translated">Obtém um valor que indica o número de bytes em uma única linha de dados de pixel.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Imaging.WriteableBitmap.BackBufferStride">
          <source>An integer indicating the number of bytes in a single row of pixel data.</source>
          <target state="translated">Um inteiro que indica o número de bytes em uma única linha de dados de pixel.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.Clone">
          <source>Creates a modifiable clone of this <ph id="ph1">&lt;see cref="T:System.Windows.Media.Imaging.WriteableBitmap" /&gt;</ph>, making deep copies of this object's values.</source>
          <target state="translated">Cria um clone modificável desse <ph id="ph1">&lt;see cref="T:System.Windows.Media.Imaging.WriteableBitmap" /&gt;</ph>, fazendo cópias em profundidade dos valores do objeto.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.Clone">
          <source>When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</source>
          <target state="translated">Ao copiar as propriedades de dependência, esse método copia associações de dados e referências de recurso (mas eles não podem mais resolver), mas não animações ou seus valores atuais.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.Clone">
          <source>A modifiable clone of the current object.</source>
          <target state="translated">Um clone modificável do objeto atual.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.Clone">
          <source>The cloned object's <ph id="ph1">&lt;see cref="P:System.Windows.Freezable.IsFrozen" /&gt;</ph> property will be <ph id="ph2">&lt;see langword="false" /&gt;</ph> even if the source's <ph id="ph3">&lt;see cref="P:System.Windows.Freezable.IsFrozen" /&gt;</ph> property was <ph id="ph4">&lt;see langword="true." /&gt;</ph></source>
          <target state="translated">A propriedade <ph id="ph1">&lt;see cref="P:System.Windows.Freezable.IsFrozen" /&gt;</ph> do objeto clonado será <ph id="ph2">&lt;see langword="false" /&gt;</ph>, mesmo se a propriedade <ph id="ph3">&lt;see cref="P:System.Windows.Freezable.IsFrozen" /&gt;</ph> da origem tiver sido <ph id="ph4">&lt;see langword="true." /&gt;</ph></target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.WriteableBitmap.Clone">
          <source>This method is used to produce modifiable copies of frozen <ph id="ph1">&lt;xref:System.Windows.Freezable&gt;</ph> objects (or any <ph id="ph2">&lt;xref:System.Windows.Freezable&gt;</ph> object).</source>
          <target state="translated">Esse método é usado para produzir cópias modificáveis de congelada <ph id="ph1">&lt;xref:System.Windows.Freezable&gt;</ph> objetos (ou qualquer <ph id="ph2">&lt;xref:System.Windows.Freezable&gt;</ph> objeto).</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.WriteableBitmap.Clone">
          <source>For convenience, this method shadows the inherited version with a strongly typed implementation.</source>
          <target state="translated">Para sua conveniência, este método sombreia a versão herdada com uma implementação fortemente tipada.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.WriteableBitmap.Clone">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Para obter mais informações, consulte <ph id="ph1">&lt;xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.CloneCurrentValue">
          <source>Creates a modifiable clone of this <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.ByteAnimationUsingKeyFrames" /&gt;</ph> object, making deep copies of this object's current values.</source>
          <target state="translated">Cria um clone modificável desse objeto <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.ByteAnimationUsingKeyFrames" /&gt;</ph>, fazendo cópias em profundidade dos valores do objeto atual.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.CloneCurrentValue">
          <source>Resource references, data bindings, and animations are not copied, but their current values are.</source>
          <target state="translated">Referências a recursos, vinculações de dados e animações não são copiadas, mas seus valores atuais são.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.CloneCurrentValue">
          <source>A modifiable clone of the current object.</source>
          <target state="translated">Um clone modificável do objeto atual.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.CloneCurrentValue">
          <source>The cloned object's <ph id="ph1">&lt;see cref="P:System.Windows.Freezable.IsFrozen" /&gt;</ph> property will be <ph id="ph2">&lt;see langword="false" /&gt;</ph> even if the source's <ph id="ph3">&lt;see cref="P:System.Windows.Freezable.IsFrozen" /&gt;</ph> property was <ph id="ph4">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">A propriedade <ph id="ph1">&lt;see cref="P:System.Windows.Freezable.IsFrozen" /&gt;</ph> do objeto clonado será <ph id="ph2">&lt;see langword="false" /&gt;</ph>, mesmo se a propriedade <ph id="ph3">&lt;see cref="P:System.Windows.Freezable.IsFrozen" /&gt;</ph> da origem tiver sido <ph id="ph4">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.WriteableBitmap.CloneCurrentValue">
          <source>This method is used to produce modifiable copies of frozen <ph id="ph1">&lt;xref:System.Windows.Freezable&gt;</ph> objects (or any <ph id="ph2">&lt;xref:System.Windows.Freezable&gt;</ph> object).</source>
          <target state="translated">Esse método é usado para produzir cópias modificáveis de congelada <ph id="ph1">&lt;xref:System.Windows.Freezable&gt;</ph> objetos (ou qualquer <ph id="ph2">&lt;xref:System.Windows.Freezable&gt;</ph> objeto).</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.WriteableBitmap.CloneCurrentValue">
          <source>For convenience, this method shadows the inherited version with a strongly typed implementation.</source>
          <target state="translated">Para sua conveniência, este método sombreia a versão herdada com uma implementação fortemente tipada.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.WriteableBitmap.CloneCurrentValue">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Para obter mais informações, consulte <ph id="ph1">&lt;xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.Lock">
          <source>Reserves the back buffer for updates.</source>
          <target state="translated">Reserva o buffer de fundo para atualizações.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.WriteableBitmap.Lock">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.Lock%2A&gt;</ph> method increments the lock count.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.Lock%2A&gt;</ph> método incrementa a contagem de bloqueio.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.WriteableBitmap.Lock">
          <source>When a <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap&gt;</ph> is locked, the rendering system does not send updates until the <ph id="ph2">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap&gt;</ph> is fully unlocked by calls to the <ph id="ph3">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.Unlock%2A&gt;</ph> method.</source>
          <target state="translated">Quando um <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap&gt;</ph> é bloqueado, o sistema de processamento não enviar atualizações até que o <ph id="ph2">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap&gt;</ph> é totalmente desbloqueado por chamadas para o <ph id="ph3">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.Unlock%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.WriteableBitmap.Lock">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.Lock%2A&gt;</ph> method to support multi-threaded implementations.</source>
          <target state="translated">Você pode usar o <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.Lock%2A&gt;</ph> método para dar suporte a implementações multi-threads.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.WriteableBitmap.Lock">
          <source>In these scenarios, the UI thread locks the bitmap and exposes the back buffer to other threads.</source>
          <target state="translated">Nesses cenários, o thread de interface do usuário bloqueia o bitmap e expõe o buffer de fundo para outros threads.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.WriteableBitmap.Lock">
          <source>When the worker thread has finished a frame, the UI thread adds changed rectangles and unlocks the buffer.</source>
          <target state="translated">Quando o thread de trabalho termina um quadro, o thread de interface do usuário adiciona a retângulos alterados e desbloqueia o buffer.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.WriteableBitmap.Lock">
          <source>The UI thread can block when the render thread acquires a lock on the back buffer to copy it forward to the front buffer.</source>
          <target state="translated">O thread de interface do usuário pode bloquear quando o thread de processamento adquire um bloqueio no buffer de fundo para copiá-lo para a frente no buffer frontal.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.WriteableBitmap.Lock">
          <source>If the latency from this block is too long, use the <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.TryLock%2A&gt;</ph> method to wait for a short time and then unblock the UI thread to perform other tasks while the back buffer is locked.</source>
          <target state="translated">Se a latência desse bloco é muito longa, use o <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.TryLock%2A&gt;</ph> método Aguarde um pouco e, em seguida, desbloquear o thread de interface do usuário para executar outras tarefas enquanto o buffer de fundo está bloqueado.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.WriteableBitmap.Lock">
          <source>The following code example shows how to reserve the back buffer by using the <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.Lock%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo de código a seguir mostra como reservar o buffer de fundo usando o <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.Lock%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.TryLock(System.Windows.Duration)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Duration" /&gt;</ph> that represents the length of time to wait.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Duration" /&gt;</ph> que representa o tempo de espera.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.TryLock(System.Windows.Duration)">
          <source>A value of 0 returns immediately.</source>
          <target state="translated">Um valor igual a 0 é retornado imediatamente.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.TryLock(System.Windows.Duration)">
          <source>A value of <ph id="ph1">&lt;see cref="P:System.Windows.Duration.Forever" /&gt;</ph> blocks indefinitely.</source>
          <target state="translated">Um valor igual a <ph id="ph1">&lt;see cref="P:System.Windows.Duration.Forever" /&gt;</ph> bloqueia indefinidamente.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.TryLock(System.Windows.Duration)">
          <source>Attempts to lock the bitmap, waiting for no longer than the specified length of time.</source>
          <target state="translated">Tenta bloquear o bitmap, aguardando não mais do que o tempo especificado.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.TryLock(System.Windows.Duration)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the lock was acquired; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o bloqueio foi adquirido, caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.WriteableBitmap.TryLock(System.Windows.Duration)">
          <source>When a lock is acquired, the behavior of the <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.TryLock%2A&gt;</ph> method is the same as the <ph id="ph2">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.Lock%2A&gt;</ph> method.</source>
          <target state="translated">Quando um bloqueio é adquirido, o comportamento do <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.TryLock%2A&gt;</ph> método é o mesmo que o <ph id="ph2">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.Lock%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.TryLock(System.Windows.Duration)">
          <source><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="P:System.Windows.Duration.Automatic" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> é definido como <ph id="ph2">&lt;see cref="P:System.Windows.Duration.Automatic" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.WriteableBitmap.TryLock(System.Windows.Duration)">
          <source>for access to unmanaged resources.</source>
          <target state="translated">para acessar os recursos não gerenciados.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.WriteableBitmap.TryLock(System.Windows.Duration)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">Ação de segurança: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.WriteableBitmap.TryLock(System.Windows.Duration)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.Unlock">
          <source>Releases the back buffer to make it available for display.</source>
          <target state="translated">Libera o buffer de fundo para torná-lo disponível para exibição.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.WriteableBitmap.Unlock">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.Unlock%2A&gt;</ph> method decrements the lock count.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.Unlock%2A&gt;</ph> diminui de método a contagem de bloqueio.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.WriteableBitmap.Unlock">
          <source>When the lock count reaches 0, a render pass is requested if the <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.AddDirtyRect%2A&gt;</ph> method has been called.</source>
          <target state="translated">Quando a contagem de bloqueios atinge 0, uma passagem de renderização é solicitada se o <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.AddDirtyRect%2A&gt;</ph> método foi chamado.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.WriteableBitmap.Unlock">
          <source>The following code example shows how to release the back buffer by using the <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.Unlock%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo de código a seguir mostra como liberar o buffer de fundo usando o <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.Unlock%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.Unlock">
          <source>The bitmap has not been locked by a call to the <ph id="ph1">&lt;see cref="M:System.Windows.Media.Imaging.WriteableBitmap.Lock" /&gt;</ph> or <ph id="ph2">&lt;see cref="M:System.Windows.Media.Imaging.WriteableBitmap.TryLock(System.Windows.Duration)" /&gt;</ph> methods.</source>
          <target state="translated">O bitmap não foi bloqueado por uma chamada aos métodos <ph id="ph1">&lt;see cref="M:System.Windows.Media.Imaging.WriteableBitmap.Lock" /&gt;</ph> ou <ph id="ph2">&lt;see cref="M:System.Windows.Media.Imaging.WriteableBitmap.TryLock(System.Windows.Duration)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.WriteableBitmap.Unlock">
          <source>for access to unmanaged resources.</source>
          <target state="translated">para acessar os recursos não gerenciados.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.WriteableBitmap.Unlock">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">Ação de segurança: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.WriteableBitmap.Unlock">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="T:System.Windows.Media.Imaging.WriteableBitmap">
          <source>Updates the pixels of the writeable bitmap.</source>
          <target state="translated">Atualiza os pixels do bitmap gravável.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32)">
          <source>The rectangle of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Imaging.WriteableBitmap" /&gt;</ph> to update.</source>
          <target state="translated">O retângulo do <ph id="ph1">&lt;see cref="T:System.Windows.Media.Imaging.WriteableBitmap" /&gt;</ph> a ser atualizado.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32)">
          <source>The pixel array used to update the bitmap.</source>
          <target state="translated">A matriz de pixel usada para atualizar o bitmap.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32)">
          <source>The stride of the update region in <bpt id="p1">&lt;c&gt;</bpt>pixels<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">A distância da região de atualização em <bpt id="p1">&lt;c&gt;</bpt>pixels<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32)">
          <source>The input buffer offset.</source>
          <target state="translated">O deslocamento do buffer de entrada.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32)">
          <source>Updates the pixels in the specified region of the bitmap.</source>
          <target state="translated">Atualiza os pixels na região especificada do bitmap.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%28System.Windows.Int32Rect%2CSystem.Array%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%28System.Windows.Int32Rect%2CSystem.IntPtr%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> overloads are preferred over using this method.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%28System.Windows.Int32Rect%2CSystem.Array%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%28System.Windows.Int32Rect%2CSystem.IntPtr%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> sobrecargas têm preferência sobre usando esse método.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32)">
          <source>In partial trust, use the <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%28System.Windows.Int32Rect%2CSystem.Array%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> overload.</source>
          <target state="translated">Em confiança parcial, use o <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%28System.Windows.Int32Rect%2CSystem.Array%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> de sobrecarga.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32)">
          <source>The following code example shows how to update a pixel in the back buffer by using the <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo de código a seguir mostra como atualizar um pixel no buffer de fundo usando o <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32)">
          <source>One or more of the following conditions is true.</source>
          <target state="translated">Uma ou mais das seguintes condições é verdadeira.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="sourceRect" /&gt;</ph> falls outside the bounds of the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Imaging.WriteableBitmap" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sourceRect" /&gt;</ph> está fora dos limites do <ph id="ph2">&lt;see cref="T:System.Windows.Media.Imaging.WriteableBitmap" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="stride" /&gt;</ph> <ph id="ph2">&amp;lt;</ph> 1</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stride" /&gt;</ph> <ph id="ph2">&amp;lt;</ph> 1</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> <ph id="ph2">&amp;lt;</ph> 0</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> <ph id="ph2">&amp;lt;</ph> 0</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="pixels" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pixels" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="pixels" /&gt;</ph> has a rank other than 1 or 2, or its length is less than or equal to 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pixels" /&gt;</ph> tem uma classificação diferente de 1 ou 2 ou seu tamanho é menor ou igual a 0.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32)">
          <source>for access to unmanaged resources.</source>
          <target state="translated">para acessar os recursos não gerenciados.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">Ação de segurança: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32)">
          <source>The rectangle of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Imaging.WriteableBitmap" /&gt;</ph> to update.</source>
          <target state="translated">O retângulo do <ph id="ph1">&lt;see cref="T:System.Windows.Media.Imaging.WriteableBitmap" /&gt;</ph> a ser atualizado.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32)">
          <source>The input buffer used to update the bitmap.</source>
          <target state="translated">O buffer de entrada usado para atualizar o bitmap.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32)">
          <source>The size of the input buffer.</source>
          <target state="translated">O tamanho do buffer de entrada.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32)">
          <source>The stride of the update region in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">A distância da região de atualização no <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32)">
          <source>Updates the pixels in the specified region of the bitmap.</source>
          <target state="translated">Atualiza os pixels na região especificada do bitmap.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%28System.Windows.Int32Rect%2CSystem.Array%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%28System.Windows.Int32Rect%2CSystem.IntPtr%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> overloads are preferred over using this method.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%28System.Windows.Int32Rect%2CSystem.Array%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%28System.Windows.Int32Rect%2CSystem.IntPtr%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> sobrecargas têm preferência sobre usando esse método.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32)">
          <source>In partial trust, use the <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%28System.Windows.Int32Rect%2CSystem.Array%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> overload.</source>
          <target state="translated">Em confiança parcial, use o <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%28System.Windows.Int32Rect%2CSystem.Array%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> de sobrecarga.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32)">
          <source>One or more of the following conditions is true.</source>
          <target state="translated">Uma ou mais das seguintes condições é verdadeira.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="sourceRect" /&gt;</ph> falls outside the bounds of the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Imaging.WriteableBitmap" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sourceRect" /&gt;</ph> está fora dos limites do <ph id="ph2">&lt;see cref="T:System.Windows.Media.Imaging.WriteableBitmap" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bufferSize" /&gt;</ph> <ph id="ph2">&amp;lt;</ph> 1</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bufferSize" /&gt;</ph> <ph id="ph2">&amp;lt;</ph> 1</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="stride" /&gt;</ph> <ph id="ph2">&amp;lt;</ph> 1</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stride" /&gt;</ph> <ph id="ph2">&amp;lt;</ph> 1</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32)">
          <source>for access to unmanaged resources.</source>
          <target state="translated">para acessar os recursos não gerenciados.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">Ação de segurança: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32,System.Int32)">
          <source>The rectangle in <bpt id="p1">&lt;c&gt;</bpt>sourceBuffer<ept id="p1">&lt;/c&gt;</ept> to copy.</source>
          <target state="translated">O retângulo no <bpt id="p1">&lt;c&gt;</bpt>sourceBuffer<ept id="p1">&lt;/c&gt;</ept> a ser copiado.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32,System.Int32)">
          <source>The input buffer used to update the bitmap.</source>
          <target state="translated">O buffer de entrada usado para atualizar o bitmap.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32,System.Int32)">
          <source>The stride of the input buffer, in bytes.</source>
          <target state="translated">A distância do buffer de entrada, em bytes.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32,System.Int32)">
          <source>The destination x-coordinate of the left-most pixel in the back buffer.</source>
          <target state="translated">A coordenada x de destino do pixel mais à esquerda no buffer de fundo.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32,System.Int32)">
          <source>The destination y-coordinate of the top-most pixel in the back buffer.</source>
          <target state="translated">A coordenada y de destino do pixel mais ao topo no buffer de fundo.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32,System.Int32)">
          <source>Updates the pixels in the specified region of the bitmap.</source>
          <target state="translated">Atualiza os pixels na região especificada do bitmap.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32,System.Int32)">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%2A&gt;</ph> method to update the <ph id="ph2">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap&gt;</ph> automatically with the contents of <ph id="ph3">`sourceBuffer`</ph>.</source>
          <target state="translated">Chamar o <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%2A&gt;</ph> para atualizar o <ph id="ph2">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap&gt;</ph> automaticamente com o conteúdo de <ph id="ph3">`sourceBuffer`</ph>.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32,System.Int32)">
          <source>Calling this method is the equivalent of using the <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.Lock%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.Unlock%2A&gt;</ph> workflow described in the <ph id="ph3">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap&gt;</ph> class remarks.</source>
          <target state="translated">Chamar esse método é o equivalente a usar o <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.Lock%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.Unlock%2A&gt;</ph> fluxo de trabalho descrito no <ph id="ph3">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap&gt;</ph> classe comentários.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32,System.Int32)">
          <source>Use this overload in partial trust.</source>
          <target state="translated">Use essa sobrecarga em confiança parcial.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32,System.Int32)">
          <source>One or more of the following conditions is true.</source>
          <target state="translated">Uma ou mais das seguintes condições é verdadeira.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="sourceRect" /&gt;</ph> falls outside the bounds of the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Imaging.WriteableBitmap" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sourceRect" /&gt;</ph> está fora dos limites do <ph id="ph2">&lt;see cref="T:System.Windows.Media.Imaging.WriteableBitmap" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="destinationX" /&gt;</ph> or <ph id="ph2">&lt;paramref name="destinationY" /&gt;</ph> is outside the bounds of the <ph id="ph3">&lt;see cref="T:System.Windows.Media.Imaging.WriteableBitmap" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="destinationX" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="destinationY" /&gt;</ph> está fora dos limites do <ph id="ph3">&lt;see cref="T:System.Windows.Media.Imaging.WriteableBitmap" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="sourceBufferStride" /&gt;</ph> <ph id="ph2">&amp;lt;</ph> 1</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sourceBufferStride" /&gt;</ph> <ph id="ph2">&amp;lt;</ph> 1</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="sourceBuffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sourceBuffer" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="sourceBuffer" /&gt;</ph> has a rank other than 1 or 2, or its length is less than or equal to 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sourceBuffer" /&gt;</ph> tem uma classificação diferente de 1 ou 2 ou seu tamanho é menor ou igual a 0.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32,System.Int32)">
          <source>for access to unmanaged resources.</source>
          <target state="translated">para acessar os recursos não gerenciados.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32,System.Int32)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">Ação de segurança: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32,System.Int32)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The rectangle in <bpt id="p1">&lt;c&gt;</bpt>sourceBuffer<ept id="p1">&lt;/c&gt;</ept> to copy.</source>
          <target state="translated">O retângulo no <bpt id="p1">&lt;c&gt;</bpt>sourceBuffer<ept id="p1">&lt;/c&gt;</ept> a ser copiado.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The input buffer used to update the bitmap.</source>
          <target state="translated">O buffer de entrada usado para atualizar o bitmap.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The size of the input buffer.</source>
          <target state="translated">O tamanho do buffer de entrada.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The stride of the input buffer, in bytes.</source>
          <target state="translated">A distância do buffer de entrada, em bytes.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The destination x-coordinate of the left-most pixel in the back buffer.</source>
          <target state="translated">A coordenada x de destino do pixel mais à esquerda no buffer de fundo.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The destination y-coordinate of the top-most pixel in the back buffer.</source>
          <target state="translated">A coordenada y de destino do pixel mais ao topo no buffer de fundo.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Updates the pixels in the specified region of the bitmap.</source>
          <target state="translated">Atualiza os pixels na região especificada do bitmap.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%2A&gt;</ph> method to update the <ph id="ph2">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap&gt;</ph> automatically with the contents of <ph id="ph3">`sourceBuffer`</ph>.</source>
          <target state="translated">Chamar o <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%2A&gt;</ph> para atualizar o <ph id="ph2">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap&gt;</ph> automaticamente com o conteúdo de <ph id="ph3">`sourceBuffer`</ph>.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Calling this method is the equivalent of using the <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.Lock%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.Unlock%2A&gt;</ph> workflow described in the <ph id="ph3">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap&gt;</ph> class remarks.</source>
          <target state="translated">Chamar esse método é o equivalente a usar o <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.Lock%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.Unlock%2A&gt;</ph> fluxo de trabalho descrito no <ph id="ph3">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap&gt;</ph> classe comentários.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>In partial trust, use the <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%28System.Windows.Int32Rect%2CSystem.Array%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> overload.</source>
          <target state="translated">Em confiança parcial, use o <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%28System.Windows.Int32Rect%2CSystem.Array%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> de sobrecarga.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>One or more of the following conditions is true.</source>
          <target state="translated">Uma ou mais das seguintes condições é verdadeira.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="sourceRect" /&gt;</ph> falls outside the bounds of the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Imaging.WriteableBitmap" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sourceRect" /&gt;</ph> está fora dos limites do <ph id="ph2">&lt;see cref="T:System.Windows.Media.Imaging.WriteableBitmap" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="destinationX" /&gt;</ph> or <ph id="ph2">&lt;paramref name="destinationY" /&gt;</ph> is outside the bounds of the <ph id="ph3">&lt;see cref="T:System.Windows.Media.Imaging.WriteableBitmap" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="destinationX" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="destinationY" /&gt;</ph> está fora dos limites do <ph id="ph3">&lt;see cref="T:System.Windows.Media.Imaging.WriteableBitmap" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="sourceBufferSize" /&gt;</ph> <ph id="ph2">&amp;lt;</ph> 1</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sourceBufferSize" /&gt;</ph> <ph id="ph2">&amp;lt;</ph> 1</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="sourceBufferStride" /&gt;</ph> <ph id="ph2">&amp;lt;</ph> 1</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sourceBufferStride" /&gt;</ph> <ph id="ph2">&amp;lt;</ph> 1</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="sourceBuffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sourceBuffer" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>for access to unmanaged resources.</source>
          <target state="translated">para acessar os recursos não gerenciados.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">Ação de segurança: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>