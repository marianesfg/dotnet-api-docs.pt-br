<Type Name="OrderByExpression" FullName="System.Web.UI.WebControls.Expressions.OrderByExpression">
  <Metadata><Meta Name="ms.openlocfilehash" Value="29f5cc0fb65e3da584e69f71f5f3b0cfa318bc24" /><Meta Name="ms.sourcegitcommit" Value="b0551d7828f015124aca601dbb64bd913cc5067d" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="12/13/2018" /><Meta Name="ms.locfileid" Value="53331877" /></Metadata><TypeSignature Language="C#" Value="public class OrderByExpression : System.Web.UI.WebControls.Expressions.DataSourceExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit OrderByExpression extends System.Web.UI.WebControls.Expressions.DataSourceExpression" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Expressions.OrderByExpression" />
  <TypeSignature Language="VB.NET" Value="Public Class OrderByExpression&#xA;Inherits DataSourceExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class OrderByExpression : System::Web::UI::WebControls::Expressions::DataSourceExpression" />
  <TypeSignature Language="F#" Value="type OrderByExpression = class&#xA;    inherit DataSourceExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Expressions.DataSourceExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.ParseChildren(true, "ThenByExpressions")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fornece uma maneira de aplicar uma expressão de classificação a um objeto <see cref="T:System.Linq.IQueryable" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> classe é usada no <xref:System.Web.UI.WebControls.QueryExtender> controle para classificar dados em ordem crescente ou decrescente. A classificação é executada pelo comparador padrão para o tipo do elemento.  
  
 O <xref:System.Web.UI.WebControls.QueryExtender> controle dá suporte a uma variedade de opções que você pode usar para filtrar dados. Depois de usar as opções de filtro, você pode usar o <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> objeto para classificar os dados.  
  
 Você especifica o campo de dados para classificar usando o <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.DataField%2A> propriedade. Especificar a direção de classificação usando o <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.Direction%2A> propriedade. Após o <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> objeto foi aplicado à fonte de dados, você pode usar o <xref:System.Web.UI.WebControls.Expressions.ThenBy> expressões para executar uma classificação subsequente em outro campo de dados.  
  
   
  
## Examples  
 O exemplo a seguir mostra como pesquisar a tabela de produtos de banco de dados AdventureWorks para produtos que têm nomes que começam com a cadeia de caracteres que é especificada no `SearchTextBox` caixa de texto. O <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> object classifica os dados pelo campo de dados ListPrice na ordem decrescente e, em seguida, pelo campo de ID de produto em ordem crescente. O resultado da consulta que é retornado a <xref:System.Web.UI.WebControls.LinqDataSource> controle é exibido em um <xref:System.Web.UI.WebControls.GridView> controle.  
  
 Este exemplo de código é parte de um exemplo maior fornecido em [passo a passo: Filtrando dados em uma página da Web usando a sintaxe declarativa](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f).  
  
  
  
 ]]></format>
    </remarks>
    <exception cref="T:System.InvalidOperationException">A propriedade <see cref="P:System.Web.UI.WebControls.Expressions.OrderByExpression.DataField" /> é <see langword="null" />.</exception>
    <altmember cref="T:System.Web.UI.WebControls.QueryExtender" />
    <related type="Article" href="https://msdn.microsoft.com/library/b93e32b9-af41-4539-a009-6cbbe809c702">Visão geral do controle de servidor Web QueryExtender</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OrderByExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Expressions.OrderByExpression.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OrderByExpression();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.UI.WebControls.Expressions.OrderByExpression" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataField">
      <MemberSignature Language="C#" Value="public string DataField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.OrderByExpression.DataField" />
      <MemberSignature Language="VB.NET" Value="Public Property DataField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataField : string with get, set" Usage="System.Web.UI.WebControls.Expressions.OrderByExpression.DataField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a propriedade do objeto <see cref="T:System.Linq.IQueryable" /> pelo qual classificar.</summary>
        <value>A propriedade do <see cref="T:System.Linq.IQueryable" /> o objeto de fonte de dados para classificar por.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> object classifica os dados em um campo de dados. Tipo de operação subsequente pode ser executado em um campo de dados diferente usando o <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions%2A> propriedade.  
  
   
  
## Examples  
 O exemplo a seguir mostra como classificar dados pelo campo ListPrice na ordem decrescente e, em seguida, pelo campo de ID de produto em ordem crescente. Este exemplo de código é parte de um exemplo maior fornecido em [passo a passo: Filtrando dados em uma página da Web usando a sintaxe declarativa](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f).  
  
```  
<asp:OrderByExpression DataField="ListPrice"   
    Direction="Descending">  
  <asp:ThenBy DataField="ProductID" Direction="Ascending"/>  
</asp:OrderByExpression>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SortDirection Direction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SortDirection Direction" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.OrderByExpression.Direction" />
      <MemberSignature Language="VB.NET" Value="Public Property Direction As SortDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SortDirection Direction { System::Web::UI::WebControls::SortDirection get(); void set(System::Web::UI::WebControls::SortDirection value); };" />
      <MemberSignature Language="F#" Value="member this.Direction : System.Web.UI.WebControls.SortDirection with get, set" Usage="System.Web.UI.WebControls.Expressions.OrderByExpression.Direction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SortDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a direção da classificação do objeto de fonte de dados <see cref="T:System.Linq.IQueryable" />.</summary>
        <value>A direção de classificação do objeto de fonte de dados.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> classe é usada no <xref:System.Web.UI.WebControls.QueryExtender> controle para classificar dados em ordem crescente ou decrescente. A direção da operação de classificação é especificada usando o <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.Direction%2A> propriedade.  
  
   
  
## Examples  
 O exemplo a seguir mostra como classificar dados pelo campo ListPrice na ordem decrescente e, em seguida, pelo campo ProductID em ordem crescente. Este exemplo de código é parte de um exemplo maior fornecido no [passo a passo: Filtrando dados em uma página da Web usando a sintaxe declarativa](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f).  
  
```  
<asp:OrderByExpression DataField="ListPrice"   
    Direction="Descending">  
  <asp:ThenBy DataField="ProductID" Direction="Ascending"/>  
</asp:OrderByExpression>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetQueryable">
      <MemberSignature Language="C#" Value="public override System.Linq.IQueryable GetQueryable (System.Linq.IQueryable source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Linq.IQueryable GetQueryable(class System.Linq.IQueryable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Expressions.OrderByExpression.GetQueryable(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetQueryable (source As IQueryable) As IQueryable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Linq::IQueryable ^ GetQueryable(System::Linq::IQueryable ^ source);" />
      <MemberSignature Language="F#" Value="override this.GetQueryable : System.Linq.IQueryable -&gt; System.Linq.IQueryable" Usage="orderByExpression.GetQueryable source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable" />
      </Parameters>
      <Docs>
        <param name="source">Especifica a fonte de dados à qual aplicar a classificação.</param>
        <summary>Aplica-se uma expressão de classificação a um objeto <see cref="T:System.Linq.IQueryable" /> com base em um valor <see cref="P:System.Web.UI.WebControls.Expressions.OrderByExpression.DataField" /> e um valor <see cref="P:System.Web.UI.WebControls.Expressions.OrderByExpression.Direction" />.</summary>
        <returns>Uma instância da fonte de dados à qual a expressão foi aplicada.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThenByExpressions">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Web.UI.WebControls.Expressions.ThenBy&gt; ThenByExpressions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Web.UI.WebControls.Expressions.ThenBy&gt; ThenByExpressions" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ThenByExpressions As Collection(Of ThenBy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Web::UI::WebControls::Expressions::ThenBy ^&gt; ^ ThenByExpressions { System::Collections::ObjectModel::Collection&lt;System::Web::UI::WebControls::Expressions::ThenBy ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ThenByExpressions : System.Collections.ObjectModel.Collection&lt;System.Web.UI.WebControls.Expressions.ThenBy&gt;" Usage="System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Web.UI.WebControls.Expressions.ThenBy&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a coleção de expressões <see cref="T:System.Web.UI.WebControls.Expressions.ThenBy" /> a aplicar após um valor <see cref="T:System.Web.UI.WebControls.Expressions.OrderByExpression" /> ser aplicado à fonte de dados.</summary>
        <value>A coleção de <see cref="T:System.Web.UI.WebControls.Expressions.ThenBy" /> expressões a serem aplicadas após o <see cref="T:System.Web.UI.WebControls.Expressions.OrderByExpression" /> é aplicado à fonte de dados.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Após uma classificação operação é realizada usando o <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> no <xref:System.Web.UI.WebControls.QueryExtender> controlar, classificação subsequente operações podem ser executadas usando o <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions%2A> propriedade.  
  
   
  
## Examples  
 O exemplo a seguir mostra como classificar dados pelo campo ListPrice na ordem decrescente e, em seguida, pelo campo de ID de produto em crescente ordem usando o <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions%2A>. Este exemplo de código é parte de um exemplo maior fornecido em [passo a passo: Filtrando dados em uma página da Web usando a sintaxe declarativa](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f).  
  
```  
<asp:OrderByExpression DataField="ListPrice"   
    Direction="Descending">  
  <asp:ThenBy DataField="ProductID" Direction="Ascending"/>  
</asp:OrderByExpression>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>