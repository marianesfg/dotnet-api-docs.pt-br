<Type Name="QueryExpression" FullName="System.Web.UI.WebControls.Expressions.QueryExpression">
  <Metadata><Meta Name="ms.openlocfilehash" Value="98ac86f64cb0fd1e24dba93538e580804cf9ba57" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55400924" /></Metadata><TypeSignature Language="C#" Value="public class QueryExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit QueryExpression extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Expressions.QueryExpression" />
  <TypeSignature Language="VB.NET" Value="Public Class QueryExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class QueryExpression" />
  <TypeSignature Language="F#" Value="type QueryExpression = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true, "Expressions")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Recupera as instâncias de um tipo de entidade específico por meio de uma consulta complexa.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Controles que derivam da fonte de dados <xref:System.Web.UI.WebControls.IQueryableDataSource> expor a consulta de fonte de dados que permite que você crie consultas LINQ declarativamente. Você pode criar novas expressões, derivando de <xref:System.Web.UI.WebControls.Expressions.DataSourceExpression>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QueryExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Expressions.QueryExpression.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; QueryExpression();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.UI.WebControls.Expressions.QueryExpression" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Expressions">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection Expressions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection Expressions" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.QueryExpression.Expressions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Expressions As DataSourceExpressionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Expressions::DataSourceExpressionCollection ^ Expressions { System::Web::UI::WebControls::Expressions::DataSourceExpressionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Expressions : System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection" Usage="System.Web.UI.WebControls.Expressions.QueryExpression.Expressions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerDefaultProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a coleção de expressões na consulta.</summary>
        <value>A coleção de expressões na consulta.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetQueryable">
      <MemberSignature Language="C#" Value="public virtual System.Linq.IQueryable GetQueryable (System.Linq.IQueryable source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable GetQueryable(class System.Linq.IQueryable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Expressions.QueryExpression.GetQueryable(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetQueryable (source As IQueryable) As IQueryable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Linq::IQueryable ^ GetQueryable(System::Linq::IQueryable ^ source);" />
      <MemberSignature Language="F#" Value="abstract member GetQueryable : System.Linq.IQueryable -&gt; System.Linq.IQueryable&#xA;override this.GetQueryable : System.Linq.IQueryable -&gt; System.Linq.IQueryable" Usage="queryExpression.GetQueryable source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable" />
      </Parameters>
      <Docs>
        <param name="source">O controle de fonte de dados a usar.</param>
        <summary>A expressão é resolvida usando o controle de fonte de dados <see cref="T:System.Linq.IQueryable" /> especificado.</summary>
        <returns>Uma instância do controle de fonte de dados que foi usado para resolver a expressão.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Expressions.QueryExpression.GetQueryable%2A> usa o método especificado <xref:System.Linq.IQueryable> objeto para resolver a expressão.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (System.Web.UI.Control owner, System.Web.HttpContext context, System.Web.UI.WebControls.IQueryableDataSource dataSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Initialize(class System.Web.UI.Control owner, class System.Web.HttpContext context, class System.Web.UI.WebControls.IQueryableDataSource dataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Expressions.QueryExpression.Initialize(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize (owner As Control, context As HttpContext, dataSource As IQueryableDataSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Initialize(System::Web::UI::Control ^ owner, System::Web::HttpContext ^ context, System::Web::UI::WebControls::IQueryableDataSource ^ dataSource);" />
      <MemberSignature Language="F#" Value="member this.Initialize : System.Web.UI.Control * System.Web.HttpContext * System.Web.UI.WebControls.IQueryableDataSource -&gt; unit" Usage="queryExpression.Initialize (owner, context, dataSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.Control" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="dataSource" Type="System.Web.UI.WebControls.IQueryableDataSource" />
      </Parameters>
      <Docs>
        <param name="owner">O controle a ser usado.</param>
        <param name="context">O contexto a ser usado.</param>
        <param name="dataSource">A fonte de dados a ser usada.</param>
        <summary>Inicializa o objeto <see cref="T:System.Web.UI.WebControls.Expressions.QueryExpression" /> usando o controle de proprietário especificado, uma instância de <see cref="T:System.Web.HttpContext" /> e um objeto <see cref="T:System.Web.UI.WebControls.IQueryableDataSource" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>