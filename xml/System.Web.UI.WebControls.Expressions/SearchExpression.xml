<Type Name="SearchExpression" FullName="System.Web.UI.WebControls.Expressions.SearchExpression">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8f8304659494b43182397f514f9ddab2601fbf56" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46652555" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SearchExpression : System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SearchExpression extends System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Expressions.SearchExpression" />
  <TypeSignature Language="VB.NET" Value="Public Class SearchExpression&#xA;Inherits ParameterDataSourceExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class SearchExpression : System::Web::UI::WebControls::Expressions::ParameterDataSourceExpression" />
  <TypeSignature Language="F#" Value="type SearchExpression = class&#xA;    inherit ParameterDataSourceExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornece uma maneira de pesquisar valores de cadeia de caracteres em um ou mais campos e compará-los com um valor de cadeia de caracteres especificado.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.QueryExtender> controle fornece a capacidade de filtrar dados em uma página da Web usando o <xref:System.Web.UI.WebControls.Expressions.SearchExpression> classe. O <xref:System.Web.UI.WebControls.Expressions.SearchExpression> classe compara uma cadeia de caracteres especificada em um campo ou campos para um valor que você fornece. A expressão realiza um "começa com", "contém" ou "termina com" pesquisa. Você deve especificar valores para o <xref:System.Web.UI.WebControls.Expressions.SearchExpression.SearchType%2A> e o <xref:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields%2A> propriedades para indicar o tipo de pesquisa que você deseja executar e os campos de dados que você deseja pesquisar. Se o provedor LINQ que você usa na <xref:System.Web.UI.WebControls.QueryExtender> controle dá suporte a diferenciação de maiusculas, você pode usar o <xref:System.Web.UI.WebControls.Expressions.SearchExpression.ComparisonType%2A> propriedade para habilitar ou Ignorar maiusculas e minúsculas.  
  
 O valor de pesquisa pode ser fornecido por um [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] controle. Para especificar isso, defina o <xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A> propriedade do <xref:System.Web.UI.WebControls.ControlParameter> classe no <xref:System.Web.UI.WebControls.Expressions.SearchExpression> objeto como a ID de um [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] controle. Por exemplo, se o valor de pesquisa é inserido em uma caixa de texto, o <xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A> propriedade deve ser definida como a ID do controle de caixa de texto. Você pode usar o <xref:System.Web.UI.WebControls.Expressions.SearchExpression> classe em combinação com outras expressões que o <xref:System.Web.UI.WebControls.QueryExtender> oferece suporte, como o <xref:System.Web.UI.WebControls.Expressions.RangeExpression> filtro. Por exemplo, você pode pesquisar nomes de produtos que contêm a cadeia de caracteres "chá" e uma lista de preços entre 100 e 200.  
  
   
  
## Examples  
 O exemplo a seguir mostra como pesquisar a coluna de nome na tabela Products do banco de dados AdventureWorks para produtos cuja que começam com a cadeia de caracteres que é especificada no `SearchTextBox` controle. O resultado que é retornado a <xref:System.Web.UI.WebControls.LinqDataSource> controle é exibido em um <xref:System.Web.UI.WebControls.GridView> controle.  
  
 Este exemplo de código é parte de um exemplo maior fornecido em [instruções passo a passo: filtrando os dados na página da Web usando sintaxe declarativa](http://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f).  
  
  
  
 ]]></format>
    </remarks>
    <exception cref="T:System.InvalidOperationException">A propriedade <see cref="P:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields" /> é <see langword="null" /> (<see langword="Nothing" /> no Visual Basic)</exception>
    <altmember cref="T:System.Web.UI.WebControls.QueryExtender" />
    <related type="Article" href="http://msdn.microsoft.com/library/b93e32b9-af41-4539-a009-6cbbe809c702">Visão geral do controle de servidor Web QueryExtender</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SearchExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Expressions.SearchExpression.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SearchExpression();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.UI.WebControls.Expressions.SearchExpression" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComparisonType">
      <MemberSignature Language="C#" Value="public StringComparison ComparisonType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.StringComparison ComparisonType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.SearchExpression.ComparisonType" />
      <MemberSignature Language="VB.NET" Value="Public Property ComparisonType As StringComparison" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property StringComparison ComparisonType { StringComparison get(); void set(StringComparison value); };" />
      <MemberSignature Language="F#" Value="member this.ComparisonType : StringComparison with get, set" Usage="System.Web.UI.WebControls.Expressions.SearchExpression.ComparisonType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparison</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o tipo de comparação de cadeia de caracteres a ser executada.</summary>
        <value>O tipo de comparação de cadeia de caracteres a ser executada.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa propriedade permite que você use o <xref:System.StringComparison> enumeração para especificar como a pesquisa é executada. O <xref:System.StringComparison> enumeração é usada para especificar se uma comparação de cadeia de caracteres usa a cultura atual ou a cultura invariável, e se ele usa o texto ou regras de classificação ordinal. Se o provedor de dados que o <xref:System.Web.UI.WebControls.QueryExtender> usa suporta diferenciar maiusculas de minúsculas, você pode usar uma das propriedades de tipo de comparação para habilitar ou Ignorar maiusculas e minúsculas.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">A propriedade <see cref="P:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DataFields">
      <MemberSignature Language="C#" Value="public string DataFields { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataFields" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields" />
      <MemberSignature Language="VB.NET" Value="Public Property DataFields As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataFields { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataFields : string with get, set" Usage="System.Web.UI.WebControls.Expressions.SearchExpression.DataFields" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém e define um único campo ou uma lista separada por vírgula de campos a serem pesquisados.</summary>
        <value>O campo ou campos a serem pesquisados.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Expressions.SearchExpression> classe executa a pesquisa em um ou mais campos de dados na tabela especificada. Pelo menos um campo de dados deve ser especificado no <xref:System.Web.UI.WebControls.Expressions.SearchExpression> instância. Se você especificar mais de um campo de dados, separe os campos usando uma vírgula.  
  
   
  
## Examples  
 O exemplo a seguir mostra como pesquisar o nome e os campos de dados ProductNumber na tabela Products do banco de dados AdventureWorks para produtos que têm nomes que começam com uma cadeia de caracteres especificada. Este exemplo de código é parte de um exemplo maior fornecido no [instruções passo a passo: filtrando os dados na página da Web usando sintaxe declarativa](http://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f).  
  
```  
<asp:SearchExpression SearchType="StartsWith"   
      DataFields="Name","ProductNumber" >  
  <asp:ControlParameter ControlID="SearchTextBox" />  
</asp:SearchExpression>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">A propriedade <see cref="P:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetQueryable">
      <MemberSignature Language="C#" Value="public override System.Linq.IQueryable GetQueryable (System.Linq.IQueryable source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Linq.IQueryable GetQueryable(class System.Linq.IQueryable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Expressions.SearchExpression.GetQueryable(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetQueryable (source As IQueryable) As IQueryable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Linq::IQueryable ^ GetQueryable(System::Linq::IQueryable ^ source);" />
      <MemberSignature Language="F#" Value="override this.GetQueryable : System.Linq.IQueryable -&gt; System.Linq.IQueryable" Usage="searchExpression.GetQueryable source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable" />
      </Parameters>
      <Docs>
        <param name="source">O objeto a ser usado.</param>
        <summary>Aplica um objeto <see cref="T:System.Web.UI.WebControls.Expressions.SearchExpression" /> ao objeto <see cref="T:System.Linq.IQueryable" /> especificado com base no objeto <see cref="T:System.Web.UI.WebControls.Expressions.SearchType" />.</summary>
        <returns>Uma instância do objeto <see cref="T:System.Linq.IQueryable" /> à qual a <see cref="T:System.Web.UI.WebControls.Expressions.SearchExpression" /> foi aplicada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa propriedade é avaliada a coleção de parâmetros que são usados na <xref:System.Web.UI.WebControls.Expressions.SearchExpression> do objeto e aplica-se a expressão a ser o <xref:System.Linq.IQueryable> objeto. Se forem especificados vários campos de dados, o `AND` operador é aplicado a campos de dados.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">A propriedade <see cref="P:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SearchType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Expressions.SearchType SearchType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Expressions.SearchType SearchType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.SearchExpression.SearchType" />
      <MemberSignature Language="VB.NET" Value="Public Property SearchType As SearchType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Expressions::SearchType SearchType { System::Web::UI::WebControls::Expressions::SearchType get(); void set(System::Web::UI::WebControls::Expressions::SearchType value); };" />
      <MemberSignature Language="F#" Value="member this.SearchType : System.Web.UI.WebControls.Expressions.SearchType with get, set" Usage="System.Web.UI.WebControls.Expressions.SearchExpression.SearchType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Expressions.SearchType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o valor <see cref="T:System.Web.UI.WebControls.Expressions.SearchType" /> que determina o ponto na cadeia de caracteres em que a pesquisa ocorre.</summary>
        <value>O tipo de pesquisa a ser executado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.WebControls.Expressions.SearchType> usos de propriedade de <xref:System.Web.UI.WebControls.Expressions.SearchType> enumeração que contém os tipos de pesquisa a serem usados em uma instância da <xref:System.Web.UI.WebControls.Expressions.SearchExpression> classe.  
  
 A tabela a seguir lista os possíveis valores de enumeração.  
  
|Enumeração|Descrição|  
|-----------------|-----------------|  
|<xref:System.Web.UI.WebControls.Expressions.SearchType.StartsWith>|Indica uma pesquisa que começa em qualquer lugar em um campo.|  
|<xref:System.Web.UI.WebControls.Expressions.SearchType.Contains>|Indica uma pesquisa que começa no início de um campo.|  
|<xref:System.Web.UI.WebControls.Expressions.SearchType.EndsWith>|Indica uma pesquisa que no final de um campo.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>