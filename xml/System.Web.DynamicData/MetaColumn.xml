<Type Name="MetaColumn" FullName="System.Web.DynamicData.MetaColumn">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9d8d893fb62966a8db4730b7354f9f1690d3cd18" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51938219" /></Metadata><TypeSignature Language="C#" Value="public class MetaColumn : System.Web.DynamicData.IFieldFormattingOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MetaColumn extends System.Object implements class System.Web.DynamicData.IFieldFormattingOptions" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.MetaColumn" />
  <TypeSignature Language="VB.NET" Value="Public Class MetaColumn&#xA;Implements IFieldFormattingOptions" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetaColumn : System::Web::DynamicData::IFieldFormattingOptions" />
  <TypeSignature Language="F#" Value="type MetaColumn = class&#xA;    interface IFieldFormattingOptions" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.DynamicData.IFieldFormattingOptions</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="bb6ae-101">Representa uma coluna de banco de dados que é usada pelos Dados Dinâmicos.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-101">Represents a database column that is used by Dynamic Data.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb6ae-102">Em aplicativos de dados dinâmicos do ASP.NET, o <xref:System.Web.DynamicData.MetaColumn> classe representa um campo de banco de dados.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-102">In ASP.NET Dynamic Data applications, the <xref:System.Web.DynamicData.MetaColumn> class represents a database field.</span></span> <span data-ttu-id="bb6ae-103">O <xref:System.Web.DynamicData.MetaColumn> classe lhe permite recuperar informações sobre o campo de dados, como informações de tipo e os metadados.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-103">The <xref:System.Web.DynamicData.MetaColumn> class lets you retrieve information about the data field such as type and metadata information.</span></span>  
  
 <span data-ttu-id="bb6ae-104">Você pode recuperar a tabela à qual pertence o campo de dados usando o <xref:System.Web.DynamicData.MetaColumn.Table%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-104">You can retrieve the table that the data field belongs to by using the <xref:System.Web.DynamicData.MetaColumn.Table%2A> property.</span></span> <span data-ttu-id="bb6ae-105">Você também pode recuperar o modelo de dados usando o <xref:System.Web.DynamicData.MetaColumn.Model%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-105">You can also retrieve the data model by using the <xref:System.Web.DynamicData.MetaColumn.Model%2A> property.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.DynamicData.MetaChildrenColumn" />
    <altmember cref="T:System.Web.DynamicData.MetaForeignKeyColumn" />
    <related type="Article" href="https://msdn.microsoft.com/library/78c7fcd7-5f38-46a0-a4bc-48eff3c8a512"><span data-ttu-id="bb6ae-106">Visão geral de dados dinâmicos do ASP.NET</span><span class="sxs-lookup"><span data-stu-id="bb6ae-106">ASP.NET Dynamic Data Overview</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetaColumn (System.Web.DynamicData.MetaTable table, System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.DynamicData.MetaTable table, class System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaColumn.#ctor(System.Web.DynamicData.MetaTable,System.Web.DynamicData.ModelProviders.ColumnProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MetaColumn(System::Web::DynamicData::MetaTable ^ table, System::Web::DynamicData::ModelProviders::ColumnProvider ^ columnProvider);" />
      <MemberSignature Language="F#" Value="new System.Web.DynamicData.MetaColumn : System.Web.DynamicData.MetaTable * System.Web.DynamicData.ModelProviders.ColumnProvider -&gt; System.Web.DynamicData.MetaColumn" Usage="new System.Web.DynamicData.MetaColumn (table, columnProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="table" Type="System.Web.DynamicData.MetaTable" />
        <Parameter Name="columnProvider" Type="System.Web.DynamicData.ModelProviders.ColumnProvider" />
      </Parameters>
      <Docs>
        <param name="table"><span data-ttu-id="bb6ae-107">A metatabela que contém a coluna.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-107">The meta table that contains the column.</span></span></param>
        <param name="columnProvider"><span data-ttu-id="bb6ae-108">O provedor de coluna.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-108">The column provider.</span></span></param>
        <summary><span data-ttu-id="bb6ae-109">Inicializa uma nova instância da classe <see cref="T:System.Web.DynamicData.MetaColumn" />.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-109">Initializes a new instance of the <see cref="T:System.Web.DynamicData.MetaColumn" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowInitialValue">
      <MemberSignature Language="C#" Value="public bool AllowInitialValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowInitialValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.AllowInitialValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowInitialValue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowInitialValue { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowInitialValue : bool" Usage="System.Web.DynamicData.MetaColumn.AllowInitialValue" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.AllowInitialValue</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb6ae-110">Obtém ou define um valor que especifica se uma coluna permite que um valor seja inserido.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-110">Gets or sets a value that specifies whether a column enables a value to be inserted.</span></span></summary>
        <value><span data-ttu-id="bb6ae-111"><see langword="true" /> Se a coluna permite que um valor a ser inserido; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-111"><see langword="true" /> if the column enables a value to be inserted; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb6ae-112">O valor padrão é `false` quando a coluna é somente leitura e `true` quando a coluna não é somente leitura.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-112">The default value is `false` when the column is read-only and `true` when the column is not read-only.</span></span> <span data-ttu-id="bb6ae-113">O valor padrão pode ser substituído usando o <xref:System.ComponentModel.DataAnnotations.EditableAttribute> atributo.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-113">The default value can be overridden by using the <xref:System.ComponentModel.DataAnnotations.EditableAttribute> attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyFormatInEditMode">
      <MemberSignature Language="C#" Value="public bool ApplyFormatInEditMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ApplyFormatInEditMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.ApplyFormatInEditMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ApplyFormatInEditMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ApplyFormatInEditMode { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplyFormatInEditMode : bool" Usage="System.Web.DynamicData.MetaColumn.ApplyFormatInEditMode" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IFieldFormattingOptions.ApplyFormatInEditMode</InterfaceMember>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.ApplyFormatInEditMode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb6ae-114">Obtém um valor que indica se a cadeia de caracteres de formatação especificada pela propriedade <see cref="P:System.Web.DynamicData.MetaColumn.DataFormatString" /> é aplicada aos valores de campo quando o controle associado aos dados que contém o campo de dados representado pelo objeto <see cref="T:System.Web.DynamicData.MetaColumn" /> está no modo de edição.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-114">Gets a value that indicates whether the formatting string specified by the <see cref="P:System.Web.DynamicData.MetaColumn.DataFormatString" /> property is applied to field values when the data-bound control that contains the data field that is represented by the <see cref="T:System.Web.DynamicData.MetaColumn" /> object is in edit mode.</span></span></summary>
        <value><span data-ttu-id="bb6ae-115"><see langword="true" /> Se a cadeia de caracteres de formatação especificada pela <see cref="P:System.Web.DynamicData.MetaColumn.DataFormatString" /> propriedade é aplicada aos valores de campo quando o controle associado a dados que contém o campo de dados que é representado pela <see cref="T:System.Web.DynamicData.MetaColumn" /> objeto está no modo de edição; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-115"><see langword="true" /> if the formatting string specified by the <see cref="P:System.Web.DynamicData.MetaColumn.DataFormatString" /> property is applied to field values when the data-bound control that contains the data field that is represented by the <see cref="T:System.Web.DynamicData.MetaColumn" /> object is in edit mode; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb6ae-116">O <xref:System.Web.DynamicData.MetaColumn.ApplyFormatInEditMode%2A> propriedade verifica se um <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> atributo é aplicado ao campo de dados e recupera o valor da <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ApplyFormatInEditMode%2A?displayProperty=nameWithType> propriedade.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-116">The <xref:System.Web.DynamicData.MetaColumn.ApplyFormatInEditMode%2A> property verifies if a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ApplyFormatInEditMode%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="bb6ae-117">Se um <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> atributo não for encontrado, essa propriedade verifica se um <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> atributo é aplicado para recuperar informações de formatação.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-117">If a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is not found, this property verifies if a <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> attribute is applied to retrieve formatting information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DataAnnotations.DisplayFormatAttribute" />
        <altmember cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ApplyFormatInEditMode" />
        <altmember cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.DataFormatString" />
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.ComponentModel.AttributeCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.AttributeCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::AttributeCollection ^ Attributes { System::ComponentModel::AttributeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.ComponentModel.AttributeCollection" Usage="System.Web.DynamicData.MetaColumn.Attributes" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.Attributes</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb6ae-118">Obtém a coleção de atributos de metadados que se aplicam ao campo de dados representado pelo objeto <see cref="T:System.Web.DynamicData.MetaColumn" />.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-118">Gets the collection of metadata attributes that apply to the data field represented by the <see cref="T:System.Web.DynamicData.MetaColumn" /> object.</span></span></summary>
        <value><span data-ttu-id="bb6ae-119">A coleção de atributos de metadados que se aplicam ao campo de dados representado pelo <see cref="T:System.Web.DynamicData.MetaColumn" /> objeto.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-119">The collection of metadata attributes that apply to the data field represented by the <see cref="T:System.Web.DynamicData.MetaColumn" /> object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildAttributeCollection">
      <MemberSignature Language="C#" Value="protected virtual System.ComponentModel.AttributeCollection BuildAttributeCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.ComponentModel.AttributeCollection BuildAttributeCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaColumn.BuildAttributeCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function BuildAttributeCollection () As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::ComponentModel::AttributeCollection ^ BuildAttributeCollection();" />
      <MemberSignature Language="F#" Value="abstract member BuildAttributeCollection : unit -&gt; System.ComponentModel.AttributeCollection&#xA;override this.BuildAttributeCollection : unit -&gt; System.ComponentModel.AttributeCollection" Usage="metaColumn.BuildAttributeCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bb6ae-120">Obtém a coleção de atributos.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-120">Gets the attribute collection.</span></span></summary>
        <returns><span data-ttu-id="bb6ae-121">A coleção de atributo.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-121">The attribute collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb6ae-122">Você deve chamar o <xref:System.Web.DynamicData.MetaColumn.BuildAttributeCollection%2A> método antes de acessar o <xref:System.Web.DynamicData.MetaColumn.Attributes%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-122">You must call the <xref:System.Web.DynamicData.MetaColumn.BuildAttributeCollection%2A> method before you access the <xref:System.Web.DynamicData.MetaColumn.Attributes%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnType">
      <MemberSignature Language="C#" Value="public Type ColumnType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ColumnType" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.ColumnType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ColumnType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ColumnType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ColumnType : Type" Usage="System.Web.DynamicData.MetaColumn.ColumnType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.ColumnType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb6ae-123">Obtém o tipo de campo de dados.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-123">Gets the data field type.</span></span></summary>
        <value><span data-ttu-id="bb6ae-124">O tipo de campo de dados.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-124">The data field type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb6ae-125">O <xref:System.Web.DynamicData.MetaColumn.ColumnType%2A> propriedade retorna o tipo do common language runtime (CLR) do campo de dados.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-125">The <xref:System.Web.DynamicData.MetaColumn.ColumnType%2A> property returns the common language runtime (CLR) type of the data field.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertEmptyStringToNull">
      <MemberSignature Language="C#" Value="public bool ConvertEmptyStringToNull { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConvertEmptyStringToNull" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.ConvertEmptyStringToNull" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConvertEmptyStringToNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConvertEmptyStringToNull { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ConvertEmptyStringToNull : bool" Usage="System.Web.DynamicData.MetaColumn.ConvertEmptyStringToNull" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IFieldFormattingOptions.ConvertEmptyStringToNull</InterfaceMember>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.ConvertEmptyStringToNull</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb6ae-126">Obtém um valor que indica se os valores de cadeia de caracteres vazia ("") são convertidos automaticamente em valores <see langword="null" /> quando o campo de dados é atualizado na fonte de dados.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-126">Gets a value that indicates whether empty string values ("") are automatically converted to <see langword="null" /> values when the data field is updated in the data source.</span></span></summary>
        <value><span data-ttu-id="bb6ae-127"><see langword="true" /> Se os valores de cadeia de caracteres vazia são convertidos automaticamente para <see langword="null" /> valores quando o campo de dados é atualizado na fonte de dados; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-127"><see langword="true" /> if empty string values are automatically converted to <see langword="null" /> values when the data field is updated in the data source; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb6ae-128">O <xref:System.Web.DynamicData.MetaColumn.ConvertEmptyStringToNull%2A> propriedade verifica se um <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> atributo é aplicado ao campo de dados e recupera o valor da <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull%2A?displayProperty=nameWithType> propriedade.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-128">The <xref:System.Web.DynamicData.MetaColumn.ConvertEmptyStringToNull%2A> property verifies if a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="bb6ae-129">Se um <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> atributo não for encontrado, essa propriedade verifica se um <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> atributo é aplicado para recuperar informações de formatação.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-129">If a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is not found, this property verifies if a <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> attribute is applied to retrieve formatting information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DataAnnotations.DisplayFormatAttribute" />
        <altmember cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull" />
        <altmember cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" />
      </Docs>
    </Member>
    <Member MemberName="DataFormatString">
      <MemberSignature Language="C#" Value="public string DataFormatString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.DataFormatString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataFormatString { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataFormatString : string" Usage="System.Web.DynamicData.MetaColumn.DataFormatString" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IFieldFormattingOptions.DataFormatString</InterfaceMember>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.DataFormatString</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb6ae-130">Obtém a cadeia de caracteres que especifica o formato de exibição para o valor de campo.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-130">Gets the string that specifies the display format for the field value.</span></span></summary>
        <value><span data-ttu-id="bb6ae-131">A cadeia de caracteres que especifica o formato de exibição para o valor do campo.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-131">The string that specifies the display format for the field value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb6ae-132">O <xref:System.Web.DynamicData.MetaColumn.DataFormatString%2A> propriedade verifica se um <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> atributo é aplicado ao campo de dados e recupera o valor da <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A?displayProperty=nameWithType> propriedade.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-132">The <xref:System.Web.DynamicData.MetaColumn.DataFormatString%2A> property verifies if a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="bb6ae-133">Se um <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> atributo não for encontrado, essa propriedade verifica se um <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> atributo é aplicado para recuperar informações de formatação.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-133">If a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is not found, this property verifies if a <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> attribute is applied to retrieve formatting information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DataAnnotations.DisplayFormatAttribute" />
        <altmember cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString" />
        <altmember cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.ApplyFormatInEditMode" />
      </Docs>
    </Member>
    <Member MemberName="DataTypeAttribute">
      <MemberSignature Language="C#" Value="public System.ComponentModel.DataAnnotations.DataTypeAttribute DataTypeAttribute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.DataAnnotations.DataTypeAttribute DataTypeAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.DataTypeAttribute" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataTypeAttribute As DataTypeAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::DataAnnotations::DataTypeAttribute ^ DataTypeAttribute { System::ComponentModel::DataAnnotations::DataTypeAttribute ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataTypeAttribute : System.ComponentModel.DataAnnotations.DataTypeAttribute" Usage="System.Web.DynamicData.MetaColumn.DataTypeAttribute" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.DataTypeAttribute</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.DataAnnotations.DataTypeAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb6ae-134">Obtém o atributo <see cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" /> que é aplicado ao campo de dados.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-134">Gets the <see cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" /> attribute that is applied to the data field.</span></span></summary>
        <value><span data-ttu-id="bb6ae-135">O <see cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" /> atributo é aplicado ao campo de dados.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-135">The <see cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" /> attribute that is applied to the data field.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" />
      </Docs>
    </Member>
    <Member MemberName="DefaultValue">
      <MemberSignature Language="C#" Value="public object DefaultValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DefaultValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.DefaultValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DefaultValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultValue : obj" Usage="System.Web.DynamicData.MetaColumn.DefaultValue" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.DefaultValue</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb6ae-136">Obtém o valor padrão para o campo de dados.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-136">Gets the default value for the data field.</span></span></summary>
        <value><span data-ttu-id="bb6ae-137">O valor padrão para o campo de dados.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-137">The default value for the data field.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb6ae-138">O <xref:System.Web.DynamicData.MetaColumn.DefaultValue%2A> propriedade normalmente é usada para preencher previamente o valor do campo quando uma nova entrada é criada.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-138">The <xref:System.Web.DynamicData.MetaColumn.DefaultValue%2A> property is typically used to pre-populate the field value when a new entry is created.</span></span> <span data-ttu-id="bb6ae-139">Essa propriedade verifica se um <xref:System.ComponentModel.DefaultValueAttribute> atributo é aplicado ao campo de dados e recupera o valor da <xref:System.ComponentModel.DefaultValueAttribute.Value%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-139">This property verifies if a <xref:System.ComponentModel.DefaultValueAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DefaultValueAttribute.Value%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DefaultValueAttribute" />
        <altmember cref="P:System.ComponentModel.DefaultValueAttribute.Value" />
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public virtual string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.Description" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Description { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Description : string" Usage="System.Web.DynamicData.MetaColumn.Description" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.Description</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb6ae-140">Obtém a descrição para o campo de dados.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-140">Gets the description for the data field.</span></span></summary>
        <value><span data-ttu-id="bb6ae-141">A descrição para o campo de dados.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-141">The description for the data field.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb6ae-142">O <xref:System.Web.DynamicData.MetaColumn.Description%2A> propriedade verifica se um <xref:System.ComponentModel.DescriptionAttribute> atributo é aplicado ao campo de dados e recupera o valor da <xref:System.ComponentModel.DescriptionAttribute.Description%2A?displayProperty=nameWithType> propriedade.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-142">The <xref:System.Web.DynamicData.MetaColumn.Description%2A> property verifies if a <xref:System.ComponentModel.DescriptionAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DescriptionAttribute.Description%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DescriptionAttribute" />
        <altmember cref="P:System.ComponentModel.DescriptionAttribute.Description" />
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public virtual string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayName : string" Usage="System.Web.DynamicData.MetaColumn.DisplayName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.DisplayName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb6ae-143">Obtém o nome de exibição para o campo de dados.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-143">Gets the display name for the data field.</span></span></summary>
        <value><span data-ttu-id="bb6ae-144">O nome de exibição do campo de dados.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-144">The display name for the data field.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb6ae-145">O <xref:System.Web.DynamicData.MetaColumn.DisplayName%2A> propriedade retorna o nome de exibição amigável para o campo de dados, se uma tiver sido definida ou o nome do campo se nenhum nome de exibição tiver sido especificada.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-145">The <xref:System.Web.DynamicData.MetaColumn.DisplayName%2A> property returns the friendly display name for the data field if one has been set, or the field name if no display name has been specified.</span></span> <span data-ttu-id="bb6ae-146">O <xref:System.Web.DynamicData.MetaColumn.DisplayName%2A> propriedade verifica se um nome de exibição amigável tiver sido definido, verificando se um <xref:System.ComponentModel.DisplayNameAttribute> atributo é aplicado ao campo de dados.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-146">The <xref:System.Web.DynamicData.MetaColumn.DisplayName%2A> property verifies if a friendly display name has been set by checking if a <xref:System.ComponentModel.DisplayNameAttribute> attribute is applied to the data field.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DisplayNameAttribute" />
      </Docs>
    </Member>
    <Member MemberName="EntityTypeProperty">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo EntityTypeProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.PropertyInfo EntityTypeProperty" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.EntityTypeProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EntityTypeProperty As PropertyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::PropertyInfo ^ EntityTypeProperty { System::Reflection::PropertyInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EntityTypeProperty : System.Reflection.PropertyInfo" Usage="System.Web.DynamicData.MetaColumn.EntityTypeProperty" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.EntityTypeProperty</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb6ae-147">Obtém um objeto que contém atributos da propriedade que representa o campo de dados no tipo de entidade.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-147">Gets an object that contains attributes of the property that represents the data field in the entity type.</span></span></summary>
        <value><span data-ttu-id="bb6ae-148">Um objeto que contém os atributos da propriedade que representa o campo de dados no tipo de entidade.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-148">An object that contains attributes of the property that represents the data field in the entity type.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterUIHint">
      <MemberSignature Language="C#" Value="public string FilterUIHint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilterUIHint" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.FilterUIHint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilterUIHint As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilterUIHint { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FilterUIHint : string" Usage="System.Web.DynamicData.MetaColumn.FilterUIHint" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.FilterUIHint</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb6ae-149">Obtém o valor <see cref="P:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.FilterUIHint" /> que é usado para a coluna.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-149">Gets the <see cref="P:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.FilterUIHint" /> value that is used for the column.</span></span></summary>
        <value><span data-ttu-id="bb6ae-150">O <see cref="P:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.FilterUIHint" /> valor que é usado para a coluna.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-150">The <see cref="P:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.FilterUIHint" /> value that is used for the column.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public bool HtmlEncode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HtmlEncode" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.HtmlEncode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HtmlEncode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HtmlEncode { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HtmlEncode : bool" Usage="System.Web.DynamicData.MetaColumn.HtmlEncode" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IFieldFormattingOptions.HtmlEncode</InterfaceMember>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.HtmlEncode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb6ae-151">Obtém um valor que indica se os valores de campo são codificados em HTML antes que eles sejam exibidos em um controle associado aos dados.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-151">Gets a value that indicates whether field values are HTML-encoded before they are displayed in a data-bound control.</span></span></summary>
        <value><span data-ttu-id="bb6ae-152"><see langword="true" /> em todos os casos.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-152"><see langword="true" /> in all cases.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected internal virtual void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaColumn.Initialize" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Initialize();" />
      <MemberSignature Language="F#" Value="abstract member Initialize : unit -&gt; unit&#xA;override this.Initialize : unit -&gt; unit" Usage="metaColumn.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bb6ae-153">Inicializa os dados que podem não estar disponíveis quando o construtor é chamado.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-153">Initializes data that might not be available when the constructor is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb6ae-154">Esse método não pode ser chamado diretamente.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-154">This method cannot be called directly.</span></span> <span data-ttu-id="bb6ae-155">Para personalizar a inicialização, você pode derivar dessa classe e substituir o `Initialize` método.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-155">To customize initialization, you can derive from this class and override the `Initialize` method.</span></span> <span data-ttu-id="bb6ae-156">Se você substituir esse método, chame o controle base `Initialize` método.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-156">If you override this method, call the base control's `Initialize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBinaryData">
      <MemberSignature Language="C#" Value="public bool IsBinaryData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBinaryData" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.IsBinaryData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBinaryData As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBinaryData { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBinaryData : bool" Usage="System.Web.DynamicData.MetaColumn.IsBinaryData" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.IsBinaryData</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb6ae-157">Obtém um valor que indica se o campo de dados contém dados binários.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-157">Gets a value that indicates whether the data field contains binary data.</span></span></summary>
        <value><span data-ttu-id="bb6ae-158"><see langword="true" /> Se o campo de dados contém dados binários; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-158"><see langword="true" /> if the data field contains binary data; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsFloatingPoint" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsInteger" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsString" />
      </Docs>
    </Member>
    <Member MemberName="IsCustomProperty">
      <MemberSignature Language="C#" Value="public bool IsCustomProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCustomProperty" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.IsCustomProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCustomProperty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCustomProperty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCustomProperty : bool" Usage="System.Web.DynamicData.MetaColumn.IsCustomProperty" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.IsCustomProperty</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb6ae-159">Obtém um valor que indica se o campo de dados existe no banco de dados.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-159">Gets a value that indicates whether the data field exists in the database.</span></span></summary>
        <value><span data-ttu-id="bb6ae-160"><see langword="true" /> Se o campo de dados não existe no banco de dados; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-160"><see langword="true" /> if the data field does not exist in the database; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb6ae-161">Use o <xref:System.Web.DynamicData.MetaColumn.IsCustomProperty%2A> propriedade para determinar se um campo de dados está no banco de dados ou se é uma propriedade extra que foi adicionada ao objeto de contexto de dados.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-161">Use the <xref:System.Web.DynamicData.MetaColumn.IsCustomProperty%2A> property to determine whether a data field is in the database or if it is an extra property that was added to the data context object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFloatingPoint">
      <MemberSignature Language="C#" Value="public bool IsFloatingPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFloatingPoint" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.IsFloatingPoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFloatingPoint As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFloatingPoint { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFloatingPoint : bool" Usage="System.Web.DynamicData.MetaColumn.IsFloatingPoint" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.IsFloatingPoint</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb6ae-162">Obtém um valor que indica se o campo de dados é um tipo de ponto flutuante.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-162">Gets a value that indicates whether the data field is a floating-point type.</span></span></summary>
        <value><span data-ttu-id="bb6ae-163"><see langword="true" /> Se o campo de dados é um tipo de ponto flutuante; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-163"><see langword="true" /> if the data field is a floating-point type; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb6ae-164">Os tipos `float`, `double`, e `decimal` são tipos de ponto flutuante.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-164">The types `float`, `double`, and `decimal` are floating point types.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsBinaryData" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsInteger" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsString" />
      </Docs>
    </Member>
    <Member MemberName="IsForeignKeyComponent">
      <MemberSignature Language="C#" Value="public bool IsForeignKeyComponent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsForeignKeyComponent" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.IsForeignKeyComponent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsForeignKeyComponent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsForeignKeyComponent { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsForeignKeyComponent : bool" Usage="System.Web.DynamicData.MetaColumn.IsForeignKeyComponent" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.IsForeignKeyComponent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb6ae-165">Obtém um valor que indica se o campo de dados faz parte de uma chave estrangeira.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-165">Gets a value that indicates whether the data field is part of a foreign key.</span></span></summary>
        <value><span data-ttu-id="bb6ae-166"><see langword="true" /> Se o campo de dados fizer parte de uma chave estrangeira; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-166"><see langword="true" /> if the data field is part of a foreign key; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsPrimaryKey" />
      </Docs>
    </Member>
    <Member MemberName="IsGenerated">
      <MemberSignature Language="C#" Value="public bool IsGenerated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsGenerated" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.IsGenerated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsGenerated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsGenerated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsGenerated : bool" Usage="System.Web.DynamicData.MetaColumn.IsGenerated" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.IsGenerated</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb6ae-167">Obtém um valor que indica se o valor do campo de dados é gerado automaticamente no banco de dados.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-167">Gets a value that indicates whether the data field value is automatically generated in the database.</span></span></summary>
        <value><span data-ttu-id="bb6ae-168"><see langword="true" /> Se o valor do campo de dados é gerado automaticamente no banco de dados; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-168"><see langword="true" /> if the data field value is automatically generated in the database; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInteger">
      <MemberSignature Language="C#" Value="public bool IsInteger { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInteger" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.IsInteger" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInteger As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInteger { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInteger : bool" Usage="System.Web.DynamicData.MetaColumn.IsInteger" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.IsInteger</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb6ae-169">Obtém um valor que indica se o tipo de campo de dados é um tipo inteiro.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-169">Gets a value that indicates whether the data field type is an integer type.</span></span></summary>
        <value><span data-ttu-id="bb6ae-170"><see langword="true" /> Se o tipo de campo de dados é um tipo de inteiro; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-170"><see langword="true" /> if the data field type is an integer type; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb6ae-171">Os tipos `byte`, `short`, `int`, e `long` são tipos de inteiro.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-171">The types `byte`, `short`, `int`, and `long` are integer types.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsBinaryData" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsFloatingPoint" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsString" />
      </Docs>
    </Member>
    <Member MemberName="IsLongString">
      <MemberSignature Language="C#" Value="public bool IsLongString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLongString" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.IsLongString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLongString As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLongString { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsLongString : bool" Usage="System.Web.DynamicData.MetaColumn.IsLongString" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.IsLongString</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb6ae-172">Obtém um valor que indica se o tipo de campo de dados pode conter cadeias de caracteres longas.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-172">Gets a value that indicates whether the data field type can contain long strings.</span></span></summary>
        <value><span data-ttu-id="bb6ae-173"><see langword="true" /> Se o tipo de campo de dados pode conter cadeias de caracteres longas; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-173"><see langword="true" /> if the data field type can contain long strings; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb6ae-174">Os tipos de SQL `text`, `ntext`, `varchar`, e `nvarchar` pode conter cadeias de caracteres longas.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-174">The SQL types `text`, `ntext`, `varchar`, and `nvarchar` can contain long strings.</span></span> <span data-ttu-id="bb6ae-175">O valor da <xref:System.Web.DynamicData.MetaColumn.IsLongString%2A> propriedade é usada para determinar se o modelo de campo da caixa de texto ou de área de texto é exibido para permitir que os usuários modificar o valor do campo.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-175">The value of the <xref:System.Web.DynamicData.MetaColumn.IsLongString%2A> property is used to determine whether the TextBox or TextArea field template is displayed to enable users to modify the field value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsString" />
        <related type="Article" href="https://msdn.microsoft.com/library/e0166a58-9178-4660-81a6-175994b11b12"><span data-ttu-id="bb6ae-176">Scaffolding de dados dinâmicos do ASP.NET</span><span class="sxs-lookup"><span data-stu-id="bb6ae-176">ASP.NET Dynamic Data Scaffolding</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsPrimaryKey">
      <MemberSignature Language="C#" Value="public bool IsPrimaryKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrimaryKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.IsPrimaryKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPrimaryKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPrimaryKey { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPrimaryKey : bool" Usage="System.Web.DynamicData.MetaColumn.IsPrimaryKey" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.IsPrimaryKey</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb6ae-177">Obtém um valor que indica se o campo de dados faz parte da chave primária da tabela.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-177">Gets a value that indicates whether the data field is part of the table's primary key.</span></span></summary>
        <value><span data-ttu-id="bb6ae-178"><see langword="true" /> Se o campo de dados é parte da chave primária da tabela; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-178"><see langword="true" /> if the data field is part of the table's primary key; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsForeignKeyComponent" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Web.DynamicData.MetaColumn.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb6ae-179">Obtém um valor que indica se o campo de dados é somente leitura.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-179">Gets a value that indicates whether the data field is read-only.</span></span></summary>
        <value><span data-ttu-id="bb6ae-180"><see langword="true" /> Se o campo de dados é somente leitura; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-180"><see langword="true" /> if the data field is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRequired">
      <MemberSignature Language="C#" Value="public bool IsRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRequired" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.IsRequired" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRequired { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsRequired : bool" Usage="System.Web.DynamicData.MetaColumn.IsRequired" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.IsRequired</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb6ae-181">Obtém um valor que indica se o campo de dados exige um valor.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-181">Gets a value that indicates whether the data field requires a value.</span></span></summary>
        <value><span data-ttu-id="bb6ae-182"><see langword="true" /> Se o campo de dados requer um valor; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-182"><see langword="true" /> if the data field requires a value; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb6ae-183">O <xref:System.Web.DynamicData.MetaColumn.Description%2A> propriedade verifica se um <xref:System.ComponentModel.DataAnnotations.RequiredAttribute> atributo é aplicado ao campo de dados ou se o esquema de banco de dados contém informações sobre os dados que está sendo necessário no banco de dados para determinar se o campo de dados requer um valor de campo.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-183">The <xref:System.Web.DynamicData.MetaColumn.Description%2A> property verifies if a <xref:System.ComponentModel.DataAnnotations.RequiredAttribute> attribute is applied to the data field or if the database schema contains information about the data field being required in the database to determine whether the data field requires a value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DataAnnotations.RequiredAttribute" />
        <altmember cref="P:System.Web.DynamicData.ModelProviders.ColumnProvider.Nullable" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.RequiredErrorMessage" />
      </Docs>
    </Member>
    <Member MemberName="IsString">
      <MemberSignature Language="C#" Value="public bool IsString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsString" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.IsString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsString As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsString { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsString : bool" Usage="System.Web.DynamicData.MetaColumn.IsString" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.IsString</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb6ae-184">Obtém um valor que indica se o tipo de campo de dados é um tipo de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-184">Gets a value that indicates whether the data field type is a string type.</span></span></summary>
        <value><span data-ttu-id="bb6ae-185"><see langword="true" /> Se o tipo de campo de dados é um tipo de cadeia de caracteres; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-185"><see langword="true" /> if the data field type is a string type; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsLongString" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsBinaryData" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsFloatingPoint" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsInteger" />
      </Docs>
    </Member>
    <Member MemberName="MaxLength">
      <MemberSignature Language="C#" Value="public int MaxLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.MaxLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaxLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxLength : int" Usage="System.Web.DynamicData.MetaColumn.MaxLength" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.MaxLength</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb6ae-186">Obtém um valor que indica o tamanho máximo dos dados que podem ser armazenados no campo de dados.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-186">Gets a value that indicates the maximum length of data that can be stored in the data field.</span></span></summary>
        <value><span data-ttu-id="bb6ae-187">O comprimento máximo dos dados que podem ser armazenados no campo de dados.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-187">The maximum length of data that can be stored in the data field.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb6ae-188">O <xref:System.Web.DynamicData.MetaColumn.MaxLength%2A> propriedade verifica se um <xref:System.ComponentModel.DataAnnotations.StringLengthAttribute> atributo é aplicado ao campo de dados e recupera o valor da <xref:System.ComponentModel.DataAnnotations.StringLengthAttribute.MaximumLength%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-188">The <xref:System.Web.DynamicData.MetaColumn.MaxLength%2A> property verifies if a <xref:System.ComponentModel.DataAnnotations.StringLengthAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DataAnnotations.StringLengthAttribute.MaximumLength%2A> property.</span></span> <span data-ttu-id="bb6ae-189">Se um <xref:System.ComponentModel.DataAnnotations.StringLengthAttribute> atributo não é aplicado ao campo de dados, o <xref:System.Web.DynamicData.MetaColumn.MaxLength%2A> propriedade usa o tipo de banco de dados para recuperar o comprimento máximo permitido.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-189">If a <xref:System.ComponentModel.DataAnnotations.StringLengthAttribute> attribute is not applied to the data field, the <xref:System.Web.DynamicData.MetaColumn.MaxLength%2A> property uses the database type to retrieve the maximum length allowed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DataAnnotations.StringLengthAttribute" />
        <altmember cref="P:System.ComponentModel.DataAnnotations.StringLengthAttribute.MaximumLength" />
      </Docs>
    </Member>
    <Member MemberName="Model">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaModel Model { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaModel Model" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.Model" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Model As MetaModel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::MetaModel ^ Model { System::Web::DynamicData::MetaModel ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Model : System.Web.DynamicData.MetaModel" Usage="System.Web.DynamicData.MetaColumn.Model" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb6ae-190">Obtém o objeto <see cref="T:System.Web.DynamicData.MetaModel" /> que representa o modelo de dados ao qual este campo de dados pertence.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-190">Gets the <see cref="T:System.Web.DynamicData.MetaModel" /> object that represents the data model that this data field belongs to.</span></span></summary>
        <value><span data-ttu-id="bb6ae-191">Um objeto que representa o modelo de dados pertencente a esse campo de dados.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-191">An object that represents the data model that this data field belongs to.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.DynamicData.MetaModel" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.Table" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Web.DynamicData.MetaColumn.Name" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.Name</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb6ae-192">Obtém o nome do campo de dados.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-192">Gets the name of the data field.</span></span></summary>
        <value><span data-ttu-id="bb6ae-193">O nome do campo de dados.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-193">The name of the data field.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NullDisplayText">
      <MemberSignature Language="C#" Value="public string NullDisplayText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NullDisplayText" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.NullDisplayText" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NullDisplayText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NullDisplayText { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NullDisplayText : string" Usage="System.Web.DynamicData.MetaColumn.NullDisplayText" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IFieldFormattingOptions.NullDisplayText</InterfaceMember>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.NullDisplayText</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb6ae-194">Obtém a legenda exibida para um campo quando o valor do campo é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-194">Gets the caption that is displayed for a field when the field's value is <see langword="null" />.</span></span></summary>
        <value><span data-ttu-id="bb6ae-195">A legenda exibida para um campo quando o valor do campo é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-195">The caption that is displayed for a field when the field's value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb6ae-196">O <xref:System.Web.DynamicData.MetaColumn.NullDisplayText%2A> propriedade verifica se um <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> atributo é aplicado ao campo de dados e recupera o valor da <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText%2A?displayProperty=nameWithType> propriedade.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-196">The <xref:System.Web.DynamicData.MetaColumn.NullDisplayText%2A> property verifies if a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="bb6ae-197">Se um <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> atributo não for encontrado, essa propriedade verifica se um <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> atributo é aplicado para recuperar informações de formatação.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-197">If a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is not found, this property verifies if a <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> attribute is applied to retrieve formatting information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DataAnnotations.DisplayFormatAttribute" />
        <altmember cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText" />
        <altmember cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Prompt">
      <MemberSignature Language="C#" Value="public virtual string Prompt { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prompt" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.Prompt" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Prompt As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Prompt { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Prompt : string" Usage="System.Web.DynamicData.MetaColumn.Prompt" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.Prompt</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb6ae-198">Obtém um valor que pode ser usado como uma marca-d'água na interface do usuário que está associada aos dados na coluna.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-198">Gets a value that can be used as a watermark in the UI that is bound to data in the column.</span></span></summary>
        <value><span data-ttu-id="bb6ae-199">Um valor que pode ser usado como uma marca d'água na interface do usuário que está associado a dados da coluna.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-199">A value that can be used as a watermark in the UI that is bound to data in the column.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb6ae-200">Um `null` ou cadeia de caracteres vazia pode ser retornada.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-200">A `null` or empty string can be returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb6ae-201">Essa propriedade é definida pelo <xref:System.ComponentModel.DataAnnotations.DisplayAttribute> atributo na definição da coluna na classe de metadados de entidade de dados.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-201">This property is set by the <xref:System.ComponentModel.DataAnnotations.DisplayAttribute> attribute in the column's definition in the meta class for the data entity.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.ModelProviders.ColumnProvider Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.ModelProviders.ColumnProvider Provider" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.Provider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Provider As ColumnProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::ModelProviders::ColumnProvider ^ Provider { System::Web::DynamicData::ModelProviders::ColumnProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Provider : System.Web.DynamicData.ModelProviders.ColumnProvider" Usage="System.Web.DynamicData.MetaColumn.Provider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.ModelProviders.ColumnProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb6ae-202">Obtém o objeto de provedor de abstração usado para gerar o objeto <see cref="T:System.Web.DynamicData.MetaColumn" />.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-202">Gets the abstraction provider object that is used to generate the <see cref="T:System.Web.DynamicData.MetaColumn" /> object.</span></span></summary>
        <value><span data-ttu-id="bb6ae-203">O objeto de provedor de abstração que é usado para gerar o <see cref="T:System.Web.DynamicData.MetaColumn" /> objeto.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-203">The abstraction provider object that is used to generate the <see cref="T:System.Web.DynamicData.MetaColumn" /> object.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.DynamicData.ModelProviders.ColumnProvider" />
      </Docs>
    </Member>
    <Member MemberName="RequiredErrorMessage">
      <MemberSignature Language="C#" Value="public string RequiredErrorMessage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequiredErrorMessage" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.RequiredErrorMessage" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RequiredErrorMessage As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RequiredErrorMessage { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiredErrorMessage : string" Usage="System.Web.DynamicData.MetaColumn.RequiredErrorMessage" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.RequiredErrorMessage</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb6ae-204">Obtém a mensagem de erro exibida quando o campo de dados exige um valor, mas seu valor está vazio.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-204">Gets the error message that is displayed when the data field requires a value but its value is empty.</span></span></summary>
        <value><span data-ttu-id="bb6ae-205">A mensagem de erro é exibida quando o campo de dados requer um valor, mas seu valor está vazio.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-205">The error message that is displayed when the data field requires a value but its value is empty.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.DataAnnotations.RequiredAttribute" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsRequired" />
      </Docs>
    </Member>
    <Member MemberName="ResetMetadata">
      <MemberSignature Language="C#" Value="public void ResetMetadata ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetMetadata() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaColumn.ResetMetadata" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetMetadata ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ResetMetadata();" />
      <MemberSignature Language="F#" Value="abstract member ResetMetadata : unit -&gt; unit&#xA;override this.ResetMetadata : unit -&gt; unit" Usage="metaColumn.ResetMetadata " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaColumn.ResetMetadata</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bb6ae-206">Limpa os metadados da coluna armazenados em cache.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-206">Clears cached column metadata.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb6ae-207">Os metadados da coluna são informações que é derivada de atributos e que é armazenado em cache para o desempenho.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-207">The column metadata is information that is derived from attributes and that is cached for performance.</span></span> <span data-ttu-id="bb6ae-208">Chamar esse método limpa o cache de metadados para essa coluna.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-208">Calling this method clears the metadata cache for this column.</span></span> <span data-ttu-id="bb6ae-209">O cache de metadados é recompilado na próxima vez que qualquer informação que é derivada de metadados é solicitada.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-209">The metadata cache is rebuilt the next time any information that is derived from metadata is requested.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scaffold">
      <MemberSignature Language="C#" Value="public virtual bool Scaffold { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Scaffold" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.Scaffold" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Scaffold As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Scaffold { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Scaffold : bool with get, set" Usage="System.Web.DynamicData.MetaColumn.Scaffold" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.Scaffold</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb6ae-210">Obtém um valor que indica se o campo de dados deve ser exibido.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-210">Gets a value that indicates whether the data field should be displayed.</span></span></summary>
        <value><span data-ttu-id="bb6ae-211"><see langword="true" /> Se o campo de dados deve ser exibido; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-211"><see langword="true" /> if the data field should be displayed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb6ae-212">O <xref:System.Web.DynamicData.MetaColumn.Scaffold%2A> propriedade indica se um campo de dados deve ser exibido quando ele é gerado automaticamente pelos dados dinâmicos do ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-212">The <xref:System.Web.DynamicData.MetaColumn.Scaffold%2A> property indicates whether a data field should be displayed when it is automatically generated by ASP.NET Dynamic Data.</span></span> <span data-ttu-id="bb6ae-213">Essa propriedade verifica se um <xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute> atributo é aplicado ao campo de dados e retorna o valor da <xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute.Scaffold%2A?displayProperty=nameWithType> propriedade.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-213">This property verifies if a <xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute> attribute is applied to the data field and returns the value of the <xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute.Scaffold%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="bb6ae-214">Se um <xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute> atributo não é aplicado ao campo de dados, dados dinâmicos usa as seguintes regras para determinar se deve exibir a coluna:</span><span class="sxs-lookup"><span data-stu-id="bb6ae-214">If a <xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute> attribute is not applied to the data field, Dynamic Data uses the following rules to determine whether to display the column:</span></span>  
  
-   <span data-ttu-id="bb6ae-215">Se um <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> atributo é aplicado ao campo de dados, o campo de dados é exibido.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-215">If a <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> attribute is applied to the data field, the data field is displayed.</span></span> <span data-ttu-id="bb6ae-216">Essa regra substitui todas as outras regras.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-216">This rule overrides all the other rules.</span></span>  
  
-   <span data-ttu-id="bb6ae-217">Se o valor da <xref:System.Web.DynamicData.MetaColumn.IsForeignKeyComponent%2A> é de propriedade `true`, o campo de dados não é exibido.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-217">If the value of the <xref:System.Web.DynamicData.MetaColumn.IsForeignKeyComponent%2A> property is `true`, the data field is not displayed.</span></span> <span data-ttu-id="bb6ae-218">Isso ocorre porque os dados dinâmicos lida com campos de chave estrangeira de uma maneira diferente e normalmente não exibirá o valor do campo de chave estrangeira.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-218">This occurs because Dynamic Data handles foreign-key fields in a different way and will not typically display the foreign-key field value.</span></span>  
  
-   <span data-ttu-id="bb6ae-219">Se o valor da <xref:System.Web.DynamicData.MetaColumn.IsGenerated%2A> é de propriedade `true`, o campo de dados não é exibido.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-219">If the value of the <xref:System.Web.DynamicData.MetaColumn.IsGenerated%2A> property is `true`, the data field is not displayed.</span></span> <span data-ttu-id="bb6ae-220">Normalmente os campos que são gerados automaticamente no banco de dados não contêm informações relevantes.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-220">Typically fields that are automatically generated in the database do not contain relevant information.</span></span> <span data-ttu-id="bb6ae-221">Certifique-se de que você aplique o <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> atributo ao campo de dados, se o campo de dados deve ser exibido.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-221">Make sure that you apply the <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> attribute to the data field, if the data field must be displayed.</span></span>  
  
-   <span data-ttu-id="bb6ae-222">Se o valor da <xref:System.Web.DynamicData.MetaColumn.IsCustomProperty%2A> é de propriedade `true`, o campo de dados não é exibido.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-222">If the value of the <xref:System.Web.DynamicData.MetaColumn.IsCustomProperty%2A> property is `true`, the data field is not displayed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute" />
        <altmember cref="P:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute.Scaffold" />
        <altmember cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsForeignKeyComponent" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsGenerated" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsCustomProperty" />
      </Docs>
    </Member>
    <Member MemberName="ShortDisplayName">
      <MemberSignature Language="C#" Value="public virtual string ShortDisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ShortDisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.ShortDisplayName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ShortDisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ShortDisplayName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ShortDisplayName : string" Usage="System.Web.DynamicData.MetaColumn.ShortDisplayName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.ShortDisplayName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb6ae-223">Obtém o nome curto para a coluna.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-223">Gets the short name for the column.</span></span></summary>
        <value><span data-ttu-id="bb6ae-224">O nome curto para a coluna.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-224">The short name for the column.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb6ae-225">Esta propriedade é fornecida para <xref:System.Web.UI.WebControls.GridView> controle e outros controles em que um nome curto é necessária devido limitado o espaço do cabeçalho de coluna.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-225">This property is provided for <xref:System.Web.UI.WebControls.GridView> control and other controls where a short name is needed because of limited column-header space.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SortExpression">
      <MemberSignature Language="C#" Value="public string SortExpression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.SortExpression" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SortExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SortExpression { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SortExpression : string" Usage="System.Web.DynamicData.MetaColumn.SortExpression" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.SortExpression</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb6ae-226">Obtém a expressão que é usada para determinar a ordem de classificação para o campo de dados.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-226">Gets the expression that is used to determine the sort order for the data field.</span></span></summary>
        <value><span data-ttu-id="bb6ae-227">A expressão que é usada para determinar a ordem de classificação para o campo de dados.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-227">The expression that is used to determine the sort order for the data field.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Table">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaTable Table { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaTable Table" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.Table" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Table As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::MetaTable ^ Table { System::Web::DynamicData::MetaTable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Table : System.Web.DynamicData.MetaTable" Usage="System.Web.DynamicData.MetaColumn.Table" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb6ae-228">Obtém o objeto <see cref="T:System.Web.DynamicData.MetaTable" /> que representa a tabela à qual este campo de dados pertence.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-228">Gets the <see cref="T:System.Web.DynamicData.MetaTable" /> object that represents the table that the data field belongs to.</span></span></summary>
        <value><span data-ttu-id="bb6ae-229">Um objeto que representa a tabela à qual pertence o campo de dados.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-229">An object that represents the table that the data field belongs to.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.DynamicData.MetaTable" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.Model" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaColumn.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="metaColumn.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bb6ae-230">Obtém o nome do campo de dados.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-230">Gets the data field name.</span></span></summary>
        <returns><span data-ttu-id="bb6ae-231">O nome de campo de dados, que é a representação de cadeia de caracteres da coluna.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-231">The data field name, which is the string representation of the column.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeCode">
      <MemberSignature Language="C#" Value="public TypeCode TypeCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TypeCode TypeCode" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.TypeCode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeCode As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TypeCode TypeCode { TypeCode get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeCode : TypeCode" Usage="System.Web.DynamicData.MetaColumn.TypeCode" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.TypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb6ae-232">Obtém o tipo do campo de dados.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-232">Gets the type of the data field.</span></span></summary>
        <value><span data-ttu-id="bb6ae-233">O tipo de campo de dados.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-233">The type of the data field.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb6ae-234">O <xref:System.Web.DynamicData.MetaColumn.TypeCode%2A> o valor da propriedade é derivado do valor da <xref:System.Web.DynamicData.MetaColumn.ColumnType%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-234">The <xref:System.Web.DynamicData.MetaColumn.TypeCode%2A> property value is derived from the value of the <xref:System.Web.DynamicData.MetaColumn.ColumnType%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.MetaColumn.ColumnType" />
      </Docs>
    </Member>
    <Member MemberName="UIHint">
      <MemberSignature Language="C#" Value="public virtual string UIHint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UIHint" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.UIHint" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property UIHint As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UIHint { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UIHint : string" Usage="System.Web.DynamicData.MetaColumn.UIHint" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.UIHint</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb6ae-235">Obtém o nome do modelo de campo especificado para o campo de dados.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-235">Gets the name of the field template specified for the data field.</span></span></summary>
        <value><span data-ttu-id="bb6ae-236">O nome do modelo de campo especificado para o campo de dados.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-236">The name of the field template specified for the data field.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb6ae-237">O <xref:System.Web.DynamicData.MetaColumn.UIHint%2A> propriedade verifica se um <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> atributo é aplicado ao campo de dados e recupera o valor da <xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A?displayProperty=nameWithType> propriedade.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-237">The <xref:System.Web.DynamicData.MetaColumn.UIHint%2A> property verifies if a <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="bb6ae-238">Se um <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> atributo não é aplicado ao campo de dados, o <xref:System.Web.DynamicData.MetaColumn.UIHint%2A> propriedade retorna uma cadeia de caracteres vazia.</span><span class="sxs-lookup"><span data-stu-id="bb6ae-238">If a <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> attribute is not applied to the data field, the <xref:System.Web.DynamicData.MetaColumn.UIHint%2A> property returns an empty string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" />
        <related type="Article" href="https://msdn.microsoft.com/library/e0166a58-9178-4660-81a6-175994b11b12"><span data-ttu-id="bb6ae-239">Scaffolding de dados dinâmicos do ASP.NET</span><span class="sxs-lookup"><span data-stu-id="bb6ae-239">ASP.NET Dynamic Data Scaffolding</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>