<Type Name="MetaTable" FullName="System.Web.DynamicData.MetaTable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e1b35ed723251d5f0b4aab65b94daadd4991fea2" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39902945" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MetaTable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MetaTable extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.MetaTable" />
  <TypeSignature Language="VB.NET" Value="Public Class MetaTable" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetaTable" />
  <TypeSignature Language="F#" Value="type MetaTable = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa os metadados que descrevem uma tabela a ser usada pelas páginas de Dados Dinâmicos.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir é parte do arquivo de code-behind para o modelo de página aspx. O <xref:System.Web.DynamicData.MetaTable> instância será inicializada no `Page_Load` método. O título da página é definido na tabela `DisplayName` propriedade.  
  
```csharp  
public partial class Insert : System.Web.UI.Page {  
    protected MetaTable table;     
  
    protected void Page_Load(object sender, EventArgs e) {  
        table = DetailsDataSource.GetTable();  
        Title = table.DisplayName;  
    }  
}  
```  
  
```vb  
Partial Class Insert  
    Inherits System.Web.UI.Page  
  
    Protected table As MetaTable      
  
    Protected Sub Page_Load(ByVal sender As Object, _  
            ByVal e As EventArgs)  
        table = DetailsDataSource.GetTable  
        Title = table.DisplayName  
    End Sub  
End Class  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetaTable (System.Web.DynamicData.MetaModel metaModel, System.Web.DynamicData.ModelProviders.TableProvider tableProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.DynamicData.MetaModel metaModel, class System.Web.DynamicData.ModelProviders.TableProvider tableProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.#ctor(System.Web.DynamicData.MetaModel,System.Web.DynamicData.ModelProviders.TableProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MetaTable(System::Web::DynamicData::MetaModel ^ metaModel, System::Web::DynamicData::ModelProviders::TableProvider ^ tableProvider);" />
      <MemberSignature Language="F#" Value="new System.Web.DynamicData.MetaTable : System.Web.DynamicData.MetaModel * System.Web.DynamicData.ModelProviders.TableProvider -&gt; System.Web.DynamicData.MetaTable" Usage="new System.Web.DynamicData.MetaTable (metaModel, tableProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="metaModel" Type="System.Web.DynamicData.MetaModel" />
        <Parameter Name="tableProvider" Type="System.Web.DynamicData.ModelProviders.TableProvider" />
      </Parameters>
      <Docs>
        <param name="metaModel">O modelo meta de entidade.</param>
        <param name="tableProvider">O provedor de modelo de entidade.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.DynamicData.MetaTable" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O `tableProvider` parâmetro é usado para inicializar o <xref:System.Web.DynamicData.MetaTable.DataContextPropertyName%2A> propriedade.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.ComponentModel.AttributeCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.AttributeCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::AttributeCollection ^ Attributes { System::ComponentModel::AttributeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.ComponentModel.AttributeCollection" Usage="System.Web.DynamicData.MetaTable.Attributes" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.Attributes</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém os atributos associados à tabela.</summary>
        <value>Uma coleção que contém os atributos da tabela.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildAttributeCollection">
      <MemberSignature Language="C#" Value="protected virtual System.ComponentModel.AttributeCollection BuildAttributeCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.ComponentModel.AttributeCollection BuildAttributeCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.BuildAttributeCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function BuildAttributeCollection () As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::ComponentModel::AttributeCollection ^ BuildAttributeCollection();" />
      <MemberSignature Language="F#" Value="abstract member BuildAttributeCollection : unit -&gt; System.ComponentModel.AttributeCollection&#xA;override this.BuildAttributeCollection : unit -&gt; System.ComponentModel.AttributeCollection" Usage="metaTable.BuildAttributeCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cria a coleção de atributos.</summary>
        <returns>A coleção de atributo.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanDelete">
      <MemberSignature Language="C#" Value="public virtual bool CanDelete (System.Security.Principal.IPrincipal principal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanDelete(class System.Security.Principal.IPrincipal principal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.CanDelete(System.Security.Principal.IPrincipal)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanDelete (principal As IPrincipal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanDelete(System::Security::Principal::IPrincipal ^ principal);" />
      <MemberSignature Language="F#" Value="abstract member CanDelete : System.Security.Principal.IPrincipal -&gt; bool&#xA;override this.CanDelete : System.Security.Principal.IPrincipal -&gt; bool" Usage="metaTable.CanDelete principal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.CanDelete(System.Security.Principal.IPrincipal)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Principal.IPrincipal" />
      </Parameters>
      <Docs>
        <param name="principal">O contexto de segurança do usuário.</param>
        <summary>Obtém um valor que indica se o usuário especificado tem permissão para executar operações de exclusão.</summary>
        <returns>
          <see langword="true" /> se o usuário tiver permissão para executar operações de exclusão; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um objeto de entidade representa o contexto de segurança do usuário em cujo nome o código está em execução, incluindo a identidade do usuário e todas as funções às quais eles pertencem.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanInsert">
      <MemberSignature Language="C#" Value="public virtual bool CanInsert (System.Security.Principal.IPrincipal principal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanInsert(class System.Security.Principal.IPrincipal principal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.CanInsert(System.Security.Principal.IPrincipal)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanInsert (principal As IPrincipal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanInsert(System::Security::Principal::IPrincipal ^ principal);" />
      <MemberSignature Language="F#" Value="abstract member CanInsert : System.Security.Principal.IPrincipal -&gt; bool&#xA;override this.CanInsert : System.Security.Principal.IPrincipal -&gt; bool" Usage="metaTable.CanInsert principal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.CanInsert(System.Security.Principal.IPrincipal)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Principal.IPrincipal" />
      </Parameters>
      <Docs>
        <param name="principal">O contexto de segurança do usuário.</param>
        <summary>Obtém um valor que indica se o usuário especificado tem permissão para executar operações de inserção.</summary>
        <returns>
          <see langword="true" /> se o usuário tiver permissão para executar operações de inserção; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um objeto de entidade representa o contexto de segurança do usuário em cujo nome o código está em execução, incluindo a identidade do usuário e todas as funções às quais eles pertencem.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public virtual bool CanRead (System.Security.Principal.IPrincipal principal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanRead(class System.Security.Principal.IPrincipal principal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.CanRead(System.Security.Principal.IPrincipal)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanRead (principal As IPrincipal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanRead(System::Security::Principal::IPrincipal ^ principal);" />
      <MemberSignature Language="F#" Value="abstract member CanRead : System.Security.Principal.IPrincipal -&gt; bool&#xA;override this.CanRead : System.Security.Principal.IPrincipal -&gt; bool" Usage="metaTable.CanRead principal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.CanRead(System.Security.Principal.IPrincipal)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Principal.IPrincipal" />
      </Parameters>
      <Docs>
        <param name="principal">O contexto de segurança do usuário.</param>
        <summary>Obtém um valor que indica se o usuário especificado tem permissão para executar operações de leitura.</summary>
        <returns>
          <see langword="true" /> se o usuário tiver permissão para executar operações de leitura; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um objeto de entidade representa o contexto de segurança do usuário em cujo nome o código está em execução, incluindo a identidade do usuário e todas as funções às quais eles pertencem.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanUpdate">
      <MemberSignature Language="C#" Value="public virtual bool CanUpdate (System.Security.Principal.IPrincipal principal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanUpdate(class System.Security.Principal.IPrincipal principal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.CanUpdate(System.Security.Principal.IPrincipal)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanUpdate (principal As IPrincipal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanUpdate(System::Security::Principal::IPrincipal ^ principal);" />
      <MemberSignature Language="F#" Value="abstract member CanUpdate : System.Security.Principal.IPrincipal -&gt; bool&#xA;override this.CanUpdate : System.Security.Principal.IPrincipal -&gt; bool" Usage="metaTable.CanUpdate principal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.CanUpdate(System.Security.Principal.IPrincipal)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Principal.IPrincipal" />
      </Parameters>
      <Docs>
        <param name="principal">O contexto de segurança do usuário.</param>
        <summary>Obtém um valor que indica se o usuário especificado tem permissão para executar operações de atualização.</summary>
        <returns>
          <see langword="true" /> se o usuário tiver permissão para executar operações de atualização; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um objeto de entidade representa o contexto de segurança do usuário em cujo nome o código está em execução, incluindo a identidade do usuário e todas as funções às quais eles pertencem.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.DynamicData.MetaColumn&gt; Columns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Web.DynamicData.MetaColumn&gt; Columns" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.Columns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Columns As ReadOnlyCollection(Of MetaColumn)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::DynamicData::MetaColumn ^&gt; ^ Columns { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::DynamicData::MetaColumn ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Columns : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.DynamicData.MetaColumn&gt;" Usage="System.Web.DynamicData.MetaTable.Columns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.DynamicData.MetaColumn&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma coleção de colunas para a tabela.</summary>
        <value>Uma coleção que contém as colunas da tabela.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir mostra como usar o <xref:System.Web.DynamicData.MetaTable.Columns%2A> propriedade. No exemplo, os modelos de página dinâmica de dados foram copiados para a pasta \DynamicData\CustomPages\ProductDescriptions para fornecer uma exibição personalizada para a tabela ProductDescription do banco de dados AdventureWorksLT. A marcação do arquivo aspx é alterada para adicionar um `OnDataBound` manipulador de eventos chamado `DetailsView1_DataBound`. No manipulador de eventos, o <xref:System.Web.DynamicData.DynamicDataExtensions.FindMetaTable%2A> método é usado para localizar a tabela de metadados. O <xref:System.Web.DynamicData.MetaTable.Columns%2A> propriedade é usada para exibir o número de colunas na tabela.  
  
 [!code-csharp[System.Web.DynamicData.DynamicDataExtensions#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.DynamicDataExtensions/cs/Insert.aspx.cs#1)]  
[!code-aspx-csharp[System.Web.DynamicData.DynamicDataExtensions#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.DynamicDataExtensions/cs/Insert.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChildrenColumn">
      <MemberSignature Language="C#" Value="protected virtual System.Web.DynamicData.MetaChildrenColumn CreateChildrenColumn (System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.DynamicData.MetaChildrenColumn CreateChildrenColumn(class System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.CreateChildrenColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::DynamicData::MetaChildrenColumn ^ CreateChildrenColumn(System::Web::DynamicData::ModelProviders::ColumnProvider ^ columnProvider);" />
      <MemberSignature Language="F#" Value="abstract member CreateChildrenColumn : System.Web.DynamicData.ModelProviders.ColumnProvider -&gt; System.Web.DynamicData.MetaChildrenColumn&#xA;override this.CreateChildrenColumn : System.Web.DynamicData.ModelProviders.ColumnProvider -&gt; System.Web.DynamicData.MetaChildrenColumn" Usage="metaTable.CreateChildrenColumn columnProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaChildrenColumn</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnProvider" Type="System.Web.DynamicData.ModelProviders.ColumnProvider" />
      </Parameters>
      <Docs>
        <param name="columnProvider">O provedor de coluna.</param>
        <summary>Cria um novo objeto <see cref="T:System.Web.DynamicData.MetaChildrenColumn" />.</summary>
        <returns>O novo objeto metacolumn filho.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método pode ser substituído para criar um tipo derivado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateColumn">
      <MemberSignature Language="C#" Value="protected virtual System.Web.DynamicData.MetaColumn CreateColumn (System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.DynamicData.MetaColumn CreateColumn(class System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.CreateColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::DynamicData::MetaColumn ^ CreateColumn(System::Web::DynamicData::ModelProviders::ColumnProvider ^ columnProvider);" />
      <MemberSignature Language="F#" Value="abstract member CreateColumn : System.Web.DynamicData.ModelProviders.ColumnProvider -&gt; System.Web.DynamicData.MetaColumn&#xA;override this.CreateColumn : System.Web.DynamicData.ModelProviders.ColumnProvider -&gt; System.Web.DynamicData.MetaColumn" Usage="metaTable.CreateColumn columnProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaColumn</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnProvider" Type="System.Web.DynamicData.ModelProviders.ColumnProvider" />
      </Parameters>
      <Docs>
        <param name="columnProvider">O provedor de coluna.</param>
        <summary>Cria um objeto <see cref="T:System.Web.DynamicData.MetaColumn" />.</summary>
        <returns>O novo objeto metacolumn.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método pode ser substituído para criar um tipo derivado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateContext">
      <MemberSignature Language="C#" Value="public virtual object CreateContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.CreateContext" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateContext () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateContext();" />
      <MemberSignature Language="F#" Value="abstract member CreateContext : unit -&gt; obj&#xA;override this.CreateContext : unit -&gt; obj" Usage="metaTable.CreateContext " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.CreateContext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna o contexto de dados para a tabela.</summary>
        <returns>O contexto de dados para a tabela.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O contexto de dados é recuperado de um novo contexto é instanciado chamando o <xref:System.Web.DynamicData.MetaTable.CreateContext%2A?displayProperty=nameWithType> método. Para obter mais informações, consulte o <xref:System.Web.DynamicData.MetaTable?displayProperty=nameWithType> visão geral da classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateForeignKeyColumn">
      <MemberSignature Language="C#" Value="protected virtual System.Web.DynamicData.MetaForeignKeyColumn CreateForeignKeyColumn (System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.DynamicData.MetaForeignKeyColumn CreateForeignKeyColumn(class System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.CreateForeignKeyColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::DynamicData::MetaForeignKeyColumn ^ CreateForeignKeyColumn(System::Web::DynamicData::ModelProviders::ColumnProvider ^ columnProvider);" />
      <MemberSignature Language="F#" Value="abstract member CreateForeignKeyColumn : System.Web.DynamicData.ModelProviders.ColumnProvider -&gt; System.Web.DynamicData.MetaForeignKeyColumn&#xA;override this.CreateForeignKeyColumn : System.Web.DynamicData.ModelProviders.ColumnProvider -&gt; System.Web.DynamicData.MetaForeignKeyColumn" Usage="metaTable.CreateForeignKeyColumn columnProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaForeignKeyColumn</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnProvider" Type="System.Web.DynamicData.ModelProviders.ColumnProvider" />
      </Parameters>
      <Docs>
        <param name="columnProvider">O provedor de coluna.</param>
        <summary>Cria um objeto que contém metadados de chave estrangeira.</summary>
        <returns>Um objeto que contém metadados de chave estrangeira.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método pode ser substituído para criar um tipo derivado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateTable">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Cria um objeto <see cref="T:System.Web.DynamicData.MetaTable" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateTable">
      <MemberSignature Language="C#" Value="public static System.Web.DynamicData.MetaTable CreateTable (System.ComponentModel.ICustomTypeDescriptor typeDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.DynamicData.MetaTable CreateTable(class System.ComponentModel.ICustomTypeDescriptor typeDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.CreateTable(System.ComponentModel.ICustomTypeDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateTable (typeDescriptor As ICustomTypeDescriptor) As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::DynamicData::MetaTable ^ CreateTable(System::ComponentModel::ICustomTypeDescriptor ^ typeDescriptor);" />
      <MemberSignature Language="F#" Value="static member CreateTable : System.ComponentModel.ICustomTypeDescriptor -&gt; System.Web.DynamicData.MetaTable" Usage="System.Web.DynamicData.MetaTable.CreateTable typeDescriptor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeDescriptor" Type="System.ComponentModel.ICustomTypeDescriptor" />
      </Parameters>
      <Docs>
        <param name="typeDescriptor">Informações sobre o tipo de tabela.</param>
        <summary>Cria os metadados para a tabela especificada.</summary>
        <returns>Um objeto que contém os metadados da tabela.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTable">
      <MemberSignature Language="C#" Value="public static System.Web.DynamicData.MetaTable CreateTable (Type entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.DynamicData.MetaTable CreateTable(class System.Type entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.CreateTable(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateTable (entityType As Type) As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::DynamicData::MetaTable ^ CreateTable(Type ^ entityType);" />
      <MemberSignature Language="F#" Value="static member CreateTable : Type -&gt; System.Web.DynamicData.MetaTable" Usage="System.Web.DynamicData.MetaTable.CreateTable entityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="entityType">O tipo de tabela para o qual gerar metadados.</param>
        <summary>Cria os metadados para a tabela especificada.</summary>
        <returns>Um objeto que contém os metadados da tabela.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataContextPropertyName">
      <MemberSignature Language="C#" Value="public string DataContextPropertyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataContextPropertyName" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.DataContextPropertyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataContextPropertyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataContextPropertyName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataContextPropertyName : string" Usage="System.Web.DynamicData.MetaTable.DataContextPropertyName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.DataContextPropertyName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o nome da tabela.</summary>
        <value>O nome da tabela.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O nome é proveniente de <xref:System.Web.DynamicData.MetaTable.DataContextType%2A> objeto ao qual a tabela pertence.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataContextType">
      <MemberSignature Language="C#" Value="public Type DataContextType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DataContextType" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.DataContextType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataContextType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ DataContextType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataContextType : Type" Usage="System.Web.DynamicData.MetaTable.DataContextType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.DataContextType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o tipo do contexto de dados associado à tabela.</summary>
        <value>O tipo do contexto de dados.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obter mais informações, consulte o <xref:System.Data.Linq.DataContext?displayProperty=nameWithType> visão geral da classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayColumn">
      <MemberSignature Language="C#" Value="public virtual System.Web.DynamicData.MetaColumn DisplayColumn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaColumn DisplayColumn" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.DisplayColumn" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DisplayColumn As MetaColumn" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::DynamicData::MetaColumn ^ DisplayColumn { System::Web::DynamicData::MetaColumn ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayColumn : System.Web.DynamicData.MetaColumn" Usage="System.Web.DynamicData.MetaTable.DisplayColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaColumn</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a coluna usada para exibir valores quando as entradas nesta tabela são usadas como pais em relações de chave estrangeira.</summary>
        <value>A coluna que é usada para exibir valores quando entradas nesta tabela são usadas como pais em relações de chave estrangeira.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A coluna que é retornada é selecionada nesta ordem:  
  
1.  A coluna que é especificada usando o <xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute> atributo.  
  
2.  A primeira coluna que não está na chave primária da cadeia de caracteres.  
  
3.  A primeira coluna que está na chave primária da cadeia de caracteres.  
  
4.  A primeira coluna de não cadeia de caracteres que está na chave primária.  
  
5.  A primeira coluna.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public virtual string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayName : string" Usage="System.Web.DynamicData.MetaTable.DisplayName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.DisplayName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o nome da tabela em um formato amigável.</summary>
        <value>A cadeia de caracteres que representa o nome amigável da tabela.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O valor dessa propriedade assume como padrão o valor da <xref:System.Web.DynamicData.MetaTable.Name%2A> propriedade. Você pode personalizar o valor dessa propriedade usando o <xref:System.ComponentModel.DisplayNameAttribute?displayProperty=nameWithType> atributo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityType">
      <MemberSignature Language="C#" Value="public Type EntityType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type EntityType" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.EntityType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EntityType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ EntityType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EntityType : Type" Usage="System.Web.DynamicData.MetaTable.EntityType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.EntityType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o tipo de entidade que representa a tabela.</summary>
        <value>O tipo que representa a entidade.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeignKeyColumnsNames">
      <MemberSignature Language="C#" Value="public string ForeignKeyColumnsNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ForeignKeyColumnsNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.ForeignKeyColumnsNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ForeignKeyColumnsNames As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ForeignKeyColumnsNames { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ForeignKeyColumnsNames : string" Usage="System.Web.DynamicData.MetaTable.ForeignKeyColumnsNames" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.ForeignKeyColumnsNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma lista separada por vírgulas de nomes de chave estrangeira.</summary>
        <value>Uma lista separada por vírgulas de nomes de chave estrangeira.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetActionPath">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Obtém o caminho de ação para a linha especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O caminho da ação é uma URL para uma ação para uma entidade específica. Para obter mais informações, consulte o <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> visão geral da classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetActionPath">
      <MemberSignature Language="C#" Value="public string GetActionPath (string action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetActionPath(string action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetActionPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetActionPath (action As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetActionPath(System::String ^ action);" />
      <MemberSignature Language="F#" Value="abstract member GetActionPath : string -&gt; string&#xA;override this.GetActionPath : string -&gt; string" Usage="metaTable.GetActionPath action" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetActionPath(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="action">O nome da ação.</param>
        <summary>Retorna o caminho de ação para a tabela atual e para a ação especificada.</summary>
        <returns>O caminho da ação para a ação especificada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O caminho da ação é uma URL para uma ação para uma entidade específica. Para obter mais informações, consulte o <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> visão geral da classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActionPath">
      <MemberSignature Language="C#" Value="public string GetActionPath (string action, System.Collections.Generic.IList&lt;object&gt; primaryKeyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetActionPath(string action, class System.Collections.Generic.IList`1&lt;object&gt; primaryKeyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Collections.Generic.IList{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetActionPath (action As String, primaryKeyValues As IList(Of Object)) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetActionPath(System::String ^ action, System::Collections::Generic::IList&lt;System::Object ^&gt; ^ primaryKeyValues);" />
      <MemberSignature Language="F#" Value="abstract member GetActionPath : string * System.Collections.Generic.IList&lt;obj&gt; -&gt; string&#xA;override this.GetActionPath : string * System.Collections.Generic.IList&lt;obj&gt; -&gt; string" Usage="metaTable.GetActionPath (action, primaryKeyValues)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetActionPath(System.String,System.Collections.Generic.IList{System.Object})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="primaryKeyValues" Type="System.Collections.Generic.IList&lt;System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="action">O nome da ação.</param>
        <param name="primaryKeyValues">A lista de valores de coluna que compõem a chave primária.</param>
        <summary>Retorna o caminho da ação para a tabela atual, ação especificada e chave primária especificada.</summary>
        <returns>O caminho da ação para a ação e a chave primária especificadas.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O caminho da ação é uma URL para uma ação para uma entidade específica. Para obter mais informações, consulte o <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> visão geral da classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActionPath">
      <MemberSignature Language="C#" Value="public string GetActionPath (string action, object row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetActionPath(string action, object row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetActionPath (action As String, row As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetActionPath(System::String ^ action, System::Object ^ row);" />
      <MemberSignature Language="F#" Value="abstract member GetActionPath : string * obj -&gt; string&#xA;override this.GetActionPath : string * obj -&gt; string" Usage="metaTable.GetActionPath (action, row)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetActionPath(System.String,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="row" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="action">O nome da ação.</param>
        <param name="row">A linha para a qual obter o caminho da ação.</param>
        <summary>Retorna o caminho da ação para a linha especificada usando o nome da ação.</summary>
        <returns>O caminho da ação para a linha especificada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O caminho da ação é uma URL para uma ação para uma entidade específica. O caminho da ação contém os nomes de coluna de chave primária, que podem ser usados para filtros de cadeia de caracteres de consulta.  
  
 Para obter mais informações, consulte o <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> visão geral da classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActionPath">
      <MemberSignature Language="C#" Value="public string GetActionPath (string action, System.Web.Routing.RouteValueDictionary routeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetActionPath(string action, class System.Web.Routing.RouteValueDictionary routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetActionPath (action As String, routeValues As RouteValueDictionary) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetActionPath(System::String ^ action, System::Web::Routing::RouteValueDictionary ^ routeValues);" />
      <MemberSignature Language="F#" Value="abstract member GetActionPath : string * System.Web.Routing.RouteValueDictionary -&gt; string&#xA;override this.GetActionPath : string * System.Web.Routing.RouteValueDictionary -&gt; string" Usage="metaTable.GetActionPath (action, routeValues)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetActionPath(System.String,System.Web.Routing.RouteValueDictionary)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" />
      </Parameters>
      <Docs>
        <param name="action">O nome da ação.</param>
        <param name="routeValues">A lista de rotas para a ação.</param>
        <summary>Retorna o caminho da ação para a tabela atual e para a ação e rotas especificadas.</summary>
        <returns>O caminho da ação para a ação e as rotas especificadas.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O caminho da ação é uma URL para uma ação para uma entidade específica. Para obter mais informações, consulte o <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> visão geral da classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActionPath">
      <MemberSignature Language="C#" Value="public string GetActionPath (string action, System.Collections.Generic.IList&lt;object&gt; primaryKeyValues, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetActionPath(string action, class System.Collections.Generic.IList`1&lt;object&gt; primaryKeyValues, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Collections.Generic.IList{System.Object},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetActionPath (action As String, primaryKeyValues As IList(Of Object), path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetActionPath(System::String ^ action, System::Collections::Generic::IList&lt;System::Object ^&gt; ^ primaryKeyValues, System::String ^ path);" />
      <MemberSignature Language="F#" Value="abstract member GetActionPath : string * System.Collections.Generic.IList&lt;obj&gt; * string -&gt; string&#xA;override this.GetActionPath : string * System.Collections.Generic.IList&lt;obj&gt; * string -&gt; string" Usage="metaTable.GetActionPath (action, primaryKeyValues, path)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetActionPath(System.String,System.Collections.Generic.IList{System.Object},System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="primaryKeyValues" Type="System.Collections.Generic.IList&lt;System.Object&gt;" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="action">O nome da ação.</param>
        <param name="primaryKeyValues">A lista de valores de coluna que compõem a chave primária.</param>
        <param name="path">O caminho virtual da ação.</param>
        <summary>Acrescenta cadeias de consulta ao caminho da ação, com base na chave primária e no caminho virtual especificados.</summary>
        <returns>O caminho da ação para a chave primária e para o caminho virtual especificados, com valores de cadeia de consulta acrescentados a ele.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O caminho da ação é uma URL para uma ação para uma entidade específica. Para obter mais informações, consulte o <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> visão geral da classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActionPath">
      <MemberSignature Language="C#" Value="public string GetActionPath (string action, object row, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetActionPath(string action, object row, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetActionPath (action As String, row As Object, path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetActionPath(System::String ^ action, System::Object ^ row, System::String ^ path);" />
      <MemberSignature Language="F#" Value="abstract member GetActionPath : string * obj * string -&gt; string&#xA;override this.GetActionPath : string * obj * string -&gt; string" Usage="metaTable.GetActionPath (action, row, path)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetActionPath(System.String,System.Object,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="row" Type="System.Object" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="action">O nome da ação.</param>
        <param name="row">Um objeto que contém a linha para o caminho da ação.</param>
        <param name="path">O caminho virtual da ação.</param>
        <summary>Retorna o caminho da ação para a linha especificada usando o nome da ação e o caminho virtual da ação.</summary>
        <returns>O caminho da ação para a linha especificada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O caminho da ação é uma URL para uma ação para uma entidade específica. Para obter mais informações, consulte o <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> visão geral da classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColumn">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaColumn GetColumn (string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.DynamicData.MetaColumn GetColumn(string columnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetColumn(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumn (columnName As String) As MetaColumn" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::DynamicData::MetaColumn ^ GetColumn(System::String ^ columnName);" />
      <MemberSignature Language="F#" Value="member this.GetColumn : string -&gt; System.Web.DynamicData.MetaColumn" Usage="metaTable.GetColumn columnName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaColumn</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">O nome da coluna para a qual obter metadados.</param>
        <summary>Retorna os metadados para a coluna especificada.</summary>
        <returns>Os metadados da coluna.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColumnValuesFromRoute">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,object&gt; GetColumnValuesFromRoute (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; GetColumnValuesFromRoute(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetColumnValuesFromRoute(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumnValuesFromRoute (context As HttpContext) As IDictionary(Of String, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ GetColumnValuesFromRoute(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="member this.GetColumnValuesFromRoute : System.Web.HttpContext -&gt; System.Collections.Generic.IDictionary&lt;string, obj&gt;" Usage="metaTable.GetColumnValuesFromRoute context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">O contexto para a solicitação da Web especificada.</param>
        <summary>Obtém uma coleção de valores de coluna.</summary>
        <returns>A coleção de valores de coluna.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataKeyFromRoute">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.DataKey GetDataKeyFromRoute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.WebControls.DataKey GetDataKeyFromRoute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetDataKeyFromRoute" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDataKeyFromRoute () As DataKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::WebControls::DataKey ^ GetDataKeyFromRoute();" />
      <MemberSignature Language="F#" Value="abstract member GetDataKeyFromRoute : unit -&gt; System.Web.UI.WebControls.DataKey&#xA;override this.GetDataKeyFromRoute : unit -&gt; System.Web.UI.WebControls.DataKey" Usage="metaTable.GetDataKeyFromRoute " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetDataKeyFromRoute</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera a chave primária da entidade dos valores de rota.</summary>
        <returns>Os valores de chave primária das entidades, se forem encontrados; caso contrário, <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Os valores de rota geralmente são provenientes de cadeia de caracteres de consulta de URL de solicitação.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDisplayString">
      <MemberSignature Language="C#" Value="public virtual string GetDisplayString (object row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetDisplayString(object row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetDisplayString(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDisplayString (row As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetDisplayString(System::Object ^ row);" />
      <MemberSignature Language="F#" Value="abstract member GetDisplayString : obj -&gt; string&#xA;override this.GetDisplayString : obj -&gt; string" Usage="metaTable.GetDisplayString row" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetDisplayString(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="row">A linha para a qual obter a cadeia de caracteres de exibição.</param>
        <summary>Retorna o valor a ser usado como a cadeia de caracteres de exibição para uma instância de uma linha quando ela é usada em relações de chave estrangeira.</summary>
        <returns>O nome de exibição para uma instância de uma linha.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se a linha for `null`, uma cadeia de caracteres vazia é retornada. Se a classe de entidade inclui uma substituição do <xref:System.Web.DynamicData.MetaTable.ToString%2A> método, substituído <xref:System.Web.DynamicData.MetaTable.ToString%2A> valor é retornado. Caso contrário, o método retorna o `ToString` representação do valor da <xref:System.Web.DynamicData.MetaTable.DisplayColumn%2A> propriedade para a linha especificada.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFilteredColumns">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Web.DynamicData.MetaColumn&gt; GetFilteredColumns ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Web.DynamicData.MetaColumn&gt; GetFilteredColumns() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetFilteredColumns" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFilteredColumns () As IEnumerable(Of MetaColumn)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Web::DynamicData::MetaColumn ^&gt; ^ GetFilteredColumns();" />
      <MemberSignature Language="F#" Value="abstract member GetFilteredColumns : unit -&gt; seq&lt;System.Web.DynamicData.MetaColumn&gt;&#xA;override this.GetFilteredColumns : unit -&gt; seq&lt;System.Web.DynamicData.MetaColumn&gt;" Usage="metaTable.GetFilteredColumns " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Web.DynamicData.MetaColumn&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera uma lista de colunas que podem ser filtradas.</summary>
        <returns>Uma lista de colunas que podem ser filtradas.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Uma coluna for filtrável se ele é anotado com a <xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute> atributo e o `Enabled` propriedade da <xref:System.Web.Mvc.FilterAttribute> atributo da coluna é definido como `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrimaryKeyDictionary">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,object&gt; GetPrimaryKeyDictionary (object row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; GetPrimaryKeyDictionary(object row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetPrimaryKeyDictionary(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPrimaryKeyDictionary (row As Object) As IDictionary(Of String, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ GetPrimaryKeyDictionary(System::Object ^ row);" />
      <MemberSignature Language="F#" Value="abstract member GetPrimaryKeyDictionary : obj -&gt; System.Collections.Generic.IDictionary&lt;string, obj&gt;&#xA;override this.GetPrimaryKeyDictionary : obj -&gt; System.Collections.Generic.IDictionary&lt;string, obj&gt;" Usage="metaTable.GetPrimaryKeyDictionary row" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetPrimaryKeyDictionary(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="row">Uma linha.</param>
        <summary>Recupera um dicionário de valores e de nomes de chave primária para a linha especificada.</summary>
        <returns>Um dicionário de valores e de nomes de chave primária.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir mostra como criar um dicionário de chave primária.  
  
```csharp  
private RouteValueDictionary GetRouteValues(MetaTable table, object row) {  
    RouteValueDictionary routeValues = GetRouteValues();  
    foreach (var pk in table.GetPrimaryKeyDictionary(row)) {  
        routeValues[pk.Key] = pk.Value;  
    }  
    return routeValues;  
}   
```  
  
```vb  
Private Function GetRouteValues(ByVal table As MetaTable, _  
        ByVal row As Object) As RouteValueDictionary   
    Dim routeValues As RouteValueDictionary = GetRouteValues()   
    For Each pk In table.GetPrimaryKeyDictionary(row)   
        routeValues(pk.Key) = pk.Value   
    Next   
    Return routeValues   
End Function   
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPrimaryKeyString">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Obtém uma lista de valores que representam a chave primária da linha especificada.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPrimaryKeyString">
      <MemberSignature Language="C#" Value="public string GetPrimaryKeyString (System.Collections.Generic.IList&lt;object&gt; primaryKeyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetPrimaryKeyString(class System.Collections.Generic.IList`1&lt;object&gt; primaryKeyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetPrimaryKeyString(System.Collections.Generic.IList{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPrimaryKeyString (primaryKeyValues As IList(Of Object)) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetPrimaryKeyString(System::Collections::Generic::IList&lt;System::Object ^&gt; ^ primaryKeyValues);" />
      <MemberSignature Language="F#" Value="abstract member GetPrimaryKeyString : System.Collections.Generic.IList&lt;obj&gt; -&gt; string&#xA;override this.GetPrimaryKeyString : System.Collections.Generic.IList&lt;obj&gt; -&gt; string" Usage="metaTable.GetPrimaryKeyString primaryKeyValues" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetPrimaryKeyString(System.Collections.Generic.IList{System.Object})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primaryKeyValues" Type="System.Collections.Generic.IList&lt;System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="primaryKeyValues">A lista de valores de coluna que compõem a chave primária.</param>
        <summary>Retorna uma lista separada por vírgulas dos valores de coluna que representam a chave primária para a linha especificada.</summary>
        <returns>Uma lista de valores de coluna separada por vírgulas. Se a lista estiver vazia, a cadeia de caracteres vazia será retornada.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrimaryKeyString">
      <MemberSignature Language="C#" Value="public string GetPrimaryKeyString (object row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetPrimaryKeyString(object row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetPrimaryKeyString(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPrimaryKeyString (row As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetPrimaryKeyString(System::Object ^ row);" />
      <MemberSignature Language="F#" Value="abstract member GetPrimaryKeyString : obj -&gt; string&#xA;override this.GetPrimaryKeyString : obj -&gt; string" Usage="metaTable.GetPrimaryKeyString row" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetPrimaryKeyString(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="row">A linha para a qual obter a chave primária.</param>
        <summary>Retorna uma lista separada por vírgulas dos valores de coluna que representam a chave primária para a linha especificada.</summary>
        <returns>Uma lista de valores de coluna separada por vírgulas que representam a chave primária da linha.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrimaryKeyValues">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;object&gt; GetPrimaryKeyValues (object row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;object&gt; GetPrimaryKeyValues(object row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetPrimaryKeyValues(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPrimaryKeyValues (row As Object) As IList(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;System::Object ^&gt; ^ GetPrimaryKeyValues(System::Object ^ row);" />
      <MemberSignature Language="F#" Value="abstract member GetPrimaryKeyValues : obj -&gt; System.Collections.Generic.IList&lt;obj&gt;&#xA;override this.GetPrimaryKeyValues : obj -&gt; System.Collections.Generic.IList&lt;obj&gt;" Usage="metaTable.GetPrimaryKeyValues row" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetPrimaryKeyValues(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="row">A linha para a qual obter a chave primária.</param>
        <summary>Retorna uma coleção de valores de coluna que representam a chave primária para a linha especificada.</summary>
        <returns>Uma coleção de valores de coluna que representam a chave primária para a linha.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetQuery">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Obtém a instância <see cref="T:System.Linq.IQueryable" /> para o tipo de entidade que representa a tabela.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetQuery">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable GetQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable GetQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetQuery" />
      <MemberSignature Language="VB.NET" Value="Public Function GetQuery () As IQueryable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Linq::IQueryable ^ GetQuery();" />
      <MemberSignature Language="F#" Value="abstract member GetQuery : unit -&gt; System.Linq.IQueryable&#xA;override this.GetQuery : unit -&gt; System.Linq.IQueryable" Usage="metaTable.GetQuery " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetQuery</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna a instância <see cref="T:System.Linq.IQueryable" /> para o tipo de entidade que representa a tabela.</summary>
        <returns>A instância <see cref="T:System.Linq.IQueryable" /> para o tipo de entidade.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetQuery">
      <MemberSignature Language="C#" Value="public virtual System.Linq.IQueryable GetQuery (object context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable GetQuery(object context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetQuery(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetQuery (context As Object) As IQueryable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Linq::IQueryable ^ GetQuery(System::Object ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetQuery : obj -&gt; System.Linq.IQueryable&#xA;override this.GetQuery : obj -&gt; System.Linq.IQueryable" Usage="metaTable.GetQuery context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetQuery(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">O contexto do objeto <see cref="T:System.Web.DynamicData.MetaTable" />.</param>
        <summary>Retorna a instância <see cref="T:System.Linq.IQueryable" /> para o tipo de entidade que representa a tabela usando o contexto de dados.</summary>
        <returns>A instância <see cref="T:System.Linq.IQueryable" /> para o tipo de entidade que representa a tabela no contexto de dados.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o `context` parâmetro é `null`, esse método cria um novo contexto chamando o <xref:System.Web.DynamicData.MetaTable.CreateContext%2A?displayProperty=nameWithType> método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScaffoldColumns">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Web.DynamicData.MetaColumn&gt; GetScaffoldColumns (System.Web.UI.WebControls.DataBoundControlMode mode, System.Web.DynamicData.ContainerType containerType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Web.DynamicData.MetaColumn&gt; GetScaffoldColumns(valuetype System.Web.UI.WebControls.DataBoundControlMode mode, valuetype System.Web.DynamicData.ContainerType containerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetScaffoldColumns(System.Web.UI.WebControls.DataBoundControlMode,System.Web.DynamicData.ContainerType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Web::DynamicData::MetaColumn ^&gt; ^ GetScaffoldColumns(System::Web::UI::WebControls::DataBoundControlMode mode, System::Web::DynamicData::ContainerType containerType);" />
      <MemberSignature Language="F#" Value="abstract member GetScaffoldColumns : System.Web.UI.WebControls.DataBoundControlMode * System.Web.DynamicData.ContainerType -&gt; seq&lt;System.Web.DynamicData.MetaColumn&gt;&#xA;override this.GetScaffoldColumns : System.Web.UI.WebControls.DataBoundControlMode * System.Web.DynamicData.ContainerType -&gt; seq&lt;System.Web.DynamicData.MetaColumn&gt;" Usage="metaTable.GetScaffoldColumns (mode, containerType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Web.DynamicData.MetaColumn&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Web.UI.WebControls.DataBoundControlMode" />
        <Parameter Name="containerType" Type="System.Web.DynamicData.ContainerType" />
      </Parameters>
      <Docs>
        <param name="mode">O modo de controle associado a dados.</param>
        <param name="containerType">Um valor que indica se a tabela é exibida como uma entidade individual ou como parte de uma lista de entidades.</param>
        <summary>Retorna uma lista de colunas para exibição usando o scaffolding.</summary>
        <returns>Uma lista de colunas para exibição usando o scaffolding.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método retorna todas as colunas cujos <xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute> estiver definida como `true` exceto o seguinte:  
  
-   Longa colunas, que são colunas de cadeia de caracteres cujos <xref:System.Web.DynamicData.MetaColumn.IsLongString%2A> estiver definida como `true` e cujo `containerType` parâmetro é `true`.  
  
-   Colunas filho cujo <xref:System.Web.UI.WebControls.DataBoundControlMode> valor é definido como <xref:System.Web.UI.WebControls.DataBoundControlMode.Insert>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTable">
      <MemberSignature Language="C#" Value="public static System.Web.DynamicData.MetaTable GetTable (Type entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.DynamicData.MetaTable GetTable(class System.Type entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetTable(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTable (entityType As Type) As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::DynamicData::MetaTable ^ GetTable(Type ^ entityType);" />
      <MemberSignature Language="F#" Value="static member GetTable : Type -&gt; System.Web.DynamicData.MetaTable" Usage="System.Web.DynamicData.MetaTable.GetTable entityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="entityType">O tipo da entidade.</param>
        <summary>Recupera o metatable associado ao tipo especificado.</summary>
        <returns>O metatable associado ao tipo especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método chama <xref:System.Web.DynamicData.MetaTable.TryGetTable%28System.Type%2CSystem.Web.DynamicData.MetaTable%40%29>. Se <xref:System.Web.DynamicData.MetaTable.TryGetTable%28System.Type%2CSystem.Web.DynamicData.MetaTable%40%29> retorna `false`, um <xref:System.InvalidOperationException> exceção é lançada.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">O método <see cref="M:System.Web.DynamicData.MetaTable.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)" /> foi chamado por este método <see langword="false" /> retornado.</exception>
      </Docs>
    </Member>
    <Member MemberName="HasPrimaryKey">
      <MemberSignature Language="C#" Value="public bool HasPrimaryKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasPrimaryKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.HasPrimaryKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasPrimaryKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasPrimaryKey { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasPrimaryKey : bool" Usage="System.Web.DynamicData.MetaTable.HasPrimaryKey" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.HasPrimaryKey</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se a tabela tem uma chave primária.</summary>
        <value>
          <see langword="true" /> Se a tabela tem uma chave primária; Caso contrário, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected internal virtual void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.Initialize" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Initialize();" />
      <MemberSignature Language="F#" Value="abstract member Initialize : unit -&gt; unit&#xA;override this.Initialize : unit -&gt; unit" Usage="metaTable.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inicializa dados que talvez não estejam disponíveis quando o construtor for chamado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método chama o <xref:System.Web.DynamicData.MetaColumn.Initialize%2A> método para cada coluna na <xref:System.Web.DynamicData.MetaTable> instância. Esse método não pode ser chamado diretamente. Para personalizar a inicialização, você pode derivar dessa classe e substituir o <xref:System.Web.DynamicData.MetaColumn.Initialize%2A> método. Se você substituir esse método, chame o controle base `Initialize` método.  
  
   
  
## Examples  
 O exemplo a seguir mostra como substituir o <xref:System.Web.DynamicData.MetaColumn.Initialize%2A> método para personalizar o processo de inicialização.  
  
```csharp  
protected  override void Initialize() {  
    base.Initialize();  
    MyOverridenInit();  
}  
```  
  
```vb  
Protected Overloads Overrides Sub Initialize()   
    MyBase.Initialize()   
    MyOverridenInit()   
End Sub  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Web.DynamicData.MetaTable.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se a tabela é somente leitura.</summary>
        <value>
          <see langword="true" /> Se a tabela é somente leitura; Caso contrário, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListActionPath">
      <MemberSignature Language="C#" Value="public string ListActionPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ListActionPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.ListActionPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ListActionPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ListActionPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ListActionPath : string" Usage="System.Web.DynamicData.MetaTable.ListActionPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o caminho de ação da ação de lista para a tabela.</summary>
        <value>O caminho da ação da ação de lista para a tabela.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O caminho da ação é uma URL para uma ação para uma entidade específica. Para obter mais informações, consulte o <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> visão geral da classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Model">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaModel Model { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaModel Model" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.Model" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Model As MetaModel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::MetaModel ^ Model { System::Web::DynamicData::MetaModel ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Model : System.Web.DynamicData.MetaModel" Usage="System.Web.DynamicData.MetaTable.Model" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o modelo meta ao qual a tabela pertence.</summary>
        <value>O modelo de metadados que a tabela pertence.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obter mais informações, consulte o <xref:System.Data.Linq.Mapping.MetaModel?displayProperty=nameWithType> visão geral da classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Web.DynamicData.MetaTable.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o nome exclusivo da tabela.</summary>
        <value>O nome exclusivo da tabela.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrimaryKeyColumns">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.DynamicData.MetaColumn&gt; PrimaryKeyColumns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Web.DynamicData.MetaColumn&gt; PrimaryKeyColumns" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.PrimaryKeyColumns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrimaryKeyColumns As ReadOnlyCollection(Of MetaColumn)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::DynamicData::MetaColumn ^&gt; ^ PrimaryKeyColumns { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::DynamicData::MetaColumn ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PrimaryKeyColumns : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.DynamicData.MetaColumn&gt;" Usage="System.Web.DynamicData.MetaTable.PrimaryKeyColumns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.DynamicData.MetaColumn&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a coleção de colunas que definem a chave primária.</summary>
        <value>Uma coleção que contém as colunas de chave primária.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.ModelProviders.TableProvider Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.ModelProviders.TableProvider Provider" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.Provider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Provider As TableProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::ModelProviders::TableProvider ^ Provider { System::Web::DynamicData::ModelProviders::TableProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Provider : System.Web.DynamicData.ModelProviders.TableProvider" Usage="System.Web.DynamicData.MetaTable.Provider" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.Provider</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.ModelProviders.TableProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o provedor da tabela.</summary>
        <value>O provedor para a tabela.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetMetadata">
      <MemberSignature Language="C#" Value="public void ResetMetadata ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetMetadata() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.ResetMetadata" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetMetadata ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetMetadata();" />
      <MemberSignature Language="F#" Value="member this.ResetMetadata : unit -&gt; unit" Usage="metaTable.ResetMetadata " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reinicia os metadados armazenados em cache da tabela.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Os metadados de tabela em cache consistem nas informações que são obtidas de atributos do modelo de dados e de metadados sobre colunas intrínseco. O cache de metadados é recompilado na próxima vez que todos os metadados é solicitado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootEntityType">
      <MemberSignature Language="C#" Value="public Type RootEntityType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type RootEntityType" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.RootEntityType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootEntityType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ RootEntityType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RootEntityType : Type" Usage="System.Web.DynamicData.MetaTable.RootEntityType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.RootEntityType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o tipo raiz da hierarquia de herança da entidade.</summary>
        <value>O tipo de raiz da hierarquia de herança da entidade.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o tipo é na parte superior da hierarquia de herança ou não tem um tipo de pai, o tipo de entidade será retornado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scaffold">
      <MemberSignature Language="C#" Value="public virtual bool Scaffold { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Scaffold" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.Scaffold" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Scaffold As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Scaffold { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Scaffold : bool" Usage="System.Web.DynamicData.MetaTable.Scaffold" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.Scaffold</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se a tabela deve ser exibida.</summary>
        <value>
          <see langword="true" /> Se a tabela deve ser exibida; Caso contrário, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SortColumn">
      <MemberSignature Language="C#" Value="public virtual System.Web.DynamicData.MetaColumn SortColumn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaColumn SortColumn" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.SortColumn" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SortColumn As MetaColumn" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::DynamicData::MetaColumn ^ SortColumn { System::Web::DynamicData::MetaColumn ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SortColumn : System.Web.DynamicData.MetaColumn" Usage="System.Web.DynamicData.MetaTable.SortColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaColumn</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o valor <see cref="T:System.Web.DynamicData.MetaColumn" /> pelo qual a tabela é classificada.</summary>
        <value>A coluna que a tabela é classificada.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SortDescending">
      <MemberSignature Language="C#" Value="public virtual bool SortDescending { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SortDescending" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.SortDescending" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SortDescending As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SortDescending { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SortDescending : bool" Usage="System.Web.DynamicData.MetaTable.SortDescending" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.SortDescending</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se as entradas são classificadas em ordem decrescente quando são usadas como pais em uma relação de chave estrangeira.</summary>
        <value>
          <see langword="true" /> Se as entradas são classificadas em ordem decrescente; Caso contrário, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode especificar a ordem de classificação usando o <xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute?displayProperty=nameWithType> atributo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="metaTable.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna o nome da tabela.</summary>
        <returns>O nome da tabela.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetColumn">
      <MemberSignature Language="C#" Value="public bool TryGetColumn (string columnName, out System.Web.DynamicData.MetaColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetColumn(string columnName, [out] class System.Web.DynamicData.MetaColumn&amp; column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.TryGetColumn(System.String,System.Web.DynamicData.MetaColumn@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetColumn (columnName As String, ByRef column As MetaColumn) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetColumn(System::String ^ columnName, [Runtime::InteropServices::Out] System::Web::DynamicData::MetaColumn ^ % column);" />
      <MemberSignature Language="F#" Value="member this.TryGetColumn : string *  -&gt; bool" Usage="metaTable.TryGetColumn (columnName, column)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="column" Type="System.Web.DynamicData.MetaColumn" RefType="out" />
      </Parameters>
      <Docs>
        <param name="columnName">O nome da coluna a ser encontrado.</param>
        <param name="column">Quando este método é retornado, contém o objeto <see langword="MetaColumn" /> para <c>columnName</c>. Este parâmetro é passado não inicializado.</param>
        <summary>Retorna um valor que indica se uma coluna especificada pode ser encontrada.</summary>
        <returns>
          <see langword="true" /> se a coluna especificada puder ser encontrada; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o `columnName` parâmetro for nulo, um <xref:System.InvalidOperationException> exceção é lançada.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetTable">
      <MemberSignature Language="C#" Value="public static bool TryGetTable (Type entityType, out System.Web.DynamicData.MetaTable table);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryGetTable(class System.Type entityType, [out] class System.Web.DynamicData.MetaTable&amp; table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryGetTable (entityType As Type, ByRef table As MetaTable) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryGetTable(Type ^ entityType, [Runtime::InteropServices::Out] System::Web::DynamicData::MetaTable ^ % table);" />
      <MemberSignature Language="F#" Value="static member TryGetTable : Type *  -&gt; bool" Usage="System.Web.DynamicData.MetaTable.TryGetTable (entityType, table)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Type" />
        <Parameter Name="table" Type="System.Web.DynamicData.MetaTable" RefType="out" />
      </Parameters>
      <Docs>
        <param name="entityType">O tipo da entidade.</param>
        <param name="table">Quando este método é retornado, contém o metatable associado ao tipo especificado. Este parâmetro é passado não inicializado.</param>
        <summary>Recupera o metatable associado ao tipo e à tabela especificados.</summary>
        <returns>O metatable associado à tabela determinada especificada.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="entityType" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>