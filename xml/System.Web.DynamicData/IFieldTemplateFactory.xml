<Type Name="IFieldTemplateFactory" FullName="System.Web.DynamicData.IFieldTemplateFactory">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="23211ec4cd15a2e474a377b387ce573f980a7091" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37606400" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IFieldTemplateFactory" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IFieldTemplateFactory" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.IFieldTemplateFactory" />
  <TypeSignature Language="VB.NET" Value="Public Interface IFieldTemplateFactory" />
  <TypeSignature Language="C++ CLI" Value="public interface class IFieldTemplateFactory" />
  <TypeSignature Language="F#" Value="type IFieldTemplateFactory = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Define uma interface implementada por objetos que criam modelos de campo.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa classe deve ser implementada pelo <xref:System.Web.DynamicData.FieldTemplateFactory> classe para criar um modelo de campo. Essa interface fornece métodos que inicializam o <xref:System.Web.DynamicData.FieldTemplateFactory> e cria modelos de campo.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateFieldTemplate">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.IFieldTemplate CreateFieldTemplate (System.Web.DynamicData.MetaColumn column, System.Web.UI.WebControls.DataBoundControlMode mode, string uiHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.DynamicData.IFieldTemplate CreateFieldTemplate(class System.Web.DynamicData.MetaColumn column, valuetype System.Web.UI.WebControls.DataBoundControlMode mode, string uiHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateFieldTemplate (column As MetaColumn, mode As DataBoundControlMode, uiHint As String) As IFieldTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::DynamicData::IFieldTemplate ^ CreateFieldTemplate(System::Web::DynamicData::MetaColumn ^ column, System::Web::UI::WebControls::DataBoundControlMode mode, System::String ^ uiHint);" />
      <MemberSignature Language="F#" Value="abstract member CreateFieldTemplate : System.Web.DynamicData.MetaColumn * System.Web.UI.WebControls.DataBoundControlMode * string -&gt; System.Web.DynamicData.IFieldTemplate" Usage="iFieldTemplateFactory.CreateFieldTemplate (column, mode, uiHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.IFieldTemplate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Web.DynamicData.MetaColumn" />
        <Parameter Name="mode" Type="System.Web.UI.WebControls.DataBoundControlMode" />
        <Parameter Name="uiHint" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="column">Especifica a coluna de dados a ser usada para exibir o modelo de campo.</param>
        <param name="mode">Especifica o modo de exibição do modelo do campo.</param>
        <param name="uiHint">Especifica qual modelo de campo usar.</param>
        <summary>Cria uma instância de um modelo de campo usando a classe <see cref="T:System.Web.DynamicData.MetaColumn" />, a classe <see cref="T:System.Web.UI.WebControls.DataBoundControlMode" /> e a propriedade <see cref="P:System.Web.DynamicData.MetaColumn.UIHint" />.</summary>
        <returns>Uma instância de um objeto <see cref="T:System.Web.DynamicData.FieldTemplateFactory" /> quando implementada em uma classe.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Modelos de campo de dados dinâmicos do ASP.NET são controles de usuário do ASP.NET que controles de dados são mapeados para tipos de dados em um modelo de dados. Modelos de campo geralmente derivam <xref:System.Web.DynamicData.FieldTemplateUserControl>, a classe que permite o acesso a campos de dados, colunas de dados e metadados nos modelos de dados. Projetos de dados dinâmicos fornecem padrão de modelos de campo, mas você pode modificá-las ou criar modelos de campo personalizado. Quando imlemented, esse método cria um modelo de campo com base na coluna de dados, o modo da coluna de dados e o <xref:System.Web.DynamicData.MetaColumn.UIHint%2A> propriedade. Você especifica o `uiHint` parâmetro se você deseja processar dados usando um modelo de campo personalizado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (System.Web.DynamicData.MetaModel model);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class System.Web.DynamicData.MetaModel model) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.IFieldTemplateFactory.Initialize(System.Web.DynamicData.MetaModel)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize (model As MetaModel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Initialize(System::Web::DynamicData::MetaModel ^ model);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : System.Web.DynamicData.MetaModel -&gt; unit" Usage="iFieldTemplateFactory.Initialize model" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="System.Web.DynamicData.MetaModel" />
      </Parameters>
      <Docs>
        <param name="model">Especifica o modelo de dados que o modelo de campo usa.</param>
        <summary>Inicializa um <see cref="T:System.Web.DynamicData.FieldTemplateFactory" /> usando o modelo de dados especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dados dinâmicos do ASP.NET usam modelos de campo para exibir campos de dados individuais. Normalmente, os modelos de campo são implementados como controles de usuário que mapeiam tipos de dados em um modelo de dados com campos individuais no controle de dados. Esse método inicializa o <xref:System.Web.DynamicData.FieldTemplateFactory> classe, que é usado para criar o modelo de campo de modelos de campo usando o modelo de dados usará.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>