<Type Name="ColumnAttribute" FullName="System.Data.Linq.Mapping.ColumnAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="434bdeafe85ec70ee665c0143c4b57306fd46422" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30389040" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ColumnAttribute : System.Data.Linq.Mapping.DataAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ColumnAttribute extends System.Data.Linq.Mapping.DataAttribute" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.Mapping.ColumnAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ColumnAttribute&#xA;Inherits DataAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ColumnAttribute sealed : System::Data::Linq::Mapping::DataAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Linq.Mapping.DataAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Property, AllowMultiple=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="20a7a-101">Associa uma classe a uma coluna em uma tabela de banco de dados.</span>
      <span class="sxs-lookup">
        <span data-stu-id="20a7a-101">Associates a class with a column in a database table.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20a7a-102">Use esse atributo para designar um membro de uma classe de entidade para representar uma coluna em uma tabela de banco de dados.</span><span class="sxs-lookup"><span data-stu-id="20a7a-102">Use this attribute to designate a member of an entity class to represent a column in a database table.</span></span> <span data-ttu-id="20a7a-103">Você pode aplicar esse atributo para qualquer campo ou propriedade que é `public`, `private`, ou `internal`.</span><span class="sxs-lookup"><span data-stu-id="20a7a-103">You can apply this attribute to any field or property that is `public`, `private`, or `internal`.</span></span>  
  
 <span data-ttu-id="20a7a-104">Somente os membros de classe de entidade identificados como as colunas são persistentes quando [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] salva as alterações no banco de dados.</span><span class="sxs-lookup"><span data-stu-id="20a7a-104">Only those entity class members identified as columns are persisted when [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] saves changes to the database.</span></span>  
  
 <span data-ttu-id="20a7a-105">Use vírgulas para separar várias propriedades do atributo.</span><span class="sxs-lookup"><span data-stu-id="20a7a-105">Use commas to separate multiple properties on the attribute.</span></span>  
  
   
  
## Examples  
  
```vb  
<Table(Name:="Employees")>  _  
Public Class Employees  
    Private _LastName As String  
    ' …  
    <Column(Storage:="_LastName", DbType:="NVarChar(20) NOT NULL", _  
        CanBeNull:=false)> _  
    Public Property LastName() As String  
        Get  
            Return Me._LastName  
        End Get  
        Set  
            If ((Me._LastName = value) _  
                = false) Then  
                Me.OnPropertyChanging("LastName")  
                Me._LastName = value  
                Me.OnPropertyChanged("LastName")  
            End If  
        End Set  
    End Property  
End Class  
```  
  
```csharp  
[Table(Name="Employees")]  
public class Employees  
{  
    private string _LastName;      
    // …  
    [Column(Storage="_LastName", DbType="NVarChar(20) NOT NULL",   
        CanBeNull=false)]  
    public string LastName  
    {  
        get  
        {  
            return this._LastName;  
        }  
        set  
        {  
            if ((this._LastName != value))  
            {  
                this.OnPropertyChanging("LastName");  
                this._LastName = value;  
                this.OnPropertyChanged("LastName");  
            }  
        }  
    }  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ColumnAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.ColumnAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ColumnAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="20a7a-106">Inicializa uma nova instância da classe <see cref="T:System.Data.Linq.Mapping.ColumnAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20a7a-106">Initializes a new instance of the <see cref="T:System.Data.Linq.Mapping.ColumnAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSync">
      <MemberSignature Language="C#" Value="public System.Data.Linq.Mapping.AutoSync AutoSync { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Linq.Mapping.AutoSync AutoSync" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.AutoSync" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoSync As AutoSync" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Linq::Mapping::AutoSync AutoSync { System::Data::Linq::Mapping::AutoSync get(); void set(System::Data::Linq::Mapping::AutoSync value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.AutoSync</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="20a7a-107">Obtém ou define a enumeração de <see cref="T:System.Data.Linq.Mapping.AutoSync" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20a7a-107">Gets or sets the <see cref="T:System.Data.Linq.Mapping.AutoSync" /> enumeration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="20a7a-108">O valor <see cref="T:System.Data.Linq.Mapping.AutoSync" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20a7a-108">The <see cref="T:System.Data.Linq.Mapping.AutoSync" /> value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#1)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanBeNull">
      <MemberSignature Language="C#" Value="public bool CanBeNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanBeNull" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.CanBeNull" />
      <MemberSignature Language="VB.NET" Value="Public Property CanBeNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanBeNull { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="20a7a-109">Obtém ou define se uma coluna pode conter valores nulos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20a7a-109">Gets or sets whether a column can contain null values.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="20a7a-110">Padrão = <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20a7a-110">Default = <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20a7a-111">Se você definir esse valor como `false`, os dados na coluna correspondente são considerados como não nulo.</span><span class="sxs-lookup"><span data-stu-id="20a7a-111">If you set this value to `false`, the data in the corresponding column is assumed to be non-null.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="20a7a-112">Essa propriedade é duplicada do <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> propriedade para sua conveniência.</span><span class="sxs-lookup"><span data-stu-id="20a7a-112">This property is duplicated from the <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> property for convenience.</span></span> <span data-ttu-id="20a7a-113">O <xref:System.Data.Linq.DataContext.CreateDatabase%2A> método usa apenas o <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="20a7a-113">The <xref:System.Data.Linq.DataContext.CreateDatabase%2A> method uses only the <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> property.</span></span> <span data-ttu-id="20a7a-114">Por esse motivo, você deve especificar se uma coluna pode conter valores nulos no <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> propriedade também.</span><span class="sxs-lookup"><span data-stu-id="20a7a-114">For this reason, you must specify whether a column can contain null values in the <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> property also.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#2)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DbType">
      <MemberSignature Language="C#" Value="public string DbType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DbType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.DbType" />
      <MemberSignature Language="VB.NET" Value="Public Property DbType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DbType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="20a7a-115">Obtém ou define o tipo da coluna de banco de dados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20a7a-115">Gets or sets the type of the database column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="20a7a-116">Valor de cadeia de caracteres que especifica o texto exato que define a coluna em uma declaração de tabela do Transact-SQL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20a7a-116">String value that specifies the exact text that defines the column in a Transact-SQL table declaration.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20a7a-117">Use essa propriedade para especificar o texto exato que define a coluna em uma declaração de tabela do Transact-SQL.</span><span class="sxs-lookup"><span data-stu-id="20a7a-117">Use this property to specify the exact text that defines the column in a Transact-SQL table declaration.</span></span> <span data-ttu-id="20a7a-118">Especifique o <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> propriedade somente se você planeja usar <xref:System.Data.Linq.DataContext.CreateDatabase%2A> para criar uma instância do banco de dados.</span><span class="sxs-lookup"><span data-stu-id="20a7a-118">Specify the <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> property only if you plan to use <xref:System.Data.Linq.DataContext.CreateDatabase%2A> to create an instance of the database.</span></span>  
  
 <span data-ttu-id="20a7a-119">O valor padrão de <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> é inferido do tipo de membro.</span><span class="sxs-lookup"><span data-stu-id="20a7a-119">The default value of <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> is inferred from the member type.</span></span> <span data-ttu-id="20a7a-120">Para obter mais informações, consulte [mapeamento de tipo CLR SQL](~/docs/framework/data/adonet/sql/linq/sql-clr-type-mapping.md).</span><span class="sxs-lookup"><span data-stu-id="20a7a-120">For more information, see [SQL-CLR Type Mapping](~/docs/framework/data/adonet/sql/linq/sql-clr-type-mapping.md).</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#4)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public string Expression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Expression" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.Expression" />
      <MemberSignature Language="VB.NET" Value="Public Property Expression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Expression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="20a7a-121">Obtém ou define se uma coluna é uma coluna computada em um banco de dados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20a7a-121">Gets or sets whether a column is a computed column in a database.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="20a7a-122">Padrão = vazio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20a7a-122">Default = empty.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20a7a-123">Use essa propriedade quando você usar <xref:System.Data.Linq.DataContext.CreateDatabase%2A> para definir uma coluna como contendo valores computados.</span><span class="sxs-lookup"><span data-stu-id="20a7a-123">Use this property when you use <xref:System.Data.Linq.DataContext.CreateDatabase%2A> to define a column as containing computed values.</span></span>  
  
 <span data-ttu-id="20a7a-124">Por exemplo, se você deseja criar uma coluna definida no SQL como `InventoryVal AS UnitPrice * UnitsInStock`, use a seguinte *expressão* cadeia de caracteres: `"UnitPrice * UnitsInStock"`.</span><span class="sxs-lookup"><span data-stu-id="20a7a-124">For example, if you want to create a column defined in SQL as `InventoryVal AS UnitPrice * UnitsInStock`, use the following *expression* string: `"UnitPrice * UnitsInStock"`.</span></span>  
  
> [!NOTE]
>  [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]<span data-ttu-id="20a7a-125"> não suporta colunas computadas como chaves primárias.</span><span class="sxs-lookup"><span data-stu-id="20a7a-125"> does not support computed columns as primary keys.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#5)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDbGenerated">
      <MemberSignature Language="C#" Value="public bool IsDbGenerated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDbGenerated" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated" />
      <MemberSignature Language="VB.NET" Value="Public Property IsDbGenerated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDbGenerated { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="20a7a-126">Obtém ou define se uma coluna contém os valores que o banco de dados gera automaticamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20a7a-126">Gets or sets whether a column contains values that the database auto-generates.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="20a7a-127">Padrão = <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20a7a-127">Default = <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20a7a-128"><xref:System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated%2A> membros são sincronizados imediatamente após a linha de dados é inserida, e os membros estão disponíveis após <xref:System.Data.Linq.DataContext.SubmitChanges%2A> é concluída.</span><span class="sxs-lookup"><span data-stu-id="20a7a-128"><xref:System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated%2A> members are synchronized immediately after the row of data is inserted, and the members are available after <xref:System.Data.Linq.DataContext.SubmitChanges%2A> is completed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="20a7a-129">Se a coluna contém valores de chave primária e designar <xref:System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated%2A> como `true`, você também deve adicionar o <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> propriedade usando o `IDENTITY` modificador.</span><span class="sxs-lookup"><span data-stu-id="20a7a-129">If the column holds primary key values and you designate <xref:System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated%2A> as `true`, you should also add the <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> property by using the `IDENTITY` modifier.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#6)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDiscriminator">
      <MemberSignature Language="C#" Value="public bool IsDiscriminator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDiscriminator" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.IsDiscriminator" />
      <MemberSignature Language="VB.NET" Value="Public Property IsDiscriminator As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDiscriminator { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="20a7a-130">Obtém ou define se uma coluna contém um valor de discriminador para uma hierarquia de herança do [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="20a7a-130">Gets or sets whether a column contains a discriminator value for a [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] inheritance hierarchy.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="20a7a-131">Padrão = <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20a7a-131">Default = <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20a7a-132">Quando `true`, essa propriedade identifica o membro de classe como contendo o valor Discriminatório para uma hierarquia de herança.</span><span class="sxs-lookup"><span data-stu-id="20a7a-132">When `true`, this property identifies the class member as holding the discriminator value for an inheritance hierarchy.</span></span>  
  
 <span data-ttu-id="20a7a-133">Você pode definir essa propriedade `true` para não mais de um membro, que deve pertencer ao nível superior mapeado classe na hierarquia.</span><span class="sxs-lookup"><span data-stu-id="20a7a-133">You can set this property to `true` for no more than one member, which must belong to the topmost mapped class in the hierarchy.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#7)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPrimaryKey">
      <MemberSignature Language="C#" Value="public bool IsPrimaryKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrimaryKey" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.IsPrimaryKey" />
      <MemberSignature Language="VB.NET" Value="Public Property IsPrimaryKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPrimaryKey { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="20a7a-134">Obtém ou define se esse membro da classe representa uma coluna que faz parte ou toda a chave primária da tabela.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20a7a-134">Gets or sets whether this class member represents a column that is part or all of the primary key of the table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="20a7a-135">Padrão = <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20a7a-135">Default = <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20a7a-136">Supondo que uma classe de entidade, você deve fornecer pelo menos um membro com esse atributo, e ele deve ser mapeado para a chave primária ou uma chave exclusiva na tabela correspondente ou exibição.</span><span class="sxs-lookup"><span data-stu-id="20a7a-136">Assuming an entity class, you must provide at least one member with this attribute, and it must be mapped to the primary key or a unique key in the corresponding table or view.</span></span> <span data-ttu-id="20a7a-137">Falha ao fazer essa prompts [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] considerar instâncias da classe como somente leitura para enviar alterações para o banco de dados.</span><span class="sxs-lookup"><span data-stu-id="20a7a-137">Failure to do this prompts [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] to consider instances of the class as read-only for submitting changes to the database.</span></span>  
  
 <span data-ttu-id="20a7a-138">Se você designar mais de um membro da classe usando essa propriedade, a chave deve ser uma combinação de colunas associadas.</span><span class="sxs-lookup"><span data-stu-id="20a7a-138">If you designate more than one member of the class by using this property, the key is said to be a composite of the associated columns.</span></span>  
  
> [!NOTE]
>  [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]<span data-ttu-id="20a7a-139"> não suporta colunas computadas como chaves primárias.</span><span class="sxs-lookup"><span data-stu-id="20a7a-139"> does not support computed columns as primary keys.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#8)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVersion">
      <MemberSignature Language="C#" Value="public bool IsVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.IsVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property IsVersion As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsVersion { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="20a7a-140">Obtém ou define se o tipo de coluna do membro é um número de versão ou carimbo de data/hora do banco de dados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20a7a-140">Gets or sets whether the column type of the member is a database timestamp or version number.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="20a7a-141">Valor padrão = <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20a7a-141">Default value = <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20a7a-142">Números de versão são incrementados e colunas de carimbo de hora são atualizadas sempre que a linha associada é atualizada.</span><span class="sxs-lookup"><span data-stu-id="20a7a-142">Version numbers are incremented and timestamp columns are updated every time that the associated row is updated.</span></span> <span data-ttu-id="20a7a-143">(Esta propriedade instrui [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] que uma coluna deve ser atualizada para mostrar que se trata de uma nova versão; não é destinada para registrar informações como quem fez a atualização.)</span><span class="sxs-lookup"><span data-stu-id="20a7a-143">(This property tells [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] that a column should be updated to show that it is a new version; it is not meant to record information such as who made the update.)</span></span>  
  
 <span data-ttu-id="20a7a-144">Observe o seguinte quando `IsVersion` for verdadeira:</span><span class="sxs-lookup"><span data-stu-id="20a7a-144">Note the following when `IsVersion` is true:</span></span>  
  
-   <span data-ttu-id="20a7a-145">Use <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> para especificar os modificadores corretos para designar uma coluna de carimbo de hora ou de número de versão.</span><span class="sxs-lookup"><span data-stu-id="20a7a-145">Use <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> to specify the correct modifiers to designate a version number or timestamp column.</span></span> <span data-ttu-id="20a7a-146">Se você não especificar <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A>, [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] infere os modificadores corretos.</span><span class="sxs-lookup"><span data-stu-id="20a7a-146">If you do not specify <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A>, [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] infers the correct modifiers.</span></span>  
  
 <span data-ttu-id="20a7a-147">Números de versão são incrementados e colunas de carimbo de hora são atualizadas sempre que a linha associada é atualizada.</span><span class="sxs-lookup"><span data-stu-id="20a7a-147">Version numbers are incremented and timestamp columns are updated every time that the associated row is updated.</span></span> <span data-ttu-id="20a7a-148">Membros com `IsVersion=true` são sincronizados imediatamente após a linha de dados é atualizada.</span><span class="sxs-lookup"><span data-stu-id="20a7a-148">Members with `IsVersion=true` are synchronized immediately after the data row is updated.</span></span> <span data-ttu-id="20a7a-149">Os novos valores ficarão visíveis após <xref:System.Data.Linq.DataContext.SubmitChanges%2A> for concluída.</span><span class="sxs-lookup"><span data-stu-id="20a7a-149">The new values are visible after <xref:System.Data.Linq.DataContext.SubmitChanges%2A> finishes.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#9)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCheck">
      <MemberSignature Language="C#" Value="public System.Data.Linq.Mapping.UpdateCheck UpdateCheck { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Linq.Mapping.UpdateCheck UpdateCheck" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCheck As UpdateCheck" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Linq::Mapping::UpdateCheck UpdateCheck { System::Data::Linq::Mapping::UpdateCheck get(); void set(System::Data::Linq::Mapping::UpdateCheck value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.UpdateCheck</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="20a7a-150">Obtém ou define como o [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] aborda a detecção de conflitos de simultaneidade otimista.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20a7a-150">Gets or sets how [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] approaches the detection of optimistic concurrency conflicts.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="20a7a-151">Padrão = <see cref="F:System.Data.Linq.Mapping.UpdateCheck.Always" />, a menos que <see cref="P:System.Data.Linq.Mapping.ColumnAttribute.IsVersion" /> seja <see langword="true" /> para um membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20a7a-151">Default = <see cref="F:System.Data.Linq.Mapping.UpdateCheck.Always" />, unless <see cref="P:System.Data.Linq.Mapping.ColumnAttribute.IsVersion" /> is <see langword="true" /> for a member.</span>
          </span>
          <span data-ttu-id="20a7a-152">Outros valores são <see cref="F:System.Data.Linq.Mapping.UpdateCheck.Never" /> e <see cref="F:System.Data.Linq.Mapping.UpdateCheck.WhenChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20a7a-152">Other values are <see cref="F:System.Data.Linq.Mapping.UpdateCheck.Never" /> and <see cref="F:System.Data.Linq.Mapping.UpdateCheck.WhenChanged" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20a7a-153">Quando essa propriedade é usada com um dos três enums, ele determina como [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] detecta conflitos de simultaneidade.</span><span class="sxs-lookup"><span data-stu-id="20a7a-153">When this property is used with one of three enums, it determines how [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] detects concurrency conflicts.</span></span>  
  
 <span data-ttu-id="20a7a-154">Se nenhum membro foi projetado como `IsVersion=true`, valores de membro original são comparados com o estado atual do banco de dados.</span><span class="sxs-lookup"><span data-stu-id="20a7a-154">If no member is designed as `IsVersion=true`, original member values are compared with the current database state.</span></span>  
  
 <span data-ttu-id="20a7a-155">Enumerações a seguir estão disponíveis:</span><span class="sxs-lookup"><span data-stu-id="20a7a-155">The following enums are available:</span></span>  
  
-   <span data-ttu-id="20a7a-156">`Always` Sempre use esta coluna para detecção de conflitos.</span><span class="sxs-lookup"><span data-stu-id="20a7a-156">`Always` Always use this column for conflict detection.</span></span>  
  
-   <span data-ttu-id="20a7a-157">`Never` Nunca use esta coluna para detecção de conflitos.</span><span class="sxs-lookup"><span data-stu-id="20a7a-157">`Never` Never use this column for conflict detection.</span></span>  
  
-   <span data-ttu-id="20a7a-158">`WhenChanged` Use esta coluna somente quando o membro foi alterado pelo aplicativo.</span><span class="sxs-lookup"><span data-stu-id="20a7a-158">`WhenChanged` Use this column only when the member has been changed by the application.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#10)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>