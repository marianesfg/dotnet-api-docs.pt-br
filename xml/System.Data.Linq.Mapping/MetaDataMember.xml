<Type Name="MetaDataMember" FullName="System.Data.Linq.Mapping.MetaDataMember">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="195f8be7eea6436f98a825616ab87802912d8f7f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30389140" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class MetaDataMember" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MetaDataMember extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.Mapping.MetaDataMember" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MetaDataMember" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetaDataMember abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="52da3-101">Representa o mapeamento entre um campo ou uma propriedade de um objeto de domínio em uma coluna de uma tabela do banco de dados.</span>
      <span class="sxs-lookup">
        <span data-stu-id="52da3-101">Represents the mapping between a field or a property of a domain object into a column of a database table.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MetaDataMember ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.MetaDataMember.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MetaDataMember();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="52da3-102">Inicializa uma nova instância da classe <see cref="T:System.Data.Linq.Mapping.MetaDataMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52da3-102">Initializes a new instance of the <see cref="T:System.Data.Linq.Mapping.MetaDataMember" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Association">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaAssociation Association { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaAssociation Association" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.Association" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Association As MetaAssociation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MetaAssociation ^ Association { System::Data::Linq::Mapping::MetaAssociation ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaAssociation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="52da3-103">Obtém o <see cref="T:System.Data.Linq.Mapping.MetaAssociation" /> que corresponde a esse membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52da3-103">Gets the <see cref="T:System.Data.Linq.Mapping.MetaAssociation" /> that corresponds to this member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="52da3-104">O correspondente <see cref="T:System.Data.Linq.Mapping.MetaAssociation" /> se existir; caso contrário, <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52da3-104">The corresponding <see cref="T:System.Data.Linq.Mapping.MetaAssociation" /> if one exists; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52da3-105">Esta propriedade representa uma associação de banco de dados como uma chave estrangeira a relação de chave primária.</span><span class="sxs-lookup"><span data-stu-id="52da3-105">This property represents a database association like a foreign-key to primary-key relationship.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSync">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.AutoSync AutoSync { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Linq.Mapping.AutoSync AutoSync" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.AutoSync" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property AutoSync As AutoSync" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::AutoSync AutoSync { System::Data::Linq::Mapping::AutoSync get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.AutoSync</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="52da3-106">Obtém o comportamento de releitura para esse membro para operações de inserir e atualizar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52da3-106">Gets the read-back behavior for this member for insert and update operations.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="52da3-107">Uma enumeração <see cref="T:System.Data.Linq.Mapping.AutoSync" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52da3-107">An <see cref="T:System.Data.Linq.Mapping.AutoSync" /> enumeration.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanBeNull">
      <MemberSignature Language="C#" Value="public abstract bool CanBeNull { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanBeNull" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.CanBeNull" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property CanBeNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool CanBeNull { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="52da3-108">Obtém se o valor desse membro pode ser atribuído ao valor <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52da3-108">Gets whether the value of this member can be assigned the <see langword="null" /> value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="52da3-109">
            <see langword="true" /> Se esse membro pode ser atribuído a <see langword="null" /> valor; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52da3-109">
              <see langword="true" /> if this member can be assigned the <see langword="null" /> value; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52da3-110">Essa propriedade é dependente do <xref:System.Data.Linq.Mapping.MetaDataMember.DbType%2A> propriedade e é fornecido por questões de conveniência.</span><span class="sxs-lookup"><span data-stu-id="52da3-110">This property is dependent on the <xref:System.Data.Linq.Mapping.MetaDataMember.DbType%2A> property, and is provided for convenience.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DbType">
      <MemberSignature Language="C#" Value="public abstract string DbType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DbType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.DbType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DbType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ DbType { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="52da3-111">Obtém o tipo da coluna correspondente do banco de dados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52da3-111">Gets the type of the corresponding database column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="52da3-112">O tipo da coluna de banco de dados como uma cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52da3-112">The type of the database column as a string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52da3-113">Esse será o texto exato usado para definir a coluna em um comando de declaração de tabela do Transact-SQL.</span><span class="sxs-lookup"><span data-stu-id="52da3-113">This will be the exact text used to define the column in a Transact-SQL table declaration command.</span></span> <span data-ttu-id="52da3-114">Se não estiver definida, o tipo de coluna de banco de dados é inferido do tipo de membro.</span><span class="sxs-lookup"><span data-stu-id="52da3-114">If not so defined, the database column type is inferred from the member type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaringType">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaType DeclaringType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaType DeclaringType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.DeclaringType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DeclaringType As MetaType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MetaType ^ DeclaringType { System::Data::Linq::Mapping::MetaType ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="52da3-115">Obtém o <see cref="T:System.Data.Linq.Mapping.MetaType" /> que contém este membro de dados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52da3-115">Gets the <see cref="T:System.Data.Linq.Mapping.MetaType" /> that contains this data member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="52da3-116">O meta-tipo que contém o membro atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52da3-116">The meta-type that contains the current member.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferredSourceAccessor">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaAccessor DeferredSourceAccessor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaAccessor DeferredSourceAccessor" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.DeferredSourceAccessor" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DeferredSourceAccessor As MetaAccessor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MetaAccessor ^ DeferredSourceAccessor { System::Data::Linq::Mapping::MetaAccessor ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaAccessor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="52da3-117">Obtém o acessador que é usado para obter e definir a origem adiada desse membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52da3-117">Gets the accessor that is used to get and set the deferred source of this member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="52da3-118">O acessador usado para acessar a fonte adiada para esse membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52da3-118">The accessor used to access the deferred source for this member.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferredValueAccessor">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaAccessor DeferredValueAccessor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaAccessor DeferredValueAccessor" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.DeferredValueAccessor" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DeferredValueAccessor As MetaAccessor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MetaAccessor ^ DeferredValueAccessor { System::Data::Linq::Mapping::MetaAccessor ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaAccessor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="52da3-119">Obtém o acessador que é usado para obter e definir o valor adiado desse membro adiado (sem causar busca).</span>
          <span class="sxs-lookup">
            <span data-stu-id="52da3-119">Gets the accessor that is used to get and set the deferred value of this member (without causing fetch).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="52da3-120">O acessador usado para acessar o valor adiado para esse membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52da3-120">The accessor used to access the deferred value for this member.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public abstract string Expression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Expression" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.Expression" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Expression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Expression { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="52da3-121">Obtém a expressão que define uma coluna computada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52da3-121">Gets the expression that defines a computed column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="52da3-122">A expressão para a coluna computada como uma cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52da3-122">The expression for the computed column as a string.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAssociation">
      <MemberSignature Language="C#" Value="public abstract bool IsAssociation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAssociation" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.IsAssociation" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsAssociation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsAssociation { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="52da3-123">Obtém se este membro define uma relação de associação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52da3-123">Gets whether this member defines an association relationship.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="52da3-124">
            <see langword="true" /> Se este membro define uma relação de associação; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52da3-124">
              <see langword="true" /> if this member defines an association relationship; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDbGenerated">
      <MemberSignature Language="C#" Value="public abstract bool IsDbGenerated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDbGenerated" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.IsDbGenerated" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsDbGenerated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsDbGenerated { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="52da3-125">Obtém se este membro é gerado automaticamente pelo banco de dados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52da3-125">Gets whether this member is automatically generated by the database.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="52da3-126">
            <see langword="true" /> Se este membro é gerado automaticamente pelo banco de dados; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52da3-126">
              <see langword="true" /> if this member is automatically generated by the database; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52da3-127">Gerado automaticamente membros são sincronizados imediatamente após a linha de dados correspondente é inserida.</span><span class="sxs-lookup"><span data-stu-id="52da3-127">Automatically generated members are synchronized immediately after the corresponding data row is inserted.</span></span> <span data-ttu-id="52da3-128">Não há suporte para valores de chave gerado pelo gatilho de inserção.</span><span class="sxs-lookup"><span data-stu-id="52da3-128">Insert trigger-generated key values are not supported.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDeclaredBy">
      <MemberSignature Language="C#" Value="public abstract bool IsDeclaredBy (System.Data.Linq.Mapping.MetaType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDeclaredBy(class System.Data.Linq.Mapping.MetaType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.MetaDataMember.IsDeclaredBy(System.Data.Linq.Mapping.MetaType)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsDeclaredBy (type As MetaType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsDeclaredBy(System::Data::Linq::Mapping::MetaType ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Data.Linq.Mapping.MetaType" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="52da3-129">O tipo a ser verificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52da3-129">The type to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52da3-130">Especifica se este membro é declarado pelo tipo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52da3-130">Specifies whether this member is declared by the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52da3-131">
            <see langword="true" /> se este membro for declarado pelo tipo especificado; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52da3-131">
              <see langword="true" /> if this member is declared by the specified type; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDeferred">
      <MemberSignature Language="C#" Value="public abstract bool IsDeferred { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDeferred" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.IsDeferred" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsDeferred As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsDeferred { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="52da3-132">Obtém se o comportamento padrão é carregar esse membro de modo adiado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52da3-132">Gets whether the default behavior is to load this member on a deferred basis.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="52da3-133">
            <see langword="true" /> Se este membro é carregado em uma base adiada por padrão. Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52da3-133">
              <see langword="true" /> if this member loaded on a deferred basis by default; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDiscriminator">
      <MemberSignature Language="C#" Value="public abstract bool IsDiscriminator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDiscriminator" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.IsDiscriminator" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsDiscriminator As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsDiscriminator { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="52da3-134">Obtém se este membro representa o discriminador de herança.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52da3-134">Gets whether this member represents the inheritance discriminator.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="52da3-135">
            <see langword="true" /> Se este membro representa o discriminador de herança; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52da3-135">
              <see langword="true" /> if this member represents the inheritance discriminator; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52da3-136">Essa propriedade pode ser `true` no máximo um membro de nível superior mapeado classe em uma hierarquia.</span><span class="sxs-lookup"><span data-stu-id="52da3-136">This property can be `true` for at most one member of the topmost mapped class in a hierarchy.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPersistent">
      <MemberSignature Language="C#" Value="public abstract bool IsPersistent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPersistent" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.IsPersistent" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsPersistent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsPersistent { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="52da3-137">Obtém se este membro é mapeado para uma coluna (ou restrição).</span>
          <span class="sxs-lookup">
            <span data-stu-id="52da3-137">Gets whether this member is mapped to a column (or constraint).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="52da3-138">
            <see langword="true" /> Se este membro é mapeado para uma coluna (ou restrição); Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52da3-138">
              <see langword="true" /> if this member is mapped to a column (or constraint); otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52da3-139">Uma classe pode ter uma combinação de membros persistentes e não persistentes.</span><span class="sxs-lookup"><span data-stu-id="52da3-139">A class may have a combination of persistent and non-persistent members.</span></span> <span data-ttu-id="52da3-140">Membros persistentes são mapeados enquanto membros não persistentes não são mapeados.</span><span class="sxs-lookup"><span data-stu-id="52da3-140">Persistent members are mapped while non-persistent members are not mapped.</span></span> <span data-ttu-id="52da3-141">Uma classe mapeada deve ter pelo menos um membro persistente.</span><span class="sxs-lookup"><span data-stu-id="52da3-141">A mapped class must have at least one persistent member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPrimaryKey">
      <MemberSignature Language="C#" Value="public abstract bool IsPrimaryKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrimaryKey" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsPrimaryKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsPrimaryKey { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="52da3-142">Obtém se este membro faz parte da identidade do tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52da3-142">Gets whether this member is part of the type's identity.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="52da3-143">
            <see langword="true" /> Se esse membro é parte da identidade do tipo; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52da3-143">
              <see langword="true" /> if this member is part of the type's identity; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52da3-144">Se essa propriedade for `true`, o membro da classe representa uma coluna que faz parte da chave exclusiva da tabela.</span><span class="sxs-lookup"><span data-stu-id="52da3-144">If this property is `true`, the class member represents a column that is part of the table’s unique key.</span></span> <span data-ttu-id="52da3-145">Mais de um membro da classe pode ter esta propriedade definida como `true` para uma chave que é uma combinação de colunas associadas.</span><span class="sxs-lookup"><span data-stu-id="52da3-145">More than one member of the class can have this property set to `true` for a key that is a composite of the associated columns.</span></span> <span data-ttu-id="52da3-146">Para uma classe de entidade, pelo menos um membro deve ter esse atributo e deve ser mapeado para a chave primária ou uma chave exclusiva na tabela correspondente ou exibição.</span><span class="sxs-lookup"><span data-stu-id="52da3-146">For an entity class, at least one member must have this attribute and should be mapped to the primary key or a unique key in the corresponding table or view.</span></span> <span data-ttu-id="52da3-147">Caso contrário, o LINQ to SQL considera instâncias da classe como somente leitura com a finalidade de enviar alterações para o banco de dados.</span><span class="sxs-lookup"><span data-stu-id="52da3-147">Otherwise, LINQ to SQL considers instances of the class as read-only for the purpose of submitting changes to the database.</span></span>  
  
 <span data-ttu-id="52da3-148">O conjunto de colunas identificadas com <xref:System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey%2A> não precisa ser a chave primária.</span><span class="sxs-lookup"><span data-stu-id="52da3-148">The set of columns identified with <xref:System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey%2A> are not required to be the primary key.</span></span> <span data-ttu-id="52da3-149">Eles simplesmente denotam um conjunto que identifica exclusivamente a entidade.</span><span class="sxs-lookup"><span data-stu-id="52da3-149">They simply denote a set that uniquely identifies the entity.</span></span> <span data-ttu-id="52da3-150">Alternativas comuns incluem colunas de índice ou de outras colunas de chave exclusivas de clustering.</span><span class="sxs-lookup"><span data-stu-id="52da3-150">Common alternatives include clustering index columns or other unique key columns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVersion">
      <MemberSignature Language="C#" Value="public abstract bool IsVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.IsVersion" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsVersion As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsVersion { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="52da3-151">Obtém se este membro representa a versão de linha ou um carimbo de data/hora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52da3-151">Gets whether this member represents the row version or timestamp.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="52da3-152">
            <see langword="true" /> Se este membro representa a versão de linha ou um carimbo de hora; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52da3-152">
              <see langword="true" /> if this member represents the row version or timestamp; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52da3-153">Números de versão são incrementados e colunas de carimbo de hora são atualizadas sempre que a linha associada é atualizada.</span><span class="sxs-lookup"><span data-stu-id="52da3-153">Version numbers are incremented and timestamp columns are updated whenever the associated row is updated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadMethod">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.MethodInfo LoadMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo LoadMethod" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.LoadMethod" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property LoadMethod As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Reflection::MethodInfo ^ LoadMethod { System::Reflection::MethodInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="52da3-154">Obtém o método <see cref="T:System.Data.Linq.DataContext" /> usado para executar operações de carregamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52da3-154">Gets the <see cref="T:System.Data.Linq.DataContext" /> method that is used to perform load operations.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="52da3-155">O método de carga como <see cref="T:System.Reflection.MethodInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52da3-155">The load method as <see cref="T:System.Reflection.MethodInfo" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MappedName">
      <MemberSignature Language="C#" Value="public abstract string MappedName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MappedName" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.MappedName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property MappedName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ MappedName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="52da3-156">Obtém o nome da coluna (ou restrição) no banco de dados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52da3-156">Gets the name of the column (or constraint) in the database.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="52da3-157">O nome da coluna (ou restrição) como uma cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52da3-157">The name of the column (or constraint) as a string.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Member">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.MemberInfo Member { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MemberInfo Member" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.Member" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Member As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Reflection::MemberInfo ^ Member { System::Reflection::MemberInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="52da3-158">Obtém o <see cref="T:System.Reflection.MemberInfo" /> subjacente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52da3-158">Gets the underlying <see cref="T:System.Reflection.MemberInfo" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="52da3-159">Informações de atributo e os metadados do membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52da3-159">Member attribute and metadata information.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberAccessor">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaAccessor MemberAccessor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaAccessor MemberAccessor" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.MemberAccessor" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property MemberAccessor As MetaAccessor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MetaAccessor ^ MemberAccessor { System::Data::Linq::Mapping::MetaAccessor ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaAccessor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="52da3-160">Obtém o acessador usado para obter ou definir o valor desse membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52da3-160">Gets the accessor that is used to get or set the value of this member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="52da3-161">O acessador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52da3-161">The accessor.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public abstract string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.Name" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="52da3-162">Obtém o nome do membro, mesmo que o nome <see cref="T:System.Reflection.MemberInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52da3-162">Gets the name of the member, same as the <see cref="T:System.Reflection.MemberInfo" /> name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="52da3-163">O nome, mesmo que o <see cref="T:System.Reflection.MemberInfo" /> nome.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52da3-163">The name, same as the <see cref="T:System.Reflection.MemberInfo" /> name.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ordinal">
      <MemberSignature Language="C#" Value="public abstract int Ordinal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Ordinal" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.Ordinal" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Ordinal As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Ordinal { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="52da3-164">Obtém a posição ordinal desse membro com o layout padrão dos resultados da consulta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52da3-164">Gets the ordinal position of this member in the default layout of query results.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="52da3-165">A posição ordinal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52da3-165">The ordinal position.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageAccessor">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaAccessor StorageAccessor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaAccessor StorageAccessor" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.StorageAccessor" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property StorageAccessor As MetaAccessor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MetaAccessor ^ StorageAccessor { System::Data::Linq::Mapping::MetaAccessor ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaAccessor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="52da3-166">Obtém o acessador usado para obter ou definir o valor de armazenamento desse membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52da3-166">Gets the accessor that is used to get or set the storage value of this member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="52da3-167">O acessador para o valor de armazenamento desse membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52da3-167">The accessor for the storage value of this member.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageMember">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.MemberInfo StorageMember { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MemberInfo StorageMember" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.StorageMember" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property StorageMember As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Reflection::MemberInfo ^ StorageMember { System::Reflection::MemberInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="52da3-168">Obtém o membro que armazena os dados para esse membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52da3-168">Gets the member that stores the data for this member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="52da3-169">O membro de armazenamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52da3-169">The storage member.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public abstract Type Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.Type" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ Type { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="52da3-170">Obtém o tipo desse membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52da3-170">Gets the type of this member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="52da3-171">O tipo do membro atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52da3-171">The type of the current member.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCheck">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.UpdateCheck UpdateCheck { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Linq.Mapping.UpdateCheck UpdateCheck" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.UpdateCheck" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property UpdateCheck As UpdateCheck" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::UpdateCheck UpdateCheck { System::Data::Linq::Mapping::UpdateCheck get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.UpdateCheck</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="52da3-172">Obtém a política de verificação de simultaneidade otimista para esse membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52da3-172">Gets the optimistic concurrency check policy for this member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="52da3-173">Um <see cref="T:System.Data.Linq.Mapping.UpdateCheck" /> enum.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52da3-173">An <see cref="T:System.Data.Linq.Mapping.UpdateCheck" /> enum.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52da3-174">Se a classe não tem um membro de versão (<xref:System.Data.Linq.Mapping.MetaDataMember.IsVersion%2A> definida como `true`), a detecção é feita comparando valores de membro original com o estado atual do banco de dados.</span><span class="sxs-lookup"><span data-stu-id="52da3-174">If the class does not have a version member (<xref:System.Data.Linq.Mapping.MetaDataMember.IsVersion%2A> set to `true`), detection is done by comparing original member values with the current database state.</span></span>  
  
 <span data-ttu-id="52da3-175">O <xref:System.Data.Linq.Mapping.MetaDataMember.UpdateCheck%2A> propriedade determina como o LINQ to SQL implementa a detecção de conflitos segundo a simultaneidade otimista.</span><span class="sxs-lookup"><span data-stu-id="52da3-175">The <xref:System.Data.Linq.Mapping.MetaDataMember.UpdateCheck%2A> property determines how LINQ to SQL implements conflict detection under optimistic concurrency.</span></span> <span data-ttu-id="52da3-176">Somente os membros com essa propriedade definida como <xref:System.Data.Linq.Mapping.UpdateCheck.Always> ou <xref:System.Data.Linq.Mapping.UpdateCheck.WhenChanged> são consideradas durante a detecção de conflito.</span><span class="sxs-lookup"><span data-stu-id="52da3-176">Only those members with this property set to <xref:System.Data.Linq.Mapping.UpdateCheck.Always> or <xref:System.Data.Linq.Mapping.UpdateCheck.WhenChanged> are considered during conflict detection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>