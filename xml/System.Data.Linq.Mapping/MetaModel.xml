<Type Name="MetaModel" FullName="System.Data.Linq.Mapping.MetaModel">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="56b72e7323a6064fb222346672b968482b9f7962" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37681262" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class MetaModel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MetaModel extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.Mapping.MetaModel" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MetaModel" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetaModel abstract" />
  <TypeSignature Language="F#" Value="type MetaModel = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="0f751-101">Uma abstração que representa o mapeamento entre objetos de banco de dados e de domínio.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0f751-101">An abstraction that represents the mapping between a database and domain objects.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MetaModel ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.MetaModel.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MetaModel();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0f751-102">Inicializa uma nova instância da classe <see cref="T:System.Data.Linq.Mapping.MetaModel" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f751-102">Initializes a new instance of the <see cref="T:System.Data.Linq.Mapping.MetaModel" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextType">
      <MemberSignature Language="C#" Value="public abstract Type ContextType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ContextType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaModel.ContextType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ContextType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ ContextType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContextType : Type" Usage="System.Data.Linq.Mapping.MetaModel.ContextType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0f751-103">Obtém o tipo do <see cref="T:System.Data.Linq.DataContext" /> tipo que este modelo descreve.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f751-103">Gets the type of <see cref="T:System.Data.Linq.DataContext" /> type that this model describes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0f751-104">O tipo de contexto de dados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f751-104">The data context type.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DatabaseName">
      <MemberSignature Language="C#" Value="public abstract string DatabaseName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DatabaseName" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaModel.DatabaseName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DatabaseName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ DatabaseName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DatabaseName : string" Usage="System.Data.Linq.Mapping.MetaModel.DatabaseName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0f751-105">Obtém o nome do banco de dados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f751-105">Gets the name of the database.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0f751-106">O nome do banco de dados como uma cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f751-106">The database name as a string.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFunction">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaFunction GetFunction (System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.Linq.Mapping.MetaFunction GetFunction(class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.MetaModel.GetFunction(System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetFunction (method As MethodInfo) As MetaFunction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Data::Linq::Mapping::MetaFunction ^ GetFunction(System::Reflection::MethodInfo ^ method);" />
      <MemberSignature Language="F#" Value="abstract member GetFunction : System.Reflection.MethodInfo -&gt; System.Data.Linq.Mapping.MetaFunction" Usage="metaModel.GetFunction method" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaFunction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="method">
          <span data-ttu-id="0f751-107">O método definido em <see cref="T:System.Data.Linq.DataContext" /> ou na classe subordinada que representa a função de banco de dados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f751-107">The method defined on the <see cref="T:System.Data.Linq.DataContext" /> or subordinate class that represents the database function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f751-108">Obtém o <see cref="T:System.Data.Linq.Mapping.MetaFunction" /> que corresponde a uma função de banco de dados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f751-108">Gets the <see cref="T:System.Data.Linq.Mapping.MetaFunction" /> that corresponds to a database function.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f751-109">A metafunção que corresponde a uma função de banco de dados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f751-109">The meta-function that corresponds to a database function.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f751-110">Funções de banco de dados são procedimentos armazenados, funções com valor de tabela e funções definidas pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="0f751-110">Database functions are user-defined functions, table-valued functions, and stored procedures.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFunctions">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;System.Data.Linq.Mapping.MetaFunction&gt; GetFunctions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Linq.Mapping.MetaFunction&gt; GetFunctions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.MetaModel.GetFunctions" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetFunctions () As IEnumerable(Of MetaFunction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::IEnumerable&lt;System::Data::Linq::Mapping::MetaFunction ^&gt; ^ GetFunctions();" />
      <MemberSignature Language="F#" Value="abstract member GetFunctions : unit -&gt; seq&lt;System.Data.Linq.Mapping.MetaFunction&gt;" Usage="metaModel.GetFunctions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Data.Linq.Mapping.MetaFunction&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0f751-111">Obtém uma enumeração de todas as funções.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f751-111">Gets an enumeration of all functions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f751-112">Uma enumeração que pode ser usada para iterar por todas as funções.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f751-112">An enumeration that can be used to iterate through all functions.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetaType">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaType GetMetaType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.Linq.Mapping.MetaType GetMetaType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.MetaModel.GetMetaType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Data::Linq::Mapping::MetaType ^ GetMetaType(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member GetMetaType : Type -&gt; System.Data.Linq.Mapping.MetaType" Usage="metaModel.GetMetaType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="0f751-113">O tipo para o qual o <see cref="T:System.Data.Linq.Mapping.MetaType" /> é buscado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f751-113">The type for which the <see cref="T:System.Data.Linq.Mapping.MetaType" /> is sought.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f751-114">Descobre o <see cref="T:System.Data.Linq.Mapping.MetaType" /> do <see cref="T:System.Type" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f751-114">Discovers the <see cref="T:System.Data.Linq.Mapping.MetaType" /> for the specified <see cref="T:System.Type" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f751-115">O metatipo que corresponde ao tipo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f751-115">A meta-type that corresponds to the specified type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTable">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaTable GetTable (Type rowType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.Linq.Mapping.MetaTable GetTable(class System.Type rowType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.MetaModel.GetTable(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetTable (rowType As Type) As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Data::Linq::Mapping::MetaTable ^ GetTable(Type ^ rowType);" />
      <MemberSignature Language="F#" Value="abstract member GetTable : Type -&gt; System.Data.Linq.Mapping.MetaTable" Usage="metaModel.GetTable rowType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="rowType">
          <span data-ttu-id="0f751-116">O tipo de linha CLR (Common Language Runtime).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f751-116">The common language runtime (CLR) row type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f751-117">Obtém o <see cref="T:System.Data.Linq.Mapping.MetaTable" /> associado a um <see cref="T:System.Type" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f751-117">Gets the <see cref="T:System.Data.Linq.Mapping.MetaTable" /> associated with a specified <see cref="T:System.Type" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f751-118">Uma metatabela associada ao tipo de linha especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f751-118">A meta-table associated with the specified row type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTables">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;System.Data.Linq.Mapping.MetaTable&gt; GetTables ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Linq.Mapping.MetaTable&gt; GetTables() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.MetaModel.GetTables" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetTables () As IEnumerable(Of MetaTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::IEnumerable&lt;System::Data::Linq::Mapping::MetaTable ^&gt; ^ GetTables();" />
      <MemberSignature Language="F#" Value="abstract member GetTables : unit -&gt; seq&lt;System.Data.Linq.Mapping.MetaTable&gt;" Usage="metaModel.GetTables " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Data.Linq.Mapping.MetaTable&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0f751-119">Obtém uma enumeração de todas as tabelas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f751-119">Get an enumeration of all tables.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f751-120">Um enumerador que pode ser usado para iterar nas tabelas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f751-120">An enumerator that can be used to iterate over the tables.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MappingSource">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MappingSource MappingSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MappingSource MappingSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaModel.MappingSource" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property MappingSource As MappingSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MappingSource ^ MappingSource { System::Data::Linq::Mapping::MappingSource ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MappingSource : System.Data.Linq.Mapping.MappingSource" Usage="System.Data.Linq.Mapping.MetaModel.MappingSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MappingSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0f751-121">Obtém a origem de mapeamento que originou este modelo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f751-121">Gets the mapping source that originated this model.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0f751-122">A fonte de mapeamento de origem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f751-122">The originating mapping source.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderType">
      <MemberSignature Language="C#" Value="public abstract Type ProviderType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ProviderType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaModel.ProviderType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ProviderType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ ProviderType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProviderType : Type" Usage="System.Data.Linq.Mapping.MetaModel.ProviderType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0f751-123">Obtém ou define o tipo de provedor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f751-123">Gets or sets the provider type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0f751-124">O tipo de provedor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f751-124">The provider type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f751-125">Se essa propriedade for especificada, um tipo de provedor existente pode ser usado.</span><span class="sxs-lookup"><span data-stu-id="0f751-125">If this property is specified, an existing provider type can be used.</span></span> <span data-ttu-id="0f751-126">Isso eliminará uma ida e volta ao servidor para obter essas informações.</span><span class="sxs-lookup"><span data-stu-id="0f751-126">This will eliminate a round trip to the server to obtain this information.</span></span> [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]<span data-ttu-id="0f751-127"> Você deve saber o tipo de provedor para estabelecer regras de conversão de consulta apropriada.</span><span class="sxs-lookup"><span data-stu-id="0f751-127"> has to know the provider type to establish appropriate query translation rules.</span></span> [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]<span data-ttu-id="0f751-128"> dá suporte a <xref:System.Data.Linq.SqlClient.Sql2000Provider> e <xref:System.Data.Linq.SqlClient.Sql2005Provider> provedores.</span><span class="sxs-lookup"><span data-stu-id="0f751-128"> supports <xref:System.Data.Linq.SqlClient.Sql2000Provider> and <xref:System.Data.Linq.SqlClient.Sql2005Provider> providers.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>