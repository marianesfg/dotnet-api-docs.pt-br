<Type Name="MetaModel" FullName="System.Data.Linq.Mapping.MetaModel">
  <Metadata><Meta Name="ms.openlocfilehash" Value="56b72e7323a6064fb222346672b968482b9f7962" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37681262" /></Metadata><TypeSignature Language="C#" Value="public abstract class MetaModel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MetaModel extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.Mapping.MetaModel" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MetaModel" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetaModel abstract" />
  <TypeSignature Language="F#" Value="type MetaModel = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Uma abstração que representa o mapeamento entre objetos de banco de dados e de domínio.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MetaModel ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.MetaModel.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MetaModel();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.Linq.Mapping.MetaModel" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextType">
      <MemberSignature Language="C#" Value="public abstract Type ContextType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ContextType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaModel.ContextType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ContextType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ ContextType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContextType : Type" Usage="System.Data.Linq.Mapping.MetaModel.ContextType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o tipo do <see cref="T:System.Data.Linq.DataContext" /> tipo que este modelo descreve.</summary>
        <value>O tipo de contexto de dados.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DatabaseName">
      <MemberSignature Language="C#" Value="public abstract string DatabaseName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DatabaseName" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaModel.DatabaseName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DatabaseName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ DatabaseName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DatabaseName : string" Usage="System.Data.Linq.Mapping.MetaModel.DatabaseName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o nome do banco de dados.</summary>
        <value>O nome do banco de dados como uma cadeia de caracteres.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFunction">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaFunction GetFunction (System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.Linq.Mapping.MetaFunction GetFunction(class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.MetaModel.GetFunction(System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetFunction (method As MethodInfo) As MetaFunction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Data::Linq::Mapping::MetaFunction ^ GetFunction(System::Reflection::MethodInfo ^ method);" />
      <MemberSignature Language="F#" Value="abstract member GetFunction : System.Reflection.MethodInfo -&gt; System.Data.Linq.Mapping.MetaFunction" Usage="metaModel.GetFunction method" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaFunction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="method">O método definido em <see cref="T:System.Data.Linq.DataContext" /> ou na classe subordinada que representa a função de banco de dados.</param>
        <summary>Obtém o <see cref="T:System.Data.Linq.Mapping.MetaFunction" /> que corresponde a uma função de banco de dados.</summary>
        <returns>A metafunção que corresponde a uma função de banco de dados.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Funções de banco de dados são procedimentos armazenados, funções com valor de tabela e funções definidas pelo usuário.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFunctions">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;System.Data.Linq.Mapping.MetaFunction&gt; GetFunctions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Linq.Mapping.MetaFunction&gt; GetFunctions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.MetaModel.GetFunctions" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetFunctions () As IEnumerable(Of MetaFunction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::IEnumerable&lt;System::Data::Linq::Mapping::MetaFunction ^&gt; ^ GetFunctions();" />
      <MemberSignature Language="F#" Value="abstract member GetFunctions : unit -&gt; seq&lt;System.Data.Linq.Mapping.MetaFunction&gt;" Usage="metaModel.GetFunctions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Data.Linq.Mapping.MetaFunction&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtém uma enumeração de todas as funções.</summary>
        <returns>Uma enumeração que pode ser usada para iterar por todas as funções.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetaType">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaType GetMetaType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.Linq.Mapping.MetaType GetMetaType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.MetaModel.GetMetaType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Data::Linq::Mapping::MetaType ^ GetMetaType(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member GetMetaType : Type -&gt; System.Data.Linq.Mapping.MetaType" Usage="metaModel.GetMetaType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">O tipo para o qual o <see cref="T:System.Data.Linq.Mapping.MetaType" /> é buscado.</param>
        <summary>Descobre o <see cref="T:System.Data.Linq.Mapping.MetaType" /> do <see cref="T:System.Type" /> especificado.</summary>
        <returns>O metatipo que corresponde ao tipo especificado.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTable">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaTable GetTable (Type rowType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.Linq.Mapping.MetaTable GetTable(class System.Type rowType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.MetaModel.GetTable(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetTable (rowType As Type) As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Data::Linq::Mapping::MetaTable ^ GetTable(Type ^ rowType);" />
      <MemberSignature Language="F#" Value="abstract member GetTable : Type -&gt; System.Data.Linq.Mapping.MetaTable" Usage="metaModel.GetTable rowType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="rowType">O tipo de linha CLR (Common Language Runtime).</param>
        <summary>Obtém o <see cref="T:System.Data.Linq.Mapping.MetaTable" /> associado a um <see cref="T:System.Type" /> especificado.</summary>
        <returns>Uma metatabela associada ao tipo de linha especificado.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTables">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;System.Data.Linq.Mapping.MetaTable&gt; GetTables ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Linq.Mapping.MetaTable&gt; GetTables() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.MetaModel.GetTables" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetTables () As IEnumerable(Of MetaTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::IEnumerable&lt;System::Data::Linq::Mapping::MetaTable ^&gt; ^ GetTables();" />
      <MemberSignature Language="F#" Value="abstract member GetTables : unit -&gt; seq&lt;System.Data.Linq.Mapping.MetaTable&gt;" Usage="metaModel.GetTables " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Data.Linq.Mapping.MetaTable&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtém uma enumeração de todas as tabelas.</summary>
        <returns>Um enumerador que pode ser usado para iterar nas tabelas.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MappingSource">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MappingSource MappingSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MappingSource MappingSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaModel.MappingSource" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property MappingSource As MappingSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MappingSource ^ MappingSource { System::Data::Linq::Mapping::MappingSource ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MappingSource : System.Data.Linq.Mapping.MappingSource" Usage="System.Data.Linq.Mapping.MetaModel.MappingSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MappingSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a origem de mapeamento que originou este modelo.</summary>
        <value>A fonte de mapeamento de origem.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderType">
      <MemberSignature Language="C#" Value="public abstract Type ProviderType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ProviderType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaModel.ProviderType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ProviderType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ ProviderType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProviderType : Type" Usage="System.Data.Linq.Mapping.MetaModel.ProviderType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o tipo de provedor.</summary>
        <value>O tipo de provedor.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se essa propriedade for especificada, um tipo de provedor existente pode ser usado. Isso eliminará uma ida e volta ao servidor para obter essas informações. [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] Você deve saber o tipo de provedor para estabelecer regras de conversão de consulta apropriada. [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] dá suporte a <xref:System.Data.Linq.SqlClient.Sql2000Provider> e <xref:System.Data.Linq.SqlClient.Sql2005Provider> provedores.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>