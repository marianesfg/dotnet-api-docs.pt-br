<Type Name="MetaType" FullName="System.Data.Linq.Mapping.MetaType">
  <TypeSignature Language="C#" Value="public abstract class MetaType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MetaType extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.Mapping.MetaType" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MetaType" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetaType abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="ca4bf-101">Representa o mapeamento de um tipo de objeto do domínio para as colunas de uma tabela de banco de dados.</span><span class="sxs-lookup"><span data-stu-id="ca4bf-101">Represents the mapping of a domain object type to the columns of a database table.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MetaType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.MetaType.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MetaType();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ca4bf-102">Inicializa uma nova instância da classe <see cref="T:System.Data.Linq.Mapping.MetaType" />.</span><span class="sxs-lookup"><span data-stu-id="ca4bf-102">Initializes a new instance of the <see cref="T:System.Data.Linq.Mapping.MetaType" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Associations">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Linq.Mapping.MetaAssociation&gt; Associations { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Linq.Mapping.MetaAssociation&gt; Associations" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaType.Associations" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Associations As ReadOnlyCollection(Of MetaAssociation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Linq::Mapping::MetaAssociation ^&gt; ^ Associations { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Linq::Mapping::MetaAssociation ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Linq.Mapping.MetaAssociation&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca4bf-103">Obtém uma enumeração de todas as associações.</span><span class="sxs-lookup"><span data-stu-id="ca4bf-103">Gets an enumeration of all the associations.</span></span></summary>
        <value><span data-ttu-id="ca4bf-104">Uma coleção de associações.</span><span class="sxs-lookup"><span data-stu-id="ca4bf-104">A collection of associations.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanInstantiate">
      <MemberSignature Language="C#" Value="public abstract bool CanInstantiate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanInstantiate" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaType.CanInstantiate" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property CanInstantiate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool CanInstantiate { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca4bf-105">Obtém se é possível criar uma instância do tipo subjacente como o resultado de uma consulta.</span><span class="sxs-lookup"><span data-stu-id="ca4bf-105">Gets whether the underlying type can be instantiated as the result of a query.</span></span></summary>
        <value>
          <span data-ttu-id="ca4bf-106"><see langword="true" /> Se o tipo subjacente pode ser instanciado como resultado de uma consulta; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ca4bf-106"><see langword="true" /> if the underlying type can be instantiated as the result of a query; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataMembers">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Linq.Mapping.MetaDataMember&gt; DataMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Linq.Mapping.MetaDataMember&gt; DataMembers" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaType.DataMembers" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DataMembers As ReadOnlyCollection(Of MetaDataMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Linq::Mapping::MetaDataMember ^&gt; ^ DataMembers { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Linq::Mapping::MetaDataMember ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Linq.Mapping.MetaDataMember&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca4bf-107">Obtém uma enumeração de todos os membros de dados (campos e propriedades).</span><span class="sxs-lookup"><span data-stu-id="ca4bf-107">Gets an enumeration of all the data members (fields and properties).</span></span></summary>
        <value><span data-ttu-id="ca4bf-108">Uma coleção de membros de dados.</span><span class="sxs-lookup"><span data-stu-id="ca4bf-108">A collection of the data members.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DBGeneratedIdentityMember">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaDataMember DBGeneratedIdentityMember { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaDataMember DBGeneratedIdentityMember" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaType.DBGeneratedIdentityMember" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DBGeneratedIdentityMember As MetaDataMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MetaDataMember ^ DBGeneratedIdentityMember { System::Data::Linq::Mapping::MetaDataMember ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaDataMember</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca4bf-109">Obtém o membro que representa a coluna de identidade gerada automaticamente.</span><span class="sxs-lookup"><span data-stu-id="ca4bf-109">Gets the member that represents the auto-generated identity column.</span></span></summary>
        <value><span data-ttu-id="ca4bf-110">O membro que representa a coluna de identidade gerado automaticamente, ou <see langword="null" /> se não houver nenhuma coluna de identidade gerado automaticamente.</span><span class="sxs-lookup"><span data-stu-id="ca4bf-110">The member that represents the auto-generated identity column, or <see langword="null" /> if there is no auto-generated identity column.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DerivedTypes">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Linq.Mapping.MetaType&gt; DerivedTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Linq.Mapping.MetaType&gt; DerivedTypes" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaType.DerivedTypes" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DerivedTypes As ReadOnlyCollection(Of MetaType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Linq::Mapping::MetaType ^&gt; ^ DerivedTypes { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Linq::Mapping::MetaType ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Linq.Mapping.MetaType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca4bf-111">Obtém uma enumeração dos tipos derivados imediatos em uma hierarquia de herança.</span><span class="sxs-lookup"><span data-stu-id="ca4bf-111">Gets an enumeration of the immediate derived types in an inheritance hierarchy.</span></span></summary>
        <value><span data-ttu-id="ca4bf-112">Uma enumeração dos tipos de metadados.</span><span class="sxs-lookup"><span data-stu-id="ca4bf-112">An enumeration of meta-types.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Discriminator">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaDataMember Discriminator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaDataMember Discriminator" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaType.Discriminator" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Discriminator As MetaDataMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MetaDataMember ^ Discriminator { System::Data::Linq::Mapping::MetaDataMember ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaDataMember</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca4bf-113">Obtém o membro que representa a coluna do discriminador de herança.</span><span class="sxs-lookup"><span data-stu-id="ca4bf-113">Gets the member that represents the inheritance discriminator column.</span></span></summary>
        <value><span data-ttu-id="ca4bf-114">O membro que representa a coluna de discriminador de herança, ou <see langword="null" /> se não existir nenhuma.</span><span class="sxs-lookup"><span data-stu-id="ca4bf-114">The member that represents the inheritance discriminator column, or <see langword="null" /> if there is none.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataMember">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaDataMember GetDataMember (System.Reflection.MemberInfo member);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.Linq.Mapping.MetaDataMember GetDataMember(class System.Reflection.MemberInfo member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.MetaType.GetDataMember(System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetDataMember (member As MemberInfo) As MetaDataMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Data::Linq::Mapping::MetaDataMember ^ GetDataMember(System::Reflection::MemberInfo ^ member);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaDataMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.Reflection.MemberInfo" />
      </Parameters>
      <Docs>
        <param name="member"><span data-ttu-id="ca4bf-115">O membro para o qual o <see cref="T:System.Data.Linq.Mapping.MetaDataMember" /> associado é buscado.</span><span class="sxs-lookup"><span data-stu-id="ca4bf-115">The member for which the associated <see cref="T:System.Data.Linq.Mapping.MetaDataMember" /> is sought.</span></span></param>
        <summary><span data-ttu-id="ca4bf-116">Obtém o <see cref="T:System.Data.Linq.Mapping.MetaDataMember" /> associado ao membro especificado.</span><span class="sxs-lookup"><span data-stu-id="ca4bf-116">Gets the <see cref="T:System.Data.Linq.Mapping.MetaDataMember" /> associated with the specified member.</span></span></summary>
        <returns><span data-ttu-id="ca4bf-117">O <see cref="T:System.Data.Linq.Mapping.MetaDataMember" /> se houver um associado ao membro especificado, caso contrário, <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ca4bf-117">The <see cref="T:System.Data.Linq.Mapping.MetaDataMember" /> if one is associated with the specified member; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInheritanceType">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaType GetInheritanceType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.Linq.Mapping.MetaType GetInheritanceType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.MetaType.GetInheritanceType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Data::Linq::Mapping::MetaType ^ GetInheritanceType(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="ca4bf-118">O subtipo.</span><span class="sxs-lookup"><span data-stu-id="ca4bf-118">The subtype.</span></span></param>
        <summary><span data-ttu-id="ca4bf-119">Obtém o <see cref="T:System.Data.Linq.Mapping.MetaType" /> de um subtipo de herança.</span><span class="sxs-lookup"><span data-stu-id="ca4bf-119">Gets the <see cref="T:System.Data.Linq.Mapping.MetaType" /> for an inheritance subtype.</span></span></summary>
        <returns><span data-ttu-id="ca4bf-120">O <see cref="T:System.Data.Linq.Mapping.MetaType" /> de um subtipo de herança.</span><span class="sxs-lookup"><span data-stu-id="ca4bf-120">The <see cref="T:System.Data.Linq.Mapping.MetaType" /> for an inheritance subtype.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeForInheritanceCode">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaType GetTypeForInheritanceCode (object code);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.Linq.Mapping.MetaType GetTypeForInheritanceCode(object code) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.MetaType.GetTypeForInheritanceCode(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetTypeForInheritanceCode (code As Object) As MetaType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Data::Linq::Mapping::MetaType ^ GetTypeForInheritanceCode(System::Object ^ code);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="code" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="code"><span data-ttu-id="ca4bf-121">O código de herança.</span><span class="sxs-lookup"><span data-stu-id="ca4bf-121">The inheritance code.</span></span></param>
        <summary><span data-ttu-id="ca4bf-122">Obtém o metatipo associado ao código de herança especificado.</span><span class="sxs-lookup"><span data-stu-id="ca4bf-122">Gets the meta-type associated with the specified inheritance code.</span></span></summary>
        <returns><span data-ttu-id="ca4bf-123">O metatipo associado ao código de herança especificado.</span><span class="sxs-lookup"><span data-stu-id="ca4bf-123">The meta-type associated with the specified inheritance code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAnyLoadMethod">
      <MemberSignature Language="C#" Value="public abstract bool HasAnyLoadMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAnyLoadMethod" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaType.HasAnyLoadMethod" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property HasAnyLoadMethod As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool HasAnyLoadMethod { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca4bf-124">Obtém um valor que indica se o <see cref="T:System.Data.Linq.Mapping.MetaType" /> atual ou um de seus tipos bases tem um método <c>OnLoaded</c>.</span><span class="sxs-lookup"><span data-stu-id="ca4bf-124">Gets a value that indicates whether the current <see cref="T:System.Data.Linq.Mapping.MetaType" /> or any of its bases types has an <c>OnLoaded</c> method.</span></span></summary>
        <value>
          <span data-ttu-id="ca4bf-125"><see langword="true" /> Se o tipo de metadados ou qualquer tipo de meta base tiver um <c>OnLoaded</c> método; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ca4bf-125"><see langword="true" /> if the meta-type or any base meta-type has an <c>OnLoaded</c> method; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAnyValidateMethod">
      <MemberSignature Language="C#" Value="public abstract bool HasAnyValidateMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAnyValidateMethod" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaType.HasAnyValidateMethod" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property HasAnyValidateMethod As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool HasAnyValidateMethod { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca4bf-126">Obtém um valor que indica se o <see cref="T:System.Data.Linq.Mapping.MetaType" /> ou um de seus tipos bases tem um método <c>OnValidate</c>.</span><span class="sxs-lookup"><span data-stu-id="ca4bf-126">Gets a value that indicates whether the <see cref="T:System.Data.Linq.Mapping.MetaType" /> or any of its bases types has an <c>OnValidate</c> method.</span></span></summary>
        <value>
          <span data-ttu-id="ca4bf-127"><see langword="true" /> Se o tipo de metadados ou qualquer tipo de meta base tiver um <c>OnValidate</c> método; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ca4bf-127"><see langword="true" /> if the meta-type or any base meta-type has an <c>OnValidate</c> method; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasInheritance">
      <MemberSignature Language="C#" Value="public abstract bool HasInheritance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasInheritance" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaType.HasInheritance" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property HasInheritance As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool HasInheritance { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca4bf-128">Obtém um valor que indica se o tipo faz parte de uma hierarquia de herança mapeada.</span><span class="sxs-lookup"><span data-stu-id="ca4bf-128">Gets a value indicating whether the type is part of a mapped inheritance hierarchy.</span></span></summary>
        <value>
          <span data-ttu-id="ca4bf-129"><see langword="true" /> Se o tipo for parte de uma hierarquia de herança mapeada; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ca4bf-129"><see langword="true" /> if the type is part of a mapped inheritance hierarchy; otherwise <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasInheritanceCode">
      <MemberSignature Language="C#" Value="public abstract bool HasInheritanceCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasInheritanceCode" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaType.HasInheritanceCode" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property HasInheritanceCode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool HasInheritanceCode { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca4bf-130">Obtém um valor que indica se esse tipo define um código de herança.</span><span class="sxs-lookup"><span data-stu-id="ca4bf-130">Gets a value indicating whether this type defines an inheritance code.</span></span></summary>
        <value>
          <span data-ttu-id="ca4bf-131"><see langword="true" /> Se esse tipo define um código de herança; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ca4bf-131"><see langword="true" /> if this type defines an inheritance code; otherwise <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasUpdateCheck">
      <MemberSignature Language="C#" Value="public abstract bool HasUpdateCheck { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasUpdateCheck" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaType.HasUpdateCheck" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property HasUpdateCheck As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool HasUpdateCheck { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca4bf-132">Obtém um valor que indica se o tipo tem algum membro persistente que pode exigir um teste de conflitos de simultaneidade otimista.</span><span class="sxs-lookup"><span data-stu-id="ca4bf-132">Gets a value indicating whether the type has any persistent member that may require a test for optimistic concurrency conflicts.</span></span></summary>
        <value>
          <span data-ttu-id="ca4bf-133"><see langword="true" /> Se o tipo tiver qualquer membro persistente com uma <see cref="T:System.Data.Linq.Mapping.UpdateCheck" /> política diferente de <see cref="F:System.Data.Linq.Mapping.UpdateCheck.Never" />; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ca4bf-133"><see langword="true" /> if the type has any persistent member with an <see cref="T:System.Data.Linq.Mapping.UpdateCheck" /> policy other than <see cref="F:System.Data.Linq.Mapping.UpdateCheck.Never" />; otherwise <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IdentityMembers">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Linq.Mapping.MetaDataMember&gt; IdentityMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Linq.Mapping.MetaDataMember&gt; IdentityMembers" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaType.IdentityMembers" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IdentityMembers As ReadOnlyCollection(Of MetaDataMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Linq::Mapping::MetaDataMember ^&gt; ^ IdentityMembers { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Linq::Mapping::MetaDataMember ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Linq.Mapping.MetaDataMember&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca4bf-134">Obtém uma enumeração de todos os membros de dados que definem a identidade exclusiva do tipo.</span><span class="sxs-lookup"><span data-stu-id="ca4bf-134">Gets an enumeration of all the data members that define the unique identity of the type.</span></span></summary>
        <value><span data-ttu-id="ca4bf-135">Uma enumeração dos membros que define a identidade exclusiva do tipo.</span><span class="sxs-lookup"><span data-stu-id="ca4bf-135">An enumeration of members that define the unique identity of the type.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InheritanceBase">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaType InheritanceBase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaType InheritanceBase" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaType.InheritanceBase" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property InheritanceBase As MetaType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MetaType ^ InheritanceBase { System::Data::Linq::Mapping::MetaType ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca4bf-136">Obtém o metatipo base na hierarquia de herança.</span><span class="sxs-lookup"><span data-stu-id="ca4bf-136">Gets the base meta-type in the inheritance hierarchy.</span></span></summary>
        <value><span data-ttu-id="ca4bf-137">O meta-o tipo base para a hierarquia de herança atual.</span><span class="sxs-lookup"><span data-stu-id="ca4bf-137">The base meta-type for the current inheritance hierarchy.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InheritanceCode">
      <MemberSignature Language="C#" Value="public abstract object InheritanceCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object InheritanceCode" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaType.InheritanceCode" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property InheritanceCode As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Object ^ InheritanceCode { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca4bf-138">Obtém um valor que indica se esse tipo define um código de herança.</span><span class="sxs-lookup"><span data-stu-id="ca4bf-138">Gets a value indicating whether this type defines an inheritance code.</span></span></summary>
        <value>
          <span data-ttu-id="ca4bf-139"><see langword="true" /> Se esse tipo define um código de herança; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ca4bf-139"><see langword="true" /> if this type defines an inheritance code; otherwise <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InheritanceDefault">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaType InheritanceDefault { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaType InheritanceDefault" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaType.InheritanceDefault" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property InheritanceDefault As MetaType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MetaType ^ InheritanceDefault { System::Data::Linq::Mapping::MetaType ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca4bf-140">Obtém um valor que indica se este tipo é usado como o padrão de uma hierarquia de herança.</span><span class="sxs-lookup"><span data-stu-id="ca4bf-140">Gets a value indicating whether this type is used as the default of an inheritance hierarchy.</span></span></summary>
        <value><span data-ttu-id="ca4bf-141">Os metadados para o tipo padrão no mapeamento de herança.</span><span class="sxs-lookup"><span data-stu-id="ca4bf-141">The metadata for the default type in the inheritance mapping.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InheritanceRoot">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaType InheritanceRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaType InheritanceRoot" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaType.InheritanceRoot" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property InheritanceRoot As MetaType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MetaType ^ InheritanceRoot { System::Data::Linq::Mapping::MetaType ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca4bf-142">Obtém o tipo de raiz da hierarquia de herança.</span><span class="sxs-lookup"><span data-stu-id="ca4bf-142">Gets the root type of the inheritance hierarchy.</span></span></summary>
        <value><span data-ttu-id="ca4bf-143">O tipo de raiz.</span><span class="sxs-lookup"><span data-stu-id="ca4bf-143">The root type.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InheritanceTypes">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Linq.Mapping.MetaType&gt; InheritanceTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Linq.Mapping.MetaType&gt; InheritanceTypes" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaType.InheritanceTypes" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property InheritanceTypes As ReadOnlyCollection(Of MetaType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Linq::Mapping::MetaType ^&gt; ^ InheritanceTypes { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Linq::Mapping::MetaType ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Linq.Mapping.MetaType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca4bf-144">Obtém uma coleção de todos os tipos que são definidos por uma hierarquia de herança.</span><span class="sxs-lookup"><span data-stu-id="ca4bf-144">Gets a collection of all types that are defined by an inheritance hierarchy.</span></span></summary>
        <value><span data-ttu-id="ca4bf-145">Uma coleção de tipos de metadados na hierarquia de herança atual.</span><span class="sxs-lookup"><span data-stu-id="ca4bf-145">A collection of meta-types in the current inheritance hierarchy.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEntity">
      <MemberSignature Language="C#" Value="public abstract bool IsEntity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEntity" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaType.IsEntity" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsEntity As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsEntity { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca4bf-146">Obtém um valor que indica se o <see cref="T:System.Data.Linq.Mapping.MetaType" /> é um tipo de entidade.</span><span class="sxs-lookup"><span data-stu-id="ca4bf-146">Gets a value indicating whether the <see cref="T:System.Data.Linq.Mapping.MetaType" /> is an entity type.</span></span></summary>
        <value>
          <span data-ttu-id="ca4bf-147"><see langword="true" /> Se o <see cref="T:System.Data.Linq.Mapping.MetaType" /> é um tipo de entidade; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ca4bf-147"><see langword="true" /> if the <see cref="T:System.Data.Linq.Mapping.MetaType" /> is an entity type; otherwise <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInheritanceDefault">
      <MemberSignature Language="C#" Value="public abstract bool IsInheritanceDefault { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInheritanceDefault" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaType.IsInheritanceDefault" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsInheritanceDefault As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsInheritanceDefault { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca4bf-148">Obtém um valor que indica se este tipo é usado como o padrão de uma hierarquia de herança.</span><span class="sxs-lookup"><span data-stu-id="ca4bf-148">Gets a value indicating whether this type is used as the default of an inheritance hierarchy.</span></span></summary>
        <value>
          <span data-ttu-id="ca4bf-149"><see langword="true" /> Se esse tipo é usado como o padrão de uma hierarquia de herança; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ca4bf-149"><see langword="true" /> if this type is used as the default of an inheritance hierarchy; otherwise <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Model">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaModel Model { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaModel Model" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaType.Model" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Model As MetaModel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MetaModel ^ Model { System::Data::Linq::Mapping::MetaModel ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca4bf-150">Obtém o <see cref="T:System.Data.Linq.Mapping.MetaModel" /> que contém esse <see cref="T:System.Data.Linq.Mapping.MetaType" />.</span><span class="sxs-lookup"><span data-stu-id="ca4bf-150">Gets the <see cref="T:System.Data.Linq.Mapping.MetaModel" /> that contains this <see cref="T:System.Data.Linq.Mapping.MetaType" />.</span></span></summary>
        <value><span data-ttu-id="ca4bf-151">O que contém metamodelo.</span><span class="sxs-lookup"><span data-stu-id="ca4bf-151">The containing meta-model.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public abstract string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaType.Name" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca4bf-152">Obtém o nome do <see cref="T:System.Data.Linq.Mapping.MetaType" />.</span><span class="sxs-lookup"><span data-stu-id="ca4bf-152">Gets the name of the <see cref="T:System.Data.Linq.Mapping.MetaType" />.</span></span></summary>
        <value><span data-ttu-id="ca4bf-153">O nome do tipo de metadados atual.</span><span class="sxs-lookup"><span data-stu-id="ca4bf-153">The name of the current meta-type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca4bf-154">Esse nome é igual ao nome do tipo do common language runtime (CLR).</span><span class="sxs-lookup"><span data-stu-id="ca4bf-154">This name is the same as the name of the common language runtime (CLR) type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLoadedMethod">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.MethodInfo OnLoadedMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo OnLoadedMethod" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaType.OnLoadedMethod" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property OnLoadedMethod As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Reflection::MethodInfo ^ OnLoadedMethod { System::Reflection::MethodInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca4bf-155">Obtém informações sobre o método <c>OnLoaded</c> contido por esse metatipo.</span><span class="sxs-lookup"><span data-stu-id="ca4bf-155">Gets information about the <c>OnLoaded</c> method contained by this meta-type.</span></span></summary>
        <value><span data-ttu-id="ca4bf-156">Uma descrição de <c>OnLoaded</c> método para este tipo de metadados.</span><span class="sxs-lookup"><span data-stu-id="ca4bf-156">A description of the <c>OnLoaded</c> method for this meta-type.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnValidateMethod">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.MethodInfo OnValidateMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo OnValidateMethod" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaType.OnValidateMethod" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property OnValidateMethod As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Reflection::MethodInfo ^ OnValidateMethod { System::Reflection::MethodInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca4bf-157">Obtém informações sobre o método <c>OnValidate</c> contido por esse metatipo.</span><span class="sxs-lookup"><span data-stu-id="ca4bf-157">Gets information about the <c>OnValidate</c> method contained by this meta-type.</span></span></summary>
        <value><span data-ttu-id="ca4bf-158">Uma descrição de <c>OnValidate</c> método para este tipo de metadados.</span><span class="sxs-lookup"><span data-stu-id="ca4bf-158">A description of the <c>OnValidate</c> method for this meta-type.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PersistentDataMembers">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Linq.Mapping.MetaDataMember&gt; PersistentDataMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Linq.Mapping.MetaDataMember&gt; PersistentDataMembers" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaType.PersistentDataMembers" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property PersistentDataMembers As ReadOnlyCollection(Of MetaDataMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Linq::Mapping::MetaDataMember ^&gt; ^ PersistentDataMembers { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Linq::Mapping::MetaDataMember ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Linq.Mapping.MetaDataMember&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca4bf-159">Obtém uma coleção de todos os membros de dados persistentes.</span><span class="sxs-lookup"><span data-stu-id="ca4bf-159">Gets a collection of all the persistent data members.</span></span></summary>
        <value><span data-ttu-id="ca4bf-160">Uma coleção de todos os membros de metadados no tipo atual.</span><span class="sxs-lookup"><span data-stu-id="ca4bf-160">A collection of all the meta-data members in the current type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca4bf-161">Membros de dados persistentes são os campos e propriedades que são mapeadas para colunas de banco de dados.</span><span class="sxs-lookup"><span data-stu-id="ca4bf-161">Persistent data members are those fields and properties that are mapped to database columns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Table">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaTable Table { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaTable Table" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaType.Table" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Table As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MetaTable ^ Table { System::Data::Linq::Mapping::MetaTable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca4bf-162">Obtém a <see cref="T:System.Data.Linq.Mapping.MetaTable" /> que usa esse <see cref="T:System.Data.Linq.Mapping.MetaType" /> para definição de linha.</span><span class="sxs-lookup"><span data-stu-id="ca4bf-162">Gets the <see cref="T:System.Data.Linq.Mapping.MetaTable" /> that uses this <see cref="T:System.Data.Linq.Mapping.MetaType" /> for row definition.</span></span></summary>
        <value><span data-ttu-id="ca4bf-163">Uma meta-tabela que usa o tipo de metadados atual para sua definição de linha.</span><span class="sxs-lookup"><span data-stu-id="ca4bf-163">A meta-table that uses the current meta-type for its row definition.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public abstract Type Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaType.Type" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ Type { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca4bf-164">Obtém o tipo de CLR (Common Language Runtime) subjacente.</span><span class="sxs-lookup"><span data-stu-id="ca4bf-164">Gets the underlying common language runtime (CLR) type.</span></span></summary>
        <value><span data-ttu-id="ca4bf-165">O tipo CLR associado.</span><span class="sxs-lookup"><span data-stu-id="ca4bf-165">The associated CLR type.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VersionMember">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaDataMember VersionMember { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaDataMember VersionMember" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaType.VersionMember" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property VersionMember As MetaDataMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MetaDataMember ^ VersionMember { System::Data::Linq::Mapping::MetaDataMember ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaDataMember</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca4bf-166">Obtém uma coluna de versão de linha ou de carimbo de data/hora para este <see cref="T:System.Data.Linq.Mapping.MetaType" />.</span><span class="sxs-lookup"><span data-stu-id="ca4bf-166">Gets a row-version or timestamp column for this <see cref="T:System.Data.Linq.Mapping.MetaType" />.</span></span></summary>
        <value><span data-ttu-id="ca4bf-167">O membro de metadados que representa a coluna de versão de linha ou de carimbo de hora para esse tipo de metadados, ou <see langword="null" /> se não existir nenhuma.</span><span class="sxs-lookup"><span data-stu-id="ca4bf-167">The meta-data member that represents the row-version or timestamp column for this meta-type, or <see langword="null" /> if there is none.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>