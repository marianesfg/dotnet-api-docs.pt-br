<Type Name="TableAttribute" FullName="System.Data.Linq.Mapping.TableAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="24ef701b00c090ec36cb6b25e837af7ea35c12e5" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48687583" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class TableAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TableAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.Mapping.TableAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TableAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class TableAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type TableAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Designa uma classe como uma classe de entidade associada a uma tabela de banco de dados.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use esse atributo para designar uma classe como uma classe de entidade que está associada com uma tabela de banco de dados ou uma exibição. [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] trata as classes que têm o <xref:System.Data.Linq.Mapping.TableAttribute> atributo como classes persistentes.  
  
 [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] dá suporte a apenas o mapeamento de tabela única. Ou seja, uma classe de entidade deve ser mapeada para exatamente uma tabela de banco de dados, e você não pode mapear uma tabela de banco de dados para várias classes ao mesmo tempo.  
  
 Você pode usar o <xref:System.Data.Linq.Mapping.TableAttribute.Name%2A> propriedade do <xref:System.Data.Linq.Mapping.TableAttribute> de atributo para especificar um nome para a tabela e, opcionalmente, você pode usar o nome do esquema para qualificar um nome de tabela. Se você não especificar um nome usando o <xref:System.Data.Linq.Mapping.TableAttribute.Name%2A> propriedade, o nome da tabela deve para ser o mesmo que o nome da classe.  
  
## <a name="schema-qualified-names"></a>Nomes qualificados do esquema  
 Opcionalmente, você pode usar o nome do esquema para qualificar um nome de tabela. Por padrão, o token para a esquerda do primeiro período de <xref:System.Data.Linq.Mapping.TableAttribute.Name%2A> cadeia de caracteres é considerada como o nome do esquema. O resto do nome é considerado o nome da tabela. O provedor inclui entre aspas o nome da tabela conforme apropriado. Por exemplo, o [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] provider para SQL Server torna-se de que serão usados colchetes, pelo menos, onde eles são necessários.  
  
> [!NOTE]
>  Em alguns casos, você deve explicitamente citar atributos porque o provedor do SQL Server não pode automaticamente aspas. A tabela a seguir mostra alguns exemplos.  
  
|Caso|Exemplo: Nome do identificador|Exemplo: Cadeia de caracteres esperada em atributos|Caso contrário,...|  
|----------|------------------------------|--------------------------------------------|----------------|  
|Nome de esquema contém um ponto|Esquema: "b"<br /><br /> Tabela: "C"|"[A.B].C"|O primeiro período será assumido para separar o nome do esquema do nome da tabela.|  
|Nome da tabela do esquema começa com `@`|"@SomeName"|"[@SomeName]"|Deve para ser um nome de parâmetro.|  
|Esquema começa com `[` e termina com `]`|"[Schema.Table]"|"[[Esquema]. [Tabela]]]"|O identificador sem aspas é semelhante a um identificador entre aspas.|  
|Tabela começa com `[` e termina com `]`|"[Table]"|"[[Tabela]]]"|O identificador sem aspas é semelhante a um identificador entre aspas.|  
  
   
  
## Examples  
 [!code-csharp[DLinqCustomize#1](~/samples/snippets/csharp/VS_Snippets_Data/DLinqCustomize/cs/Program.cs#1)]
 [!code-vb[DLinqCustomize#1](~/samples/snippets/visualbasic/VS_Snippets_Data/DLinqCustomize/vb/Module1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TableAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.TableAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TableAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.Linq.Mapping.TableAttribute" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.TableAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Data.Linq.Mapping.TableAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o nome da tabela ou do modo de exibição.</summary>
        <value>Por padrão, o valor é o mesmo que o nome da classe.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se você não especificar um nome usando <xref:System.Data.Linq.Mapping.TableAttribute.Name%2A>, o nome da tabela deve para ser o mesmo que o nome da classe.  
  
> [!NOTE]
>  Opcionalmente, você pode usar um nome de esquema para qualificar o nome da tabela (por exemplo, Schema3.Table5). Por padrão, o token para a esquerda do primeiro período de <xref:System.Data.Linq.Mapping.TableAttribute.Name%2A> cadeia de caracteres é considerada como o nome do esquema e o restante deve ser o nome de tabela.  
  
 No exemplo a seguir, o nome de tabela padrão `Customer`, é alterado para `Customers`.  
  
   
  
## Examples  
 [!code-csharp[DLinqCustomize#1](~/samples/snippets/csharp/VS_Snippets_Data/DLinqCustomize/cs/Program.cs#1)]
 [!code-vb[DLinqCustomize#1](~/samples/snippets/visualbasic/VS_Snippets_Data/DLinqCustomize/vb/Module1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>