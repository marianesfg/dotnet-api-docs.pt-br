<Type Name="CollectionAdapters" FullName="System.AddIn.Pipeline.CollectionAdapters">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cda5b936b22052f7b99b2c7e5bd552235a459181" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class CollectionAdapters" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit CollectionAdapters extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Pipeline.CollectionAdapters" />
  <TypeSignature Language="VB.NET" Value="Public Class CollectionAdapters" />
  <TypeSignature Language="C++ CLI" Value="public ref class CollectionAdapters abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="a4de0-101">Permite que as coleções sejam passadas entre um suplemento e seu aplicativo host.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a4de0-101">Enables collections to be passed between an add-in and its host application.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4de0-102">Essa classe fornece métodos que permitem um <xref:System.Collections.Generic.IList%601> coleção a ser convertido em um <xref:System.AddIn.Contract.IListContract%601> coleção.</span><span class="sxs-lookup"><span data-stu-id="a4de0-102">This class provides methods that enable an <xref:System.Collections.Generic.IList%601> collection to be converted to a <xref:System.AddIn.Contract.IListContract%601> collection.</span></span> <span data-ttu-id="a4de0-103">O <xref:System.AddIn.Contract.IListContract%601> coleção é passada pelo limite de isolamento e convertida de volta para um <xref:System.Collections.Generic.IList%601> coleção que pode usar o suplemento ou o aplicativo de host.</span><span class="sxs-lookup"><span data-stu-id="a4de0-103">The <xref:System.AddIn.Contract.IListContract%601> collection is passed across the isolation boundary and converted back to an <xref:System.Collections.Generic.IList%601> collection that the add-in or the host application can use.</span></span>  
  
 <span data-ttu-id="a4de0-104">Objetos em coleções devem ser remotos.</span><span class="sxs-lookup"><span data-stu-id="a4de0-104">Objects in collections must be remotable.</span></span> <span data-ttu-id="a4de0-105">Para obter mais informações sobre os tipos de objeto que você pode passar, consulte [contratos, exibições e adaptadores](http://msdn.microsoft.com/library/a6460173-9507-4b87-8c07-d4ee245d715c).</span><span class="sxs-lookup"><span data-stu-id="a4de0-105">For more information about the object types that you can pass, see [Contracts, Views, and Adapters](http://msdn.microsoft.com/library/a6460173-9507-4b87-8c07-d4ee245d715c).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ToIList&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;T&gt; ToIList&lt;T&gt; (System.AddIn.Contract.IListContract&lt;T&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;!!T&gt; ToIList&lt;T&gt;(class System.AddIn.Contract.IListContract`1&lt;!!T&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.CollectionAdapters.ToIList``1(System.AddIn.Contract.IListContract{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToIList(Of T) (collection As IListContract(Of T)) As IList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Generic::IList&lt;T&gt; ^ ToIList(System::AddIn::Contract::IListContract&lt;T&gt; ^ collection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="collection" Type="System.AddIn.Contract.IListContract&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="a4de0-106">O tipo de objetos que estão contidos na lista.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4de0-106">The type of objects that are contained in the list.</span>
          </span>
          <span data-ttu-id="a4de0-107">
            <c>T</c> devem ser serializáveis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4de0-107">
              <c>T</c> must be serializable.</span>
          </span>
        </typeparam>
        <param name="collection">
          <span data-ttu-id="a4de0-108">A coleção do outro lado do pipeline.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4de0-108">The collection from the other side of the pipeline.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4de0-109">Converte a coleção <see cref="T:System.AddIn.Contract.IListContract`1" /> especificada em uma coleção <see cref="T:System.Collections.Generic.IList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4de0-109">Converts the specified <see cref="T:System.AddIn.Contract.IListContract`1" /> collection to an <see cref="T:System.Collections.Generic.IList`1" /> collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a4de0-110">A coleção convertida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4de0-110">The converted collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4de0-111">O aplicativo de host ou o suplemento pode usar retornado <xref:System.Collections.Generic.IList%601> coleção.</span><span class="sxs-lookup"><span data-stu-id="a4de0-111">The host application or add-in can use the returned <xref:System.Collections.Generic.IList%601> collection.</span></span> <span data-ttu-id="a4de0-112">O <xref:System.Collections.Generic.IList%601> coleta terá um token de tempo de vida para o controle remoto <xref:System.AddIn.Contract.IListContract%601> coleção.</span><span class="sxs-lookup"><span data-stu-id="a4de0-112">The <xref:System.Collections.Generic.IList%601> collection will have a lifetime token for the remote <xref:System.AddIn.Contract.IListContract%601> collection.</span></span>  
  
 <span data-ttu-id="a4de0-113">Você deve usar essa sobrecarga de método apenas quando o conteúdo do <xref:System.AddIn.Contract.IListContract%601> são tipos serializáveis que podem ser passados diretamente para o suplemento e host (em vez de tipos que devem ser adaptados para modos de exibição).</span><span class="sxs-lookup"><span data-stu-id="a4de0-113">You should use this method overload only when the contents of the <xref:System.AddIn.Contract.IListContract%601> are serializable types that can be passed directly to the add-in and host (rather than types that must be adapted into views).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4de0-114">O exemplo a seguir implementa um segmento de pipeline do adaptador do host conforme descrito [passo a passo: passando coleções entre Hosts e suplementos](http://msdn.microsoft.com/library/b532c604-548e-4fab-b11c-377257dd0ee5). O exemplo adapta personalizado `ProcessBooks` método colocando o <xref:System.AddIn.Contract.IListContract%601> coleção passado do add-in e convertê-la em um <xref:System.Collections.Generic.IList%601> coleção, o que pode usar o aplicativo de host.</span><span class="sxs-lookup"><span data-stu-id="a4de0-114">The following example implements a host-side adapter pipeline segment as described [Walkthrough: Passing Collections Between Hosts and Add-Ins](http://msdn.microsoft.com/library/b532c604-548e-4fab-b11c-377257dd0ee5). The example adapts the custom `ProcessBooks` method by taking the <xref:System.AddIn.Contract.IListContract%601> collection passed from the add-in and converting it to an <xref:System.Collections.Generic.IList%601> collection, which the host application can then use.</span></span>  
  
 [!code-csharp[AddInCollectionPipelineAddInSideAdapter#3](~/samples/snippets/csharp/VS_Snippets_CLR/AddInCollectionPipelineAddInSideAdapter/cs/LibraryManagerViewToContractAddInAdapter.cs#3)]
 [!code-vb[AddInCollectionPipelineAddInSideAdapter#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/AddInCollectionPipelineAddInSideAdapter/vb/LibraryManagerViewToContractAddInAdapter.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToIList&lt;TContract,TView&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;TView&gt; ToIList&lt;TContract,TView&gt; (System.AddIn.Contract.IListContract&lt;TContract&gt; collection, Converter&lt;TContract,TView&gt; contractViewAdapter, Converter&lt;TView,TContract&gt; viewContractAdapter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;!!TView&gt; ToIList&lt;TContract, TView&gt;(class System.AddIn.Contract.IListContract`1&lt;!!TContract&gt; collection, class System.Converter`2&lt;!!TContract, !!TView&gt; contractViewAdapter, class System.Converter`2&lt;!!TView, !!TContract&gt; viewContractAdapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.CollectionAdapters.ToIList``2(System.AddIn.Contract.IListContract{``0},System.Converter{``0,``1},System.Converter{``1,``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToIList(Of TContract, TView) (collection As IListContract(Of TContract), contractViewAdapter As Converter(Of TContract, TView), viewContractAdapter As Converter(Of TView, TContract)) As IList(Of TView)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TContract, typename TView&gt;&#xA; static System::Collections::Generic::IList&lt;TView&gt; ^ ToIList(System::AddIn::Contract::IListContract&lt;TContract&gt; ^ collection, Converter&lt;TContract, TView&gt; ^ contractViewAdapter, Converter&lt;TView, TContract&gt; ^ viewContractAdapter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;TView&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContract" />
        <TypeParameter Name="TView" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="collection" Type="System.AddIn.Contract.IListContract&lt;TContract&gt;" />
        <Parameter Name="contractViewAdapter" Type="System.Converter&lt;TContract,TView&gt;" />
        <Parameter Name="viewContractAdapter" Type="System.Converter&lt;TView,TContract&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TContract">
          <span data-ttu-id="a4de0-115">O tipo que define o contrato para passar os objetos do tipo <c>TView</c> através dos limites de isolamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4de0-115">The type that defines the contract for passing objects of type <c>TView</c> across the isolation boundary.</span>
          </span>
        </typeparam>
        <typeparam name="TView">
          <span data-ttu-id="a4de0-116">O tipo que define a exibição dos objetos na lista.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4de0-116">The type that defines the view of the objects in the list.</span>
          </span>
        </typeparam>
        <param name="collection">
          <span data-ttu-id="a4de0-117">A coleção a passar para o outro lado do pipeline.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4de0-117">The collection to pass to the other side of the pipeline.</span>
          </span>
        </param>
        <param name="contractViewAdapter">
          <span data-ttu-id="a4de0-118">Um conversor que se adapta os dados do tipo definido no contrato para o tipo esperado na exibição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4de0-118">A converter that adapts the data from the type defined in the contract to the type expected in the view.</span>
          </span>
        </param>
        <param name="viewContractAdapter">
          <span data-ttu-id="a4de0-119">Um conversor que se adapta os dados do tipo definido na exibição para o tipo esperado no contrato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4de0-119">A converter that adapts the data from the type defined in the view to the type expected by the contract.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4de0-120">Converte uma coleção <see cref="T:System.AddIn.Contract.IListContract`1" /> especificada em uma coleção <see cref="T:System.Collections.Generic.IList`1" /> usando adaptadores conversores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4de0-120">Converts a specified <see cref="T:System.AddIn.Contract.IListContract`1" /> collection to an <see cref="T:System.Collections.Generic.IList`1" /> collection by using converter adapters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a4de0-121">A coleção convertida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4de0-121">The converted collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4de0-122">Use essa sobrecarga de método para <xref:System.AddIn.Contract.IListContract%601> coleções que contêm tipos que devem ser adaptados antes que eles podem ser passados para o suplemento ou host (em vez de tipos serializáveis simples que podem ser passados diretamente).</span><span class="sxs-lookup"><span data-stu-id="a4de0-122">Use this method overload for <xref:System.AddIn.Contract.IListContract%601> collections that contain types that must be adapted before they can be passed to the add-in or host (rather than simple serializable types that can be passed directly).</span></span> <span data-ttu-id="a4de0-123">O aplicativo de host ou o suplemento pode usar retornado <xref:System.Collections.Generic.IList%601> coleção.</span><span class="sxs-lookup"><span data-stu-id="a4de0-123">The host application or add-in can use the returned <xref:System.Collections.Generic.IList%601> collection.</span></span> <span data-ttu-id="a4de0-124">Ele terá um token de tempo de vida para o controle remoto <xref:System.AddIn.Contract.IListContract%601>.</span><span class="sxs-lookup"><span data-stu-id="a4de0-124">It will have a lifetime token for the remote <xref:System.AddIn.Contract.IListContract%601>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToIListContract&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.AddIn.Contract.IListContract&lt;T&gt; ToIListContract&lt;T&gt; (System.Collections.Generic.IList&lt;T&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.AddIn.Contract.IListContract`1&lt;!!T&gt; ToIListContract&lt;T&gt;(class System.Collections.Generic.IList`1&lt;!!T&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.CollectionAdapters.ToIListContract``1(System.Collections.Generic.IList{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToIListContract(Of T) (collection As IList(Of T)) As IListContract(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::AddIn::Contract::IListContract&lt;T&gt; ^ ToIListContract(System::Collections::Generic::IList&lt;T&gt; ^ collection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.IListContract&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IList&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="a4de0-125">O tipo de objetos que estão contidos na lista.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4de0-125">The type of objects that are contained in the list.</span>
          </span>
          <span data-ttu-id="a4de0-126">
            <c>T</c> devem ser serializáveis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4de0-126">
              <c>T</c> must be serializable.</span>
          </span>
        </typeparam>
        <param name="collection">
          <span data-ttu-id="a4de0-127">A coleção a ser convertida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4de0-127">The collection to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4de0-128">Converte uma coleção <see cref="T:System.Collections.Generic.IList`1" /> especificada em uma coleção <see cref="T:System.AddIn.Contract.IListContract`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4de0-128">Converts a specified <see cref="T:System.Collections.Generic.IList`1" /> collection to an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a4de0-129">A coleção convertida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4de0-129">The converted collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4de0-130">O <xref:System.AddIn.Contract.IListContract%601> coleção pode ser empacotada pelo limite de isolamento entre o suplemento e seu aplicativo de host.</span><span class="sxs-lookup"><span data-stu-id="a4de0-130">The <xref:System.AddIn.Contract.IListContract%601> collection can be marshaled across the isolation boundary between the add-in and its host application.</span></span>  
  
 <span data-ttu-id="a4de0-131">Você deve usar essa sobrecarga de método apenas quando o conteúdo do <xref:System.Collections.Generic.IList%601> coleção são tipos serializáveis que podem ser passados diretamente para o contrato (em vez de tipos que devem ser adaptados para contratos).</span><span class="sxs-lookup"><span data-stu-id="a4de0-131">You should use this method overload only when the contents of the <xref:System.Collections.Generic.IList%601> collection are serializable types that can be passed directly to the contract (rather than types that must be adapted into contracts).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4de0-132">O exemplo a seguir implementa a classe que define um segmento de pipeline de adaptador do lado do suplemento.</span><span class="sxs-lookup"><span data-stu-id="a4de0-132">The following example implements the class that defines an add-in side adapter pipeline segment.</span></span> <span data-ttu-id="a4de0-133">Ele se adapta personalizado `ProcessBooks` método colocando o <xref:System.Collections.Generic.IList%601> coleção passados do segmento de exibição e convertê-la em um <xref:System.AddIn.Contract.IListContract%601> coleção pode ser empacotada pelo limite de isolamento para o host.</span><span class="sxs-lookup"><span data-stu-id="a4de0-133">It adapts the custom `ProcessBooks` method by taking the <xref:System.Collections.Generic.IList%601> collection passed from the add-in view segment and converting it to an <xref:System.AddIn.Contract.IListContract%601> collection that can be marshaled across the isolation boundary to the host.</span></span>  
  
 [!code-csharp[AddInCollectionPipelineHostSideAdapter#4](~/samples/snippets/csharp/VS_Snippets_CLR/AddInCollectionPipelineHostSideAdapter/cs/LibraryManagerContractToViewHostAdapter.cs#4)]
 [!code-vb[AddInCollectionPipelineHostSideAdapter#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/AddInCollectionPipelineHostSideAdapter/vb/LibraryManagerContractToViewHostAdapter.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToIListContract&lt;TView,TContract&gt;">
      <MemberSignature Language="C#" Value="public static System.AddIn.Contract.IListContract&lt;TContract&gt; ToIListContract&lt;TView,TContract&gt; (System.Collections.Generic.IList&lt;TView&gt; collection, Converter&lt;TView,TContract&gt; viewContractAdapter, Converter&lt;TContract,TView&gt; contractViewAdapter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.AddIn.Contract.IListContract`1&lt;!!TContract&gt; ToIListContract&lt;TView, TContract&gt;(class System.Collections.Generic.IList`1&lt;!!TView&gt; collection, class System.Converter`2&lt;!!TView, !!TContract&gt; viewContractAdapter, class System.Converter`2&lt;!!TContract, !!TView&gt; contractViewAdapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.CollectionAdapters.ToIListContract``2(System.Collections.Generic.IList{``0},System.Converter{``0,``1},System.Converter{``1,``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToIListContract(Of TView, TContract) (collection As IList(Of TView), viewContractAdapter As Converter(Of TView, TContract), contractViewAdapter As Converter(Of TContract, TView)) As IListContract(Of TContract)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TView, typename TContract&gt;&#xA; static System::AddIn::Contract::IListContract&lt;TContract&gt; ^ ToIListContract(System::Collections::Generic::IList&lt;TView&gt; ^ collection, Converter&lt;TView, TContract&gt; ^ viewContractAdapter, Converter&lt;TContract, TView&gt; ^ contractViewAdapter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.IListContract&lt;TContract&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TView" />
        <TypeParameter Name="TContract" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IList&lt;TView&gt;" />
        <Parameter Name="viewContractAdapter" Type="System.Converter&lt;TView,TContract&gt;" />
        <Parameter Name="contractViewAdapter" Type="System.Converter&lt;TContract,TView&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TView">
          <span data-ttu-id="a4de0-134">O tipo que define a exibição dos objetos na lista.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4de0-134">The type that defines the view of the objects in the list.</span>
          </span>
        </typeparam>
        <typeparam name="TContract">
          <span data-ttu-id="a4de0-135">O tipo que define o contrato para passar os objetos do tipo <c>TView</c> através dos limites de isolamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4de0-135">The type that defines the contract for passing objects of type <c>TView</c> across the isolation boundary.</span>
          </span>
        </typeparam>
        <param name="collection">
          <span data-ttu-id="a4de0-136">A coleção a ser convertida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4de0-136">The collection to convert.</span>
          </span>
        </param>
        <param name="viewContractAdapter">
          <span data-ttu-id="a4de0-137">Um conversor que se adapta os dados do tipo definido na exibição para o tipo esperado no contrato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4de0-137">A converter that adapts the data from the type defined in the view to the type expected by the contract.</span>
          </span>
        </param>
        <param name="contractViewAdapter">
          <span data-ttu-id="a4de0-138">Um conversor que se adapta os dados do tipo definido no contrato para o tipo esperado na exibição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4de0-138">A converter that adapts the data from the type defined in the contract to the type expected in the view.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4de0-139">Converte uma coleção <see cref="T:System.Collections.Generic.IList`1" /> especificada em uma coleção <see cref="T:System.AddIn.Contract.IListContract`1" /> usando adaptadores conversores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4de0-139">Converts a specified <see cref="T:System.Collections.Generic.IList`1" /> collection to an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection by using converter adapters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a4de0-140">A coleção convertida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4de0-140">The converted collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4de0-141">Use essa sobrecarga de método para <xref:System.Collections.Generic.IList%601> coleções que contêm tipos que devem ser adaptados de contratos antes que eles podem ser passados para o contrato (em vez de tipos serializáveis simples que podem ser passados diretamente).</span><span class="sxs-lookup"><span data-stu-id="a4de0-141">Use this method overload for <xref:System.Collections.Generic.IList%601> collections that contain types that must be adapted into contracts before they can be passed to the contract (rather than simple serializable types that can be passed directly).</span></span> <span data-ttu-id="a4de0-142">O <xref:System.AddIn.Contract.IListContract%601> coleção pode ser empacotada pelo limite de isolamento entre um suplemento e seu aplicativo de host.</span><span class="sxs-lookup"><span data-stu-id="a4de0-142">The <xref:System.AddIn.Contract.IListContract%601> collection can be marshaled across the isolation boundary between an add-in and its host application.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>