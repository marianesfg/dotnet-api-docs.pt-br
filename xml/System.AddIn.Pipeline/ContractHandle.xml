<Type Name="ContractHandle" FullName="System.AddIn.Pipeline.ContractHandle">
  <TypeSignature Language="C#" Value="public class ContractHandle : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ContractHandle extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Pipeline.ContractHandle" />
  <TypeSignature Language="VB.NET" Value="Public Class ContractHandle&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContractHandle : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="583ef-101">Fornece métodos que controlam o tempo de vida de um suplemento.</span><span class="sxs-lookup"><span data-stu-id="583ef-101">Provides methods that control the lifetime of an add-in.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="583ef-102">Como o modelo fornece a capacidade para suplementos para se comunicar entre domínios de aplicativo e entre processos, ele não pode contar o coletor de lixo para recuperá-los.</span><span class="sxs-lookup"><span data-stu-id="583ef-102">Because the add-in model provides the ability for add-ins to communicate between application domains and between processes, it cannot rely on the garbage collector to reclaim them.</span></span> <span data-ttu-id="583ef-103">Essa classe fornece uma mecanismo para o suplemento de contagem obtendo um token de tempo de vida para seu contrato de referência.</span><span class="sxs-lookup"><span data-stu-id="583ef-103">This class provides a reference counting mechanism for the add-in by obtaining a lifetime token to its contract.</span></span>  
  
 <span data-ttu-id="583ef-104">Quando um <xref:System.AddIn.Pipeline.ContractHandle> objeto for construído, ele chama o <xref:System.AddIn.Pipeline.ContractBase.AcquireLifetimeToken%2A> método no contrato que é transmitido ao construtor.</span><span class="sxs-lookup"><span data-stu-id="583ef-104">When a <xref:System.AddIn.Pipeline.ContractHandle> object is constructed, it calls the <xref:System.AddIn.Pipeline.ContractBase.AcquireLifetimeToken%2A> method on the contract that is passed to the constructor.</span></span> <span data-ttu-id="583ef-105">Quando o <xref:System.AddIn.Pipeline.ContractHandle> objeto é descartado ou finalizado, ele chama o <xref:System.AddIn.Pipeline.ContractBase.RevokeLifetimeToken%2A> método no contrato, que remove sua retenção no contrato.</span><span class="sxs-lookup"><span data-stu-id="583ef-105">When the <xref:System.AddIn.Pipeline.ContractHandle> object is disposed or finalized, it calls the <xref:System.AddIn.Pipeline.ContractBase.RevokeLifetimeToken%2A> method on the contract, which removes its hold on the contract.</span></span>  
  
 <span data-ttu-id="583ef-106">Adaptadores de implementam o contrato.</span><span class="sxs-lookup"><span data-stu-id="583ef-106">Adapters implement the contract.</span></span> <span data-ttu-id="583ef-107">O <xref:System.AddIn.Pipeline.ContractHandle> classe foi projetada para ser usado em um adaptador de contrato para exibição para ajudar os desenvolvedores de pipeline a gerenciar o tempo de vida do contrato que está sendo adaptado.</span><span class="sxs-lookup"><span data-stu-id="583ef-107">The <xref:System.AddIn.Pipeline.ContractHandle> class is designed to be used in a contract-to-view adapter to help pipeline developers manage the lifetime of the contract that is being adapted.</span></span> <span data-ttu-id="583ef-108">Normalmente, uma instância dessa classe é criada durante a construção da classe de adaptador e é armazenada em um campo de instância do adaptador.</span><span class="sxs-lookup"><span data-stu-id="583ef-108">Typically, an instance of this class is instantiated during the construction of the adapter class and is stored in an instance field of the adapter.</span></span> <span data-ttu-id="583ef-109">Quando a classe de adaptador é coletado como lixo, a <xref:System.AddIn.Pipeline.ContractHandle> objeto também será coletado e <xref:System.AddIn.Pipeline.ContractHandle> objeto revogará o token de tempo de vida do contrato.</span><span class="sxs-lookup"><span data-stu-id="583ef-109">When the adapter class is garbage-collected, the <xref:System.AddIn.Pipeline.ContractHandle> object will also be collected and the <xref:System.AddIn.Pipeline.ContractHandle> object will revoke the lifetime token on the contract.</span></span>  
  
 <span data-ttu-id="583ef-110">É recomendável que os adaptadores de contrato de exibição herdam o <xref:System.AddIn.Pipeline.ContractBase> classe.</span><span class="sxs-lookup"><span data-stu-id="583ef-110">It is recommended that your view-to-contract adapters inherit from the <xref:System.AddIn.Pipeline.ContractBase> class.</span></span> <span data-ttu-id="583ef-111">Você pode usar uma implementação padrão para os membros de <xref:System.AddIn.Contract.IContract>, que significa que você precisa implementar apenas os membros do seu contrato específico.</span><span class="sxs-lookup"><span data-stu-id="583ef-111">You can then use a default implementation for the members of <xref:System.AddIn.Contract.IContract>, which means you need to implement only the members of your specific contract.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="583ef-112">O exemplo a seguir mostra como definir o identificador de token de tempo de vida de um adaptador de exibição de contrato no lado do suplemento de um pipeline.</span><span class="sxs-lookup"><span data-stu-id="583ef-112">The following example shows how to set the lifetime token handle in a contract-to-view adapter on the add-in side of a pipeline.</span></span>  
  
 [!code-csharp[AddinP2HostSideAdapters#2](~/samples/snippets/csharp/VS_Snippets_CLR/AddInP2HostSideAdapters/cs/Calc2ContractToViewHostSideAdapter.cs#2)]
 [!code-vb[AddinP2HostSideAdapters#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/AddInP2HostSideAdapters/vb/Calc2ContractToViewHostSideAdapter.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContractHandle (System.AddIn.Contract.IContract contract);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.AddIn.Contract.IContract contract) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractHandle.#ctor(System.AddIn.Contract.IContract)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contract As IContract)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContractHandle(System::AddIn::Contract::IContract ^ contract);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contract" Type="System.AddIn.Contract.IContract" />
      </Parameters>
      <Docs>
        <param name="contract"><span data-ttu-id="583ef-113">O contrato a ser usado no pipeline.</span><span class="sxs-lookup"><span data-stu-id="583ef-113">The contract to use in the pipeline.</span></span></param>
        <summary><span data-ttu-id="583ef-114">Inicializa uma nova instância da classe <see cref="T:System.AddIn.Pipeline.ContractHandle" />.</span><span class="sxs-lookup"><span data-stu-id="583ef-114">Initializes a new instance of the <see cref="T:System.AddIn.Pipeline.ContractHandle" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="583ef-115"><paramref name="contract" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="583ef-115"><paramref name="contract" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AppDomainOwner">
      <MemberSignature Language="C#" Value="public static System.AddIn.Contract.IContract AppDomainOwner (AppDomain domain);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.AddIn.Contract.IContract AppDomainOwner(class System.AppDomain domain) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractHandle.AppDomainOwner(System.AppDomain)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AppDomainOwner (domain As AppDomain) As IContract" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::AddIn::Contract::IContract ^ AppDomainOwner(AppDomain ^ domain);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.IContract</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" />
      </Parameters>
      <Docs>
        <param name="domain"><span data-ttu-id="583ef-116">Um domínio de aplicativo a ser verificado.</span><span class="sxs-lookup"><span data-stu-id="583ef-116">The application domain to check.</span></span></param>
        <summary><span data-ttu-id="583ef-117">Obtém a instância do adaptador no lado do suplemento quando o domínio do aplicativo foi criado.</span><span class="sxs-lookup"><span data-stu-id="583ef-117">Gets the instance of the add-in-side adapter when the application domain was created.</span></span></summary>
        <returns><span data-ttu-id="583ef-118">Um objeto <see cref="T:System.AddIn.Contract.IContract" /> que representa o proprietário desse domínio do aplicativo.</span><span class="sxs-lookup"><span data-stu-id="583ef-118">An <see cref="T:System.AddIn.Contract.IContract" /> object that represents the owner of the application domain.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="583ef-119">Os adaptadores do lado do suplemento são digitados como <xref:System.AddIn.Contract.IContract>.</span><span class="sxs-lookup"><span data-stu-id="583ef-119">The add-in-side adapters are typed as <xref:System.AddIn.Contract.IContract>.</span></span>  
  
 <span data-ttu-id="583ef-120">Se o domínio do aplicativo tiver sido criado por um usuário, não há nenhum proprietário.</span><span class="sxs-lookup"><span data-stu-id="583ef-120">If the application domain was previously created by a user, there is no owner.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="583ef-121"><paramref name="domain" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="583ef-121"><paramref name="domain" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Contract">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.IContract Contract { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.AddIn.Contract.IContract Contract" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Pipeline.ContractHandle.Contract" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Contract As IContract" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::AddIn::Contract::IContract ^ Contract { System::AddIn::Contract::IContract ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.IContract</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="583ef-122">Obtém o contrato usado por um pipeline.</span><span class="sxs-lookup"><span data-stu-id="583ef-122">Gets the contract used by a pipeline.</span></span></summary>
        <value><span data-ttu-id="583ef-123">O contrato, que é derivado de <see cref="T:System.AddIn.Contract.IContract" />.</span><span class="sxs-lookup"><span data-stu-id="583ef-123">The contract, which is derived from <see cref="T:System.AddIn.Contract.IContract" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractOwnsAppDomain">
      <MemberSignature Language="C#" Value="public static bool ContractOwnsAppDomain (System.AddIn.Contract.IContract contract, AppDomain domain);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContractOwnsAppDomain(class System.AddIn.Contract.IContract contract, class System.AppDomain domain) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractHandle.ContractOwnsAppDomain(System.AddIn.Contract.IContract,System.AppDomain)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContractOwnsAppDomain (contract As IContract, domain As AppDomain) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ContractOwnsAppDomain(System::AddIn::Contract::IContract ^ contract, AppDomain ^ domain);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contract" Type="System.AddIn.Contract.IContract" />
        <Parameter Name="domain" Type="System.AppDomain" />
      </Parameters>
      <Docs>
        <param name="contract"><span data-ttu-id="583ef-124">O contrato a ser verificado.</span><span class="sxs-lookup"><span data-stu-id="583ef-124">The contract to check.</span></span></param>
        <param name="domain"><span data-ttu-id="583ef-125">Um domínio de aplicativo a ser verificado.</span><span class="sxs-lookup"><span data-stu-id="583ef-125">The application domain to check.</span></span></param>
        <summary><span data-ttu-id="583ef-126">Determina se um domínio do aplicativo é de propriedade do contrato especificado.</span><span class="sxs-lookup"><span data-stu-id="583ef-126">Determines whether an application domain is owned by the specified contract.</span></span></summary>
        <returns>
          <span data-ttu-id="583ef-127"><see langword="true" /> se o contrato for proprietário do domínio do aplicativo; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="583ef-127"><see langword="true" /> if the contract owns the application domain; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="583ef-128"><paramref name="contract" /> ou <paramref name="domain" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="583ef-128"><paramref name="contract" /> or <paramref name="domain" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="583ef-129">Revoga o token de tempo de vida em um contrato.</span><span class="sxs-lookup"><span data-stu-id="583ef-129">Revokes the lifetime token on a contract.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractHandle.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="583ef-130">Revoga o token de tempo de vida em um contrato, independentemente da entrada.</span><span class="sxs-lookup"><span data-stu-id="583ef-130">Revokes the lifetime token on a contract, regardless of input.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractHandle.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="583ef-131"><see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</span><span class="sxs-lookup"><span data-stu-id="583ef-131"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="583ef-132">Revoga o token de tempo de vida no contrato, independentemente da entrada e, como opção, libera os recursos gerenciados.</span><span class="sxs-lookup"><span data-stu-id="583ef-132">Revokes the lifetime token on the contract regardless of input and optionally releases the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ContractHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractHandle.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ContractHandle ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="583ef-133">Libera todos os recursos associados à instância <see cref="T:System.AddIn.Pipeline.ContractHandle" />.</span><span class="sxs-lookup"><span data-stu-id="583ef-133">Releases the resources associated with the <see cref="T:System.AddIn.Pipeline.ContractHandle" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="583ef-134">Este método substitui <xref:System.Object.Finalize%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="583ef-134">This method overrides <xref:System.Object.Finalize%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="583ef-135">O código do aplicativo não deve chamar este método; o método <xref:System.AddIn.Pipeline.ContractHandle.Finalize%2A> de um objeto é invocado automaticamente durante a coleta de lixo, a menos que a finalização pelo coletor de lixo tenha sido desabilitada por uma chamada para o método <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="583ef-135">Application code should not call this method; an object's <xref:System.AddIn.Pipeline.ContractHandle.Finalize%2A> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="583ef-136">Quando chamado pelo coletor de lixo, este método chama o <xref:System.AddIn.Pipeline.ContractHandle.Dispose%28System.Boolean%29> método.</span><span class="sxs-lookup"><span data-stu-id="583ef-136">When called by the garbage collector, this method calls the <xref:System.AddIn.Pipeline.ContractHandle.Dispose%28System.Boolean%29> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>