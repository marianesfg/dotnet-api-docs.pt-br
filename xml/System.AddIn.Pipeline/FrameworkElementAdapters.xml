<Type Name="FrameworkElementAdapters" FullName="System.AddIn.Pipeline.FrameworkElementAdapters">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4e3f5f9a2cf8d810ccd1e3c5b6394bea9e9da66f" />
    <Meta Name="ms.sourcegitcommit" Value="f9e3295b6cc303a611a73a84c4b27f9da792ad0d" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/26/2018" />
    <Meta Name="ms.locfileid" Value="31907593" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class FrameworkElementAdapters" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit FrameworkElementAdapters extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Pipeline.FrameworkElementAdapters" />
  <TypeSignature Language="VB.NET" Value="Public Class FrameworkElementAdapters" />
  <TypeSignature Language="C++ CLI" Value="public ref class FrameworkElementAdapters abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:System.AddIn.Pipeline.FrameworkElementAdapters" /> é usado pelos suplementos do WPF (Windows Presentation Foundation) para converter entre um <see cref="T:System.Windows.FrameworkElement" /> e um <see cref="T:System.AddIn.Contract.INativeHandleContract" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
Windows Presentation Foundation (WPF) estende a modelo suplemento do .NET Framework para permitir que as interfaces do WPF ser transmitidos entre aplicativos host e suplementos. WPF requer que as interfaces de usuário do WPF que o recebem diretamente ou indiretamente derivam <xref:System.Windows.FrameworkElement>. No entanto, suplementos e host de aplicativos são geralmente executados em domínios de aplicativo separados e são, consequentemente, separados por um limite de isolamento. Por esse motivo, o modelo de suplemento do .NET Framework requer os tipos que são transmitidos pelo limite de isolamento para ser remotos. Um tipo permite acesso remoto está em conformidade com um dos seguintes:  
  
-   Implementa a interface <xref:System.Runtime.Serialization.ISerializable>.  
  
-   Tem o <xref:System.SerializableAttribute> atributo aplicado.  
  
-   Deriva a <xref:System.MarshalByRefObject> classe.  
  
 <xref:System.Windows.FrameworkElement> não é remota e deve ser convertido em um tipo de remoto antes de ser passada através dos limites de isolamento entre um suplemento e um aplicativo host. Para essa finalidade, você precisa chamar estático <xref:System.AddIn.Pipeline.FrameworkElementAdapters.ViewToContractAdapter%2A> método para converter o <xref:System.Windows.FrameworkElement> a uma instância do remoto <xref:System.AddIn.Contract.INativeHandleContract>.  
  
 Uma vez o <xref:System.AddIn.Contract.INativeHandleContract> é passado pelo limite de isolamento, ele deve ser convertido para um tipo que pode ser exibido, o aplicativo de host ou o suplemento. Nesse caso, estático <xref:System.AddIn.Pipeline.FrameworkElementAdapters.ContractToViewAdapter%2A> método é chamado para converter um <xref:System.AddIn.Contract.INativeHandleContract> para um <xref:System.Windows.FrameworkElement>.  
  
 Para obter mais feira de suplementos do WPF, consulte [visão geral de suplementos WPF](~/docs/framework/wpf/app-development/wpf-add-ins-overview.md).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ContractToViewAdapter">
      <MemberSignature Language="C#" Value="public static System.Windows.FrameworkElement ContractToViewAdapter (System.AddIn.Contract.INativeHandleContract nativeHandleContract);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.FrameworkElement ContractToViewAdapter(class System.AddIn.Contract.INativeHandleContract nativeHandleContract) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.FrameworkElementAdapters.ContractToViewAdapter(System.AddIn.Contract.INativeHandleContract)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContractToViewAdapter (nativeHandleContract As INativeHandleContract) As FrameworkElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::FrameworkElement ^ ContractToViewAdapter(System::AddIn::Contract::INativeHandleContract ^ nativeHandleContract);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.FrameworkElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nativeHandleContract" Type="System.AddIn.Contract.INativeHandleContract" />
      </Parameters>
      <Docs>
        <param name="nativeHandleContract">O <see cref="T:System.AddIn.Contract.INativeHandleContract" /> passado pelo limite de isolamento entre o aplicativo host e o suplemento.</param>
        <summary>Retorna um <see cref="T:System.Windows.FrameworkElement" /> que foi convertido de um <see cref="T:System.AddIn.Contract.INativeHandleContract" />.</summary>
        <returns>Um <see cref="T:System.Windows.FrameworkElement" /> que será exibido do aplicativo host ou do suplemento, dependendo da direção em que o [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] é passado entre os dois.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.AddIn.Pipeline.FrameworkElementAdapters.ViewToContractAdapter(System.Windows.FrameworkElement)" />
      </Docs>
    </Member>
    <Member MemberName="ViewToContractAdapter">
      <MemberSignature Language="C#" Value="public static System.AddIn.Contract.INativeHandleContract ViewToContractAdapter (System.Windows.FrameworkElement root);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.AddIn.Contract.INativeHandleContract ViewToContractAdapter(class System.Windows.FrameworkElement root) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.FrameworkElementAdapters.ViewToContractAdapter(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ViewToContractAdapter (root As FrameworkElement) As INativeHandleContract" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::AddIn::Contract::INativeHandleContract ^ ViewToContractAdapter(System::Windows::FrameworkElement ^ root);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.INativeHandleContract</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="root" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="root">O <see cref="T:System.Windows.FrameworkElement" /> a ser passado pelo limite de isolamento entre o aplicativo host e o suplemento.</param>
        <summary>Retorna um <see cref="T:System.AddIn.Contract.INativeHandleContract" /> que foi convertido de um <see cref="T:System.Windows.FrameworkElement" />.</summary>
        <returns>Um <see cref="T:System.AddIn.Contract.INativeHandleContract" /> passado do aplicativo host ou do suplemento, dependendo da direção em que o [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] é passado entre os dois.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="root" /> não é o elemento raiz de uma árvore de elementos.</exception>
        <altmember cref="M:System.AddIn.Pipeline.FrameworkElementAdapters.ContractToViewAdapter(System.AddIn.Contract.INativeHandleContract)" />
      </Docs>
    </Member>
  </Members>
</Type>