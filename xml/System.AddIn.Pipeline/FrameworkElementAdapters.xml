<Type Name="FrameworkElementAdapters" FullName="System.AddIn.Pipeline.FrameworkElementAdapters">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c758f24c642c1510e2b21b5addd93717bbe5eecc" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48667147" /></Metadata><TypeSignature Language="C#" Value="public static class FrameworkElementAdapters" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit FrameworkElementAdapters extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Pipeline.FrameworkElementAdapters" />
  <TypeSignature Language="VB.NET" Value="Public Class FrameworkElementAdapters" />
  <TypeSignature Language="C++ CLI" Value="public ref class FrameworkElementAdapters abstract sealed" />
  <TypeSignature Language="F#" Value="type FrameworkElementAdapters = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Presentation</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="T:System.AddIn.Pipeline.FrameworkElementAdapters" /> é usado pelos suplementos do WPF (Windows Presentation Foundation) para converter entre um <see cref="T:System.Windows.FrameworkElement" /> e um <see cref="T:System.AddIn.Contract.INativeHandleContract" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
Windows Presentation Foundation (WPF) estende o .NET Framework suplemento do modelo para permitir que o WPF interfaces do usuário a serem passados entre aplicativos host e suplementos. WPF exige que as interfaces do usuário WPF que são passados a diretamente ou indiretamente, derivar de <xref:System.Windows.FrameworkElement>. No entanto, suplementos e host de aplicativos são normalmente executados em domínios de aplicativo separados e são, consequentemente, separados por um limite de isolamento. Por esse motivo, o modelo de suplemento do .NET Framework requer os tipos que são passados pelo limite de isolamento para ser remotos. Um tipo que devem ser remotos estão em conformidade com um dos seguintes:  
  
-   Implementa a interface <xref:System.Runtime.Serialization.ISerializable>.  
  
-   Tem o <xref:System.SerializableAttribute> atributo aplicado.  
  
-   Deriva o <xref:System.MarshalByRefObject> classe.  
  
 <xref:System.Windows.FrameworkElement> não é remota e deve ser convertido em um tipo que devem ser remotos antes de ser passado pelo limite de isolamento entre um suplemento e um aplicativo host. Para essa finalidade, você precisará chamar estático <xref:System.AddIn.Pipeline.FrameworkElementAdapters.ViewToContractAdapter%2A> método para converter os <xref:System.Windows.FrameworkElement> a uma instância das que devem ser remotos <xref:System.AddIn.Contract.INativeHandleContract>.  
  
 Uma vez o <xref:System.AddIn.Contract.INativeHandleContract> é passado pelo limite de isolamento, ele deve ser convertido em um tipo que pode ser exibido pelo aplicativo host ou o suplemento. Nesse caso, estático <xref:System.AddIn.Pipeline.FrameworkElementAdapters.ContractToViewAdapter%2A> método é chamado para converter um <xref:System.AddIn.Contract.INativeHandleContract> para um <xref:System.Windows.FrameworkElement>.  
  
 Para obter mais exposição dos suplementos do WPF, consulte [visão geral de suplementos WPF](~/docs/framework/wpf/app-development/wpf-add-ins-overview.md).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ContractToViewAdapter">
      <MemberSignature Language="C#" Value="public static System.Windows.FrameworkElement ContractToViewAdapter (System.AddIn.Contract.INativeHandleContract nativeHandleContract);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.FrameworkElement ContractToViewAdapter(class System.AddIn.Contract.INativeHandleContract nativeHandleContract) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.FrameworkElementAdapters.ContractToViewAdapter(System.AddIn.Contract.INativeHandleContract)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContractToViewAdapter (nativeHandleContract As INativeHandleContract) As FrameworkElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::FrameworkElement ^ ContractToViewAdapter(System::AddIn::Contract::INativeHandleContract ^ nativeHandleContract);" />
      <MemberSignature Language="F#" Value="static member ContractToViewAdapter : System.AddIn.Contract.INativeHandleContract -&gt; System.Windows.FrameworkElement" Usage="System.AddIn.Pipeline.FrameworkElementAdapters.ContractToViewAdapter nativeHandleContract" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Presentation</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.FrameworkElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nativeHandleContract" Type="System.AddIn.Contract.INativeHandleContract" />
      </Parameters>
      <Docs>
        <param name="nativeHandleContract">O <see cref="T:System.AddIn.Contract.INativeHandleContract" /> passado pelo limite de isolamento entre o aplicativo host e o suplemento.</param>
        <summary>Retorna um <see cref="T:System.Windows.FrameworkElement" /> que foi convertido de um <see cref="T:System.AddIn.Contract.INativeHandleContract" />.</summary>
        <returns>Um <see cref="T:System.Windows.FrameworkElement" /> que será exibido do aplicativo host ou do suplemento, dependendo da direção em que o [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] é passado entre os dois.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.AddIn.Pipeline.FrameworkElementAdapters.ViewToContractAdapter(System.Windows.FrameworkElement)" />
      </Docs>
    </Member>
    <Member MemberName="ViewToContractAdapter">
      <MemberSignature Language="C#" Value="public static System.AddIn.Contract.INativeHandleContract ViewToContractAdapter (System.Windows.FrameworkElement root);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.AddIn.Contract.INativeHandleContract ViewToContractAdapter(class System.Windows.FrameworkElement root) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.FrameworkElementAdapters.ViewToContractAdapter(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ViewToContractAdapter (root As FrameworkElement) As INativeHandleContract" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::AddIn::Contract::INativeHandleContract ^ ViewToContractAdapter(System::Windows::FrameworkElement ^ root);" />
      <MemberSignature Language="F#" Value="static member ViewToContractAdapter : System.Windows.FrameworkElement -&gt; System.AddIn.Contract.INativeHandleContract" Usage="System.AddIn.Pipeline.FrameworkElementAdapters.ViewToContractAdapter root" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Presentation</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.INativeHandleContract</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="root" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="root">O <see cref="T:System.Windows.FrameworkElement" /> a ser passado pelo limite de isolamento entre o aplicativo host e o suplemento.</param>
        <summary>Retorna um <see cref="T:System.AddIn.Contract.INativeHandleContract" /> que foi convertido de um <see cref="T:System.Windows.FrameworkElement" />.</summary>
        <returns>Um <see cref="T:System.AddIn.Contract.INativeHandleContract" /> passado do aplicativo host ou do suplemento, dependendo da direção em que o [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] é passado entre os dois.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="root" /> não é o elemento raiz de uma árvore de elementos.</exception>
        <altmember cref="M:System.AddIn.Pipeline.FrameworkElementAdapters.ContractToViewAdapter(System.AddIn.Contract.INativeHandleContract)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/bb913905(v=vs.90)">Suplemento do WPF tem várias interfaces de usuário de exemplo</related>
      </Docs>
    </Member>
  </Members>
</Type>