<Type Name="DataServiceCollection&lt;T&gt;" FullName="System.Data.Services.Client.DataServiceCollection&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7f7b278d015e6d86633b4ded520037c7d887e501" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30390240" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataServiceCollection&lt;T&gt; : System.Collections.ObjectModel.ObservableCollection&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataServiceCollection`1&lt;T&gt; extends System.Collections.ObjectModel.ObservableCollection`1&lt;!T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Data.Services.Client.DataServiceCollection`1" />
  <TypeSignature Language="VB.NET" Value="Public Class DataServiceCollection(Of T)&#xA;Inherits ObservableCollection(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class DataServiceCollection : System::Collections::ObjectModel::ObservableCollection&lt;T&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Services.Client</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Collections.ObjectModel.ObservableCollection&lt;T&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">T</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="T">Um tipo de objeto.</typeparam>
    <summary>Representa uma coleção de entidades dinâmica que oferece notificações quando itens são adicionados e removidos ou quando a lista é atualizada.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] fornece o <xref:System.Data.Services.Client.DataServiceCollection%601> classe para oferecer suporte a dados de associação para controles em aplicativos cliente. Essa classe herda o <xref:System.Collections.ObjectModel.ObservableCollection%601> de classe que implementa o <xref:System.Collections.Specialized.INotifyCollectionChanged> interface e é o mecanismo de associação de dados primário para Windows Presentation Foundation (WPF) e aplicativos baseados no Silverlight.  
  
 Você pode carregar um <xref:System.Collections.ObjectModel.ObservableCollection%601> associação de coleção usando qualquer coleção que implementa o <xref:System.Collections.Generic.IEnumerable%601> interface. Itens carregados na coleção de associação devem implementar o <xref:System.ComponentModel.INotifyPropertyChanged> interface. Para obter mais informações, consulte [vinculação de dados a controles](~/docs/framework/data/wcf/binding-data-to-controls-wcf-data-services.md).  
  
   
  
## Examples  
 O exemplo a seguir é da página code-behind de uma página da linguagem XAML que define a janela `SalesOrders` no WPF. Quando a janela é carregada, um <xref:System.Data.Services.Client.DataServiceCollection%601> é criado com base no resultado de uma consulta que retorna os clientes com objetos relacionados, filtrados por país. Esse resultado é associado à propriedade <xref:System.Windows.FrameworkElement.DataContext%2A> do <xref:System.Windows.Controls.StackPanel> que é o controle de layout raiz da janela WPF.  
  
 [!code-csharp[Astoria Northwind Client#WpfDataBinding](~/samples/snippets/csharp/VS_Snippets_Misc/astoria northwind client/cs/customerorderswpf.xaml.cs#wpfdatabinding)]
 [!code-vb[Astoria Northwind Client#WpfDataBinding](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria northwind client/vb/customerorderswpf.xaml.vb#wpfdatabinding)]  
  
 A seguir está o XAML que define o `SalesOrders` janela no WPF no exemplo anterior.  
  
 [!code-xaml[Astoria Northwind Client#WpfDataBindingXaml](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria northwind client/vb/customerorderswpf.xaml#wpfdatabindingxaml)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Cria uma nova instância da classe <see cref="T:System.Data.Services.Client.DataServiceCollection`1" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataServiceCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataServiceCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Cria uma nova instância da classe <see cref="T:System.Data.Services.Client.DataServiceCollection`1" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Por padrão, o controle de alterações automático está habilitada para um <xref:System.Data.Services.Client.DataServiceCollection%601>. Você pode criar uma instância de <xref:System.Data.Services.Client.DataServiceCollection%601> que usa o controle de alterações manual, quando você cria uma instância com um construtor que permite que você forneça um valor de <xref:System.Data.Services.Client.TrackingMode.None> para <xref:System.Data.Services.Client.TrackingMode>. Quando você usa o controle manual, você deve implementar <xref:System.ComponentModel.INotifyPropertyChanged> e <xref:System.Collections.Specialized.INotifyCollectionChanged> e manipular os eventos de acionar manualmente reportar alterações para o <xref:System.Data.Services.Client.DataServiceContext>.  
  
 Controle de alterações automáticas começa depois que itens são carregados na coleção.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataServiceCollection (System.Collections.Generic.IEnumerable&lt;T&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (items As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataServiceCollection(System::Collections::Generic::IEnumerable&lt;T&gt; ^ items);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="items">Uma <see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> ou consulta LINQ que retorna uma coleção <see cref="T:System.Collections.Generic.IEnumerable`1" /> de objetos usados para inicializar a coleção.</param>
        <summary>Cria uma nova instância da classe <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> com base na execução de consulta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Collections.Generic.IEnumerable%601> coleção de objetos fornecido para `items` é normalmente uma consulta que retorna os itens na coleção. No entanto, qualquer <xref:System.Collections.Generic.IEnumerable%601> coleção do tipo correto pode ser fornecida.  
  
 Por padrão, o controle de alterações automático está habilitada para um <xref:System.Data.Services.Client.DataServiceCollection%601>. Você pode criar uma instância de <xref:System.Data.Services.Client.DataServiceCollection%601> que usa o controle de alterações manual, quando você cria uma instância com um construtor que permite que você forneça um valor de <xref:System.Data.Services.Client.TrackingMode.None> para <xref:System.Data.Services.Client.TrackingMode>. Quando você usa o controle manual, você deve implementar <xref:System.ComponentModel.INotifyPropertyChanged> e <xref:System.Collections.Specialized.INotifyCollectionChanged> e manipular os eventos de acionar manualmente reportar alterações para o <xref:System.Data.Services.Client.DataServiceContext>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataServiceCollection (System.Data.Services.Client.DataServiceContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Services.Client.DataServiceContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Data.Services.Client.DataServiceContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As DataServiceContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataServiceCollection(System::Data::Services::Client::DataServiceContext ^ context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.Data.Services.Client.DataServiceContext" />
      </Parameters>
      <Docs>
        <param name="context">O <see cref="T:System.Data.Services.Client.DataServiceContext" /> usado para controlar as alterações em objetos na coleção.</param>
        <summary>Cria uma nova instância da classe <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> que usa o <see cref="T:System.Data.Services.Client.DataServiceContext" /> especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use este construtor para criar um vazio <xref:System.Data.Services.Client.DataServiceCollection%601> para qual entidade os objetos podem ser adicionados sem executar uma consulta em relação ao serviço ou quando um <xref:System.Collections.Generic.IEnumerable%601> não está disponível.  
  
 Por padrão, o controle de alterações automático está habilitada para um <xref:System.Data.Services.Client.DataServiceCollection%601>. Você pode criar uma instância de <xref:System.Data.Services.Client.DataServiceCollection%601> que usa o controle de alterações manual, quando você cria uma instância com um construtor que permite que você forneça um valor de <xref:System.Data.Services.Client.TrackingMode.None> para <xref:System.Data.Services.Client.TrackingMode>. Quando você usa o controle manual, você deve implementar <xref:System.ComponentModel.INotifyPropertyChanged> e <xref:System.Collections.Specialized.INotifyCollectionChanged> e manipular os eventos de acionar manualmente reportar alterações para o <xref:System.Data.Services.Client.DataServiceContext>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataServiceCollection (System.Collections.Generic.IEnumerable&lt;T&gt; items, System.Data.Services.Client.TrackingMode trackingMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; items, valuetype System.Data.Services.Client.TrackingMode trackingMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Data.Services.Client.TrackingMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataServiceCollection(System::Collections::Generic::IEnumerable&lt;T&gt; ^ items, System::Data::Services::Client::TrackingMode trackingMode);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
        <Parameter Name="trackingMode" Type="System.Data.Services.Client.TrackingMode" />
      </Parameters>
      <Docs>
        <param name="items">Uma <see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> ou consulta LINQ que retorna uma coleção <see cref="T:System.Collections.Generic.IEnumerable`1" /> de objetos usados para inicializar a coleção.</param>
        <param name="trackingMode">Um valor <see cref="T:System.Data.Services.Client.TrackingMode" /> que indica se as alterações feitas nos itens da coleção são controlados automaticamente ou não.</param>
        <summary>Cria uma nova instância da classe <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> com base em uma execução de consulta e com o modo de acompanhamento especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Por padrão, o controle de alterações automático está habilitada para um <xref:System.Data.Services.Client.DataServiceCollection%601>. Use este construtor de classe e fornecer um valor de <xref:System.Data.Services.Client.TrackingMode.None> para `trackingMode` para criar uma instância de <xref:System.Data.Services.Client.DataServiceCollection%601> que usa o controle de alterações manual. Quando você usa o controle manual, você deve implementar <xref:System.ComponentModel.INotifyPropertyChanged> e <xref:System.Collections.Specialized.INotifyCollectionChanged> e manipular os eventos de acionar manualmente reportar alterações para o <xref:System.Data.Services.Client.DataServiceContext>.  
  
 O <xref:System.Collections.Generic.IEnumerable%601> coleção de objetos fornecido para `items` é normalmente uma consulta que retorna os itens na coleção. No entanto, qualquer <xref:System.Collections.Generic.IEnumerable%601> coleção do tipo correto pode ser fornecida.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataServiceCollection (System.Data.Services.Client.DataServiceContext context, string entitySetName, Func&lt;System.Data.Services.Client.EntityChangedParams,bool&gt; entityChangedCallback, Func&lt;System.Data.Services.Client.EntityCollectionChangedParams,bool&gt; collectionChangedCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Services.Client.DataServiceContext context, string entitySetName, class System.Func`2&lt;class System.Data.Services.Client.EntityChangedParams, bool&gt; entityChangedCallback, class System.Func`2&lt;class System.Data.Services.Client.EntityCollectionChangedParams, bool&gt; collectionChangedCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Data.Services.Client.DataServiceContext,System.String,System.Func{System.Data.Services.Client.EntityChangedParams,System.Boolean},System.Func{System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As DataServiceContext, entitySetName As String, entityChangedCallback As Func(Of EntityChangedParams, Boolean), collectionChangedCallback As Func(Of EntityCollectionChangedParams, Boolean))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataServiceCollection(System::Data::Services::Client::DataServiceContext ^ context, System::String ^ entitySetName, Func&lt;System::Data::Services::Client::EntityChangedParams ^, bool&gt; ^ entityChangedCallback, Func&lt;System::Data::Services::Client::EntityCollectionChangedParams ^, bool&gt; ^ collectionChangedCallback);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.Data.Services.Client.DataServiceContext" />
        <Parameter Name="entitySetName" Type="System.String" />
        <Parameter Name="entityChangedCallback" Type="System.Func&lt;System.Data.Services.Client.EntityChangedParams,System.Boolean&gt;" />
        <Parameter Name="collectionChangedCallback" Type="System.Func&lt;System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="context">O <see cref="T:System.Data.Services.Client.DataServiceContext" /> usado para acompanhar os itens na coleção.</param>
        <param name="entitySetName">O conjunto de entidades dos objetos na coleção.</param>
        <param name="entityChangedCallback">Um delegado que encapsula um método que é chamado quando uma entidade é alterada.</param>
        <param name="collectionChangedCallback">Um delegado que encapsula um método que é chamado quando a coleção de entidades é alterada.</param>
        <summary>Cria uma nova instância da classe <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> com os delegados de método de alteração fornecidos e que usa o <see cref="T:System.Data.Services.Client.DataServiceContext" /> especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use este construtor para criar um vazio <xref:System.Data.Services.Client.DataServiceCollection%601> para qual entidade os objetos podem ser adicionados sem executar uma consulta em relação ao serviço ou quando um <xref:System.Collections.Generic.IEnumerable%601> não está disponível.  
  
 Por padrão, o controle de alterações automático está habilitada para um <xref:System.Data.Services.Client.DataServiceCollection%601>. Você pode criar uma instância de <xref:System.Data.Services.Client.DataServiceCollection%601> que usa o controle de alterações manual, quando você cria uma instância com um construtor que permite que você forneça um valor de <xref:System.Data.Services.Client.TrackingMode.None> para <xref:System.Data.Services.Client.TrackingMode>. Quando você usa o controle manual, você deve implementar <xref:System.ComponentModel.INotifyPropertyChanged> e <xref:System.Collections.Specialized.INotifyCollectionChanged> e manipular os eventos de acionar manualmente reportar alterações para o <xref:System.Data.Services.Client.DataServiceContext>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataServiceCollection (System.Collections.Generic.IEnumerable&lt;T&gt; items, System.Data.Services.Client.TrackingMode trackingMode, string entitySetName, Func&lt;System.Data.Services.Client.EntityChangedParams,bool&gt; entityChangedCallback, Func&lt;System.Data.Services.Client.EntityCollectionChangedParams,bool&gt; collectionChangedCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; items, valuetype System.Data.Services.Client.TrackingMode trackingMode, string entitySetName, class System.Func`2&lt;class System.Data.Services.Client.EntityChangedParams, bool&gt; entityChangedCallback, class System.Func`2&lt;class System.Data.Services.Client.EntityCollectionChangedParams, bool&gt; collectionChangedCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Data.Services.Client.TrackingMode,System.String,System.Func{System.Data.Services.Client.EntityChangedParams,System.Boolean},System.Func{System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataServiceCollection(System::Collections::Generic::IEnumerable&lt;T&gt; ^ items, System::Data::Services::Client::TrackingMode trackingMode, System::String ^ entitySetName, Func&lt;System::Data::Services::Client::EntityChangedParams ^, bool&gt; ^ entityChangedCallback, Func&lt;System::Data::Services::Client::EntityCollectionChangedParams ^, bool&gt; ^ collectionChangedCallback);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
        <Parameter Name="trackingMode" Type="System.Data.Services.Client.TrackingMode" />
        <Parameter Name="entitySetName" Type="System.String" />
        <Parameter Name="entityChangedCallback" Type="System.Func&lt;System.Data.Services.Client.EntityChangedParams,System.Boolean&gt;" />
        <Parameter Name="collectionChangedCallback" Type="System.Func&lt;System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="items">Uma <see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> ou consulta LINQ que retorna uma coleção <see cref="T:System.Collections.Generic.IEnumerable`1" /> de objetos usados para inicializar a coleção.</param>
        <param name="trackingMode">Um valor <see cref="T:System.Data.Services.Client.TrackingMode" /> que indica se as alterações feitas nos itens da coleção são controlados automaticamente ou não.</param>
        <param name="entitySetName">O conjunto de entidades dos objetos na coleção.</param>
        <param name="entityChangedCallback">Um delegado que encapsula um método que é chamado quando uma entidade é alterada.</param>
        <param name="collectionChangedCallback">Um delegado que encapsula um método que é chamado quando a coleção de entidades é alterada.</param>
        <summary>Cria uma nova instância da classe <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> com base em uma execução de consulta e com os delegados de método de alteração fornecidos.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O `entityChanged` e `collectionChanged` funções são chamadas pelo <xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged> e <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged> eventos, respectivamente. O `entityChanged` leva um <xref:System.Data.Services.Client.EntityCollectionChangedParams> valor e o `collectionChanged` leva um <xref:System.Data.Services.Client.EntityChangedParams> valor. Ambos os métodos devem retornar um valor booliano que indica se o evento foi tratado pela função. Quando o método retornar `true`, o comportamento padrão ainda ocorre.  
  
 Por padrão, o controle de alterações automático está habilitada para um <xref:System.Data.Services.Client.DataServiceCollection%601>. Você pode criar uma instância de <xref:System.Data.Services.Client.DataServiceCollection%601> que usa o controle de alterações manual, quando você cria uma instância com um construtor que permite que você forneça um valor de <xref:System.Data.Services.Client.TrackingMode.None> para <xref:System.Data.Services.Client.TrackingMode>. Quando você usa o controle manual, você deve implementar <xref:System.ComponentModel.INotifyPropertyChanged> e <xref:System.Collections.Specialized.INotifyCollectionChanged> e manipular os eventos de acionar manualmente reportar alterações para o <xref:System.Data.Services.Client.DataServiceContext>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataServiceCollection (System.Data.Services.Client.DataServiceContext context, System.Collections.Generic.IEnumerable&lt;T&gt; items, System.Data.Services.Client.TrackingMode trackingMode, string entitySetName, Func&lt;System.Data.Services.Client.EntityChangedParams,bool&gt; entityChangedCallback, Func&lt;System.Data.Services.Client.EntityCollectionChangedParams,bool&gt; collectionChangedCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Services.Client.DataServiceContext context, class System.Collections.Generic.IEnumerable`1&lt;!T&gt; items, valuetype System.Data.Services.Client.TrackingMode trackingMode, string entitySetName, class System.Func`2&lt;class System.Data.Services.Client.EntityChangedParams, bool&gt; entityChangedCallback, class System.Func`2&lt;class System.Data.Services.Client.EntityCollectionChangedParams, bool&gt; collectionChangedCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Data.Services.Client.DataServiceContext,System.Collections.Generic.IEnumerable{`0},System.Data.Services.Client.TrackingMode,System.String,System.Func{System.Data.Services.Client.EntityChangedParams,System.Boolean},System.Func{System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataServiceCollection(System::Data::Services::Client::DataServiceContext ^ context, System::Collections::Generic::IEnumerable&lt;T&gt; ^ items, System::Data::Services::Client::TrackingMode trackingMode, System::String ^ entitySetName, Func&lt;System::Data::Services::Client::EntityChangedParams ^, bool&gt; ^ entityChangedCallback, Func&lt;System::Data::Services::Client::EntityCollectionChangedParams ^, bool&gt; ^ collectionChangedCallback);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.Data.Services.Client.DataServiceContext" />
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
        <Parameter Name="trackingMode" Type="System.Data.Services.Client.TrackingMode" />
        <Parameter Name="entitySetName" Type="System.String" />
        <Parameter Name="entityChangedCallback" Type="System.Func&lt;System.Data.Services.Client.EntityChangedParams,System.Boolean&gt;" />
        <Parameter Name="collectionChangedCallback" Type="System.Func&lt;System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="context">O <see cref="T:System.Data.Services.Client.DataServiceContext" /> usado para acompanhar os itens na coleção.</param>
        <param name="items">Uma <see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> ou consulta LINQ que retorna uma coleção <see cref="T:System.Collections.Generic.IEnumerable`1" /> de objetos usados para inicializar a coleção.</param>
        <param name="trackingMode">Um valor <see cref="T:System.Data.Services.Client.TrackingMode" /> que indica se as alterações feitas nos itens da coleção são controlados automaticamente ou não.</param>
        <param name="entitySetName">O conjunto de entidades dos objetos na coleção.</param>
        <param name="entityChangedCallback">Um delegado que encapsula um método que é chamado quando uma entidade é alterada.</param>
        <param name="collectionChangedCallback">Um delegado que encapsula um método que é chamado quando a coleção de entidades é alterada.</param>
        <summary>Cria uma nova instância da classe <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> com base em uma execução de consulta, com os delegados de método de alteração fornecidos e que usa o <see cref="T:System.Data.Services.Client.DataServiceContext" /> fornecido.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Por padrão, o controle de alterações automático está habilitada para um <xref:System.Data.Services.Client.DataServiceCollection%601>. Use este construtor de classe para fornecer um valor de <xref:System.Data.Services.Client.TrackingMode.None> para `trackingMode` para criar uma instância de <xref:System.Data.Services.Client.DataServiceCollection%601> que usa o controle de alterações manual. Quando você usa o controle manual, você deve implementar <xref:System.ComponentModel.INotifyPropertyChanged> e <xref:System.Collections.Specialized.INotifyCollectionChanged> e manipular os eventos de acionar manualmente reportar alterações para o <xref:System.Data.Services.Client.DataServiceContext>.  
  
 O <xref:System.Data.Services.Client.DataServiceContext> deve ser fornecido quando `items` não é um <xref:System.Data.Services.Client.DataServiceQuery%601> ou <xref:System.Data.Services.Client.QueryOperationResponse%601> que tem uma referência a um <xref:System.Data.Services.Client.DataServiceContext> instância.  
  
 O `entityChanged` e `collectionChanged` funções são chamadas pelo <xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged> e <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged> eventos, respectivamente. O `entityChanged` leva um <xref:System.Data.Services.Client.EntityCollectionChangedParams> valor e o `collectionChanged` leva um <xref:System.Data.Services.Client.EntityChangedParams> valor. Ambos os métodos devem retornar um valor booliano que indica se o evento foi tratado pela função. Quando o método retornar `true`, o comportamento padrão ainda ocorrerá.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear (bool stopTracking);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear(bool stopTracking) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.Clear(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear (stopTracking As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear(bool stopTracking);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stopTracking" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stopTracking">Quando <see langword="true" />, desanexa todos os itens do <see cref="T:System.Data.Services.Client.DataServiceContext" />.</param>
        <summary>Remove todos os itens da coleção e, opcionalmente, desanexa todos os itens do <see cref="T:System.Data.Services.Client.DataServiceContext" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando um item é desanexados, todos relacionados objetos no gráfico de dados também é desanexados do <xref:System.Data.Services.Client.DataServiceContext>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Continuation">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceQueryContinuation&lt;T&gt; Continuation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Services.Client.DataServiceQueryContinuation`1&lt;!T&gt; Continuation" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceCollection`1.Continuation" />
      <MemberSignature Language="VB.NET" Value="Public Property Continuation As DataServiceQueryContinuation(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Services::Client::DataServiceQueryContinuation&lt;T&gt; ^ Continuation { System::Data::Services::Client::DataServiceQueryContinuation&lt;T&gt; ^ get(); void set(System::Data::Services::Client::DataServiceQueryContinuation&lt;T&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceQueryContinuation&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um objeto de continuação usado para retornar o próximo conjunto de resultados paginados.</summary>
        <value>Um objeto <see cref="T:System.Data.Services.Client.DataServiceQueryContinuation`1" /> que contém o URI para retornar o próximo conjunto de resultados paginados.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Data.Services.Client.DataServiceCollection%601.Continuation%2A> propriedade retorna um link que é usado para acessar o próximo conjunto de resultados paginados quando a paginação está habilitada no serviço de dados. Para obter mais informações, consulte [Configurando o serviço de dados](~/docs/framework/data/wcf/configuring-the-data-service-wcf-data-services.md).  
  
 Ao carregar um resultado paginável em um <xref:System.Data.Services.Client.DataServiceCollection%601>, você deve carregar páginas explicitamente chamando o <xref:System.Data.Services.Client.DataServiceCollection%601.Load%28System.Collections.Generic.IEnumerable%7B%600%7D%29> método no <xref:System.Data.Services.Client.DataServiceCollection%601> , passando o resultado da execução do URI que foi obtido o <xref:System.Data.Services.Client.DataServiceCollection%601.Continuation%2A> propriedade.  
  
   
  
## Examples  
 O exemplo a seguir é da página code-behind de uma página da linguagem XAML que define a janela `SalesOrders` no WPF. Quando a janela é carregada, um <xref:System.Data.Services.Client.DataServiceCollection%601> é criado com base no resultado de uma consulta que retorna clientes, filtrados por país. Todas as páginas deste resultado paginado são carregadas, juntamente com os pedidos relacionados, e associadas à propriedade <xref:System.Windows.FrameworkElement.DataContext%2A> do <xref:System.Windows.Controls.StackPanel> que é o controle do layout raiz da janela WPF. Para obter mais informações, consulte [como: associar dados aos elementos do Windows Presentation Foundation](~/docs/framework/data/wcf/bind-data-to-wpf-elements-wcf-data-services.md).  
  
 [!code-csharp[Astoria Northwind Client#BindPagedData](~/samples/snippets/csharp/VS_Snippets_Misc/astoria northwind client/cs/customerorderswpf3.xaml.cs#bindpageddata)]
 [!code-vb[Astoria Northwind Client#BindPagedData](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria northwind client/vb/customerorderswpf3.xaml.vb#bindpageddata)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Detach">
      <MemberSignature Language="C#" Value="public void Detach ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Detach() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.Detach" />
      <MemberSignature Language="VB.NET" Value="Public Sub Detach ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Detach();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Desabilita o acompanhamento de <see cref="T:System.Data.Services.Client.DataServiceContext" /> de todos os itens na coleção.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Data.Services.Client.DataServiceCollection%601.Detach%2A> método só pode ser chamado quando <xref:System.Data.Services.Client.DataServiceCollection%601> é a coleção raiz.  
  
 Quando o <xref:System.Data.Services.Client.DataServiceCollection%601.Detach%2A> método é chamado em uma coleção que é uma coleção de raiz, o controle também é interrompido para todos os objetos no gráfico de dados relacionados ao.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertItem">
      <MemberSignature Language="C#" Value="protected override void InsertItem (int index, T item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InsertItem(int32 index, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.InsertItem(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InsertItem (index As Integer, item As T)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InsertItem(int index, T item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="index">O índice no qual adicionar o item.</param>
        <param name="item">O item a ser adicionado.</param>
        <summary>Adiciona um item especificado à coleção no índice especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando você manualmente estiver controlando as alterações à coleção, você deve substituir o <xref:System.Data.Services.Client.DataServiceCollection%601.InsertItem%2A> método para impedir que itens sejam automaticamente adicionado à coleção.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Carrega as entidades na coleção.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Collections.Generic.IEnumerable&lt;T&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.Load(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (items As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Collections::Generic::IEnumerable&lt;T&gt; ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="items">Coleção de objetos de entidade a ser adicionada à <see cref="T:System.Data.Services.Client.DataServiceCollection`1" />.</param>
        <summary>Carrega uma coleção de objetos de entidade na coleção.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chamando o <xref:System.Data.Services.Client.DataServiceCollection%601.Load%2A> método anexa todos os objetos na coleção, se eles ainda não estejam anexados para o <xref:System.Data.Services.Client.DataServiceContext> que está associado a <xref:System.Data.Services.Client.DataServiceCollection%601>.  
  
 Quando um objeto é conectado usando o <xref:System.Data.Services.Client.DataServiceCollection%601.Load%2A> método, todas relacionadas também são associados a objetos.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.Load(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(T item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">O objeto de entidade a ser adicionado.</param>
        <summary>Carrega um único objeto de entidade na coleção.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chamando o <xref:System.Data.Services.Client.DataServiceCollection%601.Load%2A> método anexa o objeto, se ele já não está anexado para o <xref:System.Data.Services.Client.DataServiceContext> que está associado a <xref:System.Data.Services.Client.DataServiceCollection%601>.  
  
 Quando um objeto é conectado usando o <xref:System.Data.Services.Client.DataServiceCollection%601.Load%2A> método, todas relacionadas também são associados a objetos.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>