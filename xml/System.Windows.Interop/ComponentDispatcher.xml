<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ComponentDispatcher.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58c067685c2dbbcf8aa6b9cb1639c9f41d07b7466.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8c067685c2dbbcf8aa6b9cb1639c9f41d07b7466</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Interop.ComponentDispatcher">
          <source>Enables shared control of the message pump between Win32 and WPF in interoperation scenarios.</source>
          <target state="translated">Habilita o controle compartilhado da bomba de mensagens entre Win32 e WPF em cenários de interoperação.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.ComponentDispatcher">
          <source>Although the class itself is static, all members of <ph id="ph1">&lt;xref:System.Windows.Interop.ComponentDispatcher&gt;</ph> are specific to a particular thread.</source>
          <target state="translated">Embora a classe em si é estática, todos os membros de <ph id="ph1">&lt;xref:System.Windows.Interop.ComponentDispatcher&gt;</ph> são específicos para um determinado segmento.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.ComponentDispatcher">
          <source>For example, if you examine the value of <ph id="ph1">&lt;xref:System.Windows.Interop.ComponentDispatcher.IsThreadModal%2A&gt;</ph> on two different threads, you might get different values.</source>
          <target state="translated">Por exemplo, se você examinar o valor de <ph id="ph1">&lt;xref:System.Windows.Interop.ComponentDispatcher.IsThreadModal%2A&gt;</ph> em dois threads diferentes, você pode obter valores diferentes.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.ComponentDispatcher">
          <source>The methods are static but they are backed by per-thread data structures.</source>
          <target state="translated">Os métodos são estáticos, mas eles contam com estruturas de dados por thread.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.ComponentDispatcher">
          <source>The static methods allow singleton access but the <ph id="ph1">&lt;xref:System.Windows.Interop.ComponentDispatcher&gt;</ph> is sorting out the appropriate per-thread operations.</source>
          <target state="translated">Os métodos estáticos permitem o acesso de singleton, mas o <ph id="ph1">&lt;xref:System.Windows.Interop.ComponentDispatcher&gt;</ph> é a classificação de operações apropriado por thread.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.ComponentDispatcher">
          <source>The owner of the message pump is defined by the code that calls the <ph id="ph1">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph> function  <bpt id="p1">[</bpt>GetMessage<ept id="p1">](http://msdn.microsoft.com/library/ms644936.aspx)</ept>.</source>
          <target state="translated">O proprietário da bomba de mensagens é definido pelo código que chama o <ph id="ph1">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph> função <bpt id="p1">[</bpt>GetMessage<ept id="p1">](http://msdn.microsoft.com/library/ms644936.aspx)</ept>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.ComponentDispatcher">
          <source>The owner calls <ph id="ph1">&lt;xref:System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage%2A&gt;</ph> for every keyboard message.</source>
          <target state="translated">As chamadas de proprietário <ph id="ph1">&lt;xref:System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage%2A&gt;</ph> para cada mensagem do teclado.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.ComponentDispatcher">
          <source>This method raises the <ph id="ph1">&lt;xref:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage&gt;</ph> event with the messages contained in the event data.</source>
          <target state="translated">Este método gera o <ph id="ph1">&lt;xref:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage&gt;</ph> eventos com as mensagens de eventos continham dados.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.ComponentDispatcher">
          <source>If that event is not handled, the owner raises the <ph id="ph1">&lt;xref:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage&gt;</ph> event with the messages contained in the event argument.</source>
          <target state="translated">Se esse evento não é tratado, o proprietário gera o <ph id="ph1">&lt;xref:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage&gt;</ph> eventos com as mensagens de eventos contidos argumento.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.ComponentDispatcher">
          <source>Only keyboard messages are supported.</source>
          <target state="translated">Há suporte para apenas as mensagens do teclado.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.ComponentDispatcher">
          <source>to access any member of this class.</source>
          <target state="translated">para acessar qualquer membro dessa classe.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.ComponentDispatcher">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="P:System.Windows.Interop.ComponentDispatcher.CurrentKeyboardMessage">
          <source>Gets the last message that was raised.</source>
          <target state="translated">Obtém a última mensagem que foi gerada.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.ComponentDispatcher.CurrentKeyboardMessage">
          <source>The last message.</source>
          <target state="translated">A última mensagem.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.ComponentDispatcher.CurrentKeyboardMessage">
          <source>to access any member of this class.</source>
          <target state="translated">para acessar qualquer membro dessa classe.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.ComponentDispatcher.CurrentKeyboardMessage">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="E:System.Windows.Interop.ComponentDispatcher.EnterThreadModal">
          <source>Occurs when a thread becomes modal.</source>
          <target state="translated">Ocorre quando um thread torna-se modal.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Interop.ComponentDispatcher.EnterThreadModal">
          <source>to access any member of this class.</source>
          <target state="translated">para acessar qualquer membro dessa classe.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Interop.ComponentDispatcher.EnterThreadModal">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.Windows.Interop.ComponentDispatcher.IsThreadModal">
          <source>Gets a value that indicates whether the thread is modal.</source>
          <target state="translated">Obtém um valor que indica se o thread é modal.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.ComponentDispatcher.IsThreadModal">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the thread is modal; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o thread for modal; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.ComponentDispatcher.IsThreadModal">
          <source>to access any member of this class.</source>
          <target state="translated">para acessar qualquer membro dessa classe.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.ComponentDispatcher.IsThreadModal">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="E:System.Windows.Interop.ComponentDispatcher.LeaveThreadModal">
          <source>Occurs when a modal thread becomes nonmodal.</source>
          <target state="translated">Ocorre quando um thread modal torna-se não modal.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Interop.ComponentDispatcher.LeaveThreadModal">
          <source>to access any member of this class.</source>
          <target state="translated">para acessar qualquer membro dessa classe.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Interop.ComponentDispatcher.LeaveThreadModal">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.ComponentDispatcher.PopModal">
          <source>Called to indicate that a modal thread is no longer modal.</source>
          <target state="translated">Chamado para indicar que um thread modal não é mais modal.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.ComponentDispatcher.PopModal">
          <source>to access any member of this class.</source>
          <target state="translated">para acessar qualquer membro dessa classe.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.ComponentDispatcher.PopModal">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.ComponentDispatcher.PushModal">
          <source>Called to indicate that the thread is modal.</source>
          <target state="translated">Chamado para indicar que o thread é modal.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.ComponentDispatcher.PushModal">
          <source>All members of this class require <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph> permission.</source>
          <target state="translated">Todos os membros dessa classe exigem <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph> permissão.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.ComponentDispatcher.RaiseIdle">
          <source>Called to indicate that a thread is idle.</source>
          <target state="translated">Chamado para indicar que um thread está ocioso.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.ComponentDispatcher.RaiseIdle">
          <source>to access any member of this class.</source>
          <target state="translated">para acessar qualquer membro dessa classe.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.ComponentDispatcher.RaiseIdle">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage(System.Windows.Interop.MSG@)">
          <source>The message and its associated data.</source>
          <target state="translated">A mensagem e seus dados associados.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage(System.Windows.Interop.MSG@)">
          <source>Indicates that a new message is available for possible handling.</source>
          <target state="translated">Indica que uma nova mensagem está disponível para possível manipulação.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage(System.Windows.Interop.MSG@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph>, if one of the modules listening to the message loop processed the message.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, se um dos módulos que escutam o loop de mensagens processou a mensagem.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage(System.Windows.Interop.MSG@)">
          <source>The owner of the message loop should ignore the message.</source>
          <target state="translated">O proprietário do loop de mensagens deve ignorar a mensagem.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage(System.Windows.Interop.MSG@)">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph>, if the message was not processed.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="false" /&gt;</ph>, se a mensagem não foi processada.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage(System.Windows.Interop.MSG@)">
          <source>In this case, the owner of the message pump should call the <ph id="ph1">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph> function <bpt id="p1">[</bpt>TranslateMessage<ept id="p1">](http://msdn.microsoft.com/library/ms644955.aspx)</ept> followed by <bpt id="p2">[</bpt>DispatchMessage<ept id="p2">](http://msdn.microsoft.com/library/ms644934.aspx)</ept>.</source>
          <target state="translated">Nesse caso, o proprietário da bomba de mensagens deve chamar a função <ph id="ph1">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph> <bpt id="p1">[</bpt>TranslateMessage<ept id="p1">](http://msdn.microsoft.com/library/ms644955.aspx)</ept> seguida por <bpt id="p2">[</bpt>DispatchMessage<ept id="p2">](http://msdn.microsoft.com/library/ms644934.aspx)</ept>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage(System.Windows.Interop.MSG@)">
          <source>The owner of the message pump should call this method for every keyboard message.</source>
          <target state="translated">O proprietário da bomba de mensagens deve chamar esse método para cada mensagem do teclado.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage(System.Windows.Interop.MSG@)">
          <source>to access any member of this class.</source>
          <target state="translated">para acessar qualquer membro dessa classe.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage(System.Windows.Interop.MSG@)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="E:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage">
          <source>Occurs when the message pump receives a keyboard message.</source>
          <target state="translated">Ocorre quando a bomba de mensagens recebe uma mensagem do teclado.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage">
          <source>to access any member of this class.</source>
          <target state="translated">para acessar qualquer membro dessa classe.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="E:System.Windows.Interop.ComponentDispatcher.ThreadIdle">
          <source>Occurs when the thread is idle.</source>
          <target state="translated">Ocorre quando o thread está ocioso.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Interop.ComponentDispatcher.ThreadIdle">
          <source>If there are no messages in the queue, then the idle state announced by the <ph id="ph1">&lt;xref:System.Windows.Interop.ComponentDispatcher.ThreadIdle&gt;</ph> event is an efficient time to do processing.</source>
          <target state="translated">Se não existem mensagens na fila, o estado ocioso anunciado pelo <ph id="ph1">&lt;xref:System.Windows.Interop.ComponentDispatcher.ThreadIdle&gt;</ph> evento é um eficiente tempo para fazer o processamento.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Interop.ComponentDispatcher.ThreadIdle">
          <source>to access any member of this class.</source>
          <target state="translated">para acessar qualquer membro dessa classe.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Interop.ComponentDispatcher.ThreadIdle">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="E:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage">
          <source>Occurs when the message pump receives a keyboard message.</source>
          <target state="translated">Ocorre quando a bomba de mensagens recebe uma mensagem do teclado.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage">
          <source>This event should be raised after <ph id="ph1">&lt;xref:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage&gt;</ph>, if that event is not handled.</source>
          <target state="translated">Esse evento deve ser gerado após <ph id="ph1">&lt;xref:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage&gt;</ph>, se esse evento não é tratado.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage">
          <source>to access any member of this class.</source>
          <target state="translated">para acessar qualquer membro dessa classe.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>