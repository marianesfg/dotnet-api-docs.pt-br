<Type Name="DynamicScriptObject" FullName="System.Windows.Interop.DynamicScriptObject">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="902affa6e8e9e1f94657d7bcf477e04930557ffb" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36504059" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DynamicScriptObject : System.Dynamic.DynamicObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DynamicScriptObject extends System.Dynamic.DynamicObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Interop.DynamicScriptObject" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DynamicScriptObject&#xA;Inherits DynamicObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class DynamicScriptObject sealed : System::Dynamic::DynamicObject" />
  <TypeSignature Language="F#" Value="type DynamicScriptObject = class&#xA;    inherit DynamicObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Dynamic.DynamicObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="f6a32-101">Permite chamadas de um XBAP (aplicativo de navegador XAML) para uma janela HTML que hospeda o aplicativo.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f6a32-101">Enables calls from a XAML browser application (XBAP) to the HTML window that hosts the application.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6a32-102">As instâncias dessa classe são expostas por meio de <xref:System.Windows.Interop.BrowserInteropHelper.HostScript%2A> propriedade <xref:System.Windows.Interop.BrowserInteropHelper>.</span><span class="sxs-lookup"><span data-stu-id="f6a32-102">Instances of this class are exposed through the <xref:System.Windows.Interop.BrowserInteropHelper.HostScript%2A> property of <xref:System.Windows.Interop.BrowserInteropHelper>.</span></span>  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.DynamicScriptObject.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="abstract member ToString : unit -&gt; string&#xA;override this.ToString : unit -&gt; string" Usage="dynamicScriptObject.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f6a32-103">Tenta converter o objeto de script em uma representação de cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6a32-103">Attempts to convert the script object to a string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f6a32-104">Uma representação de cadeia de caracteres do objeto de script, se o objeto pode ser convertido, caso contrário, uma representação de cadeia de caracteres do método ou propriedade padrão do objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6a32-104">A string representation of the script object, if the object can be converted; otherwise, a string representation of the object's default property or method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6a32-105">Se o objeto de script não pode ser convertido em uma cadeia de caracteres, o <xref:System.Windows.Interop.DynamicScriptObject.ToString%2A> método retorna uma representação de cadeia de caracteres de padrão de propriedade ou método.</span><span class="sxs-lookup"><span data-stu-id="f6a32-105">If the script object cannot be converted to a string, the <xref:System.Windows.Interop.DynamicScriptObject.ToString%2A> method returns a string representation of the default property or method.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="TryGetIndex">
      <MemberSignature Language="C#" Value="public override bool TryGetIndex (System.Dynamic.GetIndexBinder binder, object[] indexes, out object result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool TryGetIndex(class System.Dynamic.GetIndexBinder binder, object[] indexes, [out] object&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.DynamicScriptObject.TryGetIndex(System.Dynamic.GetIndexBinder,System.Object[],System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function TryGetIndex (binder As GetIndexBinder, indexes As Object(), ByRef result As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool TryGetIndex(System::Dynamic::GetIndexBinder ^ binder, cli::array &lt;System::Object ^&gt; ^ indexes, [Runtime::InteropServices::Out] System::Object ^ % result);" />
      <MemberSignature Language="F#" Value="abstract member TryGetIndex : System.Dynamic.GetIndexBinder * obj[] *  -&gt; bool&#xA;override this.TryGetIndex : System.Dynamic.GetIndexBinder * obj[] *  -&gt; bool" Usage="dynamicScriptObject.TryGetIndex (binder, indexes, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binder" Type="System.Dynamic.GetIndexBinder" />
        <Parameter Name="indexes" Type="System.Object[]" />
        <Parameter Name="result" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="binder">
          <span data-ttu-id="f6a32-106">O associador fornecido pelo site de chamada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6a32-106">The binder provided by the call site.</span>
          </span>
        </param>
        <param name="indexes">
          <span data-ttu-id="f6a32-107">O índice a ser recuperado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6a32-107">The index to be retrieved.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="f6a32-108">O resultado do método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6a32-108">The method result.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f6a32-109">Obtém um valor indexado do objeto de script usando o primeiro valor de índice da coleção <paramref name="indexes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6a32-109">Gets an indexed value from the script object by using the first index value from the <paramref name="indexes" /> collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f6a32-110">Sempre retorna <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6a32-110">Always returns <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6a32-111">O <xref:System.Windows.Interop.DynamicScriptObject.TryGetIndex%2A> método lançará uma exceção se uma tentativa de um acesso inválido.</span><span class="sxs-lookup"><span data-stu-id="f6a32-111">The <xref:System.Windows.Interop.DynamicScriptObject.TryGetIndex%2A> method throws an exception if an invalid access is attempted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f6a32-112">
            <paramref name="binder" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6a32-112">
              <paramref name="binder" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="f6a32-113">-ou-  <paramref name="indexes" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6a32-113">-or-  <paramref name="indexes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f6a32-114">O tamanho de <paramref name="indexes" /> não é igual a 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6a32-114">The length of <paramref name="indexes" /> is not equal to 1.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f6a32-115">O primeiro valor <paramref name="indexes" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6a32-115">The first <paramref name="indexes" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMemberException">
          <span data-ttu-id="f6a32-116">O membro não existe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6a32-116">The member does not exist.</span>
          </span>
        </exception>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="TryGetMember">
      <MemberSignature Language="C#" Value="public override bool TryGetMember (System.Dynamic.GetMemberBinder binder, out object result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool TryGetMember(class System.Dynamic.GetMemberBinder binder, [out] object&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.DynamicScriptObject.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function TryGetMember (binder As GetMemberBinder, ByRef result As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool TryGetMember(System::Dynamic::GetMemberBinder ^ binder, [Runtime::InteropServices::Out] System::Object ^ % result);" />
      <MemberSignature Language="F#" Value="abstract member TryGetMember : System.Dynamic.GetMemberBinder *  -&gt; bool&#xA;override this.TryGetMember : System.Dynamic.GetMemberBinder *  -&gt; bool" Usage="dynamicScriptObject.TryGetMember (binder, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binder" Type="System.Dynamic.GetMemberBinder" />
        <Parameter Name="result" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="binder">
          <span data-ttu-id="f6a32-117">O associador fornecido pelo site de chamada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6a32-117">The binder provided by the call site.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="f6a32-118">O resultado do método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6a32-118">The method result.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f6a32-119">Obtém um valor de membro do objeto de script.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6a32-119">Gets an member value from the script object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f6a32-120">Sempre retorna <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6a32-120">Always returns <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6a32-121">O <xref:System.Windows.Interop.DynamicScriptObject.TryGetMember%2A> método lançará uma exceção se uma tentativa de um acesso inválido.</span><span class="sxs-lookup"><span data-stu-id="f6a32-121">The <xref:System.Windows.Interop.DynamicScriptObject.TryGetMember%2A> method throws an exception if an invalid access is attempted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f6a32-122">
            <paramref name="binder" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6a32-122">
              <paramref name="binder" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMemberException">
          <span data-ttu-id="f6a32-123">O membro não existe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6a32-123">The member does not exist.</span>
          </span>
        </exception>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="TryInvoke">
      <MemberSignature Language="C#" Value="public override bool TryInvoke (System.Dynamic.InvokeBinder binder, object[] args, out object result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool TryInvoke(class System.Dynamic.InvokeBinder binder, object[] args, [out] object&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.DynamicScriptObject.TryInvoke(System.Dynamic.InvokeBinder,System.Object[],System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function TryInvoke (binder As InvokeBinder, args As Object(), ByRef result As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool TryInvoke(System::Dynamic::InvokeBinder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, [Runtime::InteropServices::Out] System::Object ^ % result);" />
      <MemberSignature Language="F#" Value="abstract member TryInvoke : System.Dynamic.InvokeBinder * obj[] *  -&gt; bool&#xA;override this.TryInvoke : System.Dynamic.InvokeBinder * obj[] *  -&gt; bool" Usage="dynamicScriptObject.TryInvoke (binder, args, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binder" Type="System.Dynamic.InvokeBinder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="result" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="binder">
          <span data-ttu-id="f6a32-124">O associador fornecido pelo site de chamada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6a32-124">The binder provided by the call site.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="f6a32-125">Os argumentos a serem passados para o método de padrão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6a32-125">The arguments to pass to the default method.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="f6a32-126">O resultado do método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6a32-126">The method result.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f6a32-127">Chama o método de script padrão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6a32-127">Calls the default script method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f6a32-128">Sempre retorna <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6a32-128">Always return <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6a32-129">O <xref:System.Windows.Interop.DynamicScriptObject.TryInvoke%2A> método lançará uma exceção se o método não existe.</span><span class="sxs-lookup"><span data-stu-id="f6a32-129">The <xref:System.Windows.Interop.DynamicScriptObject.TryInvoke%2A> method throws an exception if the method does not exist.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f6a32-130">
            <paramref name="binder" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6a32-130">
              <paramref name="binder" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="f6a32-131">O método não existe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6a32-131">The method does not exist.</span>
          </span>
        </exception>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="TryInvokeMember">
      <MemberSignature Language="C#" Value="public override bool TryInvokeMember (System.Dynamic.InvokeMemberBinder binder, object[] args, out object result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool TryInvokeMember(class System.Dynamic.InvokeMemberBinder binder, object[] args, [out] object&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.DynamicScriptObject.TryInvokeMember(System.Dynamic.InvokeMemberBinder,System.Object[],System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function TryInvokeMember (binder As InvokeMemberBinder, args As Object(), ByRef result As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool TryInvokeMember(System::Dynamic::InvokeMemberBinder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, [Runtime::InteropServices::Out] System::Object ^ % result);" />
      <MemberSignature Language="F#" Value="abstract member TryInvokeMember : System.Dynamic.InvokeMemberBinder * obj[] *  -&gt; bool&#xA;override this.TryInvokeMember : System.Dynamic.InvokeMemberBinder * obj[] *  -&gt; bool" Usage="dynamicScriptObject.TryInvokeMember (binder, args, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binder" Type="System.Dynamic.InvokeMemberBinder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="result" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="binder">
          <span data-ttu-id="f6a32-132">O associador fornecido pelo site de chamada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6a32-132">The binder provided by the call site.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="f6a32-133">Os argumentos a serem passados para o método de padrão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6a32-133">The arguments to pass to the default method.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="f6a32-134">O resultado do método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6a32-134">The method result.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f6a32-135">Chama um método no objeto de script.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6a32-135">Calls a method on the script object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f6a32-136">Sempre retorna <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6a32-136">Always return <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6a32-137">O <xref:System.Windows.Interop.DynamicScriptObject.TryInvokeMember%2A> método lançará uma exceção se uma tentativa de um acesso inválido.</span><span class="sxs-lookup"><span data-stu-id="f6a32-137">The <xref:System.Windows.Interop.DynamicScriptObject.TryInvokeMember%2A> method throws an exception if an invalid access is attempted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f6a32-138">
            <paramref name="binder" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6a32-138">
              <paramref name="binder" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="f6a32-139">O método não existe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6a32-139">The method does not exist.</span>
          </span>
        </exception>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="TrySetIndex">
      <MemberSignature Language="C#" Value="public override bool TrySetIndex (System.Dynamic.SetIndexBinder binder, object[] indexes, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool TrySetIndex(class System.Dynamic.SetIndexBinder binder, object[] indexes, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.DynamicScriptObject.TrySetIndex(System.Dynamic.SetIndexBinder,System.Object[],System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function TrySetIndex (binder As SetIndexBinder, indexes As Object(), value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool TrySetIndex(System::Dynamic::SetIndexBinder ^ binder, cli::array &lt;System::Object ^&gt; ^ indexes, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member TrySetIndex : System.Dynamic.SetIndexBinder * obj[] * obj -&gt; bool&#xA;override this.TrySetIndex : System.Dynamic.SetIndexBinder * obj[] * obj -&gt; bool" Usage="dynamicScriptObject.TrySetIndex (binder, indexes, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binder" Type="System.Dynamic.SetIndexBinder" />
        <Parameter Name="indexes" Type="System.Object[]" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="binder">
          <span data-ttu-id="f6a32-140">O associador fornecido pelo site de chamada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6a32-140">The binder provided by the call site.</span>
          </span>
        </param>
        <param name="indexes">
          <span data-ttu-id="f6a32-141">O índice a ser recuperado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6a32-141">The index to be retrieved.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="f6a32-142">O resultado do método</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6a32-142">The method result</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f6a32-143">Define um membro no objeto de script usando o primeiro índice especificado na coleção <paramref name="indexes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6a32-143">Sets a member on the script object by using the first index specified in the <paramref name="indexes" /> collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f6a32-144">Sempre retorna <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6a32-144">Always returns <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6a32-145">O <xref:System.Windows.Interop.DynamicScriptObject.TrySetIndex%2A> método lançará uma exceção se uma tentativa de um acesso inválido.</span><span class="sxs-lookup"><span data-stu-id="f6a32-145">The <xref:System.Windows.Interop.DynamicScriptObject.TrySetIndex%2A> method throws an exception if an invalid access is attempted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f6a32-146">
            <paramref name="binder" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6a32-146">
              <paramref name="binder" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="f6a32-147">-ou-  <paramref name="indexes" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6a32-147">-or-  <paramref name="indexes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f6a32-148">O tamanho de <paramref name="indexes" /> não é igual a 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6a32-148">The length of <paramref name="indexes" /> is not equal to 1.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f6a32-149">O primeiro valor <paramref name="indexes" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6a32-149">The first <paramref name="indexes" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMemberException">
          <span data-ttu-id="f6a32-150">O membro não existe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6a32-150">The member does not exist.</span>
          </span>
        </exception>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="TrySetMember">
      <MemberSignature Language="C#" Value="public override bool TrySetMember (System.Dynamic.SetMemberBinder binder, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool TrySetMember(class System.Dynamic.SetMemberBinder binder, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.DynamicScriptObject.TrySetMember(System.Dynamic.SetMemberBinder,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function TrySetMember (binder As SetMemberBinder, value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool TrySetMember(System::Dynamic::SetMemberBinder ^ binder, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member TrySetMember : System.Dynamic.SetMemberBinder * obj -&gt; bool&#xA;override this.TrySetMember : System.Dynamic.SetMemberBinder * obj -&gt; bool" Usage="dynamicScriptObject.TrySetMember (binder, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binder" Type="System.Dynamic.SetMemberBinder" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="binder">
          <span data-ttu-id="f6a32-151">O associador fornecido pelo site de chamada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6a32-151">The binder provided by the call site.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="f6a32-152">O valor a ser definido para o membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6a32-152">The value to set for the member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f6a32-153">Define um membro no objeto de script para o valor especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6a32-153">Sets a member on the script object to the specified value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f6a32-154">Sempre retorna <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6a32-154">Always returns <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6a32-155">O <xref:System.Windows.Interop.DynamicScriptObject.TrySetMember%2A> método lançará uma exceção se uma tentativa de um acesso inválido.</span><span class="sxs-lookup"><span data-stu-id="f6a32-155">The <xref:System.Windows.Interop.DynamicScriptObject.TrySetMember%2A> method throws an exception if an invalid access is attempted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f6a32-156">
            <paramref name="binder" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6a32-156">
              <paramref name="binder" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="f6a32-157">-ou-  <paramref name="indexes" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6a32-157">-or-  <paramref name="indexes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f6a32-158">O tamanho de <paramref name="indexes" /> não é igual a 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6a32-158">The length of <paramref name="indexes" /> is not equal to 1.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f6a32-159">O primeiro valor <paramref name="indexes" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6a32-159">The first <paramref name="indexes" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMemberException">
          <span data-ttu-id="f6a32-160">O membro não existe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6a32-160">The member does not exist.</span>
          </span>
        </exception>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>