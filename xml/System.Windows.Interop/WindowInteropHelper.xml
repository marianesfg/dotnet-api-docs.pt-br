<Type Name="WindowInteropHelper" FullName="System.Windows.Interop.WindowInteropHelper">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e8bf47a7484d17929551fde05bf833d7fe82b153" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36503613" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class WindowInteropHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WindowInteropHelper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Interop.WindowInteropHelper" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WindowInteropHelper" />
  <TypeSignature Language="C++ CLI" Value="public ref class WindowInteropHelper sealed" />
  <TypeSignature Language="F#" Value="type WindowInteropHelper = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="bfb72-101">Assists interoperation between Windows Presentation Foundation (WPF) and Win32 code.</span>
      <span class="sxs-lookup">
        <span data-stu-id="bfb72-101">Assists interoperation between Windows Presentation Foundation (WPF) and Win32 code.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfb72-102">Membros dessa classe permite que o chamador tenha acesso interno para o [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] HWND e o HWND pai de um [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <xref:System.Windows.Window>.</span><span class="sxs-lookup"><span data-stu-id="bfb72-102">Members of this class allows the caller to have internal access to the [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] HWND and the parent HWND of a [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <xref:System.Windows.Window>.</span></span>  <span data-ttu-id="bfb72-103">As verificações de segurança apropriadas são realizadas pelos membros.</span><span class="sxs-lookup"><span data-stu-id="bfb72-103">The proper security checks are performed by those members.</span></span>  
  
 <span data-ttu-id="bfb72-104">Use essa classe, sempre que você precisa de um objeto mais específico com base em HWND.</span><span class="sxs-lookup"><span data-stu-id="bfb72-104">Use this class whenever you need a more specific object based on its HWND.</span></span>  
  
 <span data-ttu-id="bfb72-105">Um cenário de exemplo é se você precisa hospedar um [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] da caixa de diálogo um [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] aplicativo.</span><span class="sxs-lookup"><span data-stu-id="bfb72-105">An example scenario is if you need to host a [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] dialog box in a [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] application.</span></span> <span data-ttu-id="bfb72-106">Inicializar o <xref:System.Windows.Interop.WindowInteropHelper> com um [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] objeto window para a caixa de diálogo.</span><span class="sxs-lookup"><span data-stu-id="bfb72-106">Initialize the <xref:System.Windows.Interop.WindowInteropHelper> with a [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] window object for the dialog box.</span></span> <span data-ttu-id="bfb72-107">Em seguida, você pode obter o [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] identificador de janela (HWND) do <xref:System.Windows.Interop.WindowInteropHelper.Handle%2A> propriedade e especifique o proprietário do [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] janela com o <xref:System.Windows.Interop.WindowInteropHelper.Owner%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="bfb72-107">You can then get the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] window's handle (HWND) from the <xref:System.Windows.Interop.WindowInteropHelper.Handle%2A> property and specify the owner for the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] window with the <xref:System.Windows.Interop.WindowInteropHelper.Owner%2A> property.</span></span> <span data-ttu-id="bfb72-108">O exemplo de código a seguir mostra como usar <xref:System.Windows.Interop.WindowInteropHelper> ao hospedar um [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] da caixa de diálogo um [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] aplicativo.</span><span class="sxs-lookup"><span data-stu-id="bfb72-108">The following code example shows how to use <xref:System.Windows.Interop.WindowInteropHelper> when hosting a [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] dialog box in a [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] application.</span></span>  
  
 [!code-csharp[CorePseudocode#WindowInteropHelper](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/corepseudocode.cs#windowinterophelper)]
 [!code-vb[CorePseudocode#WindowInteropHelper](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CorePseudocode/visualbasic/corepseudocode.vb#windowinterophelper)]  
  
 <span data-ttu-id="bfb72-109">Outro cenário suportado por esta classe é obter um <xref:System.Windows.Interop.HwndSource> de objeto um [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <xref:System.Windows.Window> objeto.</span><span class="sxs-lookup"><span data-stu-id="bfb72-109">Another scenario supported by this class is to obtain a <xref:System.Windows.Interop.HwndSource> object from a [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <xref:System.Windows.Window> object.</span></span> <span data-ttu-id="bfb72-110">O <xref:System.Windows.Interop.HwndSource> permite direcionar o processamento de [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] mensagens por meio de <xref:System.Windows.Interop.HwndSource.AddHook%2A> método.</span><span class="sxs-lookup"><span data-stu-id="bfb72-110">The <xref:System.Windows.Interop.HwndSource> enables direct processing of [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] messages through the <xref:System.Windows.Interop.HwndSource.AddHook%2A> method.</span></span> <span data-ttu-id="bfb72-111">Usando <xref:System.Windows.Interop.HwndSource> e <xref:System.Windows.Interop.HwndSource.AddHook%2A> no lugar de um <xref:System.Windows.Window> você ainda pode manipular mensagens não equivalente ou manipulação em [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)].</span><span class="sxs-lookup"><span data-stu-id="bfb72-111">By using <xref:System.Windows.Interop.HwndSource> and <xref:System.Windows.Interop.HwndSource.AddHook%2A> in place of a <xref:System.Windows.Window> you can still handle messages that have no equivalent or handling in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)].</span></span> <span data-ttu-id="bfb72-112">Criar um <xref:System.Windows.Interop.WindowInteropHelper> com o <xref:System.Windows.Window> de origem, em seguida, chame <xref:System.Windows.Interop.WindowInteropHelper.Handle%2A> no <xref:System.Windows.Interop.WindowInteropHelper> obter de HWND para <xref:System.Windows.Interop.HwndSource>.</span><span class="sxs-lookup"><span data-stu-id="bfb72-112">Create a <xref:System.Windows.Interop.WindowInteropHelper> with the <xref:System.Windows.Window> source, then call <xref:System.Windows.Interop.WindowInteropHelper.Handle%2A> on the <xref:System.Windows.Interop.WindowInteropHelper> to get from HWND to <xref:System.Windows.Interop.HwndSource>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Window" />
    <altmember cref="T:System.Windows.Interop.HwndSource" />
    <altmember cref="M:System.Windows.Interop.HwndSource.AddHook(System.Windows.Interop.HwndSourceHook)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowInteropHelper (System.Windows.Window window);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Window window) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.WindowInteropHelper.#ctor(System.Windows.Window)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowInteropHelper(System::Windows::Window ^ window);" />
      <MemberSignature Language="F#" Value="new System.Windows.Interop.WindowInteropHelper : System.Windows.Window -&gt; System.Windows.Interop.WindowInteropHelper" Usage="new System.Windows.Interop.WindowInteropHelper window" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="window" Type="System.Windows.Window" />
      </Parameters>
      <Docs>
        <param name="window">
          <span data-ttu-id="bfb72-113">A [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] window object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfb72-113">A [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] window object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfb72-114">Initializes a new instance of the <see cref="T:System.Windows.Interop.WindowInteropHelper" /> class for a specified [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] window.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfb72-114">Initializes a new instance of the <see cref="T:System.Windows.Interop.WindowInteropHelper" /> class for a specified [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] window.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfb72-115">A janela pode ser uma caixa de diálogo ou uma janela que não é adequada para que está sendo hospedado dentro dos limites do caso contrário, um [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] aplicativo.</span><span class="sxs-lookup"><span data-stu-id="bfb72-115">The window can be a dialog box, or a window that is otherwise not suitable for being hosted within the bounds of a [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] application.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureHandle">
      <MemberSignature Language="C#" Value="public IntPtr EnsureHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance native int EnsureHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.WindowInteropHelper.EnsureHandle" />
      <MemberSignature Language="VB.NET" Value="Public Function EnsureHandle () As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntPtr EnsureHandle();" />
      <MemberSignature Language="F#" Value="member this.EnsureHandle : unit -&gt; nativeint" Usage="windowInteropHelper.EnsureHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bfb72-116">Creates the HWND of the window if the HWND has not been created yet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfb72-116">Creates the HWND of the window if the HWND has not been created yet.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfb72-117">An <see cref="T:System.IntPtr" /> that represents the HWND.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfb72-117">An <see cref="T:System.IntPtr" /> that represents the HWND.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfb72-118">Use o <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> método quando quiser separar a criação do identificador (HWND) de janela de mostrando o real de gerenciado <xref:System.Windows.Window>.</span><span class="sxs-lookup"><span data-stu-id="bfb72-118">Use the <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> method when you want to separate window handle (HWND) creation from the actual showing of the managed <xref:System.Windows.Window>.</span></span> <span data-ttu-id="bfb72-119">Isso é útil quando você tem um cliente de automação que pode realizar suas tarefas sem a necessidade de mostrar uma janela.</span><span class="sxs-lookup"><span data-stu-id="bfb72-119">This is useful when you have an automation client that can accomplish its tasks without the need for showing a window.</span></span>  
  
 <span data-ttu-id="bfb72-120">Se a janela nativo ainda não tiver sido criada, esse método cria a janela nativo, conjuntos de <xref:System.Windows.Interop.WindowInteropHelper.Handle%2A> propriedade e retorna o HWND.</span><span class="sxs-lookup"><span data-stu-id="bfb72-120">If the native window has not yet been created, this method creates the native window, sets the <xref:System.Windows.Interop.WindowInteropHelper.Handle%2A> property, and returns the HWND.</span></span> <span data-ttu-id="bfb72-121">Se a janela nativo já foi criada, o identificador da janela existente nativo é retornado.</span><span class="sxs-lookup"><span data-stu-id="bfb72-121">If the native window has been created already, the handle of the existing native window is returned.</span></span>  
  
 <span data-ttu-id="bfb72-122">Se a janela nativo é criada como resultado de chamar esse método, o <xref:System.Windows.Window.SourceInitialized> é gerado.</span><span class="sxs-lookup"><span data-stu-id="bfb72-122">If the native window is created as a result of calling this method, the <xref:System.Windows.Window.SourceInitialized> event is raised.</span></span>  
  
 <span data-ttu-id="bfb72-123">Consultando o <xref:System.Windows.Interop.WindowInteropHelper.Handle%2A> propriedade após o <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> é chamado de método retorna o identificador de janela existente.</span><span class="sxs-lookup"><span data-stu-id="bfb72-123">Querying the <xref:System.Windows.Interop.WindowInteropHelper.Handle%2A> property after the <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> method is called returns the existing window handle.</span></span> <span data-ttu-id="bfb72-124">A árvore visual não está anexada a janela até após o <xref:System.Windows.Window.Show%2A> método é chamado.</span><span class="sxs-lookup"><span data-stu-id="bfb72-124">The visual tree is not attached to the window until after the <xref:System.Windows.Window.Show%2A> method is called.</span></span>  
  
 <span data-ttu-id="bfb72-125">Chamar o <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> método mais de uma vez não cria novos identificadores de janela.</span><span class="sxs-lookup"><span data-stu-id="bfb72-125">Calling the <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> method more than one time does not create new window handles.</span></span> <span data-ttu-id="bfb72-126">Chamando o <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> método quando o identificador já foi criado por uma chamada para o <xref:System.Windows.Window.Show%2A> método não cria um novo identificador de janela.</span><span class="sxs-lookup"><span data-stu-id="bfb72-126">Calling the <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> method when the handle has already been created by a call to the <xref:System.Windows.Window.Show%2A> method does not create a new window handle.</span></span> <span data-ttu-id="bfb72-127">Uma janela nativo é criada somente quando nenhum identificador existe quando o <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> método é chamado.</span><span class="sxs-lookup"><span data-stu-id="bfb72-127">A native window is only created when no handle exists when the <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> method is called.</span></span>  
  
 <span data-ttu-id="bfb72-128">Propriedades da janela que são definidas usando APIs de janela nativo por meio de p/invoke não podem aparecer na janela gerenciada APIs.</span><span class="sxs-lookup"><span data-stu-id="bfb72-128">Window properties that are set by using native window APIs via p/invoke may not appear in the managed window APIs.</span></span> <span data-ttu-id="bfb72-129">Por exemplo, se você definir a janela para ser mais alto, usando o sinalizador MS_EX_TOPMOST nativo após o <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> método é chamado, o <xref:System.Windows.Window.Topmost%2A> propriedade não é garantida para refletir a configuração nativo.</span><span class="sxs-lookup"><span data-stu-id="bfb72-129">For example, if you set the window to be topmost by using the native MS_EX_TOPMOST flag after the <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> method is called, the <xref:System.Windows.Window.Topmost%2A> property is not guaranteed to reflect the native setting.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="bfb72-130">para criar e acessar um identificador de janela.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfb72-130">to create and access a window handle.</span>
          </span>
          <span data-ttu-id="bfb72-131">Enumeração associada: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="bfb72-131">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.WindowInteropHelper.Handle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Handle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr Handle { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.Handle : nativeint" Usage="System.Windows.Interop.WindowInteropHelper.Handle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bfb72-132">Gets the window handle for a [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] window that is used to create this <see cref="T:System.Windows.Interop.WindowInteropHelper" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfb72-132">Gets the window handle for a [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] window that is used to create this <see cref="T:System.Windows.Interop.WindowInteropHelper" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bfb72-133">O [! Identificador de janela include[TLA#tla_winclient](~/Includes/tlasharptla-winclient-MD.MD)] (HWND).</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfb72-133">The [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] window handle (HWND).</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="bfb72-134">Para obter um identificador de janela.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfb72-134">to obtain a window handle.</span>
          </span>
          <span data-ttu-id="bfb72-135">Enumeração associada: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="bfb72-135">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Windows.Window" />
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public IntPtr Owner { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Owner" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.WindowInteropHelper.Owner" />
      <MemberSignature Language="VB.NET" Value="Public Property Owner As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr Owner { IntPtr get(); void set(IntPtr value); };" />
      <MemberSignature Language="F#" Value="member this.Owner : nativeint with get, set" Usage="System.Windows.Interop.WindowInteropHelper.Owner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bfb72-136">Gets or sets the handle of the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] owner window.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfb72-136">Gets or sets the handle of the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] owner window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bfb72-137">O identificador de janela de proprietário (HWND).</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfb72-137">The owner window handle (HWND).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfb72-138">Você pode reassociar windows definindo essa propriedade.</span><span class="sxs-lookup"><span data-stu-id="bfb72-138">You can reparent windows by setting this property.</span></span> <span data-ttu-id="bfb72-139">Como é verdadeiro para geral [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] de programação, não reassociar windows que já estão em uso.</span><span class="sxs-lookup"><span data-stu-id="bfb72-139">As is true for general [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] programming, do not reparent windows that are already in use.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="bfb72-140">Para obter ou definir o valor dessa propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfb72-140">to get or set this property value.</span>
          </span>
          <span data-ttu-id="bfb72-141">Enumeração associada: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="bfb72-141">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Windows.Window" />
      </Docs>
    </Member>
  </Members>
</Type>