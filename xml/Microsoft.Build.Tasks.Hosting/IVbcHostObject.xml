<Type Name="IVbcHostObject" FullName="Microsoft.Build.Tasks.Hosting.IVbcHostObject">
  <Metadata><Meta Name="ms.openlocfilehash" Value="79ee24f21a9d057f77815d3502048150ee8cc201" /><Meta Name="ms.sourcegitcommit" Value="4ee26ac79338b0bf99fa1e0913e8a06b21994d8e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="03/26/2019" /><Meta Name="ms.locfileid" Value="58454982" /></Metadata><TypeSignature Language="C#" Value="public interface IVbcHostObject : Microsoft.Build.Framework.ITaskHost" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IVbcHostObject implements class Microsoft.Build.Framework.ITaskHost" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Tasks.Hosting.IVbcHostObject" />
  <TypeSignature Language="VB.NET" Value="Public Interface IVbcHostObject&#xA;Implements ITaskHost" />
  <TypeSignature Language="C++ CLI" Value="public interface class IVbcHostObject : Microsoft::Build::Framework::ITaskHost" />
  <TypeSignature Language="F#" Value="type IVbcHostObject = interface&#xA;    interface ITaskHost" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.ITaskHost</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("7D7AC3BE-253A-40e8-A3FF-357D0DA7C47A")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2b5e9-101">Define uma interface que permite que a tarefa <see href="https://msdn.microsoft.com/library/595278b1-2782-4577-b1ba-b4b5ab5625a3">Vbc</see> se comunique com o IDE (ambiente de desenvolvimento integrado) do host.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-101">Defines an interface that allows the <see href="https://msdn.microsoft.com/library/595278b1-2782-4577-b1ba-b4b5ab5625a3">Vbc</see> task to communicate with the host integrated development environment (IDE).</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b5e9-102">Essa interface permite que o `Vbc` tarefa para delegar a IDE em vez de usar compiladores de linha de comando de compilação do projeto.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-102">This interface allows the `Vbc` task to delegate project compilation to the IDE rather than using command line compilers.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BeginInitialization">
      <MemberSignature Language="C#" Value="public void BeginInitialization ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginInitialization() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.BeginInitialization" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginInitialization ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginInitialization();" />
      <MemberSignature Language="F#" Value="abstract member BeginInitialization : unit -&gt; unit" Usage="iVbcHostObject.BeginInitialization " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2b5e9-103">Começa a inicialização do <see cref="T:Microsoft.Build.Tasks.Hosting.IVbcHostObject" />.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-103">Begins the initialization of the <see cref="T:Microsoft.Build.Tasks.Hosting.IVbcHostObject" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile">
      <MemberSignature Language="C#" Value="public bool Compile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Compile() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.Compile" />
      <MemberSignature Language="VB.NET" Value="Public Function Compile () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Compile();" />
      <MemberSignature Language="F#" Value="abstract member Compile : unit -&gt; bool" Usage="iVbcHostObject.Compile " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2b5e9-104">Compila o projeto.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-104">Compiles the project.</span></span></summary>
        <returns><span data-ttu-id="2b5e9-105"><see langword="true" /> se o método foi bem-sucedido; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-105"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndInitialization">
      <MemberSignature Language="C#" Value="public void EndInitialization ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndInitialization() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.EndInitialization" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndInitialization ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndInitialization();" />
      <MemberSignature Language="F#" Value="abstract member EndInitialization : unit -&gt; unit" Usage="iVbcHostObject.EndInitialization " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2b5e9-106">Termina a inicialização do <see cref="T:Microsoft.Build.Tasks.Hosting.IVbcHostObject" />.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-106">Ends the initialization of the <see cref="T:Microsoft.Build.Tasks.Hosting.IVbcHostObject" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDesignTime">
      <MemberSignature Language="C#" Value="public bool IsDesignTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDesignTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.IsDesignTime" />
      <MemberSignature Language="VB.NET" Value="Public Function IsDesignTime () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsDesignTime();" />
      <MemberSignature Language="F#" Value="abstract member IsDesignTime : unit -&gt; bool" Usage="iVbcHostObject.IsDesignTime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2b5e9-107">Retorna um valor que indica se o IDE (ambiente de desenvolvimento integrado) está no modo de tempo de design no momento.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-107">Returns a value indicating whether the integrated development environment (IDE) is currently in design time mode.</span></span></summary>
        <returns><span data-ttu-id="2b5e9-108"><see langword="true" /> se o IDE estiver em modo de tempo de design no momento; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-108"><see langword="true" /> if the IDE is currently in design time mode; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUpToDate">
      <MemberSignature Language="C#" Value="public bool IsUpToDate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUpToDate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.IsUpToDate" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUpToDate () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsUpToDate();" />
      <MemberSignature Language="F#" Value="abstract member IsUpToDate : unit -&gt; bool" Usage="iVbcHostObject.IsUpToDate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2b5e9-109">Retorna um valor que indica se o projeto compilado está atualizado.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-109">Returns a value indicating whether the compiled project is up-to-date.</span></span></summary>
        <returns><span data-ttu-id="2b5e9-110"><see langword="true" /> se o projeto compilado estiver atualizado; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-110"><see langword="true" /> if the compiled project is up-to-date; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAdditionalLibPaths">
      <MemberSignature Language="C#" Value="public bool SetAdditionalLibPaths (string[] additionalLibPaths);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetAdditionalLibPaths(string[] additionalLibPaths) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetAdditionalLibPaths(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function SetAdditionalLibPaths (additionalLibPaths As String()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetAdditionalLibPaths(cli::array &lt;System::String ^&gt; ^ additionalLibPaths);" />
      <MemberSignature Language="F#" Value="abstract member SetAdditionalLibPaths : string[] -&gt; bool" Usage="iVbcHostObject.SetAdditionalLibPaths additionalLibPaths" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="additionalLibPaths" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="additionalLibPaths"><span data-ttu-id="2b5e9-111">Uma matriz de diretórios para pesquisar referências.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-111">An array of directories to search for references.</span></span></param>
        <summary><span data-ttu-id="2b5e9-112">Especifica diretórios adicionais para pesquisar referências.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-112">Specifies additional directories to search for references.</span></span></summary>
        <returns><span data-ttu-id="2b5e9-113"><see langword="true" /> se o método foi bem-sucedido; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-113"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAddModules">
      <MemberSignature Language="C#" Value="public bool SetAddModules (string[] addModules);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetAddModules(string[] addModules) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetAddModules(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function SetAddModules (addModules As String()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetAddModules(cli::array &lt;System::String ^&gt; ^ addModules);" />
      <MemberSignature Language="F#" Value="abstract member SetAddModules : string[] -&gt; bool" Usage="iVbcHostObject.SetAddModules addModules" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addModules" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="addModules"><span data-ttu-id="2b5e9-114">Uma matriz de módulos que devem fazer parte do assembly.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-114">An array of modules to be part of the assembly.</span></span></param>
        <summary><span data-ttu-id="2b5e9-115">Especifica um ou mais módulos a fazerem parte do assembly.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-115">Specifies one or more modules to be part of the assembly.</span></span></summary>
        <returns><span data-ttu-id="2b5e9-116"><see langword="true" /> se o método foi bem-sucedido; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-116"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBaseAddress">
      <MemberSignature Language="C#" Value="public bool SetBaseAddress (string targetType, string baseAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetBaseAddress(string targetType, string baseAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetBaseAddress(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetBaseAddress (targetType As String, baseAddress As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetBaseAddress(System::String ^ targetType, System::String ^ baseAddress);" />
      <MemberSignature Language="F#" Value="abstract member SetBaseAddress : string * string -&gt; bool" Usage="iVbcHostObject.SetBaseAddress (targetType, baseAddress)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetType" Type="System.String" />
        <Parameter Name="baseAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetType"><span data-ttu-id="2b5e9-117">O formato do arquivo de saída.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-117">The file format of the output file.</span></span> <span data-ttu-id="2b5e9-118">Este valor pode ser <see langword="library" />, <see langword="exe" />, <see langword="module" /> ou <see langword="winexe" />.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-118">This value can be <see langword="library" />, <see langword="exe" />, <see langword="module" />, or <see langword="winexe" />.</span></span></param>
        <param name="baseAddress"><span data-ttu-id="2b5e9-119">O endereço básico preferencial no qual uma DLL será carregada.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-119">The preferred base address at which to load a DLL.</span></span></param>
        <summary><span data-ttu-id="2b5e9-120">Especifica o endereço básico preferencial no qual uma DLL será carregada.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-120">Specifies the preferred base address at which to load a DLL.</span></span></summary>
        <returns><span data-ttu-id="2b5e9-121"><see langword="true" /> se o método foi bem-sucedido; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-121"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCodePage">
      <MemberSignature Language="C#" Value="public bool SetCodePage (int codePage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetCodePage(int32 codePage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetCodePage(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetCodePage (codePage As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetCodePage(int codePage);" />
      <MemberSignature Language="F#" Value="abstract member SetCodePage : int -&gt; bool" Usage="iVbcHostObject.SetCodePage codePage" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePage" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePage"><span data-ttu-id="2b5e9-122">A página de código a ser usada para todos os arquivos de código-fonte na compilação.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-122">The code page to use for all source code files in the compilation.</span></span></param>
        <summary><span data-ttu-id="2b5e9-123">Especifica a página de código a ser usada para todos os arquivos de código-fonte na compilação.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-123">Specifies the code page to use for all source code files in the compilation.</span></span></summary>
        <returns><span data-ttu-id="2b5e9-124"><see langword="true" /> se o método foi bem-sucedido; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-124"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDebugType">
      <MemberSignature Language="C#" Value="public bool SetDebugType (bool emitDebugInformation, string debugType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetDebugType(bool emitDebugInformation, string debugType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetDebugType(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetDebugType (emitDebugInformation As Boolean, debugType As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetDebugType(bool emitDebugInformation, System::String ^ debugType);" />
      <MemberSignature Language="F#" Value="abstract member SetDebugType : bool * string -&gt; bool" Usage="iVbcHostObject.SetDebugType (emitDebugInformation, debugType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emitDebugInformation" Type="System.Boolean" />
        <Parameter Name="debugType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="emitDebugInformation"><span data-ttu-id="2b5e9-125"><see langword="true" /> para gerar informações de depuração e colocá-las em um arquivo de banco de dados do programa (.pdb); caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-125"><see langword="true" /> to generate debugging information and place it in a program database (.pdb) file; otherwise, <see langword="false" />.</span></span></param>
        <param name="debugType"><span data-ttu-id="2b5e9-126">O tipo de depuração, que pode ser <see langword="full" /> ou <see langword="pdbonly" />.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-126">The debug type, which can be <see langword="full" /> or <see langword="pdbonly" />.</span></span></param>
        <summary><span data-ttu-id="2b5e9-127">Especifica o tipo de depuração.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-127">Specifies the debug type.</span></span></summary>
        <returns><span data-ttu-id="2b5e9-128"><see langword="true" /> se o método foi bem-sucedido; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-128"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDefineConstants">
      <MemberSignature Language="C#" Value="public bool SetDefineConstants (string defineConstants);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetDefineConstants(string defineConstants) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetDefineConstants(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetDefineConstants (defineConstants As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetDefineConstants(System::String ^ defineConstants);" />
      <MemberSignature Language="F#" Value="abstract member SetDefineConstants : string -&gt; bool" Usage="iVbcHostObject.SetDefineConstants defineConstants" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defineConstants" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="defineConstants"><span data-ttu-id="2b5e9-129">Os símbolos do pré-processador a serem definidos.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-129">The preprocessor symbols to define.</span></span></param>
        <summary><span data-ttu-id="2b5e9-130">Especifica os símbolos do pré-processador a serem definidos.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-130">Specifies the preprocessor symbols to define.</span></span></summary>
        <returns><span data-ttu-id="2b5e9-131"><see langword="true" /> se o método foi bem-sucedido; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-131"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDelaySign">
      <MemberSignature Language="C#" Value="public bool SetDelaySign (bool delaySign);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetDelaySign(bool delaySign) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetDelaySign(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetDelaySign (delaySign As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetDelaySign(bool delaySign);" />
      <MemberSignature Language="F#" Value="abstract member SetDelaySign : bool -&gt; bool" Usage="iVbcHostObject.SetDelaySign delaySign" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delaySign" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="delaySign"><span data-ttu-id="2b5e9-132"><see langword="true" /> se você quiser criar um assembly totalmente assinado; <see langword="false" /> se desejar colocar a chave pública no assembly.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-132"><see langword="true" /> if you want to create a fully signed assembly; <see langword="false" /> if you only want to place the public key in the assembly.</span></span></param>
        <summary><span data-ttu-id="2b5e9-133">Especifica um valor que indica se é necessário criar um assembly totalmente assinado.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-133">Specifies a value indicating whether to create a fully signed assembly.</span></span></summary>
        <returns><span data-ttu-id="2b5e9-134"><see langword="true" /> se o método foi bem-sucedido; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-134"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDisabledWarnings">
      <MemberSignature Language="C#" Value="public bool SetDisabledWarnings (string disabledWarnings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetDisabledWarnings(string disabledWarnings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetDisabledWarnings(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetDisabledWarnings (disabledWarnings As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetDisabledWarnings(System::String ^ disabledWarnings);" />
      <MemberSignature Language="F#" Value="abstract member SetDisabledWarnings : string -&gt; bool" Usage="iVbcHostObject.SetDisabledWarnings disabledWarnings" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disabledWarnings" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="disabledWarnings"><span data-ttu-id="2b5e9-135">A lista de avisos a serem desabilitados.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-135">The list of warnings to disable.</span></span> <span data-ttu-id="2b5e9-136">Vários avisos são separados por vírgula.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-136">Multiple warnings are separated with a comma.</span></span></param>
        <summary><span data-ttu-id="2b5e9-137">Especifica a lista de avisos a serem desabilitados.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-137">Specifies the list of warnings to disable.</span></span></summary>
        <returns><span data-ttu-id="2b5e9-138"><see langword="true" /> se o método foi bem-sucedido; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-138"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDocumentationFile">
      <MemberSignature Language="C#" Value="public bool SetDocumentationFile (string documentationFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetDocumentationFile(string documentationFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetDocumentationFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetDocumentationFile (documentationFile As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetDocumentationFile(System::String ^ documentationFile);" />
      <MemberSignature Language="F#" Value="abstract member SetDocumentationFile : string -&gt; bool" Usage="iVbcHostObject.SetDocumentationFile documentationFile" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentationFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="documentationFile"><span data-ttu-id="2b5e9-139">Uma cadeia de caracteres que contém o nome do arquivo no qual salvar os comentários de documentação processados.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-139">A string that contains the name of the file in which to save processed documentation comments.</span></span></param>
        <summary><span data-ttu-id="2b5e9-140">Especifica o arquivo XML no qual salvar os comentários de documentação processados.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-140">Specifies the XML file in which to save processed documentation comments.</span></span></summary>
        <returns><span data-ttu-id="2b5e9-141"><see langword="true" /> se o método foi bem-sucedido; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-141"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetErrorReport">
      <MemberSignature Language="C#" Value="public bool SetErrorReport (string errorReport);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetErrorReport(string errorReport) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetErrorReport(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetErrorReport (errorReport As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetErrorReport(System::String ^ errorReport);" />
      <MemberSignature Language="F#" Value="abstract member SetErrorReport : string -&gt; bool" Usage="iVbcHostObject.SetErrorReport errorReport" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorReport" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="errorReport"><span data-ttu-id="2b5e9-142">Um valor que especifica como os erros do compilador interno são relatados à Microsoft.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-142">A value specifying how internal compiler errors are reported to Microsoft.</span></span> <span data-ttu-id="2b5e9-143">Este valor pode ser <see langword="prompt" />, <see langword="send" /> ou <see langword="none" />.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-143">This value can be <see langword="prompt" />, <see langword="send" />, or <see langword="none" />.</span></span></param>
        <summary><span data-ttu-id="2b5e9-144">Especifica um valor que indica como os erros do compilador interno são relatados à Microsoft.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-144">Specifies a value that indicates how internal compiler errors are reported to Microsoft.</span></span></summary>
        <returns><span data-ttu-id="2b5e9-145"><see langword="true" /> se o método foi bem-sucedido; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-145"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFileAlignment">
      <MemberSignature Language="C#" Value="public bool SetFileAlignment (int fileAlignment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetFileAlignment(int32 fileAlignment) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetFileAlignment(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetFileAlignment (fileAlignment As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetFileAlignment(int fileAlignment);" />
      <MemberSignature Language="F#" Value="abstract member SetFileAlignment : int -&gt; bool" Usage="iVbcHostObject.SetFileAlignment fileAlignment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileAlignment" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="fileAlignment"><span data-ttu-id="2b5e9-146">O tamanho das seções no arquivo de saída.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-146">The size of sections in the output file.</span></span></param>
        <summary><span data-ttu-id="2b5e9-147">Especifica o tamanho das seções no arquivo de saída.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-147">Specifies the size of sections in the output file.</span></span></summary>
        <returns><span data-ttu-id="2b5e9-148"><see langword="true" /> se o método foi bem-sucedido; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-148"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetGenerateDocumentation">
      <MemberSignature Language="C#" Value="public bool SetGenerateDocumentation (bool generateDocumentation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetGenerateDocumentation(bool generateDocumentation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetGenerateDocumentation(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetGenerateDocumentation (generateDocumentation As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetGenerateDocumentation(bool generateDocumentation);" />
      <MemberSignature Language="F#" Value="abstract member SetGenerateDocumentation : bool -&gt; bool" Usage="iVbcHostObject.SetGenerateDocumentation generateDocumentation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="generateDocumentation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="generateDocumentation"><span data-ttu-id="2b5e9-149"><see langword="true" /> para gerar um arquivo de documentação; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-149"><see langword="true" /> to generate a documentation file; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="2b5e9-150">Especifica um valor que indica se deve ser gerada documentação, que será colocada em um arquivo XML com o nome do arquivo executável ou da biblioteca que o compilador está criando.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-150">Specifies a value indicating whether to generate documentation and place it in an XML file with the name of the executable file or library that the compiler is creating.</span></span></summary>
        <returns><span data-ttu-id="2b5e9-151"><see langword="true" /> se o método foi bem-sucedido; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-151"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetImports">
      <MemberSignature Language="C#" Value="public bool SetImports (Microsoft.Build.Framework.ITaskItem[] importsList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetImports(class Microsoft.Build.Framework.ITaskItem[] importsList) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetImports(Microsoft.Build.Framework.ITaskItem[])" />
      <MemberSignature Language="VB.NET" Value="Public Function SetImports (importsList As ITaskItem()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetImports(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ importsList);" />
      <MemberSignature Language="F#" Value="abstract member SetImports : Microsoft.Build.Framework.ITaskItem[] -&gt; bool" Usage="iVbcHostObject.SetImports importsList" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importsList" Type="Microsoft.Build.Framework.ITaskItem[]" />
      </Parameters>
      <Docs>
        <param name="importsList"><span data-ttu-id="2b5e9-152">Os namespaces a serem importados.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-152">The namespaces to import.</span></span></param>
        <summary><span data-ttu-id="2b5e9-153">Especifica os namespaces a serem importados.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-153">Specifies the namespaces to import.</span></span></summary>
        <returns><span data-ttu-id="2b5e9-154"><see langword="true" /> se o método foi bem-sucedido; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-154"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetKeyContainer">
      <MemberSignature Language="C#" Value="public bool SetKeyContainer (string keyContainer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetKeyContainer(string keyContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetKeyContainer(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetKeyContainer (keyContainer As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetKeyContainer(System::String ^ keyContainer);" />
      <MemberSignature Language="F#" Value="abstract member SetKeyContainer : string -&gt; bool" Usage="iVbcHostObject.SetKeyContainer keyContainer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyContainer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keyContainer"><span data-ttu-id="2b5e9-155">O nome do contêiner da chave de criptografia.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-155">The name of the cryptographic key container.</span></span></param>
        <summary><span data-ttu-id="2b5e9-156">Especifica o nome do contêiner da chave de criptografia.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-156">Specifies the name of the cryptographic key container.</span></span></summary>
        <returns><span data-ttu-id="2b5e9-157"><see langword="true" /> se o método foi bem-sucedido; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-157"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetKeyFile">
      <MemberSignature Language="C#" Value="public bool SetKeyFile (string keyFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetKeyFile(string keyFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetKeyFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetKeyFile (keyFile As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetKeyFile(System::String ^ keyFile);" />
      <MemberSignature Language="F#" Value="abstract member SetKeyFile : string -&gt; bool" Usage="iVbcHostObject.SetKeyFile keyFile" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keyFile"><span data-ttu-id="2b5e9-158">O nome de arquivo que contém a chave de criptografia.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-158">The name of the file containing the cryptographic key.</span></span></param>
        <summary><span data-ttu-id="2b5e9-159">Especifica o nome de arquivo que contém a chave de criptografia.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-159">Specifies the file name containing the cryptographic key.</span></span></summary>
        <returns><span data-ttu-id="2b5e9-160"><see langword="true" /> se o método foi bem-sucedido; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-160"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLinkResources">
      <MemberSignature Language="C#" Value="public bool SetLinkResources (Microsoft.Build.Framework.ITaskItem[] linkResources);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetLinkResources(class Microsoft.Build.Framework.ITaskItem[] linkResources) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetLinkResources(Microsoft.Build.Framework.ITaskItem[])" />
      <MemberSignature Language="VB.NET" Value="Public Function SetLinkResources (linkResources As ITaskItem()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetLinkResources(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ linkResources);" />
      <MemberSignature Language="F#" Value="abstract member SetLinkResources : Microsoft.Build.Framework.ITaskItem[] -&gt; bool" Usage="iVbcHostObject.SetLinkResources linkResources" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="linkResources" Type="Microsoft.Build.Framework.ITaskItem[]" />
      </Parameters>
      <Docs>
        <param name="linkResources"><span data-ttu-id="2b5e9-161">Os recursos [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] a serem vinculados no arquivo de saída.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-161">The [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] resources to link to the output file.</span></span></param>
        <summary><span data-ttu-id="2b5e9-162">Cria links para os recursos [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] especificados no arquivo de saída. Os arquivos de recurso não são colocados no arquivo de saída.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-162">Creates links to the specified [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] resources in the output file; the resource files are not placed in the output file.</span></span></summary>
        <returns><span data-ttu-id="2b5e9-163"><see langword="true" /> se o método foi bem-sucedido; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-163"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMainEntryPoint">
      <MemberSignature Language="C#" Value="public bool SetMainEntryPoint (string mainEntryPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetMainEntryPoint(string mainEntryPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetMainEntryPoint(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetMainEntryPoint (mainEntryPoint As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetMainEntryPoint(System::String ^ mainEntryPoint);" />
      <MemberSignature Language="F#" Value="abstract member SetMainEntryPoint : string -&gt; bool" Usage="iVbcHostObject.SetMainEntryPoint mainEntryPoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mainEntryPoint" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="mainEntryPoint"><span data-ttu-id="2b5e9-164">A classe ou o módulo que contém o local do procedimento <see langword="Sub Main" />.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-164">The class or module that contains the location of the <see langword="Sub Main" /> procedure.</span></span></param>
        <summary><span data-ttu-id="2b5e9-165">Especifica a classe ou o módulo que contém o local do procedimento <c>Sub Main</c>.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-165">Specifies the class or module that contains the location of the <c>Sub Main</c> procedure.</span></span></summary>
        <returns><span data-ttu-id="2b5e9-166"><see langword="true" /> se o método foi bem-sucedido; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-166"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNoConfig">
      <MemberSignature Language="C#" Value="public bool SetNoConfig (bool noConfig);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetNoConfig(bool noConfig) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetNoConfig(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetNoConfig (noConfig As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetNoConfig(bool noConfig);" />
      <MemberSignature Language="F#" Value="abstract member SetNoConfig : bool -&gt; bool" Usage="iVbcHostObject.SetNoConfig noConfig" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="noConfig" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="noConfig"><span data-ttu-id="2b5e9-167"><see langword="true" /> para impedir o compilador de compilar com o arquivo vbc.rsp; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-167"><see langword="true" /> to prevent the compiler from compiling with the vbc.rsp file; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="2b5e9-168">Especifica um valor que indica se o compilador deve ser impedido de compilar com o arquivo vbc.rsp.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-168">Specifies a value indicating whether to prevent the compiler from compiling with the vbc.rsp file.</span></span></summary>
        <returns><span data-ttu-id="2b5e9-169"><see langword="true" /> se o método foi bem-sucedido; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-169"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNoStandardLib">
      <MemberSignature Language="C#" Value="public bool SetNoStandardLib (bool noStandardLib);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetNoStandardLib(bool noStandardLib) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetNoStandardLib(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetNoStandardLib (noStandardLib As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetNoStandardLib(bool noStandardLib);" />
      <MemberSignature Language="F#" Value="abstract member SetNoStandardLib : bool -&gt; bool" Usage="iVbcHostObject.SetNoStandardLib noStandardLib" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="noStandardLib" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="noStandardLib"><span data-ttu-id="2b5e9-170"><see langword="true" /> para impedir a importação de mscorlib.dll; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-170"><see langword="true" /> to prevent the import of mscorlib.dll; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="2b5e9-171">Especifica um valor que indica se a importação de mscorlib.dll deve ser impedida.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-171">Specifies a value indicating whether to prevent the import of mscorlib.dll.</span></span></summary>
        <returns><span data-ttu-id="2b5e9-172"><see langword="true" /> se o método foi bem-sucedido; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-172"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNoWarnings">
      <MemberSignature Language="C#" Value="public bool SetNoWarnings (bool noWarnings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetNoWarnings(bool noWarnings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetNoWarnings(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetNoWarnings (noWarnings As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetNoWarnings(bool noWarnings);" />
      <MemberSignature Language="F#" Value="abstract member SetNoWarnings : bool -&gt; bool" Usage="iVbcHostObject.SetNoWarnings noWarnings" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="noWarnings" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="noWarnings"><span data-ttu-id="2b5e9-173"><see langword="true" /> para suprimir todos os avisos; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-173"><see langword="true" /> to suppress all warnings; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="2b5e9-174">Especifica um valor que indica se o compilador suprime todos os avisos.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-174">Specifies a value indicating whether the compiler suppresses all warnings.</span></span></summary>
        <returns><span data-ttu-id="2b5e9-175"><see langword="true" /> se o método foi bem-sucedido; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-175"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOptimize">
      <MemberSignature Language="C#" Value="public bool SetOptimize (bool optimize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetOptimize(bool optimize) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetOptimize(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetOptimize (optimize As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetOptimize(bool optimize);" />
      <MemberSignature Language="F#" Value="abstract member SetOptimize : bool -&gt; bool" Usage="iVbcHostObject.SetOptimize optimize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="optimize" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="optimize"><span data-ttu-id="2b5e9-176"><see langword="true" /> para habilitar otimizações; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-176"><see langword="true" /> to enable optimizations; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="2b5e9-177">Especifica um valor que indica se as otimizações devem ser habilitadas.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-177">Specifies a value indicating whether to enable optimizations.</span></span></summary>
        <returns><span data-ttu-id="2b5e9-178"><see langword="true" /> se o método foi bem-sucedido; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-178"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOptionCompare">
      <MemberSignature Language="C#" Value="public bool SetOptionCompare (string optionCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetOptionCompare(string optionCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetOptionCompare(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetOptionCompare (optionCompare As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetOptionCompare(System::String ^ optionCompare);" />
      <MemberSignature Language="F#" Value="abstract member SetOptionCompare : string -&gt; bool" Usage="iVbcHostObject.SetOptionCompare optionCompare" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="optionCompare" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="optionCompare"><span data-ttu-id="2b5e9-179">Um valor que indica como o compilador faz a comparação de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-179">A value indicating how the compiler makes string comparisons.</span></span> <span data-ttu-id="2b5e9-180">O valor deve ser <see langword="binary" /> ou <see langword="text" />.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-180">The value must be either <see langword="binary" /> or <see langword="text" />.</span></span></param>
        <summary><span data-ttu-id="2b5e9-181">Especifica um valor que indica como o compilador faz a comparação de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-181">Specifies a value indicating how the compiler makes string comparisons.</span></span></summary>
        <returns><span data-ttu-id="2b5e9-182"><see langword="true" /> se o método foi bem-sucedido; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-182"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOptionExplicit">
      <MemberSignature Language="C#" Value="public bool SetOptionExplicit (bool optionExplicit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetOptionExplicit(bool optionExplicit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetOptionExplicit(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetOptionExplicit (optionExplicit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetOptionExplicit(bool optionExplicit);" />
      <MemberSignature Language="F#" Value="abstract member SetOptionExplicit : bool -&gt; bool" Usage="iVbcHostObject.SetOptionExplicit optionExplicit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="optionExplicit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="optionExplicit"><span data-ttu-id="2b5e9-183"><see langword="true" /> para exigir a declaração explícita de variáveis; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-183"><see langword="true" /> to require the explicit declaration of variables; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="2b5e9-184">Especifica um valor que indica se a declaração explícita de variáveis é necessária.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-184">Specifies a value indicating whether the explicit declaration of variables is required.</span></span></summary>
        <returns><span data-ttu-id="2b5e9-185"><see langword="true" /> se o método foi bem-sucedido; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-185"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOptionStrict">
      <MemberSignature Language="C#" Value="public bool SetOptionStrict (bool optionStrict);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetOptionStrict(bool optionStrict) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetOptionStrict(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetOptionStrict (optionStrict As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetOptionStrict(bool optionStrict);" />
      <MemberSignature Language="F#" Value="abstract member SetOptionStrict : bool -&gt; bool" Usage="iVbcHostObject.SetOptionStrict optionStrict" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="optionStrict" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="optionStrict"><span data-ttu-id="2b5e9-186"><see langword="true" /> para impor a semântica de tipo estrita para restringir conversões de tipo implícitas; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-186"><see langword="true" /> to enforce strict type semantics to restrict implicit type conversions; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="2b5e9-187">Especifica um valor que indica se o compilador impõe semântica de tipo estrita para restringir conversões de tipo implícitas.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-187">Specifies a value indicating whether the compiler enforces strict type semantics to restrict implicit type conversions.</span></span></summary>
        <returns><span data-ttu-id="2b5e9-188"><see langword="true" /> se o método foi bem-sucedido; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-188"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOptionStrictType">
      <MemberSignature Language="C#" Value="public bool SetOptionStrictType (string optionStrictType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetOptionStrictType(string optionStrictType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetOptionStrictType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetOptionStrictType (optionStrictType As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetOptionStrictType(System::String ^ optionStrictType);" />
      <MemberSignature Language="F#" Value="abstract member SetOptionStrictType : string -&gt; bool" Usage="iVbcHostObject.SetOptionStrictType optionStrictType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="optionStrictType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="optionStrictType"><span data-ttu-id="2b5e9-189">A cadeia de caracteres passada para o parâmetro <see langword="OptionStrictType" />.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-189">The string passed to the <see langword="OptionStrictType" /> parameter.</span></span></param>
        <summary><span data-ttu-id="2b5e9-190">Especifica que o compilador deverá avisar quando a semântica de linguagem estrita não for respeitada.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-190">Specifies that the compiler should warn when strict language semantics are not respected.</span></span></summary>
        <returns><span data-ttu-id="2b5e9-191"><see langword="true" /> se o método foi bem-sucedido; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-191"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOutputAssembly">
      <MemberSignature Language="C#" Value="public bool SetOutputAssembly (string outputAssembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetOutputAssembly(string outputAssembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetOutputAssembly(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetOutputAssembly (outputAssembly As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetOutputAssembly(System::String ^ outputAssembly);" />
      <MemberSignature Language="F#" Value="abstract member SetOutputAssembly : string -&gt; bool" Usage="iVbcHostObject.SetOutputAssembly outputAssembly" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outputAssembly" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outputAssembly"><span data-ttu-id="2b5e9-192">O nome do arquivo de saída.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-192">The name of the output file.</span></span></param>
        <summary><span data-ttu-id="2b5e9-193">Especifica o nome do arquivo de saída.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-193">Specifies the name of the output file.</span></span></summary>
        <returns><span data-ttu-id="2b5e9-194"><see langword="true" /> se o método foi bem-sucedido; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-194"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPlatform">
      <MemberSignature Language="C#" Value="public bool SetPlatform (string platform);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetPlatform(string platform) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetPlatform(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetPlatform (platform As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetPlatform(System::String ^ platform);" />
      <MemberSignature Language="F#" Value="abstract member SetPlatform : string -&gt; bool" Usage="iVbcHostObject.SetPlatform platform" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="platform" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="platform"><span data-ttu-id="2b5e9-195">A plataforma do processador a ser segmentada pelo arquivo de saída.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-195">The processor platform to be targeted by the output file.</span></span> <span data-ttu-id="2b5e9-196">Este valor pode ser <see langword="x86" />, <see langword="x64" />, <see langword="Itanium" /> ou <see langword="anycpu" />.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-196">This value can be <see langword="x86" />, <see langword="x64" />, <see langword="Itanium" />, or <see langword="anycpu" />.</span></span></param>
        <summary><span data-ttu-id="2b5e9-197">Especifica a plataforma do processador a ser direcionada pelo arquivo de saída.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-197">Specifies the processor platform to be targeted by the output file.</span></span></summary>
        <returns><span data-ttu-id="2b5e9-198"><see langword="true" /> se o método foi bem-sucedido; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-198"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetReferences">
      <MemberSignature Language="C#" Value="public bool SetReferences (Microsoft.Build.Framework.ITaskItem[] references);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetReferences(class Microsoft.Build.Framework.ITaskItem[] references) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetReferences(Microsoft.Build.Framework.ITaskItem[])" />
      <MemberSignature Language="VB.NET" Value="Public Function SetReferences (references As ITaskItem()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetReferences(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ references);" />
      <MemberSignature Language="F#" Value="abstract member SetReferences : Microsoft.Build.Framework.ITaskItem[] -&gt; bool" Usage="iVbcHostObject.SetReferences references" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="references" Type="Microsoft.Build.Framework.ITaskItem[]" />
      </Parameters>
      <Docs>
        <param name="references"><span data-ttu-id="2b5e9-199">Os itens dos quais importar as informações de tipo público para o projeto atual.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-199">The items from which to import public type information into the current project.</span></span></param>
        <summary><span data-ttu-id="2b5e9-200">Especifica os itens dos quais importar as informações de tipo público no projeto atual.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-200">Specifies the items from which to import public type information into the current project.</span></span></summary>
        <returns><span data-ttu-id="2b5e9-201"><see langword="true" /> se o método foi bem-sucedido; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-201"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRemoveIntegerChecks">
      <MemberSignature Language="C#" Value="public bool SetRemoveIntegerChecks (bool removeIntegerChecks);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetRemoveIntegerChecks(bool removeIntegerChecks) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetRemoveIntegerChecks(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetRemoveIntegerChecks (removeIntegerChecks As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetRemoveIntegerChecks(bool removeIntegerChecks);" />
      <MemberSignature Language="F#" Value="abstract member SetRemoveIntegerChecks : bool -&gt; bool" Usage="iVbcHostObject.SetRemoveIntegerChecks removeIntegerChecks" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="removeIntegerChecks" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="removeIntegerChecks"><span data-ttu-id="2b5e9-202"><see langword="true" /> para remover verificações de erro de estouro de inteiro; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-202"><see langword="true" /> to remove integer overflow error checks; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="2b5e9-203">Especifica um valor que indica se é necessário desabilitar verificações de erro de estouro de inteiro.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-203">Specifies a value indicating whether to disable integer overflow error checks.</span></span></summary>
        <returns><span data-ttu-id="2b5e9-204"><see langword="true" /> se o método foi bem-sucedido; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-204"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetResources">
      <MemberSignature Language="C#" Value="public bool SetResources (Microsoft.Build.Framework.ITaskItem[] resources);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetResources(class Microsoft.Build.Framework.ITaskItem[] resources) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetResources(Microsoft.Build.Framework.ITaskItem[])" />
      <MemberSignature Language="VB.NET" Value="Public Function SetResources (resources As ITaskItem()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetResources(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ resources);" />
      <MemberSignature Language="F#" Value="abstract member SetResources : Microsoft.Build.Framework.ITaskItem[] -&gt; bool" Usage="iVbcHostObject.SetResources resources" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resources" Type="Microsoft.Build.Framework.ITaskItem[]" />
      </Parameters>
      <Docs>
        <param name="resources"><span data-ttu-id="2b5e9-205">Os recursos [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] a serem inseridos no arquivo de saída.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-205">The [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] resources to embed into the output file.</span></span></param>
        <summary><span data-ttu-id="2b5e9-206">Especifica os recursos [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] a serem inseridos no arquivo de saída.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-206">Specifies the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] resources to embed into the output file.</span></span></summary>
        <returns><span data-ttu-id="2b5e9-207"><see langword="true" /> se o método foi bem-sucedido; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-207"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetResponseFiles">
      <MemberSignature Language="C#" Value="public bool SetResponseFiles (Microsoft.Build.Framework.ITaskItem[] responseFiles);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetResponseFiles(class Microsoft.Build.Framework.ITaskItem[] responseFiles) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetResponseFiles(Microsoft.Build.Framework.ITaskItem[])" />
      <MemberSignature Language="VB.NET" Value="Public Function SetResponseFiles (responseFiles As ITaskItem()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetResponseFiles(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ responseFiles);" />
      <MemberSignature Language="F#" Value="abstract member SetResponseFiles : Microsoft.Build.Framework.ITaskItem[] -&gt; bool" Usage="iVbcHostObject.SetResponseFiles responseFiles" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="responseFiles" Type="Microsoft.Build.Framework.ITaskItem[]" />
      </Parameters>
      <Docs>
        <param name="responseFiles"><span data-ttu-id="2b5e9-208">Os arquivos de resposta que contêm comandos para o compilador.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-208">The response files that contain commands for the compiler.</span></span></param>
        <summary><span data-ttu-id="2b5e9-209">Especifica os arquivos de resposta que contêm comandos para o compilador.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-209">Specifies the response files that contain commands for the compiler.</span></span></summary>
        <returns><span data-ttu-id="2b5e9-210"><see langword="true" /> se o método foi bem-sucedido; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-210"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRootNamespace">
      <MemberSignature Language="C#" Value="public bool SetRootNamespace (string rootNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetRootNamespace(string rootNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetRootNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetRootNamespace (rootNamespace As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetRootNamespace(System::String ^ rootNamespace);" />
      <MemberSignature Language="F#" Value="abstract member SetRootNamespace : string -&gt; bool" Usage="iVbcHostObject.SetRootNamespace rootNamespace" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rootNamespace"><span data-ttu-id="2b5e9-211">O namespace raiz para todas as declarações de tipo.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-211">The root namespace for all type declarations.</span></span></param>
        <summary><span data-ttu-id="2b5e9-212">Especifica o namespace raiz para todas as declarações de tipo.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-212">Specifies the root namespace for all type declarations.</span></span></summary>
        <returns><span data-ttu-id="2b5e9-213"><see langword="true" /> se o método foi bem-sucedido; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-213"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSdkPath">
      <MemberSignature Language="C#" Value="public bool SetSdkPath (string sdkPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetSdkPath(string sdkPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetSdkPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetSdkPath (sdkPath As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetSdkPath(System::String ^ sdkPath);" />
      <MemberSignature Language="F#" Value="abstract member SetSdkPath : string -&gt; bool" Usage="iVbcHostObject.SetSdkPath sdkPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sdkPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sdkPath"><span data-ttu-id="2b5e9-214">O local de mscorlib.dll e microsoft.visualbasic.dll.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-214">The location of mscorlib.dll and microsoft.visualbasic.dll.</span></span></param>
        <summary><span data-ttu-id="2b5e9-215">Especifica o local do mscorlib.dll e microsoft.visualbasic.dll.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-215">Specifies the location of mscorlib.dll and microsoft.visualbasic.dll.</span></span></summary>
        <returns><span data-ttu-id="2b5e9-216"><see langword="true" /> se o método foi bem-sucedido; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-216"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSources">
      <MemberSignature Language="C#" Value="public bool SetSources (Microsoft.Build.Framework.ITaskItem[] sources);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetSources(class Microsoft.Build.Framework.ITaskItem[] sources) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetSources(Microsoft.Build.Framework.ITaskItem[])" />
      <MemberSignature Language="VB.NET" Value="Public Function SetSources (sources As ITaskItem()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetSources(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ sources);" />
      <MemberSignature Language="F#" Value="abstract member SetSources : Microsoft.Build.Framework.ITaskItem[] -&gt; bool" Usage="iVbcHostObject.SetSources sources" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sources" Type="Microsoft.Build.Framework.ITaskItem[]" />
      </Parameters>
      <Docs>
        <param name="sources"><span data-ttu-id="2b5e9-217">Um ou mais arquivos de origem do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-217">One or more Visual Basic source files.</span></span></param>
        <summary><span data-ttu-id="2b5e9-218">Especifica um ou mais arquivos de origem do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-218">Specifies one or more Visual Basic source files.</span></span></summary>
        <returns><span data-ttu-id="2b5e9-219"><see langword="true" /> se o método foi bem-sucedido; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-219"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTargetCompactFramework">
      <MemberSignature Language="C#" Value="public bool SetTargetCompactFramework (bool targetCompactFramework);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetTargetCompactFramework(bool targetCompactFramework) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetTargetCompactFramework(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetTargetCompactFramework (targetCompactFramework As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetTargetCompactFramework(bool targetCompactFramework);" />
      <MemberSignature Language="F#" Value="abstract member SetTargetCompactFramework : bool -&gt; bool" Usage="iVbcHostObject.SetTargetCompactFramework targetCompactFramework" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetCompactFramework" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="targetCompactFramework"><span data-ttu-id="2b5e9-220"><see langword="true" /> para ter como destino o [!INCLUDE[Compact](~/includes/compact-md.md)]; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-220"><see langword="true" /> to target the [!INCLUDE[Compact](~/includes/compact-md.md)]; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="2b5e9-221">Especifica um valor que indica se o [!INCLUDE[Compact](~/includes/compact-md.md)] deve ser o destino.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-221">Specifies a value indicating whether to target the [!INCLUDE[Compact](~/includes/compact-md.md)].</span></span></summary>
        <returns><span data-ttu-id="2b5e9-222"><see langword="true" /> se o método foi bem-sucedido; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-222"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTargetType">
      <MemberSignature Language="C#" Value="public bool SetTargetType (string targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetTargetType(string targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetTargetType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetTargetType (targetType As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetTargetType(System::String ^ targetType);" />
      <MemberSignature Language="F#" Value="abstract member SetTargetType : string -&gt; bool" Usage="iVbcHostObject.SetTargetType targetType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetType"><span data-ttu-id="2b5e9-223">O formato do arquivo de saída.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-223">The file format of the output file.</span></span> <span data-ttu-id="2b5e9-224">Este valor pode ser <see langword="library" />, <see langword="exe" />, <see langword="module" /> ou <see langword="winexe" />.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-224">This value can be <see langword="library" />, <see langword="exe" />, <see langword="module" />, or <see langword="winexe" />.</span></span></param>
        <summary><span data-ttu-id="2b5e9-225">Especifica o formato do arquivo de saída.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-225">Specifies the file format of the output file.</span></span></summary>
        <returns><span data-ttu-id="2b5e9-226"><see langword="true" /> se o método foi bem-sucedido; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-226"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTreatWarningsAsErrors">
      <MemberSignature Language="C#" Value="public bool SetTreatWarningsAsErrors (bool treatWarningsAsErrors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetTreatWarningsAsErrors(bool treatWarningsAsErrors) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetTreatWarningsAsErrors(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetTreatWarningsAsErrors (treatWarningsAsErrors As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetTreatWarningsAsErrors(bool treatWarningsAsErrors);" />
      <MemberSignature Language="F#" Value="abstract member SetTreatWarningsAsErrors : bool -&gt; bool" Usage="iVbcHostObject.SetTreatWarningsAsErrors treatWarningsAsErrors" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="treatWarningsAsErrors" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="treatWarningsAsErrors"><span data-ttu-id="2b5e9-227"><see langword="true" /> para tratar todos os avisos como erros; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-227"><see langword="true" /> to treat all warnings as errors; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="2b5e9-228">Especifica um valor que indica se todos os avisos devem ser tratados como erros.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-228">Specifies a value indicating whether to treat all warnings as errors.</span></span></summary>
        <returns><span data-ttu-id="2b5e9-229"><see langword="true" /> se o método foi bem-sucedido; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-229"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWarningsAsErrors">
      <MemberSignature Language="C#" Value="public bool SetWarningsAsErrors (string warningsAsErrors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetWarningsAsErrors(string warningsAsErrors) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetWarningsAsErrors(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetWarningsAsErrors (warningsAsErrors As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetWarningsAsErrors(System::String ^ warningsAsErrors);" />
      <MemberSignature Language="F#" Value="abstract member SetWarningsAsErrors : string -&gt; bool" Usage="iVbcHostObject.SetWarningsAsErrors warningsAsErrors" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="warningsAsErrors" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="warningsAsErrors"><span data-ttu-id="2b5e9-230">Uma lista de avisos a serem tratados como erros.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-230">A list of warnings to treat as errors.</span></span></param>
        <summary><span data-ttu-id="2b5e9-231">Especifica uma lista de avisos a serem tratados como erros.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-231">Specifies a list of warnings to treat as errors.</span></span></summary>
        <returns><span data-ttu-id="2b5e9-232"><see langword="true" /> se o método foi bem-sucedido; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-232"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWarningsNotAsErrors">
      <MemberSignature Language="C#" Value="public bool SetWarningsNotAsErrors (string warningsNotAsErrors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetWarningsNotAsErrors(string warningsNotAsErrors) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetWarningsNotAsErrors(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetWarningsNotAsErrors (warningsNotAsErrors As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetWarningsNotAsErrors(System::String ^ warningsNotAsErrors);" />
      <MemberSignature Language="F#" Value="abstract member SetWarningsNotAsErrors : string -&gt; bool" Usage="iVbcHostObject.SetWarningsNotAsErrors warningsNotAsErrors" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="warningsNotAsErrors" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="warningsNotAsErrors"><span data-ttu-id="2b5e9-233">Uma lista de avisos que não são tratados como erros.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-233">A list of warnings that are not treated as errors.</span></span></param>
        <summary><span data-ttu-id="2b5e9-234">Especifica uma lista de avisos que não são tratados como erros.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-234">Specifies a list of warnings that are not treated as errors.</span></span></summary>
        <returns><span data-ttu-id="2b5e9-235"><see langword="true" /> se o método foi bem-sucedido; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-235"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWin32Icon">
      <MemberSignature Language="C#" Value="public bool SetWin32Icon (string win32Icon);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetWin32Icon(string win32Icon) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetWin32Icon(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetWin32Icon (win32Icon As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetWin32Icon(System::String ^ win32Icon);" />
      <MemberSignature Language="F#" Value="abstract member SetWin32Icon : string -&gt; bool" Usage="iVbcHostObject.SetWin32Icon win32Icon" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="win32Icon" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="win32Icon"><span data-ttu-id="2b5e9-236">O arquivo .ico a ser inserido no assembly.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-236">The .ico file to insert into the assembly.</span></span></param>
        <summary><span data-ttu-id="2b5e9-237">Especifica um arquivo .ico a ser inserido no assembly.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-237">Specifies an .ico file to insert into the assembly.</span></span></summary>
        <returns><span data-ttu-id="2b5e9-238"><see langword="true" /> se o método foi bem-sucedido; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-238"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWin32Resource">
      <MemberSignature Language="C#" Value="public bool SetWin32Resource (string win32Resource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetWin32Resource(string win32Resource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetWin32Resource(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetWin32Resource (win32Resource As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetWin32Resource(System::String ^ win32Resource);" />
      <MemberSignature Language="F#" Value="abstract member SetWin32Resource : string -&gt; bool" Usage="iVbcHostObject.SetWin32Resource win32Resource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="win32Resource" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="win32Resource"><span data-ttu-id="2b5e9-239">Um arquivo de recurso Win32 (.res) a ser inserido no arquivo de saída.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-239">A Win32 resource (.res) file to insert into the output file.</span></span></param>
        <summary><span data-ttu-id="2b5e9-240">Especifica um arquivo de recurso Win32 (.res) a ser inserido no arquivo de saída.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-240">Specifies a Win32 resource (.res) file to insert into the output file.</span></span></summary>
        <returns><span data-ttu-id="2b5e9-241"><see langword="true" /> se o método foi bem-sucedido; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2b5e9-241"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>