<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="AssemblyHashAlgorithm.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5060dff181314dfc69c0d9ba87fc12a49fb4e75cb.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">060dff181314dfc69c0d9ba87fc12a49fb4e75cb</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Configuration.Assemblies.AssemblyHashAlgorithm">
          <source>Specifies all the hash algorithms used for hashing files and for generating the strong name.</source>
          <target state="translated">Especifica os algoritmos de hash usados para fazer o hash de arquivos e para gerar o nome forte.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.Assemblies.AssemblyHashAlgorithm">
          <source>A <ph id="ph1">`hash function``H`</ph> is a transformation that takes an input <ph id="ph2">`m`</ph> and returns a fixed-size string, which is called the hash value <ph id="ph3">`h`</ph> (that is, <ph id="ph4">`h`</ph><ph id="ph5"> = </ph><ph id="ph6">`H`</ph> (<ph id="ph7">`m`</ph>)).</source>
          <target state="translated">Um <ph id="ph1">`hash function``H`</ph> é uma transformação que usa uma entrada <ph id="ph2">`m`</ph> e retorna uma cadeia de caracteres de tamanho fixo, que é chamada de valor de hash <ph id="ph3">`h`</ph> (ou seja, <ph id="ph4">`h`</ph> <ph id="ph5"> = </ph> <ph id="ph6">`H`</ph> (<ph id="ph7">`m`</ph>)).</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.Assemblies.AssemblyHashAlgorithm">
          <source>Hash functions with just this property have a variety of general computational uses, but when employed in cryptography, the hash functions are usually chosen to have some additional properties.</source>
          <target state="translated">Funções de hash com apenas essa propriedade tem uma variedade de usos gerais de computação, mas quando utilizada em criptografia, as funções de hash são normalmente escolhidas tenha algumas propriedades adicionais.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.Assemblies.AssemblyHashAlgorithm">
          <source>The basic requirements for a cryptographic hash function are:</source>
          <target state="translated">Os requisitos básicos para uma função de hash criptográfico são:</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.Assemblies.AssemblyHashAlgorithm">
          <source>The input can be of any length.</source>
          <target state="translated">A entrada pode ser de qualquer comprimento.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.Assemblies.AssemblyHashAlgorithm">
          <source>The output has a fixed length.</source>
          <target state="translated">A saída tem um comprimento fixo.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.Assemblies.AssemblyHashAlgorithm">
          <source><ph id="ph1">`H`</ph> (<ph id="ph2">`x)`</ph> is relatively easy to compute for any given x.</source>
          <target state="translated"><ph id="ph1">`H`</ph> (<ph id="ph2">`x)`</ph> é relativamente fácil de computação para qualquer determinado x.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.Assemblies.AssemblyHashAlgorithm">
          <source><ph id="ph1">`H`</ph> (<ph id="ph2">`x`</ph>) is one-way.</source>
          <target state="translated"><ph id="ph1">`H`</ph> (<ph id="ph2">`x`</ph>) é unidirecional.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.Assemblies.AssemblyHashAlgorithm">
          <source><ph id="ph1">`H`</ph> (<ph id="ph2">`x`</ph>) is collision-free.</source>
          <target state="translated"><ph id="ph1">`H`</ph> (<ph id="ph2">`x`</ph>) é livre de colisão.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.Assemblies.AssemblyHashAlgorithm">
          <source>The hash value represents concisely the longer message or document from which it was computed; this value is called the message digest.</source>
          <target state="translated">O valor de hash representa de forma concisa a mensagem ou o documento do qual ele foi calculado; mais Esse valor é chamado de resumo da mensagem.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.Assemblies.AssemblyHashAlgorithm">
          <source>You can think of a message digest as a digital fingerprint of the larger document.</source>
          <target state="translated">Você pode pensar em um resumo da mensagem como uma impressão digital do documento maior.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.Assemblies.AssemblyHashAlgorithm">
          <source>Examples of well-known hash functions are MD2 and SHA.</source>
          <target state="translated">São exemplos de funções de hash conhecido MD2 e SHA.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="F:System.Configuration.Assemblies.AssemblyHashAlgorithm.MD5">
          <source>Retrieves the MD5 message-digest algorithm.</source>
          <target state="translated">Recupera o algoritmo de resumo da mensagem MD5.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="F:System.Configuration.Assemblies.AssemblyHashAlgorithm.MD5">
          <source>MD5 was developed by Rivest in 1991.</source>
          <target state="translated">O MD5 foi desenvolvido pela Rivest em 1991.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="F:System.Configuration.Assemblies.AssemblyHashAlgorithm.MD5">
          <source>It is basically MD4 with safety-belts and while it is slightly slower than MD4, it helps provide more security.</source>
          <target state="translated">É basicamente MD4 com cintos de segurança e embora seja um pouco mais lento do que MD4, ajuda a fornecer mais segurança.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="F:System.Configuration.Assemblies.AssemblyHashAlgorithm.MD5">
          <source>The algorithm consists of four distinct rounds, which has a slightly different design from that of MD4.</source>
          <target state="translated">O algoritmo consiste em quatro rodadas distintos, com um design ligeiramente diferente daquele do MD4.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="F:System.Configuration.Assemblies.AssemblyHashAlgorithm.MD5">
          <source>Message-digest size, as well as padding requirements, remain the same.</source>
          <target state="translated">O tamanho de resumo da mensagem, bem como os requisitos de preenchimento, permanecem os mesmos.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="F:System.Configuration.Assemblies.AssemblyHashAlgorithm.None">
          <source>A mask indicating that there is no hash algorithm.</source>
          <target state="translated">Uma máscara que indica que não há nenhum algoritmo de hash.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="F:System.Configuration.Assemblies.AssemblyHashAlgorithm.None">
          <source>If you specify <ph id="ph1">&lt;see langword="None" /&gt;</ph> for a multi-module assembly, the common language runtime defaults to the SHA1 algorithm, since multi-module assemblies need to generate a hash.</source>
          <target state="translated">Se você especificar <ph id="ph1">&lt;see langword="None" /&gt;</ph> para um assembly de vários módulo, Common Language Runtime será padronizado como o algoritmo SHA1, já que assemblies de vários módulos geram um hash.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="F:System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA1">
          <source>A mask used to retrieve a revision of the Secure Hash Algorithm that corrects an unpublished flaw in SHA.</source>
          <target state="translated">Uma máscara usada para recuperar uma revisão do Algoritmo de Hash Seguro que corrige uma falha não publicada no SHA.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="F:System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA256">
          <source>A mask used to retrieve a version of the Secure Hash Algorithm with a hash size of 256 bits.</source>
          <target state="translated">Uma máscara usada para recuperar uma versão do Algoritmo de Hash Seguro com um tamanho de hash de 256 bits.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="F:System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA384">
          <source>A mask used to retrieve a version of the Secure Hash Algorithm with a hash size of 384 bits.</source>
          <target state="translated">Uma máscara usada para recuperar uma versão do Algoritmo de Hash Seguro com um tamanho de hash de 384 bits.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="F:System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA512">
          <source>A mask used to retrieve a version of the Secure Hash Algorithm with a hash size of 512 bits.</source>
          <target state="translated">Uma máscara usada para recuperar uma versão do Algoritmo de Hash Seguro com um tamanho de hash de 512 bits.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>