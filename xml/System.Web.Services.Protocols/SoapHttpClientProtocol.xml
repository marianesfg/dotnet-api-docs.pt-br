<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SoapHttpClientProtocol.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac52ecf0c0b2e728e3d99693d8911f8def281322ee2.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2ecf0c0b2e728e3d99693d8911f8def281322ee2</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>Specifies the class client that proxies derive from when using SOAP.</source>
          <target state="translated">Especifica o cliente da classe do qual os proxies são derivados ao usar o SOAP.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>If you are building an XML Web service client, then a proxy class that derives indirectly or directly from <ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt;</ph> must be created for the XML Web service.</source>
          <target state="translated">Se você estiver criando um cliente de serviço da Web em XML, em seguida, uma classe proxy que deriva indiretamente ou diretamente de <ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt;</ph> devem ser criados para o serviço Web XML.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>When the XML Web service client calls using SOAP, the proxy class must derive from <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol&gt;</ph>, which derives from <ph id="ph2">&lt;xref:System.Web.Services.Protocols.HttpWebClientProtocol&gt;</ph>.</source>
          <target state="translated">Quando o cliente do serviço Web XML chama usando SOAP, a classe de proxy deve derivar de <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol&gt;</ph>, que é derivado de <ph id="ph2">&lt;xref:System.Web.Services.Protocols.HttpWebClientProtocol&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source><ph id="ph1">&lt;xref:System.Web.Services.Protocols.HttpWebClientProtocol&gt;</ph>, in turn, derives from <ph id="ph2">&lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Services.Protocols.HttpWebClientProtocol&gt;</ph>, por sua vez, deriva de <ph id="ph2">&lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>To communicate with an XML Web service, create a proxy class that derives indirectly or directly from <ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt;</ph> for the XML Web service you want to call.</source>
          <target state="translated">Para se comunicar com um serviço Web XML, crie uma classe de proxy que deriva indiretamente ou diretamente de <ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt;</ph> para o serviço Web XML que você deseja chamar.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>Instead of creating the proxy class manually, use the Web Services Description Language tool (Wsdl.exe) to create a proxy class for a given XML Web service's service description.</source>
          <target state="translated">Em vez de criar a classe proxy manualmente, use a ferramenta Web Services Description Language (Wsdl.exe) para criar uma classe de proxy para a descrição do serviço de um determinado do XML Web Services.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>When a proxy class is generated for the SOAP protocol, synchronous calls to XML Web service methods are made via the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A&gt;</ph> method, whereas asynchronous calls are made using the <ph id="ph2">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A&gt;</ph> method and the <ph id="ph3">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke%2A&gt;</ph> method.</source>
          <target state="translated">Quando uma classe proxy gerada para o protocolo SOAP, chamadas síncronas para métodos de serviço da Web em XML são feitas por meio de <ph id="ph1">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A&gt;</ph> método, enquanto chamadas assíncronas são feitas usando o <ph id="ph2">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A&gt;</ph> método e o <ph id="ph3">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>The following code example is a proxy class generated by Wsdl.exe for the <ph id="ph1">`Math`</ph> XML Web service.</source>
          <target state="translated">O exemplo de código a seguir é uma classe de proxy gerada pelo Wsdl.exe para o <ph id="ph1">`Math`</ph> XML Web Services.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>The proxy class derives from <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol&gt;</ph>, which derives from the abstract <ph id="ph2">&lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt;</ph> class.</source>
          <target state="translated">A classe de proxy deriva <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol&gt;</ph>, que é derivado de abstrata <ph id="ph2">&lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>The following code example is the <ph id="ph1">`Math`</ph> XML Web service, from which the preceding proxy class was generated.</source>
          <target state="translated">O exemplo de código a seguir é o <ph id="ph1">`Math`</ph> XML Web Services, do qual a classe de proxy anterior foi gerada.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>This example has a text box that accepts user input, which is a potential security threat.</source>
          <target state="translated">Este exemplo tem uma caixa de texto que aceita a entrada do usuário, que é uma possível ameaça à segurança.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</source>
          <target state="translated">Por padrão, a páginas da Web ASP.NET validam a entrada do usuário não inclui elementos HTML ou script.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>For more information, see <bpt id="p1">[</bpt>Script Exploits Overview<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>Visão geral de explorações de script<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>This type is thread safe.</source>
          <target state="translated">Este tipo é thread-safe.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>When you override this class, you can introduce methods in the derived class which are specific to a particular type of XML Web service.</source>
          <target state="translated">Quando você substituir essa classe, você pode introduzir métodos na classe derivada, que são específicos para um determinado tipo de serviço Web XML.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>The methods capture the parameters and call the base class to do the work of communicating with the XML Web service.</source>
          <target state="translated">Os métodos de capturar os parâmetros e chame a classe base para fazer o trabalho de se comunicar com o serviço Web XML.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>If the introduced methods are asynchronous, call the <ph id="ph1">&lt;see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /&gt;</ph> method and the <ph id="ph2">&lt;see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)" /&gt;</ph> method.</source>
          <target state="translated">Se os métodos introduzidos são assíncronos, chame o <ph id="ph1">&lt;see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /&gt;</ph> método e o <ph id="ph2">&lt;see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)" /&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>If the introduced methods are synchronous, call the <ph id="ph1">&lt;see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])" /&gt;</ph> method.</source>
          <target state="translated">Se os métodos introduzidos são síncronos, chame o <ph id="ph1">&lt;see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])" /&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>The overridden constructor typically sets the <ph id="ph1">&lt;see cref="P:System.Web.Services.Protocols.WebClientProtocol.Url" /&gt;</ph> property to the URL of the XML Web service method.</source>
          <target state="translated">O construtor substituído normalmente define o <ph id="ph1">&lt;see cref="P:System.Web.Services.Protocols.WebClientProtocol.Url" /&gt;</ph> propriedade para a URL do método de serviço da Web em XML.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.SoapHttpClientProtocol" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.SoapHttpClientProtocol" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>The name of the XML Web service method in the derived class that is invoking the <ph id="ph1">&lt;see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /&gt;</ph> method.</source>
          <target state="translated">O nome do método de serviço Web XML na classe derivada que está invocando o método <ph id="ph1">&lt;see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>An array of objects containing the parameters to pass to the XML Web service.</source>
          <target state="translated">Uma matriz de objetos que contém os parâmetros a serem passados para o serviço Web XML.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>The order of the values in the array correspond to the order of the parameters in the calling method of the derived class.</source>
          <target state="translated">A ordem dos valores na matriz corresponde à ordem dos parâmetros no método de chamada da classe derivada.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>The delegate to call when the asynchronous invoke is complete.</source>
          <target state="translated">O delegado a ser chamado quando a invocação assíncrona for concluída.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>callback<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the delegate is not called.</source>
          <target state="translated">Se <bpt id="p1">&lt;c&gt;</bpt>callback<ept id="p1">&lt;/c&gt;</ept> for <ph id="ph1">&lt;see langword="null" /&gt;</ph>, o delegado não será chamado.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>Extra information supplied by the caller.</source>
          <target state="translated">Informações adicionais fornecidas pelo chamador.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>Starts an asynchronous invocation of an XML Web service method using SOAP.</source>
          <target state="translated">Inicia uma invocação assíncrona de um método de serviço Web XML usando SOAP.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that is passed to the <ph id="ph2">&lt;see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)" /&gt;</ph> method to obtain the return values from the remote method call.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> que é passado para o método <ph id="ph2">&lt;see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)" /&gt;</ph> para obter os valores retornados da chamada de método remoto.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>Typically, you would not call the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A&gt;</ph> method directly, unless you were building your own proxy class for an XML Web service.</source>
          <target state="translated">Normalmente, você não poderia chamar o <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A&gt;</ph> método diretamente, a menos que você estivesse criando sua própria classe de proxy para um serviço Web XML.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>A proxy class generated by the Web Services Description Language tool (Wsdl.exe) from a Service Description exposes the XML Web service methods as names derived from the proxy class to call the XML Web service methods synchronously.</source>
          <target state="translated">Uma classe proxy gerada pela ferramenta Web Services Description Language (Wsdl.exe) de uma descrição de serviço expõe os métodos do serviço Web XML como nomes derivados da classe proxy para chamar os métodos do serviço Web XML sincronicamente.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>To call the XML Web service methods asynchronously, two additional methods are added to the proxy class for each XML Web service method, one with the <ph id="ph1">`Begin`</ph> prefix added to the name of the XML Web service method and one with the <ph id="ph2">`End`</ph> prefix added.</source>
          <target state="translated">Para chamar os métodos do serviço da Web em XML de forma assíncrona, os dois métodos adicionais são adicionados para a classe de proxy para cada método de serviço da Web em XML, uma com o <ph id="ph1">`Begin`</ph> prefixo adicionado ao nome do método de serviço Web XML e outra com o <ph id="ph2">`End`</ph> prefixo adicionado.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>The proxy class calls the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A&gt;</ph> method to start an asynchronous invocation call to the XML Web service method.</source>
          <target state="translated">As chamadas de classe de proxy de <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A&gt;</ph> método para iniciar uma chamada de invocação assíncrona para o método de serviço da Web em XML.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>For example, if an XML Web service exposes an XML Web service method named <ph id="ph1">`Add`</ph>, the proxy class contains a method named <ph id="ph2">`BeginAdd`</ph>, for starting an invocation to the XML Web service method.</source>
          <target state="translated">Por exemplo, se um serviço Web XML expõe um método de serviço Web XML chamado <ph id="ph1">`Add`</ph>, a classe de proxy contém um método chamado <ph id="ph2">`BeginAdd`</ph>, método de serviço para iniciar uma chamada para o XML da Web.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>Within the code for the <ph id="ph1">`BeginAdd`</ph>, a call is made to the <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A&gt;</ph> method and the results are placed into the expected return type for <ph id="ph3">`Add`</ph>.</source>
          <target state="translated">Dentro do código para o <ph id="ph1">`BeginAdd`</ph>, é feita uma chamada para o <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A&gt;</ph> método e os resultados são colocados no tipo de retorno esperado para <ph id="ph3">`Add`</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">`methodName`</ph> is used to find the custom attributes which may have been added to the method, such as <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">`methodName`</ph> é usado para localizar os atributos personalizados que podem ter sido adicionados para o método, como <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt;</ph> provides additional information about the derived method that is required for the SOAP protocol.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt;</ph> Fornece informações adicionais sobre o método derivado é necessária para o protocolo SOAP.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source><ph id="ph1">`asyncState`</ph> is passed into <ph id="ph2">`callback`</ph> and is included in the <ph id="ph3">&lt;xref:System.IAsyncResult&gt;</ph> that is returned from the <ph id="ph4">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">`asyncState`</ph> é passado para <ph id="ph2">`callback`</ph> e está incluído no <ph id="ph3">&lt;xref:System.IAsyncResult&gt;</ph> que é retornado o <ph id="ph4">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">`asyncState`</ph> parameter can be used to pass information about the context of the asynchronous call, specified in the <ph id="ph2">`callback`</ph> parameter, to the delegate that handles the result.</source>
          <target state="translated">O <ph id="ph1">`asyncState`</ph> parâmetro pode ser usado para passar informações sobre o contexto da chamada assíncrona, especificada no <ph id="ph2">`callback`</ph> parâmetro ao representante que manipula o resultado.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>The following code example is a proxy class generated by the Web Services Description Language tool (Wsdl.exe) for the <ph id="ph1">`Math`</ph> XML Web service.</source>
          <target state="translated">O exemplo de código a seguir é uma classe de proxy gerada pela ferramenta Web Services Description Language (Wsdl.exe) para o <ph id="ph1">`Math`</ph> XML Web Services.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>Within the <ph id="ph1">`BeginAdd`</ph> method of the proxy class, the <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A&gt;</ph> method is starting an asynchronous invocation to the <ph id="ph3">`Add`</ph> XML Web service method.</source>
          <target state="translated">Dentro de <ph id="ph1">`BeginAdd`</ph> método da classe proxy, o <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A&gt;</ph> método está iniciando uma chamada assíncrona para o <ph id="ph3">`Add`</ph> método de serviço Web XML.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>The following code example is the <ph id="ph1">`Math`</ph> XML Web service, from which the preceding proxy class was created.</source>
          <target state="translated">O exemplo de código a seguir é o <ph id="ph1">`Math`</ph> XML Web Services, da qual a classe de proxy anterior foi criada.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>The request reached the server computer, but was not processed successfully.</source>
          <target state="translated">A solicitação atingiu o computador do servidor, mas não foi processada com êxito.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>The request was not valid for the object's current state.</source>
          <target state="translated">A solicitação não era válida para o estado atual do objeto.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>An error occurred while accessing the network.</source>
          <target state="translated">Ocorreu um erro ao acessar a rede.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>Dynamically binds to an XML Web service described in the discovery document at <ph id="ph1">&lt;see cref="P:System.Web.Services.Protocols.WebClientProtocol.Url" /&gt;</ph>.</source>
          <target state="translated">Associa dinamicamente a um serviço Web XML descrito no documento de descoberta em <ph id="ph1">&lt;see cref="P:System.Web.Services.Protocols.WebClientProtocol.Url" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>An XML Web service client can dynamically bind to an XML Web service other than the one referenced in the proxy class using the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A&gt;</ph> method.</source>
          <target state="translated">Um cliente de serviço Web XML pode vincular dinamicamente a um serviço Web XML diferente daquele referenciado na classe proxy usando o <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>Typically, the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A&gt;</ph> property refers to the base address of the XML Web service.</source>
          <target state="translated">Normalmente, o <ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A&gt;</ph> propriedade refere-se para o endereço base do serviço da Web em XML.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>However, before invoking the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A&gt;</ph> method, set the <ph id="ph2">&lt;xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A&gt;</ph> property to a URL of a discovery document.</source>
          <target state="translated">No entanto, antes de chamar o <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A&gt;</ph> método, defina o <ph id="ph2">&lt;xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A&gt;</ph> propriedade para uma URL de um documento de descoberta.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>The <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A&gt;</ph> method attempts to find a match in the discovery document to the binding defined in the proxy class and then dynamically bind to it.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A&gt;</ph> método tenta encontrar uma correspondência no documento de descoberta para a associação definido na classe proxy e, em seguida, vincular dinamicamente a ele.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>If successful, subsequent method calls are directed to the XML Web service described in the discovery document.</source>
          <target state="translated">Se for bem-sucedido, chamadas de método subsequentes são direcionadas para o serviço Web XML descrito no documento discovery.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>If the proxy class is built using the Web Services Description Language tool (Wsdl.exe), the proxy class defines the binding implemented by the XML Web service methods it invokes using the <ph id="ph1">&lt;xref:System.Web.Services.WebServiceBindingAttribute&gt;</ph>.</source>
          <target state="translated">Se a classe de proxy é criada usando a ferramenta Web Services Description Language (Wsdl.exe), a classe proxy define a associação implementada pelos métodos de serviço da Web em XML, ele chama usando o <ph id="ph1">&lt;xref:System.Web.Services.WebServiceBindingAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>When an XML Web service implements multiple bindings, Wsdl.exe creates a proxy class for each binding.</source>
          <target state="translated">Quando um serviço Web XML implementa várias associações, Wsdl.exe cria uma classe de proxy para cada associação.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>Applied to each proxy class is a <ph id="ph1">&lt;xref:System.Web.Services.WebServiceBindingAttribute&gt;</ph> that defines the name of the binding and its namespace.</source>
          <target state="translated">Aplicado para cada classe de proxy é um <ph id="ph1">&lt;xref:System.Web.Services.WebServiceBindingAttribute&gt;</ph> que define o nome da associação e seu namespace.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>The discovery document you set the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A&gt;</ph> property to must contain a reference to an XML Web service that implements the same binding name and namespace, or an exception is thrown.</source>
          <target state="translated">O documento de descoberta que você definir o <ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A&gt;</ph> propriedade deve conter uma referência a um serviço Web XML que implementa o mesmo nome de associação e o namespace ou uma exceção será lançada.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>The following code example is a proxy class generated using the Wsdl.exe utility for the <ph id="ph1">`Math`</ph> XML Web service.</source>
          <target state="translated">O exemplo de código a seguir é uma classe de proxy gerada usando o utilitário Wsdl.exe para o <ph id="ph1">`Math`</ph> XML Web Services.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>A <ph id="ph1">&lt;xref:System.Web.Services.WebServiceBindingAttribute&gt;</ph> is applied to the <ph id="ph2">`Math`</ph> proxy class setting the binding name to <ph id="ph3">`MathSoap`</ph> and its namespace to <ph id="ph4">`http://tempuri.org/`</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;xref:System.Web.Services.WebServiceBindingAttribute&gt;</ph> é aplicada para o <ph id="ph2">`Math`</ph> classe proxy definindo o nome da associação <ph id="ph3">`MathSoap`</ph> e seu namespace para <ph id="ph4">`http://tempuri.org/`</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>The following code example is a Web Service client using the preceding proxy class.</source>
          <target state="translated">O exemplo de código a seguir é um cliente de serviço Web usando a classe proxy anterior.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>Within the <ph id="ph1">`EnterBtn_Click`</ph> event of the Web Form, the XML Web service client calls the <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A&gt;</ph> method attempting to dynamically bind to the URL supplied by the user.</source>
          <target state="translated">Dentro de <ph id="ph1">`EnterBtn_Click`</ph> eventos do formulário da Web, as chamadas de cliente de serviço Web XML o <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A&gt;</ph> método tentar vincular dinamicamente para a URL fornecida pelo usuário.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>This example has a text box that accepts user input, which is a potential security threat.</source>
          <target state="translated">Este exemplo tem uma caixa de texto que aceita a entrada do usuário, que é uma possível ameaça à segurança.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</source>
          <target state="translated">Por padrão, a páginas da Web ASP.NET validam a entrada do usuário não inclui elementos HTML ou script.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>For more information, see <bpt id="p1">[</bpt>Script Exploits Overview<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>Visão geral de explorações de script<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>The proxy class does not have a binding defined.</source>
          <target state="translated">A classe de proxy não tem uma associação definida.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> returned from the <ph id="ph2">&lt;see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /&gt;</ph> method.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> retornado do método <ph id="ph2">&lt;see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>Ends an asynchronous invocation of an XML Web service method using SOAP.</source>
          <target state="translated">Encerra uma invocação assíncrona de um método de serviço Web XML usando SOAP.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>An array of objects that contains the return value and any by-reference or <ph id="ph1">&lt;see langword="out" /&gt;</ph> parameters of the derived class method.</source>
          <target state="translated">Uma matriz de objetos que contém o valor retornado e quaisquer parâmetros <ph id="ph1">&lt;see langword="out" /&gt;</ph> ou por referência do método da classe derivada.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>Typically, you would not call the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A&gt;</ph> method directly, unless you were building your own proxy class for an XML Web service.</source>
          <target state="translated">Normalmente, você não poderia chamar o <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A&gt;</ph> método diretamente, a menos que você estivesse criando sua própria classe de proxy para um serviço Web XML.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>A proxy class generated by the Web Services Description Language tool (Wsdl.exe) for an XML Web service exposes the XML Web service methods as names off of the proxy class for calling the XML Web service methods synchronously.</source>
          <target state="translated">Uma classe proxy gerada pela ferramenta Web Services Description Language (Wsdl.exe) para um serviço Web XML expõe os métodos do serviço Web XML como nomes de classe de proxy para chamar os métodos do serviço da Web em XML de forma síncrona.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>For calling the XML Web service methods asynchronously, two additional methods are added to the proxy class for each XML Web service method, one with the <ph id="ph1">`Begin`</ph> prefix added to the name of the XML Web service method and one with the <ph id="ph2">`End`</ph> prefix added.</source>
          <target state="translated">Chamando métodos de serviço da Web em XML de forma assíncrona, dois métodos adicionais são adicionados à classe de proxy para cada método de serviço da Web em XML, uma com o <ph id="ph1">`Begin`</ph> prefixo adicionado ao nome do método de serviço Web XML e outra com o <ph id="ph2">`End`</ph> prefixo adicionado.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>The proxy class calls the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A&gt;</ph> method to complete an asynchronous invocation call to the XML Web service method.</source>
          <target state="translated">As chamadas de classe de proxy de <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A&gt;</ph> método para concluir uma chamada de invocação assíncrona para o método de serviço da Web em XML.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>For example, if an XML Web service exposes an XML Web service method named <ph id="ph1">`Add`</ph>, the proxy class contains a method named <ph id="ph2">`EndAdd`</ph>, for completing an asynchronous invocation of an XML Web service method.</source>
          <target state="translated">Por exemplo, se um serviço Web XML expõe um método de serviço Web XML chamado <ph id="ph1">`Add`</ph>, a classe de proxy contém um método chamado <ph id="ph2">`EndAdd`</ph>, método de serviço para a conclusão de uma chamada assíncrona de um Web XML.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>Within the code for the <ph id="ph1">`EndAdd`</ph> a call is made to the <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A&gt;</ph> method and then the results are placed into the expected return type for <ph id="ph3">`Add`</ph>.</source>
          <target state="translated">Dentro do código para o <ph id="ph1">`EndAdd`</ph> é feita uma chamada para o <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A&gt;</ph> método e, em seguida, os resultados são colocados no tipo de retorno esperado para <ph id="ph3">`Add`</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>The following code example is a proxy class generated by Wsdl.exe for the <ph id="ph1">`Math`</ph> XML Web service.</source>
          <target state="translated">O exemplo de código a seguir é uma classe de proxy gerada pelo Wsdl.exe para o <ph id="ph1">`Math`</ph> XML Web Services.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>Within the <ph id="ph1">`EndAdd`</ph> method of the proxy class, the <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A&gt;</ph> method completes the asynchronous invocation to the <ph id="ph3">`Add`</ph> XML Web service method.</source>
          <target state="translated">Dentro de <ph id="ph1">`EndAdd`</ph> método da classe proxy, o <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A&gt;</ph> método completa a chamada assíncrona para o <ph id="ph3">`Add`</ph> método de serviço Web XML.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>The following code example is the <ph id="ph1">`Math`</ph> XML Web service, from which the preceding proxy class was created.</source>
          <target state="translated">O exemplo de código a seguir é o <ph id="ph1">`Math`</ph> XML Web Services, da qual a classe de proxy anterior foi criada.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> is not the return value from the <ph id="ph2">&lt;see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> não é o valor retornado do método <ph id="ph2">&lt;see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>The request reached the server computer, but was not processed successfully.</source>
          <target state="translated">A solicitação atingiu o computador do servidor, mas não foi processada com êxito.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>The request was not valid for the object's current state.</source>
          <target state="translated">A solicitação não era válida para o estado atual do objeto.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>An error occurred while accessing the network.</source>
          <target state="translated">Ocorreu um erro ao acessar a rede.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetReaderForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.SoapClientMessage" /&gt;</ph> that provides the <ph id="ph2">&lt;see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /&gt;</ph> to initialize the <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.SoapClientMessage" /&gt;</ph> que fornece o <ph id="ph2">&lt;see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /&gt;</ph> para inicializar o <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetReaderForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)">
          <source>The initial buffer size of the <ph id="ph1">&lt;see cref="T:System.IO.StreamReader" /&gt;</ph> used by the <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">O tamanho do buffer inicial do <ph id="ph1">&lt;see cref="T:System.IO.StreamReader" /&gt;</ph> usado pelo <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetReaderForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> initialized with the <ph id="ph2">&lt;see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /&gt;</ph> property of the <ph id="ph3">&lt;see cref="T:System.Web.Services.Protocols.SoapClientMessage" /&gt;</ph> parameter.</source>
          <target state="translated">Retorna um <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> inicializado com a propriedade <ph id="ph2">&lt;see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /&gt;</ph> do parâmetro <ph id="ph3">&lt;see cref="T:System.Web.Services.Protocols.SoapClientMessage" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetReaderForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> initialized with the <ph id="ph2">&lt;see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /&gt;</ph> property of the <ph id="ph3">&lt;paramref name="message" /&gt;</ph> parameter.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> inicializado com a propriedade <ph id="ph2">&lt;see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /&gt;</ph> do parâmetro <ph id="ph3">&lt;paramref name="message" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetWebRequest(System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> to use when creating the <ph id="ph2">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> a ser usado durante a criação do <ph id="ph2">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetWebRequest(System.Uri)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> for the specified <ph id="ph2">&lt;paramref name="uri" /&gt;</ph>.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> para o <ph id="ph2">&lt;paramref name="uri" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetWebRequest(System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> for the specified URI.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> para o URI especificado.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetWebRequest(System.Uri)">
          <source>This method can be overridden to customize the <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> before the XML Web service request is made.</source>
          <target state="translated">Este método pode ser substituído para personalizar o <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> antes do XML da Web é feita a solicitação de serviço.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetWebRequest(System.Uri)">
          <source>For example, you could add a custom header to the request.</source>
          <target state="translated">Por exemplo, você pode adicionar um cabeçalho personalizado para a solicitação.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetWebRequest(System.Uri)">
          <source>The <ph id="ph1">&lt;paramref name="uri" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O parâmetro <ph id="ph1">&lt;paramref name="uri" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetWriterForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.SoapClientMessage" /&gt;</ph> that provides the <ph id="ph2">&lt;see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /&gt;</ph> to initialize the <ph id="ph3">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.SoapClientMessage" /&gt;</ph> que fornece o <ph id="ph2">&lt;see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /&gt;</ph> para inicializar o <ph id="ph3">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetWriterForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)">
          <source>The initial buffer size of the <ph id="ph1">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> used by the <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">O tamanho do buffer inicial do <ph id="ph1">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> usado pelo <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetWriterForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> initialized with the <ph id="ph2">&lt;see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /&gt;</ph> property of the <ph id="ph3">&lt;see cref="T:System.Web.Services.Protocols.SoapClientMessage" /&gt;</ph> parameter.</source>
          <target state="translated">Retorna um <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> inicializado com a propriedade <ph id="ph2">&lt;see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /&gt;</ph> do parâmetro <ph id="ph3">&lt;see cref="T:System.Web.Services.Protocols.SoapClientMessage" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetWriterForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> initialized with the <ph id="ph2">&lt;see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /&gt;</ph> property of the <ph id="ph3">&lt;paramref name="message" /&gt;</ph> parameter.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> inicializado com a propriedade <ph id="ph2">&lt;see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /&gt;</ph> do parâmetro <ph id="ph3">&lt;paramref name="message" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])">
          <source>An array of objects that contains the parameters to pass to the XML Web service.</source>
          <target state="translated">Uma matriz de objetos que contém os parâmetros a serem passados para o serviço Web XML.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])">
          <source>The order of the values in the array corresponds to the order of the parameters in the calling method of the derived class.</source>
          <target state="translated">A ordem dos valores na matriz corresponde à ordem dos parâmetros no método de chamada da classe derivada.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])">
          <source>Invokes an XML Web service method synchronously using SOAP.</source>
          <target state="translated">Invoca um método de serviço Web XML usando de forma síncrona usando SOAP.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])">
          <source>An array of objects that contains the return value and any <ph id="ph1">&lt;see langword="reference" /&gt;</ph> or <ph id="ph2">&lt;see langword="out" /&gt;</ph> parameters of the derived class method.</source>
          <target state="translated">Uma matriz de objetos que contém o valor retornado e quaisquer parâmetros <ph id="ph1">&lt;see langword="reference" /&gt;</ph> ou <ph id="ph2">&lt;see langword="out" /&gt;</ph> do método de classe derivada.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])">
          <source>Typically, you do not call the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A&gt;</ph> method directly, unless you are building your own proxy class for an XML Web service.</source>
          <target state="translated">Normalmente, você não chama o <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A&gt;</ph> método diretamente, a menos que você está criando sua própria classe de proxy para um serviço Web XML.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])">
          <source>A proxy class generated by the Web Services Description Language tool (Wsdl.exe) for an XML Web service exposes the XML Web service methods as names off of the proxy class.</source>
          <target state="translated">Uma classe proxy gerada pela ferramenta Web Services Description Language (Wsdl.exe) para um serviço Web XML expõe os métodos do serviço Web XML como nomes de classe de proxy.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])">
          <source>The proxy class calls the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A&gt;</ph> method to invoke an XML Web service method call.</source>
          <target state="translated">As chamadas de classe de proxy de <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A&gt;</ph> método para invocar uma chamada de método de serviço da Web em XML.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])">
          <source>For example, if an XML Web service exposes an XML Web service method named <ph id="ph1">`Add`</ph>, the proxy class also contains a method named <ph id="ph2">`Add`</ph>.</source>
          <target state="translated">Por exemplo, se um serviço Web XML expõe um método de serviço Web XML chamado <ph id="ph1">`Add`</ph>, a classe de proxy também contém um método chamado <ph id="ph2">`Add`</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])">
          <source>Within the code for the <ph id="ph1">`Add`</ph> method in the proxy class, a synchronous call is made to the XML Web service method through the <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A&gt;</ph> method and then the results are placed into the expected return type for <ph id="ph3">`Add`</ph>.</source>
          <target state="translated">Dentro do código para o <ph id="ph1">`Add`</ph> método na classe proxy, é feita uma chamada síncrona para o método de serviço Web XML por meio de <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A&gt;</ph> método e, em seguida, os resultados são colocados no tipo de retorno esperado para <ph id="ph3">`Add`</ph>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])">
          <source>The <ph id="ph1">`methodName`</ph> parameter is used to find the custom attributes that may have been added to the method, such as <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">`methodName`</ph> parâmetro é usado para localizar os atributos personalizados que podem ter sido adicionados para o método, como <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])">
          <source><ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt;</ph> provides additional information on the derived method which is required for the SOAP protocol.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt;</ph> Fornece informações adicionais sobre o método derivado que é necessário para o protocolo SOAP.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])">
          <source>The following code example is a proxy class generated by Wsdl.exe for the <ph id="ph1">`Math`</ph> XML Web service.</source>
          <target state="translated">O exemplo de código a seguir é uma classe de proxy gerada pelo Wsdl.exe para o <ph id="ph1">`Math`</ph> XML Web Services.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])">
          <source>Within the <ph id="ph1">`Add`</ph> method of the proxy class, the <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A&gt;</ph> method is calling the <ph id="ph3">`Add`</ph> XML Web service method.</source>
          <target state="translated">Dentro de <ph id="ph1">`Add`</ph> método da classe proxy, o <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A&gt;</ph> está chamando o método o <ph id="ph3">`Add`</ph> método de serviço Web XML.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])">
          <source>The following code example is the <ph id="ph1">`Math`</ph> XML Web service, from which the preceding proxy class was created.</source>
          <target state="translated">O exemplo de código a seguir é o <ph id="ph1">`Math`</ph> XML Web Services, da qual a classe de proxy anterior foi criada.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])">
          <source>The request reached the server computer, but was not processed successfully.</source>
          <target state="translated">A solicitação atingiu o computador do servidor, mas não foi processada com êxito.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])">
          <source>The request was not valid for the object's current state.</source>
          <target state="translated">A solicitação não era válida para o estado atual do objeto.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])">
          <source>An error occurred while accessing the network.</source>
          <target state="translated">Ocorreu um erro ao acessar a rede.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>Invokes the specified method asynchronously.</source>
          <target state="translated">Chama o método especificado de forma assíncrona.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback)">
          <source>The name of the method to invoke.</source>
          <target state="translated">O nome do método que será invocado.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback)">
          <source>The parameters to pass to the method.</source>
          <target state="translated">Os parâmetros que serão passados para o método.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback)">
          <source>The delegate called when the method invocation has completed.</source>
          <target state="translated">O delegado é chamado quando a chamada do método é concluída.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback)">
          <source>Invokes the specified method asynchronously.</source>
          <target state="translated">Chama o método especificado de forma assíncrona.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)">
          <source>The name of the method to invoke.</source>
          <target state="translated">O nome do método que será invocado.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)">
          <source>The parameters to pass to the method.</source>
          <target state="translated">Os parâmetros que serão passados para o método.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)">
          <source>The delegate called when the method invocation has completed.</source>
          <target state="translated">O delegado é chamado quando a chamada do método é concluída.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)">
          <source>An object used to pass state information into the <bpt id="p1">&lt;c&gt;</bpt>callback<ept id="p1">&lt;/c&gt;</ept> delegate.</source>
          <target state="translated">Um objeto usado para passar informações de estado no delegado <bpt id="p1">&lt;c&gt;</bpt>callback<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)">
          <source>Invokes the specified method asynchronously.</source>
          <target state="translated">Chama o método especificado de forma assíncrona.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="P:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion">
          <source>Gets or sets the version of the SOAP protocol used to make the SOAP request to the XML Web service.</source>
          <target state="translated">Obtém ou define a versão do protocolo SOAP usada para criar a solicitação SOAP para o serviço Web XML.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.SoapProtocolVersion" /&gt;</ph> values.</source>
          <target state="translated">Um dos valores de <ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.SoapProtocolVersion" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Web.Services.Protocols.SoapProtocolVersion.Soap11" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see cref="F:System.Web.Services.Protocols.SoapProtocolVersion.Soap11" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion">
          <source>The <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion%2A&gt;</ph> property is set in the proxy class generated by the Web Services Description Language tool (Wsdl.exe) to <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap11&gt;</ph> by default when a WSDL document for an XML Web service supports SOAP version 1.1.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion%2A&gt;</ph> propriedade é definida na classe proxy gerado pela ferramenta Web Services Description Language (Wsdl.exe) para <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap11&gt;</ph> por padrão quando um documento WSDL para um serviço Web XML dá suporte a SOAP versão 1.1.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion">
          <source>However, when an XML Web service only supports SOAP 1.2, Wsdl.exe sets the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap12&gt;</ph>.</source>
          <target state="translated">No entanto, quando um serviço Web XML só dá suporte a SOAP 1.2, Wsdl.exe conjuntos de <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion%2A&gt;</ph> propriedade <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap12&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion">
          <source>To choose the version of the SOAP protocol when generating the proxy class with Wsdl.exe, use the <ph id="ph1">`/protocol`</ph> switch with the <ph id="ph2">`SOAP`</ph> or <ph id="ph3">`SOAP12`</ph> settings to set the <ph id="ph4">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion%2A&gt;</ph> property to <ph id="ph5">&lt;xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap11&gt;</ph> and <ph id="ph6">&lt;xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap12&gt;</ph>, respectively.</source>
          <target state="translated">Para escolher a versão do protocolo SOAP ao gerar a classe de proxy com Wsdl.exe, use o <ph id="ph1">`/protocol`</ph> alternar com a <ph id="ph2">`SOAP`</ph> ou <ph id="ph3">`SOAP12`</ph> configurações para definir a <ph id="ph4">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion%2A&gt;</ph> propriedade <ph id="ph5">&lt;xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap11&gt;</ph> e <ph id="ph6">&lt;xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap12&gt;</ph>, respectivamente.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion">
          <source>The following code example sets the version of the protocol used to communicate with an XML Web service to SOAP 1.2.</source>
          <target state="translated">O exemplo de código a seguir define a versão do protocolo usado para se comunicar com um serviço Web XML para SOAP 1.2.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>