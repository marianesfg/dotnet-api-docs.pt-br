<Type Name="HttpMethodAttribute" FullName="System.Web.Services.Protocols.HttpMethodAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="89539e504444e7e2147f83c12d748c98fe2c592b" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48757640" /></Metadata><TypeSignature Language="C#" Value="public sealed class HttpMethodAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpMethodAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.HttpMethodAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpMethodAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpMethodAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type HttpMethodAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>A aplicação desse atributo a um cliente de serviço Web XML usando HTTP-GET ou HTTP-POST define os tipos que serializam os parâmetros enviados a um método do serviço Web XML e leem a resposta do método do serviço Web XML. Essa classe não pode ser herdada.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se um cliente de serviço Web XML chama um método de serviço Web XML usando HTTP-GET <xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A> deve ser definida como `XmlReturnReader` e <xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A> definido como `UrlParameterWriter`. Clientes de serviço Web XML chamando um serviço Web XML usando HTTP POST devem definir <xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A> à `XmlReturnReader` e <xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A> para `HtmlFormParameterWriter`.  
  
   
  
## Examples  
 O exemplo a seguir é uma classe de proxy gerada pelo utilitário Wsdl.exe para chamar um utilitário de serviço Web XML usando HTTP POST. O Wsdl.exe fornece automaticamente os tipos corretos para <xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A> e <xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A>, juntamente com a especificação de que a classe de proxy herda de <xref:System.Web.Services.Protocols.HttpPostClientProtocol>.  
  
 [!code-cpp[Classic HttpMethodAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic HttpMethodAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic HttpMethodAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpMethodAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic HttpMethodAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpMethodAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute" />
    <altmember cref="T:System.Web.Services.Protocols.SoapRpcMethodAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Services.Protocols.HttpMethodAttribute" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpMethodAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpMethodAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpMethodAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Services.Protocols.HttpMethodAttribute" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpMethodAttribute (Type returnFormatter, Type parameterFormatter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type returnFormatter, class System.Type parameterFormatter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpMethodAttribute.#ctor(System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (returnFormatter As Type, parameterFormatter As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpMethodAttribute(Type ^ returnFormatter, Type ^ parameterFormatter);" />
      <MemberSignature Language="F#" Value="new System.Web.Services.Protocols.HttpMethodAttribute : Type * Type -&gt; System.Web.Services.Protocols.HttpMethodAttribute" Usage="new System.Web.Services.Protocols.HttpMethodAttribute (returnFormatter, parameterFormatter)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="returnFormatter" Type="System.Type" />
        <Parameter Name="parameterFormatter" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="returnFormatter">Inicializa a propriedade <see cref="P:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter" /> para um <see cref="T:System.Type" /> que desserializa a resposta de um método de serviço Web XML.</param>
        <param name="parameterFormatter">Inicializa a propriedade <see cref="P:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter" /> para um <see cref="T:System.Type" /> que serializa parâmetros enviados de um cliente de serviço Web XML para um método de serviço Web XML.</param>
        <summary>Inicializa uma nova instância do <see cref="T:System.Web.Services.Protocols.HttpMethodAttribute" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterFormatter">
      <MemberSignature Language="C#" Value="public Type ParameterFormatter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ParameterFormatter" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter" />
      <MemberSignature Language="VB.NET" Value="Public Property ParameterFormatter As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ParameterFormatter { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ParameterFormatter : Type with get, set" Usage="System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um <see cref="T:System.Type" /> que serializa parâmetros enviados de um cliente de serviço Web XML para o método de serviço Web XML.</summary>
        <value>Um <see cref="T:System.Type" /> que serializa parâmetros enviados de um cliente de serviço Web XML para um método de serviço Web XML. Não há nenhum padrão.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o cliente do serviço Web XML está invocando um método de serviço Web XML usando HTTP GET ou HTTP-POST <xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A> deve ser `XMLReturnReader`.  
  
   
  
## Examples  
 O exemplo é uma classe proxy gerada pelo utilitário Wsdl.exe para um cliente de serviço Web XML usando HTTP-GET, definindo <xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A> para o valor necessário de `XMLReturnReader`.  
  
 [!code-cpp[Classic HttpMethodAttribute.ReturnFormatter Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic HttpMethodAttribute.ReturnFormatter Example/CPP/source.cpp#1)]
 [!code-csharp[Classic HttpMethodAttribute.ReturnFormatter Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpMethodAttribute.ReturnFormatter Example/CS/source.cs#1)]
 [!code-vb[Classic HttpMethodAttribute.ReturnFormatter Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpMethodAttribute.ReturnFormatter Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReturnFormatter">
      <MemberSignature Language="C#" Value="public Type ReturnFormatter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ReturnFormatter" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter" />
      <MemberSignature Language="VB.NET" Value="Public Property ReturnFormatter As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ReturnFormatter { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ReturnFormatter : Type with get, set" Usage="System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um <see cref="T:System.Type" /> que desserializa a resposta de um método de serviço Web XML.</summary>
        <value>Um <see cref="T:System.Type" /> que desserializa a resposta de um método de serviço Web XML. Não há nenhum padrão.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o cliente do serviço Web XML está invocando um método de serviço Web XML usando HTTP-GET <xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A> deve ser `UrlParameterWriter`, enquanto que um cliente usando HTTP POST deve definir <xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A> para `HtmlFormParameterWriter`.  
  
   
  
## Examples  
 O exemplo é uma classe proxy gerada pelo utilitário Wsdl.exe para um cliente de serviço Web XML usando HTTP-GET, definindo <xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A> para o valor necessário de `UrlParameterWriter`.  
  
 [!code-cpp[Classic HttpMethodAttribute.ReturnFormatter Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic HttpMethodAttribute.ReturnFormatter Example/CPP/source.cpp#1)]
 [!code-csharp[Classic HttpMethodAttribute.ReturnFormatter Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpMethodAttribute.ReturnFormatter Example/CS/source.cs#1)]
 [!code-vb[Classic HttpMethodAttribute.ReturnFormatter Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpMethodAttribute.ReturnFormatter Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>