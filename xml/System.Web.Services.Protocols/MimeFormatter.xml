<Type Name="MimeFormatter" FullName="System.Web.Services.Protocols.MimeFormatter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="543984d441712e59cbc38c02dc486c49a04def76" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class MimeFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MimeFormatter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.MimeFormatter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MimeFormatter" />
  <TypeSignature Language="C++ CLI" Value="public ref class MimeFormatter abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="1e161-101">Fornece uma classe base abstrata para todos os leitores e gravadores para cliente e serviços Web implementados usando HTTP, mas sem SOAP.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1e161-101">Provides an abstract base class for all readers and writers for Web services and clients implemented using HTTP but without SOAP.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e161-102">Os leitores e gravadores de serviço web serializar e desserializar, respectivamente, entre os objetos de parâmetro ou retornado dos métodos Web e os fluxos de solicitação ou resposta HTTP.</span><span class="sxs-lookup"><span data-stu-id="1e161-102">Web service writers and readers serialize and deserialize, respectively, between the parameter or return objects of Web methods and the HTTP request or response streams.</span></span> <span data-ttu-id="1e161-103">O <xref:System.Web.Services.Protocols.MimeFormatter> classe estabelece uma interface comum e a funcionalidade para classes de leitor e gravador, no cliente e no lado do serviço.</span><span class="sxs-lookup"><span data-stu-id="1e161-103">The <xref:System.Web.Services.Protocols.MimeFormatter> class establishes a common interface and functionality for reader and writer classes, in both client and service-side .</span></span>  
  
 <span data-ttu-id="1e161-104">O <xref:System.Web.Services.Protocols.MimeFormatter> classe oferece suporte a implementações do .NET Framework do Web services por meio de operações de HTTP GET e POST HTTP.</span><span class="sxs-lookup"><span data-stu-id="1e161-104">The <xref:System.Web.Services.Protocols.MimeFormatter> class supports the .NET Framework's implementations of Web services via the HTTP-GET and HTTP-POST operations.</span></span> <span data-ttu-id="1e161-105">Em operações GET do HTTP parâmetros de solicitação são codificados do solicitação HTTP localizador de URL (Uniform Resource).</span><span class="sxs-lookup"><span data-stu-id="1e161-105">In HTTP-GET operations request parameters are encoded in the HTTP request's Uniform Resource Locator (URL).</span></span> <span data-ttu-id="1e161-106">Em operações de HTTP POST, parâmetros de solicitação são codificados no corpo da solicitação HTTP, como em um formulário HTML.</span><span class="sxs-lookup"><span data-stu-id="1e161-106">In HTTP-POST operations, request parameters are encoded in the HTTP request body, as with an HTML form.</span></span> <span data-ttu-id="1e161-107">Ambas as implementações, o valor de retorno é exibido no corpo da resposta HTTP como um documento XML não SOAP.</span><span class="sxs-lookup"><span data-stu-id="1e161-107">With both implementations, the return value appears in the HTTP response body as a non-SOAP XML document.</span></span>  
  
 <span data-ttu-id="1e161-108">Um desenvolvedor normalmente não precisa usar diretamente <xref:System.Web.Services.Protocols.MimeFormatter> ou suas classes descendentes.</span><span class="sxs-lookup"><span data-stu-id="1e161-108">A developer typically does not need to directly use <xref:System.Web.Services.Protocols.MimeFormatter> or its descendant classes.</span></span> <span data-ttu-id="1e161-109">Em vez disso, quando a ferramenta Wsdl.exe gera o código de proxy do cliente de acordo com as implementações de HTTP GET ou POST HTTP, ela se aplica a <xref:System.Web.Services.Protocols.HttpMethodAttribute> para cada método Web e define o atributo <xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A> e <xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A> derivam de propriedades para o tipo apropriado de <xref:System.Web.Services.Protocols.MimeFormatter> classe.</span><span class="sxs-lookup"><span data-stu-id="1e161-109">Instead, when the Wsdl.exe tool generates client proxy code according to the HTTP-GET or HTTP-POST implementations, it applies the <xref:System.Web.Services.Protocols.HttpMethodAttribute> to each Web method and sets the attribute's <xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A> and <xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A> properties to the appropriate type derived from the <xref:System.Web.Services.Protocols.MimeFormatter> class.</span></span> <span data-ttu-id="1e161-110">No servidor, os tipos derivados apropriados são usados de acordo com as configurações em um arquivo de configuração do ASP.NET (Web. config).</span><span class="sxs-lookup"><span data-stu-id="1e161-110">On the server, the appropriate derived types are used according to settings in an ASP.NET configuration file (Web.config).</span></span> <span data-ttu-id="1e161-111">No cliente, os tipos derivados apropriados são determinados de WSDL.</span><span class="sxs-lookup"><span data-stu-id="1e161-111">On the client the appropriate derived types are determined from the WSDL.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.HttpMethodAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MimeFormatter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MimeFormatter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1e161-112">Inicializa uma nova instância da classe <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e161-112">Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Web.Services.Protocols.MimeFormatter CreateInstance (Type type, object initializer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Services.Protocols.MimeFormatter CreateInstance(class System.Type type, object initializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.CreateInstance(System.Type,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Services::Protocols::MimeFormatter ^ CreateInstance(Type ^ type, System::Object ^ initializer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.MimeFormatter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="initializer" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="1e161-113">O Tipo, derivado de <see cref="T:System.Web.Services.Protocols.MimeFormatter" />, do qual criar uma instância.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e161-113">The Type, derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />, of which to create an instance.</span>
          </span>
        </param>
        <param name="initializer">
          <span data-ttu-id="1e161-114">Um objeto usado para inicializar a instância obtida anteriormente por meio da implementação da classe derivada do método <see cref="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e161-114">An object used to initialize the instance obtained earlier through the derived class's implementation of the <see cref="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e161-115">Cria e inicializa uma instância de uma classe concreta derivada de <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e161-115">Creates and initializes an instance of a concrete class derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1e161-116">Um objeto <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e161-116">A <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e161-117">O <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> método cria uma instância da classe derivada e invoca a implementação da classe derivada do resumo <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> método.</span><span class="sxs-lookup"><span data-stu-id="1e161-117">The <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> method creates an instance of the derived class and invokes the derived class's implementation of the abstract <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method.</span></span> <span data-ttu-id="1e161-118">O <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> método é invocado quando uma solicitação ou resposta é processada.</span><span class="sxs-lookup"><span data-stu-id="1e161-118">The <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> method is invoked at the time a request or response is processed.</span></span>  
  
 <span data-ttu-id="1e161-119">Um inicializador é um objeto passado como um parâmetro para o <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> método.</span><span class="sxs-lookup"><span data-stu-id="1e161-119">An initializer is an object passed as a parameter to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method.</span></span> <span data-ttu-id="1e161-120">O inicializador passado como um parâmetro para o <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> método é obtido de outra instância da classe derivada, invocando o <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> método durante a inicialização do cliente ou serviço.</span><span class="sxs-lookup"><span data-stu-id="1e161-120">The initializer passed as a parameter to the <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> method is obtained from another instance of the derived class, by invoking the <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> method during client or service initialization.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInitializer">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1e161-121">Quando substituído em uma classe derivada, retorna um inicializador para o método especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e161-121">When overridden in a derived class, returns an initializer for the specified method.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInitializer">
      <MemberSignature Language="C#" Value="public abstract object GetInitializer (System.Web.Services.Protocols.LogicalMethodInfo methodInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetInitializer(class System.Web.Services.Protocols.LogicalMethodInfo methodInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetInitializer (methodInfo As LogicalMethodInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetInitializer(System::Web::Services::Protocols::LogicalMethodInfo ^ methodInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodInfo" Type="System.Web.Services.Protocols.LogicalMethodInfo" />
      </Parameters>
      <Docs>
        <param name="methodInfo">
          <span data-ttu-id="1e161-122">Um <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> que especifica o método Web para o qual o inicializador é obtido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e161-122">A <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> that specifies the Web method for which the initializer is obtained.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e161-123">Quando substituído em uma classe derivada, retorna um inicializador para o método especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e161-123">When overridden in a derived class, returns an initializer for the specified method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1e161-124">Um <see cref="T:System.Object" /> que contém o inicializador para o método especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e161-124">An <see cref="T:System.Object" /> that contains the initializer for the specified method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e161-125">Um inicializador é um objeto passado como um parâmetro para o <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> método.</span><span class="sxs-lookup"><span data-stu-id="1e161-125">An initializer is an object passed as a parameter to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method.</span></span>  
  
 <span data-ttu-id="1e161-126">A implementação de classe derivada do <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> método de instância é chamado durante a inicialização do cliente ou serviço.</span><span class="sxs-lookup"><span data-stu-id="1e161-126">A derived class's implementation of the <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> instance method is invoked during client or service initialization.</span></span> <span data-ttu-id="1e161-127">Posteriormente, quando uma solicitação ou resposta é processada, o objeto de inicializador é passado para estático <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> método, que cria uma instância de outro objeto da classe derivada e, em seguida, para o <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> método para inicializá-lo.</span><span class="sxs-lookup"><span data-stu-id="1e161-127">Later, at the time a request or response is processed, the initializer object is passed to the static <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> method, which creates an instance of another object of the derived class, and then to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method to initialize it.</span></span> <span data-ttu-id="1e161-128">O outro objeto realiza a leitura ou gravação real.</span><span class="sxs-lookup"><span data-stu-id="1e161-128">The other object performs the actual reading or writing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInitializer">
      <MemberSignature Language="C#" Value="public static object GetInitializer (Type type, System.Web.Services.Protocols.LogicalMethodInfo methodInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetInitializer(class System.Type type, class System.Web.Services.Protocols.LogicalMethodInfo methodInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetInitializer(Type ^ type, System::Web::Services::Protocols::LogicalMethodInfo ^ methodInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="methodInfo" Type="System.Web.Services.Protocols.LogicalMethodInfo" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="1e161-129">O Tipo, derivado de <see cref="T:System.Web.Services.Protocols.MimeFormatter" />, para o qual inicializador é obtido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e161-129">The Type, derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />,- for which an initializer is obtained.</span>
          </span>
        </param>
        <param name="methodInfo">
          <span data-ttu-id="1e161-130">Um <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> que especifica o método Web para o qual o inicializador é obtido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e161-130">A <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> that specifies the Web method for which the initializer is obtained.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e161-131">Retorna um inicializador para o método especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e161-131">Returns an initializer for the specified method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1e161-132">Um objeto <see cref="T:System.Object" /> que contém o inicializador para o método especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e161-132">A <see cref="T:System.Object" /> object that contains the initializer for the specified method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e161-133">Um inicializador é um objeto passado como um parâmetro para o <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> método.</span><span class="sxs-lookup"><span data-stu-id="1e161-133">An initializer is an object passed as a parameter to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method.</span></span>  
  
 <span data-ttu-id="1e161-134">Estático <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> método invoca a classe derivada <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> método, implicitamente, criando uma instância da classe derivada.</span><span class="sxs-lookup"><span data-stu-id="1e161-134">The static <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> method invokes the derived class's <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> method, implicitly creating an instance of the derived class.</span></span> <span data-ttu-id="1e161-135">No momento uma solicitação ou resposta é processada, o objeto de inicializador é passado para o <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> método de outra instância da classe derivada.</span><span class="sxs-lookup"><span data-stu-id="1e161-135">At the time a request or response is processed, the initializer object is passed to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method of another instance of the derived class.</span></span> <span data-ttu-id="1e161-136">O último objeto realiza a leitura ou gravação real.</span><span class="sxs-lookup"><span data-stu-id="1e161-136">The latter object performs the actual reading or writing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInitializers">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1e161-137">Quando substituído em uma classe derivada, retorna uma matriz de objetos inicializadores correspondente a uma matriz de entrada das definições de método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e161-137">When overridden in a derived class, returns an array of initializer objects corresponding to an input array of method definitions.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInitializers">
      <MemberSignature Language="C#" Value="public virtual object[] GetInitializers (System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetInitializers(class System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetInitializers (methodInfos As LogicalMethodInfo()) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Object ^&gt; ^ GetInitializers(cli::array &lt;System::Web::Services::Protocols::LogicalMethodInfo ^&gt; ^ methodInfos);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodInfos" Type="System.Web.Services.Protocols.LogicalMethodInfo[]" />
      </Parameters>
      <Docs>
        <param name="methodInfos">
          <span data-ttu-id="1e161-138">Uma matriz dos métodos Web em que, para cada método, é obtido o objeto de índice correspondente na matriz do inicializador retornada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e161-138">An array of Web methods where, for each method, the object of the corresponding index in the returned initializer array is obtained.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e161-139">Quando substituído em uma classe derivada, retorna uma matriz de objetos inicializadores correspondente a uma matriz de entrada das definições de método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e161-139">When overridden in a derived class, returns an array of initializer objects corresponding to an input array of method definitions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1e161-140">Uma matriz de objetos de inicializador correspondente à matriz de entrada das definições de método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e161-140">An array of initializer objects corresponding to the input array of method definitions.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e161-141">Um inicializador é um objeto passado como um parâmetro para o <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> método.</span><span class="sxs-lookup"><span data-stu-id="1e161-141">An initializer is an object passed as a parameter to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method.</span></span>  
  
 <span data-ttu-id="1e161-142">O <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializers%2A> invoca o método de instância de <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> entrada do método de instância para cada método Web.</span><span class="sxs-lookup"><span data-stu-id="1e161-142">The <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializers%2A> instance method invokes the <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> instance method for each input Web method.</span></span> <span data-ttu-id="1e161-143">Isso significa que uma instância de uma classe derivada de <xref:System.Web.Services.Protocols.MimeFormatter> já foi criado.</span><span class="sxs-lookup"><span data-stu-id="1e161-143">This means an instance of a class derived from <xref:System.Web.Services.Protocols.MimeFormatter> has already been created.</span></span> <span data-ttu-id="1e161-144">No momento uma solicitação ou resposta é processada, o inicializador é passado para o <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> método de outra instância da classe derivada.</span><span class="sxs-lookup"><span data-stu-id="1e161-144">At the time a request or response is processed, the initializer is passed to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method of another instance of the derived class.</span></span> <span data-ttu-id="1e161-145">O último objeto realiza a leitura ou gravação real.</span><span class="sxs-lookup"><span data-stu-id="1e161-145">The latter object performs the actual reading or writing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInitializers">
      <MemberSignature Language="C#" Value="public static object[] GetInitializers (Type type, System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object[] GetInitializers(class System.Type type, class System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Object ^&gt; ^ GetInitializers(Type ^ type, cli::array &lt;System::Web::Services::Protocols::LogicalMethodInfo ^&gt; ^ methodInfos);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="methodInfos" Type="System.Web.Services.Protocols.LogicalMethodInfo[]" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="1e161-146">O Tipo, derivado de <see cref="T:System.Web.Services.Protocols.MimeFormatter" />, para o qual os inicializadores são obtidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e161-146">The Type, derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />, for which initializers are obtained.</span>
          </span>
        </param>
        <param name="methodInfos">
          <span data-ttu-id="1e161-147">Uma matriz do tipo <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />, que especifica os métodos Web para os quais os inicializadores são obtidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e161-147">An array of type <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> that specifies the Web methods for which the initializers are obtained.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e161-148">Retorna uma matriz de objetos inicializadores correspondente a uma matriz de entrada das definições de método para uma classe especificada derivada de <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e161-148">Returns an array of initializer objects corresponding to an input array of method definitions for a specified class derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1e161-149">Uma matriz de objetos inicializadores correspondente a uma matriz de entrada das definições de método para uma classe especificada derivada de <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e161-149">An array of initializer objects corresponding to the input array of method definitions for a specified class derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e161-150">Um inicializador é um objeto passado como um parâmetro para o <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> método.</span><span class="sxs-lookup"><span data-stu-id="1e161-150">An initializer is an object passed as a parameter to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method.</span></span>  
  
 <span data-ttu-id="1e161-151">Estático <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializers%2A> método faz com que a invocação do <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> método pertencente à classe derivada especificada pelo `type` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="1e161-151">The static <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializers%2A> method causes the invocation of the <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> method belonging to the derived class specified by the `type` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public abstract void Initialize (object initializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(object initializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.Initialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Initialize (initializer As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Initialize(System::Object ^ initializer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="initializer" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="initializer">
          <span data-ttu-id="1e161-152">Um objeto de um tipo adequado a uma classe específica que está implementando o método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e161-152">An object of a type appropriate to the particular class that is implementing the method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e161-153">Quando substituído em uma classe derivada, inicializa uma instância.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e161-153">When overridden in a derived class, initializes an instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e161-154">O <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> método é invocado quando uma solicitação ou resposta é processada; no entanto, o inicializador é obtido chamando o <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> método em outra instância durante a inicialização do cliente ou serviço.</span><span class="sxs-lookup"><span data-stu-id="1e161-154">The <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method is invoked at the time a request or response is processed; however, the initializer is obtained by calling the <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> method on another instance during client or service initialization.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>