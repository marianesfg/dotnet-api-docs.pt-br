<Type Name="HttpPostClientProtocol" FullName="System.Web.Services.Protocols.HttpPostClientProtocol">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8422e1989cd826124e66c2248612198961ffe428" /><Meta Name="ms.sourcegitcommit" Value="800d45fb80a298c4bde743e8a40af69755fc850f" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="01/24/2019" /><Meta Name="ms.locfileid" Value="54895987" /></Metadata><TypeSignature Language="C#" Value="public class HttpPostClientProtocol : System.Web.Services.Protocols.HttpSimpleClientProtocol" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HttpPostClientProtocol extends System.Web.Services.Protocols.HttpSimpleClientProtocol" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.HttpPostClientProtocol" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpPostClientProtocol&#xA;Inherits HttpSimpleClientProtocol" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpPostClientProtocol : System::Web::Services::Protocols::HttpSimpleClientProtocol" />
  <TypeSignature Language="F#" Value="type HttpPostClientProtocol = class&#xA;    inherit HttpSimpleClientProtocol" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Services.Protocols.HttpSimpleClientProtocol</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e4de9-101">A classe base para proxies de cliente do serviço Web XML que usam o protocolo HTTP POST.</span><span class="sxs-lookup"><span data-stu-id="e4de9-101">The base class for XML Web service client proxies that use the HTTP-POST protocol.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4de9-102">Quando um cliente de serviço Web XML usa o protocolo HTTP POST, pelos parâmetros padrão são codificadas dentro do corpo HTTP usando as regras de codificação de URL e usa o XML sem formatação para a resposta.</span><span class="sxs-lookup"><span data-stu-id="e4de9-102">When an XML Web service client uses the HTTP-POST protocol, by default parameters are encoded within the HTTP body using URL encoding rules and uses plain XML for the response.</span></span> <span data-ttu-id="e4de9-103">Esse protocolo usa classes que derivam de <xref:System.Web.Services.Protocols.MimeFormatter> para codificar parâmetros e retornar valores em MIME padrão formatos.</span><span class="sxs-lookup"><span data-stu-id="e4de9-103">This protocol uses classes that derive from <xref:System.Web.Services.Protocols.MimeFormatter> to encode parameters and return values into standard MIME formats.</span></span> <span data-ttu-id="e4de9-104">Para usar os codificadores são especificados na descrição do serviço.</span><span class="sxs-lookup"><span data-stu-id="e4de9-104">The encoders to use are specified in the service description.</span></span>  
  
 <span data-ttu-id="e4de9-105">Se você estiver criando um cliente de serviço Web XML usando o ASP.NET, em seguida, uma classe de proxy derivado indiretamente ou diretamente do <xref:System.Web.Services.Protocols.WebClientProtocol> precisa ser criada para o serviço Web XML que você deseja chamar.</span><span class="sxs-lookup"><span data-stu-id="e4de9-105">If you are building an XML Web service client using ASP.NET, then a proxy class deriving indirectly or directly from <xref:System.Web.Services.Protocols.WebClientProtocol> needs to be created for the XML Web service you want to call.</span></span> <span data-ttu-id="e4de9-106">Quando o cliente do serviço Web XML é chamada usando HTTP, derive a classe de proxy <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol>, que por sua vez deriva <xref:System.Web.Services.Protocols.WebClientProtocol>.</span><span class="sxs-lookup"><span data-stu-id="e4de9-106">When the XML Web service client is calling using HTTP, derive the proxy class <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol>, which in turn derives from <xref:System.Web.Services.Protocols.WebClientProtocol>.</span></span>  
  
 <span data-ttu-id="e4de9-107"><xref:System.Web.Services.Protocols.HttpGetClientProtocol> e <xref:System.Web.Services.Protocols.HttpPostClientProtocol> derivam <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol>, fornecendo o suporte para chamar um método de serviço Web XML usando HTTP GET e HTTP POST, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="e4de9-107"><xref:System.Web.Services.Protocols.HttpGetClientProtocol> and <xref:System.Web.Services.Protocols.HttpPostClientProtocol> derive from <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol>, providing the support for calling an XML Web service method using HTTP-GET and HTTP-POST respectively.</span></span> <span data-ttu-id="e4de9-108">Clientes chamando um serviço Web XML usando SOAP devem derivar de <xref:System.Web.Services.Protocols.SoapHttpClientProtocol>.</span><span class="sxs-lookup"><span data-stu-id="e4de9-108">Clients calling an XML Web service using SOAP should derive from <xref:System.Web.Services.Protocols.SoapHttpClientProtocol>.</span></span>  
  
 <span data-ttu-id="e4de9-109">Para obter detalhes sobre a criação de uma classe de proxy, consulte [criando um Proxy de serviço Web XML](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/d2s8y7bs(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="e4de9-109">For details on building a proxy class, see [Creating an XML Web Service Proxy](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/d2s8y7bs(v=vs.100)).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4de9-110">O exemplo a seguir é uma classe de proxy gerada pelo utilitário Wsdl.exe para o `Math` abaixo de serviço Web XML.</span><span class="sxs-lookup"><span data-stu-id="e4de9-110">The following example is a proxy class generated by the Wsdl.exe utility for the `Math` XML Web service below.</span></span> <span data-ttu-id="e4de9-111">A classe de proxy deriva <xref:System.Web.Services.Protocols.HttpPostClientProtocol>, que é derivada de abstrata <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol> classe.</span><span class="sxs-lookup"><span data-stu-id="e4de9-111">The proxy class derives from <xref:System.Web.Services.Protocols.HttpPostClientProtocol>, which derives from the abstract <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol> class.</span></span>  
  
 [!code-cpp[Classic HttpPostClientProtocol Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic HttpPostClientProtocol Example/CPP/source.cpp#1)]
 [!code-csharp[Classic HttpPostClientProtocol Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpPostClientProtocol Example/CS/source.cs#1)]
 [!code-vb[Classic HttpPostClientProtocol Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpPostClientProtocol Example/VB/source.vb#1)]  
  
 <span data-ttu-id="e4de9-112">O exemplo a seguir é o `Math` serviço Web XML, da qual a classe de proxy anterior foi criada.</span><span class="sxs-lookup"><span data-stu-id="e4de9-112">The following example is the `Math` XML Web service, from which the previous proxy class was created.</span></span>  
  
  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.HttpGetClientProtocol" />
    <altmember cref="T:System.Web.Services.Protocols.HttpSimpleClientProtocol" />
    <altmember cref="T:System.Web.Services.Protocols.WebClientProtocol" />
    <altmember cref="T:System.Web.Services.Protocols.SoapHttpClientProtocol" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpPostClientProtocol ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpPostClientProtocol.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpPostClientProtocol();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e4de9-113">Inicializa uma nova instância da classe <see cref="T:System.Web.Services.Protocols.HttpPostClientProtocol" />.</span><span class="sxs-lookup"><span data-stu-id="e4de9-113">Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.HttpPostClientProtocol" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[HttpPostClientProtocol_Constructor#1](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpPostClientProtocol_Constructor/CPP/httppostclientprotocol_constructor.cpp#1)]
 [!code-csharp[HttpPostClientProtocol_Constructor#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpPostClientProtocol_Constructor/CS/httppostclientprotocol_constructor.cs#1)]
 [!code-vb[HttpPostClientProtocol_Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpPostClientProtocol_Constructor/VB/httppostclientprotocol_constructor.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWebRequest">
      <MemberSignature Language="C#" Value="protected override System.Net.WebRequest GetWebRequest (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Net.WebRequest GetWebRequest(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpPostClientProtocol.GetWebRequest(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Net::WebRequest ^ GetWebRequest(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="override this.GetWebRequest : Uri -&gt; System.Net.WebRequest" Usage="httpPostClientProtocol.GetWebRequest uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="e4de9-114">O <see cref="T:System.Uri" /> a ser usado durante a criação do <see cref="T:System.Net.WebRequest" />.</span><span class="sxs-lookup"><span data-stu-id="e4de9-114">The <see cref="T:System.Uri" /> to use when creating the <see cref="T:System.Net.WebRequest" />.</span></span></param>
        <summary><span data-ttu-id="e4de9-115">Cria uma instância de <see cref="T:System.Net.WebRequest" /> para o URI especificado.</span><span class="sxs-lookup"><span data-stu-id="e4de9-115">Creates a <see cref="T:System.Net.WebRequest" /> instance for the specified URI.</span></span></summary>
        <returns><span data-ttu-id="e4de9-116">A instância <see cref="T:System.Net.WebRequest" />.</span><span class="sxs-lookup"><span data-stu-id="e4de9-116">The <see cref="T:System.Net.WebRequest" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4de9-117">Esse método substitui a versão base do <xref:System.Web.Services.Protocols.WebClientProtocol.GetWebRequest%2A> para especificar que a solicitação HTTP para o serviço Web XML é feita usando HTTP POST.</span><span class="sxs-lookup"><span data-stu-id="e4de9-117">This method overrides the base version of <xref:System.Web.Services.Protocols.WebClientProtocol.GetWebRequest%2A> to specify that the HTTP request to the XML Web service is made using HTTP-POST.</span></span> <span data-ttu-id="e4de9-118">Ao substituir esse método, você pode personalizar o <xref:System.Net.WebRequest> antes que a solicitação de serviço Web XML é feita do objeto.</span><span class="sxs-lookup"><span data-stu-id="e4de9-118">By overriding this method, you can customize the <xref:System.Net.WebRequest> object before the XML Web service request is made.</span></span> <span data-ttu-id="e4de9-119">Por exemplo, você pode adicionar um cabeçalho personalizado para a solicitação.</span><span class="sxs-lookup"><span data-stu-id="e4de9-119">For example, you can add a custom header to the request.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e4de9-120">O parâmetro <paramref name="uri" /> é nulo ou tem comprimento zero.</span><span class="sxs-lookup"><span data-stu-id="e4de9-120">The <paramref name="uri" /> parameter is null or has a length of zero.</span></span></exception>
        <altmember cref="M:System.Web.Services.Protocols.WebClientProtocol.GetWebRequest(System.Uri)" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
  </Members>
</Type>