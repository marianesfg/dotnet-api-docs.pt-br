<Type Name="HttpSimpleClientProtocol" FullName="System.Web.Services.Protocols.HttpSimpleClientProtocol">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ba2a15e866d0ac323f6ffa1f3130a66bc0bfe453" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52196914" /></Metadata><TypeSignature Language="C#" Value="public abstract class HttpSimpleClientProtocol : System.Web.Services.Protocols.HttpWebClientProtocol" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HttpSimpleClientProtocol extends System.Web.Services.Protocols.HttpWebClientProtocol" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.HttpSimpleClientProtocol" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HttpSimpleClientProtocol&#xA;Inherits HttpWebClientProtocol" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpSimpleClientProtocol abstract : System::Web::Services::Protocols::HttpWebClientProtocol" />
  <TypeSignature Language="F#" Value="type HttpSimpleClientProtocol = class&#xA;    inherit HttpWebClientProtocol" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Services.Protocols.HttpWebClientProtocol</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e03ea-101">Representa a classe base para a comunicação com um serviço Web XML usando as associações de protocolos HTTP-GET e HTTP-POST simples.</span><span class="sxs-lookup"><span data-stu-id="e03ea-101">Represents the base class for communicating with an XML Web service using the simple HTTP-GET and HTTP-POST protocols bindings.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e03ea-102">Essa classe especifica a maior parte da implementação para se comunicar com um serviço Web XML por HTTP usando codificadores para codificar os parâmetros e retornar valores para formatos comuns de MIME.</span><span class="sxs-lookup"><span data-stu-id="e03ea-102">This class specifies most of the implementation for communicating with an XML Web service over HTTP using encoders to encode the parameters and return values into common MIME formats.</span></span> <span data-ttu-id="e03ea-103">Esses codificadores derivam o <xref:System.Web.Services.Protocols.MimeFormatter> classe.</span><span class="sxs-lookup"><span data-stu-id="e03ea-103">These encoders derive from the <xref:System.Web.Services.Protocols.MimeFormatter> class.</span></span> <span data-ttu-id="e03ea-104">Por padrão, uma classe proxy derivada da <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol> codifica os parâmetros usando o tipo MIME de application/x-www-form-urlencoded e a resposta em XML sem formatação.</span><span class="sxs-lookup"><span data-stu-id="e03ea-104">By default, a proxy class deriving from <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol> encodes parameters using the application/x-www-form-urlencoded MIME type and the response in plain XML.</span></span> <span data-ttu-id="e03ea-105">Formatadores de mime personalizado podem ser especificados usando o <xref:System.Web.Services.Protocols.HttpMethodAttribute> atributo, no entanto, não há suporte para integrar isso em uma geração de proxy e a descrição do serviço.</span><span class="sxs-lookup"><span data-stu-id="e03ea-105">Custom mime formatters can be specified using the <xref:System.Web.Services.Protocols.HttpMethodAttribute> attribute, however, there is no support for integrating this into a service description and proxy generation.</span></span>  
  
 <span data-ttu-id="e03ea-106">`Notes to Inheritors:` Quando você substituir essa classe, você pode introduzir os métodos na classe derivada que são específicos para um tipo específico de um serviço Web XML.</span><span class="sxs-lookup"><span data-stu-id="e03ea-106">`Notes to Inheritors:` When you override this class, you can introduce methods in the derived class that are specific to a particular type of an XML Web service.</span></span> <span data-ttu-id="e03ea-107">Os métodos simplesmente capturam os parâmetros e chamar a classe base para fazer o trabalho de se comunicar com o site.</span><span class="sxs-lookup"><span data-stu-id="e03ea-107">The methods simply capture the parameters, and call the base class to do the work of communicating with the site.</span></span> <span data-ttu-id="e03ea-108">Se os métodos introduzidos são assíncronos, chame o <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A> e <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="e03ea-108">If the introduced methods are asynchronous, call the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A> and <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke%2A> methods.</span></span> <span data-ttu-id="e03ea-109">Se os métodos introduzidos são síncronos, chame o <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A> método.</span><span class="sxs-lookup"><span data-stu-id="e03ea-109">If the introduced methods are synchronous, call the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A> method.</span></span> <span data-ttu-id="e03ea-110">O construtor substituído normalmente define o <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> propriedade para o URI do método de serviço Web XML.</span><span class="sxs-lookup"><span data-stu-id="e03ea-110">The overridden constructor typically sets the <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> property to the URI of the XML Web service method.</span></span>  
  
 <span data-ttu-id="e03ea-111">A ferramenta Web Services Description Language (Wsdl.exe) gera classes derivadas de <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol> para obter uma descrição de serviço determinado.</span><span class="sxs-lookup"><span data-stu-id="e03ea-111">The Web Services Description Language tool (Wsdl.exe) generates derived classes of <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol> for a given Service Description.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e03ea-112">O exemplo de código a seguir é uma classe de proxy gerada pelo Wsdl.exe para o `Math` abaixo de serviço Web XML.</span><span class="sxs-lookup"><span data-stu-id="e03ea-112">The following code example is a proxy class generated by Wsdl.exe for the `Math` XML Web service below.</span></span> <span data-ttu-id="e03ea-113">A classe de proxy deriva <xref:System.Web.Services.Protocols.HttpGetClientProtocol>, que é derivada de abstrata <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol> classe.</span><span class="sxs-lookup"><span data-stu-id="e03ea-113">The proxy class derives from <xref:System.Web.Services.Protocols.HttpGetClientProtocol>, which derives from the abstract <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol> class.</span></span>  
  
 [!code-cpp[Classic HttpGetClientProtocol Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic HttpGetClientProtocol Example/CPP/source.cpp#1)]
 [!code-csharp[Classic HttpGetClientProtocol Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpGetClientProtocol Example/CS/source.cs#1)]
 [!code-vb[Classic HttpGetClientProtocol Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpGetClientProtocol Example/VB/source.vb#1)]  
  
 <span data-ttu-id="e03ea-114">O exemplo de código a seguir é o `Math` serviço Web XML, da qual a classe de proxy anterior foi criada.</span><span class="sxs-lookup"><span data-stu-id="e03ea-114">The following code example is the `Math` XML Web service, from which the preceding proxy class was created.</span></span>  
  
 [!code-cpp[Classic HttpSimpleClientProtocol Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol Example/CPP/source.cpp#1)]
 [!code-csharp[Classic HttpSimpleClientProtocol Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol Example/CS/source.cs#1)]
 [!code-vb[Classic HttpSimpleClientProtocol Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="e03ea-115">Este tipo é thread-safe.</span><span class="sxs-lookup"><span data-stu-id="e03ea-115">This type is thread safe.</span></span></threadsafe>
    <altmember cref="T:System.Web.Services.Protocols.SoapHttpClientProtocol" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HttpSimpleClientProtocol ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HttpSimpleClientProtocol();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e03ea-116">Inicializa uma nova instância da classe <see cref="T:System.Web.Services.Protocols.HttpSimpleClientProtocol" />.</span><span class="sxs-lookup"><span data-stu-id="e03ea-116">Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.HttpSimpleClientProtocol" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="protected IAsyncResult BeginInvoke (string methodName, string requestUrl, object[] parameters, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IAsyncResult BeginInvoke(string methodName, string requestUrl, object[] parameters, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function BeginInvoke (methodName As String, requestUrl As String, parameters As Object(), callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; IAsyncResult ^ BeginInvoke(System::String ^ methodName, System::String ^ requestUrl, cli::array &lt;System::Object ^&gt; ^ parameters, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="member this.BeginInvoke : string * string * obj[] * AsyncCallback * obj -&gt; IAsyncResult" Usage="httpSimpleClientProtocol.BeginInvoke (methodName, requestUrl, parameters, callback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="requestUrl" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="methodName"><span data-ttu-id="e03ea-117">O nome do método de serviço Web XML.</span><span class="sxs-lookup"><span data-stu-id="e03ea-117">The name of the XML Web service method.</span></span></param>
        <param name="requestUrl"><span data-ttu-id="e03ea-118">A URL a ser usada durante a criação do <see cref="T:System.Net.WebRequest" />.</span><span class="sxs-lookup"><span data-stu-id="e03ea-118">The URL to use when creating the <see cref="T:System.Net.WebRequest" />.</span></span></param>
        <param name="parameters"><span data-ttu-id="e03ea-119">Uma matriz de objetos que contém os parâmetros a serem passados para o método de serviço Web XML.</span><span class="sxs-lookup"><span data-stu-id="e03ea-119">An array of objects containing the parameters to pass to the XML Web service method.</span></span> <span data-ttu-id="e03ea-120">A ordem dos valores na matriz corresponde à ordem dos parâmetros no método de chamada da classe derivada.</span><span class="sxs-lookup"><span data-stu-id="e03ea-120">The order of the values in the array corresponds to the order of the parameters in the calling method of the derived class.</span></span></param>
        <param name="callback"><span data-ttu-id="e03ea-121">O delegado a ser chamado quando a chamada de método assíncrono é concluída.</span><span class="sxs-lookup"><span data-stu-id="e03ea-121">The delegate to call when the asynchronous method call is complete.</span></span> <span data-ttu-id="e03ea-122">Se <paramref name="callback" /> for <see langword="null" />, o delegado não será chamado.</span><span class="sxs-lookup"><span data-stu-id="e03ea-122">If <paramref name="callback" /> is <see langword="null" />, the delegate is not called.</span></span></param>
        <param name="asyncState"><span data-ttu-id="e03ea-123">As informações adicionais fornecidas por um cliente.</span><span class="sxs-lookup"><span data-stu-id="e03ea-123">The additional information supplied by a client.</span></span></param>
        <summary><span data-ttu-id="e03ea-124">Inicia uma invocação assíncrona de um método de um serviço Web XML.</span><span class="sxs-lookup"><span data-stu-id="e03ea-124">Starts an asynchronous invocation of a method of an XML Web service.</span></span></summary>
        <returns><span data-ttu-id="e03ea-125">Um <see cref="T:System.IAsyncResult" /> que pode ser passado para o método <see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)" /> para obter os valores retornados do método de serviço Web XML.</span><span class="sxs-lookup"><span data-stu-id="e03ea-125">An <see cref="T:System.IAsyncResult" /> that can be passed to the <see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)" /> method to obtain the return values from the XML Web service method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e03ea-126">O `methodName` parâmetro é usado para localizar os tipos dos parâmetros e valores de retorno de método que está invocando o <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A> método.</span><span class="sxs-lookup"><span data-stu-id="e03ea-126">The `methodName` parameter is used to find the types of the parameters and return values of the method that is invoking the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A> method.</span></span> <span data-ttu-id="e03ea-127">Ele também é usado para localizar os atributos personalizados que foram adicionados ao método.</span><span class="sxs-lookup"><span data-stu-id="e03ea-127">It is also used to find custom attributes that may have been added to the method.</span></span> <span data-ttu-id="e03ea-128"><xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>, <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute>, e <xref:System.Xml.Serialization.XmlElementAttribute> fornecem informações adicionais sobre o método derivado que é necessário para o protocolo HTTP.</span><span class="sxs-lookup"><span data-stu-id="e03ea-128"><xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>, <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute>, and <xref:System.Xml.Serialization.XmlElementAttribute> provide additional information on the derived method that is required for the HTTP protocol.</span></span>  
  
 <span data-ttu-id="e03ea-129">`asyncState` é passado para `callback` e está incluído na <xref:System.IAsyncResult> que é retornado do <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A> método.</span><span class="sxs-lookup"><span data-stu-id="e03ea-129">`asyncState` is passed into `callback` and is included in the <xref:System.IAsyncResult> that is returned from the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A> method.</span></span> <span data-ttu-id="e03ea-130">É útil para transmitir informações de contexto de chamada assíncrona para lidar com o resultado assíncrono em `callback`.</span><span class="sxs-lookup"><span data-stu-id="e03ea-130">It is useful for passing information from the context of the asynchronous call to the handling of the asynchronous result in `callback`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e03ea-131">O exemplo de código a seguir é um formulário da Web ASP.NET, que chama um serviço Web XML chamado `Math`.</span><span class="sxs-lookup"><span data-stu-id="e03ea-131">The following code example is an ASP.NET Web Form, which calls an XML Web service named `Math`.</span></span> <span data-ttu-id="e03ea-132">Dentro de `EnterBtn_Click` função, o formulário da Web é iniciada e concluída de uma invocação assíncrona do `Add` método de serviço Web XML.</span><span class="sxs-lookup"><span data-stu-id="e03ea-132">Within the `EnterBtn_Click` function, the Web Form starts and completes an asynchronous invocation of the `Add` XML Web service method.</span></span>  
  
 [!code-aspx-csharp[Classic HttpSimpleClientProtocol.EndInvoke Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HttpSimpleClientProtocol.EndInvoke Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/VB/sourcevb.aspx#1)]  
  
 <span data-ttu-id="e03ea-133">O exemplo de código a seguir é uma classe de proxy gerada pela ferramenta Web Services Description Language (Wsdl.exe) para o `Math` abaixo de serviço Web XML.</span><span class="sxs-lookup"><span data-stu-id="e03ea-133">The following code example is a proxy class generated by the Web Services Description Language tool (Wsdl.exe) for the `Math` XML Web service below.</span></span> <span data-ttu-id="e03ea-134">Dentro de `BeginAdd` método da classe de proxy, o <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> método inicia uma invocação assíncrona do `Add` método de serviço Web XML.</span><span class="sxs-lookup"><span data-stu-id="e03ea-134">Within the `BeginAdd` method of the proxy class, the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> method starts an asynchronous invocation of the `Add` XML Web service method.</span></span>  
  
 [!code-cpp[Classic HttpSimpleClientProtocol.EndInvoke Example#2](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/CPP/source.cpp#2)]
 [!code-csharp[Classic HttpSimpleClientProtocol.EndInvoke Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/CS/source.cs#2)]
 [!code-vb[Classic HttpSimpleClientProtocol.EndInvoke Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/VB/source.vb#2)]  
  
 <span data-ttu-id="e03ea-135">O exemplo de código a seguir é o `Math` serviço Web XML, da qual a classe de proxy anterior foi criada.</span><span class="sxs-lookup"><span data-stu-id="e03ea-135">The following code example is the `Math` XML Web service, from which the preceding proxy class was created.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="e03ea-136">A solicitação atingiu o computador do servidor, mas não foi processada com êxito.</span><span class="sxs-lookup"><span data-stu-id="e03ea-136">The request reached the server computer, but was not processed successfully.</span></span></exception>
        <altmember cref="T:System.IAsyncResult" />
      </Docs>
    </Member>
    <Member MemberName="EndInvoke">
      <MemberSignature Language="C#" Value="protected object EndInvoke (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object EndInvoke(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Function EndInvoke (asyncResult As IAsyncResult) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ EndInvoke(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndInvoke : IAsyncResult -&gt; obj" Usage="httpSimpleClientProtocol.EndInvoke asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="e03ea-137">O <see cref="T:System.IAsyncResult" /> retornado do método <see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="e03ea-137">The <see cref="T:System.IAsyncResult" /> returned from the <see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <summary><span data-ttu-id="e03ea-138">Conclui uma invocação assíncrona de um método de serviço Web XML usando HTTP.</span><span class="sxs-lookup"><span data-stu-id="e03ea-138">Completes asynchronous invocation of an XML Web service method using HTTP.</span></span></summary>
        <returns><span data-ttu-id="e03ea-139">Uma matriz de objetos que contém o valor retornado e qualquer por referência ou parâmetros <paramref name="out" /> para o método de serviço Web XML.</span><span class="sxs-lookup"><span data-stu-id="e03ea-139">An array of objects containing the return value and any by reference or <paramref name="out" /> parameters for the XML Web service method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e03ea-140">O exemplo de código a seguir é um formulário da Web ASP.NET, que chama um serviço Web XML chamado `Math`.</span><span class="sxs-lookup"><span data-stu-id="e03ea-140">The following code example is an ASP.NET Web Form, which calls an XML Web service named `Math`.</span></span> <span data-ttu-id="e03ea-141">Dentro de `EnterBtn_Click` função, o formulário da Web é iniciada e concluída de uma invocação assíncrona do `Add` método de serviço Web XML.</span><span class="sxs-lookup"><span data-stu-id="e03ea-141">Within the `EnterBtn_Click` function, the Web Form starts and completes an asynchronous invocation of the `Add` XML Web service method.</span></span>  
  
 [!code-aspx-csharp[Classic HttpSimpleClientProtocol.EndInvoke Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HttpSimpleClientProtocol.EndInvoke Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/VB/sourcevb.aspx#1)]  
  
 <span data-ttu-id="e03ea-142">O exemplo de código a seguir é uma classe de proxy gerada pela ferramenta Web Services Description Language (Wsdl.exe) para o `Math` abaixo de serviço Web XML.</span><span class="sxs-lookup"><span data-stu-id="e03ea-142">The following code example is a proxy class generated by the Web Services Description Language tool (Wsdl.exe) for the `Math` XML Web service below.</span></span> <span data-ttu-id="e03ea-143">Dentro de `EndAdd` método da classe de proxy, o <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A> método inicia uma invocação assíncrona do `Add` método de serviço Web XML.</span><span class="sxs-lookup"><span data-stu-id="e03ea-143">Within the `EndAdd` method of the proxy class, the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A> method starts an asynchronous invocation of the `Add` XML Web service method.</span></span>  
  
 [!code-cpp[Classic HttpSimpleClientProtocol.EndInvoke Example#2](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/CPP/source.cpp#2)]
 [!code-csharp[Classic HttpSimpleClientProtocol.EndInvoke Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/CS/source.cs#2)]
 [!code-vb[Classic HttpSimpleClientProtocol.EndInvoke Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/VB/source.vb#2)]  
  
 <span data-ttu-id="e03ea-144">O exemplo de código a seguir é o `Math` XML Web service, do qual a classe de proxy acima foi criada.</span><span class="sxs-lookup"><span data-stu-id="e03ea-144">The following code example is the `Math` XML Web service, from which the above proxy class was created.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e03ea-145"><paramref name="asyncResult" /> não é o valor retornado do método <see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="e03ea-145"><paramref name="asyncResult" /> is not the return value from the <see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)" /> method.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="protected object Invoke (string methodName, string requestUrl, object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object Invoke(string methodName, string requestUrl, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Protected Function Invoke (methodName As String, requestUrl As String, parameters As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ Invoke(System::String ^ methodName, System::String ^ requestUrl, cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.Invoke : string * string * obj[] -&gt; obj" Usage="httpSimpleClientProtocol.Invoke (methodName, requestUrl, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="requestUrl" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="methodName"><span data-ttu-id="e03ea-146">O nome do método de serviço Web XML na classe derivada que está invocando o método <see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])" />.</span><span class="sxs-lookup"><span data-stu-id="e03ea-146">The name of the XML Web service method in the derived class that is invoking the <see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])" /> method.</span></span></param>
        <param name="requestUrl"><span data-ttu-id="e03ea-147">A URL do método de serviço Web XML solicitada pelo cliente.</span><span class="sxs-lookup"><span data-stu-id="e03ea-147">The URL of the XML Web service method that the client is requesting.</span></span></param>
        <param name="parameters"><span data-ttu-id="e03ea-148">Uma matriz de objetos que contém os parâmetros a serem passados para o serviço Web XML remoto.</span><span class="sxs-lookup"><span data-stu-id="e03ea-148">An array of objects containing the parameters to pass to the remote XML Web service.</span></span> <span data-ttu-id="e03ea-149">A ordem dos valores na matriz corresponde à ordem dos parâmetros no método de chamada da classe derivada.</span><span class="sxs-lookup"><span data-stu-id="e03ea-149">The order of the values in the array corresponds to the order of the parameters in the calling method of the derived class.</span></span></param>
        <summary><span data-ttu-id="e03ea-150">Invoca um método de serviço Web XML usando HTTP.</span><span class="sxs-lookup"><span data-stu-id="e03ea-150">Invokes an XML Web service method using HTTP.</span></span></summary>
        <returns><span data-ttu-id="e03ea-151">Uma matriz de objetos que contém o valor retornado e os parâmetros <paramref name="out" /> e por referência do método da classe derivada.</span><span class="sxs-lookup"><span data-stu-id="e03ea-151">An array of objects containing the return value and any by-reference or <paramref name="out" /> parameters of the derived class method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e03ea-152">O `methodName` parâmetro é usado para localizar os tipos dos parâmetros e valores de retorno de método que está invocando o <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A> método.</span><span class="sxs-lookup"><span data-stu-id="e03ea-152">The `methodName` parameter is used to find the types of the parameters and return values of the method that is invoking the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A> method.</span></span> <span data-ttu-id="e03ea-153">Ele também é usado para localizar os atributos personalizados que podem ter sido adicionados ao método.</span><span class="sxs-lookup"><span data-stu-id="e03ea-153">It is also used to find custom attributes which may have been added to the method.</span></span> <span data-ttu-id="e03ea-154"><xref:System.Web.Services.Protocols.HttpMethodAttribute> e <xref:System.Xml.Serialization.XmlElementAttribute> fornecem informações adicionais sobre o método derivado que é necessário para o protocolo SOAP.</span><span class="sxs-lookup"><span data-stu-id="e03ea-154"><xref:System.Web.Services.Protocols.HttpMethodAttribute> and <xref:System.Xml.Serialization.XmlElementAttribute> provide additional information on the derived method that is required for the SOAP protocol.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e03ea-155">O exemplo de código a seguir é um formulário da Web ASP.NET, que chama um serviço Web XML chamado `Math`.</span><span class="sxs-lookup"><span data-stu-id="e03ea-155">The following code example is an ASP.NET Web Form, which calls an XML Web service named `Math`.</span></span> <span data-ttu-id="e03ea-156">Dentro de `EnterBtn_Click` função, o formulário da Web invoca forma síncrona o `Add` método de serviço Web XML.</span><span class="sxs-lookup"><span data-stu-id="e03ea-156">Within the `EnterBtn_Click` function, the Web Form synchronously invokes the `Add` XML Web service method.</span></span>  
  
 [!code-csharp[HttpSimpleClientProtocol.Invoke Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpSimpleClientProtocol.Invoke Example/CS/sourcecs.aspx#2)]
 [!code-vb[HttpSimpleClientProtocol.Invoke Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpSimpleClientProtocol.Invoke Example/VB/sourcevb.aspx#2)]  
  
 <span data-ttu-id="e03ea-157">O exemplo de código a seguir é uma classe de proxy gerada pela ferramenta Web Services Description Language (Wsdl.exe) para o `Math` abaixo de serviço Web XML.</span><span class="sxs-lookup"><span data-stu-id="e03ea-157">The following code example is a proxy class generated by the Web Services Description Language tool (Wsdl.exe) for the `Math` XML Web service below.</span></span> <span data-ttu-id="e03ea-158">Dentro do `Add` método da classe de proxy, o <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A> método invoca forma síncrona o `Add` método de serviço Web.</span><span class="sxs-lookup"><span data-stu-id="e03ea-158">Within the `Add` method of the proxy class, the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A> method synchronously invokes the `Add` Web Service method.</span></span>  
  
 [!code-cpp[HttpSimpleClientProtocol.Invoke Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpSimpleClientProtocol.Invoke Example/CPP/source.cpp#1)]
 [!code-csharp[HttpSimpleClientProtocol.Invoke Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpSimpleClientProtocol.Invoke Example/CS/source.cs#1)]
 [!code-vb[HttpSimpleClientProtocol.Invoke Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpSimpleClientProtocol.Invoke Example/VB/source.vb#1)]  
  
 <span data-ttu-id="e03ea-159">O exemplo de código a seguir é o `Math` XML Web service, do qual a classe de proxy acima foi criada.</span><span class="sxs-lookup"><span data-stu-id="e03ea-159">The following code example is the `Math` XML Web service, from which the above proxy class was created.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="e03ea-160">A solicitação atingiu o computador do servidor, mas não foi processada com êxito.</span><span class="sxs-lookup"><span data-stu-id="e03ea-160">The request reached the server computer, but was not processed successfully.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="InvokeAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e03ea-161">Chama o método especificado de forma assíncrona.</span><span class="sxs-lookup"><span data-stu-id="e03ea-161">Invokes the specified method asynchronously.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InvokeAsync">
      <MemberSignature Language="C#" Value="protected void InvokeAsync (string methodName, string requestUrl, object[] parameters, System.Threading.SendOrPostCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InvokeAsync(string methodName, string requestUrl, object[] parameters, class System.Threading.SendOrPostCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InvokeAsync (methodName As String, requestUrl As String, parameters As Object(), callback As SendOrPostCallback)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InvokeAsync(System::String ^ methodName, System::String ^ requestUrl, cli::array &lt;System::Object ^&gt; ^ parameters, System::Threading::SendOrPostCallback ^ callback);" />
      <MemberSignature Language="F#" Value="member this.InvokeAsync : string * string * obj[] * System.Threading.SendOrPostCallback -&gt; unit" Usage="httpSimpleClientProtocol.InvokeAsync (methodName, requestUrl, parameters, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="requestUrl" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]" />
        <Parameter Name="callback" Type="System.Threading.SendOrPostCallback" />
      </Parameters>
      <Docs>
        <param name="methodName"><span data-ttu-id="e03ea-162">O nome do método que será invocado.</span><span class="sxs-lookup"><span data-stu-id="e03ea-162">The name of the method to invoke.</span></span></param>
        <param name="requestUrl"><span data-ttu-id="e03ea-163">A URL de solicitação do serviço Web invocado.</span><span class="sxs-lookup"><span data-stu-id="e03ea-163">The request URL of the invoked web service.</span></span></param>
        <param name="parameters"><span data-ttu-id="e03ea-164">Os parâmetros que serão passados para o método.</span><span class="sxs-lookup"><span data-stu-id="e03ea-164">The parameters to pass to the method.</span></span></param>
        <param name="callback"><span data-ttu-id="e03ea-165">O delegado é chamado quando a chamada do método é concluída.</span><span class="sxs-lookup"><span data-stu-id="e03ea-165">The delegate called when the method invocation has completed.</span></span></param>
        <summary><span data-ttu-id="e03ea-166">Chama o método especificado de forma assíncrona.</span><span class="sxs-lookup"><span data-stu-id="e03ea-166">Invokes the specified method asynchronously.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAsync">
      <MemberSignature Language="C#" Value="protected void InvokeAsync (string methodName, string requestUrl, object[] parameters, System.Threading.SendOrPostCallback callback, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InvokeAsync(string methodName, string requestUrl, object[] parameters, class System.Threading.SendOrPostCallback callback, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InvokeAsync (methodName As String, requestUrl As String, parameters As Object(), callback As SendOrPostCallback, userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InvokeAsync(System::String ^ methodName, System::String ^ requestUrl, cli::array &lt;System::Object ^&gt; ^ parameters, System::Threading::SendOrPostCallback ^ callback, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.InvokeAsync : string * string * obj[] * System.Threading.SendOrPostCallback * obj -&gt; unit" Usage="httpSimpleClientProtocol.InvokeAsync (methodName, requestUrl, parameters, callback, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="requestUrl" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]" />
        <Parameter Name="callback" Type="System.Threading.SendOrPostCallback" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="methodName"><span data-ttu-id="e03ea-167">O nome do método que será invocado.</span><span class="sxs-lookup"><span data-stu-id="e03ea-167">The name of the method to invoke.</span></span></param>
        <param name="requestUrl"><span data-ttu-id="e03ea-168">A URL de solicitação do serviço Web invocado.</span><span class="sxs-lookup"><span data-stu-id="e03ea-168">The request URL of the invoked web service.</span></span></param>
        <param name="parameters"><span data-ttu-id="e03ea-169">Os parâmetros que serão passados para o método.</span><span class="sxs-lookup"><span data-stu-id="e03ea-169">The parameters to pass to the method.</span></span></param>
        <param name="callback"><span data-ttu-id="e03ea-170">O delegado é chamado quando a chamada do método é concluída.</span><span class="sxs-lookup"><span data-stu-id="e03ea-170">The delegate called when the method invocation has completed.</span></span></param>
        <param name="userState"><span data-ttu-id="e03ea-171">Um objeto que contém informações de estado associadas passadas para o delegado de <paramref name="callback" /> quando o método é concluído.</span><span class="sxs-lookup"><span data-stu-id="e03ea-171">An object containing associated state information that is passed to the <paramref name="callback" /> delegate when the method has completed.</span></span></param>
        <summary><span data-ttu-id="e03ea-172">Invoca o método especificado de maneira assíncrona enquanto mantém um estado associado.</span><span class="sxs-lookup"><span data-stu-id="e03ea-172">Invokes the specified method asynchronously while maintaining an associated state.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>