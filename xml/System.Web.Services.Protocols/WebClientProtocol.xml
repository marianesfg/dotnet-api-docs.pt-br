<Type Name="WebClientProtocol" FullName="System.Web.Services.Protocols.WebClientProtocol">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8d0096aac1d67837894c989bc1b784b78c424b94" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51918602" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class WebClientProtocol : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract WebClientProtocol extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.WebClientProtocol" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WebClientProtocol&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebClientProtocol abstract : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type WebClientProtocol = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Especifica a classe base para todos os proxies de cliente do serviço Web XML criados usando ASP.NET.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 As propriedades do <xref:System.Web.Services.Protocols.WebClientProtocol> classe são usados para controlar o comportamento de transporte usado para transmitir a solicitação de serviço Web XML e a resposta. As propriedades nessa classe são mapeadas para propriedades encontradas nos <xref:System.Net.WebRequest>. Instâncias de classes derivadas de <xref:System.Net.WebRequest>, tais como <xref:System.Net.HttpWebRequest>, são usados como o mecanismo de transporte para serviços Web XML criados usando ASP.NET.  
  
 Para se comunicar com um serviço Web XML, você deve criar uma classe de proxy que deriva indiretamente ou diretamente <xref:System.Web.Services.Protocols.WebClientProtocol> para o serviço Web XML que você deseja chamar. Em vez de criar a classe de proxy manualmente, você pode usar a ferramenta Wsdl.exe para criar uma classe de proxy para a descrição do serviço de um determinado do XML Web Services. Uma vez que <xref:System.Web.Services.Protocols.WebClientProtocol> é a classe base para o proxy de cliente, você encontrará suas propriedades em suas classes de proxy. Essas propriedades são úteis para controlar o comportamento da solicitação de transporte subjacente. Por exemplo, use o <xref:System.Web.Services.Protocols.WebClientProtocol.Credentials%2A> autenticado de propriedade para chamar serviços Web XML. Muitas da <xref:System.Web.Services.Protocols.WebClientProtocol> propriedades são usadas para inicializar o <xref:System.Net.WebRequest> objeto que é usado para fazer a solicitação da Web.  
  
   
  
## Examples  
 O exemplo a seguir é um formulário da Web ASP.NET, que chama um serviço Web XML chamado `Math`. Dentro de `EnterBtn_Click` função, o formulário da Web define proxy credenciais de cliente e informações sobre a classe de proxy antes de chamar o método de serviço Web XML remoto.  
  
> [!IMPORTANT]
>  Este exemplo tem uma caixa de texto que aceita entrada do usuário, que é uma potencial ameaça de segurança. Por padrão, as páginas da Web do ASP.NET validam que a entrada do usuário não inclui elementos HTML ou script. Para obter mais informações, consulte [Visão geral de explorações de script](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[Classic WebClientProtocol Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic WebClientProtocol Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebClientProtocol Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic WebClientProtocol Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>As propriedades nessa classe são copiadas para uma nova instância de um <see cref="T:System.Net.WebRequest" /> objeto para cada chamada de método de serviço Web XML. Embora você possa chamar métodos de serviço Web XML no mesmo <see cref="T:System.Web.Services.Protocols.WebClientProtocol" /> instância de diversos threads ao mesmo tempo, não há nenhuma sincronização feita para garantir que um instantâneo consistente das propriedades será obter transferido para o <see cref="T:System.Net.WebRequest" /> objeto. Portanto se você precisar modificar as propriedades e fazer chamadas de método simultâneas de diferentes threads, você deve usar uma instância diferente do XML Web proxy de serviço ou fornecem sua própria sincronização.</threadsafe>
    <altmember cref="T:System.Web.Services.Protocols.SoapHttpClientProtocol" />
    <altmember cref="T:System.Net.HttpWebRequest" />
    <related type="Article" href="https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07">Visão geral de explorações de script</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebClientProtocol ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.WebClientProtocol.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WebClientProtocol();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Services.Protocols.WebClientProtocol" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[System.Web.Services.Protocols.WebClientProtocol constructor#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Web.Services.Protocols.WebClientProtocol constructor/CPP/class1.cpp#1)]
 [!code-csharp[System.Web.Services.Protocols.WebClientProtocol constructor#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Web.Services.Protocols.WebClientProtocol constructor/CS/class1.cs#1)]
 [!code-vb[System.Web.Services.Protocols.WebClientProtocol constructor#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Web.Services.Protocols.WebClientProtocol constructor/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Services.Protocols.SoapHttpClientProtocol" />
        <altmember cref="T:System.Net.HttpWebRequest" />
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public virtual void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.WebClientProtocol.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Abort();" />
      <MemberSignature Language="F#" Value="abstract member Abort : unit -&gt; unit&#xA;override this.Abort : unit -&gt; unit" Usage="webClientProtocol.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cancela uma solicitação para um método de serviço Web XML.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.Services.Protocols.WebClientProtocol.GetWebRequest(System.Uri)" />
        <altmember cref="M:System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="M:System.Net.WebRequest.Abort" />
        <altmember cref="T:System.Web.Services.Protocols.WebClientAsyncResult" />
      </Docs>
    </Member>
    <Member MemberName="AddToCache">
      <MemberSignature Language="C#" Value="protected static void AddToCache (Type type, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig void AddToCache(class System.Type type, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.WebClientProtocol.AddToCache(System.Type,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static void AddToCache(Type ^ type, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member AddToCache : Type * obj -&gt; unit" Usage="System.Web.Services.Protocols.WebClientProtocol.AddToCache (type, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="type">O <see cref="T:System.Type" /> do manipulador de protocolo de cliente.</param>
        <param name="value">O manipulador de protocolo de cliente a ser adicionado ao cache.</param>
        <summary>Adicionar uma instância do manipulador de protocolo de cliente ao cache.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionGroupName">
      <MemberSignature Language="C#" Value="public string ConnectionGroupName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionGroupName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName" />
      <MemberSignature Language="VB.NET" Value="Public Property ConnectionGroupName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConnectionGroupName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionGroupName : string with get, set" Usage="System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o nome do grupo de conexões para a solicitação.</summary>
        <value>O nome do grupo de conexões. O padrão é <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName%2A> propriedade permite que você associe uma solicitação para um grupo de conexão. Para obter mais detalhes, consulte <xref:System.Net.HttpWebRequest.ConnectionGroupName%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.WebRequest.ConnectionGroupName" />
        <altmember cref="P:System.Net.HttpWebRequest.ConnectionGroupName" />
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public System.Net.ICredentials Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.WebClientProtocol.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Property Credentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ICredentials ^ Credentials { System::Net::ICredentials ^ get(); void set(System::Net::ICredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Net.ICredentials with get, set" Usage="System.Web.Services.Protocols.WebClientProtocol.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define as credenciais de segurança para a autenticação de cliente do serviço Web XML.</summary>
        <value>O <see cref="T:System.Net.ICredentials" /> do cliente do serviço Web XML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ao usar o `Credentials` propriedade, um cliente de serviço Web XML deve instanciar uma classe que implementa <xref:System.Net.ICredentials>, como <xref:System.Net.NetworkCredential>e, em seguida, defina o cliente credenciais específicas para o mecanismo de autenticação. O <xref:System.Net.NetworkCredential> classe pode ser usada para definir as credenciais de autenticação usando o básico, digest, NTLM e Kerberos mecanismos de autenticação.  
  
 Quando o <xref:System.Web.Services.Protocols.WebClientProtocol.Credentials%2A> estiver definida como <xref:System.Net.CredentialCache.DefaultCredentials%2A?displayProperty=nameWithType> e em seguida, o cliente negocia com o servidor para fazer a autenticação Kerberos e/ou NTLM, dependendo de como o servidor está configurado.  
  
   
  
## Examples  
 O exemplo a seguir é um formulário da Web ASP.NET, que chama um serviço Web XML chamado `Math`. Dentro de `EnterBtn_Click` função, o formulário da Web define explicitamente as credenciais de autenticação usando o `Credentials` propriedade. O nome de usuário, senha e domínio são passados para o construtor para o <xref:System.Net.NetworkCredential> classe.  
  
> [!IMPORTANT]
>  Este exemplo tem uma caixa de texto que aceita entrada do usuário, que é uma potencial ameaça de segurança. Por padrão, as páginas da Web do ASP.NET validam que a entrada do usuário não inclui elementos HTML ou script. Para obter mais informações, consulte.  
  
 [!code-aspx-csharp[Classic WebClientProtocol.Credentials Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic WebClientProtocol.Credentials Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebClientProtocol.Credentials Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic WebClientProtocol.Credentials Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <related type="Article" href="https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07">Visão geral de explorações de script</related>
      </Docs>
    </Member>
    <Member MemberName="GetFromCache">
      <MemberSignature Language="C#" Value="protected static object GetFromCache (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig object GetFromCache(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.WebClientProtocol.GetFromCache(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::Object ^ GetFromCache(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetFromCache : Type -&gt; obj" Usage="System.Web.Services.Protocols.WebClientProtocol.GetFromCache type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">O <see cref="T:System.Type" /> do manipulador de protocolo de cliente a ser retornado do cache.</param>
        <summary>Obtém uma instância de um manipulador de protocolo de cliente do cache.</summary>
        <returns>Uma instância de um manipulador de protocolo de cliente do cache.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="GetWebRequest">
      <MemberSignature Language="C#" Value="protected virtual System.Net.WebRequest GetWebRequest (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Net.WebRequest GetWebRequest(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.WebClientProtocol.GetWebRequest(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Net::WebRequest ^ GetWebRequest(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="abstract member GetWebRequest : Uri -&gt; System.Net.WebRequest&#xA;override this.GetWebRequest : Uri -&gt; System.Net.WebRequest" Usage="webClientProtocol.GetWebRequest uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">O <see cref="T:System.Uri" /> a ser usado durante a criação do <see cref="T:System.Net.WebRequest" />.</param>
        <summary>Cria uma instância <see cref="T:System.Net.WebRequest" /> para o <paramref name="uri" /> especificado. Esse método protegido é chamado pela infraestrutura de cliente de serviço Web XML para obter um novo objeto de transporte <see cref="T:System.Net.WebRequest" /> para transmitir a solicitação de serviço Web XML.</summary>
        <returns>A instância <see cref="T:System.Net.WebRequest" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método pode ser substituído para personalizar o <xref:System.Net.WebRequest> antes que a solicitação de serviço Web XML é feita do objeto. Por exemplo, você poderia adicionar um cabeçalho personalizado para a solicitação.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">O parâmetro <paramref name="uri" /> é <see langword="null" />.</exception>
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="M:System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)" />
        <altmember cref="T:System.Net.HttpWebRequest" />
        <altmember cref="T:System.Web.Services.Protocols.SoapHttpClientProtocol" />
        <altmember cref="M:System.Web.Services.Protocols.WebClientProtocol.Abort" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetWebResponse">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Retorna uma resposta de uma solicitação para um método de serviço Web XML. Este método protegido é chamado pela infraestrutura do cliente de serviço Web XML para obter a resposta de uma solicitação de serviço Web XML síncrona.</summary>
        <altmember cref="M:System.Web.Services.Protocols.WebClientProtocol.GetWebRequest(System.Uri)" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="M:System.Web.Services.Protocols.WebClientProtocol.Abort" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetWebResponse">
      <MemberSignature Language="C#" Value="protected virtual System.Net.WebResponse GetWebResponse (System.Net.WebRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Net.WebResponse GetWebResponse(class System.Net.WebRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetWebResponse (request As WebRequest) As WebResponse" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Net::WebResponse ^ GetWebResponse(System::Net::WebRequest ^ request);" />
      <MemberSignature Language="F#" Value="abstract member GetWebResponse : System.Net.WebRequest -&gt; System.Net.WebResponse&#xA;override this.GetWebResponse : System.Net.WebRequest -&gt; System.Net.WebResponse" Usage="webClientProtocol.GetWebResponse request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.WebRequest" />
      </Parameters>
      <Docs>
        <param name="request">A <see cref="T:System.Net.WebRequest" /> da qual a resposta será obtida.</param>
        <summary>Retorna uma resposta de uma solicitação síncrona para um método de serviço Web XML.</summary>
        <returns>Uma resposta de uma solicitação síncrona para um método de serviço Web XML.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Net.WebException">Se <see cref="M:System.Web.Services.Protocols.WebClientProtocol.Abort" /> for invocado antes de chamar <see cref="M:System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)" />.</exception>
        <altmember cref="M:System.Web.Services.Protocols.WebClientProtocol.GetWebRequest(System.Uri)" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="M:System.Web.Services.Protocols.WebClientProtocol.Abort" />
      </Docs>
    </Member>
    <Member MemberName="GetWebResponse">
      <MemberSignature Language="C#" Value="protected virtual System.Net.WebResponse GetWebResponse (System.Net.WebRequest request, IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Net.WebResponse GetWebResponse(class System.Net.WebRequest request, class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetWebResponse (request As WebRequest, result As IAsyncResult) As WebResponse" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Net::WebResponse ^ GetWebResponse(System::Net::WebRequest ^ request, IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member GetWebResponse : System.Net.WebRequest * IAsyncResult -&gt; System.Net.WebResponse&#xA;override this.GetWebResponse : System.Net.WebRequest * IAsyncResult -&gt; System.Net.WebResponse" Usage="webClientProtocol.GetWebResponse (request, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.WebRequest" />
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="request">A <see cref="T:System.Net.WebRequest" /> da qual a resposta será obtida.</param>
        <param name="result">O <see cref="T:System.IAsyncResult" /> a ser passado para <see cref="M:System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)" /> quando a resposta é concluída.</param>
        <summary>Retorna uma resposta de uma solicitação assíncrona para um método de serviço Web XML. Este método protegido é chamado pela infraestrutura do cliente de serviço Web XML para obter a resposta de uma solicitação de serviço Web XML assíncrona.</summary>
        <returns>Uma resposta de uma solicitação assíncrona a um método de serviço Web XML.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Net.WebException">Se <see cref="M:System.Web.Services.Protocols.WebClientProtocol.Abort" /> for invocado antes de chamar <see cref="M:System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)" />.</exception>
        <altmember cref="M:System.Web.Services.Protocols.WebClientProtocol.GetWebRequest(System.Uri)" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="M:System.Web.Services.Protocols.WebClientProtocol.Abort" />
      </Docs>
    </Member>
    <Member MemberName="PreAuthenticate">
      <MemberSignature Language="C#" Value="public bool PreAuthenticate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreAuthenticate" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate" />
      <MemberSignature Language="VB.NET" Value="Public Property PreAuthenticate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PreAuthenticate { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PreAuthenticate : bool with get, set" Usage="System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define se a pré-autenticação está habilitada.</summary>
        <value>
          <see langword="true" /> para autenticar previamente a solicitação; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando um cliente solicita um recurso sem o uso de credenciais, o servidor desafia a solicitação e indica quais esquemas de autenticação que oferece suporte a ele. O cliente escolhe um esquema de autenticação e envia a apropriado `WWW-authenticate` cabeçalho para o servidor. Quando <xref:System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate%2A> está `true`, o `WWW-authenticate` cabeçalho é enviado com todas as solicitações subsequentes.  
  
 Quando <xref:System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate%2A> é `false`, é feita uma solicitação para o método de serviço Web XML sem inicialmente tentar autenticar o usuário. Se o serviço Web XML permite o acesso anônimo, o método de serviço Web XML é executado. Se o acesso anônimo não é permitido, um código de retorno HTTP 401 será enviada ao cliente. Em resposta, o <xref:System.Web.Services.Protocols.WebClientProtocol> classe retorna as credenciais de autenticação para o servidor Web. Se o cliente é autenticado e subsequentemente autorizado a acessar o serviço Web XML, o método de serviço Web XML é executado; Caso contrário, o cliente tem acesso negado.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.HttpWebRequest.PreAuthenticate" />
      </Docs>
    </Member>
    <Member MemberName="RequestEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding RequestEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding RequestEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.WebClientProtocol.RequestEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ RequestEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RequestEncoding : System.Text.Encoding with get, set" Usage="System.Web.Services.Protocols.WebClientProtocol.RequestEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>O <see cref="T:System.Text.Encoding" /> usado para fazer a solicitação do cliente para o serviço Web XML.</summary>
        <value>A codificação de caracteres da solicitação do cliente. O padrão é <see langword="null" />, que usa a codificação padrão para o transporte e protocolo subjacentes.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Services.Protocols.WebClientProtocol.RequestEncoding%2A> determina a codificação de mensagem de solicitação. O <xref:System.Net.WebRequest.ContentType%2A> da solicitação será anotado com o valor de codificação.  
  
 Classes derivadas de <xref:System.Web.Services.Protocols.WebClientProtocol> dão suporte a um determinado protocolo, como <xref:System.Web.Services.Protocols.SoapHttpClientProtocol> faz para SOAP, defina essa propriedade para atender aos requisitos de codificação para o protocolo específico. Por exemplo, o <xref:System.Web.Services.Protocols.SoapHttpClientProtocol> define a codificação UTF-8 padrão.  
  
   
  
## Examples  
 O exemplo a seguir é um formulário da Web ASP.NET, que chama um serviço Web XML chamado `Math`. Dentro de `EnterBtn_Click` função, o formulário da Web define explicitamente RequestEncoding como UTF-8.  
  
> [!IMPORTANT]
>  Este exemplo tem uma caixa de texto que aceita entrada do usuário, que é uma potencial ameaça de segurança. Por padrão, as páginas da Web do ASP.NET validam que a entrada do usuário não inclui elementos HTML ou script. Para obter mais informações, consulte [Visão geral de explorações de script](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[Classic WebClientProtocol.RequestEncoding Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic WebClientProtocol.RequestEncoding Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebClientProtocol.RequestEncoding Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic WebClientProtocol.RequestEncoding Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Encoding" />
        <altmember cref="P:System.Net.WebRequest.ContentType" />
        <altmember cref="T:System.Net.WebRequest" />
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public int Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.WebClientProtocol.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Property Timeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Timeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Timeout : int with get, set" Usage="System.Web.Services.Protocols.WebClientProtocol.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(100000)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indica o tempo que um cliente do serviço Web XML aguarda a resposta até que uma solicitação síncrona de serviço Web XML seja recebida (em milissegundos).</summary>
        <value>O tempo limite, em milissegundos, para chamadas síncronas para o serviço Web XML. O padrão é de 100.000 milissegundos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Definindo o <xref:System.Web.Services.Protocols.WebClientProtocol.Timeout%2A> propriedade para <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> indica que a solicitação não atinge o tempo limite. Mesmo que um cliente de serviço Web XML pode definir o <xref:System.Web.Services.Protocols.WebClientProtocol.Timeout%2A> propriedade não atinja o tempo limite, o servidor Web ainda pode causar a solicitação atinja o tempo limite no lado do servidor.  
  
   
  
## Examples  
 O exemplo a seguir define o `Timeout` valor a 15.000 (15 segundos) para a chamada síncrona para o `Add` método de serviço Web XML dentro a `Math` serviço Web XML.  
  
 [!code-cpp[Classic WebClientProtocol.Timeout Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic WebClientProtocol.Timeout Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebClientProtocol.Timeout Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic WebClientProtocol.Timeout Example/CS/source.cs#1)]
 [!code-vb[Classic WebClientProtocol.Timeout Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic WebClientProtocol.Timeout Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Encoding" />
        <altmember cref="P:System.Net.WebRequest.ContentType" />
        <altmember cref="T:System.Net.WebRequest" />
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public string Url { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Url" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.WebClientProtocol.Url" />
      <MemberSignature Language="VB.NET" Value="Public Property Url As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Url { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Url : string with get, set" Usage="System.Web.Services.Protocols.WebClientProtocol.Url" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a URL base do serviço Web XML que está sendo solicitada pelo cliente.</summary>
        <value>A URL base do serviço Web XML que o cliente está solicitando. O padrão é <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Classes de proxy geradas usando Wsdl.exe definirá um padrão <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> propriedade para o cliente a usar. O padrão <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> é determinado pelo atributo local encontrado na descrição do serviço do qual a classe de proxy foi gerada.  
  
 As classes que dão suporte a protocolos específicos, como derivadas <xref:System.Web.Services.Protocols.HttpGetClientProtocol> e <xref:System.Web.Services.Protocols.HttpPostClientProtocol> pode adicionar informações extras para <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> para fazer a solicitação de serviço Web XML.  
  
 O <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> propriedade pode ser alterada para se referir a qualquer serviço Web XML que implementa a mesma descrição de serviço que a classe de proxy foi gerada do.  
  
   
  
## Examples  
 A exemplo a seguir altera a <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> propriedade para o `math` serviço Web XML ao servidor Web denominado `http:// www.contoso.com`.  
  
 [!code-cpp[Classic WebClientProtocol.Url Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic WebClientProtocol.Url Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebClientProtocol.Url Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic WebClientProtocol.Url Example/CS/source.cs#1)]
 [!code-vb[Classic WebClientProtocol.Url Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic WebClientProtocol.Url Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Encoding" />
        <altmember cref="P:System.Net.WebRequest.ContentType" />
        <altmember cref="T:System.Net.WebRequest" />
      </Docs>
    </Member>
    <Member MemberName="UseDefaultCredentials">
      <MemberSignature Language="C#" Value="public bool UseDefaultCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.WebClientProtocol.UseDefaultCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Property UseDefaultCredentials As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseDefaultCredentials { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseDefaultCredentials : bool with get, set" Usage="System.Web.Services.Protocols.WebClientProtocol.UseDefaultCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se deseja definir a propriedade <see cref="P:System.Web.Services.Protocols.WebClientProtocol.Credentials" /> para o valor da propriedade <see cref="P:System.Net.CredentialCache.DefaultCredentials" />.</summary>
        <value>
          <see langword="true" /> Se a propriedade de credenciais é definida como o valor de <see cref="P:System.Net.CredentialCache.DefaultCredentials" /> propriedade; caso contrário, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Text.Encoding" />
        <altmember cref="P:System.Net.WebRequest.ContentType" />
        <altmember cref="T:System.Net.WebRequest" />
      </Docs>
    </Member>
  </Members>
</Type>